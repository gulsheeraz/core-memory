(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function e(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerPolicy&&(r.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?r.credentials="include":i.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(i){if(i.ep)return;i.ep=!0;const r=e(i);fetch(i.href,r)}})();/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const yA="171",ry=0,TP=1,wP=2,RS=1,AP=2,NS=100,PS=204,DS=205,IS=3,xA=0,vA=300,FS=1e3,qd=1001,OS=1002,pv=1006,EP=1008,CP=1009,RP=1015,Ug=1016,NP=1023,PP=0,bA="",Ts="srgb",LS="srgb-linear",BS="linear",kg="srgb",Cc=7680,US=519,kS=35044,_u=2e3,zS=2001;let _d=class{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;const i=this._listeners[t];if(i!==void 0){const r=i.indexOf(e);r!==-1&&i.splice(r,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const n=this._listeners[t.type];if(n!==void 0){t.target=this;const i=n.slice(0);for(let r=0,o=i.length;r<o;r++)i[r].call(this,t);t.target=null}}};const qn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];function yd(){const s=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(qn[s&255]+qn[s>>8&255]+qn[s>>16&255]+qn[s>>24&255]+"-"+qn[t&255]+qn[t>>8&255]+"-"+qn[t>>16&15|64]+qn[t>>24&255]+"-"+qn[e&63|128]+qn[e>>8&255]+"-"+qn[e>>16&255]+qn[e>>24&255]+qn[n&255]+qn[n>>8&255]+qn[n>>16&255]+qn[n>>24&255]).toLowerCase()}function fe(s,t,e){return Math.max(t,Math.min(e,s))}function DP(s,t){return(s%t+t)%t}function zg(s,t,e){return(1-e)*s+e*t}function zh(s,t){switch(t.constructor){case Float32Array:return s;case Uint32Array:return s/4294967295;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int32Array:return Math.max(s/2147483647,-1);case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function vi(s,t){switch(t.constructor){case Float32Array:return s;case Uint32Array:return Math.round(s*4294967295);case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int32Array:return Math.round(s*2147483647);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}let pe=class SA{constructor(t=0,e=0){SA.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=fe(this.x,t.x,e.x),this.y=fe(this.y,t.y,e.y),this}clampScalar(t,e){return this.x=fe(this.x,t,e),this.y=fe(this.y,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(fe(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(fe(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),r=this.x-t.x,o=this.y-t.y;return this.x=r*n-o*i+t.x,this.y=r*i+o*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}},gh=class MA{constructor(t,e,n,i,r,o,a,c,l){MA.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,e,n,i,r,o,a,c,l)}set(t,e,n,i,r,o,a,c,l){const h=this.elements;return h[0]=t,h[1]=i,h[2]=a,h[3]=e,h[4]=r,h[5]=c,h[6]=n,h[7]=o,h[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,o=n[0],a=n[3],c=n[6],l=n[1],h=n[4],u=n[7],d=n[2],f=n[5],p=n[8],_=i[0],g=i[3],m=i[6],x=i[1],v=i[4],y=i[7],b=i[2],S=i[5],M=i[8];return r[0]=o*_+a*x+c*b,r[3]=o*g+a*v+c*S,r[6]=o*m+a*y+c*M,r[1]=l*_+h*x+u*b,r[4]=l*g+h*v+u*S,r[7]=l*m+h*y+u*M,r[2]=d*_+f*x+p*b,r[5]=d*g+f*v+p*S,r[8]=d*m+f*y+p*M,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],o=t[4],a=t[5],c=t[6],l=t[7],h=t[8];return e*o*h-e*a*l-n*r*h+n*a*c+i*r*l-i*o*c}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],o=t[4],a=t[5],c=t[6],l=t[7],h=t[8],u=h*o-a*l,d=a*c-h*r,f=l*r-o*c,p=e*u+n*d+i*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const _=1/p;return t[0]=u*_,t[1]=(i*l-h*n)*_,t[2]=(a*n-i*o)*_,t[3]=d*_,t[4]=(h*e-i*c)*_,t[5]=(i*r-a*e)*_,t[6]=f*_,t[7]=(n*c-l*e)*_,t[8]=(o*e-n*r)*_,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,r,o,a){const c=Math.cos(r),l=Math.sin(r);return this.set(n*c,n*l,-n*(c*o+l*a)+o+t,-i*l,i*c,-i*(-l*o+c*a)+a+e,0,0,1),this}scale(t,e){return this.premultiply(Vg.makeScale(t,e)),this}rotate(t){return this.premultiply(Vg.makeRotation(-t)),this}translate(t,e){return this.premultiply(Vg.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,n,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<9;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return new this.constructor().fromArray(this.elements)}};const Vg=new gh;function IP(s){for(let t=s.length-1;t>=0;--t)if(s[t]>=65535)return!0;return!1}function VS(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}const GS=new gh().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),HS=new gh().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function FP(){const s={enabled:!0,workingColorSpace:LS,spaces:{},convert:function(i,r,o){return this.enabled===!1||r===o||!r||!o||(this.spaces[r].transfer===kg&&(i.r=Xr(i.r),i.g=Xr(i.g),i.b=Xr(i.b)),this.spaces[r].primaries!==this.spaces[o].primaries&&(i.applyMatrix3(this.spaces[r].toXYZ),i.applyMatrix3(this.spaces[o].fromXYZ)),this.spaces[o].transfer===kg&&(i.r=Il(i.r),i.g=Il(i.g),i.b=Il(i.b))),i},fromWorkingColorSpace:function(i,r){return this.convert(i,this.workingColorSpace,r)},toWorkingColorSpace:function(i,r){return this.convert(i,r,this.workingColorSpace)},getPrimaries:function(i){return this.spaces[i].primaries},getTransfer:function(i){return i===bA?BS:this.spaces[i].transfer},getLuminanceCoefficients:function(i,r=this.workingColorSpace){return i.fromArray(this.spaces[r].luminanceCoefficients)},define:function(i){Object.assign(this.spaces,i)},_getMatrix:function(i,r,o){return i.copy(this.spaces[r].toXYZ).multiply(this.spaces[o].fromXYZ)},_getDrawingBufferColorSpace:function(i){return this.spaces[i].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(i=this.workingColorSpace){return this.spaces[i].workingColorSpaceConfig.unpackColorSpace}},t=[.64,.33,.3,.6,.15,.06],e=[.2126,.7152,.0722],n=[.3127,.329];return s.define({[LS]:{primaries:t,whitePoint:n,transfer:BS,toXYZ:GS,fromXYZ:HS,luminanceCoefficients:e,workingColorSpaceConfig:{unpackColorSpace:Ts},outputColorSpaceConfig:{drawingBufferColorSpace:Ts}},[Ts]:{primaries:t,whitePoint:n,transfer:kg,toXYZ:GS,fromXYZ:HS,luminanceCoefficients:e,outputColorSpaceConfig:{drawingBufferColorSpace:Ts}}}),s}const ds=FP();function Xr(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function Il(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}let Rc,OP=class{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{Rc===void 0&&(Rc=VS("canvas")),Rc.width=t.width,Rc.height=t.height;const n=Rc.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=Rc}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=VS("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const i=n.getImageData(0,0,t.width,t.height),r=i.data;for(let o=0;o<r.length;o++)r[o]=Xr(r[o]/255)*255;return n.putImageData(i,0,0),e}else if(t.data){const e=t.data.slice(0);for(let n=0;n<e.length;n++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[n]=Math.floor(Xr(e[n]/255)*255):e[n]=Xr(e[n]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}},LP=0,TA=class{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:LP++}),this.uuid=yd(),this.data=t,this.dataReady=!0,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let r;if(Array.isArray(i)){r=[];for(let o=0,a=i.length;o<a;o++)i[o].isDataTexture?r.push(Gg(i[o].image)):r.push(Gg(i[o]))}else r=Gg(i);n.url=r}return e||(t.images[this.uuid]=n),n}};function Gg(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?OP.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let BP=0,xd=class Ep extends _d{constructor(t=Ep.DEFAULT_IMAGE,e=Ep.DEFAULT_MAPPING,n=qd,i=qd,r=pv,o=EP,a=NP,c=CP,l=Ep.DEFAULT_ANISOTROPY,h=bA){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:BP++}),this.uuid=yd(),this.name="",this.source=new TA(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=o,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=c,this.offset=new pe(0,0),this.repeat=new pe(1,1),this.center=new pe(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new gh,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==vA)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case FS:t.x=t.x-Math.floor(t.x);break;case qd:t.x=t.x<0?0:1;break;case OS:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case FS:t.y=t.y-Math.floor(t.y);break;case qd:t.y=t.y<0?0:1;break;case OS:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){t===!0&&this.pmremVersion++}};xd.DEFAULT_IMAGE=null;xd.DEFAULT_MAPPING=vA;xd.DEFAULT_ANISOTROPY=1;let ku=class wA{constructor(t=0,e=0,n=0,i=1){wA.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=this.w,o=t.elements;return this.x=o[0]*e+o[4]*n+o[8]*i+o[12]*r,this.y=o[1]*e+o[5]*n+o[9]*i+o[13]*r,this.z=o[2]*e+o[6]*n+o[10]*i+o[14]*r,this.w=o[3]*e+o[7]*n+o[11]*i+o[15]*r,this}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this.w/=t.w,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,r;const c=t.elements,l=c[0],h=c[4],u=c[8],d=c[1],f=c[5],p=c[9],_=c[2],g=c[6],m=c[10];if(Math.abs(h-d)<.01&&Math.abs(u-_)<.01&&Math.abs(p-g)<.01){if(Math.abs(h+d)<.1&&Math.abs(u+_)<.1&&Math.abs(p+g)<.1&&Math.abs(l+f+m-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const v=(l+1)/2,y=(f+1)/2,b=(m+1)/2,S=(h+d)/4,M=(u+_)/4,T=(p+g)/4;return v>y&&v>b?v<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(v),i=S/n,r=M/n):y>b?y<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(y),n=S/i,r=T/i):b<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(b),n=M/r,i=T/r),this.set(n,i,r,e),this}let x=Math.sqrt((g-p)*(g-p)+(u-_)*(u-_)+(d-h)*(d-h));return Math.abs(x)<.001&&(x=1),this.x=(g-p)/x,this.y=(u-_)/x,this.z=(d-h)/x,this.w=Math.acos((l+f+m-1)/2),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this.w=e[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=fe(this.x,t.x,e.x),this.y=fe(this.y,t.y,e.y),this.z=fe(this.z,t.z,e.z),this.w=fe(this.w,t.w,e.w),this}clampScalar(t,e){return this.x=fe(this.x,t,e),this.y=fe(this.y,t,e),this.z=fe(this.z,t,e),this.w=fe(this.w,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(fe(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}},UP=class extends _d{constructor(t=1,e=1,n={}){super(),this.isRenderTarget=!0,this.width=t,this.height=e,this.depth=1,this.scissor=new ku(0,0,t,e),this.scissorTest=!1,this.viewport=new ku(0,0,t,e);const i={width:t,height:e,depth:1};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:pv,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},n);const r=new xd(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);r.flipY=!1,r.generateMipmaps=n.generateMipmaps,r.internalFormat=n.internalFormat,this.textures=[];const o=n.count;for(let a=0;a<o;a++)this.textures[a]=r.clone(),this.textures[a].isRenderTargetTexture=!0;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}get texture(){return this.textures[0]}set texture(t){this.textures[0]=t}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let i=0,r=this.textures.length;i<r;i++)this.textures[i].image.width=t,this.textures[i].image.height=e,this.textures[i].image.depth=n;this.dispose()}this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.textures.length=0;for(let n=0,i=t.textures.length;n<i;n++)this.textures[n]=t.textures[n].clone(),this.textures[n].isRenderTargetTexture=!0;const e=Object.assign({},t.texture.image);return this.texture.source=new TA(e),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.resolveDepthBuffer=t.resolveDepthBuffer,this.resolveStencilBuffer=t.resolveStencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}},Hg=class extends UP{constructor(t=1,e=1,n={}){super(t,e,n),this.isWebGLRenderTarget=!0}},_h=class{constructor(t=0,e=0,n=0,i=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=i}static slerpFlat(t,e,n,i,r,o,a){let c=n[i+0],l=n[i+1],h=n[i+2],u=n[i+3];const d=r[o+0],f=r[o+1],p=r[o+2],_=r[o+3];if(a===0){t[e+0]=c,t[e+1]=l,t[e+2]=h,t[e+3]=u;return}if(a===1){t[e+0]=d,t[e+1]=f,t[e+2]=p,t[e+3]=_;return}if(u!==_||c!==d||l!==f||h!==p){let g=1-a;const m=c*d+l*f+h*p+u*_,x=m>=0?1:-1,v=1-m*m;if(v>Number.EPSILON){const b=Math.sqrt(v),S=Math.atan2(b,m*x);g=Math.sin(g*S)/b,a=Math.sin(a*S)/b}const y=a*x;if(c=c*g+d*y,l=l*g+f*y,h=h*g+p*y,u=u*g+_*y,g===1-a){const b=1/Math.sqrt(c*c+l*l+h*h+u*u);c*=b,l*=b,h*=b,u*=b}}t[e]=c,t[e+1]=l,t[e+2]=h,t[e+3]=u}static multiplyQuaternionsFlat(t,e,n,i,r,o){const a=n[i],c=n[i+1],l=n[i+2],h=n[i+3],u=r[o],d=r[o+1],f=r[o+2],p=r[o+3];return t[e]=a*p+h*u+c*f-l*d,t[e+1]=c*p+h*d+l*u-a*f,t[e+2]=l*p+h*f+a*d-c*u,t[e+3]=h*p-a*u-c*d-l*f,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const n=t._x,i=t._y,r=t._z,o=t._order,a=Math.cos,c=Math.sin,l=a(n/2),h=a(i/2),u=a(r/2),d=c(n/2),f=c(i/2),p=c(r/2);switch(o){case"XYZ":this._x=d*h*u+l*f*p,this._y=l*f*u-d*h*p,this._z=l*h*p+d*f*u,this._w=l*h*u-d*f*p;break;case"YXZ":this._x=d*h*u+l*f*p,this._y=l*f*u-d*h*p,this._z=l*h*p-d*f*u,this._w=l*h*u+d*f*p;break;case"ZXY":this._x=d*h*u-l*f*p,this._y=l*f*u+d*h*p,this._z=l*h*p+d*f*u,this._w=l*h*u-d*f*p;break;case"ZYX":this._x=d*h*u-l*f*p,this._y=l*f*u+d*h*p,this._z=l*h*p-d*f*u,this._w=l*h*u+d*f*p;break;case"YZX":this._x=d*h*u+l*f*p,this._y=l*f*u+d*h*p,this._z=l*h*p-d*f*u,this._w=l*h*u-d*f*p;break;case"XZY":this._x=d*h*u-l*f*p,this._y=l*f*u-d*h*p,this._z=l*h*p+d*f*u,this._w=l*h*u+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return e===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],r=e[8],o=e[1],a=e[5],c=e[9],l=e[2],h=e[6],u=e[10],d=n+a+u;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(h-c)*f,this._y=(r-l)*f,this._z=(o-i)*f}else if(n>a&&n>u){const f=2*Math.sqrt(1+n-a-u);this._w=(h-c)/f,this._x=.25*f,this._y=(i+o)/f,this._z=(r+l)/f}else if(a>u){const f=2*Math.sqrt(1+a-n-u);this._w=(r-l)/f,this._x=(i+o)/f,this._y=.25*f,this._z=(c+h)/f}else{const f=2*Math.sqrt(1+u-n-a);this._w=(o-i)/f,this._x=(r+l)/f,this._y=(c+h)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(fe(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(n===0)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,r=t._z,o=t._w,a=e._x,c=e._y,l=e._z,h=e._w;return this._x=n*h+o*a+i*l-r*c,this._y=i*h+o*c+r*a-n*l,this._z=r*h+o*l+n*c-i*a,this._w=o*h-n*a-i*c-r*l,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const n=this._x,i=this._y,r=this._z,o=this._w;let a=o*t._w+n*t._x+i*t._y+r*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=o,this._x=n,this._y=i,this._z=r,this;const c=1-a*a;if(c<=Number.EPSILON){const f=1-e;return this._w=f*o+e*this._w,this._x=f*n+e*this._x,this._y=f*i+e*this._y,this._z=f*r+e*this._z,this.normalize(),this}const l=Math.sqrt(c),h=Math.atan2(l,a),u=Math.sin((1-e)*h)/l,d=Math.sin(e*h)/l;return this._w=o*u+this._w*d,this._x=n*u+this._x*d,this._y=i*u+this._y*d,this._z=r*u+this._z*d,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),r=Math.sqrt(n);return this.set(i*Math.sin(t),i*Math.cos(t),r*Math.sin(e),r*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}},Q=class AA{constructor(t=0,e=0,n=0){AA.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return n===void 0&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion($S.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion($S.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6]*i,this.y=r[1]*e+r[4]*n+r[7]*i,this.z=r[2]*e+r[5]*n+r[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=t.elements,o=1/(r[3]*e+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*e+r[4]*n+r[8]*i+r[12])*o,this.y=(r[1]*e+r[5]*n+r[9]*i+r[13])*o,this.z=(r[2]*e+r[6]*n+r[10]*i+r[14])*o,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,r=t.x,o=t.y,a=t.z,c=t.w,l=2*(o*i-a*n),h=2*(a*e-r*i),u=2*(r*n-o*e);return this.x=e+c*l+o*u-a*h,this.y=n+c*h+a*l-r*u,this.z=i+c*u+r*h-o*l,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*i,this.y=r[1]*e+r[5]*n+r[9]*i,this.z=r[2]*e+r[6]*n+r[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=fe(this.x,t.x,e.x),this.y=fe(this.y,t.y,e.y),this.z=fe(this.z,t.z,e.z),this}clampScalar(t,e){return this.x=fe(this.x,t,e),this.y=fe(this.y,t,e),this.z=fe(this.z,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(fe(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,r=t.z,o=e.x,a=e.y,c=e.z;return this.x=i*c-r*a,this.y=r*o-n*c,this.z=n*a-i*o,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return $g.copy(this).projectOnVector(t),this.sub($g)}reflect(t){return this.sub($g.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(fe(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=Math.random()*2-1,n=Math.sqrt(1-e*e);return this.x=n*Math.cos(t),this.y=e,this.z=n*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}};const $g=new Q,$S=new _h;let yh=class{constructor(t=new Q(1/0,1/0,1/0),e=new Q(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e+=3)this.expandByPoint(fs.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,n=t.count;e<n;e++)this.expandByPoint(fs.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=fs.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(n!==void 0){const r=n.getAttribute("position");if(e===!0&&r!==void 0&&t.isInstancedMesh!==!0)for(let o=0,a=r.count;o<a;o++)t.isMesh===!0?t.getVertexPosition(o,fs):fs.fromBufferAttribute(r,o),fs.applyMatrix4(t.matrixWorld),this.expandByPoint(fs);else t.boundingBox!==void 0?(t.boundingBox===null&&t.computeBoundingBox(),jd.copy(t.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),jd.copy(n.boundingBox)),jd.applyMatrix4(t.matrixWorld),this.union(jd)}const i=t.children;for(let r=0,o=i.length;r<o;r++)this.expandByObject(i[r],e);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,fs),fs.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Vh),Xd.subVectors(this.max,Vh),Nc.subVectors(t.a,Vh),Pc.subVectors(t.b,Vh),Dc.subVectors(t.c,Vh),So.subVectors(Pc,Nc),Mo.subVectors(Dc,Pc),ba.subVectors(Nc,Dc);let e=[0,-So.z,So.y,0,-Mo.z,Mo.y,0,-ba.z,ba.y,So.z,0,-So.x,Mo.z,0,-Mo.x,ba.z,0,-ba.x,-So.y,So.x,0,-Mo.y,Mo.x,0,-ba.y,ba.x,0];return!Wg(e,Nc,Pc,Dc,Xd)||(e=[1,0,0,0,1,0,0,0,1],!Wg(e,Nc,Pc,Dc,Xd))?!1:(Yd.crossVectors(So,Mo),e=[Yd.x,Yd.y,Yd.z],Wg(e,Nc,Pc,Dc,Xd))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,fs).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(fs).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(pr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),pr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),pr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),pr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),pr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),pr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),pr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),pr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(pr),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}};const pr=[new Q,new Q,new Q,new Q,new Q,new Q,new Q,new Q],fs=new Q,jd=new yh,Nc=new Q,Pc=new Q,Dc=new Q,So=new Q,Mo=new Q,ba=new Q,Vh=new Q,Xd=new Q,Yd=new Q,Sa=new Q;function Wg(s,t,e,n,i){for(let r=0,o=s.length-3;r<=o;r+=3){Sa.fromArray(s,r);const a=i.x*Math.abs(Sa.x)+i.y*Math.abs(Sa.y)+i.z*Math.abs(Sa.z),c=t.dot(Sa),l=e.dot(Sa),h=n.dot(Sa);if(Math.max(-Math.max(c,l,h),Math.min(c,l,h))>a)return!1}return!0}const kP=new yh,Gh=new Q,qg=new Q;let mv=class{constructor(t=new Q,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;e!==void 0?n.copy(e):kP.setFromPoints(t).getCenter(n);let i=0;for(let r=0,o=t.length;r<o;r++)i=Math.max(i,n.distanceToSquared(t[r]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;Gh.subVectors(t,this.center);const e=Gh.lengthSq();if(e>this.radius*this.radius){const n=Math.sqrt(e),i=(n-this.radius)*.5;this.center.addScaledVector(Gh,i/n),this.radius+=i}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(qg.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(Gh.copy(t.center).add(qg)),this.expandByPoint(Gh.copy(t.center).sub(qg))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}};const mr=new Q,jg=new Q,Zd=new Q,To=new Q,Xg=new Q,Kd=new Q,Yg=new Q;let EA=class{constructor(t=new Q,e=new Q(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,mr)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=mr.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(mr.copy(this.origin).addScaledVector(this.direction,e),mr.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){jg.copy(t).add(e).multiplyScalar(.5),Zd.copy(e).sub(t).normalize(),To.copy(this.origin).sub(jg);const r=t.distanceTo(e)*.5,o=-this.direction.dot(Zd),a=To.dot(this.direction),c=-To.dot(Zd),l=To.lengthSq(),h=Math.abs(1-o*o);let u,d,f,p;if(h>0)if(u=o*c-a,d=o*a-c,p=r*h,u>=0)if(d>=-p)if(d<=p){const _=1/h;u*=_,d*=_,f=u*(u+o*d+2*a)+d*(o*u+d+2*c)+l}else d=r,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*c)+l;else d=-r,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*c)+l;else d<=-p?(u=Math.max(0,-(-o*r+a)),d=u>0?-r:Math.min(Math.max(-r,-c),r),f=-u*u+d*(d+2*c)+l):d<=p?(u=0,d=Math.min(Math.max(-r,-c),r),f=d*(d+2*c)+l):(u=Math.max(0,-(o*r+a)),d=u>0?r:Math.min(Math.max(-r,-c),r),f=-u*u+d*(d+2*c)+l);else d=o>0?-r:r,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*c)+l;return n&&n.copy(this.origin).addScaledVector(this.direction,u),i&&i.copy(jg).addScaledVector(Zd,d),f}intersectSphere(t,e){mr.subVectors(t.center,this.origin);const n=mr.dot(this.direction),i=mr.dot(mr)-n*n,r=t.radius*t.radius;if(i>r)return null;const o=Math.sqrt(r-i),a=n-o,c=n+o;return c<0?null:a<0?this.at(c,e):this.at(a,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return n===null?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,r,o,a,c;const l=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,d=this.origin;return l>=0?(n=(t.min.x-d.x)*l,i=(t.max.x-d.x)*l):(n=(t.max.x-d.x)*l,i=(t.min.x-d.x)*l),h>=0?(r=(t.min.y-d.y)*h,o=(t.max.y-d.y)*h):(r=(t.max.y-d.y)*h,o=(t.min.y-d.y)*h),n>o||r>i||((r>n||isNaN(n))&&(n=r),(o<i||isNaN(i))&&(i=o),u>=0?(a=(t.min.z-d.z)*u,c=(t.max.z-d.z)*u):(a=(t.max.z-d.z)*u,c=(t.min.z-d.z)*u),n>c||a>i)||((a>n||n!==n)&&(n=a),(c<i||i!==i)&&(i=c),i<0)?null:this.at(n>=0?n:i,e)}intersectsBox(t){return this.intersectBox(t,mr)!==null}intersectTriangle(t,e,n,i,r){Xg.subVectors(e,t),Kd.subVectors(n,t),Yg.crossVectors(Xg,Kd);let o=this.direction.dot(Yg),a;if(o>0){if(i)return null;a=1}else if(o<0)a=-1,o=-o;else return null;To.subVectors(this.origin,t);const c=a*this.direction.dot(Kd.crossVectors(To,Kd));if(c<0)return null;const l=a*this.direction.dot(Xg.cross(To));if(l<0||c+l>o)return null;const h=-a*To.dot(Yg);return h<0?null:this.at(h/o,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}},Ei=class oy{constructor(t,e,n,i,r,o,a,c,l,h,u,d,f,p,_,g){oy.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,e,n,i,r,o,a,c,l,h,u,d,f,p,_,g)}set(t,e,n,i,r,o,a,c,l,h,u,d,f,p,_,g){const m=this.elements;return m[0]=t,m[4]=e,m[8]=n,m[12]=i,m[1]=r,m[5]=o,m[9]=a,m[13]=c,m[2]=l,m[6]=h,m[10]=u,m[14]=d,m[3]=f,m[7]=p,m[11]=_,m[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new oy().fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/Ic.setFromMatrixColumn(t,0).length(),r=1/Ic.setFromMatrixColumn(t,1).length(),o=1/Ic.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*r,e[5]=n[5]*r,e[6]=n[6]*r,e[7]=0,e[8]=n[8]*o,e[9]=n[9]*o,e[10]=n[10]*o,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,i=t.y,r=t.z,o=Math.cos(n),a=Math.sin(n),c=Math.cos(i),l=Math.sin(i),h=Math.cos(r),u=Math.sin(r);if(t.order==="XYZ"){const d=o*h,f=o*u,p=a*h,_=a*u;e[0]=c*h,e[4]=-c*u,e[8]=l,e[1]=f+p*l,e[5]=d-_*l,e[9]=-a*c,e[2]=_-d*l,e[6]=p+f*l,e[10]=o*c}else if(t.order==="YXZ"){const d=c*h,f=c*u,p=l*h,_=l*u;e[0]=d+_*a,e[4]=p*a-f,e[8]=o*l,e[1]=o*u,e[5]=o*h,e[9]=-a,e[2]=f*a-p,e[6]=_+d*a,e[10]=o*c}else if(t.order==="ZXY"){const d=c*h,f=c*u,p=l*h,_=l*u;e[0]=d-_*a,e[4]=-o*u,e[8]=p+f*a,e[1]=f+p*a,e[5]=o*h,e[9]=_-d*a,e[2]=-o*l,e[6]=a,e[10]=o*c}else if(t.order==="ZYX"){const d=o*h,f=o*u,p=a*h,_=a*u;e[0]=c*h,e[4]=p*l-f,e[8]=d*l+_,e[1]=c*u,e[5]=_*l+d,e[9]=f*l-p,e[2]=-l,e[6]=a*c,e[10]=o*c}else if(t.order==="YZX"){const d=o*c,f=o*l,p=a*c,_=a*l;e[0]=c*h,e[4]=_-d*u,e[8]=p*u+f,e[1]=u,e[5]=o*h,e[9]=-a*h,e[2]=-l*h,e[6]=f*u+p,e[10]=d-_*u}else if(t.order==="XZY"){const d=o*c,f=o*l,p=a*c,_=a*l;e[0]=c*h,e[4]=-u,e[8]=l*h,e[1]=d*u+_,e[5]=o*h,e[9]=f*u-p,e[2]=p*u-f,e[6]=a*h,e[10]=_*u+d}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(zP,t,VP)}lookAt(t,e,n){const i=this.elements;return Oi.subVectors(t,e),Oi.lengthSq()===0&&(Oi.z=1),Oi.normalize(),wo.crossVectors(n,Oi),wo.lengthSq()===0&&(Math.abs(n.z)===1?Oi.x+=1e-4:Oi.z+=1e-4,Oi.normalize(),wo.crossVectors(n,Oi)),wo.normalize(),Qd.crossVectors(Oi,wo),i[0]=wo.x,i[4]=Qd.x,i[8]=Oi.x,i[1]=wo.y,i[5]=Qd.y,i[9]=Oi.y,i[2]=wo.z,i[6]=Qd.z,i[10]=Oi.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,o=n[0],a=n[4],c=n[8],l=n[12],h=n[1],u=n[5],d=n[9],f=n[13],p=n[2],_=n[6],g=n[10],m=n[14],x=n[3],v=n[7],y=n[11],b=n[15],S=i[0],M=i[4],T=i[8],A=i[12],w=i[1],E=i[5],N=i[9],I=i[13],P=i[2],D=i[6],O=i[10],k=i[14],z=i[3],Y=i[7],U=i[11],W=i[15];return r[0]=o*S+a*w+c*P+l*z,r[4]=o*M+a*E+c*D+l*Y,r[8]=o*T+a*N+c*O+l*U,r[12]=o*A+a*I+c*k+l*W,r[1]=h*S+u*w+d*P+f*z,r[5]=h*M+u*E+d*D+f*Y,r[9]=h*T+u*N+d*O+f*U,r[13]=h*A+u*I+d*k+f*W,r[2]=p*S+_*w+g*P+m*z,r[6]=p*M+_*E+g*D+m*Y,r[10]=p*T+_*N+g*O+m*U,r[14]=p*A+_*I+g*k+m*W,r[3]=x*S+v*w+y*P+b*z,r[7]=x*M+v*E+y*D+b*Y,r[11]=x*T+v*N+y*O+b*U,r[15]=x*A+v*I+y*k+b*W,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],r=t[12],o=t[1],a=t[5],c=t[9],l=t[13],h=t[2],u=t[6],d=t[10],f=t[14],p=t[3],_=t[7],g=t[11],m=t[15];return p*(+r*c*u-i*l*u-r*a*d+n*l*d+i*a*f-n*c*f)+_*(+e*c*f-e*l*d+r*o*d-i*o*f+i*l*h-r*c*h)+g*(+e*l*u-e*a*f-r*o*u+n*o*f+r*a*h-n*l*h)+m*(-i*a*h-e*c*u+e*a*d+i*o*u-n*o*d+n*c*h)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],o=t[4],a=t[5],c=t[6],l=t[7],h=t[8],u=t[9],d=t[10],f=t[11],p=t[12],_=t[13],g=t[14],m=t[15],x=u*g*l-_*d*l+_*c*f-a*g*f-u*c*m+a*d*m,v=p*d*l-h*g*l-p*c*f+o*g*f+h*c*m-o*d*m,y=h*_*l-p*u*l+p*a*f-o*_*f-h*a*m+o*u*m,b=p*u*c-h*_*c-p*a*d+o*_*d+h*a*g-o*u*g,S=e*x+n*v+i*y+r*b;if(S===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const M=1/S;return t[0]=x*M,t[1]=(_*d*r-u*g*r-_*i*f+n*g*f+u*i*m-n*d*m)*M,t[2]=(a*g*r-_*c*r+_*i*l-n*g*l-a*i*m+n*c*m)*M,t[3]=(u*c*r-a*d*r-u*i*l+n*d*l+a*i*f-n*c*f)*M,t[4]=v*M,t[5]=(h*g*r-p*d*r+p*i*f-e*g*f-h*i*m+e*d*m)*M,t[6]=(p*c*r-o*g*r-p*i*l+e*g*l+o*i*m-e*c*m)*M,t[7]=(o*d*r-h*c*r+h*i*l-e*d*l-o*i*f+e*c*f)*M,t[8]=y*M,t[9]=(p*u*r-h*_*r-p*n*f+e*_*f+h*n*m-e*u*m)*M,t[10]=(o*_*r-p*a*r+p*n*l-e*_*l-o*n*m+e*a*m)*M,t[11]=(h*a*r-o*u*r-h*n*l+e*u*l+o*n*f-e*a*f)*M,t[12]=b*M,t[13]=(h*_*i-p*u*i+p*n*d-e*_*d-h*n*g+e*u*g)*M,t[14]=(p*a*i-o*_*i-p*n*c+e*_*c+o*n*g-e*a*g)*M,t[15]=(o*u*i-h*a*i+h*n*c-e*u*c-o*n*d+e*a*d)*M,this}scale(t){const e=this.elements,n=t.x,i=t.y,r=t.z;return e[0]*=n,e[4]*=i,e[8]*=r,e[1]*=n,e[5]*=i,e[9]*=r,e[2]*=n,e[6]*=i,e[10]*=r,e[3]*=n,e[7]*=i,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),r=1-n,o=t.x,a=t.y,c=t.z,l=r*o,h=r*a;return this.set(l*o+n,l*a-i*c,l*c+i*a,0,l*a+i*c,h*a+n,h*c-i*o,0,l*c-i*a,h*c+i*o,r*c*c+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,i,r,o){return this.set(1,n,r,0,t,1,o,0,e,i,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,r=e._x,o=e._y,a=e._z,c=e._w,l=r+r,h=o+o,u=a+a,d=r*l,f=r*h,p=r*u,_=o*h,g=o*u,m=a*u,x=c*l,v=c*h,y=c*u,b=n.x,S=n.y,M=n.z;return i[0]=(1-(_+m))*b,i[1]=(f+y)*b,i[2]=(p-v)*b,i[3]=0,i[4]=(f-y)*S,i[5]=(1-(d+m))*S,i[6]=(g+x)*S,i[7]=0,i[8]=(p+v)*M,i[9]=(g-x)*M,i[10]=(1-(d+_))*M,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let r=Ic.set(i[0],i[1],i[2]).length();const o=Ic.set(i[4],i[5],i[6]).length(),a=Ic.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),t.x=i[12],t.y=i[13],t.z=i[14],ps.copy(this);const l=1/r,h=1/o,u=1/a;return ps.elements[0]*=l,ps.elements[1]*=l,ps.elements[2]*=l,ps.elements[4]*=h,ps.elements[5]*=h,ps.elements[6]*=h,ps.elements[8]*=u,ps.elements[9]*=u,ps.elements[10]*=u,e.setFromRotationMatrix(ps),n.x=r,n.y=o,n.z=a,this}makePerspective(t,e,n,i,r,o,a=_u){const c=this.elements,l=2*r/(e-t),h=2*r/(n-i),u=(e+t)/(e-t),d=(n+i)/(n-i);let f,p;if(a===_u)f=-(o+r)/(o-r),p=-2*o*r/(o-r);else if(a===zS)f=-o/(o-r),p=-o*r/(o-r);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return c[0]=l,c[4]=0,c[8]=u,c[12]=0,c[1]=0,c[5]=h,c[9]=d,c[13]=0,c[2]=0,c[6]=0,c[10]=f,c[14]=p,c[3]=0,c[7]=0,c[11]=-1,c[15]=0,this}makeOrthographic(t,e,n,i,r,o,a=_u){const c=this.elements,l=1/(e-t),h=1/(n-i),u=1/(o-r),d=(e+t)*l,f=(n+i)*h;let p,_;if(a===_u)p=(o+r)*u,_=-2*u;else if(a===zS)p=r*u,_=-1*u;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return c[0]=2*l,c[4]=0,c[8]=0,c[12]=-d,c[1]=0,c[5]=2*h,c[9]=0,c[13]=-f,c[2]=0,c[6]=0,c[10]=_,c[14]=-p,c[3]=0,c[7]=0,c[11]=0,c[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<16;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}};const Ic=new Q,ps=new Ei,zP=new Q(0,0,0),VP=new Q(1,1,1),wo=new Q,Qd=new Q,Oi=new Q,WS=new Ei,qS=new _h;let Ym=class CA{constructor(t=0,e=0,n=0,i=CA.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i=this._order){return this._x=t,this._y=e,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const i=t.elements,r=i[0],o=i[4],a=i[8],c=i[1],l=i[5],h=i[9],u=i[2],d=i[6],f=i[10];switch(e){case"XYZ":this._y=Math.asin(fe(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-h,f),this._z=Math.atan2(-o,r)):(this._x=Math.atan2(d,l),this._z=0);break;case"YXZ":this._x=Math.asin(-fe(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-u,r),this._z=0);break;case"ZXY":this._x=Math.asin(fe(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,f),this._z=Math.atan2(-o,l)):(this._y=0,this._z=Math.atan2(c,r));break;case"ZYX":this._y=Math.asin(-fe(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(c,r)):(this._x=0,this._z=Math.atan2(-o,l));break;case"YZX":this._z=Math.asin(fe(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-u,r)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-fe(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,l),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-h,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,n===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return WS.makeRotationFromQuaternion(t),this.setFromRotationMatrix(WS,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return qS.setFromEuler(this),this.setFromQuaternion(qS,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}};Ym.DEFAULT_ORDER="XYZ";let GP=class{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}},HP=0;const jS=new Q,Fc=new _h,gr=new Ei,Jd=new Q,Hh=new Q,$P=new Q,WP=new _h,XS=new Q(1,0,0),YS=new Q(0,1,0),ZS=new Q(0,0,1),KS={type:"added"},qP={type:"removed"},Oc={type:"childadded",child:null},Zg={type:"childremoved",child:null};let ho=class Cp extends _d{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:HP++}),this.uuid=yd(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Cp.DEFAULT_UP.clone();const t=new Q,e=new Ym,n=new _h,i=new Q(1,1,1);function r(){n.setFromEuler(e,!1)}function o(){e.setFromQuaternion(n,void 0,!1)}e._onChange(r),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Ei},normalMatrix:{value:new gh}}),this.matrix=new Ei,this.matrixWorld=new Ei,this.matrixAutoUpdate=Cp.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Cp.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new GP,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Fc.setFromAxisAngle(t,e),this.quaternion.multiply(Fc),this}rotateOnWorldAxis(t,e){return Fc.setFromAxisAngle(t,e),this.quaternion.premultiply(Fc),this}rotateX(t){return this.rotateOnAxis(XS,t)}rotateY(t){return this.rotateOnAxis(YS,t)}rotateZ(t){return this.rotateOnAxis(ZS,t)}translateOnAxis(t,e){return jS.copy(t).applyQuaternion(this.quaternion),this.position.add(jS.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(XS,t)}translateY(t){return this.translateOnAxis(YS,t)}translateZ(t){return this.translateOnAxis(ZS,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(gr.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?Jd.copy(t):Jd.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Hh.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?gr.lookAt(Hh,Jd,this.up):gr.lookAt(Jd,Hh,this.up),this.quaternion.setFromRotationMatrix(gr),i&&(gr.extractRotation(i.matrixWorld),Fc.setFromRotationMatrix(gr),this.quaternion.premultiply(Fc.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(KS),Oc.child=t,this.dispatchEvent(Oc),Oc.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(qP),Zg.child=t,this.dispatchEvent(Zg),Zg.child=null),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),gr.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),gr.multiply(t.parent.matrixWorld)),t.applyMatrix4(gr),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(KS),Oc.child=t,this.dispatchEvent(Oc),Oc.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(t,e);if(o!==void 0)return o}}getObjectsByProperty(t,e,n=[]){this[t]===e&&n.push(this);const i=this.children;for(let r=0,o=i.length;r<o;r++)i[r].getObjectsByProperty(t,e,n);return n}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Hh,t,$P),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Hh,WP,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)}updateWorldMatrix(t,e){const n=this.parent;if(t===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),e===!0){const i=this.children;for(let r=0,o=i.length;r<o;r++)i[r].updateWorldMatrix(!1,!0)}}toJSON(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.visibility=this._visibility,i.active=this._active,i.bounds=this._bounds.map(a=>({boxInitialized:a.boxInitialized,boxMin:a.box.min.toArray(),boxMax:a.box.max.toArray(),sphereInitialized:a.sphereInitialized,sphereRadius:a.sphere.radius,sphereCenter:a.sphere.center.toArray()})),i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.geometryCount=this._geometryCount,i.matricesTexture=this._matricesTexture.toJSON(t),this._colorsTexture!==null&&(i.colorsTexture=this._colorsTexture.toJSON(t)),this.boundingSphere!==null&&(i.boundingSphere={center:i.boundingSphere.center.toArray(),radius:i.boundingSphere.radius}),this.boundingBox!==null&&(i.boundingBox={min:i.boundingBox.min.toArray(),max:i.boundingBox.max.toArray()}));function r(a,c){return a[c.uuid]===void 0&&(a[c.uuid]=c.toJSON(t)),c.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(t.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const c=a.shapes;if(Array.isArray(c))for(let l=0,h=c.length;l<h;l++){const u=c[l];r(t.shapes,u)}else r(t.shapes,c)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let c=0,l=this.material.length;c<l;c++)a.push(r(t.materials,this.material[c]));i.material=a}else i.material=r(t.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const c=this.animations[a];i.animations.push(r(t.animations,c))}}if(e){const a=o(t.geometries),c=o(t.materials),l=o(t.textures),h=o(t.images),u=o(t.shapes),d=o(t.skeletons),f=o(t.animations),p=o(t.nodes);a.length>0&&(n.geometries=a),c.length>0&&(n.materials=c),l.length>0&&(n.textures=l),h.length>0&&(n.images=h),u.length>0&&(n.shapes=u),d.length>0&&(n.skeletons=d),f.length>0&&(n.animations=f),p.length>0&&(n.nodes=p)}return n.object=i,n;function o(a){const c=[];for(const l in a){const h=a[l];delete h.metadata,c.push(h)}return c}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const i=t.children[n];this.add(i.clone())}return this}};ho.DEFAULT_UP=new Q(0,1,0);ho.DEFAULT_MATRIX_AUTO_UPDATE=!0;ho.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const ms=new Q,_r=new Q,Kg=new Q,yr=new Q,Lc=new Q,Bc=new Q,QS=new Q,Qg=new Q,Jg=new Q,t_=new Q,e_=new ku,n_=new ku,i_=new ku;let $h=class _l{constructor(t=new Q,e=new Q,n=new Q){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){i.subVectors(n,e),ms.subVectors(t,e),i.cross(ms);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(t,e,n,i,r){ms.subVectors(i,e),_r.subVectors(n,e),Kg.subVectors(t,e);const o=ms.dot(ms),a=ms.dot(_r),c=ms.dot(Kg),l=_r.dot(_r),h=_r.dot(Kg),u=o*l-a*a;if(u===0)return r.set(0,0,0),null;const d=1/u,f=(l*c-a*h)*d,p=(o*h-a*c)*d;return r.set(1-f-p,p,f)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,yr)===null?!1:yr.x>=0&&yr.y>=0&&yr.x+yr.y<=1}static getInterpolation(t,e,n,i,r,o,a,c){return this.getBarycoord(t,e,n,i,yr)===null?(c.x=0,c.y=0,"z"in c&&(c.z=0),"w"in c&&(c.w=0),null):(c.setScalar(0),c.addScaledVector(r,yr.x),c.addScaledVector(o,yr.y),c.addScaledVector(a,yr.z),c)}static getInterpolatedAttribute(t,e,n,i,r,o){return e_.setScalar(0),n_.setScalar(0),i_.setScalar(0),e_.fromBufferAttribute(t,e),n_.fromBufferAttribute(t,n),i_.fromBufferAttribute(t,i),o.setScalar(0),o.addScaledVector(e_,r.x),o.addScaledVector(n_,r.y),o.addScaledVector(i_,r.z),o}static isFrontFacing(t,e,n,i){return ms.subVectors(n,e),_r.subVectors(t,e),ms.cross(_r).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,n,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,i),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return ms.subVectors(this.c,this.b),_r.subVectors(this.a,this.b),ms.cross(_r).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return _l.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return _l.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,n,i,r){return _l.getInterpolation(t,this.a,this.b,this.c,e,n,i,r)}containsPoint(t){return _l.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return _l.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,i=this.b,r=this.c;let o,a;Lc.subVectors(i,n),Bc.subVectors(r,n),Qg.subVectors(t,n);const c=Lc.dot(Qg),l=Bc.dot(Qg);if(c<=0&&l<=0)return e.copy(n);Jg.subVectors(t,i);const h=Lc.dot(Jg),u=Bc.dot(Jg);if(h>=0&&u<=h)return e.copy(i);const d=c*u-h*l;if(d<=0&&c>=0&&h<=0)return o=c/(c-h),e.copy(n).addScaledVector(Lc,o);t_.subVectors(t,r);const f=Lc.dot(t_),p=Bc.dot(t_);if(p>=0&&f<=p)return e.copy(r);const _=f*l-c*p;if(_<=0&&l>=0&&p<=0)return a=l/(l-p),e.copy(n).addScaledVector(Bc,a);const g=h*p-f*u;if(g<=0&&u-h>=0&&f-p>=0)return QS.subVectors(r,i),a=(u-h)/(u-h+(f-p)),e.copy(i).addScaledVector(QS,a);const m=1/(g+_+d);return o=_*m,a=d*m,e.copy(n).addScaledVector(Lc,o).addScaledVector(Bc,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}};const RA={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Ao={h:0,s:0,l:0},tf={h:0,s:0,l:0};function s_(s,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?s+(t-s)*6*e:e<1/2?t:e<2/3?s+(t-s)*6*(2/3-e):s}let Us=class{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,n)}set(t,e,n){if(e===void 0&&n===void 0){const i=t;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(t,e,n);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=Ts){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,ds.toWorkingColorSpace(this,e),this}setRGB(t,e,n,i=ds.workingColorSpace){return this.r=t,this.g=e,this.b=n,ds.toWorkingColorSpace(this,i),this}setHSL(t,e,n,i=ds.workingColorSpace){if(t=DP(t,1),e=fe(e,0,1),n=fe(n,0,1),e===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+e):n+e-n*e,o=2*n-r;this.r=s_(o,r,t+1/3),this.g=s_(o,r,t),this.b=s_(o,r,t-1/3)}return ds.toWorkingColorSpace(this,i),this}setStyle(t,e=Ts){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(t)){let r;const o=i[1],a=i[2];switch(o){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,e);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,e);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const r=i[1],o=r.length;if(o===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,e);if(o===6)return this.setHex(parseInt(r,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=Ts){const n=RA[t.toLowerCase()];return n!==void 0?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Xr(t.r),this.g=Xr(t.g),this.b=Xr(t.b),this}copyLinearToSRGB(t){return this.r=Il(t.r),this.g=Il(t.g),this.b=Il(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=Ts){return ds.fromWorkingColorSpace(jn.copy(this),t),Math.round(fe(jn.r*255,0,255))*65536+Math.round(fe(jn.g*255,0,255))*256+Math.round(fe(jn.b*255,0,255))}getHexString(t=Ts){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=ds.workingColorSpace){ds.fromWorkingColorSpace(jn.copy(this),e);const n=jn.r,i=jn.g,r=jn.b,o=Math.max(n,i,r),a=Math.min(n,i,r);let c,l;const h=(a+o)/2;if(a===o)c=0,l=0;else{const u=o-a;switch(l=h<=.5?u/(o+a):u/(2-o-a),o){case n:c=(i-r)/u+(i<r?6:0);break;case i:c=(r-n)/u+2;break;case r:c=(n-i)/u+4;break}c/=6}return t.h=c,t.s=l,t.l=h,t}getRGB(t,e=ds.workingColorSpace){return ds.fromWorkingColorSpace(jn.copy(this),e),t.r=jn.r,t.g=jn.g,t.b=jn.b,t}getStyle(t=Ts){ds.fromWorkingColorSpace(jn.copy(this),t);const e=jn.r,n=jn.g,i=jn.b;return t!==Ts?`color(${t} ${e.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(e*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(t,e,n){return this.getHSL(Ao),this.setHSL(Ao.h+t,Ao.s+e,Ao.l+n)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(Ao),t.getHSL(tf);const n=zg(Ao.h,tf.h,e),i=zg(Ao.s,tf.s,e),r=zg(Ao.l,tf.l,e);return this.setHSL(n,i,r),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,n=this.g,i=this.b,r=t.elements;return this.r=r[0]*e+r[3]*n+r[6]*i,this.g=r[1]*e+r[4]*n+r[7]*i,this.b=r[2]*e+r[5]*n+r[8]*i,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}};const jn=new Us;Us.NAMES=RA;let jP=0,Zm=class extends _d{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:jP++}),this.uuid=yd(),this.name="",this.type="Material",this.blending=RS,this.side=ry,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=PS,this.blendDst=DS,this.blendEquation=NS,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Us(0,0,0),this.blendAlpha=0,this.depthFunc=IS,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=US,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Cc,this.stencilZFail=Cc,this.stencilZPass=Cc,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const n=t[e];if(n===void 0){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const i=this[e];if(i===void 0){console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==RS&&(n.blending=this.blending),this.side!==ry&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==PS&&(n.blendSrc=this.blendSrc),this.blendDst!==DS&&(n.blendDst=this.blendDst),this.blendEquation!==NS&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==IS&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==US&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Cc&&(n.stencilFail=this.stencilFail),this.stencilZFail!==Cc&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==Cc&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(r){const o=[];for(const a in r){const c=r[a];delete c.metadata,o.push(c)}return o}if(e){const r=i(t.textures),o=i(t.images);r.length>0&&(n.textures=r),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(e!==null){const i=e.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=e[r].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}},vd=class extends Zm{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Us(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ym,this.combine=xA,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}};const fn=new Q,ef=new pe;let Za=class{constructor(t,e,n=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n,this.usage=kS,this.updateRanges=[],this.gpuType=RP,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)ef.fromBufferAttribute(this,e),ef.applyMatrix3(t),this.setXY(e,ef.x,ef.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)fn.fromBufferAttribute(this,e),fn.applyMatrix3(t),this.setXYZ(e,fn.x,fn.y,fn.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)fn.fromBufferAttribute(this,e),fn.applyMatrix4(t),this.setXYZ(e,fn.x,fn.y,fn.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)fn.fromBufferAttribute(this,e),fn.applyNormalMatrix(t),this.setXYZ(e,fn.x,fn.y,fn.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)fn.fromBufferAttribute(this,e),fn.transformDirection(t),this.setXYZ(e,fn.x,fn.y,fn.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let n=this.array[t*this.itemSize+e];return this.normalized&&(n=zh(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=vi(n,this.array)),this.array[t*this.itemSize+e]=n,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=zh(e,this.array)),e}setX(t,e){return this.normalized&&(e=vi(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=zh(e,this.array)),e}setY(t,e){return this.normalized&&(e=vi(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=zh(e,this.array)),e}setZ(t,e){return this.normalized&&(e=vi(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=zh(e,this.array)),e}setW(t,e){return this.normalized&&(e=vi(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=vi(e,this.array),n=vi(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=vi(e,this.array),n=vi(n,this.array),i=vi(i,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this}setXYZW(t,e,n,i,r){return t*=this.itemSize,this.normalized&&(e=vi(e,this.array),n=vi(n,this.array),i=vi(i,this.array),r=vi(r,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=r,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==kS&&(t.usage=this.usage),t}},XP=class extends Za{constructor(t,e,n){super(new Uint16Array(t),e,n)}},YP=class extends Za{constructor(t,e,n){super(new Uint32Array(t),e,n)}},ei=class extends Za{constructor(t,e,n){super(new Float32Array(t),e,n)}},ZP=0;const Qi=new Ei,r_=new ho,Uc=new Q,Li=new yh,Wh=new yh,Nn=new Q;let uo=class NA extends _d{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:ZP++}),this.uuid=yd(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(IP(t)?YP:XP)(t,1):this.index=t,this}setIndirect(t){return this.indirect=t,this}getIndirect(){return this.indirect}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new gh().getNormalMatrix(t);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(t),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return Qi.makeRotationFromQuaternion(t),this.applyMatrix4(Qi),this}rotateX(t){return Qi.makeRotationX(t),this.applyMatrix4(Qi),this}rotateY(t){return Qi.makeRotationY(t),this.applyMatrix4(Qi),this}rotateZ(t){return Qi.makeRotationZ(t),this.applyMatrix4(Qi),this}translate(t,e,n){return Qi.makeTranslation(t,e,n),this.applyMatrix4(Qi),this}scale(t,e,n){return Qi.makeScale(t,e,n),this.applyMatrix4(Qi),this}lookAt(t){return r_.lookAt(t),r_.updateMatrix(),this.applyMatrix4(r_.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Uc).negate(),this.translate(Uc.x,Uc.y,Uc.z),this}setFromPoints(t){const e=this.getAttribute("position");if(e===void 0){const n=[];for(let i=0,r=t.length;i<r;i++){const o=t[i];n.push(o.x,o.y,o.z||0)}this.setAttribute("position",new ei(n,3))}else{const n=Math.min(t.length,e.count);for(let i=0;i<n;i++){const r=t[i];e.setXYZ(i,r.x,r.y,r.z||0)}t.length>e.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),e.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new yh);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new Q(-1/0,-1/0,-1/0),new Q(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,i=e.length;n<i;n++){const r=e[n];Li.setFromBufferAttribute(r),this.morphTargetsRelative?(Nn.addVectors(this.boundingBox.min,Li.min),this.boundingBox.expandByPoint(Nn),Nn.addVectors(this.boundingBox.max,Li.max),this.boundingBox.expandByPoint(Nn)):(this.boundingBox.expandByPoint(Li.min),this.boundingBox.expandByPoint(Li.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new mv);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new Q,1/0);return}if(t){const n=this.boundingSphere.center;if(Li.setFromBufferAttribute(t),e)for(let r=0,o=e.length;r<o;r++){const a=e[r];Wh.setFromBufferAttribute(a),this.morphTargetsRelative?(Nn.addVectors(Li.min,Wh.min),Li.expandByPoint(Nn),Nn.addVectors(Li.max,Wh.max),Li.expandByPoint(Nn)):(Li.expandByPoint(Wh.min),Li.expandByPoint(Wh.max))}Li.getCenter(n);let i=0;for(let r=0,o=t.count;r<o;r++)Nn.fromBufferAttribute(t,r),i=Math.max(i,n.distanceToSquared(Nn));if(e)for(let r=0,o=e.length;r<o;r++){const a=e[r],c=this.morphTargetsRelative;for(let l=0,h=a.count;l<h;l++)Nn.fromBufferAttribute(a,l),c&&(Uc.fromBufferAttribute(t,l),Nn.add(Uc)),i=Math.max(i,n.distanceToSquared(Nn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.position,i=e.normal,r=e.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Za(new Float32Array(4*n.count),4));const o=this.getAttribute("tangent"),a=[],c=[];for(let T=0;T<n.count;T++)a[T]=new Q,c[T]=new Q;const l=new Q,h=new Q,u=new Q,d=new pe,f=new pe,p=new pe,_=new Q,g=new Q;function m(T,A,w){l.fromBufferAttribute(n,T),h.fromBufferAttribute(n,A),u.fromBufferAttribute(n,w),d.fromBufferAttribute(r,T),f.fromBufferAttribute(r,A),p.fromBufferAttribute(r,w),h.sub(l),u.sub(l),f.sub(d),p.sub(d);const E=1/(f.x*p.y-p.x*f.y);isFinite(E)&&(_.copy(h).multiplyScalar(p.y).addScaledVector(u,-f.y).multiplyScalar(E),g.copy(u).multiplyScalar(f.x).addScaledVector(h,-p.x).multiplyScalar(E),a[T].add(_),a[A].add(_),a[w].add(_),c[T].add(g),c[A].add(g),c[w].add(g))}let x=this.groups;x.length===0&&(x=[{start:0,count:t.count}]);for(let T=0,A=x.length;T<A;++T){const w=x[T],E=w.start,N=w.count;for(let I=E,P=E+N;I<P;I+=3)m(t.getX(I+0),t.getX(I+1),t.getX(I+2))}const v=new Q,y=new Q,b=new Q,S=new Q;function M(T){b.fromBufferAttribute(i,T),S.copy(b);const A=a[T];v.copy(A),v.sub(b.multiplyScalar(b.dot(A))).normalize(),y.crossVectors(S,A);const E=y.dot(c[T])<0?-1:1;o.setXYZW(T,v.x,v.y,v.z,E)}for(let T=0,A=x.length;T<A;++T){const w=x[T],E=w.start,N=w.count;for(let I=E,P=E+N;I<P;I+=3)M(t.getX(I+0)),M(t.getX(I+1)),M(t.getX(I+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Za(new Float32Array(e.count*3),3),this.setAttribute("normal",n);else for(let d=0,f=n.count;d<f;d++)n.setXYZ(d,0,0,0);const i=new Q,r=new Q,o=new Q,a=new Q,c=new Q,l=new Q,h=new Q,u=new Q;if(t)for(let d=0,f=t.count;d<f;d+=3){const p=t.getX(d+0),_=t.getX(d+1),g=t.getX(d+2);i.fromBufferAttribute(e,p),r.fromBufferAttribute(e,_),o.fromBufferAttribute(e,g),h.subVectors(o,r),u.subVectors(i,r),h.cross(u),a.fromBufferAttribute(n,p),c.fromBufferAttribute(n,_),l.fromBufferAttribute(n,g),a.add(h),c.add(h),l.add(h),n.setXYZ(p,a.x,a.y,a.z),n.setXYZ(_,c.x,c.y,c.z),n.setXYZ(g,l.x,l.y,l.z)}else for(let d=0,f=e.count;d<f;d+=3)i.fromBufferAttribute(e,d+0),r.fromBufferAttribute(e,d+1),o.fromBufferAttribute(e,d+2),h.subVectors(o,r),u.subVectors(i,r),h.cross(u),n.setXYZ(d+0,h.x,h.y,h.z),n.setXYZ(d+1,h.x,h.y,h.z),n.setXYZ(d+2,h.x,h.y,h.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)Nn.fromBufferAttribute(t,e),Nn.normalize(),t.setXYZ(e,Nn.x,Nn.y,Nn.z)}toNonIndexed(){function t(a,c){const l=a.array,h=a.itemSize,u=a.normalized,d=new l.constructor(c.length*h);let f=0,p=0;for(let _=0,g=c.length;_<g;_++){a.isInterleavedBufferAttribute?f=c[_]*a.data.stride+a.offset:f=c[_]*h;for(let m=0;m<h;m++)d[p++]=l[f++]}return new Za(d,h,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new NA,n=this.index.array,i=this.attributes;for(const a in i){const c=i[a],l=t(c,n);e.setAttribute(a,l)}const r=this.morphAttributes;for(const a in r){const c=[],l=r[a];for(let h=0,u=l.length;h<u;h++){const d=l[h],f=t(d,n);c.push(f)}e.morphAttributes[a]=c}e.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,c=o.length;a<c;a++){const l=o[a];e.addGroup(l.start,l.count,l.materialIndex)}return e}toJSON(){const t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const c=this.parameters;for(const l in c)c[l]!==void 0&&(t[l]=c[l]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const c in n){const l=n[c];t.data.attributes[c]=l.toJSON(t.data)}const i={};let r=!1;for(const c in this.morphAttributes){const l=this.morphAttributes[c],h=[];for(let u=0,d=l.length;u<d;u++){const f=l[u];h.push(f.toJSON(t.data))}h.length>0&&(i[c]=h,r=!0)}r&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(t.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;n!==null&&this.setIndex(n.clone(e));const i=t.attributes;for(const l in i){const h=i[l];this.setAttribute(l,h.clone(e))}const r=t.morphAttributes;for(const l in r){const h=[],u=r[l];for(let d=0,f=u.length;d<f;d++)h.push(u[d].clone(e));this.morphAttributes[l]=h}this.morphTargetsRelative=t.morphTargetsRelative;const o=t.groups;for(let l=0,h=o.length;l<h;l++){const u=o[l];this.addGroup(u.start,u.count,u.materialIndex)}const a=t.boundingBox;a!==null&&(this.boundingBox=a.clone());const c=t.boundingSphere;return c!==null&&(this.boundingSphere=c.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}};const JS=new Ei,Ma=new EA,nf=new mv,tM=new Q,sf=new Q,rf=new Q,of=new Q,o_=new Q,af=new Q,eM=new Q,cf=new Q;let bd=class extends ho{constructor(t=new uo,e=new vd){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}getVertexPosition(t,e){const n=this.geometry,i=n.attributes.position,r=n.morphAttributes.position,o=n.morphTargetsRelative;e.fromBufferAttribute(i,t);const a=this.morphTargetInfluences;if(r&&a){af.set(0,0,0);for(let c=0,l=r.length;c<l;c++){const h=a[c],u=r[c];h!==0&&(o_.fromBufferAttribute(u,t),o?af.addScaledVector(o_,h):af.addScaledVector(o_.sub(e),h))}e.add(af)}return e}raycast(t,e){const n=this.geometry,i=this.material,r=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),nf.copy(n.boundingSphere),nf.applyMatrix4(r),Ma.copy(t.ray).recast(t.near),!(nf.containsPoint(Ma.origin)===!1&&(Ma.intersectSphere(nf,tM)===null||Ma.origin.distanceToSquared(tM)>(t.far-t.near)**2))&&(JS.copy(r).invert(),Ma.copy(t.ray).applyMatrix4(JS),!(n.boundingBox!==null&&Ma.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(t,e,Ma)))}_computeIntersections(t,e,n){let i;const r=this.geometry,o=this.material,a=r.index,c=r.attributes.position,l=r.attributes.uv,h=r.attributes.uv1,u=r.attributes.normal,d=r.groups,f=r.drawRange;if(a!==null)if(Array.isArray(o))for(let p=0,_=d.length;p<_;p++){const g=d[p],m=o[g.materialIndex],x=Math.max(g.start,f.start),v=Math.min(a.count,Math.min(g.start+g.count,f.start+f.count));for(let y=x,b=v;y<b;y+=3){const S=a.getX(y),M=a.getX(y+1),T=a.getX(y+2);i=lf(this,m,t,n,l,h,u,S,M,T),i&&(i.faceIndex=Math.floor(y/3),i.face.materialIndex=g.materialIndex,e.push(i))}}else{const p=Math.max(0,f.start),_=Math.min(a.count,f.start+f.count);for(let g=p,m=_;g<m;g+=3){const x=a.getX(g),v=a.getX(g+1),y=a.getX(g+2);i=lf(this,o,t,n,l,h,u,x,v,y),i&&(i.faceIndex=Math.floor(g/3),e.push(i))}}else if(c!==void 0)if(Array.isArray(o))for(let p=0,_=d.length;p<_;p++){const g=d[p],m=o[g.materialIndex],x=Math.max(g.start,f.start),v=Math.min(c.count,Math.min(g.start+g.count,f.start+f.count));for(let y=x,b=v;y<b;y+=3){const S=y,M=y+1,T=y+2;i=lf(this,m,t,n,l,h,u,S,M,T),i&&(i.faceIndex=Math.floor(y/3),i.face.materialIndex=g.materialIndex,e.push(i))}}else{const p=Math.max(0,f.start),_=Math.min(c.count,f.start+f.count);for(let g=p,m=_;g<m;g+=3){const x=g,v=g+1,y=g+2;i=lf(this,o,t,n,l,h,u,x,v,y),i&&(i.faceIndex=Math.floor(g/3),e.push(i))}}}};function KP(s,t,e,n,i,r,o,a){let c;if(t.side===TP?c=n.intersectTriangle(o,r,i,!0,a):c=n.intersectTriangle(i,r,o,t.side===ry,a),c===null)return null;cf.copy(a),cf.applyMatrix4(s.matrixWorld);const l=e.ray.origin.distanceTo(cf);return l<e.near||l>e.far?null:{distance:l,point:cf.clone(),object:s}}function lf(s,t,e,n,i,r,o,a,c,l){s.getVertexPosition(a,sf),s.getVertexPosition(c,rf),s.getVertexPosition(l,of);const h=KP(s,t,e,n,sf,rf,of,eM);if(h){const u=new Q;$h.getBarycoord(eM,sf,rf,of,u),i&&(h.uv=$h.getInterpolatedAttribute(i,a,c,l,u,new pe)),r&&(h.uv1=$h.getInterpolatedAttribute(r,a,c,l,u,new pe)),o&&(h.normal=$h.getInterpolatedAttribute(o,a,c,l,u,new Q),h.normal.dot(n.direction)>0&&h.normal.multiplyScalar(-1));const d={a,b:c,c:l,normal:new Q,materialIndex:0};$h.getNormal(sf,rf,of,d.normal),h.face=d,h.barycoord=u}return h}function gv(s){const t={};for(const e in s){t[e]={};for(const n in s[e]){const i=s[e][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[e][n]=null):t[e][n]=i.clone():Array.isArray(i)?t[e][n]=i.slice():t[e][n]=i}}return t}function QP(s){const t={};for(let e=0;e<s.length;e++){const n=gv(s[e]);for(const i in n)t[i]=n[i]}return t}function JP(s){const t=[];for(let e=0;e<s.length;e++)t.push(s[e].clone());return t}const nM={clone:gv,merge:QP};var tD=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,eD=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;let hf=class extends Zm{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=tD,this.fragmentShader=eD,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=gv(t.uniforms),this.uniformsGroups=JP(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?e.uniforms[i]={type:"t",value:o.toJSON(t).uuid}:o&&o.isColor?e.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?e.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?e.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?e.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?e.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?e.uniforms[i]={type:"m4",value:o.toArray()}:e.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}},nD=class extends ho{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Ei,this.projectionMatrix=new Ei,this.projectionMatrixInverse=new Ei,this.coordinateSystem=_u}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){return super.getWorldDirection(t).negate()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}},_v=class extends Zm{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Us(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}};const Qp=new Q,Jp=new Q,iM=new Ei,qh=new EA,uf=new mv,a_=new Q,sM=new Q;class PA extends ho{constructor(t=new uo,e=new _v){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[0];for(let i=1,r=e.count;i<r;i++)Qp.fromBufferAttribute(e,i-1),Jp.fromBufferAttribute(e,i),n[i]=n[i-1],n[i]+=Qp.distanceTo(Jp);t.setAttribute("lineDistance",new ei(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),uf.copy(n.boundingSphere),uf.applyMatrix4(i),uf.radius+=r,t.ray.intersectsSphere(uf)===!1)return;iM.copy(i).invert(),qh.copy(t.ray).applyMatrix4(iM);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),c=a*a,l=this.isLineSegments?2:1,h=n.index,d=n.attributes.position;if(h!==null){const f=Math.max(0,o.start),p=Math.min(h.count,o.start+o.count);for(let _=f,g=p-1;_<g;_+=l){const m=h.getX(_),x=h.getX(_+1),v=df(this,t,qh,c,m,x);v&&e.push(v)}if(this.isLineLoop){const _=h.getX(p-1),g=h.getX(f),m=df(this,t,qh,c,_,g);m&&e.push(m)}}else{const f=Math.max(0,o.start),p=Math.min(d.count,o.start+o.count);for(let _=f,g=p-1;_<g;_+=l){const m=df(this,t,qh,c,_,_+1);m&&e.push(m)}if(this.isLineLoop){const _=df(this,t,qh,c,p-1,f);_&&e.push(_)}}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}function df(s,t,e,n,i,r){const o=s.geometry.attributes.position;if(Qp.fromBufferAttribute(o,i),Jp.fromBufferAttribute(o,r),e.distanceSqToSegment(Qp,Jp,a_,sM)>n)return;a_.applyMatrix4(s.matrixWorld);const c=t.ray.origin.distanceTo(a_);if(!(c<t.near||c>t.far))return{distance:c,point:sM.clone().applyMatrix4(s.matrixWorld),index:i,face:null,faceIndex:null,barycoord:null,object:s}}let DA=class extends ho{constructor(){super(),this.isGroup=!0,this.type="Group"}};class IA extends xd{constructor(t,e,n,i,r,o,a,c,l){super(t,e,n,i,r,o,a,c,l),this.isCanvasTexture=!0,this.needsUpdate=!0}}class fo{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),r=0;e.push(0);for(let o=1;o<=t;o++)n=this.getPoint(o/t),r+=n.distanceTo(i),e.push(r),i=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e){const n=this.getLengths();let i=0;const r=n.length;let o;e?o=e:o=t*n[r-1];let a=0,c=r-1,l;for(;a<=c;)if(i=Math.floor(a+(c-a)/2),l=n[i]-o,l<0)a=i+1;else if(l>0)c=i-1;else{c=i;break}if(i=c,n[i]===o)return i/(r-1);const h=n[i],d=n[i+1]-h,f=(o-h)/d;return(i+f)/(r-1)}getTangent(t,e){let i=t-1e-4,r=t+1e-4;i<0&&(i=0),r>1&&(r=1);const o=this.getPoint(i),a=this.getPoint(r),c=e||(o.isVector2?new pe:new Q);return c.copy(a).sub(o).normalize(),c}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e){const n=new Q,i=[],r=[],o=[],a=new Q,c=new Ei;for(let f=0;f<=t;f++){const p=f/t;i[f]=this.getTangentAt(p,new Q)}r[0]=new Q,o[0]=new Q;let l=Number.MAX_VALUE;const h=Math.abs(i[0].x),u=Math.abs(i[0].y),d=Math.abs(i[0].z);h<=l&&(l=h,n.set(1,0,0)),u<=l&&(l=u,n.set(0,1,0)),d<=l&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],a),o[0].crossVectors(i[0],r[0]);for(let f=1;f<=t;f++){if(r[f]=r[f-1].clone(),o[f]=o[f-1].clone(),a.crossVectors(i[f-1],i[f]),a.length()>Number.EPSILON){a.normalize();const p=Math.acos(fe(i[f-1].dot(i[f]),-1,1));r[f].applyMatrix4(c.makeRotationAxis(a,p))}o[f].crossVectors(i[f],r[f])}if(e===!0){let f=Math.acos(fe(r[0].dot(r[t]),-1,1));f/=t,i[0].dot(a.crossVectors(r[0],r[t]))>0&&(f=-f);for(let p=1;p<=t;p++)r[p].applyMatrix4(c.makeRotationAxis(i[p],f*p)),o[p].crossVectors(i[p],r[p])}return{tangents:i,normals:r,binormals:o}}clone(){return new this.constructor().copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class FA extends fo{constructor(t=0,e=0,n=1,i=1,r=0,o=Math.PI*2,a=!1,c=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=o,this.aClockwise=a,this.aRotation=c}getPoint(t,e=new pe){const n=e,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const o=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(o?r=0:r=i),this.aClockwise===!0&&!o&&(r===i?r=-i:r=r-i);const a=this.aStartAngle+t*r;let c=this.aX+this.xRadius*Math.cos(a),l=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const h=Math.cos(this.aRotation),u=Math.sin(this.aRotation),d=c-this.aX,f=l-this.aY;c=d*h-f*u+this.aX,l=d*u+f*h+this.aY}return n.set(c,l)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}class iD extends FA{constructor(t,e,n,i,r,o){super(t,e,n,n,i,r,o),this.isArcCurve=!0,this.type="ArcCurve"}}function yv(){let s=0,t=0,e=0,n=0;function i(r,o,a,c){s=r,t=a,e=-3*r+3*o-2*a-c,n=2*r-2*o+a+c}return{initCatmullRom:function(r,o,a,c,l){i(o,a,l*(a-r),l*(c-o))},initNonuniformCatmullRom:function(r,o,a,c,l,h,u){let d=(o-r)/l-(a-r)/(l+h)+(a-o)/h,f=(a-o)/h-(c-o)/(h+u)+(c-a)/u;d*=h,f*=h,i(o,a,d,f)},calc:function(r){const o=r*r,a=o*r;return s+t*r+e*o+n*a}}}const ff=new Q,c_=new yv,l_=new yv,h_=new yv;class sD extends fo{constructor(t=[],e=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}getPoint(t,e=new Q){const n=e,i=this.points,r=i.length,o=(r-(this.closed?0:1))*t;let a=Math.floor(o),c=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/r)+1)*r:c===0&&a===r-1&&(a=r-2,c=1);let l,h;this.closed||a>0?l=i[(a-1)%r]:(ff.subVectors(i[0],i[1]).add(i[0]),l=ff);const u=i[a%r],d=i[(a+1)%r];if(this.closed||a+2<r?h=i[(a+2)%r]:(ff.subVectors(i[r-1],i[r-2]).add(i[r-1]),h=ff),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let p=Math.pow(l.distanceToSquared(u),f),_=Math.pow(u.distanceToSquared(d),f),g=Math.pow(d.distanceToSquared(h),f);_<1e-4&&(_=1),p<1e-4&&(p=_),g<1e-4&&(g=_),c_.initNonuniformCatmullRom(l.x,u.x,d.x,h.x,p,_,g),l_.initNonuniformCatmullRom(l.y,u.y,d.y,h.y,p,_,g),h_.initNonuniformCatmullRom(l.z,u.z,d.z,h.z,p,_,g)}else this.curveType==="catmullrom"&&(c_.initCatmullRom(l.x,u.x,d.x,h.x,this.tension),l_.initCatmullRom(l.y,u.y,d.y,h.y,this.tension),h_.initCatmullRom(l.z,u.z,d.z,h.z,this.tension));return n.set(c_.calc(c),l_.calc(c),h_.calc(c)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new Q().fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function rM(s,t,e,n,i){const r=(n-t)*.5,o=(i-e)*.5,a=s*s,c=s*a;return(2*e-2*n+r+o)*c+(-3*e+3*n-2*r-o)*a+r*s+e}function rD(s,t){const e=1-s;return e*e*t}function oD(s,t){return 2*(1-s)*s*t}function aD(s,t){return s*s*t}function Eu(s,t,e,n){return rD(s,t)+oD(s,e)+aD(s,n)}function cD(s,t){const e=1-s;return e*e*e*t}function lD(s,t){const e=1-s;return 3*e*e*s*t}function hD(s,t){return 3*(1-s)*s*s*t}function uD(s,t){return s*s*s*t}function Cu(s,t,e,n,i){return cD(s,t)+lD(s,e)+hD(s,n)+uD(s,i)}class dD extends fo{constructor(t=new pe,e=new pe,n=new pe,i=new pe){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new pe){const n=e,i=this.v0,r=this.v1,o=this.v2,a=this.v3;return n.set(Cu(t,i.x,r.x,o.x,a.x),Cu(t,i.y,r.y,o.y,a.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class OA extends fo{constructor(t=new Q,e=new Q,n=new Q,i=new Q){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new Q){const n=e,i=this.v0,r=this.v1,o=this.v2,a=this.v3;return n.set(Cu(t,i.x,r.x,o.x,a.x),Cu(t,i.y,r.y,o.y,a.y),Cu(t,i.z,r.z,o.z,a.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class fD extends fo{constructor(t=new pe,e=new pe){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new pe){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new pe){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class pD extends fo{constructor(t=new Q,e=new Q){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new Q){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new Q){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class mD extends fo{constructor(t=new pe,e=new pe,n=new pe){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new pe){const n=e,i=this.v0,r=this.v1,o=this.v2;return n.set(Eu(t,i.x,r.x,o.x),Eu(t,i.y,r.y,o.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class xv extends fo{constructor(t=new Q,e=new Q,n=new Q){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new Q){const n=e,i=this.v0,r=this.v1,o=this.v2;return n.set(Eu(t,i.x,r.x,o.x),Eu(t,i.y,r.y,o.y),Eu(t,i.z,r.z,o.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class gD extends fo{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new pe){const n=e,i=this.points,r=(i.length-1)*t,o=Math.floor(r),a=r-o,c=i[o===0?o:o-1],l=i[o],h=i[o>i.length-2?i.length-1:o+1],u=i[o>i.length-3?i.length-1:o+2];return n.set(rM(a,c.x,l.x,h.x,u.x),rM(a,c.y,l.y,h.y,u.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new pe().fromArray(i))}return this}}var _D=Object.freeze({__proto__:null,ArcCurve:iD,CatmullRomCurve3:sD,CubicBezierCurve:dD,CubicBezierCurve3:OA,EllipseCurve:FA,LineCurve:fD,LineCurve3:pD,QuadraticBezierCurve:mD,QuadraticBezierCurve3:xv,SplineCurve:gD});class Km extends uo{constructor(t=1,e=1,n=1,i=32,r=1,o=!1,a=0,c=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:r,openEnded:o,thetaStart:a,thetaLength:c};const l=this;i=Math.floor(i),r=Math.floor(r);const h=[],u=[],d=[],f=[];let p=0;const _=[],g=n/2;let m=0;x(),o===!1&&(t>0&&v(!0),e>0&&v(!1)),this.setIndex(h),this.setAttribute("position",new ei(u,3)),this.setAttribute("normal",new ei(d,3)),this.setAttribute("uv",new ei(f,2));function x(){const y=new Q,b=new Q;let S=0;const M=(e-t)/n;for(let T=0;T<=r;T++){const A=[],w=T/r,E=w*(e-t)+t;for(let N=0;N<=i;N++){const I=N/i,P=I*c+a,D=Math.sin(P),O=Math.cos(P);b.x=E*D,b.y=-w*n+g,b.z=E*O,u.push(b.x,b.y,b.z),y.set(D,M,O).normalize(),d.push(y.x,y.y,y.z),f.push(I,1-w),A.push(p++)}_.push(A)}for(let T=0;T<i;T++)for(let A=0;A<r;A++){const w=_[A][T],E=_[A+1][T],N=_[A+1][T+1],I=_[A][T+1];(t>0||A!==0)&&(h.push(w,E,I),S+=3),(e>0||A!==r-1)&&(h.push(E,N,I),S+=3)}l.addGroup(m,S,0),m+=S}function v(y){const b=p,S=new pe,M=new Q;let T=0;const A=y===!0?t:e,w=y===!0?1:-1;for(let N=1;N<=i;N++)u.push(0,g*w,0),d.push(0,w,0),f.push(.5,.5),p++;const E=p;for(let N=0;N<=i;N++){const P=N/i*c+a,D=Math.cos(P),O=Math.sin(P);M.x=A*O,M.y=g*w,M.z=A*D,u.push(M.x,M.y,M.z),d.push(0,w,0),S.x=D*.5+.5,S.y=O*.5*w+.5,f.push(S.x,S.y),p++}for(let N=0;N<i;N++){const I=b+N,P=E+N;y===!0?h.push(P,P+1,I):h.push(P+1,P,I),T+=3}l.addGroup(m,T,y===!0?1:2),m+=T}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Km(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class vv extends Km{constructor(t=1,e=1,n=32,i=1,r=!1,o=0,a=Math.PI*2){super(0,t,e,n,i,r,o,a),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:o,thetaLength:a}}static fromJSON(t){return new vv(t.radius,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}let LA=class BA extends uo{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const r=t/2,o=e/2,a=Math.floor(n),c=Math.floor(i),l=a+1,h=c+1,u=t/a,d=e/c,f=[],p=[],_=[],g=[];for(let m=0;m<h;m++){const x=m*d-o;for(let v=0;v<l;v++){const y=v*u-r;p.push(y,-x,0),_.push(0,0,1),g.push(v/a),g.push(1-m/c)}}for(let m=0;m<c;m++)for(let x=0;x<a;x++){const v=x+l*m,y=x+l*(m+1),b=x+1+l*(m+1),S=x+1+l*m;f.push(v,y,S),f.push(y,b,S)}this.setIndex(f),this.setAttribute("position",new ei(p,3)),this.setAttribute("normal",new ei(_,3)),this.setAttribute("uv",new ei(g,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new BA(t.width,t.height,t.widthSegments,t.heightSegments)}},UA=class kA extends uo{constructor(t=1,e=32,n=16,i=0,r=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:r,thetaStart:o,thetaLength:a},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const c=Math.min(o+a,Math.PI);let l=0;const h=[],u=new Q,d=new Q,f=[],p=[],_=[],g=[];for(let m=0;m<=n;m++){const x=[],v=m/n;let y=0;m===0&&o===0?y=.5/e:m===n&&c===Math.PI&&(y=-.5/e);for(let b=0;b<=e;b++){const S=b/e;u.x=-t*Math.cos(i+S*r)*Math.sin(o+v*a),u.y=t*Math.cos(o+v*a),u.z=t*Math.sin(i+S*r)*Math.sin(o+v*a),p.push(u.x,u.y,u.z),d.copy(u).normalize(),_.push(d.x,d.y,d.z),g.push(S+y,1-v),x.push(l++)}h.push(x)}for(let m=0;m<n;m++)for(let x=0;x<e;x++){const v=h[m][x+1],y=h[m][x],b=h[m+1][x],S=h[m+1][x+1];(m!==0||o>0)&&f.push(v,y,S),(m!==n-1||c<Math.PI)&&f.push(y,b,S)}this.setIndex(f),this.setAttribute("position",new ei(p,3)),this.setAttribute("normal",new ei(_,3)),this.setAttribute("uv",new ei(g,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new kA(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}};class bv extends uo{constructor(t=new xv(new Q(-1,-1,0),new Q(-1,1,0),new Q(1,1,0)),e=64,n=1,i=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:i,closed:r};const o=t.computeFrenetFrames(e,r);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const a=new Q,c=new Q,l=new pe;let h=new Q;const u=[],d=[],f=[],p=[];_(),this.setIndex(p),this.setAttribute("position",new ei(u,3)),this.setAttribute("normal",new ei(d,3)),this.setAttribute("uv",new ei(f,2));function _(){for(let v=0;v<e;v++)g(v);g(r===!1?e:0),x(),m()}function g(v){h=t.getPointAt(v/e,h);const y=o.normals[v],b=o.binormals[v];for(let S=0;S<=i;S++){const M=S/i*Math.PI*2,T=Math.sin(M),A=-Math.cos(M);c.x=A*y.x+T*b.x,c.y=A*y.y+T*b.y,c.z=A*y.z+T*b.z,c.normalize(),d.push(c.x,c.y,c.z),a.x=h.x+n*c.x,a.y=h.y+n*c.y,a.z=h.z+n*c.z,u.push(a.x,a.y,a.z)}}function m(){for(let v=1;v<=e;v++)for(let y=1;y<=i;y++){const b=(i+1)*(v-1)+(y-1),S=(i+1)*v+(y-1),M=(i+1)*v+y,T=(i+1)*(v-1)+y;p.push(b,S,T),p.push(S,M,T)}}function x(){for(let v=0;v<=e;v++)for(let y=0;y<=i;y++)l.x=v/e,l.y=y/i,f.push(l.x,l.y)}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON();return t.path=this.parameters.path.toJSON(),t}static fromJSON(t){return new bv(new _D[t.path.type]().fromJSON(t.path),t.tubularSegments,t.radius,t.radialSegments,t.closed)}}let yD=class extends Zm{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Us(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Us(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=PP,this.normalScale=new pe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ym,this.combine=xA,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}},xD=class extends nD{constructor(t=-1,e=1,n=1,i=-1,r=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=r,this.far=o,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,r,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-t,o=n+t,a=i+e,c=i-e;if(this.view!==null&&this.view.enabled){const l=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=l*this.view.offsetX,o=r+l*this.view.width,a-=h*this.view.offsetY,c=a-h*this.view.height}this.projectionMatrix.makeOrthographic(r,o,a,c,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}};typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:yA}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=yA);/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */let vD=class{constructor(){this.isPass=!0,this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}dispose(){}};const bD=new xD(-1,1,1,-1,0,1);let SD=class extends uo{constructor(){super(),this.setAttribute("position",new ei([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new ei([0,2,0,0,2,0],2))}};const MD=new SD;let TD=class{constructor(t){this._mesh=new bd(MD,t)}dispose(){this._mesh.geometry.dispose()}render(t){t.render(this._mesh,bD)}get material(){return this._mesh.material}set material(t){this._mesh.material=t}};const wD={name:"CopyShader",uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform float opacity;

		uniform sampler2D tDiffuse;

		varying vec2 vUv;

		void main() {

			vec4 texel = texture2D( tDiffuse, vUv );
			gl_FragColor = opacity * texel;


		}`},AD={name:"LuminosityHighPassShader",shaderID:"luminosityHighPass",uniforms:{tDiffuse:{value:null},luminosityThreshold:{value:1},smoothWidth:{value:1},defaultColor:{value:new Us(0)},defaultOpacity:{value:0}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;

			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform sampler2D tDiffuse;
		uniform vec3 defaultColor;
		uniform float defaultOpacity;
		uniform float luminosityThreshold;
		uniform float smoothWidth;

		varying vec2 vUv;

		void main() {

			vec4 texel = texture2D( tDiffuse, vUv );

			float v = luminance( texel.xyz );

			vec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );

			float alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );

			gl_FragColor = mix( outputColor, texel, alpha );

		}`};class Xl extends vD{constructor(t,e,n,i){super(),this.strength=e!==void 0?e:1,this.radius=n,this.threshold=i,this.resolution=t!==void 0?new pe(t.x,t.y):new pe(256,256),this.clearColor=new Us(0,0,0),this.renderTargetsHorizontal=[],this.renderTargetsVertical=[],this.nMips=5;let r=Math.round(this.resolution.x/2),o=Math.round(this.resolution.y/2);this.renderTargetBright=new Hg(r,o,{type:Ug}),this.renderTargetBright.texture.name="UnrealBloomPass.bright",this.renderTargetBright.texture.generateMipmaps=!1;for(let u=0;u<this.nMips;u++){const d=new Hg(r,o,{type:Ug});d.texture.name="UnrealBloomPass.h"+u,d.texture.generateMipmaps=!1,this.renderTargetsHorizontal.push(d);const f=new Hg(r,o,{type:Ug});f.texture.name="UnrealBloomPass.v"+u,f.texture.generateMipmaps=!1,this.renderTargetsVertical.push(f),r=Math.round(r/2),o=Math.round(o/2)}const a=AD;this.highPassUniforms=nM.clone(a.uniforms),this.highPassUniforms.luminosityThreshold.value=i,this.highPassUniforms.smoothWidth.value=.01,this.materialHighPassFilter=new hf({uniforms:this.highPassUniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader}),this.separableBlurMaterials=[];const c=[3,5,7,9,11];r=Math.round(this.resolution.x/2),o=Math.round(this.resolution.y/2);for(let u=0;u<this.nMips;u++)this.separableBlurMaterials.push(this.getSeperableBlurMaterial(c[u])),this.separableBlurMaterials[u].uniforms.invSize.value=new pe(1/r,1/o),r=Math.round(r/2),o=Math.round(o/2);this.compositeMaterial=this.getCompositeMaterial(this.nMips),this.compositeMaterial.uniforms.blurTexture1.value=this.renderTargetsVertical[0].texture,this.compositeMaterial.uniforms.blurTexture2.value=this.renderTargetsVertical[1].texture,this.compositeMaterial.uniforms.blurTexture3.value=this.renderTargetsVertical[2].texture,this.compositeMaterial.uniforms.blurTexture4.value=this.renderTargetsVertical[3].texture,this.compositeMaterial.uniforms.blurTexture5.value=this.renderTargetsVertical[4].texture,this.compositeMaterial.uniforms.bloomStrength.value=e,this.compositeMaterial.uniforms.bloomRadius.value=.1;const l=[1,.8,.6,.4,.2];this.compositeMaterial.uniforms.bloomFactors.value=l,this.bloomTintColors=[new Q(1,1,1),new Q(1,1,1),new Q(1,1,1),new Q(1,1,1),new Q(1,1,1)],this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors;const h=wD;this.copyUniforms=nM.clone(h.uniforms),this.blendMaterial=new hf({uniforms:this.copyUniforms,vertexShader:h.vertexShader,fragmentShader:h.fragmentShader,blending:AP,depthTest:!1,depthWrite:!1,transparent:!0}),this.enabled=!0,this.needsSwap=!1,this._oldClearColor=new Us,this.oldClearAlpha=1,this.basic=new vd,this.fsQuad=new TD(null)}dispose(){for(let t=0;t<this.renderTargetsHorizontal.length;t++)this.renderTargetsHorizontal[t].dispose();for(let t=0;t<this.renderTargetsVertical.length;t++)this.renderTargetsVertical[t].dispose();this.renderTargetBright.dispose();for(let t=0;t<this.separableBlurMaterials.length;t++)this.separableBlurMaterials[t].dispose();this.compositeMaterial.dispose(),this.blendMaterial.dispose(),this.basic.dispose(),this.fsQuad.dispose()}setSize(t,e){let n=Math.round(t/2),i=Math.round(e/2);this.renderTargetBright.setSize(n,i);for(let r=0;r<this.nMips;r++)this.renderTargetsHorizontal[r].setSize(n,i),this.renderTargetsVertical[r].setSize(n,i),this.separableBlurMaterials[r].uniforms.invSize.value=new pe(1/n,1/i),n=Math.round(n/2),i=Math.round(i/2)}render(t,e,n,i,r){t.getClearColor(this._oldClearColor),this.oldClearAlpha=t.getClearAlpha();const o=t.autoClear;t.autoClear=!1,t.setClearColor(this.clearColor,0),r&&t.state.buffers.stencil.setTest(!1),this.renderToScreen&&(this.fsQuad.material=this.basic,this.basic.map=n.texture,t.setRenderTarget(null),t.clear(),this.fsQuad.render(t)),this.highPassUniforms.tDiffuse.value=n.texture,this.highPassUniforms.luminosityThreshold.value=this.threshold,this.fsQuad.material=this.materialHighPassFilter,t.setRenderTarget(this.renderTargetBright),t.clear(),this.fsQuad.render(t);let a=this.renderTargetBright;for(let c=0;c<this.nMips;c++)this.fsQuad.material=this.separableBlurMaterials[c],this.separableBlurMaterials[c].uniforms.colorTexture.value=a.texture,this.separableBlurMaterials[c].uniforms.direction.value=Xl.BlurDirectionX,t.setRenderTarget(this.renderTargetsHorizontal[c]),t.clear(),this.fsQuad.render(t),this.separableBlurMaterials[c].uniforms.colorTexture.value=this.renderTargetsHorizontal[c].texture,this.separableBlurMaterials[c].uniforms.direction.value=Xl.BlurDirectionY,t.setRenderTarget(this.renderTargetsVertical[c]),t.clear(),this.fsQuad.render(t),a=this.renderTargetsVertical[c];this.fsQuad.material=this.compositeMaterial,this.compositeMaterial.uniforms.bloomStrength.value=this.strength,this.compositeMaterial.uniforms.bloomRadius.value=this.radius,this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,t.setRenderTarget(this.renderTargetsHorizontal[0]),t.clear(),this.fsQuad.render(t),this.fsQuad.material=this.blendMaterial,this.copyUniforms.tDiffuse.value=this.renderTargetsHorizontal[0].texture,r&&t.state.buffers.stencil.setTest(!0),this.renderToScreen?(t.setRenderTarget(null),this.fsQuad.render(t)):(t.setRenderTarget(n),this.fsQuad.render(t)),t.setClearColor(this._oldClearColor,this.oldClearAlpha),t.autoClear=o}getSeperableBlurMaterial(t){const e=[];for(let n=0;n<t;n++)e.push(.39894*Math.exp(-.5*n*n/(t*t))/t);return new hf({defines:{KERNEL_RADIUS:t},uniforms:{colorTexture:{value:null},invSize:{value:new pe(.5,.5)},direction:{value:new pe(.5,.5)},gaussianCoefficients:{value:e}},vertexShader:`varying vec2 vUv;
				void main() {
					vUv = uv;
					gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
				}`,fragmentShader:`#include <common>
				varying vec2 vUv;
				uniform sampler2D colorTexture;
				uniform vec2 invSize;
				uniform vec2 direction;
				uniform float gaussianCoefficients[KERNEL_RADIUS];

				void main() {
					float weightSum = gaussianCoefficients[0];
					vec3 diffuseSum = texture2D( colorTexture, vUv ).rgb * weightSum;
					for( int i = 1; i < KERNEL_RADIUS; i ++ ) {
						float x = float(i);
						float w = gaussianCoefficients[i];
						vec2 uvOffset = direction * invSize * x;
						vec3 sample1 = texture2D( colorTexture, vUv + uvOffset ).rgb;
						vec3 sample2 = texture2D( colorTexture, vUv - uvOffset ).rgb;
						diffuseSum += (sample1 + sample2) * w;
						weightSum += 2.0 * w;
					}
					gl_FragColor = vec4(diffuseSum/weightSum, 1.0);
				}`})}getCompositeMaterial(t){return new hf({defines:{NUM_MIPS:t},uniforms:{blurTexture1:{value:null},blurTexture2:{value:null},blurTexture3:{value:null},blurTexture4:{value:null},blurTexture5:{value:null},bloomStrength:{value:1},bloomFactors:{value:null},bloomTintColors:{value:null},bloomRadius:{value:0}},vertexShader:`varying vec2 vUv;
				void main() {
					vUv = uv;
					gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
				}`,fragmentShader:`varying vec2 vUv;
				uniform sampler2D blurTexture1;
				uniform sampler2D blurTexture2;
				uniform sampler2D blurTexture3;
				uniform sampler2D blurTexture4;
				uniform sampler2D blurTexture5;
				uniform float bloomStrength;
				uniform float bloomRadius;
				uniform float bloomFactors[NUM_MIPS];
				uniform vec3 bloomTintColors[NUM_MIPS];

				float lerpBloomFactor(const in float factor) {
					float mirrorFactor = 1.2 - factor;
					return mix(factor, mirrorFactor, bloomRadius);
				}

				void main() {
					gl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) +
						lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) +
						lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) +
						lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) +
						lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );
				}`})}}Xl.BlurDirectionX=new pe(1,0);Xl.BlurDirectionY=new pe(0,1);const Rp={chunk:/[^\s-]+?-\b|\S+|\s+|\r\n?|\n/g,ansiEscapeSequence:/\u001b.*?m/g};class ED{constructor(t="",e={}){this._lines=String(t).split(/\r\n|\n/g),this.options={eol:`
`,width:30,...e}}lines(){return this._lines.map(oM,this).map(t=>t.match(Rp.chunk)||["~~empty~~"]).map(t=>this.options.break?t.map(CD,this):t).map(t=>t.flat()).map(t=>t.reduce((e,n)=>{const i=e[e.length-1];return ay(n).length+ay(i).length>this.options.width?e.push(n):e[e.length-1]+=n,e},[""])).flat().map(oM,this).filter(t=>t.trim()).map(t=>t.replace("~~empty~~",""))}wrap(){return this.lines().join(this.options.eol)}toString(){return this.wrap()}static wrap(t,e){return new this(t,e).wrap()}static lines(t,e){return new this(t,e).lines()}static isWrappable(t=""){const e=String(t).match(Rp.chunk);return e?e.length>1:!1}static getChunks(t){return t.match(Rp.chunk)||[]}}function oM(s){return this.options.noTrim?s:s.trim()}function ay(s){return s.replace(Rp.ansiEscapeSequence,"")}function CD(s){if(ay(s).length>this.options.width){const t=s.split("");let e;const n=[];for(;(e=t.splice(0,this.options.width)).length;)n.push(e.join(""));return n}else return s}const zA="14.9.17",aM=(s,t,e)=>({endTime:t,insertTime:e,type:"exponentialRampToValue",value:s}),cM=(s,t,e)=>({endTime:t,insertTime:e,type:"linearRampToValue",value:s}),cy=(s,t)=>({startTime:t,type:"setValue",value:s}),VA=(s,t,e)=>({duration:e,startTime:t,type:"setValueCurve",values:s}),GA=(s,t,{startTime:e,target:n,timeConstant:i})=>n+(t-n)*Math.exp((e-s)/i),Sl=s=>s.type==="exponentialRampToValue",tm=s=>s.type==="linearRampToValue",$o=s=>Sl(s)||tm(s),Sv=s=>s.type==="setValue",Ir=s=>s.type==="setValueCurve",em=(s,t,e,n)=>{const i=s[t];return i===void 0?n:$o(i)||Sv(i)?i.value:Ir(i)?i.values[i.values.length-1]:GA(e,em(s,t-1,i.startTime,n),i)},lM=(s,t,e,n,i)=>e===void 0?[n.insertTime,i]:$o(e)?[e.endTime,e.value]:Sv(e)?[e.startTime,e.value]:Ir(e)?[e.startTime+e.duration,e.values[e.values.length-1]]:[e.startTime,em(s,t-1,e.startTime,i)],ly=s=>s.type==="cancelAndHold",hy=s=>s.type==="cancelScheduledValues",Eo=s=>ly(s)||hy(s)?s.cancelTime:Sl(s)||tm(s)?s.endTime:s.startTime,hM=(s,t,e,{endTime:n,value:i})=>e===i?i:0<e&&0<i||e<0&&i<0?e*(i/e)**((s-t)/(n-t)):0,uM=(s,t,e,{endTime:n,value:i})=>e+(s-t)/(n-t)*(i-e),RD=(s,t)=>{const e=Math.floor(t),n=Math.ceil(t);return e===n?s[e]:(1-(t-e))*s[e]+(1-(n-t))*s[n]},ND=(s,{duration:t,startTime:e,values:n})=>{const i=(s-e)/t*(n.length-1);return RD(n,i)},pf=s=>s.type==="setTarget";class PD{constructor(t){this._automationEvents=[],this._currenTime=0,this._defaultValue=t}[Symbol.iterator](){return this._automationEvents[Symbol.iterator]()}add(t){const e=Eo(t);if(ly(t)||hy(t)){const n=this._automationEvents.findIndex(r=>hy(t)&&Ir(r)?r.startTime+r.duration>=e:Eo(r)>=e),i=this._automationEvents[n];if(n!==-1&&(this._automationEvents=this._automationEvents.slice(0,n)),ly(t)){const r=this._automationEvents[this._automationEvents.length-1];if(i!==void 0&&$o(i)){if(r!==void 0&&pf(r))throw new Error("The internal list is malformed.");const o=r===void 0?i.insertTime:Ir(r)?r.startTime+r.duration:Eo(r),a=r===void 0?this._defaultValue:Ir(r)?r.values[r.values.length-1]:r.value,c=Sl(i)?hM(e,o,a,i):uM(e,o,a,i),l=Sl(i)?aM(c,e,this._currenTime):cM(c,e,this._currenTime);this._automationEvents.push(l)}if(r!==void 0&&pf(r)&&this._automationEvents.push(cy(this.getValue(e),e)),r!==void 0&&Ir(r)&&r.startTime+r.duration>e){const o=e-r.startTime,a=(r.values.length-1)/r.duration,c=Math.max(2,1+Math.ceil(o*a)),l=o/(c-1)*a,h=r.values.slice(0,c);if(l<1)for(let u=1;u<c;u+=1){const d=l*u%1;h[u]=r.values[u-1]*(1-d)+r.values[u]*d}this._automationEvents[this._automationEvents.length-1]=VA(h,r.startTime,o)}}}else{const n=this._automationEvents.findIndex(o=>Eo(o)>e),i=n===-1?this._automationEvents[this._automationEvents.length-1]:this._automationEvents[n-1];if(i!==void 0&&Ir(i)&&Eo(i)+i.duration>e)return!1;const r=Sl(t)?aM(t.value,t.endTime,this._currenTime):tm(t)?cM(t.value,e,this._currenTime):t;if(n===-1)this._automationEvents.push(r);else{if(Ir(t)&&e+t.duration>Eo(this._automationEvents[n]))return!1;this._automationEvents.splice(n,0,r)}}return!0}flush(t){const e=this._automationEvents.findIndex(n=>Eo(n)>t);if(e>1){const n=this._automationEvents.slice(e-1),i=n[0];pf(i)&&n.unshift(cy(em(this._automationEvents,e-2,i.startTime,this._defaultValue),i.startTime)),this._automationEvents=n}}getValue(t){if(this._automationEvents.length===0)return this._defaultValue;const e=this._automationEvents.findIndex(o=>Eo(o)>t),n=this._automationEvents[e],i=(e===-1?this._automationEvents.length:e)-1,r=this._automationEvents[i];if(r!==void 0&&pf(r)&&(n===void 0||!$o(n)||n.insertTime>t))return GA(t,em(this._automationEvents,i-1,r.startTime,this._defaultValue),r);if(r!==void 0&&Sv(r)&&(n===void 0||!$o(n)))return r.value;if(r!==void 0&&Ir(r)&&(n===void 0||!$o(n)||r.startTime+r.duration>t))return t<r.startTime+r.duration?ND(t,r):r.values[r.values.length-1];if(r!==void 0&&$o(r)&&(n===void 0||!$o(n)))return r.value;if(n!==void 0&&Sl(n)){const[o,a]=lM(this._automationEvents,i,r,n,this._defaultValue);return hM(t,o,a,n)}if(n!==void 0&&tm(n)){const[o,a]=lM(this._automationEvents,i,r,n,this._defaultValue);return uM(t,o,a,n)}return this._defaultValue}}const DD=s=>({cancelTime:s,type:"cancelAndHold"}),ID=s=>({cancelTime:s,type:"cancelScheduledValues"}),FD=(s,t)=>({endTime:t,type:"exponentialRampToValue",value:s}),OD=(s,t)=>({endTime:t,type:"linearRampToValue",value:s}),LD=(s,t,e)=>({startTime:t,target:s,timeConstant:e,type:"setTarget"}),BD=()=>new DOMException("","AbortError"),UD=s=>(t,e,[n,i,r],o)=>{s(t[i],[e,n,r],a=>a[0]===e&&a[1]===n,o)},kD=s=>(t,e,n)=>{const i=[];for(let r=0;r<n.numberOfInputs;r+=1)i.push(new Set);s.set(t,{activeInputs:i,outputs:new Set,passiveInputs:new WeakMap,renderer:e})},zD=s=>(t,e)=>{s.set(t,{activeInputs:new Set,passiveInputs:new WeakMap,renderer:e})},Yl=new WeakSet,HA=new WeakMap,Mv=new WeakMap,$A=new WeakMap,Tv=new WeakMap,Qm=new WeakMap,WA=new WeakMap,uy=new WeakMap,dy=new WeakMap,fy=new WeakMap,qA={construct(){return qA}},VD=s=>{try{const t=new Proxy(s,qA);new t}catch{return!1}return!0},dM=/^import(?:(?:[\s]+[\w]+|(?:[\s]+[\w]+[\s]*,)?[\s]*\{[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?(?:[\s]*,[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?)*[\s]*}|(?:[\s]+[\w]+[\s]*,)?[\s]*\*[\s]+as[\s]+[\w]+)[\s]+from)?(?:[\s]*)("([^"\\]|\\.)+"|'([^'\\]|\\.)+')(?:[\s]*);?/,fM=(s,t)=>{const e=[];let n=s.replace(/^[\s]+/,""),i=n.match(dM);for(;i!==null;){const r=i[1].slice(1,-1),o=i[0].replace(/([\s]+)?;?$/,"").replace(r,new URL(r,t).toString());e.push(o),n=n.slice(i[0].length).replace(/^[\s]+/,""),i=n.match(dM)}return[e.join(";"),n]},pM=s=>{if(s!==void 0&&!Array.isArray(s))throw new TypeError("The parameterDescriptors property of given value for processorCtor is not an array.")},mM=s=>{if(!VD(s))throw new TypeError("The given value for processorCtor should be a constructor.");if(s.prototype===null||typeof s.prototype!="object")throw new TypeError("The given value for processorCtor should have a prototype.")},GD=(s,t,e,n,i,r,o,a,c,l,h,u,d)=>{let f=0;return(p,_,g={credentials:"omit"})=>{const m=h.get(p);if(m!==void 0&&m.has(_))return Promise.resolve();const x=l.get(p);if(x!==void 0){const b=x.get(_);if(b!==void 0)return b}const v=r(p),y=v.audioWorklet===void 0?i(_).then(([b,S])=>{const[M,T]=fM(b,S),A=`${M};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${T}
})})(window,'_AWGS')`;return e(A)}).then(()=>{const b=d._AWGS.pop();if(b===void 0)throw new SyntaxError;n(v.currentTime,v.sampleRate,()=>b(class{},void 0,(S,M)=>{if(S.trim()==="")throw t();const T=dy.get(v);if(T!==void 0){if(T.has(S))throw t();mM(M),pM(M.parameterDescriptors),T.set(S,M)}else mM(M),pM(M.parameterDescriptors),dy.set(v,new Map([[S,M]]))},v.sampleRate,void 0,void 0))}):Promise.all([i(_),Promise.resolve(s(u,u))]).then(([[b,S],M])=>{const T=f+1;f=T;const[A,w]=fM(b,S),P=`${A};((AudioWorkletProcessor,registerProcessor)=>{${w}
})(${M?"AudioWorkletProcessor":"class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}"},(n,p)=>registerProcessor(n,class extends p{${M?"":"__c = (a) => a.forEach(e=>this.__b.add(e.buffer));"}process(i,o,p){${M?"":"i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));"}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${T}',class extends AudioWorkletProcessor{process(){return !1}})`,D=new Blob([P],{type:"application/javascript; charset=utf-8"}),O=URL.createObjectURL(D);return v.audioWorklet.addModule(O,g).then(()=>{if(a(v))return v;const k=o(v);return k.audioWorklet.addModule(O,g).then(()=>k)}).then(k=>{if(c===null)throw new SyntaxError;try{new c(k,`__sac${T}`)}catch{throw new SyntaxError}}).finally(()=>URL.revokeObjectURL(O))});return x===void 0?l.set(p,new Map([[_,y]])):x.set(_,y),y.then(()=>{const b=h.get(p);b===void 0?h.set(p,new Set([_])):b.add(_)}).finally(()=>{const b=l.get(p);b!==void 0&&b.delete(_)}),y}},ks=(s,t)=>{const e=s.get(t);if(e===void 0)throw new Error("A value with the given key could not be found.");return e},Jm=(s,t)=>{const e=Array.from(s).filter(t);if(e.length>1)throw Error("More than one element was found.");if(e.length===0)throw Error("No element was found.");const[n]=e;return s.delete(n),n},jA=(s,t,e,n)=>{const i=ks(s,t),r=Jm(i,o=>o[0]===e&&o[1]===n);return i.size===0&&s.delete(t),r},Sd=s=>ks(WA,s),Zl=s=>{if(Yl.has(s))throw new Error("The AudioNode is already stored.");Yl.add(s),Sd(s).forEach(t=>t(!0))},XA=s=>"port"in s,Md=s=>{if(!Yl.has(s))throw new Error("The AudioNode is not stored.");Yl.delete(s),Sd(s).forEach(t=>t(!1))},py=(s,t)=>{!XA(s)&&t.every(e=>e.size===0)&&Md(s)},HD=(s,t,e,n,i,r,o,a,c,l,h,u,d)=>{const f=new WeakMap;return(p,_,g,m,x)=>{const{activeInputs:v,passiveInputs:y}=r(_),{outputs:b}=r(p),S=a(p),M=T=>{const A=c(_),w=c(p);if(T){const E=jA(y,p,g,m);s(v,p,E,!1),!x&&!u(p)&&e(w,A,g,m),d(_)&&Zl(_)}else{const E=n(v,p,g,m);t(y,m,E,!1),!x&&!u(p)&&i(w,A,g,m);const N=o(_);if(N===0)h(_)&&py(_,v);else{const I=f.get(_);I!==void 0&&clearTimeout(I),f.set(_,setTimeout(()=>{h(_)&&py(_,v)},N*1e3))}}};return l(b,[_,g,m],T=>T[0]===_&&T[1]===g&&T[2]===m,!0)?(S.add(M),h(p)?s(v,p,[g,m,M],!0):t(y,m,[p,g,M],!0),!0):!1}},$D=s=>(t,e,[n,i,r],o)=>{const a=t.get(n);a===void 0?t.set(n,new Set([[i,e,r]])):s(a,[i,e,r],c=>c[0]===i&&c[1]===e,o)},WD=s=>(t,e)=>{const n=s(t,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});e.connect(n).connect(t.destination);const i=()=>{e.removeEventListener("ended",i),e.disconnect(n),n.disconnect()};e.addEventListener("ended",i)},qD=s=>(t,e)=>{s(t).add(e)},jD={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",fftSize:2048,maxDecibels:-30,minDecibels:-100,smoothingTimeConstant:.8},XD=(s,t,e,n,i,r)=>class extends s{constructor(a,c){const l=i(a),h={...jD,...c},u=n(l,h),d=r(l)?t():null;super(a,!1,u,d),this._nativeAnalyserNode=u}get fftSize(){return this._nativeAnalyserNode.fftSize}set fftSize(a){this._nativeAnalyserNode.fftSize=a}get frequencyBinCount(){return this._nativeAnalyserNode.frequencyBinCount}get maxDecibels(){return this._nativeAnalyserNode.maxDecibels}set maxDecibels(a){const c=this._nativeAnalyserNode.maxDecibels;if(this._nativeAnalyserNode.maxDecibels=a,!(a>this._nativeAnalyserNode.minDecibels))throw this._nativeAnalyserNode.maxDecibels=c,e()}get minDecibels(){return this._nativeAnalyserNode.minDecibels}set minDecibels(a){const c=this._nativeAnalyserNode.minDecibels;if(this._nativeAnalyserNode.minDecibels=a,!(this._nativeAnalyserNode.maxDecibels>a))throw this._nativeAnalyserNode.minDecibels=c,e()}get smoothingTimeConstant(){return this._nativeAnalyserNode.smoothingTimeConstant}set smoothingTimeConstant(a){this._nativeAnalyserNode.smoothingTimeConstant=a}getByteFrequencyData(a){this._nativeAnalyserNode.getByteFrequencyData(a)}getByteTimeDomainData(a){this._nativeAnalyserNode.getByteTimeDomainData(a)}getFloatFrequencyData(a){this._nativeAnalyserNode.getFloatFrequencyData(a)}getFloatTimeDomainData(a){this._nativeAnalyserNode.getFloatTimeDomainData(a)}},ii=(s,t)=>s.context===t,YD=(s,t,e)=>()=>{const n=new WeakMap,i=async(r,o)=>{let a=t(r);if(!ii(a,o)){const l={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,fftSize:a.fftSize,maxDecibels:a.maxDecibels,minDecibels:a.minDecibels,smoothingTimeConstant:a.smoothingTimeConstant};a=s(o,l)}return n.set(o,a),await e(r,o,a),a};return{render(r,o){const a=n.get(o);return a!==void 0?Promise.resolve(a):i(r,o)}}},nm=s=>{try{s.copyToChannel(new Float32Array(1),0,-1)}catch{return!1}return!0},cr=()=>new DOMException("","IndexSizeError"),wv=s=>{s.getChannelData=(t=>e=>{try{return t.call(s,e)}catch(n){throw n.code===12?cr():n}})(s.getChannelData)},ZD={numberOfChannels:1},KD=(s,t,e,n,i,r,o,a)=>{let c=null;return class YA{constructor(h){if(i===null)throw new Error("Missing the native OfflineAudioContext constructor.");const{length:u,numberOfChannels:d,sampleRate:f}={...ZD,...h};c===null&&(c=new i(1,1,44100));const p=n!==null&&t(r,r)?new n({length:u,numberOfChannels:d,sampleRate:f}):c.createBuffer(d,u,f);if(p.numberOfChannels===0)throw e();return typeof p.copyFromChannel!="function"?(o(p),wv(p)):t(nm,()=>nm(p))||a(p),s.add(p),p}static[Symbol.hasInstance](h){return h!==null&&typeof h=="object"&&Object.getPrototypeOf(h)===YA.prototype||s.has(h)}}},Si=-34028234663852886e22,ci=-Si,Yr=s=>Yl.has(s),QD={buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1},JD=(s,t,e,n,i,r,o,a)=>class extends s{constructor(l,h){const u=r(l),d={...QD,...h},f=i(u,d),p=o(u),_=p?t():null;super(l,!1,f,_),this._audioBufferSourceNodeRenderer=_,this._isBufferNullified=!1,this._isBufferSet=d.buffer!==null,this._nativeAudioBufferSourceNode=f,this._onended=null,this._playbackRate=e(this,p,f.playbackRate,ci,Si)}get buffer(){return this._isBufferNullified?null:this._nativeAudioBufferSourceNode.buffer}set buffer(l){if(this._nativeAudioBufferSourceNode.buffer=l,l!==null){if(this._isBufferSet)throw n();this._isBufferSet=!0}}get loop(){return this._nativeAudioBufferSourceNode.loop}set loop(l){this._nativeAudioBufferSourceNode.loop=l}get loopEnd(){return this._nativeAudioBufferSourceNode.loopEnd}set loopEnd(l){this._nativeAudioBufferSourceNode.loopEnd=l}get loopStart(){return this._nativeAudioBufferSourceNode.loopStart}set loopStart(l){this._nativeAudioBufferSourceNode.loopStart=l}get onended(){return this._onended}set onended(l){const h=typeof l=="function"?a(this,l):null;this._nativeAudioBufferSourceNode.onended=h;const u=this._nativeAudioBufferSourceNode.onended;this._onended=u!==null&&u===h?l:u}get playbackRate(){return this._playbackRate}start(l=0,h=0,u){if(this._nativeAudioBufferSourceNode.start(l,h,u),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.start=u===void 0?[l,h]:[l,h,u]),this.context.state!=="closed"){Zl(this);const d=()=>{this._nativeAudioBufferSourceNode.removeEventListener("ended",d),Yr(this)&&Md(this)};this._nativeAudioBufferSourceNode.addEventListener("ended",d)}}stop(l=0){this._nativeAudioBufferSourceNode.stop(l),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.stop=l)}},tI=(s,t,e,n,i)=>()=>{const r=new WeakMap;let o=null,a=null;const c=async(l,h)=>{let u=e(l);const d=ii(u,h);if(!d){const f={buffer:u.buffer,channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,loop:u.loop,loopEnd:u.loopEnd,loopStart:u.loopStart,playbackRate:u.playbackRate.value};u=t(h,f),o!==null&&u.start(...o),a!==null&&u.stop(a)}return r.set(h,u),d?await s(h,l.playbackRate,u.playbackRate):await n(h,l.playbackRate,u.playbackRate),await i(l,h,u),u};return{set start(l){o=l},set stop(l){a=l},render(l,h){const u=r.get(h);return u!==void 0?Promise.resolve(u):c(l,h)}}},eI=s=>"playbackRate"in s,nI=s=>"frequency"in s&&"gain"in s,iI=s=>"offset"in s,sI=s=>!("frequency"in s)&&"gain"in s,rI=s=>"detune"in s&&"frequency"in s&&!("gain"in s),oI=s=>"pan"in s,di=s=>ks(HA,s),Td=s=>ks($A,s),my=(s,t)=>{const{activeInputs:e}=di(s);e.forEach(i=>i.forEach(([r])=>{t.includes(s)||my(r,[...t,s])}));const n=eI(s)?[s.playbackRate]:XA(s)?Array.from(s.parameters.values()):nI(s)?[s.Q,s.detune,s.frequency,s.gain]:iI(s)?[s.offset]:sI(s)?[s.gain]:rI(s)?[s.detune,s.frequency]:oI(s)?[s.pan]:[];for(const i of n){const r=Td(i);r!==void 0&&r.activeInputs.forEach(([o])=>my(o,t))}Yr(s)&&Md(s)},ZA=s=>{my(s.destination,[])},aI=s=>s===void 0||typeof s=="number"||typeof s=="string"&&(s==="balanced"||s==="interactive"||s==="playback"),cI=(s,t,e,n,i,r,o,a,c)=>class extends s{constructor(h={}){if(c===null)throw new Error("Missing the native AudioContext constructor.");let u;try{u=new c(h)}catch(p){throw p.code===12&&p.message==="sampleRate is not in range"?e():p}if(u===null)throw n();if(!aI(h.latencyHint))throw new TypeError(`The provided value '${h.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);if(h.sampleRate!==void 0&&u.sampleRate!==h.sampleRate)throw e();super(u,2);const{latencyHint:d}=h,{sampleRate:f}=u;if(this._baseLatency=typeof u.baseLatency=="number"?u.baseLatency:d==="balanced"?512/f:d==="interactive"||d===void 0?256/f:d==="playback"?1024/f:Math.max(2,Math.min(128,Math.round(d*f/128)))*128/f,this._nativeAudioContext=u,c.name==="webkitAudioContext"?(this._nativeGainNode=u.createGain(),this._nativeOscillatorNode=u.createOscillator(),this._nativeGainNode.gain.value=1e-37,this._nativeOscillatorNode.connect(this._nativeGainNode).connect(u.destination),this._nativeOscillatorNode.start()):(this._nativeGainNode=null,this._nativeOscillatorNode=null),this._state=null,u.state==="running"){this._state="suspended";const p=()=>{this._state==="suspended"&&(this._state=null),u.removeEventListener("statechange",p)};u.addEventListener("statechange",p)}}get baseLatency(){return this._baseLatency}get state(){return this._state!==null?this._state:this._nativeAudioContext.state}close(){return this.state==="closed"?this._nativeAudioContext.close().then(()=>{throw t()}):(this._state==="suspended"&&(this._state=null),this._nativeAudioContext.close().then(()=>{this._nativeGainNode!==null&&this._nativeOscillatorNode!==null&&(this._nativeOscillatorNode.stop(),this._nativeGainNode.disconnect(),this._nativeOscillatorNode.disconnect()),ZA(this)}))}createMediaElementSource(h){return new i(this,{mediaElement:h})}createMediaStreamDestination(){return new r(this)}createMediaStreamSource(h){return new o(this,{mediaStream:h})}createMediaStreamTrackSource(h){return new a(this,{mediaStreamTrack:h})}resume(){return this._state==="suspended"?new Promise((h,u)=>{const d=()=>{this._nativeAudioContext.removeEventListener("statechange",d),this._nativeAudioContext.state==="running"?h():this.resume().then(h,u)};this._nativeAudioContext.addEventListener("statechange",d)}):this._nativeAudioContext.resume().catch(h=>{throw h===void 0||h.code===15?t():h})}suspend(){return this._nativeAudioContext.suspend().catch(h=>{throw h===void 0?t():h})}},lI=(s,t,e,n,i,r,o,a)=>class extends s{constructor(l,h){const u=r(l),d=o(u),f=i(u,h,d),p=d?t(a):null;super(l,!1,f,p),this._isNodeOfNativeOfflineAudioContext=d,this._nativeAudioDestinationNode=f}get channelCount(){return this._nativeAudioDestinationNode.channelCount}set channelCount(l){if(this._isNodeOfNativeOfflineAudioContext)throw n();if(l>this._nativeAudioDestinationNode.maxChannelCount)throw e();this._nativeAudioDestinationNode.channelCount=l}get channelCountMode(){return this._nativeAudioDestinationNode.channelCountMode}set channelCountMode(l){if(this._isNodeOfNativeOfflineAudioContext)throw n();this._nativeAudioDestinationNode.channelCountMode=l}get maxChannelCount(){return this._nativeAudioDestinationNode.maxChannelCount}},hI=s=>{const t=new WeakMap,e=async(n,i)=>{const r=i.destination;return t.set(i,r),await s(n,i,r),r};return{render(n,i){const r=t.get(i);return r!==void 0?Promise.resolve(r):e(n,i)}}},uI=(s,t,e,n,i,r,o,a)=>(c,l)=>{const h=l.listener,u=()=>{const b=new Float32Array(1),S=t(l,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:9}),M=o(l);let T=!1,A=[0,0,-1,0,1,0],w=[0,0,0];const E=()=>{if(T)return;T=!0;const D=n(l,256,9,0);D.onaudioprocess=({inputBuffer:O})=>{const k=[r(O,b,0),r(O,b,1),r(O,b,2),r(O,b,3),r(O,b,4),r(O,b,5)];k.some((Y,U)=>Y!==A[U])&&(h.setOrientation(...k),A=k);const z=[r(O,b,6),r(O,b,7),r(O,b,8)];z.some((Y,U)=>Y!==w[U])&&(h.setPosition(...z),w=z)},S.connect(D)},N=D=>O=>{O!==A[D]&&(A[D]=O,h.setOrientation(...A))},I=D=>O=>{O!==w[D]&&(w[D]=O,h.setPosition(...w))},P=(D,O,k)=>{const z=e(l,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:O});z.connect(S,0,D),z.start(),Object.defineProperty(z.offset,"defaultValue",{get(){return O}});const Y=s({context:c},M,z.offset,ci,Si);return a(Y,"value",U=>()=>U.call(Y),U=>W=>{try{U.call(Y,W)}catch(lt){if(lt.code!==9)throw lt}E(),M&&k(W)}),Y.cancelAndHoldAtTime=(U=>M?()=>{throw i()}:(...W)=>{const lt=U.apply(Y,W);return E(),lt})(Y.cancelAndHoldAtTime),Y.cancelScheduledValues=(U=>M?()=>{throw i()}:(...W)=>{const lt=U.apply(Y,W);return E(),lt})(Y.cancelScheduledValues),Y.exponentialRampToValueAtTime=(U=>M?()=>{throw i()}:(...W)=>{const lt=U.apply(Y,W);return E(),lt})(Y.exponentialRampToValueAtTime),Y.linearRampToValueAtTime=(U=>M?()=>{throw i()}:(...W)=>{const lt=U.apply(Y,W);return E(),lt})(Y.linearRampToValueAtTime),Y.setTargetAtTime=(U=>M?()=>{throw i()}:(...W)=>{const lt=U.apply(Y,W);return E(),lt})(Y.setTargetAtTime),Y.setValueAtTime=(U=>M?()=>{throw i()}:(...W)=>{const lt=U.apply(Y,W);return E(),lt})(Y.setValueAtTime),Y.setValueCurveAtTime=(U=>M?()=>{throw i()}:(...W)=>{const lt=U.apply(Y,W);return E(),lt})(Y.setValueCurveAtTime),Y};return{forwardX:P(0,0,N(0)),forwardY:P(1,0,N(1)),forwardZ:P(2,-1,N(2)),positionX:P(6,0,I(0)),positionY:P(7,0,I(1)),positionZ:P(8,0,I(2)),upX:P(3,0,N(3)),upY:P(4,1,N(4)),upZ:P(5,0,N(5))}},{forwardX:d,forwardY:f,forwardZ:p,positionX:_,positionY:g,positionZ:m,upX:x,upY:v,upZ:y}=h.forwardX===void 0?u():h;return{get forwardX(){return d},get forwardY(){return f},get forwardZ(){return p},get positionX(){return _},get positionY(){return g},get positionZ(){return m},get upX(){return x},get upY(){return v},get upZ(){return y}}},im=s=>"context"in s,wd=s=>im(s[0]),xc=(s,t,e,n)=>{for(const i of s)if(e(i)){if(n)return!1;throw Error("The set contains at least one similar element.")}return s.add(t),!0},gM=(s,t,[e,n],i)=>{xc(s,[t,e,n],r=>r[0]===t&&r[1]===e,i)},_M=(s,[t,e,n],i)=>{const r=s.get(t);r===void 0?s.set(t,new Set([[e,n]])):xc(r,[e,n],o=>o[0]===e,i)},xh=s=>"inputs"in s,sm=(s,t,e,n)=>{if(xh(t)){const i=t.inputs[n];return s.connect(i,e,0),[i,e,0]}return s.connect(t,e,n),[t,e,n]},KA=(s,t,e)=>{for(const n of s)if(n[0]===t&&n[1]===e)return s.delete(n),n;return null},dI=(s,t,e)=>Jm(s,n=>n[0]===t&&n[1]===e),QA=(s,t)=>{if(!Sd(s).delete(t))throw new Error("Missing the expected event listener.")},JA=(s,t,e)=>{const n=ks(s,t),i=Jm(n,r=>r[0]===e);return n.size===0&&s.delete(t),i},rm=(s,t,e,n)=>{xh(t)?s.disconnect(t.inputs[n],e,0):s.disconnect(t,e,n)},Xe=s=>ks(Mv,s),zu=s=>ks(Tv,s),nc=s=>uy.has(s),Np=s=>!Yl.has(s),yM=(s,t)=>new Promise(e=>{if(t!==null)e(!0);else{const n=s.createScriptProcessor(256,1,1),i=s.createGain(),r=s.createBuffer(1,2,44100),o=r.getChannelData(0);o[0]=1,o[1]=1;const a=s.createBufferSource();a.buffer=r,a.loop=!0,a.connect(n).connect(s.destination),a.connect(i),a.disconnect(i),n.onaudioprocess=c=>{const l=c.inputBuffer.getChannelData(0);Array.prototype.some.call(l,h=>h===1)?e(!0):e(!1),a.stop(),n.onaudioprocess=null,a.disconnect(n),n.disconnect(s.destination)},a.start()}}),u_=(s,t)=>{const e=new Map;for(const n of s)for(const i of n){const r=e.get(i);e.set(i,r===void 0?1:r+1)}e.forEach((n,i)=>t(i,n))},om=s=>"context"in s,fI=s=>{const t=new Map;s.connect=(e=>(n,i=0,r=0)=>{const o=om(n)?e(n,i,r):e(n,i),a=t.get(n);return a===void 0?t.set(n,[{input:r,output:i}]):a.every(c=>c.input!==r||c.output!==i)&&a.push({input:r,output:i}),o})(s.connect.bind(s)),s.disconnect=(e=>(n,i,r)=>{if(e.apply(s),n===void 0)t.clear();else if(typeof n=="number")for(const[o,a]of t){const c=a.filter(l=>l.output!==n);c.length===0?t.delete(o):t.set(o,c)}else if(t.has(n))if(i===void 0)t.delete(n);else{const o=t.get(n);if(o!==void 0){const a=o.filter(c=>c.output!==i&&(c.input!==r||r===void 0));a.length===0?t.delete(n):t.set(n,a)}}for(const[o,a]of t)a.forEach(c=>{om(o)?s.connect(o,c.output,c.input):s.connect(o,c.output)})})(s.disconnect)},pI=(s,t,e,n)=>{const{activeInputs:i,passiveInputs:r}=Td(t),{outputs:o}=di(s),a=Sd(s),c=l=>{const h=Xe(s),u=zu(t);if(l){const d=JA(r,s,e);gM(i,s,d,!1),!n&&!nc(s)&&h.connect(u,e)}else{const d=dI(i,s,e);_M(r,d,!1),!n&&!nc(s)&&h.disconnect(u,e)}};return xc(o,[t,e],l=>l[0]===t&&l[1]===e,!0)?(a.add(c),Yr(s)?gM(i,s,[e,c],!0):_M(r,[s,e,c],!0),!0):!1},mI=(s,t,e,n)=>{const{activeInputs:i,passiveInputs:r}=di(t),o=KA(i[n],s,e);return o===null?[jA(r,s,e,n)[2],!1]:[o[2],!0]},gI=(s,t,e)=>{const{activeInputs:n,passiveInputs:i}=Td(t),r=KA(n,s,e);return r===null?[JA(i,s,e)[1],!1]:[r[2],!0]},Av=(s,t,e,n,i)=>{const[r,o]=mI(s,e,n,i);if(r!==null&&(QA(s,r),o&&!t&&!nc(s)&&rm(Xe(s),Xe(e),n,i)),Yr(e)){const{activeInputs:a}=di(e);py(e,a)}},Ev=(s,t,e,n)=>{const[i,r]=gI(s,e,n);i!==null&&(QA(s,i),r&&!t&&!nc(s)&&Xe(s).disconnect(zu(e),n))},_I=(s,t)=>{const e=di(s),n=[];for(const i of e.outputs)wd(i)?Av(s,t,...i):Ev(s,t,...i),n.push(i[0]);return e.outputs.clear(),n},yI=(s,t,e)=>{const n=di(s),i=[];for(const r of n.outputs)r[1]===e&&(wd(r)?Av(s,t,...r):Ev(s,t,...r),i.push(r[0]),n.outputs.delete(r));return i},xI=(s,t,e,n,i)=>{const r=di(s);return Array.from(r.outputs).filter(o=>o[0]===e&&(n===void 0||o[1]===n)&&(i===void 0||o[2]===i)).map(o=>(wd(o)?Av(s,t,...o):Ev(s,t,...o),r.outputs.delete(o),o[0]))},vI=(s,t,e,n,i,r,o,a,c,l,h,u,d,f,p,_)=>class extends l{constructor(m,x,v,y){super(v),this._context=m,this._nativeAudioNode=v;const b=h(m);u(b)&&e(yM,()=>yM(b,_))!==!0&&fI(v),Mv.set(this,v),WA.set(this,new Set),m.state!=="closed"&&x&&Zl(this),s(this,y,v)}get channelCount(){return this._nativeAudioNode.channelCount}set channelCount(m){this._nativeAudioNode.channelCount=m}get channelCountMode(){return this._nativeAudioNode.channelCountMode}set channelCountMode(m){this._nativeAudioNode.channelCountMode=m}get channelInterpretation(){return this._nativeAudioNode.channelInterpretation}set channelInterpretation(m){this._nativeAudioNode.channelInterpretation=m}get context(){return this._context}get numberOfInputs(){return this._nativeAudioNode.numberOfInputs}get numberOfOutputs(){return this._nativeAudioNode.numberOfOutputs}connect(m,x=0,v=0){if(x<0||x>=this._nativeAudioNode.numberOfOutputs)throw i();const y=h(this._context),b=p(y);if(d(m)||f(m))throw r();if(im(m)){const T=Xe(m);try{const w=sm(this._nativeAudioNode,T,x,v),E=Np(this);(b||E)&&this._nativeAudioNode.disconnect(...w),this.context.state!=="closed"&&!E&&Np(m)&&Zl(m)}catch(w){throw w.code===12?r():w}if(t(this,m,x,v,b)){const w=c([this],m);u_(w,n(b))}return m}const S=zu(m);if(S.name==="playbackRate"&&S.maxValue===1024)throw o();try{this._nativeAudioNode.connect(S,x),(b||Np(this))&&this._nativeAudioNode.disconnect(S,x)}catch(T){throw T.code===12?r():T}if(pI(this,m,x,b)){const T=c([this],m);u_(T,n(b))}}disconnect(m,x,v){let y;const b=h(this._context),S=p(b);if(m===void 0)y=_I(this,S);else if(typeof m=="number"){if(m<0||m>=this.numberOfOutputs)throw i();y=yI(this,S,m)}else{if(x!==void 0&&(x<0||x>=this.numberOfOutputs)||im(m)&&v!==void 0&&(v<0||v>=m.numberOfInputs))throw i();if(y=xI(this,S,m,x,v),y.length===0)throw r()}for(const M of y){const T=c([this],M);u_(T,a)}}},bI=(s,t,e,n,i,r,o,a,c,l,h,u,d)=>(f,p,_,g=null,m=null)=>{const x=_.value,v=new PD(x),y=p?n(v):null,b={get defaultValue(){return x},get maxValue(){return g===null?_.maxValue:g},get minValue(){return m===null?_.minValue:m},get value(){return _.value},set value(S){_.value=S,b.setValueAtTime(S,f.context.currentTime)},cancelAndHoldAtTime(S){if(typeof _.cancelAndHoldAtTime=="function")y===null&&v.flush(f.context.currentTime),v.add(i(S)),_.cancelAndHoldAtTime(S);else{const M=Array.from(v).pop();y===null&&v.flush(f.context.currentTime),v.add(i(S));const T=Array.from(v).pop();_.cancelScheduledValues(S),M!==T&&T!==void 0&&(T.type==="exponentialRampToValue"?_.exponentialRampToValueAtTime(T.value,T.endTime):T.type==="linearRampToValue"?_.linearRampToValueAtTime(T.value,T.endTime):T.type==="setValue"?_.setValueAtTime(T.value,T.startTime):T.type==="setValueCurve"&&_.setValueCurveAtTime(T.values,T.startTime,T.duration))}return b},cancelScheduledValues(S){return y===null&&v.flush(f.context.currentTime),v.add(r(S)),_.cancelScheduledValues(S),b},exponentialRampToValueAtTime(S,M){if(S===0)throw new RangeError;if(!Number.isFinite(M)||M<0)throw new RangeError;const T=f.context.currentTime;return y===null&&v.flush(T),Array.from(v).length===0&&(v.add(l(x,T)),_.setValueAtTime(x,T)),v.add(o(S,M)),_.exponentialRampToValueAtTime(S,M),b},linearRampToValueAtTime(S,M){const T=f.context.currentTime;return y===null&&v.flush(T),Array.from(v).length===0&&(v.add(l(x,T)),_.setValueAtTime(x,T)),v.add(a(S,M)),_.linearRampToValueAtTime(S,M),b},setTargetAtTime(S,M,T){return y===null&&v.flush(f.context.currentTime),v.add(c(S,M,T)),_.setTargetAtTime(S,M,T),b},setValueAtTime(S,M){return y===null&&v.flush(f.context.currentTime),v.add(l(S,M)),_.setValueAtTime(S,M),b},setValueCurveAtTime(S,M,T){const A=S instanceof Float32Array?S:new Float32Array(S);if(u!==null&&u.name==="webkitAudioContext"){const w=M+T,E=f.context.sampleRate,N=Math.ceil(M*E),I=Math.floor(w*E),P=I-N,D=new Float32Array(P);for(let k=0;k<P;k+=1){const z=(A.length-1)/T*((N+k)/E-M),Y=Math.floor(z),U=Math.ceil(z);D[k]=Y===U?A[Y]:(1-(z-Y))*A[Y]+(1-(U-z))*A[U]}y===null&&v.flush(f.context.currentTime),v.add(h(D,M,T)),_.setValueCurveAtTime(D,M,T);const O=I/E;O<w&&d(b,D[D.length-1],O),d(b,A[A.length-1],w)}else y===null&&v.flush(f.context.currentTime),v.add(h(A,M,T)),_.setValueCurveAtTime(A,M,T);return b}};return e.set(b,_),t.set(b,f),s(b,y),b},SI=s=>({replay(t){for(const e of s)if(e.type==="exponentialRampToValue"){const{endTime:n,value:i}=e;t.exponentialRampToValueAtTime(i,n)}else if(e.type==="linearRampToValue"){const{endTime:n,value:i}=e;t.linearRampToValueAtTime(i,n)}else if(e.type==="setTarget"){const{startTime:n,target:i,timeConstant:r}=e;t.setTargetAtTime(i,n,r)}else if(e.type==="setValue"){const{startTime:n,value:i}=e;t.setValueAtTime(i,n)}else if(e.type==="setValueCurve"){const{duration:n,startTime:i,values:r}=e;t.setValueCurveAtTime(r,i,n)}else throw new Error("Can't apply an unknown automation.")}});class tE{constructor(t){this._map=new Map(t)}get size(){return this._map.size}entries(){return this._map.entries()}forEach(t,e=null){return this._map.forEach((n,i)=>t.call(e,n,i,this))}get(t){return this._map.get(t)}has(t){return this._map.has(t)}keys(){return this._map.keys()}values(){return this._map.values()}}const MI={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:1,numberOfOutputs:1,parameterData:{},processorOptions:{}},TI=(s,t,e,n,i,r,o,a,c,l,h,u,d,f)=>class extends t{constructor(_,g,m){var x;const v=a(_),y=c(v),b=h({...MI,...m});d(b);const S=dy.get(v),M=S==null?void 0:S.get(g),T=y||v.state!=="closed"?v:(x=o(v))!==null&&x!==void 0?x:v,A=i(T,y?null:_.baseLatency,l,g,M,b),w=y?n(g,b,M):null;super(_,!0,A,w);const E=[];A.parameters.forEach((I,P)=>{const D=e(this,y,I);E.push([P,D])}),this._nativeAudioWorkletNode=A,this._onprocessorerror=null,this._parameters=new tE(E),y&&s(v,this);const{activeInputs:N}=r(this);u(A,N)}get onprocessorerror(){return this._onprocessorerror}set onprocessorerror(_){const g=typeof _=="function"?f(this,_):null;this._nativeAudioWorkletNode.onprocessorerror=g;const m=this._nativeAudioWorkletNode.onprocessorerror;this._onprocessorerror=m!==null&&m===g?_:m}get parameters(){return this._parameters===null?this._nativeAudioWorkletNode.parameters:this._parameters}get port(){return this._nativeAudioWorkletNode.port}};function am(s,t,e,n,i){if(typeof s.copyFromChannel=="function")t[e].byteLength===0&&(t[e]=new Float32Array(128)),s.copyFromChannel(t[e],n,i);else{const r=s.getChannelData(n);if(t[e].byteLength===0)t[e]=r.slice(i,i+128);else{const o=new Float32Array(r.buffer,i*Float32Array.BYTES_PER_ELEMENT,128);t[e].set(o)}}}const eE=(s,t,e,n,i)=>{typeof s.copyToChannel=="function"?t[e].byteLength!==0&&s.copyToChannel(t[e],n,i):t[e].byteLength!==0&&s.getChannelData(n).set(t[e],i)},cm=(s,t)=>{const e=[];for(let n=0;n<s;n+=1){const i=[],r=typeof t=="number"?t:t[n];for(let o=0;o<r;o+=1)i.push(new Float32Array(128));e.push(i)}return e},wI=(s,t)=>{const e=ks(fy,s),n=Xe(t);return ks(e,n)},AI=async(s,t,e,n,i,r,o)=>{const a=t===null?Math.ceil(s.context.length/128)*128:t.length,c=n.channelCount*n.numberOfInputs,l=i.reduce((g,m)=>g+m,0),h=l===0?null:e.createBuffer(l,a,e.sampleRate);if(r===void 0)throw new Error("Missing the processor constructor.");const u=di(s),d=await wI(e,s),f=cm(n.numberOfInputs,n.channelCount),p=cm(n.numberOfOutputs,i),_=Array.from(s.parameters.keys()).reduce((g,m)=>({...g,[m]:new Float32Array(128)}),{});for(let g=0;g<a;g+=128){if(n.numberOfInputs>0&&t!==null)for(let m=0;m<n.numberOfInputs;m+=1)for(let x=0;x<n.channelCount;x+=1)am(t,f[m],x,x,g);r.parameterDescriptors!==void 0&&t!==null&&r.parameterDescriptors.forEach(({name:m},x)=>{am(t,_,m,c+x,g)});for(let m=0;m<n.numberOfInputs;m+=1)for(let x=0;x<i[m];x+=1)p[m][x].byteLength===0&&(p[m][x]=new Float32Array(128));try{const m=f.map((v,y)=>u.activeInputs[y].size===0?[]:v),x=o(g/e.sampleRate,e.sampleRate,()=>d.process(m,p,_));if(h!==null)for(let v=0,y=0;v<n.numberOfOutputs;v+=1){for(let b=0;b<i[v];b+=1)eE(h,p[v],b,y+b,g);y+=i[v]}if(!x)break}catch(m){s.dispatchEvent(new ErrorEvent("processorerror",{colno:m.colno,filename:m.filename,lineno:m.lineno,message:m.message}));break}}return h},EI=(s,t,e,n,i,r,o,a,c,l,h,u,d,f,p,_)=>(g,m,x)=>{const v=new WeakMap;let y=null;const b=async(S,M)=>{let T=h(S),A=null;const w=ii(T,M),E=Array.isArray(m.outputChannelCount)?m.outputChannelCount:Array.from(m.outputChannelCount);if(u===null){const N=E.reduce((O,k)=>O+k,0),I=i(M,{channelCount:Math.max(1,N),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,N)}),P=[];for(let O=0;O<S.numberOfOutputs;O+=1)P.push(n(M,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:E[O]}));const D=o(M,{channelCount:m.channelCount,channelCountMode:m.channelCountMode,channelInterpretation:m.channelInterpretation,gain:1});D.connect=t.bind(null,P),D.disconnect=c.bind(null,P),A=[I,P,D]}else w||(T=new u(M,g));if(v.set(M,A===null?T:A[2]),A!==null){if(y===null){if(x===void 0)throw new Error("Missing the processor constructor.");if(d===null)throw new Error("Missing the native OfflineAudioContext constructor.");const k=S.channelCount*S.numberOfInputs,z=x.parameterDescriptors===void 0?0:x.parameterDescriptors.length,Y=k+z;y=AI(S,Y===0?null:await(async()=>{const W=new d(Y,Math.ceil(S.context.length/128)*128,M.sampleRate),lt=[],wt=[];for(let nt=0;nt<m.numberOfInputs;nt+=1)lt.push(o(W,{channelCount:m.channelCount,channelCountMode:m.channelCountMode,channelInterpretation:m.channelInterpretation,gain:1})),wt.push(i(W,{channelCount:m.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:m.channelCount}));const H=await Promise.all(Array.from(S.parameters.values()).map(async nt=>{const at=r(W,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:nt.value});return await f(W,nt,at.offset),at})),B=n(W,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,k+z)});for(let nt=0;nt<m.numberOfInputs;nt+=1){lt[nt].connect(wt[nt]);for(let at=0;at<m.channelCount;at+=1)wt[nt].connect(B,at,nt*m.channelCount+at)}for(const[nt,at]of H.entries())at.connect(B,0,k+nt),at.start(0);return B.connect(W.destination),await Promise.all(lt.map(nt=>p(S,W,nt))),_(W)})(),M,m,E,x,l)}const N=await y,I=e(M,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),[P,D,O]=A;N!==null&&(I.buffer=N,I.start(0)),I.connect(P);for(let k=0,z=0;k<S.numberOfOutputs;k+=1){const Y=D[k];for(let U=0;U<E[k];U+=1)P.connect(Y,z+U,U);z+=E[k]}return O}if(w)for(const[N,I]of S.parameters.entries())await s(M,I,T.parameters.get(N));else for(const[N,I]of S.parameters.entries())await f(M,I,T.parameters.get(N));return await p(S,M,T),T};return{render(S,M){a(M,S);const T=v.get(M);return T!==void 0?Promise.resolve(T):b(S,M)}}},CI=(s,t,e,n,i,r,o,a,c,l,h,u,d,f,p,_,g,m,x,v)=>class extends p{constructor(b,S){super(b,S),this._nativeContext=b,this._audioWorklet=s===void 0?void 0:{addModule:(M,T)=>s(this,M,T)}}get audioWorklet(){return this._audioWorklet}createAnalyser(){return new t(this)}createBiquadFilter(){return new i(this)}createBuffer(b,S,M){return new e({length:S,numberOfChannels:b,sampleRate:M})}createBufferSource(){return new n(this)}createChannelMerger(b=6){return new r(this,{numberOfInputs:b})}createChannelSplitter(b=6){return new o(this,{numberOfOutputs:b})}createConstantSource(){return new a(this)}createConvolver(){return new c(this)}createDelay(b=1){return new h(this,{maxDelayTime:b})}createDynamicsCompressor(){return new u(this)}createGain(){return new d(this)}createIIRFilter(b,S){return new f(this,{feedback:S,feedforward:b})}createOscillator(){return new _(this)}createPanner(){return new g(this)}createPeriodicWave(b,S,M={disableNormalization:!1}){return new m(this,{...M,imag:S,real:b})}createStereoPanner(){return new x(this)}createWaveShaper(){return new v(this)}decodeAudioData(b,S,M){return l(this._nativeContext,b).then(T=>(typeof S=="function"&&S(T),T),T=>{throw typeof M=="function"&&M(T),T})}},RI={Q:1,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:350,gain:0,type:"lowpass"},NI=(s,t,e,n,i,r,o,a)=>class extends s{constructor(l,h){const u=r(l),d={...RI,...h},f=i(u,d),p=o(u),_=p?e():null;super(l,!1,f,_),this._Q=t(this,p,f.Q,ci,Si),this._detune=t(this,p,f.detune,1200*Math.log2(ci),-1200*Math.log2(ci)),this._frequency=t(this,p,f.frequency,l.sampleRate/2,0),this._gain=t(this,p,f.gain,40*Math.log10(ci),Si),this._nativeBiquadFilterNode=f,a(this,1)}get detune(){return this._detune}get frequency(){return this._frequency}get gain(){return this._gain}get Q(){return this._Q}get type(){return this._nativeBiquadFilterNode.type}set type(l){this._nativeBiquadFilterNode.type=l}getFrequencyResponse(l,h,u){try{this._nativeBiquadFilterNode.getFrequencyResponse(l,h,u)}catch(d){throw d.code===11?n():d}if(l.length!==h.length||h.length!==u.length)throw n()}},PI=(s,t,e,n,i)=>()=>{const r=new WeakMap,o=async(a,c)=>{let l=e(a);const h=ii(l,c);if(!h){const u={Q:l.Q.value,channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,detune:l.detune.value,frequency:l.frequency.value,gain:l.gain.value,type:l.type};l=t(c,u)}return r.set(c,l),h?(await s(c,a.Q,l.Q),await s(c,a.detune,l.detune),await s(c,a.frequency,l.frequency),await s(c,a.gain,l.gain)):(await n(c,a.Q,l.Q),await n(c,a.detune,l.detune),await n(c,a.frequency,l.frequency),await n(c,a.gain,l.gain)),await i(a,c,l),l};return{render(a,c){const l=r.get(c);return l!==void 0?Promise.resolve(l):o(a,c)}}},DI=(s,t)=>(e,n)=>{const i=t.get(e);if(i!==void 0)return i;const r=s.get(e);if(r!==void 0)return r;try{const o=n();return o instanceof Promise?(s.set(e,o),o.catch(()=>!1).then(a=>(s.delete(e),t.set(e,a),a))):(t.set(e,o),o)}catch{return t.set(e,!1),!1}},II={channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6},FI=(s,t,e,n,i)=>class extends s{constructor(o,a){const c=n(o),l={...II,...a},h=e(c,l),u=i(c)?t():null;super(o,!1,h,u)}},OI=(s,t,e)=>()=>{const n=new WeakMap,i=async(r,o)=>{let a=t(r);if(!ii(a,o)){const l={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,numberOfInputs:a.numberOfInputs};a=s(o,l)}return n.set(o,a),await e(r,o,a),a};return{render(r,o){const a=n.get(o);return a!==void 0?Promise.resolve(a):i(r,o)}}},LI={channelCount:6,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:6},BI=(s,t,e,n,i,r)=>class extends s{constructor(a,c){const l=n(a),h=r({...LI,...c}),u=e(l,h),d=i(l)?t():null;super(a,!1,u,d)}},UI=(s,t,e)=>()=>{const n=new WeakMap,i=async(r,o)=>{let a=t(r);if(!ii(a,o)){const l={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,numberOfOutputs:a.numberOfOutputs};a=s(o,l)}return n.set(o,a),await e(r,o,a),a};return{render(r,o){const a=n.get(o);return a!==void 0?Promise.resolve(a):i(r,o)}}},kI=s=>(t,e,n)=>s(e,t,n),zI=s=>(t,e,n=0,i=0)=>{const r=t[n];if(r===void 0)throw s();return om(e)?r.connect(e,0,i):r.connect(e,0)},VI=s=>(t,e)=>{const n=s(t,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),i=t.createBuffer(1,2,44100);return n.buffer=i,n.loop=!0,n.connect(e),n.start(),()=>{n.stop(),n.disconnect(e)}},GI={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",offset:1},HI=(s,t,e,n,i,r,o)=>class extends s{constructor(c,l){const h=i(c),u={...GI,...l},d=n(h,u),f=r(h),p=f?e():null;super(c,!1,d,p),this._constantSourceNodeRenderer=p,this._nativeConstantSourceNode=d,this._offset=t(this,f,d.offset,ci,Si),this._onended=null}get offset(){return this._offset}get onended(){return this._onended}set onended(c){const l=typeof c=="function"?o(this,c):null;this._nativeConstantSourceNode.onended=l;const h=this._nativeConstantSourceNode.onended;this._onended=h!==null&&h===l?c:h}start(c=0){if(this._nativeConstantSourceNode.start(c),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.start=c),this.context.state!=="closed"){Zl(this);const l=()=>{this._nativeConstantSourceNode.removeEventListener("ended",l),Yr(this)&&Md(this)};this._nativeConstantSourceNode.addEventListener("ended",l)}}stop(c=0){this._nativeConstantSourceNode.stop(c),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.stop=c)}},$I=(s,t,e,n,i)=>()=>{const r=new WeakMap;let o=null,a=null;const c=async(l,h)=>{let u=e(l);const d=ii(u,h);if(!d){const f={channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,offset:u.offset.value};u=t(h,f),o!==null&&u.start(o),a!==null&&u.stop(a)}return r.set(h,u),d?await s(h,l.offset,u.offset):await n(h,l.offset,u.offset),await i(l,h,u),u};return{set start(l){o=l},set stop(l){a=l},render(l,h){const u=r.get(h);return u!==void 0?Promise.resolve(u):c(l,h)}}},WI=s=>t=>(s[0]=t,s[0]),qI={buffer:null,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",disableNormalization:!1},jI=(s,t,e,n,i,r)=>class extends s{constructor(a,c){const l=n(a),h={...qI,...c},u=e(l,h),f=i(l)?t():null;super(a,!1,u,f),this._isBufferNullified=!1,this._nativeConvolverNode=u,h.buffer!==null&&r(this,h.buffer.duration)}get buffer(){return this._isBufferNullified?null:this._nativeConvolverNode.buffer}set buffer(a){if(this._nativeConvolverNode.buffer=a,a===null&&this._nativeConvolverNode.buffer!==null){const c=this._nativeConvolverNode.context;this._nativeConvolverNode.buffer=c.createBuffer(1,1,c.sampleRate),this._isBufferNullified=!0,r(this,0)}else this._isBufferNullified=!1,r(this,this._nativeConvolverNode.buffer===null?0:this._nativeConvolverNode.buffer.duration)}get normalize(){return this._nativeConvolverNode.normalize}set normalize(a){this._nativeConvolverNode.normalize=a}},XI=(s,t,e)=>()=>{const n=new WeakMap,i=async(r,o)=>{let a=t(r);if(!ii(a,o)){const l={buffer:a.buffer,channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,disableNormalization:!a.normalize};a=s(o,l)}return n.set(o,a),xh(a)?await e(r,o,a.inputs[0]):await e(r,o,a),a};return{render(r,o){const a=n.get(o);return a!==void 0?Promise.resolve(a):i(r,o)}}},YI=(s,t)=>(e,n,i)=>{if(t===null)throw new Error("Missing the native OfflineAudioContext constructor.");try{return new t(e,n,i)}catch(r){throw r.name==="SyntaxError"?s():r}},ZI=()=>new DOMException("","DataCloneError"),xM=s=>{const{port1:t,port2:e}=new MessageChannel;return new Promise(n=>{const i=()=>{e.onmessage=null,t.close(),e.close(),n()};e.onmessage=()=>i();try{t.postMessage(s,[s])}catch{}finally{i()}})},KI=(s,t,e,n,i,r,o,a,c,l,h)=>(u,d)=>{const f=o(u)?u:r(u);if(i.has(d)){const p=e();return Promise.reject(p)}try{i.add(d)}catch{}return t(c,()=>c(f))?f.decodeAudioData(d).then(p=>(xM(d).catch(()=>{}),t(a,()=>a(p))||h(p),s.add(p),p)):new Promise((p,_)=>{const g=async()=>{try{await xM(d)}catch{}},m=x=>{_(x),g()};try{f.decodeAudioData(d,x=>{typeof x.copyFromChannel!="function"&&(l(x),wv(x)),s.add(x),g().then(()=>p(x))},x=>{m(x===null?n():x)})}catch(x){m(x)}})},QI=(s,t,e,n,i,r,o,a)=>(c,l)=>{const h=t.get(c);if(h===void 0)throw new Error("Missing the expected cycle count.");const u=r(c.context),d=a(u);if(h===l){if(t.delete(c),!d&&o(c)){const f=n(c),{outputs:p}=e(c);for(const _ of p)if(wd(_)){const g=n(_[0]);s(f,g,_[1],_[2])}else{const g=i(_[0]);f.connect(g,_[1])}}}else t.set(c,h-l)},JI={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",delayTime:0,maxDelayTime:1},tF=(s,t,e,n,i,r,o)=>class extends s{constructor(c,l){const h=i(c),u={...JI,...l},d=n(h,u),f=r(h),p=f?e(u.maxDelayTime):null;super(c,!1,d,p),this._delayTime=t(this,f,d.delayTime),o(this,u.maxDelayTime)}get delayTime(){return this._delayTime}},eF=(s,t,e,n,i)=>r=>{const o=new WeakMap,a=async(c,l)=>{let h=e(c);const u=ii(h,l);if(!u){const d={channelCount:h.channelCount,channelCountMode:h.channelCountMode,channelInterpretation:h.channelInterpretation,delayTime:h.delayTime.value,maxDelayTime:r};h=t(l,d)}return o.set(l,h),u?await s(l,c.delayTime,h.delayTime):await n(l,c.delayTime,h.delayTime),await i(c,l,h),h};return{render(c,l){const h=o.get(l);return h!==void 0?Promise.resolve(h):a(c,l)}}},nF=s=>(t,e,n,i)=>s(t[i],r=>r[0]===e&&r[1]===n),iF=s=>(t,e)=>{s(t).delete(e)},sF=s=>"delayTime"in s,rF=(s,t,e)=>function n(i,r){const o=im(r)?r:e(s,r);if(sF(o))return[];if(i[0]===o)return[i];if(i.includes(o))return[];const{outputs:a}=t(o);return Array.from(a).map(c=>n([...i,o],c[0])).reduce((c,l)=>c.concat(l),[])},mf=(s,t,e)=>{const n=t[e];if(n===void 0)throw s();return n},oF=s=>(t,e=void 0,n=void 0,i=0)=>e===void 0?t.forEach(r=>r.disconnect()):typeof e=="number"?mf(s,t,e).disconnect():om(e)?n===void 0?t.forEach(r=>r.disconnect(e)):i===void 0?mf(s,t,n).disconnect(e,0):mf(s,t,n).disconnect(e,0,i):n===void 0?t.forEach(r=>r.disconnect(e)):mf(s,t,n).disconnect(e,0),aF={attack:.003,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",knee:30,ratio:12,release:.25,threshold:-24},cF=(s,t,e,n,i,r,o,a)=>class extends s{constructor(l,h){const u=r(l),d={...aF,...h},f=n(u,d),p=o(u),_=p?e():null;super(l,!1,f,_),this._attack=t(this,p,f.attack),this._knee=t(this,p,f.knee),this._nativeDynamicsCompressorNode=f,this._ratio=t(this,p,f.ratio),this._release=t(this,p,f.release),this._threshold=t(this,p,f.threshold),a(this,.006)}get attack(){return this._attack}get channelCount(){return this._nativeDynamicsCompressorNode.channelCount}set channelCount(l){const h=this._nativeDynamicsCompressorNode.channelCount;if(this._nativeDynamicsCompressorNode.channelCount=l,l>2)throw this._nativeDynamicsCompressorNode.channelCount=h,i()}get channelCountMode(){return this._nativeDynamicsCompressorNode.channelCountMode}set channelCountMode(l){const h=this._nativeDynamicsCompressorNode.channelCountMode;if(this._nativeDynamicsCompressorNode.channelCountMode=l,l==="max")throw this._nativeDynamicsCompressorNode.channelCountMode=h,i()}get knee(){return this._knee}get ratio(){return this._ratio}get reduction(){return typeof this._nativeDynamicsCompressorNode.reduction.value=="number"?this._nativeDynamicsCompressorNode.reduction.value:this._nativeDynamicsCompressorNode.reduction}get release(){return this._release}get threshold(){return this._threshold}},lF=(s,t,e,n,i)=>()=>{const r=new WeakMap,o=async(a,c)=>{let l=e(a);const h=ii(l,c);if(!h){const u={attack:l.attack.value,channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,knee:l.knee.value,ratio:l.ratio.value,release:l.release.value,threshold:l.threshold.value};l=t(c,u)}return r.set(c,l),h?(await s(c,a.attack,l.attack),await s(c,a.knee,l.knee),await s(c,a.ratio,l.ratio),await s(c,a.release,l.release),await s(c,a.threshold,l.threshold)):(await n(c,a.attack,l.attack),await n(c,a.knee,l.knee),await n(c,a.ratio,l.ratio),await n(c,a.release,l.release),await n(c,a.threshold,l.threshold)),await i(a,c,l),l};return{render(a,c){const l=r.get(c);return l!==void 0?Promise.resolve(l):o(a,c)}}},hF=()=>new DOMException("","EncodingError"),uF=s=>t=>new Promise((e,n)=>{if(s===null){n(new SyntaxError);return}const i=s.document.head;if(i===null)n(new SyntaxError);else{const r=s.document.createElement("script"),o=new Blob([t],{type:"application/javascript"}),a=URL.createObjectURL(o),c=s.onerror,l=()=>{s.onerror=c,URL.revokeObjectURL(a)};s.onerror=(h,u,d,f,p)=>{if(u===a||u===s.location.href&&d===1&&f===1)return l(),n(p),!1;if(c!==null)return c(h,u,d,f,p)},r.onerror=()=>{l(),n(new SyntaxError)},r.onload=()=>{l(),e()},r.src=a,r.type="module",i.appendChild(r)}}),dF=s=>class{constructor(e){this._nativeEventTarget=e,this._listeners=new WeakMap}addEventListener(e,n,i){if(n!==null){let r=this._listeners.get(n);r===void 0&&(r=s(this,n),typeof n=="function"&&this._listeners.set(n,r)),this._nativeEventTarget.addEventListener(e,r,i)}}dispatchEvent(e){return this._nativeEventTarget.dispatchEvent(e)}removeEventListener(e,n,i){const r=n===null?void 0:this._listeners.get(n);this._nativeEventTarget.removeEventListener(e,r===void 0?null:r,i)}},fF=s=>(t,e,n)=>{Object.defineProperties(s,{currentFrame:{configurable:!0,get(){return Math.round(t*e)}},currentTime:{configurable:!0,get(){return t}}});try{return n()}finally{s!==null&&(delete s.currentFrame,delete s.currentTime)}},pF=s=>async t=>{try{const e=await fetch(t);if(e.ok)return[await e.text(),e.url]}catch{}throw s()},mF={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",gain:1},gF=(s,t,e,n,i,r)=>class extends s{constructor(a,c){const l=i(a),h={...mF,...c},u=n(l,h),d=r(l),f=d?e():null;super(a,!1,u,f),this._gain=t(this,d,u.gain,ci,Si)}get gain(){return this._gain}},_F=(s,t,e,n,i)=>()=>{const r=new WeakMap,o=async(a,c)=>{let l=e(a);const h=ii(l,c);if(!h){const u={channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,gain:l.gain.value};l=t(c,u)}return r.set(c,l),h?await s(c,a.gain,l.gain):await n(c,a.gain,l.gain),await i(a,c,l),l};return{render(a,c){const l=r.get(c);return l!==void 0?Promise.resolve(l):o(a,c)}}},yF=(s,t)=>e=>t(s,e),xF=s=>t=>{const e=s(t);if(e.renderer===null)throw new Error("Missing the renderer of the given AudioNode in the audio graph.");return e.renderer},vF=s=>t=>{var e;return(e=s.get(t))!==null&&e!==void 0?e:0},bF=s=>t=>{const e=s(t);if(e.renderer===null)throw new Error("Missing the renderer of the given AudioParam in the audio graph.");return e.renderer},SF=s=>t=>s.get(t),Fn=()=>new DOMException("","InvalidStateError"),MF=s=>t=>{const e=s.get(t);if(e===void 0)throw Fn();return e},TF=(s,t)=>e=>{let n=s.get(e);if(n!==void 0)return n;if(t===null)throw new Error("Missing the native OfflineAudioContext constructor.");return n=new t(1,1,44100),s.set(e,n),n},wF=s=>t=>{const e=s.get(t);if(e===void 0)throw new Error("The context has no set of AudioWorkletNodes.");return e},tg=()=>new DOMException("","InvalidAccessError"),AF=s=>{s.getFrequencyResponse=(t=>(e,n,i)=>{if(e.length!==n.length||n.length!==i.length)throw tg();return t.call(s,e,n,i)})(s.getFrequencyResponse)},EF={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers"},CF=(s,t,e,n,i,r)=>class extends s{constructor(a,c){const l=n(a),h=i(l),u={...EF,...c},d=t(l,h?null:a.baseLatency,u),f=h?e(u.feedback,u.feedforward):null;super(a,!1,d,f),AF(d),this._nativeIIRFilterNode=d,r(this,1)}getFrequencyResponse(a,c,l){return this._nativeIIRFilterNode.getFrequencyResponse(a,c,l)}},nE=(s,t,e,n,i,r,o,a,c,l,h)=>{const u=l.length;let d=a;for(let f=0;f<u;f+=1){let p=e[0]*l[f];for(let _=1;_<i;_+=1){const g=d-_&c-1;p+=e[_]*r[g],p-=s[_]*o[g]}for(let _=i;_<n;_+=1)p+=e[_]*r[d-_&c-1];for(let _=i;_<t;_+=1)p-=s[_]*o[d-_&c-1];r[d]=l[f],o[d]=p,d=d+1&c-1,h[f]=p}return d},RF=(s,t,e,n)=>{const i=e instanceof Float64Array?e:new Float64Array(e),r=n instanceof Float64Array?n:new Float64Array(n),o=i.length,a=r.length,c=Math.min(o,a);if(i[0]!==1){for(let p=0;p<o;p+=1)r[p]/=i[0];for(let p=1;p<a;p+=1)i[p]/=i[0]}const l=32,h=new Float32Array(l),u=new Float32Array(l),d=t.createBuffer(s.numberOfChannels,s.length,s.sampleRate),f=s.numberOfChannels;for(let p=0;p<f;p+=1){const _=s.getChannelData(p),g=d.getChannelData(p);h.fill(0),u.fill(0),nE(i,o,r,a,c,h,u,0,l,_,g)}return d},NF=(s,t,e,n,i)=>(r,o)=>{const a=new WeakMap;let c=null;const l=async(h,u)=>{let d=null,f=t(h);const p=ii(f,u);if(u.createIIRFilter===void 0?d=s(u,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}):p||(f=u.createIIRFilter(o,r)),a.set(u,d===null?f:d),d!==null){if(c===null){if(e===null)throw new Error("Missing the native OfflineAudioContext constructor.");const g=new e(h.context.destination.channelCount,h.context.length,u.sampleRate);c=(async()=>{await n(h,g,g.destination);const m=await i(g);return RF(m,u,r,o)})()}const _=await c;return d.buffer=_,d.start(0),d}return await n(h,u,f),f};return{render(h,u){const d=a.get(u);return d!==void 0?Promise.resolve(d):l(h,u)}}},PF=(s,t,e,n,i,r)=>o=>(a,c)=>{const l=s.get(a);if(l===void 0){if(!o&&r(a)){const h=n(a),{outputs:u}=e(a);for(const d of u)if(wd(d)){const f=n(d[0]);t(h,f,d[1],d[2])}else{const f=i(d[0]);h.disconnect(f,d[1])}}s.set(a,c)}else s.set(a,l+c)},DF=(s,t)=>e=>{const n=s.get(e);return t(n)||t(e)},IF=(s,t)=>e=>s.has(e)||t(e),FF=(s,t)=>e=>s.has(e)||t(e),OF=(s,t)=>e=>{const n=s.get(e);return t(n)||t(e)},LF=s=>t=>s!==null&&t instanceof s,BF=s=>t=>s!==null&&typeof s.AudioNode=="function"&&t instanceof s.AudioNode,UF=s=>t=>s!==null&&typeof s.AudioParam=="function"&&t instanceof s.AudioParam,kF=(s,t)=>e=>s(e)||t(e),zF=s=>t=>s!==null&&t instanceof s,VF=s=>s!==null&&s.isSecureContext,GF=(s,t,e,n)=>class extends s{constructor(r,o){const a=e(r),c=t(a,o);if(n(a))throw TypeError();super(r,!0,c,null),this._nativeMediaElementAudioSourceNode=c}get mediaElement(){return this._nativeMediaElementAudioSourceNode.mediaElement}},HF={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers"},$F=(s,t,e,n)=>class extends s{constructor(r,o){const a=e(r);if(n(a))throw new TypeError;const c={...HF,...o},l=t(a,c);super(r,!1,l,null),this._nativeMediaStreamAudioDestinationNode=l}get stream(){return this._nativeMediaStreamAudioDestinationNode.stream}},WF=(s,t,e,n)=>class extends s{constructor(r,o){const a=e(r),c=t(a,o);if(n(a))throw new TypeError;super(r,!0,c,null),this._nativeMediaStreamAudioSourceNode=c}get mediaStream(){return this._nativeMediaStreamAudioSourceNode.mediaStream}},qF=(s,t,e)=>class extends s{constructor(i,r){const o=e(i),a=t(o,r);super(i,!0,a,null)}},jF=(s,t,e,n,i,r)=>class extends e{constructor(a,c){super(a),this._nativeContext=a,Qm.set(this,a),n(a)&&i.set(a,new Set),this._destination=new s(this,c),this._listener=t(this,a),this._onstatechange=null}get currentTime(){return this._nativeContext.currentTime}get destination(){return this._destination}get listener(){return this._listener}get onstatechange(){return this._onstatechange}set onstatechange(a){const c=typeof a=="function"?r(this,a):null;this._nativeContext.onstatechange=c;const l=this._nativeContext.onstatechange;this._onstatechange=l!==null&&l===c?a:l}get sampleRate(){return this._nativeContext.sampleRate}get state(){return this._nativeContext.state}},Vu=s=>{const t=new Uint32Array([1179011410,40,1163280727,544501094,16,131073,44100,176400,1048580,1635017060,4,0]);try{const e=s.decodeAudioData(t.buffer,()=>{});return e===void 0?!1:(e.catch(()=>{}),!0)}catch{}return!1},XF=(s,t)=>(e,n,i)=>{const r=new Set;return e.connect=(o=>(a,c=0,l=0)=>{const h=r.size===0;if(t(a))return o.call(e,a,c,l),s(r,[a,c,l],u=>u[0]===a&&u[1]===c&&u[2]===l,!0),h&&n(),a;o.call(e,a,c),s(r,[a,c],u=>u[0]===a&&u[1]===c,!0),h&&n()})(e.connect),e.disconnect=(o=>(a,c,l)=>{const h=r.size>0;if(a===void 0)o.apply(e),r.clear();else if(typeof a=="number"){o.call(e,a);for(const d of r)d[1]===a&&r.delete(d)}else{t(a)?o.call(e,a,c,l):o.call(e,a,c);for(const d of r)d[0]===a&&(c===void 0||d[1]===c)&&(l===void 0||d[2]===l)&&r.delete(d)}const u=r.size===0;h&&u&&i()})(e.disconnect),e},Qe=(s,t,e)=>{const n=t[e];n!==void 0&&n!==s[e]&&(s[e]=n)},An=(s,t)=>{Qe(s,t,"channelCount"),Qe(s,t,"channelCountMode"),Qe(s,t,"channelInterpretation")},vM=s=>typeof s.getFloatTimeDomainData=="function",YF=s=>{s.getFloatTimeDomainData=t=>{const e=new Uint8Array(t.length);s.getByteTimeDomainData(e);const n=Math.max(e.length,s.fftSize);for(let i=0;i<n;i+=1)t[i]=(e[i]-128)*.0078125;return t}},ZF=(s,t)=>(e,n)=>{const i=e.createAnalyser();if(An(i,n),!(n.maxDecibels>n.minDecibels))throw t();return Qe(i,n,"fftSize"),Qe(i,n,"maxDecibels"),Qe(i,n,"minDecibels"),Qe(i,n,"smoothingTimeConstant"),s(vM,()=>vM(i))||YF(i),i},KF=s=>s===null?null:s.hasOwnProperty("AudioBuffer")?s.AudioBuffer:null,rn=(s,t,e)=>{const n=t[e];n!==void 0&&n!==s[e].value&&(s[e].value=n)},QF=s=>{s.start=(t=>{let e=!1;return(n=0,i=0,r)=>{if(e)throw Fn();t.call(s,n,i,r),e=!0}})(s.start)},Cv=s=>{s.start=(t=>(e=0,n=0,i)=>{if(typeof i=="number"&&i<0||n<0||e<0)throw new RangeError("The parameters can't be negative.");t.call(s,e,n,i)})(s.start)},Rv=s=>{s.stop=(t=>(e=0)=>{if(e<0)throw new RangeError("The parameter can't be negative.");t.call(s,e)})(s.stop)},JF=(s,t,e,n,i,r,o,a,c,l,h)=>(u,d)=>{const f=u.createBufferSource();return An(f,d),rn(f,d,"playbackRate"),Qe(f,d,"buffer"),Qe(f,d,"loop"),Qe(f,d,"loopEnd"),Qe(f,d,"loopStart"),t(e,()=>e(u))||QF(f),t(n,()=>n(u))||c(f),t(i,()=>i(u))||l(f,u),t(r,()=>r(u))||Cv(f),t(o,()=>o(u))||h(f,u),t(a,()=>a(u))||Rv(f),s(u,f),f},tO=s=>s===null?null:s.hasOwnProperty("AudioContext")?s.AudioContext:s.hasOwnProperty("webkitAudioContext")?s.webkitAudioContext:null,eO=(s,t)=>(e,n,i)=>{const r=e.destination;if(r.channelCount!==n)try{r.channelCount=n}catch{}i&&r.channelCountMode!=="explicit"&&(r.channelCountMode="explicit"),r.maxChannelCount===0&&Object.defineProperty(r,"maxChannelCount",{value:n});const o=s(e,{channelCount:n,channelCountMode:r.channelCountMode,channelInterpretation:r.channelInterpretation,gain:1});return t(o,"channelCount",a=>()=>a.call(o),a=>c=>{a.call(o,c);try{r.channelCount=c}catch(l){if(c>r.maxChannelCount)throw l}}),t(o,"channelCountMode",a=>()=>a.call(o),a=>c=>{a.call(o,c),r.channelCountMode=c}),t(o,"channelInterpretation",a=>()=>a.call(o),a=>c=>{a.call(o,c),r.channelInterpretation=c}),Object.defineProperty(o,"maxChannelCount",{get:()=>r.maxChannelCount}),o.connect(r),o},nO=s=>s===null?null:s.hasOwnProperty("AudioWorkletNode")?s.AudioWorkletNode:null,iO=s=>{const{port1:t}=new MessageChannel;try{t.postMessage(s)}finally{t.close()}},sO=(s,t,e,n,i)=>(r,o,a,c,l,h)=>{if(a!==null)try{const u=new a(r,c,h),d=new Map;let f=null;if(Object.defineProperties(u,{channelCount:{get:()=>h.channelCount,set:()=>{throw s()}},channelCountMode:{get:()=>"explicit",set:()=>{throw s()}},onprocessorerror:{get:()=>f,set:p=>{typeof f=="function"&&u.removeEventListener("processorerror",f),f=typeof p=="function"?p:null,typeof f=="function"&&u.addEventListener("processorerror",f)}}}),u.addEventListener=(p=>(..._)=>{if(_[0]==="processorerror"){const g=typeof _[1]=="function"?_[1]:typeof _[1]=="object"&&_[1]!==null&&typeof _[1].handleEvent=="function"?_[1].handleEvent:null;if(g!==null){const m=d.get(_[1]);m!==void 0?_[1]=m:(_[1]=x=>{x.type==="error"?(Object.defineProperties(x,{type:{value:"processorerror"}}),g(x)):g(new ErrorEvent(_[0],{...x}))},d.set(g,_[1]))}}return p.call(u,"error",_[1],_[2]),p.call(u,..._)})(u.addEventListener),u.removeEventListener=(p=>(..._)=>{if(_[0]==="processorerror"){const g=d.get(_[1]);g!==void 0&&(d.delete(_[1]),_[1]=g)}return p.call(u,"error",_[1],_[2]),p.call(u,_[0],_[1],_[2])})(u.removeEventListener),h.numberOfOutputs!==0){const p=e(r,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return u.connect(p).connect(r.destination),i(u,()=>p.disconnect(),()=>p.connect(r.destination))}return u}catch(u){throw u.code===11?n():u}if(l===void 0)throw n();return iO(h),t(r,o,l,h)},iE=(s,t)=>s===null?512:Math.max(512,Math.min(16384,Math.pow(2,Math.round(Math.log2(s*t))))),rO=s=>new Promise((t,e)=>{const{port1:n,port2:i}=new MessageChannel;n.onmessage=({data:r})=>{n.close(),i.close(),t(r)},n.onmessageerror=({data:r})=>{n.close(),i.close(),e(r)},i.postMessage(s)}),oO=async(s,t)=>{const e=await rO(t);return new s(e)},aO=(s,t,e,n)=>{let i=fy.get(s);i===void 0&&(i=new WeakMap,fy.set(s,i));const r=oO(e,n);return i.set(t,r),r},cO=(s,t,e,n,i,r,o,a,c,l,h,u,d)=>(f,p,_,g)=>{if(g.numberOfInputs===0&&g.numberOfOutputs===0)throw c();const m=Array.isArray(g.outputChannelCount)?g.outputChannelCount:Array.from(g.outputChannelCount);if(m.some(gt=>gt<1))throw c();if(m.length!==g.numberOfOutputs)throw t();if(g.channelCountMode!=="explicit")throw c();const x=g.channelCount*g.numberOfInputs,v=m.reduce((gt,mt)=>gt+mt,0),y=_.parameterDescriptors===void 0?0:_.parameterDescriptors.length;if(x+y>6||v>6)throw c();const b=new MessageChannel,S=[],M=[];for(let gt=0;gt<g.numberOfInputs;gt+=1)S.push(o(f,{channelCount:g.channelCount,channelCountMode:g.channelCountMode,channelInterpretation:g.channelInterpretation,gain:1})),M.push(i(f,{channelCount:g.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:g.channelCount}));const T=[];if(_.parameterDescriptors!==void 0)for(const{defaultValue:gt,maxValue:mt,minValue:Ot,name:St}of _.parameterDescriptors){const Ht=r(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:g.parameterData[St]!==void 0?g.parameterData[St]:gt===void 0?0:gt});Object.defineProperties(Ht.offset,{defaultValue:{get:()=>gt===void 0?0:gt},maxValue:{get:()=>mt===void 0?ci:mt},minValue:{get:()=>Ot===void 0?Si:Ot}}),T.push(Ht)}const A=n(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,x+y)}),w=iE(p,f.sampleRate),E=a(f,w,x+y,Math.max(1,v)),N=i(f,{channelCount:Math.max(1,v),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,v)}),I=[];for(let gt=0;gt<g.numberOfOutputs;gt+=1)I.push(n(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:m[gt]}));for(let gt=0;gt<g.numberOfInputs;gt+=1){S[gt].connect(M[gt]);for(let mt=0;mt<g.channelCount;mt+=1)M[gt].connect(A,mt,gt*g.channelCount+mt)}const P=new tE(_.parameterDescriptors===void 0?[]:_.parameterDescriptors.map(({name:gt},mt)=>{const Ot=T[mt];return Ot.connect(A,0,x+mt),Ot.start(0),[gt,Ot.offset]}));A.connect(E);let D=g.channelInterpretation,O=null;const k=g.numberOfOutputs===0?[E]:I,z={get bufferSize(){return w},get channelCount(){return g.channelCount},set channelCount(gt){throw e()},get channelCountMode(){return g.channelCountMode},set channelCountMode(gt){throw e()},get channelInterpretation(){return D},set channelInterpretation(gt){for(const mt of S)mt.channelInterpretation=gt;D=gt},get context(){return E.context},get inputs(){return S},get numberOfInputs(){return g.numberOfInputs},get numberOfOutputs(){return g.numberOfOutputs},get onprocessorerror(){return O},set onprocessorerror(gt){typeof O=="function"&&z.removeEventListener("processorerror",O),O=typeof gt=="function"?gt:null,typeof O=="function"&&z.addEventListener("processorerror",O)},get parameters(){return P},get port(){return b.port2},addEventListener(...gt){return E.addEventListener(gt[0],gt[1],gt[2])},connect:s.bind(null,k),disconnect:l.bind(null,k),dispatchEvent(...gt){return E.dispatchEvent(gt[0])},removeEventListener(...gt){return E.removeEventListener(gt[0],gt[1],gt[2])}},Y=new Map;b.port1.addEventListener=(gt=>(...mt)=>{if(mt[0]==="message"){const Ot=typeof mt[1]=="function"?mt[1]:typeof mt[1]=="object"&&mt[1]!==null&&typeof mt[1].handleEvent=="function"?mt[1].handleEvent:null;if(Ot!==null){const St=Y.get(mt[1]);St!==void 0?mt[1]=St:(mt[1]=Ht=>{h(f.currentTime,f.sampleRate,()=>Ot(Ht))},Y.set(Ot,mt[1]))}}return gt.call(b.port1,mt[0],mt[1],mt[2])})(b.port1.addEventListener),b.port1.removeEventListener=(gt=>(...mt)=>{if(mt[0]==="message"){const Ot=Y.get(mt[1]);Ot!==void 0&&(Y.delete(mt[1]),mt[1]=Ot)}return gt.call(b.port1,mt[0],mt[1],mt[2])})(b.port1.removeEventListener);let U=null;Object.defineProperty(b.port1,"onmessage",{get:()=>U,set:gt=>{typeof U=="function"&&b.port1.removeEventListener("message",U),U=typeof gt=="function"?gt:null,typeof U=="function"&&(b.port1.addEventListener("message",U),b.port1.start())}}),_.prototype.port=b.port1;let W=null;aO(f,z,_,g).then(gt=>W=gt);const wt=cm(g.numberOfInputs,g.channelCount),H=cm(g.numberOfOutputs,m),B=_.parameterDescriptors===void 0?[]:_.parameterDescriptors.reduce((gt,{name:mt})=>({...gt,[mt]:new Float32Array(128)}),{});let nt=!0;const at=()=>{g.numberOfOutputs>0&&E.disconnect(N);for(let gt=0,mt=0;gt<g.numberOfOutputs;gt+=1){const Ot=I[gt];for(let St=0;St<m[gt];St+=1)N.disconnect(Ot,mt+St,St);mt+=m[gt]}},et=new Map;E.onaudioprocess=({inputBuffer:gt,outputBuffer:mt})=>{if(W!==null){const Ot=u(z);for(let St=0;St<w;St+=128){for(let Ht=0;Ht<g.numberOfInputs;Ht+=1)for(let Et=0;Et<g.channelCount;Et+=1)am(gt,wt[Ht],Et,Et,St);_.parameterDescriptors!==void 0&&_.parameterDescriptors.forEach(({name:Ht},Et)=>{am(gt,B,Ht,x+Et,St)});for(let Ht=0;Ht<g.numberOfInputs;Ht+=1)for(let Et=0;Et<m[Ht];Et+=1)H[Ht][Et].byteLength===0&&(H[Ht][Et]=new Float32Array(128));try{const Ht=wt.map((F,C)=>{if(Ot[C].size>0)return et.set(C,w/128),F;const dt=et.get(C);return dt===void 0?[]:(F.every(pt=>pt.every(ht=>ht===0))&&(dt===1?et.delete(C):et.set(C,dt-1)),F)});nt=h(f.currentTime+St/f.sampleRate,f.sampleRate,()=>W.process(Ht,H,B));for(let F=0,C=0;F<g.numberOfOutputs;F+=1){for(let K=0;K<m[F];K+=1)eE(mt,H[F],K,C+K,St);C+=m[F]}}catch(Ht){nt=!1,z.dispatchEvent(new ErrorEvent("processorerror",{colno:Ht.colno,filename:Ht.filename,lineno:Ht.lineno,message:Ht.message}))}if(!nt){for(let Ht=0;Ht<g.numberOfInputs;Ht+=1){S[Ht].disconnect(M[Ht]);for(let Et=0;Et<g.channelCount;Et+=1)M[St].disconnect(A,Et,Ht*g.channelCount+Et)}if(_.parameterDescriptors!==void 0){const Ht=_.parameterDescriptors.length;for(let Et=0;Et<Ht;Et+=1){const F=T[Et];F.disconnect(A,0,x+Et),F.stop()}}A.disconnect(E),E.onaudioprocess=null,Nt?at():Xt();break}}}};let Nt=!1;const Ft=o(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0}),jt=()=>E.connect(Ft).connect(f.destination),Xt=()=>{E.disconnect(Ft),Ft.disconnect()},Ie=()=>{if(nt){Xt(),g.numberOfOutputs>0&&E.connect(N);for(let gt=0,mt=0;gt<g.numberOfOutputs;gt+=1){const Ot=I[gt];for(let St=0;St<m[gt];St+=1)N.connect(Ot,mt+St,St);mt+=m[gt]}}Nt=!0},V=()=>{nt&&(jt(),at()),Nt=!1};return jt(),d(z,Ie,V)},sE=(s,t)=>{const e=s.createBiquadFilter();return An(e,t),rn(e,t,"Q"),rn(e,t,"detune"),rn(e,t,"frequency"),rn(e,t,"gain"),Qe(e,t,"type"),e},lO=(s,t)=>(e,n)=>{const i=e.createChannelMerger(n.numberOfInputs);return s!==null&&s.name==="webkitAudioContext"&&t(e,i),An(i,n),i},hO=s=>{const t=s.numberOfOutputs;Object.defineProperty(s,"channelCount",{get:()=>t,set:e=>{if(e!==t)throw Fn()}}),Object.defineProperty(s,"channelCountMode",{get:()=>"explicit",set:e=>{if(e!=="explicit")throw Fn()}}),Object.defineProperty(s,"channelInterpretation",{get:()=>"discrete",set:e=>{if(e!=="discrete")throw Fn()}})},Ad=(s,t)=>{const e=s.createChannelSplitter(t.numberOfOutputs);return An(e,t),hO(e),e},uO=(s,t,e,n,i)=>(r,o)=>{if(r.createConstantSource===void 0)return e(r,o);const a=r.createConstantSource();return An(a,o),rn(a,o,"offset"),t(n,()=>n(r))||Cv(a),t(i,()=>i(r))||Rv(a),s(r,a),a},vh=(s,t)=>(s.connect=t.connect.bind(t),s.disconnect=t.disconnect.bind(t),s),dO=(s,t,e,n)=>(i,{offset:r,...o})=>{const a=i.createBuffer(1,2,44100),c=t(i,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),l=e(i,{...o,gain:r}),h=a.getChannelData(0);h[0]=1,h[1]=1,c.buffer=a,c.loop=!0;const u={get bufferSize(){},get channelCount(){return l.channelCount},set channelCount(p){l.channelCount=p},get channelCountMode(){return l.channelCountMode},set channelCountMode(p){l.channelCountMode=p},get channelInterpretation(){return l.channelInterpretation},set channelInterpretation(p){l.channelInterpretation=p},get context(){return l.context},get inputs(){return[]},get numberOfInputs(){return c.numberOfInputs},get numberOfOutputs(){return l.numberOfOutputs},get offset(){return l.gain},get onended(){return c.onended},set onended(p){c.onended=p},addEventListener(...p){return c.addEventListener(p[0],p[1],p[2])},dispatchEvent(...p){return c.dispatchEvent(p[0])},removeEventListener(...p){return c.removeEventListener(p[0],p[1],p[2])},start(p=0){c.start.call(c,p)},stop(p=0){c.stop.call(c,p)}},d=()=>c.connect(l),f=()=>c.disconnect(l);return s(i,c),n(vh(u,l),d,f)},fO=(s,t)=>(e,n)=>{const i=e.createConvolver();if(An(i,n),n.disableNormalization===i.normalize&&(i.normalize=!n.disableNormalization),Qe(i,n,"buffer"),n.channelCount>2||(t(i,"channelCount",r=>()=>r.call(i),r=>o=>{if(o>2)throw s();return r.call(i,o)}),n.channelCountMode==="max"))throw s();return t(i,"channelCountMode",r=>()=>r.call(i),r=>o=>{if(o==="max")throw s();return r.call(i,o)}),i},rE=(s,t)=>{const e=s.createDelay(t.maxDelayTime);return An(e,t),rn(e,t,"delayTime"),e},pO=s=>(t,e)=>{const n=t.createDynamicsCompressor();if(An(n,e),e.channelCount>2||e.channelCountMode==="max")throw s();return rn(n,e,"attack"),rn(n,e,"knee"),rn(n,e,"ratio"),rn(n,e,"release"),rn(n,e,"threshold"),n},Ri=(s,t)=>{const e=s.createGain();return An(e,t),rn(e,t,"gain"),e},mO=s=>(t,e,n)=>{if(t.createIIRFilter===void 0)return s(t,e,n);const i=t.createIIRFilter(n.feedforward,n.feedback);return An(i,n),i};function gO(s,t){const e=t[0]*t[0]+t[1]*t[1];return[(s[0]*t[0]+s[1]*t[1])/e,(s[1]*t[0]-s[0]*t[1])/e]}function _O(s,t){return[s[0]*t[0]-s[1]*t[1],s[0]*t[1]+s[1]*t[0]]}function bM(s,t){let e=[0,0];for(let n=s.length-1;n>=0;n-=1)e=_O(e,t),e[0]+=s[n];return e}const yO=(s,t,e,n)=>(i,r,{channelCount:o,channelCountMode:a,channelInterpretation:c,feedback:l,feedforward:h})=>{const u=iE(r,i.sampleRate),d=l instanceof Float64Array?l:new Float64Array(l),f=h instanceof Float64Array?h:new Float64Array(h),p=d.length,_=f.length,g=Math.min(p,_);if(p===0||p>20)throw n();if(d[0]===0)throw t();if(_===0||_>20)throw n();if(f[0]===0)throw t();if(d[0]!==1){for(let T=0;T<_;T+=1)f[T]/=d[0];for(let T=1;T<p;T+=1)d[T]/=d[0]}const m=e(i,u,o,o);m.channelCount=o,m.channelCountMode=a,m.channelInterpretation=c;const x=32,v=[],y=[],b=[];for(let T=0;T<o;T+=1){v.push(0);const A=new Float32Array(x),w=new Float32Array(x);A.fill(0),w.fill(0),y.push(A),b.push(w)}m.onaudioprocess=T=>{const A=T.inputBuffer,w=T.outputBuffer,E=A.numberOfChannels;for(let N=0;N<E;N+=1){const I=A.getChannelData(N),P=w.getChannelData(N);v[N]=nE(d,p,f,_,g,y[N],b[N],v[N],x,I,P)}};const S=i.sampleRate/2;return vh({get bufferSize(){return u},get channelCount(){return m.channelCount},set channelCount(T){m.channelCount=T},get channelCountMode(){return m.channelCountMode},set channelCountMode(T){m.channelCountMode=T},get channelInterpretation(){return m.channelInterpretation},set channelInterpretation(T){m.channelInterpretation=T},get context(){return m.context},get inputs(){return[m]},get numberOfInputs(){return m.numberOfInputs},get numberOfOutputs(){return m.numberOfOutputs},addEventListener(...T){return m.addEventListener(T[0],T[1],T[2])},dispatchEvent(...T){return m.dispatchEvent(T[0])},getFrequencyResponse(T,A,w){if(T.length!==A.length||A.length!==w.length)throw s();const E=T.length;for(let N=0;N<E;N+=1){const I=-Math.PI*(T[N]/S),P=[Math.cos(I),Math.sin(I)],D=bM(f,P),O=bM(d,P),k=gO(D,O);A[N]=Math.sqrt(k[0]*k[0]+k[1]*k[1]),w[N]=Math.atan2(k[1],k[0])}},removeEventListener(...T){return m.removeEventListener(T[0],T[1],T[2])}},m)},xO=(s,t)=>s.createMediaElementSource(t.mediaElement),vO=(s,t)=>{const e=s.createMediaStreamDestination();return An(e,t),e.numberOfOutputs===1&&Object.defineProperty(e,"numberOfOutputs",{get:()=>0}),e},bO=(s,{mediaStream:t})=>{const e=t.getAudioTracks();e.sort((r,o)=>r.id<o.id?-1:r.id>o.id?1:0);const n=e.slice(0,1),i=s.createMediaStreamSource(new MediaStream(n));return Object.defineProperty(i,"mediaStream",{value:t}),i},SO=(s,t)=>(e,{mediaStreamTrack:n})=>{if(typeof e.createMediaStreamTrackSource=="function")return e.createMediaStreamTrackSource(n);const i=new MediaStream([n]),r=e.createMediaStreamSource(i);if(n.kind!=="audio")throw s();if(t(e))throw new TypeError;return r},MO=s=>s===null?null:s.hasOwnProperty("OfflineAudioContext")?s.OfflineAudioContext:s.hasOwnProperty("webkitOfflineAudioContext")?s.webkitOfflineAudioContext:null,TO=(s,t,e,n,i,r)=>(o,a)=>{const c=o.createOscillator();return An(c,a),rn(c,a,"detune"),rn(c,a,"frequency"),a.periodicWave!==void 0?c.setPeriodicWave(a.periodicWave):Qe(c,a,"type"),t(e,()=>e(o))||Cv(c),t(n,()=>n(o))||r(c,o),t(i,()=>i(o))||Rv(c),s(o,c),c},wO=s=>(t,e)=>{const n=t.createPanner();return n.orientationX===void 0?s(t,e):(An(n,e),rn(n,e,"orientationX"),rn(n,e,"orientationY"),rn(n,e,"orientationZ"),rn(n,e,"positionX"),rn(n,e,"positionY"),rn(n,e,"positionZ"),Qe(n,e,"coneInnerAngle"),Qe(n,e,"coneOuterAngle"),Qe(n,e,"coneOuterGain"),Qe(n,e,"distanceModel"),Qe(n,e,"maxDistance"),Qe(n,e,"panningModel"),Qe(n,e,"refDistance"),Qe(n,e,"rolloffFactor"),n)},AO=(s,t,e,n,i,r,o,a,c,l)=>(h,{coneInnerAngle:u,coneOuterAngle:d,coneOuterGain:f,distanceModel:p,maxDistance:_,orientationX:g,orientationY:m,orientationZ:x,panningModel:v,positionX:y,positionY:b,positionZ:S,refDistance:M,rolloffFactor:T,...A})=>{const w=h.createPanner();if(A.channelCount>2||A.channelCountMode==="max")throw o();An(w,A);const E={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},N=e(h,{...E,channelInterpretation:"speakers",numberOfInputs:6}),I=n(h,{...A,gain:1}),P=n(h,{...E,gain:1}),D=n(h,{...E,gain:0}),O=n(h,{...E,gain:0}),k=n(h,{...E,gain:0}),z=n(h,{...E,gain:0}),Y=n(h,{...E,gain:0}),U=i(h,256,6,1),W=r(h,{...E,curve:new Float32Array([1,1]),oversample:"none"});let lt=[g,m,x],wt=[y,b,S];const H=new Float32Array(1);U.onaudioprocess=({inputBuffer:et})=>{const Nt=[c(et,H,0),c(et,H,1),c(et,H,2)];Nt.some((jt,Xt)=>jt!==lt[Xt])&&(w.setOrientation(...Nt),lt=Nt);const Ft=[c(et,H,3),c(et,H,4),c(et,H,5)];Ft.some((jt,Xt)=>jt!==wt[Xt])&&(w.setPosition(...Ft),wt=Ft)},Object.defineProperty(D.gain,"defaultValue",{get:()=>0}),Object.defineProperty(O.gain,"defaultValue",{get:()=>0}),Object.defineProperty(k.gain,"defaultValue",{get:()=>0}),Object.defineProperty(z.gain,"defaultValue",{get:()=>0}),Object.defineProperty(Y.gain,"defaultValue",{get:()=>0});const B={get bufferSize(){},get channelCount(){return w.channelCount},set channelCount(et){if(et>2)throw o();I.channelCount=et,w.channelCount=et},get channelCountMode(){return w.channelCountMode},set channelCountMode(et){if(et==="max")throw o();I.channelCountMode=et,w.channelCountMode=et},get channelInterpretation(){return w.channelInterpretation},set channelInterpretation(et){I.channelInterpretation=et,w.channelInterpretation=et},get coneInnerAngle(){return w.coneInnerAngle},set coneInnerAngle(et){w.coneInnerAngle=et},get coneOuterAngle(){return w.coneOuterAngle},set coneOuterAngle(et){w.coneOuterAngle=et},get coneOuterGain(){return w.coneOuterGain},set coneOuterGain(et){if(et<0||et>1)throw t();w.coneOuterGain=et},get context(){return w.context},get distanceModel(){return w.distanceModel},set distanceModel(et){w.distanceModel=et},get inputs(){return[I]},get maxDistance(){return w.maxDistance},set maxDistance(et){if(et<0)throw new RangeError;w.maxDistance=et},get numberOfInputs(){return w.numberOfInputs},get numberOfOutputs(){return w.numberOfOutputs},get orientationX(){return P.gain},get orientationY(){return D.gain},get orientationZ(){return O.gain},get panningModel(){return w.panningModel},set panningModel(et){w.panningModel=et},get positionX(){return k.gain},get positionY(){return z.gain},get positionZ(){return Y.gain},get refDistance(){return w.refDistance},set refDistance(et){if(et<0)throw new RangeError;w.refDistance=et},get rolloffFactor(){return w.rolloffFactor},set rolloffFactor(et){if(et<0)throw new RangeError;w.rolloffFactor=et},addEventListener(...et){return I.addEventListener(et[0],et[1],et[2])},dispatchEvent(...et){return I.dispatchEvent(et[0])},removeEventListener(...et){return I.removeEventListener(et[0],et[1],et[2])}};u!==B.coneInnerAngle&&(B.coneInnerAngle=u),d!==B.coneOuterAngle&&(B.coneOuterAngle=d),f!==B.coneOuterGain&&(B.coneOuterGain=f),p!==B.distanceModel&&(B.distanceModel=p),_!==B.maxDistance&&(B.maxDistance=_),g!==B.orientationX.value&&(B.orientationX.value=g),m!==B.orientationY.value&&(B.orientationY.value=m),x!==B.orientationZ.value&&(B.orientationZ.value=x),v!==B.panningModel&&(B.panningModel=v),y!==B.positionX.value&&(B.positionX.value=y),b!==B.positionY.value&&(B.positionY.value=b),S!==B.positionZ.value&&(B.positionZ.value=S),M!==B.refDistance&&(B.refDistance=M),T!==B.rolloffFactor&&(B.rolloffFactor=T),(lt[0]!==1||lt[1]!==0||lt[2]!==0)&&w.setOrientation(...lt),(wt[0]!==0||wt[1]!==0||wt[2]!==0)&&w.setPosition(...wt);const nt=()=>{I.connect(w),s(I,W,0,0),W.connect(P).connect(N,0,0),W.connect(D).connect(N,0,1),W.connect(O).connect(N,0,2),W.connect(k).connect(N,0,3),W.connect(z).connect(N,0,4),W.connect(Y).connect(N,0,5),N.connect(U).connect(h.destination)},at=()=>{I.disconnect(w),a(I,W,0,0),W.disconnect(P),P.disconnect(N),W.disconnect(D),D.disconnect(N),W.disconnect(O),O.disconnect(N),W.disconnect(k),k.disconnect(N),W.disconnect(z),z.disconnect(N),W.disconnect(Y),Y.disconnect(N),N.disconnect(U),U.disconnect(h.destination)};return l(vh(B,w),nt,at)},EO=s=>(t,{disableNormalization:e,imag:n,real:i})=>{const r=n instanceof Float32Array?n:new Float32Array(n),o=i instanceof Float32Array?i:new Float32Array(i),a=t.createPeriodicWave(o,r,{disableNormalization:e});if(Array.from(n).length<2)throw s();return a},Ed=(s,t,e,n)=>s.createScriptProcessor(t,e,n),CO=(s,t)=>(e,n)=>{const i=n.channelCountMode;if(i==="clamped-max")throw t();if(e.createStereoPanner===void 0)return s(e,n);const r=e.createStereoPanner();return An(r,n),rn(r,n,"pan"),Object.defineProperty(r,"channelCountMode",{get:()=>i,set:o=>{if(o!==i)throw t()}}),r},RO=(s,t,e,n,i,r)=>{const a=new Float32Array([1,1]),c=Math.PI/2,l={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},h={...l,oversample:"none"},u=(p,_,g,m)=>{const x=new Float32Array(16385),v=new Float32Array(16385);for(let A=0;A<16385;A+=1){const w=A/16384*c;x[A]=Math.cos(w),v[A]=Math.sin(w)}const y=e(p,{...l,gain:0}),b=n(p,{...h,curve:x}),S=n(p,{...h,curve:a}),M=e(p,{...l,gain:0}),T=n(p,{...h,curve:v});return{connectGraph(){_.connect(y),_.connect(S.inputs===void 0?S:S.inputs[0]),_.connect(M),S.connect(g),g.connect(b.inputs===void 0?b:b.inputs[0]),g.connect(T.inputs===void 0?T:T.inputs[0]),b.connect(y.gain),T.connect(M.gain),y.connect(m,0,0),M.connect(m,0,1)},disconnectGraph(){_.disconnect(y),_.disconnect(S.inputs===void 0?S:S.inputs[0]),_.disconnect(M),S.disconnect(g),g.disconnect(b.inputs===void 0?b:b.inputs[0]),g.disconnect(T.inputs===void 0?T:T.inputs[0]),b.disconnect(y.gain),T.disconnect(M.gain),y.disconnect(m,0,0),M.disconnect(m,0,1)}}},d=(p,_,g,m)=>{const x=new Float32Array(16385),v=new Float32Array(16385),y=new Float32Array(16385),b=new Float32Array(16385),S=Math.floor(16385/2);for(let k=0;k<16385;k+=1)if(k>S){const z=(k-S)/(16384-S)*c;x[k]=Math.cos(z),v[k]=Math.sin(z),y[k]=0,b[k]=1}else{const z=k/(16384-S)*c;x[k]=1,v[k]=0,y[k]=Math.cos(z),b[k]=Math.sin(z)}const M=t(p,{channelCount:2,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:2}),T=e(p,{...l,gain:0}),A=n(p,{...h,curve:x}),w=e(p,{...l,gain:0}),E=n(p,{...h,curve:v}),N=n(p,{...h,curve:a}),I=e(p,{...l,gain:0}),P=n(p,{...h,curve:y}),D=e(p,{...l,gain:0}),O=n(p,{...h,curve:b});return{connectGraph(){_.connect(M),_.connect(N.inputs===void 0?N:N.inputs[0]),M.connect(T,0),M.connect(w,0),M.connect(I,1),M.connect(D,1),N.connect(g),g.connect(A.inputs===void 0?A:A.inputs[0]),g.connect(E.inputs===void 0?E:E.inputs[0]),g.connect(P.inputs===void 0?P:P.inputs[0]),g.connect(O.inputs===void 0?O:O.inputs[0]),A.connect(T.gain),E.connect(w.gain),P.connect(I.gain),O.connect(D.gain),T.connect(m,0,0),I.connect(m,0,0),w.connect(m,0,1),D.connect(m,0,1)},disconnectGraph(){_.disconnect(M),_.disconnect(N.inputs===void 0?N:N.inputs[0]),M.disconnect(T,0),M.disconnect(w,0),M.disconnect(I,1),M.disconnect(D,1),N.disconnect(g),g.disconnect(A.inputs===void 0?A:A.inputs[0]),g.disconnect(E.inputs===void 0?E:E.inputs[0]),g.disconnect(P.inputs===void 0?P:P.inputs[0]),g.disconnect(O.inputs===void 0?O:O.inputs[0]),A.disconnect(T.gain),E.disconnect(w.gain),P.disconnect(I.gain),O.disconnect(D.gain),T.disconnect(m,0,0),I.disconnect(m,0,0),w.disconnect(m,0,1),D.disconnect(m,0,1)}}},f=(p,_,g,m,x)=>{if(_===1)return u(p,g,m,x);if(_===2)return d(p,g,m,x);throw i()};return(p,{channelCount:_,channelCountMode:g,pan:m,...x})=>{if(g==="max")throw i();const v=s(p,{...x,channelCount:1,channelCountMode:g,numberOfInputs:2}),y=e(p,{...x,channelCount:_,channelCountMode:g,gain:1}),b=e(p,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:m});let{connectGraph:S,disconnectGraph:M}=f(p,_,y,b,v);Object.defineProperty(b.gain,"defaultValue",{get:()=>0}),Object.defineProperty(b.gain,"maxValue",{get:()=>1}),Object.defineProperty(b.gain,"minValue",{get:()=>-1});const T={get bufferSize(){},get channelCount(){return y.channelCount},set channelCount(N){y.channelCount!==N&&(A&&M(),{connectGraph:S,disconnectGraph:M}=f(p,N,y,b,v),A&&S()),y.channelCount=N},get channelCountMode(){return y.channelCountMode},set channelCountMode(N){if(N==="clamped-max"||N==="max")throw i();y.channelCountMode=N},get channelInterpretation(){return y.channelInterpretation},set channelInterpretation(N){y.channelInterpretation=N},get context(){return y.context},get inputs(){return[y]},get numberOfInputs(){return y.numberOfInputs},get numberOfOutputs(){return y.numberOfOutputs},get pan(){return b.gain},addEventListener(...N){return y.addEventListener(N[0],N[1],N[2])},dispatchEvent(...N){return y.dispatchEvent(N[0])},removeEventListener(...N){return y.removeEventListener(N[0],N[1],N[2])}};let A=!1;const w=()=>{S(),A=!0},E=()=>{M(),A=!1};return r(vh(T,v),w,E)}},NO=(s,t,e,n,i,r,o)=>(a,c)=>{const l=a.createWaveShaper();if(r!==null&&r.name==="webkitAudioContext"&&a.createGain().gain.automationRate===void 0)return e(a,c);An(l,c);const h=c.curve===null||c.curve instanceof Float32Array?c.curve:new Float32Array(c.curve);if(h!==null&&h.length<2)throw t();Qe(l,{curve:h},"curve"),Qe(l,c,"oversample");let u=null,d=!1;return o(l,"curve",_=>()=>_.call(l),_=>g=>(_.call(l,g),d&&(n(g)&&u===null?u=s(a,l):!n(g)&&u!==null&&(u(),u=null)),g)),i(l,()=>{d=!0,n(l.curve)&&(u=s(a,l))},()=>{d=!1,u!==null&&(u(),u=null)})},PO=(s,t,e,n,i)=>(r,{curve:o,oversample:a,...c})=>{const l=r.createWaveShaper(),h=r.createWaveShaper();An(l,c),An(h,c);const u=e(r,{...c,gain:1}),d=e(r,{...c,gain:-1}),f=e(r,{...c,gain:1}),p=e(r,{...c,gain:-1});let _=null,g=!1,m=null;const x={get bufferSize(){},get channelCount(){return l.channelCount},set channelCount(b){u.channelCount=b,d.channelCount=b,l.channelCount=b,f.channelCount=b,h.channelCount=b,p.channelCount=b},get channelCountMode(){return l.channelCountMode},set channelCountMode(b){u.channelCountMode=b,d.channelCountMode=b,l.channelCountMode=b,f.channelCountMode=b,h.channelCountMode=b,p.channelCountMode=b},get channelInterpretation(){return l.channelInterpretation},set channelInterpretation(b){u.channelInterpretation=b,d.channelInterpretation=b,l.channelInterpretation=b,f.channelInterpretation=b,h.channelInterpretation=b,p.channelInterpretation=b},get context(){return l.context},get curve(){return m},set curve(b){if(b!==null&&b.length<2)throw t();if(b===null)l.curve=b,h.curve=b;else{const S=b.length,M=new Float32Array(S+2-S%2),T=new Float32Array(S+2-S%2);M[0]=b[0],T[0]=-b[S-1];const A=Math.ceil((S+1)/2),w=(S+1)/2-1;for(let E=1;E<A;E+=1){const N=E/A*w,I=Math.floor(N),P=Math.ceil(N);M[E]=I===P?b[I]:(1-(N-I))*b[I]+(1-(P-N))*b[P],T[E]=I===P?-b[S-1-I]:-((1-(N-I))*b[S-1-I])-(1-(P-N))*b[S-1-P]}M[A]=S%2===1?b[A-1]:(b[A-2]+b[A-1])/2,l.curve=M,h.curve=T}m=b,g&&(n(m)&&_===null?_=s(r,u):_!==null&&(_(),_=null))},get inputs(){return[u]},get numberOfInputs(){return l.numberOfInputs},get numberOfOutputs(){return l.numberOfOutputs},get oversample(){return l.oversample},set oversample(b){l.oversample=b,h.oversample=b},addEventListener(...b){return u.addEventListener(b[0],b[1],b[2])},dispatchEvent(...b){return u.dispatchEvent(b[0])},removeEventListener(...b){return u.removeEventListener(b[0],b[1],b[2])}};o!==null&&(x.curve=o instanceof Float32Array?o:new Float32Array(o)),a!==x.oversample&&(x.oversample=a);const v=()=>{u.connect(l).connect(f),u.connect(d).connect(h).connect(p).connect(f),g=!0,n(m)&&(_=s(r,u))},y=()=>{u.disconnect(l),l.disconnect(f),u.disconnect(d),d.disconnect(h),h.disconnect(p),p.disconnect(f),g=!1,_!==null&&(_(),_=null)};return i(vh(x,f),v,y)},_i=()=>new DOMException("","NotSupportedError"),DO={numberOfChannels:1},IO=(s,t,e,n,i)=>class extends s{constructor(o,a,c){let l;if(typeof o=="number"&&a!==void 0&&c!==void 0)l={length:a,numberOfChannels:o,sampleRate:c};else if(typeof o=="object")l=o;else throw new Error("The given parameters are not valid.");const{length:h,numberOfChannels:u,sampleRate:d}={...DO,...l},f=n(u,h,d);t(Vu,()=>Vu(f))||f.addEventListener("statechange",(()=>{let p=0;const _=g=>{this._state==="running"&&(p>0?(f.removeEventListener("statechange",_),g.stopImmediatePropagation(),this._waitForThePromiseToSettle(g)):p+=1)};return _})()),super(f,u),this._length=h,this._nativeOfflineAudioContext=f,this._state=null}get length(){return this._nativeOfflineAudioContext.length===void 0?this._length:this._nativeOfflineAudioContext.length}get state(){return this._state===null?this._nativeOfflineAudioContext.state:this._state}startRendering(){return this._state==="running"?Promise.reject(e()):(this._state="running",i(this.destination,this._nativeOfflineAudioContext).finally(()=>{this._state=null,ZA(this)}))}_waitForThePromiseToSettle(o){this._state===null?this._nativeOfflineAudioContext.dispatchEvent(o):setTimeout(()=>this._waitForThePromiseToSettle(o))}},FO={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:440,periodicWave:void 0,type:"sine"},OO=(s,t,e,n,i,r,o)=>class extends s{constructor(c,l){const h=i(c),u={...FO,...l},d=e(h,u),f=r(h),p=f?n():null,_=c.sampleRate/2;super(c,!1,d,p),this._detune=t(this,f,d.detune,153600,-153600),this._frequency=t(this,f,d.frequency,_,-_),this._nativeOscillatorNode=d,this._onended=null,this._oscillatorNodeRenderer=p,this._oscillatorNodeRenderer!==null&&u.periodicWave!==void 0&&(this._oscillatorNodeRenderer.periodicWave=u.periodicWave)}get detune(){return this._detune}get frequency(){return this._frequency}get onended(){return this._onended}set onended(c){const l=typeof c=="function"?o(this,c):null;this._nativeOscillatorNode.onended=l;const h=this._nativeOscillatorNode.onended;this._onended=h!==null&&h===l?c:h}get type(){return this._nativeOscillatorNode.type}set type(c){this._nativeOscillatorNode.type=c,this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=null)}setPeriodicWave(c){this._nativeOscillatorNode.setPeriodicWave(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=c)}start(c=0){if(this._nativeOscillatorNode.start(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.start=c),this.context.state!=="closed"){Zl(this);const l=()=>{this._nativeOscillatorNode.removeEventListener("ended",l),Yr(this)&&Md(this)};this._nativeOscillatorNode.addEventListener("ended",l)}}stop(c=0){this._nativeOscillatorNode.stop(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.stop=c)}},LO=(s,t,e,n,i)=>()=>{const r=new WeakMap;let o=null,a=null,c=null;const l=async(h,u)=>{let d=e(h);const f=ii(d,u);if(!f){const p={channelCount:d.channelCount,channelCountMode:d.channelCountMode,channelInterpretation:d.channelInterpretation,detune:d.detune.value,frequency:d.frequency.value,periodicWave:o===null?void 0:o,type:d.type};d=t(u,p),a!==null&&d.start(a),c!==null&&d.stop(c)}return r.set(u,d),f?(await s(u,h.detune,d.detune),await s(u,h.frequency,d.frequency)):(await n(u,h.detune,d.detune),await n(u,h.frequency,d.frequency)),await i(h,u,d),d};return{set periodicWave(h){o=h},set start(h){a=h},set stop(h){c=h},render(h,u){const d=r.get(u);return d!==void 0?Promise.resolve(d):l(h,u)}}},BO={channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:"inverse",maxDistance:1e4,orientationX:1,orientationY:0,orientationZ:0,panningModel:"equalpower",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1},UO=(s,t,e,n,i,r,o)=>class extends s{constructor(c,l){const h=i(c),u={...BO,...l},d=e(h,u),f=r(h),p=f?n():null;super(c,!1,d,p),this._nativePannerNode=d,this._orientationX=t(this,f,d.orientationX,ci,Si),this._orientationY=t(this,f,d.orientationY,ci,Si),this._orientationZ=t(this,f,d.orientationZ,ci,Si),this._positionX=t(this,f,d.positionX,ci,Si),this._positionY=t(this,f,d.positionY,ci,Si),this._positionZ=t(this,f,d.positionZ,ci,Si),o(this,1)}get coneInnerAngle(){return this._nativePannerNode.coneInnerAngle}set coneInnerAngle(c){this._nativePannerNode.coneInnerAngle=c}get coneOuterAngle(){return this._nativePannerNode.coneOuterAngle}set coneOuterAngle(c){this._nativePannerNode.coneOuterAngle=c}get coneOuterGain(){return this._nativePannerNode.coneOuterGain}set coneOuterGain(c){this._nativePannerNode.coneOuterGain=c}get distanceModel(){return this._nativePannerNode.distanceModel}set distanceModel(c){this._nativePannerNode.distanceModel=c}get maxDistance(){return this._nativePannerNode.maxDistance}set maxDistance(c){this._nativePannerNode.maxDistance=c}get orientationX(){return this._orientationX}get orientationY(){return this._orientationY}get orientationZ(){return this._orientationZ}get panningModel(){return this._nativePannerNode.panningModel}set panningModel(c){this._nativePannerNode.panningModel=c}get positionX(){return this._positionX}get positionY(){return this._positionY}get positionZ(){return this._positionZ}get refDistance(){return this._nativePannerNode.refDistance}set refDistance(c){this._nativePannerNode.refDistance=c}get rolloffFactor(){return this._nativePannerNode.rolloffFactor}set rolloffFactor(c){this._nativePannerNode.rolloffFactor=c}},kO=(s,t,e,n,i,r,o,a,c,l)=>()=>{const h=new WeakMap;let u=null;const d=async(f,p)=>{let _=null,g=r(f);const m={channelCount:g.channelCount,channelCountMode:g.channelCountMode,channelInterpretation:g.channelInterpretation},x={...m,coneInnerAngle:g.coneInnerAngle,coneOuterAngle:g.coneOuterAngle,coneOuterGain:g.coneOuterGain,distanceModel:g.distanceModel,maxDistance:g.maxDistance,panningModel:g.panningModel,refDistance:g.refDistance,rolloffFactor:g.rolloffFactor},v=ii(g,p);if("bufferSize"in g)_=n(p,{...m,gain:1});else if(!v){const y={...x,orientationX:g.orientationX.value,orientationY:g.orientationY.value,orientationZ:g.orientationZ.value,positionX:g.positionX.value,positionY:g.positionY.value,positionZ:g.positionZ.value};g=i(p,y)}if(h.set(p,_===null?g:_),_!==null){if(u===null){if(o===null)throw new Error("Missing the native OfflineAudioContext constructor.");const E=new o(6,f.context.length,p.sampleRate),N=t(E,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6});N.connect(E.destination),u=(async()=>{const I=await Promise.all([f.orientationX,f.orientationY,f.orientationZ,f.positionX,f.positionY,f.positionZ].map(async(P,D)=>{const O=e(E,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:D===0?1:0});return await a(E,P,O.offset),O}));for(let P=0;P<6;P+=1)I[P].connect(N,0,P),I[P].start(0);return l(E)})()}const y=await u,b=n(p,{...m,gain:1});await c(f,p,b);const S=[];for(let E=0;E<y.numberOfChannels;E+=1)S.push(y.getChannelData(E));let M=[S[0][0],S[1][0],S[2][0]],T=[S[3][0],S[4][0],S[5][0]],A=n(p,{...m,gain:1}),w=i(p,{...x,orientationX:M[0],orientationY:M[1],orientationZ:M[2],positionX:T[0],positionY:T[1],positionZ:T[2]});b.connect(A).connect(w.inputs[0]),w.connect(_);for(let E=128;E<y.length;E+=128){const N=[S[0][E],S[1][E],S[2][E]],I=[S[3][E],S[4][E],S[5][E]];if(N.some((P,D)=>P!==M[D])||I.some((P,D)=>P!==T[D])){M=N,T=I;const P=E/p.sampleRate;A.gain.setValueAtTime(0,P),A=n(p,{...m,gain:0}),w=i(p,{...x,orientationX:M[0],orientationY:M[1],orientationZ:M[2],positionX:T[0],positionY:T[1],positionZ:T[2]}),A.gain.setValueAtTime(1,P),b.connect(A).connect(w.inputs[0]),w.connect(_)}}return _}return v?(await s(p,f.orientationX,g.orientationX),await s(p,f.orientationY,g.orientationY),await s(p,f.orientationZ,g.orientationZ),await s(p,f.positionX,g.positionX),await s(p,f.positionY,g.positionY),await s(p,f.positionZ,g.positionZ)):(await a(p,f.orientationX,g.orientationX),await a(p,f.orientationY,g.orientationY),await a(p,f.orientationZ,g.orientationZ),await a(p,f.positionX,g.positionX),await a(p,f.positionY,g.positionY),await a(p,f.positionZ,g.positionZ)),xh(g)?await c(f,p,g.inputs[0]):await c(f,p,g),g};return{render(f,p){const _=h.get(p);return _!==void 0?Promise.resolve(_):d(f,p)}}},zO={disableNormalization:!1},VO=(s,t,e,n)=>class oE{constructor(r,o){const a=t(r),c=n({...zO,...o}),l=s(a,c);return e.add(l),l}static[Symbol.hasInstance](r){return r!==null&&typeof r=="object"&&Object.getPrototypeOf(r)===oE.prototype||e.has(r)}},GO=(s,t)=>(e,n,i)=>(s(n).replay(i),t(n,e,i)),HO=(s,t,e)=>async(n,i,r)=>{const o=s(n);await Promise.all(o.activeInputs.map((a,c)=>Array.from(a).map(async([l,h])=>{const d=await t(l).render(l,i),f=n.context.destination;!e(l)&&(n!==f||!e(n))&&d.connect(r,h,c)})).reduce((a,c)=>[...a,...c],[]))},$O=(s,t,e)=>async(n,i,r)=>{const o=t(n);await Promise.all(Array.from(o.activeInputs).map(async([a,c])=>{const h=await s(a).render(a,i);e(a)||h.connect(r,c)}))},WO=(s,t,e,n)=>i=>s(Vu,()=>Vu(i))?Promise.resolve(s(n,n)).then(r=>{if(!r){const o=e(i,512,0,1);i.oncomplete=()=>{o.onaudioprocess=null,o.disconnect()},o.onaudioprocess=()=>i.currentTime,o.connect(i.destination)}return i.startRendering()}):new Promise(r=>{const o=t(i,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});i.oncomplete=a=>{o.disconnect(),r(a.renderedBuffer)},o.connect(i.destination),i.startRendering()}),qO=s=>(t,e)=>{s.set(t,e)},jO=s=>(t,e)=>s.set(t,e),XO=(s,t,e,n,i,r,o,a)=>(c,l)=>e(c).render(c,l).then(()=>Promise.all(Array.from(n(l)).map(h=>e(h).render(h,l)))).then(()=>i(l)).then(h=>(typeof h.copyFromChannel!="function"?(o(h),wv(h)):t(r,()=>r(h))||a(h),s.add(h),h)),YO={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",pan:0},ZO=(s,t,e,n,i,r)=>class extends s{constructor(a,c){const l=i(a),h={...YO,...c},u=e(l,h),d=r(l),f=d?n():null;super(a,!1,u,f),this._pan=t(this,d,u.pan)}get pan(){return this._pan}},KO=(s,t,e,n,i)=>()=>{const r=new WeakMap,o=async(a,c)=>{let l=e(a);const h=ii(l,c);if(!h){const u={channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,pan:l.pan.value};l=t(c,u)}return r.set(c,l),h?await s(c,a.pan,l.pan):await n(c,a.pan,l.pan),xh(l)?await i(a,c,l.inputs[0]):await i(a,c,l),l};return{render(a,c){const l=r.get(c);return l!==void 0?Promise.resolve(l):o(a,c)}}},QO=s=>()=>{if(s===null)return!1;try{new s({length:1,sampleRate:44100})}catch{return!1}return!0},JO=(s,t)=>async()=>{if(s===null)return!0;if(t===null)return!1;const e=new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor("a",A)'],{type:"application/javascript; charset=utf-8"}),n=new t(1,128,44100),i=URL.createObjectURL(e);let r=!1,o=!1;try{await n.audioWorklet.addModule(i);const a=new s(n,"a",{numberOfOutputs:0}),c=n.createOscillator();a.port.onmessage=()=>r=!0,a.onprocessorerror=()=>o=!0,c.connect(a),c.start(0),await n.startRendering(),await new Promise(l=>setTimeout(l))}catch{}finally{URL.revokeObjectURL(i)}return r&&!o},tL=(s,t)=>()=>{if(t===null)return Promise.resolve(!1);const e=new t(1,1,44100),n=s(e,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return new Promise(i=>{e.oncomplete=()=>{n.disconnect(),i(e.currentTime!==0)},e.startRendering()})},eL=()=>new DOMException("","UnknownError"),nL={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",curve:null,oversample:"none"},iL=(s,t,e,n,i,r,o)=>class extends s{constructor(c,l){const h=i(c),u={...nL,...l},d=e(h,u),p=r(h)?n():null;super(c,!0,d,p),this._isCurveNullified=!1,this._nativeWaveShaperNode=d,o(this,1)}get curve(){return this._isCurveNullified?null:this._nativeWaveShaperNode.curve}set curve(c){if(c===null)this._isCurveNullified=!0,this._nativeWaveShaperNode.curve=new Float32Array([0,0]);else{if(c.length<2)throw t();this._isCurveNullified=!1,this._nativeWaveShaperNode.curve=c}}get oversample(){return this._nativeWaveShaperNode.oversample}set oversample(c){this._nativeWaveShaperNode.oversample=c}},sL=(s,t,e)=>()=>{const n=new WeakMap,i=async(r,o)=>{let a=t(r);if(!ii(a,o)){const l={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,curve:a.curve,oversample:a.oversample};a=s(o,l)}return n.set(o,a),xh(a)?await e(r,o,a.inputs[0]):await e(r,o,a),a};return{render(r,o){const a=n.get(o);return a!==void 0?Promise.resolve(a):i(r,o)}}},rL=()=>typeof window>"u"?null:window,oL=(s,t)=>e=>{e.copyFromChannel=(n,i,r=0)=>{const o=s(r),a=s(i);if(a>=e.numberOfChannels)throw t();const c=e.length,l=e.getChannelData(a),h=n.length;for(let u=o<0?-o:0;u+o<c&&u<h;u+=1)n[u]=l[u+o]},e.copyToChannel=(n,i,r=0)=>{const o=s(r),a=s(i);if(a>=e.numberOfChannels)throw t();const c=e.length,l=e.getChannelData(a),h=n.length;for(let u=o<0?-o:0;u+o<c&&u<h;u+=1)l[u+o]=n[u]}},aL=s=>t=>{t.copyFromChannel=(e=>(n,i,r=0)=>{const o=s(r),a=s(i);if(o<t.length)return e.call(t,n,a,o)})(t.copyFromChannel),t.copyToChannel=(e=>(n,i,r=0)=>{const o=s(r),a=s(i);if(o<t.length)return e.call(t,n,a,o)})(t.copyToChannel)},cL=s=>(t,e)=>{const n=e.createBuffer(1,1,44100);t.buffer===null&&(t.buffer=n),s(t,"buffer",i=>()=>{const r=i.call(t);return r===n?null:r},i=>r=>i.call(t,r===null?n:r))},lL=(s,t)=>(e,n)=>{n.channelCount=1,n.channelCountMode="explicit",Object.defineProperty(n,"channelCount",{get:()=>1,set:()=>{throw s()}}),Object.defineProperty(n,"channelCountMode",{get:()=>"explicit",set:()=>{throw s()}});const i=e.createBufferSource();t(n,()=>{const a=n.numberOfInputs;for(let c=0;c<a;c+=1)i.connect(n,0,c)},()=>i.disconnect(n))},aE=(s,t,e)=>s.copyFromChannel===void 0?s.getChannelData(e)[0]:(s.copyFromChannel(t,e),t[0]),cE=s=>{if(s===null)return!1;const t=s.length;return t%2!==0?s[Math.floor(t/2)]!==0:s[t/2-1]+s[t/2]!==0},Cd=(s,t,e,n)=>{let i=s;for(;!i.hasOwnProperty(t);)i=Object.getPrototypeOf(i);const{get:r,set:o}=Object.getOwnPropertyDescriptor(i,t);Object.defineProperty(s,t,{get:e(r),set:n(o)})},hL=s=>({...s,outputChannelCount:s.outputChannelCount!==void 0?s.outputChannelCount:s.numberOfInputs===1&&s.numberOfOutputs===1?[s.channelCount]:Array.from({length:s.numberOfOutputs},()=>1)}),uL=s=>({...s,channelCount:s.numberOfOutputs}),dL=s=>{const{imag:t,real:e}=s;return t===void 0?e===void 0?{...s,imag:[0,0],real:[0,0]}:{...s,imag:Array.from(e,()=>0),real:e}:e===void 0?{...s,imag:t,real:Array.from(t,()=>0)}:{...s,imag:t,real:e}},lE=(s,t,e)=>{try{s.setValueAtTime(t,e)}catch(n){if(n.code!==9)throw n;lE(s,t,e+1e-7)}},fL=s=>{const t=s.createBufferSource();t.start();try{t.start()}catch{return!0}return!1},pL=s=>{const t=s.createBufferSource(),e=s.createBuffer(1,1,44100);t.buffer=e;try{t.start(0,1)}catch{return!1}return!0},mL=s=>{const t=s.createBufferSource();t.start();try{t.stop()}catch{return!1}return!0},Nv=s=>{const t=s.createOscillator();try{t.start(-1)}catch(e){return e instanceof RangeError}return!1},hE=s=>{const t=s.createBuffer(1,1,44100),e=s.createBufferSource();e.buffer=t,e.start(),e.stop();try{return e.stop(),!0}catch{return!1}},Pv=s=>{const t=s.createOscillator();try{t.stop(-1)}catch(e){return e instanceof RangeError}return!1},gL=s=>{const{port1:t,port2:e}=new MessageChannel;try{t.postMessage(s)}finally{t.close(),e.close()}},_L=s=>{s.start=(t=>(e=0,n=0,i)=>{const r=s.buffer,o=r===null?n:Math.min(r.duration,n);r!==null&&o>r.duration-.5/s.context.sampleRate?t.call(s,e,0,0):t.call(s,e,o,i)})(s.start)},uE=(s,t)=>{const e=t.createGain();s.connect(e);const n=(i=>()=>{i.call(s,e),s.removeEventListener("ended",n)})(s.disconnect);s.addEventListener("ended",n),vh(s,e),s.stop=(i=>{let r=!1;return(o=0)=>{if(r)try{i.call(s,o)}catch{e.gain.setValueAtTime(0,o)}else i.call(s,o),r=!0}})(s.stop)},bh=(s,t)=>e=>{const n={value:s};return Object.defineProperties(e,{currentTarget:n,target:n}),typeof t=="function"?t.call(s,e):t.handleEvent.call(s,e)},yL=UD(xc),xL=$D(xc),vL=nF(Jm),dE=new WeakMap,bL=vF(dE),$s=DI(new Map,new WeakMap),nr=rL(),fE=ZF($s,cr),Dv=xF(di),$n=HO(di,Dv,nc),SL=YD(fE,Xe,$n),Ge=MF(Qm),po=MO(nr),Ue=zF(po),pE=new WeakMap,mE=dF(bh),Rd=tO(nr),Iv=LF(Rd),Fv=BF(nr),gE=UF(nr),Gu=nO(nr),dn=vI(kD(HA),HD(yL,xL,sm,vL,rm,di,bL,Sd,Xe,xc,Yr,nc,Np),$s,PF(uy,rm,di,Xe,zu,Yr),cr,tg,_i,QI(sm,uy,di,Xe,zu,Ge,Yr,Ue),rF(pE,di,ks),mE,Ge,Iv,Fv,gE,Ue,Gu),ML=XD(dn,SL,cr,fE,Ge,Ue),Ov=new WeakSet,SM=KF(nr),_E=WI(new Uint32Array(1)),Lv=oL(_E,cr),Bv=aL(_E),yE=KD(Ov,$s,_i,SM,po,QO(SM),Lv,Bv),eg=WD(Ri),xE=$O(Dv,Td,nc),lr=kI(xE),Sh=JF(eg,$s,fL,pL,mL,Nv,hE,Pv,_L,cL(Cd),uE),hr=GO(bF(Td),xE),TL=tI(lr,Sh,Xe,hr,$n),Ws=bI(zD($A),pE,Tv,SI,DD,ID,FD,OD,LD,cy,VA,Rd,lE),wL=JD(dn,TL,Ws,Fn,Sh,Ge,Ue,bh),AL=lI(dn,hI,cr,Fn,eO(Ri,Cd),Ge,Ue,$n),EL=PI(lr,sE,Xe,hr,$n),vc=jO(dE),CL=NI(dn,Ws,EL,tg,sE,Ge,Ue,vc),da=XF(xc,Fv),RL=lL(Fn,da),fa=lO(Rd,RL),NL=OI(fa,Xe,$n),PL=FI(dn,NL,fa,Ge,Ue),DL=UI(Ad,Xe,$n),IL=BI(dn,DL,Ad,Ge,Ue,uL),FL=dO(eg,Sh,Ri,da),Mh=uO(eg,$s,FL,Nv,Pv),OL=$I(lr,Mh,Xe,hr,$n),LL=HI(dn,Ws,OL,Mh,Ge,Ue,bh),vE=fO(_i,Cd),BL=XI(vE,Xe,$n),UL=jI(dn,BL,vE,Ge,Ue,vc),kL=eF(lr,rE,Xe,hr,$n),zL=tF(dn,Ws,kL,rE,Ge,Ue,vc),bE=pO(_i),VL=lF(lr,bE,Xe,hr,$n),GL=cF(dn,Ws,VL,bE,_i,Ge,Ue,vc),HL=_F(lr,Ri,Xe,hr,$n),$L=gF(dn,Ws,HL,Ri,Ge,Ue),WL=yO(tg,Fn,Ed,_i),ng=WO($s,Ri,Ed,tL(Ri,po)),qL=NF(Sh,Xe,po,$n,ng),jL=mO(WL),XL=CF(dn,jL,qL,Ge,Ue,vc),YL=uI(Ws,fa,Mh,Ed,_i,aE,Ue,Cd),SE=new WeakMap,ZL=jF(AL,YL,mE,Ue,SE,bh),ME=TO(eg,$s,Nv,hE,Pv,uE),KL=LO(lr,ME,Xe,hr,$n),QL=OO(dn,Ws,ME,KL,Ge,Ue,bh),TE=VI(Sh),JL=PO(TE,Fn,Ri,cE,da),ig=NO(TE,Fn,JL,cE,da,Rd,Cd),tB=AO(sm,Fn,fa,Ri,Ed,ig,_i,rm,aE,da),wE=wO(tB),eB=kO(lr,fa,Mh,Ri,wE,Xe,po,hr,$n,ng),nB=UO(dn,Ws,wE,eB,Ge,Ue,vc),iB=EO(cr),sB=VO(iB,Ge,new WeakSet,dL),rB=RO(fa,Ad,Ri,ig,_i,da),AE=CO(rB,_i),oB=KO(lr,AE,Xe,hr,$n),aB=ZO(dn,Ws,AE,oB,Ge,Ue),cB=sL(ig,Xe,$n),lB=iL(dn,Fn,ig,cB,Ge,Ue,vc),EE=VF(nr),Uv=fF(nr),CE=new WeakMap,hB=TF(CE,po),uB=EE?GD($s,_i,uF(nr),Uv,pF(BD),Ge,hB,Ue,Gu,new WeakMap,new WeakMap,JO(Gu,po),nr):void 0,dB=kF(Iv,Ue),fB=KI(Ov,$s,ZI,hF,new WeakSet,Ge,dB,nm,Vu,Lv,Bv),RE=CI(uB,ML,yE,wL,CL,PL,IL,LL,UL,fB,zL,GL,$L,XL,ZL,QL,nB,sB,aB,lB),pB=GF(dn,xO,Ge,Ue),mB=$F(dn,vO,Ge,Ue),gB=WF(dn,bO,Ge,Ue),_B=SO(Fn,Ue),yB=qF(dn,_B,Ge),xB=cI(RE,Fn,_i,eL,pB,mB,gB,yB,Rd),kv=wF(SE),vB=qD(kv),NE=zI(cr),bB=iF(kv),PE=oF(cr),DE=new WeakMap,SB=yF(DE,ks),MB=cO(NE,cr,Fn,fa,Ad,Mh,Ri,Ed,_i,PE,Uv,SB,da),TB=sO(Fn,MB,Ri,_i,da),wB=EI(lr,NE,Sh,fa,Ad,Mh,Ri,bB,PE,Uv,Xe,Gu,po,hr,$n,ng),AB=SF(CE),EB=qO(DE),MM=EE?TI(vB,dn,Ws,wB,TB,di,AB,Ge,Ue,Gu,hL,EB,gL,bh):void 0,CB=YI(_i,po),RB=XO(Ov,$s,Dv,kv,ng,nm,Lv,Bv),NB=IO(RE,$s,Fn,CB,RB),PB=DF(Qm,Iv),DB=IF(Mv,Fv),IB=FF(Tv,gE),FB=OF(Qm,Ue);function ss(s){return s===void 0}function ge(s){return s!==void 0}function OB(s){return typeof s=="function"}function ic(s){return typeof s=="number"}function Ka(s){return Object.prototype.toString.call(s)==="[object Object]"&&s.constructor===Object}function LB(s){return typeof s=="boolean"}function Ls(s){return Array.isArray(s)}function ro(s){return typeof s=="string"}function gf(s){return ro(s)&&/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(s)}function le(s,t){if(!s)throw new Error(t)}function ra(s,t,e=1/0){if(!(t<=s&&s<=e))throw new RangeError(`Value must be within [${t}, ${e}], got: ${s}`)}function IE(s){!s.isOffline&&s.state!=="running"&&zv('The AudioContext is "suspended". Invoke Tone.start() from a user action to start the audio.')}let FE=!1,TM=!1;function wM(s){FE=s}function BB(s){ss(s)&&FE&&!TM&&(TM=!0,zv("Events scheduled inside of scheduled callbacks should use the passed in scheduling time. See https://github.com/Tonejs/Tone.js/wiki/Accurate-Timing"))}let OE=console;function UB(...s){OE.log(...s)}function zv(...s){OE.warn(...s)}function kB(s){return new xB(s)}function zB(s,t,e){return new NB(s,t,e)}const Qa=typeof self=="object"?self:null,VB=Qa&&(Qa.hasOwnProperty("AudioContext")||Qa.hasOwnProperty("webkitAudioContext"));function GB(s,t,e){return le(ge(MM),"This node only works in a secure context (https or localhost)"),new MM(s,t,e)}function qs(s,t,e,n){var i=arguments.length,r=i<3?t:n===null?n=Object.getOwnPropertyDescriptor(t,e):n,o;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")r=Reflect.decorate(s,t,e,n);else for(var a=s.length-1;a>=0;a--)(o=s[a])&&(r=(i<3?o(r):i>3?o(t,e,r):o(t,e))||r);return i>3&&r&&Object.defineProperty(t,e,r),r}function bn(s,t,e,n){function i(r){return r instanceof e?r:new e(function(o){o(r)})}return new(e||(e=Promise))(function(r,o){function a(h){try{l(n.next(h))}catch(u){o(u)}}function c(h){try{l(n.throw(h))}catch(u){o(u)}}function l(h){h.done?r(h.value):i(h.value).then(a,c)}l((n=n.apply(s,t||[])).next())})}class HB{constructor(t,e,n,i){this._callback=t,this._type=e,this._minimumUpdateInterval=Math.max(128/(i||44100),.001),this.updateInterval=n,this._createClock()}_createWorker(){const t=new Blob([`
			// the initial timeout time
			let timeoutTime =  ${(this._updateInterval*1e3).toFixed(1)};
			// onmessage callback
			self.onmessage = function(msg){
				timeoutTime = parseInt(msg.data);
			};
			// the tick function which posts a message
			// and schedules a new tick
			function tick(){
				setTimeout(tick, timeoutTime);
				self.postMessage('tick');
			}
			// call tick initially
			tick();
			`],{type:"text/javascript"}),e=URL.createObjectURL(t),n=new Worker(e);n.onmessage=this._callback.bind(this),this._worker=n}_createTimeout(){this._timeout=setTimeout(()=>{this._createTimeout(),this._callback()},this._updateInterval*1e3)}_createClock(){if(this._type==="worker")try{this._createWorker()}catch{this._type="timeout",this._createClock()}else this._type==="timeout"&&this._createTimeout()}_disposeClock(){this._timeout&&clearTimeout(this._timeout),this._worker&&(this._worker.terminate(),this._worker.onmessage=null)}get updateInterval(){return this._updateInterval}set updateInterval(t){var e;this._updateInterval=Math.max(t,this._minimumUpdateInterval),this._type==="worker"&&((e=this._worker)===null||e===void 0||e.postMessage(this._updateInterval*1e3))}get type(){return this._type}set type(t){this._disposeClock(),this._type=t,this._createClock()}dispose(){this._disposeClock()}}function sc(s){return IB(s)}function Qo(s){return DB(s)}function Pp(s){return FB(s)}function yl(s){return PB(s)}function $B(s){return s instanceof yE}function WB(s,t){return s==="value"||sc(t)||Qo(t)||$B(t)}function Fl(s,...t){if(!t.length)return s;const e=t.shift();if(Ka(s)&&Ka(e))for(const n in e)WB(n,e[n])?s[n]=e[n]:Ka(e[n])?(s[n]||Object.assign(s,{[n]:{}}),Fl(s[n],e[n])):Object.assign(s,{[n]:e[n]});return Fl(s,...t)}function qB(s,t){return s.length===t.length&&s.every((e,n)=>t[n]===e)}function Tt(s,t,e=[],n){const i={},r=Array.from(t);if(Ka(r[0])&&n&&!Reflect.has(r[0],n)&&(Object.keys(r[0]).some(a=>Reflect.has(s,a))||(Fl(i,{[n]:r[0]}),e.splice(e.indexOf(n),1),r.shift())),r.length===1&&Ka(r[0]))Fl(i,r[0]);else for(let o=0;o<e.length;o++)ge(r[o])&&(i[e[o]]=r[o]);return Fl(s,i)}function jB(s){return s.constructor.getDefaults()}function Ol(s,t){return ss(s)?t:s}function AM(s,t){return t.forEach(e=>{Reflect.has(s,e)&&delete s[e]}),s}/**
 * Tone.js
 * @author Yotam Mann
 * @license http://opensource.org/licenses/MIT MIT License
 * @copyright 2014-2019 Yotam Mann
 */class mo{constructor(){this.debug=!1,this._wasDisposed=!1}static getDefaults(){return{}}log(...t){(this.debug||Qa&&this.toString()===Qa.TONE_DEBUG_CLASS)&&UB(this,...t)}dispose(){return this._wasDisposed=!0,this}get disposed(){return this._wasDisposed}toString(){return this.name}}mo.version=zA;const Vv=1e-6;function Kl(s,t){return s>t+Vv}function gy(s,t){return Kl(s,t)||As(s,t)}function lm(s,t){return s+Vv<t}function As(s,t){return Math.abs(s-t)<Vv}function XB(s,t,e){return Math.max(Math.min(s,e),t)}class rs extends mo{constructor(){super(),this.name="Timeline",this._timeline=[];const t=Tt(rs.getDefaults(),arguments,["memory"]);this.memory=t.memory,this.increasing=t.increasing}static getDefaults(){return{memory:1/0,increasing:!1}}get length(){return this._timeline.length}add(t){if(le(Reflect.has(t,"time"),"Timeline: events must have a time attribute"),t.time=t.time.valueOf(),this.increasing&&this.length){const e=this._timeline[this.length-1];le(gy(t.time,e.time),"The time must be greater than or equal to the last scheduled time"),this._timeline.push(t)}else{const e=this._search(t.time);this._timeline.splice(e+1,0,t)}if(this.length>this.memory){const e=this.length-this.memory;this._timeline.splice(0,e)}return this}remove(t){const e=this._timeline.indexOf(t);return e!==-1&&this._timeline.splice(e,1),this}get(t,e="time"){const n=this._search(t,e);return n!==-1?this._timeline[n]:null}peek(){return this._timeline[0]}shift(){return this._timeline.shift()}getAfter(t,e="time"){const n=this._search(t,e);return n+1<this._timeline.length?this._timeline[n+1]:null}getBefore(t){const e=this._timeline.length;if(e>0&&this._timeline[e-1].time<t)return this._timeline[e-1];const n=this._search(t);return n-1>=0?this._timeline[n-1]:null}cancel(t){if(this._timeline.length>1){let e=this._search(t);if(e>=0)if(As(this._timeline[e].time,t)){for(let n=e;n>=0&&As(this._timeline[n].time,t);n--)e=n;this._timeline=this._timeline.slice(0,e)}else this._timeline=this._timeline.slice(0,e+1);else this._timeline=[]}else this._timeline.length===1&&gy(this._timeline[0].time,t)&&(this._timeline=[]);return this}cancelBefore(t){const e=this._search(t);return e>=0&&(this._timeline=this._timeline.slice(e+1)),this}previousEvent(t){const e=this._timeline.indexOf(t);return e>0?this._timeline[e-1]:null}_search(t,e="time"){if(this._timeline.length===0)return-1;let n=0;const i=this._timeline.length;let r=i;if(i>0&&this._timeline[i-1][e]<=t)return i-1;for(;n<r;){let o=Math.floor(n+(r-n)/2);const a=this._timeline[o],c=this._timeline[o+1];if(As(a[e],t)){for(let l=o;l<this._timeline.length;l++){const h=this._timeline[l];if(As(h[e],t))o=l;else break}return o}else{if(lm(a[e],t)&&Kl(c[e],t))return o;Kl(a[e],t)?r=o:n=o+1}}return-1}_iterate(t,e=0,n=this._timeline.length-1){this._timeline.slice(e,n+1).forEach(t)}forEach(t){return this._iterate(t),this}forEachBefore(t,e){const n=this._search(t);return n!==-1&&this._iterate(e,0,n),this}forEachAfter(t,e){const n=this._search(t);return this._iterate(e,n+1),this}forEachBetween(t,e,n){let i=this._search(t),r=this._search(e);return i!==-1&&r!==-1?(this._timeline[i].time!==t&&(i+=1),this._timeline[r].time===e&&(r-=1),this._iterate(n,i,r)):i===-1&&this._iterate(n,0,r),this}forEachFrom(t,e){let n=this._search(t);for(;n>=0&&this._timeline[n].time>=t;)n--;return this._iterate(e,n+1),this}forEachAtTime(t,e){const n=this._search(t);if(n!==-1&&As(this._timeline[n].time,t)){let i=n;for(let r=n;r>=0&&As(this._timeline[r].time,t);r--)i=r;this._iterate(r=>{e(r)},i,n)}return this}dispose(){return super.dispose(),this._timeline=[],this}}const LE=[];function sg(s){LE.push(s)}function YB(s){LE.forEach(t=>t(s))}const BE=[];function rg(s){BE.push(s)}function ZB(s){BE.forEach(t=>t(s))}class Nd extends mo{constructor(){super(...arguments),this.name="Emitter"}on(t,e){return t.split(/\W+/).forEach(i=>{ss(this._events)&&(this._events={}),this._events.hasOwnProperty(i)||(this._events[i]=[]),this._events[i].push(e)}),this}once(t,e){const n=(...i)=>{e(...i),this.off(t,n)};return this.on(t,n),this}off(t,e){return t.split(/\W+/).forEach(i=>{if(ss(this._events)&&(this._events={}),this._events.hasOwnProperty(i))if(ss(e))this._events[i]=[];else{const r=this._events[i];for(let o=r.length-1;o>=0;o--)r[o]===e&&r.splice(o,1)}}),this}emit(t,...e){if(this._events&&this._events.hasOwnProperty(t)){const n=this._events[t].slice(0);for(let i=0,r=n.length;i<r;i++)n[i].apply(this,e)}return this}static mixin(t){["on","once","off","emit"].forEach(e=>{const n=Object.getOwnPropertyDescriptor(Nd.prototype,e);Object.defineProperty(t.prototype,e,n)})}dispose(){return super.dispose(),this._events=void 0,this}}class UE extends Nd{constructor(){super(...arguments),this.isOffline=!1}toJSON(){return{}}}class Pd extends UE{constructor(){var t,e;super(),this.name="Context",this._constants=new Map,this._timeouts=new rs,this._timeoutIds=0,this._initialized=!1,this._closeStarted=!1,this.isOffline=!1,this._workletPromise=null;const n=Tt(Pd.getDefaults(),arguments,["context"]);n.context?(this._context=n.context,this._latencyHint=((t=arguments[0])===null||t===void 0?void 0:t.latencyHint)||""):(this._context=kB({latencyHint:n.latencyHint}),this._latencyHint=n.latencyHint),this._ticker=new HB(this.emit.bind(this,"tick"),n.clockSource,n.updateInterval,this._context.sampleRate),this.on("tick",this._timeoutLoop.bind(this)),this._context.onstatechange=()=>{this.emit("statechange",this.state)},this[!((e=arguments[0])===null||e===void 0)&&e.hasOwnProperty("updateInterval")?"_lookAhead":"lookAhead"]=n.lookAhead}static getDefaults(){return{clockSource:"worker",latencyHint:"interactive",lookAhead:.1,updateInterval:.05}}initialize(){return this._initialized||(YB(this),this._initialized=!0),this}createAnalyser(){return this._context.createAnalyser()}createOscillator(){return this._context.createOscillator()}createBufferSource(){return this._context.createBufferSource()}createBiquadFilter(){return this._context.createBiquadFilter()}createBuffer(t,e,n){return this._context.createBuffer(t,e,n)}createChannelMerger(t){return this._context.createChannelMerger(t)}createChannelSplitter(t){return this._context.createChannelSplitter(t)}createConstantSource(){return this._context.createConstantSource()}createConvolver(){return this._context.createConvolver()}createDelay(t){return this._context.createDelay(t)}createDynamicsCompressor(){return this._context.createDynamicsCompressor()}createGain(){return this._context.createGain()}createIIRFilter(t,e){return this._context.createIIRFilter(t,e)}createPanner(){return this._context.createPanner()}createPeriodicWave(t,e,n){return this._context.createPeriodicWave(t,e,n)}createStereoPanner(){return this._context.createStereoPanner()}createWaveShaper(){return this._context.createWaveShaper()}createMediaStreamSource(t){return le(yl(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamSource(t)}createMediaElementSource(t){return le(yl(this._context),"Not available if OfflineAudioContext"),this._context.createMediaElementSource(t)}createMediaStreamDestination(){return le(yl(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamDestination()}decodeAudioData(t){return this._context.decodeAudioData(t)}get currentTime(){return this._context.currentTime}get state(){return this._context.state}get sampleRate(){return this._context.sampleRate}get listener(){return this.initialize(),this._listener}set listener(t){le(!this._initialized,"The listener cannot be set after initialization."),this._listener=t}get transport(){return this.initialize(),this._transport}set transport(t){le(!this._initialized,"The transport cannot be set after initialization."),this._transport=t}get draw(){return this.initialize(),this._draw}set draw(t){le(!this._initialized,"Draw cannot be set after initialization."),this._draw=t}get destination(){return this.initialize(),this._destination}set destination(t){le(!this._initialized,"The destination cannot be set after initialization."),this._destination=t}createAudioWorkletNode(t,e){return GB(this.rawContext,t,e)}addAudioWorkletModule(t){return bn(this,void 0,void 0,function*(){le(ge(this.rawContext.audioWorklet),"AudioWorkletNode is only available in a secure context (https or localhost)"),this._workletPromise||(this._workletPromise=this.rawContext.audioWorklet.addModule(t)),yield this._workletPromise})}workletsAreReady(){return bn(this,void 0,void 0,function*(){(yield this._workletPromise)?this._workletPromise:Promise.resolve()})}get updateInterval(){return this._ticker.updateInterval}set updateInterval(t){this._ticker.updateInterval=t}get clockSource(){return this._ticker.type}set clockSource(t){this._ticker.type=t}get lookAhead(){return this._lookAhead}set lookAhead(t){this._lookAhead=t,this.updateInterval=t?t/2:.01}get latencyHint(){return this._latencyHint}get rawContext(){return this._context}now(){return this._context.currentTime+this._lookAhead}immediate(){return this._context.currentTime}resume(){return yl(this._context)?this._context.resume():Promise.resolve()}close(){return bn(this,void 0,void 0,function*(){yl(this._context)&&this.state!=="closed"&&!this._closeStarted&&(this._closeStarted=!0,yield this._context.close()),this._initialized&&ZB(this)})}getConstant(t){if(this._constants.has(t))return this._constants.get(t);{const e=this._context.createBuffer(1,128,this._context.sampleRate),n=e.getChannelData(0);for(let r=0;r<n.length;r++)n[r]=t;const i=this._context.createBufferSource();return i.channelCount=1,i.channelCountMode="explicit",i.buffer=e,i.loop=!0,i.start(0),this._constants.set(t,i),i}}dispose(){return super.dispose(),this._ticker.dispose(),this._timeouts.dispose(),Object.keys(this._constants).map(t=>this._constants[t].disconnect()),this.close(),this}_timeoutLoop(){const t=this.now();let e=this._timeouts.peek();for(;this._timeouts.length&&e&&e.time<=t;)e.callback(),this._timeouts.shift(),e=this._timeouts.peek()}setTimeout(t,e){this._timeoutIds++;const n=this.now();return this._timeouts.add({callback:t,id:this._timeoutIds,time:n+e}),this._timeoutIds}clearTimeout(t){return this._timeouts.forEach(e=>{e.id===t&&this._timeouts.remove(e)}),this}clearInterval(t){return this.clearTimeout(t)}setInterval(t,e){const n=++this._timeoutIds,i=()=>{const r=this.now();this._timeouts.add({callback:()=>{t(),i()},id:n,time:r+e})};return i(),n}}class KB extends UE{constructor(){super(...arguments),this.lookAhead=0,this.latencyHint=0,this.isOffline=!1}createAnalyser(){return{}}createOscillator(){return{}}createBufferSource(){return{}}createBiquadFilter(){return{}}createBuffer(t,e,n){return{}}createChannelMerger(t){return{}}createChannelSplitter(t){return{}}createConstantSource(){return{}}createConvolver(){return{}}createDelay(t){return{}}createDynamicsCompressor(){return{}}createGain(){return{}}createIIRFilter(t,e){return{}}createPanner(){return{}}createPeriodicWave(t,e,n){return{}}createStereoPanner(){return{}}createWaveShaper(){return{}}createMediaStreamSource(t){return{}}createMediaElementSource(t){return{}}createMediaStreamDestination(){return{}}decodeAudioData(t){return Promise.resolve({})}createAudioWorkletNode(t,e){return{}}get rawContext(){return{}}addAudioWorkletModule(t){return bn(this,void 0,void 0,function*(){return Promise.resolve()})}resume(){return Promise.resolve()}setTimeout(t,e){return 0}clearTimeout(t){return this}setInterval(t,e){return 0}clearInterval(t){return this}getConstant(t){return{}}get currentTime(){return 0}get state(){return{}}get sampleRate(){return 0}get listener(){return{}}get transport(){return{}}get draw(){return{}}set draw(t){}get destination(){return{}}set destination(t){}now(){return 0}immediate(){return 0}}function cn(s,t){Ls(t)?t.forEach(e=>cn(s,e)):Object.defineProperty(s,t,{enumerable:!0,writable:!1})}function kE(s,t){Ls(t)?t.forEach(e=>kE(s,e)):Object.defineProperty(s,t,{writable:!0})}const Be=()=>{};class We extends mo{constructor(){super(),this.name="ToneAudioBuffer",this.onload=Be;const t=Tt(We.getDefaults(),arguments,["url","onload","onerror"]);this.reverse=t.reverse,this.onload=t.onload,ro(t.url)?this.load(t.url).catch(t.onerror):t.url&&this.set(t.url)}static getDefaults(){return{onerror:Be,onload:Be,reverse:!1}}get sampleRate(){return this._buffer?this._buffer.sampleRate:Ns().sampleRate}set(t){return t instanceof We?t.loaded?this._buffer=t.get():t.onload=()=>{this.set(t),this.onload(this)}:this._buffer=t,this._reversed&&this._reverse(),this}get(){return this._buffer}load(t){return bn(this,void 0,void 0,function*(){const e=We.load(t).then(n=>{this.set(n),this.onload(this)});We.downloads.push(e);try{yield e}finally{const n=We.downloads.indexOf(e);We.downloads.splice(n,1)}return this})}dispose(){return super.dispose(),this._buffer=void 0,this}fromArray(t){const e=Ls(t)&&t[0].length>0,n=e?t.length:1,i=e?t[0].length:t.length,r=Ns(),o=r.createBuffer(n,i,r.sampleRate),a=!e&&n===1?[t]:t;for(let c=0;c<n;c++)o.copyToChannel(a[c],c);return this._buffer=o,this}toMono(t){if(ic(t))this.fromArray(this.toArray(t));else{let e=new Float32Array(this.length);const n=this.numberOfChannels;for(let i=0;i<n;i++){const r=this.toArray(i);for(let o=0;o<r.length;o++)e[o]+=r[o]}e=e.map(i=>i/n),this.fromArray(e)}return this}toArray(t){if(ic(t))return this.getChannelData(t);if(this.numberOfChannels===1)return this.toArray(0);{const e=[];for(let n=0;n<this.numberOfChannels;n++)e[n]=this.getChannelData(n);return e}}getChannelData(t){return this._buffer?this._buffer.getChannelData(t):new Float32Array(0)}slice(t,e=this.duration){le(this.loaded,"Buffer is not loaded");const n=Math.floor(t*this.sampleRate),i=Math.floor(e*this.sampleRate);le(n<i,"The start time must be less than the end time");const r=i-n,o=Ns().createBuffer(this.numberOfChannels,r,this.sampleRate);for(let a=0;a<this.numberOfChannels;a++)o.copyToChannel(this.getChannelData(a).subarray(n,i),a);return new We(o)}_reverse(){if(this.loaded)for(let t=0;t<this.numberOfChannels;t++)this.getChannelData(t).reverse();return this}get loaded(){return this.length>0}get duration(){return this._buffer?this._buffer.duration:0}get length(){return this._buffer?this._buffer.length:0}get numberOfChannels(){return this._buffer?this._buffer.numberOfChannels:0}get reverse(){return this._reversed}set reverse(t){this._reversed!==t&&(this._reversed=t,this._reverse())}static fromArray(t){return new We().fromArray(t)}static fromUrl(t){return bn(this,void 0,void 0,function*(){return yield new We().load(t)})}static load(t){return bn(this,void 0,void 0,function*(){const e=t.match(/\[([^\]\[]+\|.+)\]$/);if(e){const c=e[1].split("|");let l=c[0];for(const h of c)if(We.supportsType(h)){l=h;break}t=t.replace(e[0],l)}const n=We.baseUrl===""||We.baseUrl.endsWith("/")?We.baseUrl:We.baseUrl+"/",i=document.createElement("a");i.href=n+t,i.pathname=(i.pathname+i.hash).split("/").map(encodeURIComponent).join("/");const r=yield fetch(i.href);if(!r.ok)throw new Error(`could not load url: ${t}`);const o=yield r.arrayBuffer();return yield Ns().decodeAudioData(o)})}static supportsType(t){const e=t.split("."),n=e[e.length-1];return document.createElement("audio").canPlayType("audio/"+n)!==""}static loaded(){return bn(this,void 0,void 0,function*(){for(yield Promise.resolve();We.downloads.length;)yield We.downloads[0]})}}We.baseUrl="";We.downloads=[];class Gv extends Pd{constructor(){super({clockSource:"offline",context:Pp(arguments[0])?arguments[0]:zB(arguments[0],arguments[1]*arguments[2],arguments[2]),lookAhead:0,updateInterval:Pp(arguments[0])?128/arguments[0].sampleRate:128/arguments[2]}),this.name="OfflineContext",this._currentTime=0,this.isOffline=!0,this._duration=Pp(arguments[0])?arguments[0].length/arguments[0].sampleRate:arguments[1]}now(){return this._currentTime}get currentTime(){return this._currentTime}_renderClock(t){return bn(this,void 0,void 0,function*(){let e=0;for(;this._duration-this._currentTime>=0;){this.emit("tick"),this._currentTime+=128/this.sampleRate,e++;const n=Math.floor(this.sampleRate/128);t&&e%n===0&&(yield new Promise(i=>setTimeout(i,1)))}})}render(t=!0){return bn(this,void 0,void 0,function*(){yield this.workletsAreReady(),yield this._renderClock(t);const e=yield this._context.startRendering();return new We(e)})}close(){return Promise.resolve()}}const zE=new KB;let ja=zE;function Ns(){return ja===zE&&VB&&QB(new Pd),ja}function QB(s,t=!1){t&&ja.dispose(),yl(s)?ja=new Pd(s):Pp(s)?ja=new Gv(s):ja=s}function JB(){return ja.resume()}if(Qa&&!Qa.TONE_SILENCE_LOGGING){const t=` * Tone.js v${zA} * `;console.log(`%c${t}`,"background: #000; color: #fff")}function tU(s){return Math.pow(10,s/20)}function eU(s){return 20*(Math.log(s)/Math.LN10)}function VE(s){return Math.pow(2,s/12)}let og=440;function nU(){return og}function iU(s){og=s}function _y(s){return Math.round(GE(s))}function GE(s){return 69+12*Math.log2(s/og)}function sU(s){return og*Math.pow(2,(s-69)/12)}class Hv extends mo{constructor(t,e,n){super(),this.defaultUnits="s",this._val=e,this._units=n,this.context=t,this._expressions=this._getExpressions()}_getExpressions(){return{hz:{method:t=>this._frequencyToUnits(parseFloat(t)),regexp:/^(\d+(?:\.\d+)?)hz$/i},i:{method:t=>this._ticksToUnits(parseInt(t,10)),regexp:/^(\d+)i$/i},m:{method:t=>this._beatsToUnits(parseInt(t,10)*this._getTimeSignature()),regexp:/^(\d+)m$/i},n:{method:(t,e)=>{const n=parseInt(t,10),i=e==="."?1.5:1;return n===1?this._beatsToUnits(this._getTimeSignature())*i:this._beatsToUnits(4/n)*i},regexp:/^(\d+)n(\.?)$/i},number:{method:t=>this._expressions[this.defaultUnits].method.call(this,t),regexp:/^(\d+(?:\.\d+)?)$/},s:{method:t=>this._secondsToUnits(parseFloat(t)),regexp:/^(\d+(?:\.\d+)?)s$/},samples:{method:t=>parseInt(t,10)/this.context.sampleRate,regexp:/^(\d+)samples$/},t:{method:t=>{const e=parseInt(t,10);return this._beatsToUnits(8/(Math.floor(e)*3))},regexp:/^(\d+)t$/i},tr:{method:(t,e,n)=>{let i=0;return t&&t!=="0"&&(i+=this._beatsToUnits(this._getTimeSignature()*parseFloat(t))),e&&e!=="0"&&(i+=this._beatsToUnits(parseFloat(e))),n&&n!=="0"&&(i+=this._beatsToUnits(parseFloat(n)/4)),i},regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?$/}}}valueOf(){if(this._val instanceof Hv&&this.fromType(this._val),ss(this._val))return this._noArg();if(ro(this._val)&&ss(this._units)){for(const t in this._expressions)if(this._expressions[t].regexp.test(this._val.trim())){this._units=t;break}}else if(Ka(this._val)){let t=0;for(const e in this._val)if(ge(this._val[e])){const n=this._val[e],i=new this.constructor(this.context,e).valueOf()*n;t+=i}return t}if(ge(this._units)){const t=this._expressions[this._units],e=this._val.toString().trim().match(t.regexp);return e?t.method.apply(this,e.slice(1)):t.method.call(this,this._val)}else return ro(this._val)?parseFloat(this._val):this._val}_frequencyToUnits(t){return 1/t}_beatsToUnits(t){return 60/this._getBpm()*t}_secondsToUnits(t){return t}_ticksToUnits(t){return t*this._beatsToUnits(1)/this._getPPQ()}_noArg(){return this._now()}_getBpm(){return this.context.transport.bpm.value}_getTimeSignature(){return this.context.transport.timeSignature}_getPPQ(){return this.context.transport.PPQ}fromType(t){switch(this._units=void 0,this.defaultUnits){case"s":this._val=t.toSeconds();break;case"i":this._val=t.toTicks();break;case"hz":this._val=t.toFrequency();break;case"midi":this._val=t.toMidi();break}return this}toFrequency(){return 1/this.toSeconds()}toSamples(){return this.toSeconds()*this.context.sampleRate}toMilliseconds(){return this.toSeconds()*1e3}}class Ps extends Hv{constructor(){super(...arguments),this.name="TimeClass"}_getExpressions(){return Object.assign(super._getExpressions(),{now:{method:t=>this._now()+new this.constructor(this.context,t).valueOf(),regexp:/^\+(.+)/},quantize:{method:t=>{const e=new Ps(this.context,t).valueOf();return this._secondsToUnits(this.context.transport.nextSubdivision(e))},regexp:/^@(.+)/}})}quantize(t,e=1){const n=new this.constructor(this.context,t).valueOf(),i=this.valueOf(),a=Math.round(i/n)*n-i;return i+a*e}toNotation(){const t=this.toSeconds(),e=["1m"];for(let r=1;r<9;r++){const o=Math.pow(2,r);e.push(o+"n."),e.push(o+"n"),e.push(o+"t")}e.push("0");let n=e[0],i=new Ps(this.context,e[0]).toSeconds();return e.forEach(r=>{const o=new Ps(this.context,r).toSeconds();Math.abs(o-t)<Math.abs(i-t)&&(n=r,i=o)}),n}toBarsBeatsSixteenths(){const t=this._beatsToUnits(1);let e=this.valueOf()/t;e=parseFloat(e.toFixed(4));const n=Math.floor(e/this._getTimeSignature());let i=e%1*4;e=Math.floor(e)%this._getTimeSignature();const r=i.toString();return r.length>3&&(i=parseFloat(parseFloat(r).toFixed(3))),[n,e,i].join(":")}toTicks(){const t=this._beatsToUnits(1);return this.valueOf()/t*this._getPPQ()}toSeconds(){return this.valueOf()}toMidi(){return _y(this.toFrequency())}_now(){return this.context.now()}}class is extends Ps{constructor(){super(...arguments),this.name="Frequency",this.defaultUnits="hz"}static get A4(){return nU()}static set A4(t){iU(t)}_getExpressions(){return Object.assign({},super._getExpressions(),{midi:{regexp:/^(\d+(?:\.\d+)?midi)/,method(t){return this.defaultUnits==="midi"?t:is.mtof(t)}},note:{regexp:/^([a-g]{1}(?:b|#|##|x|bb|###|#x|x#|bbb)?)(-?[0-9]+)/i,method(t,e){const i=rU[t.toLowerCase()]+(parseInt(e,10)+1)*12;return this.defaultUnits==="midi"?i:is.mtof(i)}},tr:{regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,method(t,e,n){let i=1;return t&&t!=="0"&&(i*=this._beatsToUnits(this._getTimeSignature()*parseFloat(t))),e&&e!=="0"&&(i*=this._beatsToUnits(parseFloat(e))),n&&n!=="0"&&(i*=this._beatsToUnits(parseFloat(n)/4)),i}}})}transpose(t){return new is(this.context,this.valueOf()*VE(t))}harmonize(t){return t.map(e=>this.transpose(e))}toMidi(){return _y(this.valueOf())}toNote(){const t=this.toFrequency(),e=Math.log2(t/is.A4);let n=Math.round(12*e)+57;const i=Math.floor(n/12);return i<0&&(n+=-12*i),oU[n%12]+i.toString()}toSeconds(){return 1/super.toSeconds()}toTicks(){const t=this._beatsToUnits(1),e=this.valueOf()/t;return Math.floor(e*this._getPPQ())}_noArg(){return 0}_frequencyToUnits(t){return t}_ticksToUnits(t){return 1/(t*60/(this._getBpm()*this._getPPQ()))}_beatsToUnits(t){return 1/super._beatsToUnits(t)}_secondsToUnits(t){return 1/t}static mtof(t){return sU(t)}static ftom(t){return _y(t)}}const rU={cbbb:-3,cbb:-2,cb:-1,c:0,"c#":1,cx:2,"c##":2,"c###":3,"cx#":3,"c#x":3,dbbb:-1,dbb:0,db:1,d:2,"d#":3,dx:4,"d##":4,"d###":5,"dx#":5,"d#x":5,ebbb:1,ebb:2,eb:3,e:4,"e#":5,ex:6,"e##":6,"e###":7,"ex#":7,"e#x":7,fbbb:2,fbb:3,fb:4,f:5,"f#":6,fx:7,"f##":7,"f###":8,"fx#":8,"f#x":8,gbbb:4,gbb:5,gb:6,g:7,"g#":8,gx:9,"g##":9,"g###":10,"gx#":10,"g#x":10,abbb:6,abb:7,ab:8,a:9,"a#":10,ax:11,"a##":11,"a###":12,"ax#":12,"a#x":12,bbbb:8,bbb:9,bb:10,b:11,"b#":12,bx:13,"b##":13,"b###":14,"bx#":14,"b#x":14},oU=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"];class Ru extends Ps{constructor(){super(...arguments),this.name="TransportTime"}_now(){return this.context.transport.seconds}}class Ci extends mo{constructor(){super();const t=Tt(Ci.getDefaults(),arguments,["context"]);this.defaultContext?this.context=this.defaultContext:this.context=t.context}static getDefaults(){return{context:Ns()}}now(){return this.context.currentTime+this.context.lookAhead}immediate(){return this.context.currentTime}get sampleTime(){return 1/this.context.sampleRate}get blockTime(){return 128/this.context.sampleRate}toSeconds(t){return BB(t),new Ps(this.context,t).toSeconds()}toFrequency(t){return new is(this.context,t).toFrequency()}toTicks(t){return new Ru(this.context,t).toTicks()}_getPartialProperties(t){const e=this.get();return Object.keys(e).forEach(n=>{ss(t[n])&&delete e[n]}),e}get(){const t=jB(this);return Object.keys(t).forEach(e=>{if(Reflect.has(this,e)){const n=this[e];ge(n)&&ge(n.value)&&ge(n.setValueAtTime)?t[e]=n.value:n instanceof Ci?t[e]=n._getPartialProperties(t[e]):Ls(n)||ic(n)||ro(n)||LB(n)?t[e]=n:delete t[e]}}),t}set(t){return Object.keys(t).forEach(e=>{Reflect.has(this,e)&&ge(this[e])&&(this[e]&&ge(this[e].value)&&ge(this[e].setValueAtTime)?this[e].value!==t[e]&&(this[e].value=t[e]):this[e]instanceof Ci?this[e].set(t[e]):this[e]=t[e])}),this}}class $v extends rs{constructor(t="stopped"){super(),this.name="StateTimeline",this._initial=t,this.setStateAtTime(this._initial,0)}getValueAtTime(t){const e=this.get(t);return e!==null?e.state:this._initial}setStateAtTime(t,e,n){return ra(e,0),this.add(Object.assign({},n,{state:t,time:e})),this}getLastState(t,e){const n=this._search(e);for(let i=n;i>=0;i--){const r=this._timeline[i];if(r.state===t)return r}}getNextState(t,e){const n=this._search(e);if(n!==-1)for(let i=n;i<this._timeline.length;i++){const r=this._timeline[i];if(r.state===t)return r}}}class Ze extends Ci{constructor(){super(Tt(Ze.getDefaults(),arguments,["param","units","convert"])),this.name="Param",this.overridden=!1,this._minOutput=1e-7;const t=Tt(Ze.getDefaults(),arguments,["param","units","convert"]);for(le(ge(t.param)&&(sc(t.param)||t.param instanceof Ze),"param must be an AudioParam");!sc(t.param);)t.param=t.param._param;this._swappable=ge(t.swappable)?t.swappable:!1,this._swappable?(this.input=this.context.createGain(),this._param=t.param,this.input.connect(this._param)):this._param=this.input=t.param,this._events=new rs(1e3),this._initialValue=this._param.defaultValue,this.units=t.units,this.convert=t.convert,this._minValue=t.minValue,this._maxValue=t.maxValue,ge(t.value)&&t.value!==this._toType(this._initialValue)&&this.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(Ci.getDefaults(),{convert:!0,units:"number"})}get value(){const t=this.now();return this.getValueAtTime(t)}set value(t){this.cancelScheduledValues(this.now()),this.setValueAtTime(t,this.now())}get minValue(){return ge(this._minValue)?this._minValue:this.units==="time"||this.units==="frequency"||this.units==="normalRange"||this.units==="positive"||this.units==="transportTime"||this.units==="ticks"||this.units==="bpm"||this.units==="hertz"||this.units==="samples"?0:this.units==="audioRange"?-1:this.units==="decibels"?-1/0:this._param.minValue}get maxValue(){return ge(this._maxValue)?this._maxValue:this.units==="normalRange"||this.units==="audioRange"?1:this._param.maxValue}_is(t,e){return this.units===e}_assertRange(t){return ge(this.maxValue)&&ge(this.minValue)&&ra(t,this._fromType(this.minValue),this._fromType(this.maxValue)),t}_fromType(t){return this.convert&&!this.overridden?this._is(t,"time")?this.toSeconds(t):this._is(t,"decibels")?tU(t):this._is(t,"frequency")?this.toFrequency(t):t:this.overridden?0:t}_toType(t){return this.convert&&this.units==="decibels"?eU(t):t}setValueAtTime(t,e){const n=this.toSeconds(e),i=this._fromType(t);return le(isFinite(i)&&isFinite(n),`Invalid argument(s) to setValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._assertRange(i),this.log(this.units,"setValueAtTime",t,n),this._events.add({time:n,type:"setValueAtTime",value:i}),this._param.setValueAtTime(i,n),this}getValueAtTime(t){const e=Math.max(this.toSeconds(t),0),n=this._events.getAfter(e),i=this._events.get(e);let r=this._initialValue;if(i===null)r=this._initialValue;else if(i.type==="setTargetAtTime"&&(n===null||n.type==="setValueAtTime")){const o=this._events.getBefore(i.time);let a;o===null?a=this._initialValue:a=o.value,i.type==="setTargetAtTime"&&(r=this._exponentialApproach(i.time,a,i.value,i.constant,e))}else if(n===null)r=i.value;else if(n.type==="linearRampToValueAtTime"||n.type==="exponentialRampToValueAtTime"){let o=i.value;if(i.type==="setTargetAtTime"){const a=this._events.getBefore(i.time);a===null?o=this._initialValue:o=a.value}n.type==="linearRampToValueAtTime"?r=this._linearInterpolate(i.time,o,n.time,n.value,e):r=this._exponentialInterpolate(i.time,o,n.time,n.value,e)}else r=i.value;return this._toType(r)}setRampPoint(t){t=this.toSeconds(t);let e=this.getValueAtTime(t);return this.cancelAndHoldAtTime(t),this._fromType(e)===0&&(e=this._toType(this._minOutput)),this.setValueAtTime(e,t),this}linearRampToValueAtTime(t,e){const n=this._fromType(t),i=this.toSeconds(e);return le(isFinite(n)&&isFinite(i),`Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._assertRange(n),this._events.add({time:i,type:"linearRampToValueAtTime",value:n}),this.log(this.units,"linearRampToValueAtTime",t,i),this._param.linearRampToValueAtTime(n,i),this}exponentialRampToValueAtTime(t,e){let n=this._fromType(t);n=As(n,0)?this._minOutput:n,this._assertRange(n);const i=this.toSeconds(e);return le(isFinite(n)&&isFinite(i),`Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._events.add({time:i,type:"exponentialRampToValueAtTime",value:n}),this.log(this.units,"exponentialRampToValueAtTime",t,i),this._param.exponentialRampToValueAtTime(n,i),this}exponentialRampTo(t,e,n){return n=this.toSeconds(n),this.setRampPoint(n),this.exponentialRampToValueAtTime(t,n+this.toSeconds(e)),this}linearRampTo(t,e,n){return n=this.toSeconds(n),this.setRampPoint(n),this.linearRampToValueAtTime(t,n+this.toSeconds(e)),this}targetRampTo(t,e,n){return n=this.toSeconds(n),this.setRampPoint(n),this.exponentialApproachValueAtTime(t,n,e),this}exponentialApproachValueAtTime(t,e,n){e=this.toSeconds(e),n=this.toSeconds(n);const i=Math.log(n+1)/Math.log(200);return this.setTargetAtTime(t,e,i),this.cancelAndHoldAtTime(e+n*.9),this.linearRampToValueAtTime(t,e+n),this}setTargetAtTime(t,e,n){const i=this._fromType(t);le(isFinite(n)&&n>0,"timeConstant must be a number greater than 0");const r=this.toSeconds(e);return this._assertRange(i),le(isFinite(i)&&isFinite(r),`Invalid argument(s) to setTargetAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._events.add({constant:n,time:r,type:"setTargetAtTime",value:i}),this.log(this.units,"setTargetAtTime",t,r,n),this._param.setTargetAtTime(i,r,n),this}setValueCurveAtTime(t,e,n,i=1){n=this.toSeconds(n),e=this.toSeconds(e);const r=this._fromType(t[0])*i;this.setValueAtTime(this._toType(r),e);const o=n/(t.length-1);for(let a=1;a<t.length;a++){const c=this._fromType(t[a])*i;this.linearRampToValueAtTime(this._toType(c),e+a*o)}return this}cancelScheduledValues(t){const e=this.toSeconds(t);return le(isFinite(e),`Invalid argument to cancelScheduledValues: ${JSON.stringify(t)}`),this._events.cancel(e),this._param.cancelScheduledValues(e),this.log(this.units,"cancelScheduledValues",e),this}cancelAndHoldAtTime(t){const e=this.toSeconds(t),n=this._fromType(this.getValueAtTime(e));le(isFinite(e),`Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(t)}`),this.log(this.units,"cancelAndHoldAtTime",e,"value="+n);const i=this._events.get(e),r=this._events.getAfter(e);return i&&As(i.time,e)?r?(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time)):(this._param.cancelAndHoldAtTime(e),this._events.cancel(e+this.sampleTime)):r&&(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time),r.type==="linearRampToValueAtTime"?this.linearRampToValueAtTime(this._toType(n),e):r.type==="exponentialRampToValueAtTime"&&this.exponentialRampToValueAtTime(this._toType(n),e)),this._events.add({time:e,type:"setValueAtTime",value:n}),this._param.setValueAtTime(n,e),this}rampTo(t,e=.1,n){return this.units==="frequency"||this.units==="bpm"||this.units==="decibels"?this.exponentialRampTo(t,e,n):this.linearRampTo(t,e,n),this}apply(t){const e=this.context.currentTime;t.setValueAtTime(this.getValueAtTime(e),e);const n=this._events.get(e);if(n&&n.type==="setTargetAtTime"){const i=this._events.getAfter(n.time),r=i?i.time:e+2,o=(r-e)/10;for(let a=e;a<r;a+=o)t.linearRampToValueAtTime(this.getValueAtTime(a),a)}return this._events.forEachAfter(this.context.currentTime,i=>{i.type==="cancelScheduledValues"?t.cancelScheduledValues(i.time):i.type==="setTargetAtTime"?t.setTargetAtTime(i.value,i.time,i.constant):t[i.type](i.value,i.time)}),this}setParam(t){le(this._swappable,"The Param must be assigned as 'swappable' in the constructor");const e=this.input;return e.disconnect(this._param),this.apply(t),this._param=t,e.connect(this._param),this}dispose(){return super.dispose(),this._events.dispose(),this}get defaultValue(){return this._toType(this._param.defaultValue)}_exponentialApproach(t,e,n,i,r){return n+(e-n)*Math.exp(-(r-t)/i)}_linearInterpolate(t,e,n,i,r){return e+(i-e)*((r-t)/(n-t))}_exponentialInterpolate(t,e,n,i,r){return e*Math.pow(i/e,(r-t)/(n-t))}}class me extends Ci{constructor(){super(...arguments),this._internalChannels=[]}get numberOfInputs(){return ge(this.input)?sc(this.input)||this.input instanceof Ze?1:this.input.numberOfInputs:0}get numberOfOutputs(){return ge(this.output)?this.output.numberOfOutputs:0}_isAudioNode(t){return ge(t)&&(t instanceof me||Qo(t))}_getInternalNodes(){const t=this._internalChannels.slice(0);return this._isAudioNode(this.input)&&t.push(this.input),this._isAudioNode(this.output)&&this.input!==this.output&&t.push(this.output),t}_setChannelProperties(t){this._getInternalNodes().forEach(n=>{n.channelCount=t.channelCount,n.channelCountMode=t.channelCountMode,n.channelInterpretation=t.channelInterpretation})}_getChannelProperties(){const t=this._getInternalNodes();le(t.length>0,"ToneAudioNode does not have any internal nodes");const e=t[0];return{channelCount:e.channelCount,channelCountMode:e.channelCountMode,channelInterpretation:e.channelInterpretation}}get channelCount(){return this._getChannelProperties().channelCount}set channelCount(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelCount:t}))}get channelCountMode(){return this._getChannelProperties().channelCountMode}set channelCountMode(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelCountMode:t}))}get channelInterpretation(){return this._getChannelProperties().channelInterpretation}set channelInterpretation(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelInterpretation:t}))}connect(t,e=0,n=0){return Th(this,t,e,n),this}toDestination(){return this.connect(this.context.destination),this}toMaster(){return zv("toMaster() has been renamed toDestination()"),this.toDestination()}disconnect(t,e=0,n=0){return aU(this,t,e,n),this}chain(...t){return yy(this,...t),this}fan(...t){return t.forEach(e=>this.connect(e)),this}dispose(){return super.dispose(),ge(this.input)&&(this.input instanceof me?this.input.dispose():Qo(this.input)&&this.input.disconnect()),ge(this.output)&&(this.output instanceof me?this.output.dispose():Qo(this.output)&&this.output.disconnect()),this._internalChannels=[],this}}function yy(...s){const t=s.shift();s.reduce((e,n)=>(e instanceof me?e.connect(n):Qo(e)&&Th(e,n),n),t)}function Th(s,t,e=0,n=0){for(le(ge(s),"Cannot connect from undefined node"),le(ge(t),"Cannot connect to undefined node"),(t instanceof me||Qo(t))&&le(t.numberOfInputs>0,"Cannot connect to node with no inputs"),le(s.numberOfOutputs>0,"Cannot connect from node with no outputs");t instanceof me||t instanceof Ze;)ge(t.input)&&(t=t.input);for(;s instanceof me;)ge(s.output)&&(s=s.output);sc(t)?s.connect(t,e):s.connect(t,e,n)}function aU(s,t,e=0,n=0){if(ge(t))for(;t instanceof me;)t=t.input;for(;!Qo(s);)ge(s.output)&&(s=s.output);sc(t)?s.disconnect(t,e):Qo(t)?s.disconnect(t,e,n):s.disconnect()}class Vn extends me{constructor(){super(Tt(Vn.getDefaults(),arguments,["gain","units"])),this.name="Gain",this._gainNode=this.context.createGain(),this.input=this._gainNode,this.output=this._gainNode;const t=Tt(Vn.getDefaults(),arguments,["gain","units"]);this.gain=new Ze({context:this.context,convert:t.convert,param:this._gainNode.gain,units:t.units,value:t.gain,minValue:t.minValue,maxValue:t.maxValue}),cn(this,"gain")}static getDefaults(){return Object.assign(me.getDefaults(),{convert:!0,gain:1,units:"gain"})}dispose(){return super.dispose(),this._gainNode.disconnect(),this.gain.dispose(),this}}class Ql extends me{constructor(t){super(t),this.onended=Be,this._startTime=-1,this._stopTime=-1,this._timeout=-1,this.output=new Vn({context:this.context,gain:0}),this._gainNode=this.output,this.getStateAtTime=function(e){const n=this.toSeconds(e);return this._startTime!==-1&&n>=this._startTime&&(this._stopTime===-1||n<=this._stopTime)?"started":"stopped"},this._fadeIn=t.fadeIn,this._fadeOut=t.fadeOut,this._curve=t.curve,this.onended=t.onended}static getDefaults(){return Object.assign(me.getDefaults(),{curve:"linear",fadeIn:0,fadeOut:0,onended:Be})}_startGain(t,e=1){le(this._startTime===-1,"Source cannot be started more than once");const n=this.toSeconds(this._fadeIn);return this._startTime=t+n,this._startTime=Math.max(this._startTime,this.context.currentTime),n>0?(this._gainNode.gain.setValueAtTime(0,t),this._curve==="linear"?this._gainNode.gain.linearRampToValueAtTime(e,t+n):this._gainNode.gain.exponentialApproachValueAtTime(e,t,n)):this._gainNode.gain.setValueAtTime(e,t),this}stop(t){return this.log("stop",t),this._stopGain(this.toSeconds(t)),this}_stopGain(t){le(this._startTime!==-1,"'start' must be called before 'stop'"),this.cancelStop();const e=this.toSeconds(this._fadeOut);return this._stopTime=this.toSeconds(t)+e,this._stopTime=Math.max(this._stopTime,this.now()),e>0?this._curve==="linear"?this._gainNode.gain.linearRampTo(0,e,t):this._gainNode.gain.targetRampTo(0,e,t):(this._gainNode.gain.cancelAndHoldAtTime(t),this._gainNode.gain.setValueAtTime(0,t)),this.context.clearTimeout(this._timeout),this._timeout=this.context.setTimeout(()=>{const n=this._curve==="exponential"?e*2:0;this._stopSource(this.now()+n),this._onended()},this._stopTime-this.context.currentTime),this}_onended(){if(this.onended!==Be&&(this.onended(this),this.onended=Be,!this.context.isOffline)){const t=()=>this.dispose();typeof window.requestIdleCallback<"u"?window.requestIdleCallback(t):setTimeout(t,1e3)}}get state(){return this.getStateAtTime(this.now())}cancelStop(){return this.log("cancelStop"),le(this._startTime!==-1,"Source is not started"),this._gainNode.gain.cancelScheduledValues(this._startTime+this.sampleTime),this.context.clearTimeout(this._timeout),this._stopTime=-1,this}dispose(){return super.dispose(),this._gainNode.dispose(),this.onended=Be,this}}class hm extends Ql{constructor(){super(Tt(hm.getDefaults(),arguments,["offset"])),this.name="ToneConstantSource",this._source=this.context.createConstantSource();const t=Tt(hm.getDefaults(),arguments,["offset"]);Th(this._source,this._gainNode),this.offset=new Ze({context:this.context,convert:t.convert,param:this._source.offset,units:t.units,value:t.offset,minValue:t.minValue,maxValue:t.maxValue})}static getDefaults(){return Object.assign(Ql.getDefaults(),{convert:!0,offset:1,units:"number"})}start(t){const e=this.toSeconds(t);return this.log("start",e),this._startGain(e),this._source.start(e),this}_stopSource(t){this._source.stop(t)}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._source.disconnect(),this.offset.dispose(),this}}class En extends me{constructor(){super(Tt(En.getDefaults(),arguments,["value","units"])),this.name="Signal",this.override=!0;const t=Tt(En.getDefaults(),arguments,["value","units"]);this.output=this._constantSource=new hm({context:this.context,convert:t.convert,offset:t.value,units:t.units,minValue:t.minValue,maxValue:t.maxValue}),this._constantSource.start(0),this.input=this._param=this._constantSource.offset}static getDefaults(){return Object.assign(me.getDefaults(),{convert:!0,units:"number",value:0})}connect(t,e=0,n=0){return Wv(this,t,e,n),this}dispose(){return super.dispose(),this._param.dispose(),this._constantSource.dispose(),this}setValueAtTime(t,e){return this._param.setValueAtTime(t,e),this}getValueAtTime(t){return this._param.getValueAtTime(t)}setRampPoint(t){return this._param.setRampPoint(t),this}linearRampToValueAtTime(t,e){return this._param.linearRampToValueAtTime(t,e),this}exponentialRampToValueAtTime(t,e){return this._param.exponentialRampToValueAtTime(t,e),this}exponentialRampTo(t,e,n){return this._param.exponentialRampTo(t,e,n),this}linearRampTo(t,e,n){return this._param.linearRampTo(t,e,n),this}targetRampTo(t,e,n){return this._param.targetRampTo(t,e,n),this}exponentialApproachValueAtTime(t,e,n){return this._param.exponentialApproachValueAtTime(t,e,n),this}setTargetAtTime(t,e,n){return this._param.setTargetAtTime(t,e,n),this}setValueCurveAtTime(t,e,n,i){return this._param.setValueCurveAtTime(t,e,n,i),this}cancelScheduledValues(t){return this._param.cancelScheduledValues(t),this}cancelAndHoldAtTime(t){return this._param.cancelAndHoldAtTime(t),this}rampTo(t,e,n){return this._param.rampTo(t,e,n),this}get value(){return this._param.value}set value(t){this._param.value=t}get convert(){return this._param.convert}set convert(t){this._param.convert=t}get units(){return this._param.units}get overridden(){return this._param.overridden}set overridden(t){this._param.overridden=t}get maxValue(){return this._param.maxValue}get minValue(){return this._param.minValue}apply(t){return this._param.apply(t),this}}function Wv(s,t,e,n){(t instanceof Ze||sc(t)||t instanceof En&&t.override)&&(t.cancelScheduledValues(0),t.setValueAtTime(0,0),t instanceof En&&(t.overridden=!0)),Th(s,t,e,n)}class um extends Ze{constructor(){super(Tt(um.getDefaults(),arguments,["value"])),this.name="TickParam",this._events=new rs(1/0),this._multiplier=1;const t=Tt(um.getDefaults(),arguments,["value"]);this._multiplier=t.multiplier,this._events.cancel(0),this._events.add({ticks:0,time:0,type:"setValueAtTime",value:this._fromType(t.value)}),this.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(Ze.getDefaults(),{multiplier:1,units:"hertz",value:1})}setTargetAtTime(t,e,n){e=this.toSeconds(e),this.setRampPoint(e);const i=this._fromType(t),r=this._events.get(e),o=Math.round(Math.max(1/n,1));for(let a=0;a<=o;a++){const c=n*a+e,l=this._exponentialApproach(r.time,r.value,i,n,c);this.linearRampToValueAtTime(this._toType(l),c)}return this}setValueAtTime(t,e){const n=this.toSeconds(e);super.setValueAtTime(t,e);const i=this._events.get(n),r=this._events.previousEvent(i),o=this._getTicksUntilEvent(r,n);return i.ticks=Math.max(o,0),this}linearRampToValueAtTime(t,e){const n=this.toSeconds(e);super.linearRampToValueAtTime(t,e);const i=this._events.get(n),r=this._events.previousEvent(i),o=this._getTicksUntilEvent(r,n);return i.ticks=Math.max(o,0),this}exponentialRampToValueAtTime(t,e){e=this.toSeconds(e);const n=this._fromType(t),i=this._events.get(e),r=Math.round(Math.max((e-i.time)*10,1)),o=(e-i.time)/r;for(let a=0;a<=r;a++){const c=o*a+i.time,l=this._exponentialInterpolate(i.time,i.value,e,n,c);this.linearRampToValueAtTime(this._toType(l),c)}return this}_getTicksUntilEvent(t,e){if(t===null)t={ticks:0,time:0,type:"setValueAtTime",value:0};else if(ss(t.ticks)){const o=this._events.previousEvent(t);t.ticks=this._getTicksUntilEvent(o,t.time)}const n=this._fromType(this.getValueAtTime(t.time));let i=this._fromType(this.getValueAtTime(e));const r=this._events.get(e);return r&&r.time===e&&r.type==="setValueAtTime"&&(i=this._fromType(this.getValueAtTime(e-this.sampleTime))),.5*(e-t.time)*(n+i)+t.ticks}getTicksAtTime(t){const e=this.toSeconds(t),n=this._events.get(e);return Math.max(this._getTicksUntilEvent(n,e),0)}getDurationOfTicks(t,e){const n=this.toSeconds(e),i=this.getTicksAtTime(e);return this.getTimeOfTick(i+t)-n}getTimeOfTick(t){const e=this._events.get(t,"ticks"),n=this._events.getAfter(t,"ticks");if(e&&e.ticks===t)return e.time;if(e&&n&&n.type==="linearRampToValueAtTime"&&e.value!==n.value){const i=this._fromType(this.getValueAtTime(e.time)),o=(this._fromType(this.getValueAtTime(n.time))-i)/(n.time-e.time),a=Math.sqrt(Math.pow(i,2)-2*o*(e.ticks-t)),c=(-i+a)/o,l=(-i-a)/o;return(c>0?c:l)+e.time}else return e?e.value===0?1/0:e.time+(t-e.ticks)/e.value:t/this._initialValue}ticksToTime(t,e){return this.getDurationOfTicks(t,e)}timeToTicks(t,e){const n=this.toSeconds(e),i=this.toSeconds(t),r=this.getTicksAtTime(n);return this.getTicksAtTime(n+i)-r}_fromType(t){return this.units==="bpm"&&this.multiplier?1/(60/t/this.multiplier):super._fromType(t)}_toType(t){return this.units==="bpm"&&this.multiplier?t/this.multiplier*60:super._toType(t)}get multiplier(){return this._multiplier}set multiplier(t){const e=this.value;this._multiplier=t,this.cancelScheduledValues(0),this.setValueAtTime(e,0)}}class dm extends En{constructor(){super(Tt(dm.getDefaults(),arguments,["value"])),this.name="TickSignal";const t=Tt(dm.getDefaults(),arguments,["value"]);this.input=this._param=new um({context:this.context,convert:t.convert,multiplier:t.multiplier,param:this._constantSource.offset,units:t.units,value:t.value})}static getDefaults(){return Object.assign(En.getDefaults(),{multiplier:1,units:"hertz",value:1})}ticksToTime(t,e){return this._param.ticksToTime(t,e)}timeToTicks(t,e){return this._param.timeToTicks(t,e)}getTimeOfTick(t){return this._param.getTimeOfTick(t)}getDurationOfTicks(t,e){return this._param.getDurationOfTicks(t,e)}getTicksAtTime(t){return this._param.getTicksAtTime(t)}get multiplier(){return this._param.multiplier}set multiplier(t){this._param.multiplier=t}dispose(){return super.dispose(),this._param.dispose(),this}}class fm extends Ci{constructor(){super(Tt(fm.getDefaults(),arguments,["frequency"])),this.name="TickSource",this._state=new $v,this._tickOffset=new rs,this._ticksAtTime=new rs,this._secondsAtTime=new rs;const t=Tt(fm.getDefaults(),arguments,["frequency"]);this.frequency=new dm({context:this.context,units:t.units,value:t.frequency}),cn(this,"frequency"),this._state.setStateAtTime("stopped",0),this.setTicksAtTime(0,0)}static getDefaults(){return Object.assign({frequency:1,units:"hertz"},Ci.getDefaults())}get state(){return this.getStateAtTime(this.now())}start(t,e){const n=this.toSeconds(t);return this._state.getValueAtTime(n)!=="started"&&(this._state.setStateAtTime("started",n),ge(e)&&this.setTicksAtTime(e,n),this._ticksAtTime.cancel(n),this._secondsAtTime.cancel(n)),this}stop(t){const e=this.toSeconds(t);if(this._state.getValueAtTime(e)==="stopped"){const n=this._state.get(e);n&&n.time>0&&(this._tickOffset.cancel(n.time),this._state.cancel(n.time))}return this._state.cancel(e),this._state.setStateAtTime("stopped",e),this.setTicksAtTime(0,e),this._ticksAtTime.cancel(e),this._secondsAtTime.cancel(e),this}pause(t){const e=this.toSeconds(t);return this._state.getValueAtTime(e)==="started"&&(this._state.setStateAtTime("paused",e),this._ticksAtTime.cancel(e),this._secondsAtTime.cancel(e)),this}cancel(t){return t=this.toSeconds(t),this._state.cancel(t),this._tickOffset.cancel(t),this._ticksAtTime.cancel(t),this._secondsAtTime.cancel(t),this}getTicksAtTime(t){const e=this.toSeconds(t),n=this._state.getLastState("stopped",e),i=this._ticksAtTime.get(e),r={state:"paused",time:e};this._state.add(r);let o=i||n,a=i?i.ticks:0,c=null;return this._state.forEachBetween(o.time,e+this.sampleTime,l=>{let h=o.time;const u=this._tickOffset.get(l.time);u&&u.time>=o.time&&(a=u.ticks,h=u.time),o.state==="started"&&l.state!=="started"&&(a+=this.frequency.getTicksAtTime(l.time)-this.frequency.getTicksAtTime(h),l.time!==r.time&&(c={state:l.state,time:l.time,ticks:a})),o=l}),this._state.remove(r),c&&this._ticksAtTime.add(c),a}get ticks(){return this.getTicksAtTime(this.now())}set ticks(t){this.setTicksAtTime(t,this.now())}get seconds(){return this.getSecondsAtTime(this.now())}set seconds(t){const e=this.now(),n=this.frequency.timeToTicks(t,e);this.setTicksAtTime(n,e)}getSecondsAtTime(t){t=this.toSeconds(t);const e=this._state.getLastState("stopped",t),n={state:"paused",time:t};this._state.add(n);const i=this._secondsAtTime.get(t);let r=i||e,o=i?i.seconds:0,a=null;return this._state.forEachBetween(r.time,t+this.sampleTime,c=>{let l=r.time;const h=this._tickOffset.get(c.time);h&&h.time>=r.time&&(o=h.seconds,l=h.time),r.state==="started"&&c.state!=="started"&&(o+=c.time-l,c.time!==n.time&&(a={state:c.state,time:c.time,seconds:o})),r=c}),this._state.remove(n),a&&this._secondsAtTime.add(a),o}setTicksAtTime(t,e){return e=this.toSeconds(e),this._tickOffset.cancel(e),this._tickOffset.add({seconds:this.frequency.getDurationOfTicks(t,e),ticks:t,time:e}),this._ticksAtTime.cancel(e),this._secondsAtTime.cancel(e),this}getStateAtTime(t){return t=this.toSeconds(t),this._state.getValueAtTime(t)}getTimeOfTick(t,e=this.now()){const n=this._tickOffset.get(e),i=this._state.get(e),r=Math.max(n.time,i.time),o=this.frequency.getTicksAtTime(r)+t-n.ticks;return this.frequency.getTimeOfTick(o)}forEachTickBetween(t,e,n){let i=this._state.get(t);this._state.forEachBetween(t,e,o=>{i&&i.state==="started"&&o.state!=="started"&&this.forEachTickBetween(Math.max(i.time,t),o.time-this.sampleTime,n),i=o});let r=null;if(i&&i.state==="started"){const o=Math.max(i.time,t),a=this.frequency.getTicksAtTime(o),c=this.frequency.getTicksAtTime(i.time),l=a-c;let h=Math.ceil(l)-l;h=As(h,1)?0:h;let u=this.frequency.getTimeOfTick(a+h);for(;u<e;){try{n(u,Math.round(this.getTicksAtTime(u)))}catch(d){r=d;break}u+=this.frequency.getDurationOfTicks(1,u)}}if(r)throw r;return this}dispose(){return super.dispose(),this._state.dispose(),this._tickOffset.dispose(),this._ticksAtTime.dispose(),this._secondsAtTime.dispose(),this.frequency.dispose(),this}}let HE=class xy extends Ci{constructor(){super(Tt(xy.getDefaults(),arguments,["callback","frequency"])),this.name="Clock",this.callback=Be,this._lastUpdate=0,this._state=new $v("stopped"),this._boundLoop=this._loop.bind(this);const t=Tt(xy.getDefaults(),arguments,["callback","frequency"]);this.callback=t.callback,this._tickSource=new fm({context:this.context,frequency:t.frequency,units:t.units}),this._lastUpdate=0,this.frequency=this._tickSource.frequency,cn(this,"frequency"),this._state.setStateAtTime("stopped",0),this.context.on("tick",this._boundLoop)}static getDefaults(){return Object.assign(Ci.getDefaults(),{callback:Be,frequency:1,units:"hertz"})}get state(){return this._state.getValueAtTime(this.now())}start(t,e){IE(this.context);const n=this.toSeconds(t);return this.log("start",n),this._state.getValueAtTime(n)!=="started"&&(this._state.setStateAtTime("started",n),this._tickSource.start(n,e),n<this._lastUpdate&&this.emit("start",n,e)),this}stop(t){const e=this.toSeconds(t);return this.log("stop",e),this._state.cancel(e),this._state.setStateAtTime("stopped",e),this._tickSource.stop(e),e<this._lastUpdate&&this.emit("stop",e),this}pause(t){const e=this.toSeconds(t);return this._state.getValueAtTime(e)==="started"&&(this._state.setStateAtTime("paused",e),this._tickSource.pause(e),e<this._lastUpdate&&this.emit("pause",e)),this}get ticks(){return Math.ceil(this.getTicksAtTime(this.now()))}set ticks(t){this._tickSource.ticks=t}get seconds(){return this._tickSource.seconds}set seconds(t){this._tickSource.seconds=t}getSecondsAtTime(t){return this._tickSource.getSecondsAtTime(t)}setTicksAtTime(t,e){return this._tickSource.setTicksAtTime(t,e),this}getTimeOfTick(t,e=this.now()){return this._tickSource.getTimeOfTick(t,e)}getTicksAtTime(t){return this._tickSource.getTicksAtTime(t)}nextTickTime(t,e){const n=this.toSeconds(e),i=this.getTicksAtTime(n);return this._tickSource.getTimeOfTick(i+t,n)}_loop(){const t=this._lastUpdate,e=this.now();this._lastUpdate=e,this.log("loop",t,e),t!==e&&(this._state.forEachBetween(t,e,n=>{switch(n.state){case"started":const i=this._tickSource.getTicksAtTime(n.time);this.emit("start",n.time,i);break;case"stopped":n.time!==0&&this.emit("stop",n.time);break;case"paused":this.emit("pause",n.time);break}}),this._tickSource.forEachTickBetween(t,e,(n,i)=>{this.callback(n,i)}))}getStateAtTime(t){const e=this.toSeconds(t);return this._state.getValueAtTime(e)}dispose(){return super.dispose(),this.context.off("tick",this._boundLoop),this._tickSource.dispose(),this._state.dispose(),this}};Nd.mixin(HE);class qv extends mo{constructor(){super(),this.name="ToneAudioBuffers",this._buffers=new Map,this._loadingCount=0;const t=Tt(qv.getDefaults(),arguments,["urls","onload","baseUrl"],"urls");this.baseUrl=t.baseUrl,Object.keys(t.urls).forEach(e=>{this._loadingCount++;const n=t.urls[e];this.add(e,n,this._bufferLoaded.bind(this,t.onload),t.onerror)})}static getDefaults(){return{baseUrl:"",onerror:Be,onload:Be,urls:{}}}has(t){return this._buffers.has(t.toString())}get(t){return le(this.has(t),`ToneAudioBuffers has no buffer named: ${t}`),this._buffers.get(t.toString())}_bufferLoaded(t){this._loadingCount--,this._loadingCount===0&&t&&t()}get loaded(){return Array.from(this._buffers).every(([t,e])=>e.loaded)}add(t,e,n=Be,i=Be){return ro(e)?(this.baseUrl&&e.trim().substring(0,11).toLowerCase()==="data:audio/"&&(this.baseUrl=""),this._buffers.set(t.toString(),new We(this.baseUrl+e,n,i))):this._buffers.set(t.toString(),new We(e,n,i)),this}dispose(){return super.dispose(),this._buffers.forEach(t=>t.dispose()),this._buffers.clear(),this}}class Ml extends Ru{constructor(){super(...arguments),this.name="Ticks",this.defaultUnits="i"}_now(){return this.context.transport.ticks}_beatsToUnits(t){return this._getPPQ()*t}_secondsToUnits(t){return Math.floor(t/(60/this._getBpm())*this._getPPQ())}_ticksToUnits(t){return t}toTicks(){return this.valueOf()}toSeconds(){return this.valueOf()/this._getPPQ()*(60/this._getBpm())}}class cU extends Ci{constructor(){super(...arguments),this.name="Draw",this.expiration=.25,this.anticipation=.008,this._events=new rs,this._boundDrawLoop=this._drawLoop.bind(this),this._animationFrame=-1}schedule(t,e){return this._events.add({callback:t,time:this.toSeconds(e)}),this._events.length===1&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop)),this}cancel(t){return this._events.cancel(this.toSeconds(t)),this}_drawLoop(){const t=this.context.currentTime;for(;this._events.length&&this._events.peek().time-this.anticipation<=t;){const e=this._events.shift();e&&t-e.time<=this.expiration&&e.callback()}this._events.length>0&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop))}dispose(){return super.dispose(),this._events.dispose(),cancelAnimationFrame(this._animationFrame),this}}sg(s=>{s.draw=new cU({context:s})});rg(s=>{s.draw.dispose()});class lU extends mo{constructor(){super(...arguments),this.name="IntervalTimeline",this._root=null,this._length=0}add(t){le(ge(t.time),"Events must have a time property"),le(ge(t.duration),"Events must have a duration parameter"),t.time=t.time.valueOf();let e=new hU(t.time,t.time+t.duration,t);for(this._root===null?this._root=e:this._root.insert(e),this._length++;e!==null;)e.updateHeight(),e.updateMax(),this._rebalance(e),e=e.parent;return this}remove(t){if(this._root!==null){const e=[];this._root.search(t.time,e);for(const n of e)if(n.event===t){this._removeNode(n),this._length--;break}}return this}get length(){return this._length}cancel(t){return this.forEachFrom(t,e=>this.remove(e)),this}_setRoot(t){this._root=t,this._root!==null&&(this._root.parent=null)}_replaceNodeInParent(t,e){t.parent!==null?(t.isLeftChild()?t.parent.left=e:t.parent.right=e,this._rebalance(t.parent)):this._setRoot(e)}_removeNode(t){if(t.left===null&&t.right===null)this._replaceNodeInParent(t,null);else if(t.right===null)this._replaceNodeInParent(t,t.left);else if(t.left===null)this._replaceNodeInParent(t,t.right);else{const e=t.getBalance();let n,i=null;if(e>0)if(t.left.right===null)n=t.left,n.right=t.right,i=n;else{for(n=t.left.right;n.right!==null;)n=n.right;n.parent&&(n.parent.right=n.left,i=n.parent,n.left=t.left,n.right=t.right)}else if(t.right.left===null)n=t.right,n.left=t.left,i=n;else{for(n=t.right.left;n.left!==null;)n=n.left;n.parent&&(n.parent.left=n.right,i=n.parent,n.left=t.left,n.right=t.right)}t.parent!==null?t.isLeftChild()?t.parent.left=n:t.parent.right=n:this._setRoot(n),i&&this._rebalance(i)}t.dispose()}_rotateLeft(t){const e=t.parent,n=t.isLeftChild(),i=t.right;i&&(t.right=i.left,i.left=t),e!==null?n?e.left=i:e.right=i:this._setRoot(i)}_rotateRight(t){const e=t.parent,n=t.isLeftChild(),i=t.left;i&&(t.left=i.right,i.right=t),e!==null?n?e.left=i:e.right=i:this._setRoot(i)}_rebalance(t){const e=t.getBalance();e>1&&t.left?t.left.getBalance()<0?this._rotateLeft(t.left):this._rotateRight(t):e<-1&&t.right&&(t.right.getBalance()>0?this._rotateRight(t.right):this._rotateLeft(t))}get(t){if(this._root!==null){const e=[];if(this._root.search(t,e),e.length>0){let n=e[0];for(let i=1;i<e.length;i++)e[i].low>n.low&&(n=e[i]);return n.event}}return null}forEach(t){if(this._root!==null){const e=[];this._root.traverse(n=>e.push(n)),e.forEach(n=>{n.event&&t(n.event)})}return this}forEachAtTime(t,e){if(this._root!==null){const n=[];this._root.search(t,n),n.forEach(i=>{i.event&&e(i.event)})}return this}forEachFrom(t,e){if(this._root!==null){const n=[];this._root.searchAfter(t,n),n.forEach(i=>{i.event&&e(i.event)})}return this}dispose(){return super.dispose(),this._root!==null&&this._root.traverse(t=>t.dispose()),this._root=null,this}}class hU{constructor(t,e,n){this._left=null,this._right=null,this.parent=null,this.height=0,this.event=n,this.low=t,this.high=e,this.max=this.high}insert(t){t.low<=this.low?this.left===null?this.left=t:this.left.insert(t):this.right===null?this.right=t:this.right.insert(t)}search(t,e){t>this.max||(this.left!==null&&this.left.search(t,e),this.low<=t&&this.high>t&&e.push(this),!(this.low>t)&&this.right!==null&&this.right.search(t,e))}searchAfter(t,e){this.low>=t&&(e.push(this),this.left!==null&&this.left.searchAfter(t,e)),this.right!==null&&this.right.searchAfter(t,e)}traverse(t){t(this),this.left!==null&&this.left.traverse(t),this.right!==null&&this.right.traverse(t)}updateHeight(){this.left!==null&&this.right!==null?this.height=Math.max(this.left.height,this.right.height)+1:this.right!==null?this.height=this.right.height+1:this.left!==null?this.height=this.left.height+1:this.height=0}updateMax(){this.max=this.high,this.left!==null&&(this.max=Math.max(this.max,this.left.max)),this.right!==null&&(this.max=Math.max(this.max,this.right.max))}getBalance(){let t=0;return this.left!==null&&this.right!==null?t=this.left.height-this.right.height:this.left!==null?t=this.left.height+1:this.right!==null&&(t=-(this.right.height+1)),t}isLeftChild(){return this.parent!==null&&this.parent.left===this}get left(){return this._left}set left(t){this._left=t,t!==null&&(t.parent=this),this.updateHeight(),this.updateMax()}get right(){return this._right}set right(t){this._right=t,t!==null&&(t.parent=this),this.updateHeight(),this.updateMax()}dispose(){this.parent=null,this._left=null,this._right=null,this.event=null}}class rc extends me{constructor(){super(Tt(rc.getDefaults(),arguments,["volume"])),this.name="Volume";const t=Tt(rc.getDefaults(),arguments,["volume"]);this.input=this.output=new Vn({context:this.context,gain:t.volume,units:"decibels"}),this.volume=this.output.gain,cn(this,"volume"),this._unmutedVolume=t.volume,this.mute=t.mute}static getDefaults(){return Object.assign(me.getDefaults(),{mute:!1,volume:0})}get mute(){return this.volume.value===-1/0}set mute(t){!this.mute&&t?(this._unmutedVolume=this.volume.value,this.volume.value=-1/0):this.mute&&!t&&(this.volume.value=this._unmutedVolume)}dispose(){return super.dispose(),this.input.dispose(),this.volume.dispose(),this}}class pm extends me{constructor(){super(Tt(pm.getDefaults(),arguments)),this.name="Destination",this.input=new rc({context:this.context}),this.output=new Vn({context:this.context}),this.volume=this.input.volume;const t=Tt(pm.getDefaults(),arguments);yy(this.input,this.output,this.context.rawContext.destination),this.mute=t.mute,this._internalChannels=[this.input,this.context.rawContext.destination,this.output]}static getDefaults(){return Object.assign(me.getDefaults(),{mute:!1,volume:0})}get mute(){return this.input.mute}set mute(t){this.input.mute=t}chain(...t){return this.input.disconnect(),t.unshift(this.input),t.push(this.output),yy(...t),this}get maxChannelCount(){return this.context.rawContext.destination.maxChannelCount}dispose(){return super.dispose(),this.volume.dispose(),this}}sg(s=>{s.destination=new pm({context:s})});rg(s=>{s.destination.dispose()});class uU extends mo{constructor(t){super(),this.name="TimelineValue",this._timeline=new rs({memory:10}),this._initialValue=t}set(t,e){return this._timeline.add({value:t,time:e}),this}get(t){const e=this._timeline.get(t);return e?e.value:this._initialValue}}class Jl extends me{constructor(){super(Object.assign(Tt(Jl.getDefaults(),arguments,["context"])))}connect(t,e=0,n=0){return Wv(this,t,e,n),this}}class th extends Jl{constructor(){super(Object.assign(Tt(th.getDefaults(),arguments,["mapping","length"]))),this.name="WaveShaper",this._shaper=this.context.createWaveShaper(),this.input=this._shaper,this.output=this._shaper;const t=Tt(th.getDefaults(),arguments,["mapping","length"]);Ls(t.mapping)||t.mapping instanceof Float32Array?this.curve=Float32Array.from(t.mapping):OB(t.mapping)&&this.setMap(t.mapping,t.length)}static getDefaults(){return Object.assign(En.getDefaults(),{length:1024})}setMap(t,e=1024){const n=new Float32Array(e);for(let i=0,r=e;i<r;i++){const o=i/(r-1)*2-1;n[i]=t(o,i)}return this.curve=n,this}get curve(){return this._shaper.curve}set curve(t){this._shaper.curve=t}get oversample(){return this._shaper.oversample}set oversample(t){const e=["none","2x","4x"].some(n=>n.includes(t));le(e,"oversampling must be either 'none', '2x', or '4x'"),this._shaper.oversample=t}dispose(){return super.dispose(),this._shaper.disconnect(),this}}class mm extends Jl{constructor(){super(Object.assign(Tt(mm.getDefaults(),arguments,["value"]))),this.name="Pow";const t=Tt(mm.getDefaults(),arguments,["value"]);this._exponentScaler=this.input=this.output=new th({context:this.context,mapping:this._expFunc(t.value),length:8192}),this._exponent=t.value}static getDefaults(){return Object.assign(Jl.getDefaults(),{value:1})}_expFunc(t){return e=>Math.pow(Math.abs(e),t)}get value(){return this._exponent}set value(t){this._exponent=t,this._exponentScaler.setMap(this._expFunc(this._exponent))}dispose(){return super.dispose(),this._exponentScaler.dispose(),this}}class oa{constructor(t,e){this.id=oa._eventId++,this._remainderTime=0;const n=Object.assign(oa.getDefaults(),e);this.transport=t,this.callback=n.callback,this._once=n.once,this.time=Math.floor(n.time),this._remainderTime=n.time-this.time}static getDefaults(){return{callback:Be,once:!1,time:0}}get floatTime(){return this.time+this._remainderTime}invoke(t){if(this.callback){const e=this.transport.bpm.getDurationOfTicks(1,t);this.callback(t+this._remainderTime*e),this._once&&this.transport.clear(this.id)}}dispose(){return this.callback=void 0,this}}oa._eventId=0;class jv extends oa{constructor(t,e){super(t,e),this._currentId=-1,this._nextId=-1,this._nextTick=this.time,this._boundRestart=this._restart.bind(this);const n=Object.assign(jv.getDefaults(),e);this.duration=n.duration,this._interval=n.interval,this._nextTick=n.time,this.transport.on("start",this._boundRestart),this.transport.on("loopStart",this._boundRestart),this.transport.on("ticks",this._boundRestart),this.context=this.transport.context,this._restart()}static getDefaults(){return Object.assign({},oa.getDefaults(),{duration:1/0,interval:1,once:!1})}invoke(t){this._createEvents(t),super.invoke(t)}_createEvent(){return lm(this._nextTick,this.floatTime+this.duration)?this.transport.scheduleOnce(this.invoke.bind(this),new Ml(this.context,this._nextTick).toSeconds()):-1}_createEvents(t){lm(this._nextTick+this._interval,this.floatTime+this.duration)&&(this._nextTick+=this._interval,this._currentId=this._nextId,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new Ml(this.context,this._nextTick).toSeconds()))}_restart(t){this.transport.clear(this._currentId),this.transport.clear(this._nextId),this._nextTick=this.floatTime;const e=this.transport.getTicksAtTime(t);Kl(e,this.time)&&(this._nextTick=this.floatTime+Math.ceil((e-this.floatTime)/this._interval)*this._interval),this._currentId=this._createEvent(),this._nextTick+=this._interval,this._nextId=this._createEvent()}dispose(){return super.dispose(),this.transport.clear(this._currentId),this.transport.clear(this._nextId),this.transport.off("start",this._boundRestart),this.transport.off("loopStart",this._boundRestart),this.transport.off("ticks",this._boundRestart),this}}class Hu extends Ci{constructor(){super(Tt(Hu.getDefaults(),arguments)),this.name="Transport",this._loop=new uU(!1),this._loopStart=0,this._loopEnd=0,this._scheduledEvents={},this._timeline=new rs,this._repeatedEvents=new lU,this._syncedSignals=[],this._swingAmount=0;const t=Tt(Hu.getDefaults(),arguments);this._ppq=t.ppq,this._clock=new HE({callback:this._processTick.bind(this),context:this.context,frequency:0,units:"bpm"}),this._bindClockEvents(),this.bpm=this._clock.frequency,this._clock.frequency.multiplier=t.ppq,this.bpm.setValueAtTime(t.bpm,0),cn(this,"bpm"),this._timeSignature=t.timeSignature,this._swingTicks=t.ppq/2}static getDefaults(){return Object.assign(Ci.getDefaults(),{bpm:120,loopEnd:"4m",loopStart:0,ppq:192,swing:0,swingSubdivision:"8n",timeSignature:4})}_processTick(t,e){if(this._loop.get(t)&&e>=this._loopEnd&&(this.emit("loopEnd",t),this._clock.setTicksAtTime(this._loopStart,t),e=this._loopStart,this.emit("loopStart",t,this._clock.getSecondsAtTime(t)),this.emit("loop",t)),this._swingAmount>0&&e%this._ppq!==0&&e%(this._swingTicks*2)!==0){const n=e%(this._swingTicks*2)/(this._swingTicks*2),i=Math.sin(n*Math.PI)*this._swingAmount;t+=new Ml(this.context,this._swingTicks*2/3).toSeconds()*i}wM(!0),this._timeline.forEachAtTime(e,n=>n.invoke(t)),wM(!1)}schedule(t,e){const n=new oa(this,{callback:t,time:new Ru(this.context,e).toTicks()});return this._addEvent(n,this._timeline)}scheduleRepeat(t,e,n,i=1/0){const r=new jv(this,{callback:t,duration:new Ps(this.context,i).toTicks(),interval:new Ps(this.context,e).toTicks(),time:new Ru(this.context,n).toTicks()});return this._addEvent(r,this._repeatedEvents)}scheduleOnce(t,e){const n=new oa(this,{callback:t,once:!0,time:new Ru(this.context,e).toTicks()});return this._addEvent(n,this._timeline)}clear(t){if(this._scheduledEvents.hasOwnProperty(t)){const e=this._scheduledEvents[t.toString()];e.timeline.remove(e.event),e.event.dispose(),delete this._scheduledEvents[t.toString()]}return this}_addEvent(t,e){return this._scheduledEvents[t.id.toString()]={event:t,timeline:e},e.add(t),t.id}cancel(t=0){const e=this.toTicks(t);return this._timeline.forEachFrom(e,n=>this.clear(n.id)),this._repeatedEvents.forEachFrom(e,n=>this.clear(n.id)),this}_bindClockEvents(){this._clock.on("start",(t,e)=>{e=new Ml(this.context,e).toSeconds(),this.emit("start",t,e)}),this._clock.on("stop",t=>{this.emit("stop",t)}),this._clock.on("pause",t=>{this.emit("pause",t)})}get state(){return this._clock.getStateAtTime(this.now())}start(t,e){this.context.resume();let n;return ge(e)&&(n=this.toTicks(e)),this._clock.start(t,n),this}stop(t){return this._clock.stop(t),this}pause(t){return this._clock.pause(t),this}toggle(t){return t=this.toSeconds(t),this._clock.getStateAtTime(t)!=="started"?this.start(t):this.stop(t),this}get timeSignature(){return this._timeSignature}set timeSignature(t){Ls(t)&&(t=t[0]/t[1]*4),this._timeSignature=t}get loopStart(){return new Ps(this.context,this._loopStart,"i").toSeconds()}set loopStart(t){this._loopStart=this.toTicks(t)}get loopEnd(){return new Ps(this.context,this._loopEnd,"i").toSeconds()}set loopEnd(t){this._loopEnd=this.toTicks(t)}get loop(){return this._loop.get(this.now())}set loop(t){this._loop.set(t,this.now())}setLoopPoints(t,e){return this.loopStart=t,this.loopEnd=e,this}get swing(){return this._swingAmount}set swing(t){this._swingAmount=t}get swingSubdivision(){return new Ml(this.context,this._swingTicks).toNotation()}set swingSubdivision(t){this._swingTicks=this.toTicks(t)}get position(){const t=this.now(),e=this._clock.getTicksAtTime(t);return new Ml(this.context,e).toBarsBeatsSixteenths()}set position(t){const e=this.toTicks(t);this.ticks=e}get seconds(){return this._clock.seconds}set seconds(t){const e=this.now(),n=this._clock.frequency.timeToTicks(t,e);this.ticks=n}get progress(){if(this.loop){const t=this.now();return(this._clock.getTicksAtTime(t)-this._loopStart)/(this._loopEnd-this._loopStart)}else return 0}get ticks(){return this._clock.ticks}set ticks(t){if(this._clock.ticks!==t){const e=this.now();if(this.state==="started"){const n=this._clock.getTicksAtTime(e),i=this._clock.frequency.getDurationOfTicks(Math.ceil(n)-n,e),r=e+i;this.emit("stop",r),this._clock.setTicksAtTime(t,r),this.emit("start",r,this._clock.getSecondsAtTime(r))}else this.emit("ticks",e),this._clock.setTicksAtTime(t,e)}}getTicksAtTime(t){return this._clock.getTicksAtTime(t)}getSecondsAtTime(t){return this._clock.getSecondsAtTime(t)}get PPQ(){return this._clock.frequency.multiplier}set PPQ(t){this._clock.frequency.multiplier=t}nextSubdivision(t){if(t=this.toTicks(t),this.state!=="started")return 0;{const e=this.now(),n=this.getTicksAtTime(e),i=t-n%t;return this._clock.nextTickTime(i,e)}}syncSignal(t,e){const n=this.now();let i=this.bpm,r=1/(60/i.getValueAtTime(n)/this.PPQ),o=[];if(t.units==="time"){const c=.015625/r,l=new Vn(c),h=new mm(-1),u=new Vn(c);i.chain(l,h,u),i=u,r=1/r,o=[l,h,u]}e||(t.getValueAtTime(n)!==0?e=t.getValueAtTime(n)/r:e=0);const a=new Vn(e);return i.connect(a),a.connect(t._param),o.push(a),this._syncedSignals.push({initial:t.value,nodes:o,signal:t}),t.value=0,this}unsyncSignal(t){for(let e=this._syncedSignals.length-1;e>=0;e--){const n=this._syncedSignals[e];n.signal===t&&(n.nodes.forEach(i=>i.dispose()),n.signal.value=n.initial,this._syncedSignals.splice(e,1))}return this}dispose(){return super.dispose(),this._clock.dispose(),kE(this,"bpm"),this._timeline.dispose(),this._repeatedEvents.dispose(),this}}Nd.mixin(Hu);sg(s=>{s.transport=new Hu({context:s})});rg(s=>{s.transport.dispose()});let Xi=class extends me{constructor(t){super(t),this.input=void 0,this._state=new $v("stopped"),this._synced=!1,this._scheduled=[],this._syncedStart=Be,this._syncedStop=Be,this._state.memory=100,this._state.increasing=!0,this._volume=this.output=new rc({context:this.context,mute:t.mute,volume:t.volume}),this.volume=this._volume.volume,cn(this,"volume"),this.onstop=t.onstop}static getDefaults(){return Object.assign(me.getDefaults(),{mute:!1,onstop:Be,volume:0})}get state(){return this._synced?this.context.transport.state==="started"?this._state.getValueAtTime(this.context.transport.seconds):"stopped":this._state.getValueAtTime(this.now())}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}_clampToCurrentTime(t){return this._synced?t:Math.max(t,this.context.currentTime)}start(t,e,n){let i=ss(t)&&this._synced?this.context.transport.seconds:this.toSeconds(t);if(i=this._clampToCurrentTime(i),!this._synced&&this._state.getValueAtTime(i)==="started")le(Kl(i,this._state.get(i).time),"Start time must be strictly greater than previous start time"),this._state.cancel(i),this._state.setStateAtTime("started",i),this.log("restart",i),this.restart(i,e,n);else if(this.log("start",i),this._state.setStateAtTime("started",i),this._synced){const r=this._state.get(i);r&&(r.offset=this.toSeconds(Ol(e,0)),r.duration=n?this.toSeconds(n):void 0);const o=this.context.transport.schedule(a=>{this._start(a,e,n)},i);this._scheduled.push(o),this.context.transport.state==="started"&&this.context.transport.getSecondsAtTime(this.immediate())>i&&this._syncedStart(this.now(),this.context.transport.seconds)}else IE(this.context),this._start(i,e,n);return this}stop(t){let e=ss(t)&&this._synced?this.context.transport.seconds:this.toSeconds(t);if(e=this._clampToCurrentTime(e),this._state.getValueAtTime(e)==="started"||ge(this._state.getNextState("started",e))){if(this.log("stop",e),!this._synced)this._stop(e);else{const n=this.context.transport.schedule(this._stop.bind(this),e);this._scheduled.push(n)}this._state.cancel(e),this._state.setStateAtTime("stopped",e)}return this}restart(t,e,n){return t=this.toSeconds(t),this._state.getValueAtTime(t)==="started"&&(this._state.cancel(t),this._restart(t,e,n)),this}sync(){return this._synced||(this._synced=!0,this._syncedStart=(t,e)=>{if(Kl(e,0)){const n=this._state.get(e);if(n&&n.state==="started"&&n.time!==e){const i=e-this.toSeconds(n.time);let r;n.duration&&(r=this.toSeconds(n.duration)-i),this._start(t,this.toSeconds(n.offset)+i,r)}}},this._syncedStop=t=>{const e=this.context.transport.getSecondsAtTime(Math.max(t-this.sampleTime,0));this._state.getValueAtTime(e)==="started"&&this._stop(t)},this.context.transport.on("start",this._syncedStart),this.context.transport.on("loopStart",this._syncedStart),this.context.transport.on("stop",this._syncedStop),this.context.transport.on("pause",this._syncedStop),this.context.transport.on("loopEnd",this._syncedStop)),this}unsync(){return this._synced&&(this.context.transport.off("stop",this._syncedStop),this.context.transport.off("pause",this._syncedStop),this.context.transport.off("loopEnd",this._syncedStop),this.context.transport.off("start",this._syncedStart),this.context.transport.off("loopStart",this._syncedStart)),this._synced=!1,this._scheduled.forEach(t=>this.context.transport.clear(t)),this._scheduled=[],this._state.cancel(0),this._stop(0),this}dispose(){return super.dispose(),this.onstop=Be,this.unsync(),this._volume.dispose(),this._state.dispose(),this}};class $u extends Ql{constructor(){super(Tt($u.getDefaults(),arguments,["url","onload"])),this.name="ToneBufferSource",this._source=this.context.createBufferSource(),this._internalChannels=[this._source],this._sourceStarted=!1,this._sourceStopped=!1;const t=Tt($u.getDefaults(),arguments,["url","onload"]);Th(this._source,this._gainNode),this._source.onended=()=>this._stopSource(),this.playbackRate=new Ze({context:this.context,param:this._source.playbackRate,units:"positive",value:t.playbackRate}),this.loop=t.loop,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this._buffer=new We(t.url,t.onload,t.onerror),this._internalChannels.push(this._source)}static getDefaults(){return Object.assign(Ql.getDefaults(),{url:new We,loop:!1,loopEnd:0,loopStart:0,onload:Be,onerror:Be,playbackRate:1})}get fadeIn(){return this._fadeIn}set fadeIn(t){this._fadeIn=t}get fadeOut(){return this._fadeOut}set fadeOut(t){this._fadeOut=t}get curve(){return this._curve}set curve(t){this._curve=t}start(t,e,n,i=1){le(this.buffer.loaded,"buffer is either not set or not loaded");const r=this.toSeconds(t);this._startGain(r,i),this.loop?e=Ol(e,this.loopStart):e=Ol(e,0);let o=Math.max(this.toSeconds(e),0);if(this.loop){const a=this.toSeconds(this.loopEnd)||this.buffer.duration,c=this.toSeconds(this.loopStart),l=a-c;gy(o,a)&&(o=(o-c)%l+c),As(o,this.buffer.duration)&&(o=0)}if(this._source.buffer=this.buffer.get(),this._source.loopEnd=this.toSeconds(this.loopEnd)||this.buffer.duration,lm(o,this.buffer.duration)&&(this._sourceStarted=!0,this._source.start(r,o)),ge(n)){let a=this.toSeconds(n);a=Math.max(a,0),this.stop(r+a)}return this}_stopSource(t){!this._sourceStopped&&this._sourceStarted&&(this._sourceStopped=!0,this._source.stop(this.toSeconds(t)),this._onended())}get loopStart(){return this._source.loopStart}set loopStart(t){this._source.loopStart=this.toSeconds(t)}get loopEnd(){return this._source.loopEnd}set loopEnd(t){this._source.loopEnd=this.toSeconds(t)}get buffer(){return this._buffer}set buffer(t){this._buffer.set(t)}get loop(){return this._source.loop}set loop(t){this._source.loop=t,this._sourceStarted&&this.cancelStop()}dispose(){return super.dispose(),this._source.onended=null,this._source.disconnect(),this._buffer.dispose(),this.playbackRate.dispose(),this}}function bc(s,t){return bn(this,void 0,void 0,function*(){const e=t/s.context.sampleRate,n=new Gv(1,e,s.context.sampleRate);return new s.constructor(Object.assign(s.get(),{frequency:2/e,detune:0,context:n})).toDestination().start(0),(yield n.render()).getChannelData(0)})}class gm extends Ql{constructor(){super(Tt(gm.getDefaults(),arguments,["frequency","type"])),this.name="ToneOscillatorNode",this._oscillator=this.context.createOscillator(),this._internalChannels=[this._oscillator];const t=Tt(gm.getDefaults(),arguments,["frequency","type"]);Th(this._oscillator,this._gainNode),this.type=t.type,this.frequency=new Ze({context:this.context,param:this._oscillator.frequency,units:"frequency",value:t.frequency}),this.detune=new Ze({context:this.context,param:this._oscillator.detune,units:"cents",value:t.detune}),cn(this,["frequency","detune"])}static getDefaults(){return Object.assign(Ql.getDefaults(),{detune:0,frequency:440,type:"sine"})}start(t){const e=this.toSeconds(t);return this.log("start",e),this._startGain(e),this._oscillator.start(e),this}_stopSource(t){this._oscillator.stop(t)}setPeriodicWave(t){return this._oscillator.setPeriodicWave(t),this}get type(){return this._oscillator.type}set type(t){this._oscillator.type=t}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._oscillator.disconnect(),this.frequency.dispose(),this.detune.dispose(),this}}class hn extends Xi{constructor(){super(Tt(hn.getDefaults(),arguments,["frequency","type"])),this.name="Oscillator",this._oscillator=null;const t=Tt(hn.getDefaults(),arguments,["frequency","type"]);this.frequency=new En({context:this.context,units:"frequency",value:t.frequency}),cn(this,"frequency"),this.detune=new En({context:this.context,units:"cents",value:t.detune}),cn(this,"detune"),this._partials=t.partials,this._partialCount=t.partialCount,this._type=t.type,t.partialCount&&t.type!=="custom"&&(this._type=this.baseType+t.partialCount.toString()),this.phase=t.phase}static getDefaults(){return Object.assign(Xi.getDefaults(),{detune:0,frequency:440,partialCount:0,partials:[],phase:0,type:"sine"})}_start(t){const e=this.toSeconds(t),n=new gm({context:this.context,onended:()=>this.onstop(this)});this._oscillator=n,this._wave?this._oscillator.setPeriodicWave(this._wave):this._oscillator.type=this._type,this._oscillator.connect(this.output),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.start(e)}_stop(t){const e=this.toSeconds(t);this._oscillator&&this._oscillator.stop(e)}_restart(t){const e=this.toSeconds(t);return this.log("restart",e),this._oscillator&&this._oscillator.cancelStop(),this._state.cancel(e),this}syncFrequency(){return this.context.transport.syncSignal(this.frequency),this}unsyncFrequency(){return this.context.transport.unsyncSignal(this.frequency),this}_getCachedPeriodicWave(){if(this._type==="custom")return hn._periodicWaveCache.find(e=>e.phase===this._phase&&qB(e.partials,this._partials));{const t=hn._periodicWaveCache.find(e=>e.type===this._type&&e.phase===this._phase);return this._partialCount=t?t.partialCount:this._partialCount,t}}get type(){return this._type}set type(t){this._type=t;const e=["sine","square","sawtooth","triangle"].indexOf(t)!==-1;if(this._phase===0&&e)this._wave=void 0,this._partialCount=0,this._oscillator!==null&&(this._oscillator.type=t);else{const n=this._getCachedPeriodicWave();if(ge(n)){const{partials:i,wave:r}=n;this._wave=r,this._partials=i,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave)}else{const[i,r]=this._getRealImaginary(t,this._phase),o=this.context.createPeriodicWave(i,r);this._wave=o,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave),hn._periodicWaveCache.push({imag:r,partialCount:this._partialCount,partials:this._partials,phase:this._phase,real:i,type:this._type,wave:this._wave}),hn._periodicWaveCache.length>100&&hn._periodicWaveCache.shift()}}}get baseType(){return this._type.replace(this.partialCount.toString(),"")}set baseType(t){this.partialCount&&this._type!=="custom"&&t!=="custom"?this.type=t+this.partialCount:this.type=t}get partialCount(){return this._partialCount}set partialCount(t){ra(t,0);let e=this._type;const n=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(this._type);if(n&&(e=n[1]),this._type!=="custom")t===0?this.type=e:this.type=e+t.toString();else{const i=new Float32Array(t);this._partials.forEach((r,o)=>i[o]=r),this._partials=Array.from(i),this.type=this._type}}_getRealImaginary(t,e){let i=2048;const r=new Float32Array(i),o=new Float32Array(i);let a=1;if(t==="custom"){if(a=this._partials.length+1,this._partialCount=this._partials.length,i=a,this._partials.length===0)return[r,o]}else{const c=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(t);c?(a=parseInt(c[2],10)+1,this._partialCount=parseInt(c[2],10),t=c[1],a=Math.max(a,2),i=a):this._partialCount=0,this._partials=[]}for(let c=1;c<i;++c){const l=2/(c*Math.PI);let h;switch(t){case"sine":h=c<=a?1:0,this._partials[c-1]=h;break;case"square":h=c&1?2*l:0,this._partials[c-1]=h;break;case"sawtooth":h=l*(c&1?1:-1),this._partials[c-1]=h;break;case"triangle":c&1?h=2*(l*l)*(c-1>>1&1?-1:1):h=0,this._partials[c-1]=h;break;case"custom":h=this._partials[c-1];break;default:throw new TypeError("Oscillator: invalid type: "+t)}h!==0?(r[c]=-h*Math.sin(e*c),o[c]=h*Math.cos(e*c)):(r[c]=0,o[c]=0)}return[r,o]}_inverseFFT(t,e,n){let i=0;const r=t.length;for(let o=0;o<r;o++)i+=t[o]*Math.cos(o*n)+e[o]*Math.sin(o*n);return i}getInitialValue(){const[t,e]=this._getRealImaginary(this._type,0);let n=0;const i=Math.PI*2,r=32;for(let o=0;o<r;o++)n=Math.max(this._inverseFFT(t,e,o/r*i),n);return XB(-this._inverseFFT(t,e,this._phase)/n,-1,1)}get partials(){return this._partials.slice(0,this.partialCount)}set partials(t){this._partials=t,this._partialCount=this._partials.length,t.length&&(this.type="custom")}get phase(){return this._phase*(180/Math.PI)}set phase(t){this._phase=t*Math.PI/180,this.type=this._type}asArray(t=1024){return bn(this,void 0,void 0,function*(){return bc(this,t)})}dispose(){return super.dispose(),this._oscillator!==null&&this._oscillator.dispose(),this._wave=void 0,this.frequency.dispose(),this.detune.dispose(),this}}hn._periodicWaveCache=[];class dU extends Jl{constructor(){super(...arguments),this.name="AudioToGain",this._norm=new th({context:this.context,mapping:t=>(t+1)/2}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class oc extends En{constructor(){super(Object.assign(Tt(oc.getDefaults(),arguments,["value"]))),this.name="Multiply",this.override=!1;const t=Tt(oc.getDefaults(),arguments,["value"]);this._mult=this.input=this.output=new Vn({context:this.context,minValue:t.minValue,maxValue:t.maxValue}),this.factor=this._param=this._mult.gain,this.factor.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(En.getDefaults(),{value:0})}dispose(){return super.dispose(),this._mult.dispose(),this}}class Wu extends Xi{constructor(){super(Tt(Wu.getDefaults(),arguments,["frequency","type","modulationType"])),this.name="AMOscillator",this._modulationScale=new dU({context:this.context}),this._modulationNode=new Vn({context:this.context});const t=Tt(Wu.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new hn({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase,type:t.type}),this.frequency=this._carrier.frequency,this.detune=this._carrier.detune,this._modulator=new hn({context:this.context,phase:t.phase,type:t.modulationType}),this.harmonicity=new oc({context:this.context,units:"positive",value:t.harmonicity}),this.frequency.chain(this.harmonicity,this._modulator.frequency),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output),cn(this,["frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(hn.getDefaults(),{harmonicity:1,modulationType:"square"})}_start(t){this._modulator.start(t),this._carrier.start(t)}_stop(t){this._modulator.stop(t),this._carrier.stop(t)}_restart(t){this._modulator.restart(t),this._carrier.restart(t)}get type(){return this._carrier.type}set type(t){this._carrier.type=t}get baseType(){return this._carrier.baseType}set baseType(t){this._carrier.baseType=t}get partialCount(){return this._carrier.partialCount}set partialCount(t){this._carrier.partialCount=t}get modulationType(){return this._modulator.type}set modulationType(t){this._modulator.type=t}get phase(){return this._carrier.phase}set phase(t){this._carrier.phase=t,this._modulator.phase=t}get partials(){return this._carrier.partials}set partials(t){this._carrier.partials=t}asArray(t=1024){return bn(this,void 0,void 0,function*(){return bc(this,t)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this._modulationScale.dispose(),this}}class qu extends Xi{constructor(){super(Tt(qu.getDefaults(),arguments,["frequency","type","modulationType"])),this.name="FMOscillator",this._modulationNode=new Vn({context:this.context,gain:0});const t=Tt(qu.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new hn({context:this.context,detune:t.detune,frequency:0,onstop:()=>this.onstop(this),phase:t.phase,type:t.type}),this.detune=this._carrier.detune,this.frequency=new En({context:this.context,units:"frequency",value:t.frequency}),this._modulator=new hn({context:this.context,phase:t.phase,type:t.modulationType}),this.harmonicity=new oc({context:this.context,units:"positive",value:t.harmonicity}),this.modulationIndex=new oc({context:this.context,units:"positive",value:t.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output),this.detune.connect(this._modulator.detune),cn(this,["modulationIndex","frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(hn.getDefaults(),{harmonicity:1,modulationIndex:2,modulationType:"square"})}_start(t){this._modulator.start(t),this._carrier.start(t)}_stop(t){this._modulator.stop(t),this._carrier.stop(t)}_restart(t){return this._modulator.restart(t),this._carrier.restart(t),this}get type(){return this._carrier.type}set type(t){this._carrier.type=t}get baseType(){return this._carrier.baseType}set baseType(t){this._carrier.baseType=t}get partialCount(){return this._carrier.partialCount}set partialCount(t){this._carrier.partialCount=t}get modulationType(){return this._modulator.type}set modulationType(t){this._modulator.type=t}get phase(){return this._carrier.phase}set phase(t){this._carrier.phase=t,this._modulator.phase=t}get partials(){return this._carrier.partials}set partials(t){this._carrier.partials=t}asArray(t=1024){return bn(this,void 0,void 0,function*(){return bc(this,t)})}dispose(){return super.dispose(),this.frequency.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this.modulationIndex.dispose(),this}}class eh extends Xi{constructor(){super(Tt(eh.getDefaults(),arguments,["frequency","width"])),this.name="PulseOscillator",this._widthGate=new Vn({context:this.context,gain:0}),this._thresh=new th({context:this.context,mapping:e=>e<=0?-1:1});const t=Tt(eh.getDefaults(),arguments,["frequency","width"]);this.width=new En({context:this.context,units:"audioRange",value:t.width}),this._triangle=new hn({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase,type:"triangle"}),this.frequency=this._triangle.frequency,this.detune=this._triangle.detune,this._triangle.chain(this._thresh,this.output),this.width.chain(this._widthGate,this._thresh),cn(this,["width","frequency","detune"])}static getDefaults(){return Object.assign(Xi.getDefaults(),{detune:0,frequency:440,phase:0,type:"pulse",width:.2})}_start(t){t=this.toSeconds(t),this._triangle.start(t),this._widthGate.gain.setValueAtTime(1,t)}_stop(t){t=this.toSeconds(t),this._triangle.stop(t),this._widthGate.gain.cancelScheduledValues(t),this._widthGate.gain.setValueAtTime(0,t)}_restart(t){this._triangle.restart(t),this._widthGate.gain.cancelScheduledValues(t),this._widthGate.gain.setValueAtTime(1,t)}get phase(){return this._triangle.phase}set phase(t){this._triangle.phase=t}get type(){return"pulse"}get baseType(){return"pulse"}get partials(){return[]}get partialCount(){return 0}set carrierType(t){this._triangle.type=t}asArray(t=1024){return bn(this,void 0,void 0,function*(){return bc(this,t)})}dispose(){return super.dispose(),this._triangle.dispose(),this.width.dispose(),this._widthGate.dispose(),this._thresh.dispose(),this}}class ju extends Xi{constructor(){super(Tt(ju.getDefaults(),arguments,["frequency","type","spread"])),this.name="FatOscillator",this._oscillators=[];const t=Tt(ju.getDefaults(),arguments,["frequency","type","spread"]);this.frequency=new En({context:this.context,units:"frequency",value:t.frequency}),this.detune=new En({context:this.context,units:"cents",value:t.detune}),this._spread=t.spread,this._type=t.type,this._phase=t.phase,this._partials=t.partials,this._partialCount=t.partialCount,this.count=t.count,cn(this,["frequency","detune"])}static getDefaults(){return Object.assign(hn.getDefaults(),{count:3,spread:20,type:"sawtooth"})}_start(t){t=this.toSeconds(t),this._forEach(e=>e.start(t))}_stop(t){t=this.toSeconds(t),this._forEach(e=>e.stop(t))}_restart(t){this._forEach(e=>e.restart(t))}_forEach(t){for(let e=0;e<this._oscillators.length;e++)t(this._oscillators[e],e)}get type(){return this._type}set type(t){this._type=t,this._forEach(e=>e.type=t)}get spread(){return this._spread}set spread(t){if(this._spread=t,this._oscillators.length>1){const e=-t/2,n=t/(this._oscillators.length-1);this._forEach((i,r)=>i.detune.value=e+n*r)}}get count(){return this._oscillators.length}set count(t){if(ra(t,1),this._oscillators.length!==t){this._forEach(e=>e.dispose()),this._oscillators=[];for(let e=0;e<t;e++){const n=new hn({context:this.context,volume:-6-t*1.1,type:this._type,phase:this._phase+e/t*360,partialCount:this._partialCount,onstop:e===0?()=>this.onstop(this):Be});this.type==="custom"&&(n.partials=this._partials),this.frequency.connect(n.frequency),this.detune.connect(n.detune),n.detune.overridden=!1,n.connect(this.output),this._oscillators[e]=n}this.spread=this._spread,this.state==="started"&&this._forEach(e=>e.start())}}get phase(){return this._phase}set phase(t){this._phase=t,this._forEach((e,n)=>e.phase=this._phase+n/this.count*360)}get baseType(){return this._oscillators[0].baseType}set baseType(t){this._forEach(e=>e.baseType=t),this._type=this._oscillators[0].type}get partials(){return this._oscillators[0].partials}set partials(t){this._partials=t,this._partialCount=this._partials.length,t.length&&(this._type="custom",this._forEach(e=>e.partials=t))}get partialCount(){return this._oscillators[0].partialCount}set partialCount(t){this._partialCount=t,this._forEach(e=>e.partialCount=t),this._type=this._oscillators[0].type}asArray(t=1024){return bn(this,void 0,void 0,function*(){return bc(this,t)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this._forEach(t=>t.dispose()),this}}class Xu extends Xi{constructor(){super(Tt(Xu.getDefaults(),arguments,["frequency","modulationFrequency"])),this.name="PWMOscillator",this.sourceType="pwm",this._scale=new oc({context:this.context,value:2});const t=Tt(Xu.getDefaults(),arguments,["frequency","modulationFrequency"]);this._pulse=new eh({context:this.context,frequency:t.modulationFrequency}),this._pulse.carrierType="sine",this.modulationFrequency=this._pulse.frequency,this._modulator=new hn({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase}),this.frequency=this._modulator.frequency,this.detune=this._modulator.detune,this._modulator.chain(this._scale,this._pulse.width),this._pulse.connect(this.output),cn(this,["modulationFrequency","frequency","detune"])}static getDefaults(){return Object.assign(Xi.getDefaults(),{detune:0,frequency:440,modulationFrequency:.4,phase:0,type:"pwm"})}_start(t){t=this.toSeconds(t),this._modulator.start(t),this._pulse.start(t)}_stop(t){t=this.toSeconds(t),this._modulator.stop(t),this._pulse.stop(t)}_restart(t){this._modulator.restart(t),this._pulse.restart(t)}get type(){return"pwm"}get baseType(){return"pwm"}get partials(){return[]}get partialCount(){return 0}get phase(){return this._modulator.phase}set phase(t){this._modulator.phase=t}asArray(t=1024){return bn(this,void 0,void 0,function*(){return bc(this,t)})}dispose(){return super.dispose(),this._pulse.dispose(),this._scale.dispose(),this._modulator.dispose(),this}}const EM={am:Wu,fat:ju,fm:qu,oscillator:hn,pulse:eh,pwm:Xu};class Yu extends Xi{constructor(){super(Tt(Yu.getDefaults(),arguments,["frequency","type"])),this.name="OmniOscillator";const t=Tt(Yu.getDefaults(),arguments,["frequency","type"]);this.frequency=new En({context:this.context,units:"frequency",value:t.frequency}),this.detune=new En({context:this.context,units:"cents",value:t.detune}),cn(this,["frequency","detune"]),this.set(t)}static getDefaults(){return Object.assign(hn.getDefaults(),qu.getDefaults(),Wu.getDefaults(),ju.getDefaults(),eh.getDefaults(),Xu.getDefaults())}_start(t){this._oscillator.start(t)}_stop(t){this._oscillator.stop(t)}_restart(t){return this._oscillator.restart(t),this}get type(){let t="";return["am","fm","fat"].some(e=>this._sourceType===e)&&(t=this._sourceType),t+this._oscillator.type}set type(t){t.substr(0,2)==="fm"?(this._createNewOscillator("fm"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(2)):t.substr(0,2)==="am"?(this._createNewOscillator("am"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(2)):t.substr(0,3)==="fat"?(this._createNewOscillator("fat"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(3)):t==="pwm"?(this._createNewOscillator("pwm"),this._oscillator=this._oscillator):t==="pulse"?this._createNewOscillator("pulse"):(this._createNewOscillator("oscillator"),this._oscillator=this._oscillator,this._oscillator.type=t)}get partials(){return this._oscillator.partials}set partials(t){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partials=t)}get partialCount(){return this._oscillator.partialCount}set partialCount(t){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partialCount=t)}set(t){return Reflect.has(t,"type")&&t.type&&(this.type=t.type),super.set(t),this}_createNewOscillator(t){if(t!==this._sourceType){this._sourceType=t;const e=EM[t],n=this.now();if(this._oscillator){const i=this._oscillator;i.stop(n),this.context.setTimeout(()=>i.dispose(),this.blockTime)}this._oscillator=new e({context:this.context}),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.connect(this.output),this._oscillator.onstop=()=>this.onstop(this),this.state==="started"&&this._oscillator.start(n)}}get phase(){return this._oscillator.phase}set phase(t){this._oscillator.phase=t}get sourceType(){return this._sourceType}set sourceType(t){let e="sine";this._oscillator.type!=="pwm"&&this._oscillator.type!=="pulse"&&(e=this._oscillator.type),t==="fm"?this.type="fm"+e:t==="am"?this.type="am"+e:t==="fat"?this.type="fat"+e:t==="oscillator"?this.type=e:t==="pulse"?this.type="pulse":t==="pwm"&&(this.type="pwm")}_getOscType(t,e){return t instanceof EM[e]}get baseType(){return this._oscillator.baseType}set baseType(t){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&t!=="pulse"&&t!=="pwm"&&(this._oscillator.baseType=t)}get width(){if(this._getOscType(this._oscillator,"pulse"))return this._oscillator.width}get count(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.count}set count(t){this._getOscType(this._oscillator,"fat")&&ic(t)&&(this._oscillator.count=t)}get spread(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.spread}set spread(t){this._getOscType(this._oscillator,"fat")&&ic(t)&&(this._oscillator.spread=t)}get modulationType(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.modulationType}set modulationType(t){(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))&&ro(t)&&(this._oscillator.modulationType=t)}get modulationIndex(){if(this._getOscType(this._oscillator,"fm"))return this._oscillator.modulationIndex}get harmonicity(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.harmonicity}get modulationFrequency(){if(this._getOscType(this._oscillator,"pwm"))return this._oscillator.modulationFrequency}asArray(t=1024){return bn(this,void 0,void 0,function*(){return bc(this,t)})}dispose(){return super.dispose(),this.detune.dispose(),this.frequency.dispose(),this._oscillator.dispose(),this}}function $E(s,t=1/0){const e=new WeakMap;return function(n,i){Reflect.defineProperty(n,i,{configurable:!0,enumerable:!0,get:function(){return e.get(this)},set:function(r){ra(r,s,t),e.set(this,r)}})}}function go(s,t=1/0){const e=new WeakMap;return function(n,i){Reflect.defineProperty(n,i,{configurable:!0,enumerable:!0,get:function(){return e.get(this)},set:function(r){ra(this.toSeconds(r),s,t),e.set(this,r)}})}}class Zu extends Xi{constructor(){super(Tt(Zu.getDefaults(),arguments,["url","onload"])),this.name="Player",this._activeSources=new Set;const t=Tt(Zu.getDefaults(),arguments,["url","onload"]);this._buffer=new We({onload:this._onload.bind(this,t.onload),onerror:t.onerror,reverse:t.reverse,url:t.url}),this.autostart=t.autostart,this._loop=t.loop,this._loopStart=t.loopStart,this._loopEnd=t.loopEnd,this._playbackRate=t.playbackRate,this.fadeIn=t.fadeIn,this.fadeOut=t.fadeOut}static getDefaults(){return Object.assign(Xi.getDefaults(),{autostart:!1,fadeIn:0,fadeOut:0,loop:!1,loopEnd:0,loopStart:0,onload:Be,onerror:Be,playbackRate:1,reverse:!1})}load(t){return bn(this,void 0,void 0,function*(){return yield this._buffer.load(t),this._onload(),this})}_onload(t=Be){t(),this.autostart&&this.start()}_onSourceEnd(t){this.onstop(this),this._activeSources.delete(t),this._activeSources.size===0&&!this._synced&&this._state.getValueAtTime(this.now())==="started"&&(this._state.cancel(this.now()),this._state.setStateAtTime("stopped",this.now()))}start(t,e,n){return super.start(t,e,n),this}_start(t,e,n){this._loop?e=Ol(e,this._loopStart):e=Ol(e,0);const i=this.toSeconds(e),r=n;n=Ol(n,Math.max(this._buffer.duration-i,0));let o=this.toSeconds(n);o=o/this._playbackRate,t=this.toSeconds(t);const a=new $u({url:this._buffer,context:this.context,fadeIn:this.fadeIn,fadeOut:this.fadeOut,loop:this._loop,loopEnd:this._loopEnd,loopStart:this._loopStart,onended:this._onSourceEnd.bind(this),playbackRate:this._playbackRate}).connect(this.output);!this._loop&&!this._synced&&(this._state.cancel(t+o),this._state.setStateAtTime("stopped",t+o,{implicitEnd:!0})),this._activeSources.add(a),this._loop&&ss(r)?a.start(t,i):a.start(t,i,o-this.toSeconds(this.fadeOut))}_stop(t){const e=this.toSeconds(t);this._activeSources.forEach(n=>n.stop(e))}restart(t,e,n){return super.restart(t,e,n),this}_restart(t,e,n){var i;(i=[...this._activeSources].pop())===null||i===void 0||i.stop(t),this._start(t,e,n)}seek(t,e){const n=this.toSeconds(e);if(this._state.getValueAtTime(n)==="started"){const i=this.toSeconds(t);this._stop(n),this._start(n,i)}return this}setLoopPoints(t,e){return this.loopStart=t,this.loopEnd=e,this}get loopStart(){return this._loopStart}set loopStart(t){this._loopStart=t,this.buffer.loaded&&ra(this.toSeconds(t),0,this.buffer.duration),this._activeSources.forEach(e=>{e.loopStart=t})}get loopEnd(){return this._loopEnd}set loopEnd(t){this._loopEnd=t,this.buffer.loaded&&ra(this.toSeconds(t),0,this.buffer.duration),this._activeSources.forEach(e=>{e.loopEnd=t})}get buffer(){return this._buffer}set buffer(t){this._buffer.set(t)}get loop(){return this._loop}set loop(t){if(this._loop!==t&&(this._loop=t,this._activeSources.forEach(e=>{e.loop=t}),t)){const e=this._state.getNextState("stopped",this.now());e&&this._state.cancel(e.time)}}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t;const e=this.now(),n=this._state.getNextState("stopped",e);n&&n.implicitEnd&&(this._state.cancel(n.time),this._activeSources.forEach(i=>i.cancelStop())),this._activeSources.forEach(i=>{i.playbackRate.setValueAtTime(t,e)})}get reverse(){return this._buffer.reverse}set reverse(t){this._buffer.reverse=t}get loaded(){return this._buffer.loaded}dispose(){return super.dispose(),this._activeSources.forEach(t=>t.dispose()),this._activeSources.clear(),this._buffer.dispose(),this}}qs([go(0)],Zu.prototype,"fadeIn",void 0);qs([go(0)],Zu.prototype,"fadeOut",void 0);class oo extends me{constructor(){super(Tt(oo.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="Envelope",this._sig=new En({context:this.context,value:0}),this.output=this._sig,this.input=void 0;const t=Tt(oo.getDefaults(),arguments,["attack","decay","sustain","release"]);this.attack=t.attack,this.decay=t.decay,this.sustain=t.sustain,this.release=t.release,this.attackCurve=t.attackCurve,this.releaseCurve=t.releaseCurve,this.decayCurve=t.decayCurve}static getDefaults(){return Object.assign(me.getDefaults(),{attack:.01,attackCurve:"linear",decay:.1,decayCurve:"exponential",release:1,releaseCurve:"exponential",sustain:.5})}get value(){return this.getValueAtTime(this.now())}_getCurve(t,e){if(ro(t))return t;{let n;for(n in _f)if(_f[n][e]===t)return n;return t}}_setCurve(t,e,n){if(ro(n)&&Reflect.has(_f,n)){const i=_f[n];Ka(i)?t!=="_decayCurve"&&(this[t]=i[e]):this[t]=i}else if(Ls(n)&&t!=="_decayCurve")this[t]=n;else throw new Error("Envelope: invalid curve: "+n)}get attackCurve(){return this._getCurve(this._attackCurve,"In")}set attackCurve(t){this._setCurve("_attackCurve","In",t)}get releaseCurve(){return this._getCurve(this._releaseCurve,"Out")}set releaseCurve(t){this._setCurve("_releaseCurve","Out",t)}get decayCurve(){return this._getCurve(this._decayCurve,"Out")}set decayCurve(t){this._setCurve("_decayCurve","Out",t)}triggerAttack(t,e=1){this.log("triggerAttack",t,e),t=this.toSeconds(t);let i=this.toSeconds(this.attack);const r=this.toSeconds(this.decay),o=this.getValueAtTime(t);if(o>0){const a=1/i;i=(1-o)/a}if(i<this.sampleTime)this._sig.cancelScheduledValues(t),this._sig.setValueAtTime(e,t);else if(this._attackCurve==="linear")this._sig.linearRampTo(e,i,t);else if(this._attackCurve==="exponential")this._sig.targetRampTo(e,i,t);else{this._sig.cancelAndHoldAtTime(t);let a=this._attackCurve;for(let c=1;c<a.length;c++)if(a[c-1]<=o&&o<=a[c]){a=this._attackCurve.slice(c),a[0]=o;break}this._sig.setValueCurveAtTime(a,t,i,e)}if(r&&this.sustain<1){const a=e*this.sustain,c=t+i;this.log("decay",c),this._decayCurve==="linear"?this._sig.linearRampToValueAtTime(a,r+c):this._sig.exponentialApproachValueAtTime(a,c,r)}return this}triggerRelease(t){this.log("triggerRelease",t),t=this.toSeconds(t);const e=this.getValueAtTime(t);if(e>0){const n=this.toSeconds(this.release);n<this.sampleTime?this._sig.setValueAtTime(0,t):this._releaseCurve==="linear"?this._sig.linearRampTo(0,n,t):this._releaseCurve==="exponential"?this._sig.targetRampTo(0,n,t):(le(Ls(this._releaseCurve),"releaseCurve must be either 'linear', 'exponential' or an array"),this._sig.cancelAndHoldAtTime(t),this._sig.setValueCurveAtTime(this._releaseCurve,t,n,e))}return this}getValueAtTime(t){return this._sig.getValueAtTime(t)}triggerAttackRelease(t,e,n=1){return e=this.toSeconds(e),this.triggerAttack(e,n),this.triggerRelease(e+this.toSeconds(t)),this}cancel(t){return this._sig.cancelScheduledValues(this.toSeconds(t)),this}connect(t,e=0,n=0){return Wv(this,t,e,n),this}asArray(t=1024){return bn(this,void 0,void 0,function*(){const e=t/this.context.sampleRate,n=new Gv(1,e,this.context.sampleRate),i=this.toSeconds(this.attack)+this.toSeconds(this.decay),r=i+this.toSeconds(this.release),o=r*.1,a=r+o,c=new this.constructor(Object.assign(this.get(),{attack:e*this.toSeconds(this.attack)/a,decay:e*this.toSeconds(this.decay)/a,release:e*this.toSeconds(this.release)/a,context:n}));return c._sig.toDestination(),c.triggerAttackRelease(e*(i+o)/a,0),(yield n.render()).getChannelData(0)})}dispose(){return super.dispose(),this._sig.dispose(),this}}qs([go(0)],oo.prototype,"attack",void 0);qs([go(0)],oo.prototype,"decay",void 0);qs([$E(0,1)],oo.prototype,"sustain",void 0);qs([go(0)],oo.prototype,"release",void 0);const _f=(()=>{let t,e;const n=[];for(t=0;t<128;t++)n[t]=Math.sin(t/(128-1)*(Math.PI/2));const i=[],r=6.4;for(t=0;t<128-1;t++){e=t/(128-1);const d=Math.sin(e*(Math.PI*2)*r-Math.PI/2)+1;i[t]=d/10+e*.83}i[128-1]=1;const o=[],a=5;for(t=0;t<128;t++)o[t]=Math.ceil(t/(128-1)*a)/a;const c=[];for(t=0;t<128;t++)e=t/(128-1),c[t]=.5*(1-Math.cos(Math.PI*e));const l=[];for(t=0;t<128;t++){e=t/(128-1);const d=Math.pow(e,3)*4+.2,f=Math.cos(d*Math.PI*2*e);l[t]=Math.abs(f*(1-e))}function h(d){const f=new Array(d.length);for(let p=0;p<d.length;p++)f[p]=1-d[p];return f}function u(d){return d.slice(0).reverse()}return{bounce:{In:h(l),Out:l},cosine:{In:n,Out:u(n)},exponential:"exponential",linear:"linear",ripple:{In:i,Out:h(i)},sine:{In:c,Out:h(c)},step:{In:o,Out:h(o)}}})();class ac extends me{constructor(){super(Tt(ac.getDefaults(),arguments)),this._scheduledEvents=[],this._synced=!1,this._original_triggerAttack=this.triggerAttack,this._original_triggerRelease=this.triggerRelease,this._syncedRelease=e=>this._original_triggerRelease(e);const t=Tt(ac.getDefaults(),arguments);this._volume=this.output=new rc({context:this.context,volume:t.volume}),this.volume=this._volume.volume,cn(this,"volume")}static getDefaults(){return Object.assign(me.getDefaults(),{volume:0})}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",0),this.context.transport.on("stop",this._syncedRelease),this.context.transport.on("pause",this._syncedRelease),this.context.transport.on("loopEnd",this._syncedRelease)),this}_syncState(){let t=!1;return this._synced||(this._synced=!0,t=!0),t}_syncMethod(t,e){const n=this["_original_"+t]=this[t];this[t]=(...i)=>{const r=i[e],o=this.context.transport.schedule(a=>{i[e]=a,n.apply(this,i)},r);this._scheduledEvents.push(o)}}unsync(){return this._scheduledEvents.forEach(t=>this.context.transport.clear(t)),this._scheduledEvents=[],this._synced&&(this._synced=!1,this.triggerAttack=this._original_triggerAttack,this.triggerRelease=this._original_triggerRelease,this.context.transport.off("stop",this._syncedRelease),this.context.transport.off("pause",this._syncedRelease),this.context.transport.off("loopEnd",this._syncedRelease)),this}triggerAttackRelease(t,e,n,i){const r=this.toSeconds(n),o=this.toSeconds(e);return this.triggerAttack(t,r,i),this.triggerRelease(r+o),this}dispose(){return super.dispose(),this._volume.dispose(),this.unsync(),this._scheduledEvents=[],this}}class cc extends ac{constructor(){super(Tt(cc.getDefaults(),arguments));const t=Tt(cc.getDefaults(),arguments);this.portamento=t.portamento,this.onsilence=t.onsilence}static getDefaults(){return Object.assign(ac.getDefaults(),{detune:0,onsilence:Be,portamento:0})}triggerAttack(t,e,n=1){this.log("triggerAttack",t,e,n);const i=this.toSeconds(e);return this._triggerEnvelopeAttack(i,n),this.setNote(t,i),this}triggerRelease(t){this.log("triggerRelease",t);const e=this.toSeconds(t);return this._triggerEnvelopeRelease(e),this}setNote(t,e){const n=this.toSeconds(e),i=t instanceof is?t.toFrequency():t;if(this.portamento>0&&this.getLevelAtTime(n)>.05){const r=this.toSeconds(this.portamento);this.frequency.exponentialRampTo(i,r,n)}else this.frequency.setValueAtTime(i,n);return this}}qs([go(0)],cc.prototype,"portamento",void 0);class Xv extends oo{constructor(){super(Tt(Xv.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="AmplitudeEnvelope",this._gainNode=new Vn({context:this.context,gain:0}),this.output=this._gainNode,this.input=this._gainNode,this._sig.connect(this._gainNode.gain),this.output=this._gainNode,this.input=this._gainNode}dispose(){return super.dispose(),this._gainNode.dispose(),this}}class Ku extends cc{constructor(){super(Tt(Ku.getDefaults(),arguments)),this.name="Synth";const t=Tt(Ku.getDefaults(),arguments);this.oscillator=new Yu(Object.assign({context:this.context,detune:t.detune,onstop:()=>this.onsilence(this)},t.oscillator)),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.envelope=new Xv(Object.assign({context:this.context},t.envelope)),this.oscillator.chain(this.envelope,this.output),cn(this,["oscillator","frequency","detune","envelope"])}static getDefaults(){return Object.assign(cc.getDefaults(),{envelope:Object.assign(AM(oo.getDefaults(),Object.keys(me.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.3}),oscillator:Object.assign(AM(Yu.getDefaults(),[...Object.keys(Xi.getDefaults()),"frequency","detune"]),{type:"triangle"})})}_triggerEnvelopeAttack(t,e){if(this.envelope.triggerAttack(t,e),this.oscillator.start(t),this.envelope.sustain===0){const n=this.toSeconds(this.envelope.attack),i=this.toSeconds(this.envelope.decay);this.oscillator.stop(t+n+i)}}_triggerEnvelopeRelease(t){this.envelope.triggerRelease(t),this.oscillator.stop(t+this.toSeconds(this.envelope.release))}getLevelAtTime(t){return t=this.toSeconds(t),this.envelope.getValueAtTime(t)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this}}class Qu extends Ku{constructor(){super(Tt(Qu.getDefaults(),arguments)),this.name="MembraneSynth",this.portamento=0;const t=Tt(Qu.getDefaults(),arguments);this.pitchDecay=t.pitchDecay,this.octaves=t.octaves,cn(this,["oscillator","envelope"])}static getDefaults(){return Fl(cc.getDefaults(),Ku.getDefaults(),{envelope:{attack:.001,attackCurve:"exponential",decay:.4,release:1.4,sustain:.01},octaves:10,oscillator:{type:"sine"},pitchDecay:.05})}setNote(t,e){const n=this.toSeconds(e),i=this.toFrequency(t instanceof is?t.toFrequency():t),r=i*this.octaves;return this.oscillator.frequency.setValueAtTime(r,n),this.oscillator.frequency.exponentialRampToValueAtTime(i,n+this.toSeconds(this.pitchDecay)),this}dispose(){return super.dispose(),this}}qs([$E(0)],Qu.prototype,"octaves",void 0);qs([go(0)],Qu.prototype,"pitchDecay",void 0);const WE=new Set;function Yv(s){WE.add(s)}function qE(s,t){const e=`registerProcessor("${s}", ${t})`;WE.add(e)}const fU=`
	/**
	 * The base AudioWorkletProcessor for use in Tone.js. Works with the {@link ToneAudioWorklet}. 
	 */
	class ToneAudioWorkletProcessor extends AudioWorkletProcessor {

		constructor(options) {
			
			super(options);
			/**
			 * If the processor was disposed or not. Keep alive until it's disposed.
			 */
			this.disposed = false;
		   	/** 
			 * The number of samples in the processing block
			 */
			this.blockSize = 128;
			/**
			 * the sample rate
			 */
			this.sampleRate = sampleRate;

			this.port.onmessage = (event) => {
				// when it receives a dispose 
				if (event.data === "dispose") {
					this.disposed = true;
				}
			};
		}
	}
`;Yv(fU);const pU=`
	/**
	 * Abstract class for a single input/output processor. 
	 * has a 'generate' function which processes one sample at a time
	 */
	class SingleIOProcessor extends ToneAudioWorkletProcessor {

		constructor(options) {
			super(Object.assign(options, {
				numberOfInputs: 1,
				numberOfOutputs: 1
			}));
			/**
			 * Holds the name of the parameter and a single value of that
			 * parameter at the current sample
			 * @type { [name: string]: number }
			 */
			this.params = {}
		}

		/**
		 * Generate an output sample from the input sample and parameters
		 * @abstract
		 * @param input number
		 * @param channel number
		 * @param parameters { [name: string]: number }
		 * @returns number
		 */
		generate(){}

		/**
		 * Update the private params object with the 
		 * values of the parameters at the given index
		 * @param parameters { [name: string]: Float32Array },
		 * @param index number
		 */
		updateParams(parameters, index) {
			for (const paramName in parameters) {
				const param = parameters[paramName];
				if (param.length > 1) {
					this.params[paramName] = parameters[paramName][index];
				} else {
					this.params[paramName] = parameters[paramName][0];
				}
			}
		}

		/**
		 * Process a single frame of the audio
		 * @param inputs Float32Array[][]
		 * @param outputs Float32Array[][]
		 */
		process(inputs, outputs, parameters) {
			const input = inputs[0];
			const output = outputs[0];
			// get the parameter values
			const channelCount = Math.max(input && input.length || 0, output.length);
			for (let sample = 0; sample < this.blockSize; sample++) {
				this.updateParams(parameters, sample);
				for (let channel = 0; channel < channelCount; channel++) {
					const inputSample = input && input.length ? input[channel][sample] : 0;
					output[channel][sample] = this.generate(inputSample, channel, this.params);
				}
			}
			return !this.disposed;
		}
	};
`;Yv(pU);const mU=`
	/**
	 * A multichannel buffer for use within an AudioWorkletProcessor as a delay line
	 */
	class DelayLine {
		
		constructor(size, channels) {
			this.buffer = [];
			this.writeHead = []
			this.size = size;

			// create the empty channels
			for (let i = 0; i < channels; i++) {
				this.buffer[i] = new Float32Array(this.size);
				this.writeHead[i] = 0;
			}
		}

		/**
		 * Push a value onto the end
		 * @param channel number
		 * @param value number
		 */
		push(channel, value) {
			this.writeHead[channel] += 1;
			if (this.writeHead[channel] > this.size) {
				this.writeHead[channel] = 0;
			}
			this.buffer[channel][this.writeHead[channel]] = value;
		}

		/**
		 * Get the recorded value of the channel given the delay
		 * @param channel number
		 * @param delay number delay samples
		 */
		get(channel, delay) {
			let readHead = this.writeHead[channel] - Math.floor(delay);
			if (readHead < 0) {
				readHead += this.size;
			}
			return this.buffer[channel][readHead];
		}
	}
`;Yv(mU);const gU="feedback-comb-filter",_U=`
	class FeedbackCombFilterWorklet extends SingleIOProcessor {

		constructor(options) {
			super(options);
			this.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);
		}

		static get parameterDescriptors() {
			return [{
				name: "delayTime",
				defaultValue: 0.1,
				minValue: 0,
				maxValue: 1,
				automationRate: "k-rate"
			}, {
				name: "feedback",
				defaultValue: 0.5,
				minValue: 0,
				maxValue: 0.9999,
				automationRate: "k-rate"
			}];
		}

		generate(input, channel, parameters) {
			const delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);
			this.delayLine.push(channel, input + delayedSample * parameters.feedback);
			return delayedSample;
		}
	}
`;qE(gU,_U);let Zv=class vy extends ac{constructor(){super(Tt(vy.getDefaults(),arguments,["urls","onload","baseUrl"],"urls")),this.name="Sampler",this._activeSources=new Map;const t=Tt(vy.getDefaults(),arguments,["urls","onload","baseUrl"],"urls"),e={};Object.keys(t.urls).forEach(n=>{const i=parseInt(n,10);if(le(gf(n)||ic(i)&&isFinite(i),`url key is neither a note or midi pitch: ${n}`),gf(n)){const r=new is(this.context,n).toMidi();e[r]=t.urls[n]}else ic(i)&&isFinite(i)&&(e[i]=t.urls[i])}),this._buffers=new qv({urls:e,onload:t.onload,baseUrl:t.baseUrl,onerror:t.onerror}),this.attack=t.attack,this.release=t.release,this.curve=t.curve,this._buffers.loaded&&Promise.resolve().then(t.onload)}static getDefaults(){return Object.assign(ac.getDefaults(),{attack:0,baseUrl:"",curve:"exponential",onload:Be,onerror:Be,release:.1,urls:{}})}_findClosest(t){let n=0;for(;n<96;){if(this._buffers.has(t+n))return-n;if(this._buffers.has(t-n))return n;n++}throw new Error(`No available buffers for note: ${t}`)}triggerAttack(t,e,n=1){return this.log("triggerAttack",t,e,n),Array.isArray(t)||(t=[t]),t.forEach(i=>{const r=GE(new is(this.context,i).toFrequency()),o=Math.round(r),a=r-o,c=this._findClosest(o),l=o-c,h=this._buffers.get(l),u=VE(c+a),d=new $u({url:h,context:this.context,curve:this.curve,fadeIn:this.attack,fadeOut:this.release,playbackRate:u}).connect(this.output);d.start(e,0,h.duration/u,n),Ls(this._activeSources.get(o))||this._activeSources.set(o,[]),this._activeSources.get(o).push(d),d.onended=()=>{if(this._activeSources&&this._activeSources.has(o)){const f=this._activeSources.get(o),p=f.indexOf(d);p!==-1&&f.splice(p,1)}}}),this}triggerRelease(t,e){return this.log("triggerRelease",t,e),Array.isArray(t)||(t=[t]),t.forEach(n=>{const i=new is(this.context,n).toMidi();if(this._activeSources.has(i)&&this._activeSources.get(i).length){const r=this._activeSources.get(i);e=this.toSeconds(e),r.forEach(o=>{o.stop(e)}),this._activeSources.set(i,[])}}),this}releaseAll(t){const e=this.toSeconds(t);return this._activeSources.forEach(n=>{for(;n.length;)n.shift().stop(e)}),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1)),this}triggerAttackRelease(t,e,n,i=1){const r=this.toSeconds(n);return this.triggerAttack(t,r,i),Ls(e)?(le(Ls(t),"notes must be an array when duration is array"),t.forEach((o,a)=>{const c=e[Math.min(a,e.length-1)];this.triggerRelease(o,r+this.toSeconds(c))})):this.triggerRelease(t,r+this.toSeconds(e)),this}add(t,e,n){if(le(gf(t)||isFinite(t),`note must be a pitch or midi: ${t}`),gf(t)){const i=new is(this.context,t).toMidi();this._buffers.add(i,e,n)}else this._buffers.add(t,e,n);return this}get loaded(){return this._buffers.loaded}dispose(){return super.dispose(),this._buffers.dispose(),this._activeSources.forEach(t=>{t.forEach(e=>e.dispose())}),this._activeSources.clear(),this}};qs([go(0)],Zv.prototype,"attack",void 0);qs([go(0)],Zv.prototype,"release",void 0);class _m extends me{constructor(){super(Object.assign(Tt(_m.getDefaults(),arguments,["pan"]))),this.name="Panner",this._panner=this.context.createStereoPanner(),this.input=this._panner,this.output=this._panner;const t=Tt(_m.getDefaults(),arguments,["pan"]);this.pan=new Ze({context:this.context,param:this._panner.pan,value:t.pan,minValue:-1,maxValue:1}),this._panner.channelCount=t.channelCount,this._panner.channelCountMode="explicit",cn(this,"pan")}static getDefaults(){return Object.assign(me.getDefaults(),{pan:0,channelCount:1})}dispose(){return super.dispose(),this._panner.disconnect(),this.pan.dispose(),this}}const yU="bit-crusher",xU=`
	class BitCrusherWorklet extends SingleIOProcessor {

		static get parameterDescriptors() {
			return [{
				name: "bits",
				defaultValue: 12,
				minValue: 1,
				maxValue: 16,
				automationRate: 'k-rate'
			}];
		}

		generate(input, _channel, parameters) {
			const step = Math.pow(0.5, parameters.bits - 1);
			const val = step * Math.floor(input / step + 0.5);
			return val;
		}
	}
`;qE(yU,xU);class ln extends me{constructor(){super(Tt(ln.getDefaults(),arguments,["solo"])),this.name="Solo";const t=Tt(ln.getDefaults(),arguments,["solo"]);this.input=this.output=new Vn({context:this.context}),ln._allSolos.has(this.context)||ln._allSolos.set(this.context,new Set),ln._allSolos.get(this.context).add(this),this.solo=t.solo}static getDefaults(){return Object.assign(me.getDefaults(),{solo:!1})}get solo(){return this._isSoloed()}set solo(t){t?this._addSolo():this._removeSolo(),ln._allSolos.get(this.context).forEach(e=>e._updateSolo())}get muted(){return this.input.gain.value===0}_addSolo(){ln._soloed.has(this.context)||ln._soloed.set(this.context,new Set),ln._soloed.get(this.context).add(this)}_removeSolo(){ln._soloed.has(this.context)&&ln._soloed.get(this.context).delete(this)}_isSoloed(){return ln._soloed.has(this.context)&&ln._soloed.get(this.context).has(this)}_noSolos(){return!ln._soloed.has(this.context)||ln._soloed.has(this.context)&&ln._soloed.get(this.context).size===0}_updateSolo(){this._isSoloed()?this.input.gain.value=1:this._noSolos()?this.input.gain.value=1:this.input.gain.value=0}dispose(){return super.dispose(),ln._allSolos.get(this.context).delete(this),this._removeSolo(),this}}ln._allSolos=new Map;ln._soloed=new Map;class ym extends me{constructor(){super(Tt(ym.getDefaults(),arguments,["pan","volume"])),this.name="PanVol";const t=Tt(ym.getDefaults(),arguments,["pan","volume"]);this._panner=this.input=new _m({context:this.context,pan:t.pan,channelCount:t.channelCount}),this.pan=this._panner.pan,this._volume=this.output=new rc({context:this.context,volume:t.volume}),this.volume=this._volume.volume,this._panner.connect(this._volume),this.mute=t.mute,cn(this,["pan","volume"])}static getDefaults(){return Object.assign(me.getDefaults(),{mute:!1,pan:0,volume:0,channelCount:1})}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}dispose(){return super.dispose(),this._panner.dispose(),this.pan.dispose(),this._volume.dispose(),this.volume.dispose(),this}}class za extends me{constructor(){super(Tt(za.getDefaults(),arguments,["volume","pan"])),this.name="Channel";const t=Tt(za.getDefaults(),arguments,["volume","pan"]);this._solo=this.input=new ln({solo:t.solo,context:this.context}),this._panVol=this.output=new ym({context:this.context,pan:t.pan,volume:t.volume,mute:t.mute,channelCount:t.channelCount}),this.pan=this._panVol.pan,this.volume=this._panVol.volume,this._solo.connect(this._panVol),cn(this,["pan","volume"])}static getDefaults(){return Object.assign(me.getDefaults(),{pan:0,volume:0,mute:!1,solo:!1,channelCount:1})}get solo(){return this._solo.solo}set solo(t){this._solo.solo=t}get muted(){return this._solo.muted||this.mute}get mute(){return this._panVol.mute}set mute(t){this._panVol.mute=t}_getBus(t){return za.buses.has(t)||za.buses.set(t,new Vn({context:this.context})),za.buses.get(t)}send(t,e=0){const n=this._getBus(t),i=new Vn({context:this.context,units:"decibels",gain:e});return this.connect(i),i.connect(n),i}receive(t){return this._getBus(t).connect(this),this}dispose(){return super.dispose(),this._panVol.dispose(),this.pan.dispose(),this.volume.dispose(),this._solo.dispose(),this}}za.buses=new Map;class vU extends me{constructor(){super(...arguments),this.name="Listener",this.positionX=new Ze({context:this.context,param:this.context.rawContext.listener.positionX}),this.positionY=new Ze({context:this.context,param:this.context.rawContext.listener.positionY}),this.positionZ=new Ze({context:this.context,param:this.context.rawContext.listener.positionZ}),this.forwardX=new Ze({context:this.context,param:this.context.rawContext.listener.forwardX}),this.forwardY=new Ze({context:this.context,param:this.context.rawContext.listener.forwardY}),this.forwardZ=new Ze({context:this.context,param:this.context.rawContext.listener.forwardZ}),this.upX=new Ze({context:this.context,param:this.context.rawContext.listener.upX}),this.upY=new Ze({context:this.context,param:this.context.rawContext.listener.upY}),this.upZ=new Ze({context:this.context,param:this.context.rawContext.listener.upZ})}static getDefaults(){return Object.assign(me.getDefaults(),{positionX:0,positionY:0,positionZ:0,forwardX:0,forwardY:0,forwardZ:-1,upX:0,upY:1,upZ:0})}dispose(){return super.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this.forwardX.dispose(),this.forwardY.dispose(),this.forwardZ.dispose(),this.upX.dispose(),this.upY.dispose(),this.upZ.dispose(),this}}sg(s=>{s.listener=new vU({context:s})});rg(s=>{s.listener.dispose()});Ns().transport;Ns().destination;Ns().destination;Ns().listener;Ns().draw;const jE=Ns();/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const ag="170",In={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},$r={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},bU=0,CM=1,SU=2,XE=1,MU=2,Dr=3,aa=0,fi=1,kr=2,Zr=0,Ll=1,RM=2,NM=3,PM=4,TU=5,Va=100,wU=101,AU=102,EU=103,CU=104,RU=200,NU=201,PU=202,DU=203,by=204,Sy=205,IU=206,FU=207,OU=208,LU=209,BU=210,UU=211,kU=212,zU=213,VU=214,My=0,Ty=1,wy=2,nh=3,Ay=4,Ey=5,Cy=6,Ry=7,YE=0,GU=1,HU=2,Jo=0,$U=1,WU=2,qU=3,jU=4,XU=5,YU=6,ZU=7,ZE=300,ih=301,sh=302,Ny=303,Py=304,cg=306,Dy=1e3,Xa=1001,Iy=1002,Bs=1003,KU=1004,yf=1005,Ks=1006,d_=1007,Ya=1008,ao=1009,KE=1010,QE=1011,Ju=1012,Kv=1013,lc=1014,Wr=1015,wh=1016,Qv=1017,Jv=1018,rh=1020,JE=35902,tC=1021,eC=1022,Ds=1023,nC=1024,iC=1025,Bl=1026,oh=1027,sC=1028,tb=1029,rC=1030,eb=1031,nb=1033,Dp=33776,Ip=33777,Fp=33778,Op=33779,Fy=35840,Oy=35841,Ly=35842,By=35843,Uy=36196,ky=37492,zy=37496,Vy=37808,Gy=37809,Hy=37810,$y=37811,Wy=37812,qy=37813,jy=37814,Xy=37815,Yy=37816,Zy=37817,Ky=37818,Qy=37819,Jy=37820,tx=37821,Lp=36492,ex=36494,nx=36495,oC=36283,ix=36284,sx=36285,rx=36286,QU=3200,JU=3201,t3=0,e3=1,jo="",Wi="srgb",Ah="srgb-linear",lg="linear",Oe="srgb",kc=7680,DM=519,n3=512,i3=513,s3=514,aC=515,r3=516,o3=517,a3=518,c3=519,IM=35044,FM="300 es",qr=2e3,xm=2001;let pa=class{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;const i=this._listeners[t];if(i!==void 0){const r=i.indexOf(e);r!==-1&&i.splice(r,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const n=this._listeners[t.type];if(n!==void 0){t.target=this;const i=n.slice(0);for(let r=0,o=i.length;r<o;r++)i[r].call(this,t);t.target=null}}};const Xn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let OM=1234567;const Nu=Math.PI/180,td=180/Math.PI;function Eh(){const s=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Xn[s&255]+Xn[s>>8&255]+Xn[s>>16&255]+Xn[s>>24&255]+"-"+Xn[t&255]+Xn[t>>8&255]+"-"+Xn[t>>16&15|64]+Xn[t>>24&255]+"-"+Xn[e&63|128]+Xn[e>>8&255]+"-"+Xn[e>>16&255]+Xn[e>>24&255]+Xn[n&255]+Xn[n>>8&255]+Xn[n>>16&255]+Xn[n>>24&255]).toLowerCase()}function Jn(s,t,e){return Math.max(t,Math.min(e,s))}function ib(s,t){return(s%t+t)%t}function l3(s,t,e,n,i){return n+(s-t)*(i-n)/(e-t)}function h3(s,t,e){return s!==t?(e-s)/(t-s):0}function Pu(s,t,e){return(1-e)*s+e*t}function u3(s,t,e,n){return Pu(s,t,1-Math.exp(-e*n))}function d3(s,t=1){return t-Math.abs(ib(s,t*2)-t)}function f3(s,t,e){return s<=t?0:s>=e?1:(s=(s-t)/(e-t),s*s*(3-2*s))}function p3(s,t,e){return s<=t?0:s>=e?1:(s=(s-t)/(e-t),s*s*s*(s*(s*6-15)+10))}function m3(s,t){return s+Math.floor(Math.random()*(t-s+1))}function g3(s,t){return s+Math.random()*(t-s)}function _3(s){return s*(.5-Math.random())}function y3(s){s!==void 0&&(OM=s);let t=OM+=1831565813;return t=Math.imul(t^t>>>15,t|1),t^=t+Math.imul(t^t>>>7,t|61),((t^t>>>14)>>>0)/4294967296}function x3(s){return s*Nu}function v3(s){return s*td}function b3(s){return(s&s-1)===0&&s!==0}function S3(s){return Math.pow(2,Math.ceil(Math.log(s)/Math.LN2))}function M3(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function T3(s,t,e,n,i){const r=Math.cos,o=Math.sin,a=r(e/2),c=o(e/2),l=r((t+n)/2),h=o((t+n)/2),u=r((t-n)/2),d=o((t-n)/2),f=r((n-t)/2),p=o((n-t)/2);switch(i){case"XYX":s.set(a*h,c*u,c*d,a*l);break;case"YZY":s.set(c*d,a*h,c*u,a*l);break;case"ZXZ":s.set(c*u,c*d,a*h,a*l);break;case"XZX":s.set(a*h,c*p,c*f,a*l);break;case"YXY":s.set(c*f,a*h,c*p,a*l);break;case"ZYZ":s.set(c*p,c*f,a*h,a*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function xl(s,t){switch(t.constructor){case Float32Array:return s;case Uint32Array:return s/4294967295;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int32Array:return Math.max(s/2147483647,-1);case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function oi(s,t){switch(t.constructor){case Float32Array:return s;case Uint32Array:return Math.round(s*4294967295);case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int32Array:return Math.round(s*2147483647);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}const ox={DEG2RAD:Nu,RAD2DEG:td,generateUUID:Eh,clamp:Jn,euclideanModulo:ib,mapLinear:l3,inverseLerp:h3,lerp:Pu,damp:u3,pingpong:d3,smoothstep:f3,smootherstep:p3,randInt:m3,randFloat:g3,randFloatSpread:_3,seededRandom:y3,degToRad:x3,radToDeg:v3,isPowerOfTwo:b3,ceilPowerOfTwo:S3,floorPowerOfTwo:M3,setQuaternionFromProperEuler:T3,normalize:oi,denormalize:xl};let qt=class cC{constructor(t=0,e=0){cC.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(Jn(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),r=this.x-t.x,o=this.y-t.y;return this.x=r*n-o*i+t.x,this.y=r*i+o*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}},ue=class lC{constructor(t,e,n,i,r,o,a,c,l){lC.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,e,n,i,r,o,a,c,l)}set(t,e,n,i,r,o,a,c,l){const h=this.elements;return h[0]=t,h[1]=i,h[2]=a,h[3]=e,h[4]=r,h[5]=c,h[6]=n,h[7]=o,h[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,o=n[0],a=n[3],c=n[6],l=n[1],h=n[4],u=n[7],d=n[2],f=n[5],p=n[8],_=i[0],g=i[3],m=i[6],x=i[1],v=i[4],y=i[7],b=i[2],S=i[5],M=i[8];return r[0]=o*_+a*x+c*b,r[3]=o*g+a*v+c*S,r[6]=o*m+a*y+c*M,r[1]=l*_+h*x+u*b,r[4]=l*g+h*v+u*S,r[7]=l*m+h*y+u*M,r[2]=d*_+f*x+p*b,r[5]=d*g+f*v+p*S,r[8]=d*m+f*y+p*M,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],o=t[4],a=t[5],c=t[6],l=t[7],h=t[8];return e*o*h-e*a*l-n*r*h+n*a*c+i*r*l-i*o*c}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],o=t[4],a=t[5],c=t[6],l=t[7],h=t[8],u=h*o-a*l,d=a*c-h*r,f=l*r-o*c,p=e*u+n*d+i*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const _=1/p;return t[0]=u*_,t[1]=(i*l-h*n)*_,t[2]=(a*n-i*o)*_,t[3]=d*_,t[4]=(h*e-i*c)*_,t[5]=(i*r-a*e)*_,t[6]=f*_,t[7]=(n*c-l*e)*_,t[8]=(o*e-n*r)*_,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,r,o,a){const c=Math.cos(r),l=Math.sin(r);return this.set(n*c,n*l,-n*(c*o+l*a)+o+t,-i*l,i*c,-i*(-l*o+c*a)+a+e,0,0,1),this}scale(t,e){return this.premultiply(f_.makeScale(t,e)),this}rotate(t){return this.premultiply(f_.makeRotation(-t)),this}translate(t,e){return this.premultiply(f_.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,n,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<9;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return new this.constructor().fromArray(this.elements)}};const f_=new ue;function hC(s){for(let t=s.length-1;t>=0;--t)if(s[t]>=65535)return!0;return!1}function ed(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function w3(){const s=ed("canvas");return s.style.display="block",s}const LM={};function yu(s){s in LM||(LM[s]=!0,console.warn(s))}function A3(s,t,e){return new Promise(function(n,i){function r(){switch(s.clientWaitSync(t,s.SYNC_FLUSH_COMMANDS_BIT,0)){case s.WAIT_FAILED:i();break;case s.TIMEOUT_EXPIRED:setTimeout(r,e);break;default:n()}}setTimeout(r,e)})}function E3(s){const t=s.elements;t[2]=.5*t[2]+.5*t[3],t[6]=.5*t[6]+.5*t[7],t[10]=.5*t[10]+.5*t[11],t[14]=.5*t[14]+.5*t[15]}function C3(s){const t=s.elements;t[11]===-1?(t[10]=-t[10]-1,t[14]=-t[14]):(t[10]=-t[10],t[14]=-t[14]+1)}const be={enabled:!0,workingColorSpace:Ah,spaces:{},convert:function(s,t,e){return this.enabled===!1||t===e||!t||!e||(this.spaces[t].transfer===Oe&&(s.r=Kr(s.r),s.g=Kr(s.g),s.b=Kr(s.b)),this.spaces[t].primaries!==this.spaces[e].primaries&&(s.applyMatrix3(this.spaces[t].toXYZ),s.applyMatrix3(this.spaces[e].fromXYZ)),this.spaces[e].transfer===Oe&&(s.r=Ul(s.r),s.g=Ul(s.g),s.b=Ul(s.b))),s},fromWorkingColorSpace:function(s,t){return this.convert(s,this.workingColorSpace,t)},toWorkingColorSpace:function(s,t){return this.convert(s,t,this.workingColorSpace)},getPrimaries:function(s){return this.spaces[s].primaries},getTransfer:function(s){return s===jo?lg:this.spaces[s].transfer},getLuminanceCoefficients:function(s,t=this.workingColorSpace){return s.fromArray(this.spaces[t].luminanceCoefficients)},define:function(s){Object.assign(this.spaces,s)},_getMatrix:function(s,t,e){return s.copy(this.spaces[t].toXYZ).multiply(this.spaces[e].fromXYZ)},_getDrawingBufferColorSpace:function(s){return this.spaces[s].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(s=this.workingColorSpace){return this.spaces[s].workingColorSpaceConfig.unpackColorSpace}};function Kr(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function Ul(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}const BM=[.64,.33,.3,.6,.15,.06],UM=[.2126,.7152,.0722],kM=[.3127,.329],zM=new ue().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),VM=new ue().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);be.define({[Ah]:{primaries:BM,whitePoint:kM,transfer:lg,toXYZ:zM,fromXYZ:VM,luminanceCoefficients:UM,workingColorSpaceConfig:{unpackColorSpace:Wi},outputColorSpaceConfig:{drawingBufferColorSpace:Wi}},[Wi]:{primaries:BM,whitePoint:kM,transfer:Oe,toXYZ:zM,fromXYZ:VM,luminanceCoefficients:UM,outputColorSpaceConfig:{drawingBufferColorSpace:Wi}}});let zc,R3=class{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{zc===void 0&&(zc=ed("canvas")),zc.width=t.width,zc.height=t.height;const n=zc.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=zc}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=ed("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const i=n.getImageData(0,0,t.width,t.height),r=i.data;for(let o=0;o<r.length;o++)r[o]=Kr(r[o]/255)*255;return n.putImageData(i,0,0),e}else if(t.data){const e=t.data.slice(0);for(let n=0;n<e.length;n++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[n]=Math.floor(Kr(e[n]/255)*255):e[n]=Kr(e[n]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}},N3=0,uC=class{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:N3++}),this.uuid=Eh(),this.data=t,this.dataReady=!0,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let r;if(Array.isArray(i)){r=[];for(let o=0,a=i.length;o<a;o++)i[o].isDataTexture?r.push(p_(i[o].image)):r.push(p_(i[o]))}else r=p_(i);n.url=r}return e||(t.images[this.uuid]=n),n}};function p_(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?R3.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let P3=0,js=class Bp extends pa{constructor(t=Bp.DEFAULT_IMAGE,e=Bp.DEFAULT_MAPPING,n=Xa,i=Xa,r=Ks,o=Ya,a=Ds,c=ao,l=Bp.DEFAULT_ANISOTROPY,h=jo){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:P3++}),this.uuid=Eh(),this.name="",this.source=new uC(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=o,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=c,this.offset=new qt(0,0),this.repeat=new qt(1,1),this.center=new qt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new ue,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==ZE)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case Dy:t.x=t.x-Math.floor(t.x);break;case Xa:t.x=t.x<0?0:1;break;case Iy:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case Dy:t.y=t.y-Math.floor(t.y);break;case Xa:t.y=t.y<0?0:1;break;case Iy:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){t===!0&&this.pmremVersion++}};js.DEFAULT_IMAGE=null;js.DEFAULT_MAPPING=ZE;js.DEFAULT_ANISOTROPY=1;let vn=class dC{constructor(t=0,e=0,n=0,i=1){dC.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=this.w,o=t.elements;return this.x=o[0]*e+o[4]*n+o[8]*i+o[12]*r,this.y=o[1]*e+o[5]*n+o[9]*i+o[13]*r,this.z=o[2]*e+o[6]*n+o[10]*i+o[14]*r,this.w=o[3]*e+o[7]*n+o[11]*i+o[15]*r,this}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this.w/=t.w,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,r;const c=t.elements,l=c[0],h=c[4],u=c[8],d=c[1],f=c[5],p=c[9],_=c[2],g=c[6],m=c[10];if(Math.abs(h-d)<.01&&Math.abs(u-_)<.01&&Math.abs(p-g)<.01){if(Math.abs(h+d)<.1&&Math.abs(u+_)<.1&&Math.abs(p+g)<.1&&Math.abs(l+f+m-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const v=(l+1)/2,y=(f+1)/2,b=(m+1)/2,S=(h+d)/4,M=(u+_)/4,T=(p+g)/4;return v>y&&v>b?v<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(v),i=S/n,r=M/n):y>b?y<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(y),n=S/i,r=T/i):b<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(b),n=M/r,i=T/r),this.set(n,i,r,e),this}let x=Math.sqrt((g-p)*(g-p)+(u-_)*(u-_)+(d-h)*(d-h));return Math.abs(x)<.001&&(x=1),this.x=(g-p)/x,this.y=(u-_)/x,this.z=(d-h)/x,this.w=Math.acos((l+f+m-1)/2),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this.w=e[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}},D3=class extends pa{constructor(t=1,e=1,n={}){super(),this.isRenderTarget=!0,this.width=t,this.height=e,this.depth=1,this.scissor=new vn(0,0,t,e),this.scissorTest=!1,this.viewport=new vn(0,0,t,e);const i={width:t,height:e,depth:1};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Ks,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},n);const r=new js(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);r.flipY=!1,r.generateMipmaps=n.generateMipmaps,r.internalFormat=n.internalFormat,this.textures=[];const o=n.count;for(let a=0;a<o;a++)this.textures[a]=r.clone(),this.textures[a].isRenderTargetTexture=!0;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}get texture(){return this.textures[0]}set texture(t){this.textures[0]=t}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let i=0,r=this.textures.length;i<r;i++)this.textures[i].image.width=t,this.textures[i].image.height=e,this.textures[i].image.depth=n;this.dispose()}this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.textures.length=0;for(let n=0,i=t.textures.length;n<i;n++)this.textures[n]=t.textures[n].clone(),this.textures[n].isRenderTargetTexture=!0;const e=Object.assign({},t.texture.image);return this.texture.source=new uC(e),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.resolveDepthBuffer=t.resolveDepthBuffer,this.resolveStencilBuffer=t.resolveStencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}},ca=class extends D3{constructor(t=1,e=1,n={}){super(t,e,n),this.isWebGLRenderTarget=!0}},fC=class extends js{constructor(t=null,e=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Bs,this.minFilter=Bs,this.wrapR=Xa,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}};class I3 extends js{constructor(t=null,e=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Bs,this.minFilter=Bs,this.wrapR=Xa,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}let zs=class{constructor(t=0,e=0,n=0,i=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=i}static slerpFlat(t,e,n,i,r,o,a){let c=n[i+0],l=n[i+1],h=n[i+2],u=n[i+3];const d=r[o+0],f=r[o+1],p=r[o+2],_=r[o+3];if(a===0){t[e+0]=c,t[e+1]=l,t[e+2]=h,t[e+3]=u;return}if(a===1){t[e+0]=d,t[e+1]=f,t[e+2]=p,t[e+3]=_;return}if(u!==_||c!==d||l!==f||h!==p){let g=1-a;const m=c*d+l*f+h*p+u*_,x=m>=0?1:-1,v=1-m*m;if(v>Number.EPSILON){const b=Math.sqrt(v),S=Math.atan2(b,m*x);g=Math.sin(g*S)/b,a=Math.sin(a*S)/b}const y=a*x;if(c=c*g+d*y,l=l*g+f*y,h=h*g+p*y,u=u*g+_*y,g===1-a){const b=1/Math.sqrt(c*c+l*l+h*h+u*u);c*=b,l*=b,h*=b,u*=b}}t[e]=c,t[e+1]=l,t[e+2]=h,t[e+3]=u}static multiplyQuaternionsFlat(t,e,n,i,r,o){const a=n[i],c=n[i+1],l=n[i+2],h=n[i+3],u=r[o],d=r[o+1],f=r[o+2],p=r[o+3];return t[e]=a*p+h*u+c*f-l*d,t[e+1]=c*p+h*d+l*u-a*f,t[e+2]=l*p+h*f+a*d-c*u,t[e+3]=h*p-a*u-c*d-l*f,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const n=t._x,i=t._y,r=t._z,o=t._order,a=Math.cos,c=Math.sin,l=a(n/2),h=a(i/2),u=a(r/2),d=c(n/2),f=c(i/2),p=c(r/2);switch(o){case"XYZ":this._x=d*h*u+l*f*p,this._y=l*f*u-d*h*p,this._z=l*h*p+d*f*u,this._w=l*h*u-d*f*p;break;case"YXZ":this._x=d*h*u+l*f*p,this._y=l*f*u-d*h*p,this._z=l*h*p-d*f*u,this._w=l*h*u+d*f*p;break;case"ZXY":this._x=d*h*u-l*f*p,this._y=l*f*u+d*h*p,this._z=l*h*p+d*f*u,this._w=l*h*u-d*f*p;break;case"ZYX":this._x=d*h*u-l*f*p,this._y=l*f*u+d*h*p,this._z=l*h*p-d*f*u,this._w=l*h*u+d*f*p;break;case"YZX":this._x=d*h*u+l*f*p,this._y=l*f*u+d*h*p,this._z=l*h*p-d*f*u,this._w=l*h*u-d*f*p;break;case"XZY":this._x=d*h*u-l*f*p,this._y=l*f*u-d*h*p,this._z=l*h*p+d*f*u,this._w=l*h*u+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return e===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],r=e[8],o=e[1],a=e[5],c=e[9],l=e[2],h=e[6],u=e[10],d=n+a+u;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(h-c)*f,this._y=(r-l)*f,this._z=(o-i)*f}else if(n>a&&n>u){const f=2*Math.sqrt(1+n-a-u);this._w=(h-c)/f,this._x=.25*f,this._y=(i+o)/f,this._z=(r+l)/f}else if(a>u){const f=2*Math.sqrt(1+a-n-u);this._w=(r-l)/f,this._x=(i+o)/f,this._y=.25*f,this._z=(c+h)/f}else{const f=2*Math.sqrt(1+u-n-a);this._w=(o-i)/f,this._x=(r+l)/f,this._y=(c+h)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(Jn(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(n===0)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,r=t._z,o=t._w,a=e._x,c=e._y,l=e._z,h=e._w;return this._x=n*h+o*a+i*l-r*c,this._y=i*h+o*c+r*a-n*l,this._z=r*h+o*l+n*c-i*a,this._w=o*h-n*a-i*c-r*l,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const n=this._x,i=this._y,r=this._z,o=this._w;let a=o*t._w+n*t._x+i*t._y+r*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=o,this._x=n,this._y=i,this._z=r,this;const c=1-a*a;if(c<=Number.EPSILON){const f=1-e;return this._w=f*o+e*this._w,this._x=f*n+e*this._x,this._y=f*i+e*this._y,this._z=f*r+e*this._z,this.normalize(),this}const l=Math.sqrt(c),h=Math.atan2(l,a),u=Math.sin((1-e)*h)/l,d=Math.sin(e*h)/l;return this._w=o*u+this._w*d,this._x=n*u+this._x*d,this._y=i*u+this._y*d,this._z=r*u+this._z*d,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),r=Math.sqrt(n);return this.set(i*Math.sin(t),i*Math.cos(t),r*Math.sin(e),r*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}},X=class pC{constructor(t=0,e=0,n=0){pC.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return n===void 0&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(GM.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(GM.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6]*i,this.y=r[1]*e+r[4]*n+r[7]*i,this.z=r[2]*e+r[5]*n+r[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=t.elements,o=1/(r[3]*e+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*e+r[4]*n+r[8]*i+r[12])*o,this.y=(r[1]*e+r[5]*n+r[9]*i+r[13])*o,this.z=(r[2]*e+r[6]*n+r[10]*i+r[14])*o,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,r=t.x,o=t.y,a=t.z,c=t.w,l=2*(o*i-a*n),h=2*(a*e-r*i),u=2*(r*n-o*e);return this.x=e+c*l+o*u-a*h,this.y=n+c*h+a*l-r*u,this.z=i+c*u+r*h-o*l,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*i,this.y=r[1]*e+r[5]*n+r[9]*i,this.z=r[2]*e+r[6]*n+r[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,r=t.z,o=e.x,a=e.y,c=e.z;return this.x=i*c-r*a,this.y=r*o-n*c,this.z=n*a-i*o,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return m_.copy(this).projectOnVector(t),this.sub(m_)}reflect(t){return this.sub(m_.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(Jn(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=Math.random()*2-1,n=Math.sqrt(1-e*e);return this.x=n*Math.cos(t),this.y=e,this.z=n*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}};const m_=new X,GM=new zs;let Ch=class{constructor(t=new X(1/0,1/0,1/0),e=new X(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e+=3)this.expandByPoint(gs.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,n=t.count;e<n;e++)this.expandByPoint(gs.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=gs.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(n!==void 0){const r=n.getAttribute("position");if(e===!0&&r!==void 0&&t.isInstancedMesh!==!0)for(let o=0,a=r.count;o<a;o++)t.isMesh===!0?t.getVertexPosition(o,gs):gs.fromBufferAttribute(r,o),gs.applyMatrix4(t.matrixWorld),this.expandByPoint(gs);else t.boundingBox!==void 0?(t.boundingBox===null&&t.computeBoundingBox(),xf.copy(t.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),xf.copy(n.boundingBox)),xf.applyMatrix4(t.matrixWorld),this.union(xf)}const i=t.children;for(let r=0,o=i.length;r<o;r++)this.expandByObject(i[r],e);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,gs),gs.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(jh),vf.subVectors(this.max,jh),Vc.subVectors(t.a,jh),Gc.subVectors(t.b,jh),Hc.subVectors(t.c,jh),Co.subVectors(Gc,Vc),Ro.subVectors(Hc,Gc),Ta.subVectors(Vc,Hc);let e=[0,-Co.z,Co.y,0,-Ro.z,Ro.y,0,-Ta.z,Ta.y,Co.z,0,-Co.x,Ro.z,0,-Ro.x,Ta.z,0,-Ta.x,-Co.y,Co.x,0,-Ro.y,Ro.x,0,-Ta.y,Ta.x,0];return!g_(e,Vc,Gc,Hc,vf)||(e=[1,0,0,0,1,0,0,0,1],!g_(e,Vc,Gc,Hc,vf))?!1:(bf.crossVectors(Co,Ro),e=[bf.x,bf.y,bf.z],g_(e,Vc,Gc,Hc,vf))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,gs).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(gs).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(xr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),xr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),xr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),xr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),xr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),xr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),xr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),xr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(xr),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}};const xr=[new X,new X,new X,new X,new X,new X,new X,new X],gs=new X,xf=new Ch,Vc=new X,Gc=new X,Hc=new X,Co=new X,Ro=new X,Ta=new X,jh=new X,vf=new X,bf=new X,wa=new X;function g_(s,t,e,n,i){for(let r=0,o=s.length-3;r<=o;r+=3){wa.fromArray(s,r);const a=i.x*Math.abs(wa.x)+i.y*Math.abs(wa.y)+i.z*Math.abs(wa.z),c=t.dot(wa),l=e.dot(wa),h=n.dot(wa);if(Math.max(-Math.max(c,l,h),Math.min(c,l,h))>a)return!1}return!0}const F3=new Ch,Xh=new X,__=new X;let sb=class{constructor(t=new X,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;e!==void 0?n.copy(e):F3.setFromPoints(t).getCenter(n);let i=0;for(let r=0,o=t.length;r<o;r++)i=Math.max(i,n.distanceToSquared(t[r]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;Xh.subVectors(t,this.center);const e=Xh.lengthSq();if(e>this.radius*this.radius){const n=Math.sqrt(e),i=(n-this.radius)*.5;this.center.addScaledVector(Xh,i/n),this.radius+=i}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(__.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(Xh.copy(t.center).add(__)),this.expandByPoint(Xh.copy(t.center).sub(__))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}};const vr=new X,y_=new X,Sf=new X,No=new X,x_=new X,Mf=new X,v_=new X;let rb=class{constructor(t=new X,e=new X(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,vr)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=vr.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(vr.copy(this.origin).addScaledVector(this.direction,e),vr.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){y_.copy(t).add(e).multiplyScalar(.5),Sf.copy(e).sub(t).normalize(),No.copy(this.origin).sub(y_);const r=t.distanceTo(e)*.5,o=-this.direction.dot(Sf),a=No.dot(this.direction),c=-No.dot(Sf),l=No.lengthSq(),h=Math.abs(1-o*o);let u,d,f,p;if(h>0)if(u=o*c-a,d=o*a-c,p=r*h,u>=0)if(d>=-p)if(d<=p){const _=1/h;u*=_,d*=_,f=u*(u+o*d+2*a)+d*(o*u+d+2*c)+l}else d=r,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*c)+l;else d=-r,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*c)+l;else d<=-p?(u=Math.max(0,-(-o*r+a)),d=u>0?-r:Math.min(Math.max(-r,-c),r),f=-u*u+d*(d+2*c)+l):d<=p?(u=0,d=Math.min(Math.max(-r,-c),r),f=d*(d+2*c)+l):(u=Math.max(0,-(o*r+a)),d=u>0?r:Math.min(Math.max(-r,-c),r),f=-u*u+d*(d+2*c)+l);else d=o>0?-r:r,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*c)+l;return n&&n.copy(this.origin).addScaledVector(this.direction,u),i&&i.copy(y_).addScaledVector(Sf,d),f}intersectSphere(t,e){vr.subVectors(t.center,this.origin);const n=vr.dot(this.direction),i=vr.dot(vr)-n*n,r=t.radius*t.radius;if(i>r)return null;const o=Math.sqrt(r-i),a=n-o,c=n+o;return c<0?null:a<0?this.at(c,e):this.at(a,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return n===null?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,r,o,a,c;const l=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,d=this.origin;return l>=0?(n=(t.min.x-d.x)*l,i=(t.max.x-d.x)*l):(n=(t.max.x-d.x)*l,i=(t.min.x-d.x)*l),h>=0?(r=(t.min.y-d.y)*h,o=(t.max.y-d.y)*h):(r=(t.max.y-d.y)*h,o=(t.min.y-d.y)*h),n>o||r>i||((r>n||isNaN(n))&&(n=r),(o<i||isNaN(i))&&(i=o),u>=0?(a=(t.min.z-d.z)*u,c=(t.max.z-d.z)*u):(a=(t.max.z-d.z)*u,c=(t.min.z-d.z)*u),n>c||a>i)||((a>n||n!==n)&&(n=a),(c<i||i!==i)&&(i=c),i<0)?null:this.at(n>=0?n:i,e)}intersectsBox(t){return this.intersectBox(t,vr)!==null}intersectTriangle(t,e,n,i,r){x_.subVectors(e,t),Mf.subVectors(n,t),v_.crossVectors(x_,Mf);let o=this.direction.dot(v_),a;if(o>0){if(i)return null;a=1}else if(o<0)a=-1,o=-o;else return null;No.subVectors(this.origin,t);const c=a*this.direction.dot(Mf.crossVectors(No,Mf));if(c<0)return null;const l=a*this.direction.dot(x_.cross(No));if(l<0||c+l>o)return null;const h=-a*No.dot(v_);return h<0?null:this.at(h/o,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}},un=class ax{constructor(t,e,n,i,r,o,a,c,l,h,u,d,f,p,_,g){ax.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,e,n,i,r,o,a,c,l,h,u,d,f,p,_,g)}set(t,e,n,i,r,o,a,c,l,h,u,d,f,p,_,g){const m=this.elements;return m[0]=t,m[4]=e,m[8]=n,m[12]=i,m[1]=r,m[5]=o,m[9]=a,m[13]=c,m[2]=l,m[6]=h,m[10]=u,m[14]=d,m[3]=f,m[7]=p,m[11]=_,m[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new ax().fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/$c.setFromMatrixColumn(t,0).length(),r=1/$c.setFromMatrixColumn(t,1).length(),o=1/$c.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*r,e[5]=n[5]*r,e[6]=n[6]*r,e[7]=0,e[8]=n[8]*o,e[9]=n[9]*o,e[10]=n[10]*o,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,i=t.y,r=t.z,o=Math.cos(n),a=Math.sin(n),c=Math.cos(i),l=Math.sin(i),h=Math.cos(r),u=Math.sin(r);if(t.order==="XYZ"){const d=o*h,f=o*u,p=a*h,_=a*u;e[0]=c*h,e[4]=-c*u,e[8]=l,e[1]=f+p*l,e[5]=d-_*l,e[9]=-a*c,e[2]=_-d*l,e[6]=p+f*l,e[10]=o*c}else if(t.order==="YXZ"){const d=c*h,f=c*u,p=l*h,_=l*u;e[0]=d+_*a,e[4]=p*a-f,e[8]=o*l,e[1]=o*u,e[5]=o*h,e[9]=-a,e[2]=f*a-p,e[6]=_+d*a,e[10]=o*c}else if(t.order==="ZXY"){const d=c*h,f=c*u,p=l*h,_=l*u;e[0]=d-_*a,e[4]=-o*u,e[8]=p+f*a,e[1]=f+p*a,e[5]=o*h,e[9]=_-d*a,e[2]=-o*l,e[6]=a,e[10]=o*c}else if(t.order==="ZYX"){const d=o*h,f=o*u,p=a*h,_=a*u;e[0]=c*h,e[4]=p*l-f,e[8]=d*l+_,e[1]=c*u,e[5]=_*l+d,e[9]=f*l-p,e[2]=-l,e[6]=a*c,e[10]=o*c}else if(t.order==="YZX"){const d=o*c,f=o*l,p=a*c,_=a*l;e[0]=c*h,e[4]=_-d*u,e[8]=p*u+f,e[1]=u,e[5]=o*h,e[9]=-a*h,e[2]=-l*h,e[6]=f*u+p,e[10]=d-_*u}else if(t.order==="XZY"){const d=o*c,f=o*l,p=a*c,_=a*l;e[0]=c*h,e[4]=-u,e[8]=l*h,e[1]=d*u+_,e[5]=o*h,e[9]=f*u-p,e[2]=p*u-f,e[6]=a*h,e[10]=_*u+d}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(O3,t,L3)}lookAt(t,e,n){const i=this.elements;return Bi.subVectors(t,e),Bi.lengthSq()===0&&(Bi.z=1),Bi.normalize(),Po.crossVectors(n,Bi),Po.lengthSq()===0&&(Math.abs(n.z)===1?Bi.x+=1e-4:Bi.z+=1e-4,Bi.normalize(),Po.crossVectors(n,Bi)),Po.normalize(),Tf.crossVectors(Bi,Po),i[0]=Po.x,i[4]=Tf.x,i[8]=Bi.x,i[1]=Po.y,i[5]=Tf.y,i[9]=Bi.y,i[2]=Po.z,i[6]=Tf.z,i[10]=Bi.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,o=n[0],a=n[4],c=n[8],l=n[12],h=n[1],u=n[5],d=n[9],f=n[13],p=n[2],_=n[6],g=n[10],m=n[14],x=n[3],v=n[7],y=n[11],b=n[15],S=i[0],M=i[4],T=i[8],A=i[12],w=i[1],E=i[5],N=i[9],I=i[13],P=i[2],D=i[6],O=i[10],k=i[14],z=i[3],Y=i[7],U=i[11],W=i[15];return r[0]=o*S+a*w+c*P+l*z,r[4]=o*M+a*E+c*D+l*Y,r[8]=o*T+a*N+c*O+l*U,r[12]=o*A+a*I+c*k+l*W,r[1]=h*S+u*w+d*P+f*z,r[5]=h*M+u*E+d*D+f*Y,r[9]=h*T+u*N+d*O+f*U,r[13]=h*A+u*I+d*k+f*W,r[2]=p*S+_*w+g*P+m*z,r[6]=p*M+_*E+g*D+m*Y,r[10]=p*T+_*N+g*O+m*U,r[14]=p*A+_*I+g*k+m*W,r[3]=x*S+v*w+y*P+b*z,r[7]=x*M+v*E+y*D+b*Y,r[11]=x*T+v*N+y*O+b*U,r[15]=x*A+v*I+y*k+b*W,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],r=t[12],o=t[1],a=t[5],c=t[9],l=t[13],h=t[2],u=t[6],d=t[10],f=t[14],p=t[3],_=t[7],g=t[11],m=t[15];return p*(+r*c*u-i*l*u-r*a*d+n*l*d+i*a*f-n*c*f)+_*(+e*c*f-e*l*d+r*o*d-i*o*f+i*l*h-r*c*h)+g*(+e*l*u-e*a*f-r*o*u+n*o*f+r*a*h-n*l*h)+m*(-i*a*h-e*c*u+e*a*d+i*o*u-n*o*d+n*c*h)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],o=t[4],a=t[5],c=t[6],l=t[7],h=t[8],u=t[9],d=t[10],f=t[11],p=t[12],_=t[13],g=t[14],m=t[15],x=u*g*l-_*d*l+_*c*f-a*g*f-u*c*m+a*d*m,v=p*d*l-h*g*l-p*c*f+o*g*f+h*c*m-o*d*m,y=h*_*l-p*u*l+p*a*f-o*_*f-h*a*m+o*u*m,b=p*u*c-h*_*c-p*a*d+o*_*d+h*a*g-o*u*g,S=e*x+n*v+i*y+r*b;if(S===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const M=1/S;return t[0]=x*M,t[1]=(_*d*r-u*g*r-_*i*f+n*g*f+u*i*m-n*d*m)*M,t[2]=(a*g*r-_*c*r+_*i*l-n*g*l-a*i*m+n*c*m)*M,t[3]=(u*c*r-a*d*r-u*i*l+n*d*l+a*i*f-n*c*f)*M,t[4]=v*M,t[5]=(h*g*r-p*d*r+p*i*f-e*g*f-h*i*m+e*d*m)*M,t[6]=(p*c*r-o*g*r-p*i*l+e*g*l+o*i*m-e*c*m)*M,t[7]=(o*d*r-h*c*r+h*i*l-e*d*l-o*i*f+e*c*f)*M,t[8]=y*M,t[9]=(p*u*r-h*_*r-p*n*f+e*_*f+h*n*m-e*u*m)*M,t[10]=(o*_*r-p*a*r+p*n*l-e*_*l-o*n*m+e*a*m)*M,t[11]=(h*a*r-o*u*r-h*n*l+e*u*l+o*n*f-e*a*f)*M,t[12]=b*M,t[13]=(h*_*i-p*u*i+p*n*d-e*_*d-h*n*g+e*u*g)*M,t[14]=(p*a*i-o*_*i-p*n*c+e*_*c+o*n*g-e*a*g)*M,t[15]=(o*u*i-h*a*i+h*n*c-e*u*c-o*n*d+e*a*d)*M,this}scale(t){const e=this.elements,n=t.x,i=t.y,r=t.z;return e[0]*=n,e[4]*=i,e[8]*=r,e[1]*=n,e[5]*=i,e[9]*=r,e[2]*=n,e[6]*=i,e[10]*=r,e[3]*=n,e[7]*=i,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),r=1-n,o=t.x,a=t.y,c=t.z,l=r*o,h=r*a;return this.set(l*o+n,l*a-i*c,l*c+i*a,0,l*a+i*c,h*a+n,h*c-i*o,0,l*c-i*a,h*c+i*o,r*c*c+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,i,r,o){return this.set(1,n,r,0,t,1,o,0,e,i,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,r=e._x,o=e._y,a=e._z,c=e._w,l=r+r,h=o+o,u=a+a,d=r*l,f=r*h,p=r*u,_=o*h,g=o*u,m=a*u,x=c*l,v=c*h,y=c*u,b=n.x,S=n.y,M=n.z;return i[0]=(1-(_+m))*b,i[1]=(f+y)*b,i[2]=(p-v)*b,i[3]=0,i[4]=(f-y)*S,i[5]=(1-(d+m))*S,i[6]=(g+x)*S,i[7]=0,i[8]=(p+v)*M,i[9]=(g-x)*M,i[10]=(1-(d+_))*M,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let r=$c.set(i[0],i[1],i[2]).length();const o=$c.set(i[4],i[5],i[6]).length(),a=$c.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),t.x=i[12],t.y=i[13],t.z=i[14],_s.copy(this);const l=1/r,h=1/o,u=1/a;return _s.elements[0]*=l,_s.elements[1]*=l,_s.elements[2]*=l,_s.elements[4]*=h,_s.elements[5]*=h,_s.elements[6]*=h,_s.elements[8]*=u,_s.elements[9]*=u,_s.elements[10]*=u,e.setFromRotationMatrix(_s),n.x=r,n.y=o,n.z=a,this}makePerspective(t,e,n,i,r,o,a=qr){const c=this.elements,l=2*r/(e-t),h=2*r/(n-i),u=(e+t)/(e-t),d=(n+i)/(n-i);let f,p;if(a===qr)f=-(o+r)/(o-r),p=-2*o*r/(o-r);else if(a===xm)f=-o/(o-r),p=-o*r/(o-r);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return c[0]=l,c[4]=0,c[8]=u,c[12]=0,c[1]=0,c[5]=h,c[9]=d,c[13]=0,c[2]=0,c[6]=0,c[10]=f,c[14]=p,c[3]=0,c[7]=0,c[11]=-1,c[15]=0,this}makeOrthographic(t,e,n,i,r,o,a=qr){const c=this.elements,l=1/(e-t),h=1/(n-i),u=1/(o-r),d=(e+t)*l,f=(n+i)*h;let p,_;if(a===qr)p=(o+r)*u,_=-2*u;else if(a===xm)p=r*u,_=-1*u;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return c[0]=2*l,c[4]=0,c[8]=0,c[12]=-d,c[1]=0,c[5]=2*h,c[9]=0,c[13]=-f,c[2]=0,c[6]=0,c[10]=_,c[14]=-p,c[3]=0,c[7]=0,c[11]=0,c[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<16;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}};const $c=new X,_s=new un,O3=new X(0,0,0),L3=new X(1,1,1),Po=new X,Tf=new X,Bi=new X,HM=new un,$M=new zs;let hc=class mC{constructor(t=0,e=0,n=0,i=mC.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i=this._order){return this._x=t,this._y=e,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const i=t.elements,r=i[0],o=i[4],a=i[8],c=i[1],l=i[5],h=i[9],u=i[2],d=i[6],f=i[10];switch(e){case"XYZ":this._y=Math.asin(Jn(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-h,f),this._z=Math.atan2(-o,r)):(this._x=Math.atan2(d,l),this._z=0);break;case"YXZ":this._x=Math.asin(-Jn(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-u,r),this._z=0);break;case"ZXY":this._x=Math.asin(Jn(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,f),this._z=Math.atan2(-o,l)):(this._y=0,this._z=Math.atan2(c,r));break;case"ZYX":this._y=Math.asin(-Jn(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(c,r)):(this._x=0,this._z=Math.atan2(-o,l));break;case"YZX":this._z=Math.asin(Jn(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-u,r)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-Jn(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,l),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-h,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,n===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return HM.makeRotationFromQuaternion(t),this.setFromRotationMatrix(HM,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return $M.setFromEuler(this),this.setFromQuaternion($M,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}};hc.DEFAULT_ORDER="XYZ";let ob=class{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}},B3=0;const WM=new X,Wc=new zs,br=new un,wf=new X,Yh=new X,U3=new X,k3=new zs,qM=new X(1,0,0),jM=new X(0,1,0),XM=new X(0,0,1),YM={type:"added"},z3={type:"removed"},qc={type:"childadded",child:null},b_={type:"childremoved",child:null};let cs=class Up extends pa{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:B3++}),this.uuid=Eh(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Up.DEFAULT_UP.clone();const t=new X,e=new hc,n=new zs,i=new X(1,1,1);function r(){n.setFromEuler(e,!1)}function o(){e.setFromQuaternion(n,void 0,!1)}e._onChange(r),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new un},normalMatrix:{value:new ue}}),this.matrix=new un,this.matrixWorld=new un,this.matrixAutoUpdate=Up.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Up.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new ob,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Wc.setFromAxisAngle(t,e),this.quaternion.multiply(Wc),this}rotateOnWorldAxis(t,e){return Wc.setFromAxisAngle(t,e),this.quaternion.premultiply(Wc),this}rotateX(t){return this.rotateOnAxis(qM,t)}rotateY(t){return this.rotateOnAxis(jM,t)}rotateZ(t){return this.rotateOnAxis(XM,t)}translateOnAxis(t,e){return WM.copy(t).applyQuaternion(this.quaternion),this.position.add(WM.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(qM,t)}translateY(t){return this.translateOnAxis(jM,t)}translateZ(t){return this.translateOnAxis(XM,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(br.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?wf.copy(t):wf.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Yh.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?br.lookAt(Yh,wf,this.up):br.lookAt(wf,Yh,this.up),this.quaternion.setFromRotationMatrix(br),i&&(br.extractRotation(i.matrixWorld),Wc.setFromRotationMatrix(br),this.quaternion.premultiply(Wc.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(YM),qc.child=t,this.dispatchEvent(qc),qc.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(z3),b_.child=t,this.dispatchEvent(b_),b_.child=null),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),br.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),br.multiply(t.parent.matrixWorld)),t.applyMatrix4(br),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(YM),qc.child=t,this.dispatchEvent(qc),qc.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(t,e);if(o!==void 0)return o}}getObjectsByProperty(t,e,n=[]){this[t]===e&&n.push(this);const i=this.children;for(let r=0,o=i.length;r<o;r++)i[r].getObjectsByProperty(t,e,n);return n}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Yh,t,U3),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Yh,k3,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)}updateWorldMatrix(t,e){const n=this.parent;if(t===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),e===!0){const i=this.children;for(let r=0,o=i.length;r<o;r++)i[r].updateWorldMatrix(!1,!0)}}toJSON(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.visibility=this._visibility,i.active=this._active,i.bounds=this._bounds.map(a=>({boxInitialized:a.boxInitialized,boxMin:a.box.min.toArray(),boxMax:a.box.max.toArray(),sphereInitialized:a.sphereInitialized,sphereRadius:a.sphere.radius,sphereCenter:a.sphere.center.toArray()})),i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.geometryCount=this._geometryCount,i.matricesTexture=this._matricesTexture.toJSON(t),this._colorsTexture!==null&&(i.colorsTexture=this._colorsTexture.toJSON(t)),this.boundingSphere!==null&&(i.boundingSphere={center:i.boundingSphere.center.toArray(),radius:i.boundingSphere.radius}),this.boundingBox!==null&&(i.boundingBox={min:i.boundingBox.min.toArray(),max:i.boundingBox.max.toArray()}));function r(a,c){return a[c.uuid]===void 0&&(a[c.uuid]=c.toJSON(t)),c.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(t.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const c=a.shapes;if(Array.isArray(c))for(let l=0,h=c.length;l<h;l++){const u=c[l];r(t.shapes,u)}else r(t.shapes,c)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let c=0,l=this.material.length;c<l;c++)a.push(r(t.materials,this.material[c]));i.material=a}else i.material=r(t.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const c=this.animations[a];i.animations.push(r(t.animations,c))}}if(e){const a=o(t.geometries),c=o(t.materials),l=o(t.textures),h=o(t.images),u=o(t.shapes),d=o(t.skeletons),f=o(t.animations),p=o(t.nodes);a.length>0&&(n.geometries=a),c.length>0&&(n.materials=c),l.length>0&&(n.textures=l),h.length>0&&(n.images=h),u.length>0&&(n.shapes=u),d.length>0&&(n.skeletons=d),f.length>0&&(n.animations=f),p.length>0&&(n.nodes=p)}return n.object=i,n;function o(a){const c=[];for(const l in a){const h=a[l];delete h.metadata,c.push(h)}return c}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const i=t.children[n];this.add(i.clone())}return this}};cs.DEFAULT_UP=new X(0,1,0);cs.DEFAULT_MATRIX_AUTO_UPDATE=!0;cs.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const ys=new X,Sr=new X,S_=new X,Mr=new X,jc=new X,Xc=new X,ZM=new X,M_=new X,T_=new X,w_=new X,A_=new vn,E_=new vn,C_=new vn;let Zh=class vl{constructor(t=new X,e=new X,n=new X){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){i.subVectors(n,e),ys.subVectors(t,e),i.cross(ys);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(t,e,n,i,r){ys.subVectors(i,e),Sr.subVectors(n,e),S_.subVectors(t,e);const o=ys.dot(ys),a=ys.dot(Sr),c=ys.dot(S_),l=Sr.dot(Sr),h=Sr.dot(S_),u=o*l-a*a;if(u===0)return r.set(0,0,0),null;const d=1/u,f=(l*c-a*h)*d,p=(o*h-a*c)*d;return r.set(1-f-p,p,f)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,Mr)===null?!1:Mr.x>=0&&Mr.y>=0&&Mr.x+Mr.y<=1}static getInterpolation(t,e,n,i,r,o,a,c){return this.getBarycoord(t,e,n,i,Mr)===null?(c.x=0,c.y=0,"z"in c&&(c.z=0),"w"in c&&(c.w=0),null):(c.setScalar(0),c.addScaledVector(r,Mr.x),c.addScaledVector(o,Mr.y),c.addScaledVector(a,Mr.z),c)}static getInterpolatedAttribute(t,e,n,i,r,o){return A_.setScalar(0),E_.setScalar(0),C_.setScalar(0),A_.fromBufferAttribute(t,e),E_.fromBufferAttribute(t,n),C_.fromBufferAttribute(t,i),o.setScalar(0),o.addScaledVector(A_,r.x),o.addScaledVector(E_,r.y),o.addScaledVector(C_,r.z),o}static isFrontFacing(t,e,n,i){return ys.subVectors(n,e),Sr.subVectors(t,e),ys.cross(Sr).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,n,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,i),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return ys.subVectors(this.c,this.b),Sr.subVectors(this.a,this.b),ys.cross(Sr).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return vl.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return vl.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,n,i,r){return vl.getInterpolation(t,this.a,this.b,this.c,e,n,i,r)}containsPoint(t){return vl.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return vl.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,i=this.b,r=this.c;let o,a;jc.subVectors(i,n),Xc.subVectors(r,n),M_.subVectors(t,n);const c=jc.dot(M_),l=Xc.dot(M_);if(c<=0&&l<=0)return e.copy(n);T_.subVectors(t,i);const h=jc.dot(T_),u=Xc.dot(T_);if(h>=0&&u<=h)return e.copy(i);const d=c*u-h*l;if(d<=0&&c>=0&&h<=0)return o=c/(c-h),e.copy(n).addScaledVector(jc,o);w_.subVectors(t,r);const f=jc.dot(w_),p=Xc.dot(w_);if(p>=0&&f<=p)return e.copy(r);const _=f*l-c*p;if(_<=0&&l>=0&&p<=0)return a=l/(l-p),e.copy(n).addScaledVector(Xc,a);const g=h*p-f*u;if(g<=0&&u-h>=0&&f-p>=0)return ZM.subVectors(r,i),a=(u-h)/(u-h+(f-p)),e.copy(i).addScaledVector(ZM,a);const m=1/(g+_+d);return o=_*m,a=d*m,e.copy(n).addScaledVector(jc,o).addScaledVector(Xc,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}};const gC={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Do={h:0,s:0,l:0},Af={h:0,s:0,l:0};function R_(s,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?s+(t-s)*6*e:e<1/2?t:e<2/3?s+(t-s)*6*(2/3-e):s}let Ee=class{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,n)}set(t,e,n){if(e===void 0&&n===void 0){const i=t;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(t,e,n);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=Wi){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,be.toWorkingColorSpace(this,e),this}setRGB(t,e,n,i=be.workingColorSpace){return this.r=t,this.g=e,this.b=n,be.toWorkingColorSpace(this,i),this}setHSL(t,e,n,i=be.workingColorSpace){if(t=ib(t,1),e=Jn(e,0,1),n=Jn(n,0,1),e===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+e):n+e-n*e,o=2*n-r;this.r=R_(o,r,t+1/3),this.g=R_(o,r,t),this.b=R_(o,r,t-1/3)}return be.toWorkingColorSpace(this,i),this}setStyle(t,e=Wi){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(t)){let r;const o=i[1],a=i[2];switch(o){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,e);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,e);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const r=i[1],o=r.length;if(o===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,e);if(o===6)return this.setHex(parseInt(r,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=Wi){const n=gC[t.toLowerCase()];return n!==void 0?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Kr(t.r),this.g=Kr(t.g),this.b=Kr(t.b),this}copyLinearToSRGB(t){return this.r=Ul(t.r),this.g=Ul(t.g),this.b=Ul(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=Wi){return be.fromWorkingColorSpace(Yn.copy(this),t),Math.round(Jn(Yn.r*255,0,255))*65536+Math.round(Jn(Yn.g*255,0,255))*256+Math.round(Jn(Yn.b*255,0,255))}getHexString(t=Wi){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=be.workingColorSpace){be.fromWorkingColorSpace(Yn.copy(this),e);const n=Yn.r,i=Yn.g,r=Yn.b,o=Math.max(n,i,r),a=Math.min(n,i,r);let c,l;const h=(a+o)/2;if(a===o)c=0,l=0;else{const u=o-a;switch(l=h<=.5?u/(o+a):u/(2-o-a),o){case n:c=(i-r)/u+(i<r?6:0);break;case i:c=(r-n)/u+2;break;case r:c=(n-i)/u+4;break}c/=6}return t.h=c,t.s=l,t.l=h,t}getRGB(t,e=be.workingColorSpace){return be.fromWorkingColorSpace(Yn.copy(this),e),t.r=Yn.r,t.g=Yn.g,t.b=Yn.b,t}getStyle(t=Wi){be.fromWorkingColorSpace(Yn.copy(this),t);const e=Yn.r,n=Yn.g,i=Yn.b;return t!==Wi?`color(${t} ${e.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(e*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(t,e,n){return this.getHSL(Do),this.setHSL(Do.h+t,Do.s+e,Do.l+n)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(Do),t.getHSL(Af);const n=Pu(Do.h,Af.h,e),i=Pu(Do.s,Af.s,e),r=Pu(Do.l,Af.l,e);return this.setHSL(n,i,r),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,n=this.g,i=this.b,r=t.elements;return this.r=r[0]*e+r[3]*n+r[6]*i,this.g=r[1]*e+r[4]*n+r[7]*i,this.b=r[2]*e+r[5]*n+r[8]*i,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}};const Yn=new Ee;Ee.NAMES=gC;let V3=0,hg=class extends pa{static get type(){return"Material"}get type(){return this.constructor.type}set type(t){}constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:V3++}),this.uuid=Eh(),this.name="",this.blending=Ll,this.side=aa,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=by,this.blendDst=Sy,this.blendEquation=Va,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Ee(0,0,0),this.blendAlpha=0,this.depthFunc=nh,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=DM,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=kc,this.stencilZFail=kc,this.stencilZPass=kc,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const n=t[e];if(n===void 0){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const i=this[e];if(i===void 0){console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Ll&&(n.blending=this.blending),this.side!==aa&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==by&&(n.blendSrc=this.blendSrc),this.blendDst!==Sy&&(n.blendDst=this.blendDst),this.blendEquation!==Va&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==nh&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==DM&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==kc&&(n.stencilFail=this.stencilFail),this.stencilZFail!==kc&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==kc&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(r){const o=[];for(const a in r){const c=r[a];delete c.metadata,o.push(c)}return o}if(e){const r=i(t.textures),o=i(t.images);r.length>0&&(n.textures=r),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(e!==null){const i=e.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=e[r].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}},ab=class extends hg{static get type(){return"MeshBasicMaterial"}constructor(t){super(),this.isMeshBasicMaterial=!0,this.color=new Ee(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new hc,this.combine=YE,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}};const pn=new X,Ef=new qt;let er=class{constructor(t,e,n=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n,this.usage=IM,this.updateRanges=[],this.gpuType=Wr,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)Ef.fromBufferAttribute(this,e),Ef.applyMatrix3(t),this.setXY(e,Ef.x,Ef.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)pn.fromBufferAttribute(this,e),pn.applyMatrix3(t),this.setXYZ(e,pn.x,pn.y,pn.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)pn.fromBufferAttribute(this,e),pn.applyMatrix4(t),this.setXYZ(e,pn.x,pn.y,pn.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)pn.fromBufferAttribute(this,e),pn.applyNormalMatrix(t),this.setXYZ(e,pn.x,pn.y,pn.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)pn.fromBufferAttribute(this,e),pn.transformDirection(t),this.setXYZ(e,pn.x,pn.y,pn.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let n=this.array[t*this.itemSize+e];return this.normalized&&(n=xl(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=oi(n,this.array)),this.array[t*this.itemSize+e]=n,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=xl(e,this.array)),e}setX(t,e){return this.normalized&&(e=oi(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=xl(e,this.array)),e}setY(t,e){return this.normalized&&(e=oi(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=xl(e,this.array)),e}setZ(t,e){return this.normalized&&(e=oi(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=xl(e,this.array)),e}setW(t,e){return this.normalized&&(e=oi(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=oi(e,this.array),n=oi(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=oi(e,this.array),n=oi(n,this.array),i=oi(i,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this}setXYZW(t,e,n,i,r){return t*=this.itemSize,this.normalized&&(e=oi(e,this.array),n=oi(n,this.array),i=oi(i,this.array),r=oi(r,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=r,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==IM&&(t.usage=this.usage),t}},_C=class extends er{constructor(t,e,n){super(new Uint16Array(t),e,n)}},yC=class extends er{constructor(t,e,n){super(new Uint32Array(t),e,n)}},os=class extends er{constructor(t,e,n){super(new Float32Array(t),e,n)}},G3=0;const Ji=new un,N_=new cs,Yc=new X,Ui=new Ch,Kh=new Ch,Pn=new X;let Sc=class xC extends pa{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:G3++}),this.uuid=Eh(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(hC(t)?yC:_C)(t,1):this.index=t,this}setIndirect(t){return this.indirect=t,this}getIndirect(){return this.indirect}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new ue().getNormalMatrix(t);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(t),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return Ji.makeRotationFromQuaternion(t),this.applyMatrix4(Ji),this}rotateX(t){return Ji.makeRotationX(t),this.applyMatrix4(Ji),this}rotateY(t){return Ji.makeRotationY(t),this.applyMatrix4(Ji),this}rotateZ(t){return Ji.makeRotationZ(t),this.applyMatrix4(Ji),this}translate(t,e,n){return Ji.makeTranslation(t,e,n),this.applyMatrix4(Ji),this}scale(t,e,n){return Ji.makeScale(t,e,n),this.applyMatrix4(Ji),this}lookAt(t){return N_.lookAt(t),N_.updateMatrix(),this.applyMatrix4(N_.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Yc).negate(),this.translate(Yc.x,Yc.y,Yc.z),this}setFromPoints(t){const e=this.getAttribute("position");if(e===void 0){const n=[];for(let i=0,r=t.length;i<r;i++){const o=t[i];n.push(o.x,o.y,o.z||0)}this.setAttribute("position",new os(n,3))}else{for(let n=0,i=e.count;n<i;n++){const r=t[n];e.setXYZ(n,r.x,r.y,r.z||0)}t.length>e.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),e.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Ch);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new X(-1/0,-1/0,-1/0),new X(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,i=e.length;n<i;n++){const r=e[n];Ui.setFromBufferAttribute(r),this.morphTargetsRelative?(Pn.addVectors(this.boundingBox.min,Ui.min),this.boundingBox.expandByPoint(Pn),Pn.addVectors(this.boundingBox.max,Ui.max),this.boundingBox.expandByPoint(Pn)):(this.boundingBox.expandByPoint(Ui.min),this.boundingBox.expandByPoint(Ui.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new sb);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new X,1/0);return}if(t){const n=this.boundingSphere.center;if(Ui.setFromBufferAttribute(t),e)for(let r=0,o=e.length;r<o;r++){const a=e[r];Kh.setFromBufferAttribute(a),this.morphTargetsRelative?(Pn.addVectors(Ui.min,Kh.min),Ui.expandByPoint(Pn),Pn.addVectors(Ui.max,Kh.max),Ui.expandByPoint(Pn)):(Ui.expandByPoint(Kh.min),Ui.expandByPoint(Kh.max))}Ui.getCenter(n);let i=0;for(let r=0,o=t.count;r<o;r++)Pn.fromBufferAttribute(t,r),i=Math.max(i,n.distanceToSquared(Pn));if(e)for(let r=0,o=e.length;r<o;r++){const a=e[r],c=this.morphTargetsRelative;for(let l=0,h=a.count;l<h;l++)Pn.fromBufferAttribute(a,l),c&&(Yc.fromBufferAttribute(t,l),Pn.add(Yc)),i=Math.max(i,n.distanceToSquared(Pn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.position,i=e.normal,r=e.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new er(new Float32Array(4*n.count),4));const o=this.getAttribute("tangent"),a=[],c=[];for(let T=0;T<n.count;T++)a[T]=new X,c[T]=new X;const l=new X,h=new X,u=new X,d=new qt,f=new qt,p=new qt,_=new X,g=new X;function m(T,A,w){l.fromBufferAttribute(n,T),h.fromBufferAttribute(n,A),u.fromBufferAttribute(n,w),d.fromBufferAttribute(r,T),f.fromBufferAttribute(r,A),p.fromBufferAttribute(r,w),h.sub(l),u.sub(l),f.sub(d),p.sub(d);const E=1/(f.x*p.y-p.x*f.y);isFinite(E)&&(_.copy(h).multiplyScalar(p.y).addScaledVector(u,-f.y).multiplyScalar(E),g.copy(u).multiplyScalar(f.x).addScaledVector(h,-p.x).multiplyScalar(E),a[T].add(_),a[A].add(_),a[w].add(_),c[T].add(g),c[A].add(g),c[w].add(g))}let x=this.groups;x.length===0&&(x=[{start:0,count:t.count}]);for(let T=0,A=x.length;T<A;++T){const w=x[T],E=w.start,N=w.count;for(let I=E,P=E+N;I<P;I+=3)m(t.getX(I+0),t.getX(I+1),t.getX(I+2))}const v=new X,y=new X,b=new X,S=new X;function M(T){b.fromBufferAttribute(i,T),S.copy(b);const A=a[T];v.copy(A),v.sub(b.multiplyScalar(b.dot(A))).normalize(),y.crossVectors(S,A);const E=y.dot(c[T])<0?-1:1;o.setXYZW(T,v.x,v.y,v.z,E)}for(let T=0,A=x.length;T<A;++T){const w=x[T],E=w.start,N=w.count;for(let I=E,P=E+N;I<P;I+=3)M(t.getX(I+0)),M(t.getX(I+1)),M(t.getX(I+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new er(new Float32Array(e.count*3),3),this.setAttribute("normal",n);else for(let d=0,f=n.count;d<f;d++)n.setXYZ(d,0,0,0);const i=new X,r=new X,o=new X,a=new X,c=new X,l=new X,h=new X,u=new X;if(t)for(let d=0,f=t.count;d<f;d+=3){const p=t.getX(d+0),_=t.getX(d+1),g=t.getX(d+2);i.fromBufferAttribute(e,p),r.fromBufferAttribute(e,_),o.fromBufferAttribute(e,g),h.subVectors(o,r),u.subVectors(i,r),h.cross(u),a.fromBufferAttribute(n,p),c.fromBufferAttribute(n,_),l.fromBufferAttribute(n,g),a.add(h),c.add(h),l.add(h),n.setXYZ(p,a.x,a.y,a.z),n.setXYZ(_,c.x,c.y,c.z),n.setXYZ(g,l.x,l.y,l.z)}else for(let d=0,f=e.count;d<f;d+=3)i.fromBufferAttribute(e,d+0),r.fromBufferAttribute(e,d+1),o.fromBufferAttribute(e,d+2),h.subVectors(o,r),u.subVectors(i,r),h.cross(u),n.setXYZ(d+0,h.x,h.y,h.z),n.setXYZ(d+1,h.x,h.y,h.z),n.setXYZ(d+2,h.x,h.y,h.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)Pn.fromBufferAttribute(t,e),Pn.normalize(),t.setXYZ(e,Pn.x,Pn.y,Pn.z)}toNonIndexed(){function t(a,c){const l=a.array,h=a.itemSize,u=a.normalized,d=new l.constructor(c.length*h);let f=0,p=0;for(let _=0,g=c.length;_<g;_++){a.isInterleavedBufferAttribute?f=c[_]*a.data.stride+a.offset:f=c[_]*h;for(let m=0;m<h;m++)d[p++]=l[f++]}return new er(d,h,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new xC,n=this.index.array,i=this.attributes;for(const a in i){const c=i[a],l=t(c,n);e.setAttribute(a,l)}const r=this.morphAttributes;for(const a in r){const c=[],l=r[a];for(let h=0,u=l.length;h<u;h++){const d=l[h],f=t(d,n);c.push(f)}e.morphAttributes[a]=c}e.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,c=o.length;a<c;a++){const l=o[a];e.addGroup(l.start,l.count,l.materialIndex)}return e}toJSON(){const t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const c=this.parameters;for(const l in c)c[l]!==void 0&&(t[l]=c[l]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const c in n){const l=n[c];t.data.attributes[c]=l.toJSON(t.data)}const i={};let r=!1;for(const c in this.morphAttributes){const l=this.morphAttributes[c],h=[];for(let u=0,d=l.length;u<d;u++){const f=l[u];h.push(f.toJSON(t.data))}h.length>0&&(i[c]=h,r=!0)}r&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(t.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;n!==null&&this.setIndex(n.clone(e));const i=t.attributes;for(const l in i){const h=i[l];this.setAttribute(l,h.clone(e))}const r=t.morphAttributes;for(const l in r){const h=[],u=r[l];for(let d=0,f=u.length;d<f;d++)h.push(u[d].clone(e));this.morphAttributes[l]=h}this.morphTargetsRelative=t.morphTargetsRelative;const o=t.groups;for(let l=0,h=o.length;l<h;l++){const u=o[l];this.addGroup(u.start,u.count,u.materialIndex)}const a=t.boundingBox;a!==null&&(this.boundingBox=a.clone());const c=t.boundingSphere;return c!==null&&(this.boundingSphere=c.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}};const KM=new un,Aa=new rb,Cf=new sb,QM=new X,Rf=new X,Nf=new X,Pf=new X,P_=new X,Df=new X,JM=new X,If=new X;let Is=class extends cs{constructor(t=new Sc,e=new ab){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}getVertexPosition(t,e){const n=this.geometry,i=n.attributes.position,r=n.morphAttributes.position,o=n.morphTargetsRelative;e.fromBufferAttribute(i,t);const a=this.morphTargetInfluences;if(r&&a){Df.set(0,0,0);for(let c=0,l=r.length;c<l;c++){const h=a[c],u=r[c];h!==0&&(P_.fromBufferAttribute(u,t),o?Df.addScaledVector(P_,h):Df.addScaledVector(P_.sub(e),h))}e.add(Df)}return e}raycast(t,e){const n=this.geometry,i=this.material,r=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),Cf.copy(n.boundingSphere),Cf.applyMatrix4(r),Aa.copy(t.ray).recast(t.near),!(Cf.containsPoint(Aa.origin)===!1&&(Aa.intersectSphere(Cf,QM)===null||Aa.origin.distanceToSquared(QM)>(t.far-t.near)**2))&&(KM.copy(r).invert(),Aa.copy(t.ray).applyMatrix4(KM),!(n.boundingBox!==null&&Aa.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(t,e,Aa)))}_computeIntersections(t,e,n){let i;const r=this.geometry,o=this.material,a=r.index,c=r.attributes.position,l=r.attributes.uv,h=r.attributes.uv1,u=r.attributes.normal,d=r.groups,f=r.drawRange;if(a!==null)if(Array.isArray(o))for(let p=0,_=d.length;p<_;p++){const g=d[p],m=o[g.materialIndex],x=Math.max(g.start,f.start),v=Math.min(a.count,Math.min(g.start+g.count,f.start+f.count));for(let y=x,b=v;y<b;y+=3){const S=a.getX(y),M=a.getX(y+1),T=a.getX(y+2);i=Ff(this,m,t,n,l,h,u,S,M,T),i&&(i.faceIndex=Math.floor(y/3),i.face.materialIndex=g.materialIndex,e.push(i))}}else{const p=Math.max(0,f.start),_=Math.min(a.count,f.start+f.count);for(let g=p,m=_;g<m;g+=3){const x=a.getX(g),v=a.getX(g+1),y=a.getX(g+2);i=Ff(this,o,t,n,l,h,u,x,v,y),i&&(i.faceIndex=Math.floor(g/3),e.push(i))}}else if(c!==void 0)if(Array.isArray(o))for(let p=0,_=d.length;p<_;p++){const g=d[p],m=o[g.materialIndex],x=Math.max(g.start,f.start),v=Math.min(c.count,Math.min(g.start+g.count,f.start+f.count));for(let y=x,b=v;y<b;y+=3){const S=y,M=y+1,T=y+2;i=Ff(this,m,t,n,l,h,u,S,M,T),i&&(i.faceIndex=Math.floor(y/3),i.face.materialIndex=g.materialIndex,e.push(i))}}else{const p=Math.max(0,f.start),_=Math.min(c.count,f.start+f.count);for(let g=p,m=_;g<m;g+=3){const x=g,v=g+1,y=g+2;i=Ff(this,o,t,n,l,h,u,x,v,y),i&&(i.faceIndex=Math.floor(g/3),e.push(i))}}}};function H3(s,t,e,n,i,r,o,a){let c;if(t.side===fi?c=n.intersectTriangle(o,r,i,!0,a):c=n.intersectTriangle(i,r,o,t.side===aa,a),c===null)return null;If.copy(a),If.applyMatrix4(s.matrixWorld);const l=e.ray.origin.distanceTo(If);return l<e.near||l>e.far?null:{distance:l,point:If.clone(),object:s}}function Ff(s,t,e,n,i,r,o,a,c,l){s.getVertexPosition(a,Rf),s.getVertexPosition(c,Nf),s.getVertexPosition(l,Pf);const h=H3(s,t,e,n,Rf,Nf,Pf,JM);if(h){const u=new X;Zh.getBarycoord(JM,Rf,Nf,Pf,u),i&&(h.uv=Zh.getInterpolatedAttribute(i,a,c,l,u,new qt)),r&&(h.uv1=Zh.getInterpolatedAttribute(r,a,c,l,u,new qt)),o&&(h.normal=Zh.getInterpolatedAttribute(o,a,c,l,u,new X),h.normal.dot(n.direction)>0&&h.normal.multiplyScalar(-1));const d={a,b:c,c:l,normal:new X,materialIndex:0};Zh.getNormal(Rf,Nf,Pf,d.normal),h.face=d,h.barycoord=u}return h}let cb=class vC extends Sc{constructor(t=1,e=1,n=1,i=1,r=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:r,depthSegments:o};const a=this;i=Math.floor(i),r=Math.floor(r),o=Math.floor(o);const c=[],l=[],h=[],u=[];let d=0,f=0;p("z","y","x",-1,-1,n,e,t,o,r,0),p("z","y","x",1,-1,n,e,-t,o,r,1),p("x","z","y",1,1,t,n,e,i,o,2),p("x","z","y",1,-1,t,n,-e,i,o,3),p("x","y","z",1,-1,t,e,n,i,r,4),p("x","y","z",-1,-1,t,e,-n,i,r,5),this.setIndex(c),this.setAttribute("position",new os(l,3)),this.setAttribute("normal",new os(h,3)),this.setAttribute("uv",new os(u,2));function p(_,g,m,x,v,y,b,S,M,T,A){const w=y/M,E=b/T,N=y/2,I=b/2,P=S/2,D=M+1,O=T+1;let k=0,z=0;const Y=new X;for(let U=0;U<O;U++){const W=U*E-I;for(let lt=0;lt<D;lt++){const wt=lt*w-N;Y[_]=wt*x,Y[g]=W*v,Y[m]=P,l.push(Y.x,Y.y,Y.z),Y[_]=0,Y[g]=0,Y[m]=S>0?1:-1,h.push(Y.x,Y.y,Y.z),u.push(lt/M),u.push(1-U/T),k+=1}}for(let U=0;U<T;U++)for(let W=0;W<M;W++){const lt=d+W+D*U,wt=d+W+D*(U+1),H=d+(W+1)+D*(U+1),B=d+(W+1)+D*U;c.push(lt,wt,B),c.push(wt,H,B),z+=6}a.addGroup(f,z,A),f+=z,d+=k}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new vC(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}};function ah(s){const t={};for(const e in s){t[e]={};for(const n in s[e]){const i=s[e][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[e][n]=null):t[e][n]=i.clone():Array.isArray(i)?t[e][n]=i.slice():t[e][n]=i}}return t}function ai(s){const t={};for(let e=0;e<s.length;e++){const n=ah(s[e]);for(const i in n)t[i]=n[i]}return t}function $3(s){const t=[];for(let e=0;e<s.length;e++)t.push(s[e].clone());return t}function bC(s){const t=s.getRenderTarget();return t===null?s.outputColorSpace:t.isXRRenderTarget===!0?t.texture.colorSpace:be.workingColorSpace}const SC={clone:ah,merge:ai};var W3=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,q3=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;let ir=class extends hg{static get type(){return"ShaderMaterial"}constructor(t){super(),this.isShaderMaterial=!0,this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=W3,this.fragmentShader=q3,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=ah(t.uniforms),this.uniformsGroups=$3(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?e.uniforms[i]={type:"t",value:o.toJSON(t).uuid}:o&&o.isColor?e.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?e.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?e.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?e.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?e.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?e.uniforms[i]={type:"m4",value:o.toArray()}:e.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}},MC=class extends cs{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new un,this.projectionMatrix=new un,this.projectionMatrixInverse=new un,this.coordinateSystem=qr}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){return super.getWorldDirection(t).negate()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}};const Io=new X,tT=new qt,eT=new qt;let ns=class extends MC{constructor(t=50,e=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=td*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(Nu*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return td*2*Math.atan(Math.tan(Nu*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(t,e,n){Io.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),e.set(Io.x,Io.y).multiplyScalar(-t/Io.z),Io.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(Io.x,Io.y).multiplyScalar(-t/Io.z)}getViewSize(t,e){return this.getViewBounds(t,tT,eT),e.subVectors(eT,tT)}setViewOffset(t,e,n,i,r,o){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(Nu*.5*this.fov)/this.zoom,n=2*e,i=this.aspect*n,r=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const c=o.fullWidth,l=o.fullHeight;r+=o.offsetX*i/c,e-=o.offsetY*n/l,i*=o.width/c,n*=o.height/l}const a=this.filmOffset;a!==0&&(r+=t*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,e,e-n,t,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}};const Zc=-90,Kc=1;let j3=class extends cs{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new ns(Zc,Kc,t,e);i.layers=this.layers,this.add(i);const r=new ns(Zc,Kc,t,e);r.layers=this.layers,this.add(r);const o=new ns(Zc,Kc,t,e);o.layers=this.layers,this.add(o);const a=new ns(Zc,Kc,t,e);a.layers=this.layers,this.add(a);const c=new ns(Zc,Kc,t,e);c.layers=this.layers,this.add(c);const l=new ns(Zc,Kc,t,e);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){const t=this.coordinateSystem,e=this.children.concat(),[n,i,r,o,a,c]=e;for(const l of e)this.remove(l);if(t===qr)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),c.up.set(0,1,0),c.lookAt(0,0,-1);else if(t===xm)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),c.up.set(0,-1,0),c.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+t);for(const l of e)this.add(l),l.updateMatrixWorld()}update(t,e){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==t.coordinateSystem&&(this.coordinateSystem=t.coordinateSystem,this.updateCoordinateSystem());const[r,o,a,c,l,h]=this.children,u=t.getRenderTarget(),d=t.getActiveCubeFace(),f=t.getActiveMipmapLevel(),p=t.xr.enabled;t.xr.enabled=!1;const _=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0,i),t.render(e,r),t.setRenderTarget(n,1,i),t.render(e,o),t.setRenderTarget(n,2,i),t.render(e,a),t.setRenderTarget(n,3,i),t.render(e,c),t.setRenderTarget(n,4,i),t.render(e,l),n.texture.generateMipmaps=_,t.setRenderTarget(n,5,i),t.render(e,h),t.setRenderTarget(u,d,f),t.xr.enabled=p,n.texture.needsPMREMUpdate=!0}},TC=class extends js{constructor(t,e,n,i,r,o,a,c,l,h){t=t!==void 0?t:[],e=e!==void 0?e:ih,super(t,e,n,i,r,o,a,c,l,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}},X3=class extends ca{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},i=[n,n,n,n,n,n];this.texture=new TC(i,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=e.generateMipmaps!==void 0?e.generateMipmaps:!1,this.texture.minFilter=e.minFilter!==void 0?e.minFilter:Ks}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.colorSpace=e.colorSpace,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new cb(5,5,5),r=new ir({name:"CubemapFromEquirect",uniforms:ah(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:fi,blending:Zr});r.uniforms.tEquirect.value=e;const o=new Is(i,r),a=e.minFilter;return e.minFilter===Ya&&(e.minFilter=Ks),new j3(1,10,this).update(t,o),e.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(t,e,n,i){const r=t.getRenderTarget();for(let o=0;o<6;o++)t.setRenderTarget(this,o),t.clear(e,n,i);t.setRenderTarget(r)}};const D_=new X,Y3=new X,Z3=new ue;let Or=class{constructor(t=new X(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=D_.subVectors(n,e).cross(Y3.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,e){const n=t.delta(D_),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):null;const r=-(t.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:e.copy(t.start).addScaledVector(n,r)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||Z3.getNormalMatrix(t),i=this.coplanarPoint(D_).applyMatrix4(t),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}};const Ea=new sb,Of=new X;let lb=class{constructor(t=new Or,e=new Or,n=new Or,i=new Or,r=new Or,o=new Or){this.planes=[t,e,n,i,r,o]}set(t,e,n,i,r,o){const a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(n),a[3].copy(i),a[4].copy(r),a[5].copy(o),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t,e=qr){const n=this.planes,i=t.elements,r=i[0],o=i[1],a=i[2],c=i[3],l=i[4],h=i[5],u=i[6],d=i[7],f=i[8],p=i[9],_=i[10],g=i[11],m=i[12],x=i[13],v=i[14],y=i[15];if(n[0].setComponents(c-r,d-l,g-f,y-m).normalize(),n[1].setComponents(c+r,d+l,g+f,y+m).normalize(),n[2].setComponents(c+o,d+h,g+p,y+x).normalize(),n[3].setComponents(c-o,d-h,g-p,y-x).normalize(),n[4].setComponents(c-a,d-u,g-_,y-v).normalize(),e===qr)n[5].setComponents(c+a,d+u,g+_,y+v).normalize();else if(e===xm)n[5].setComponents(a,u,_,v).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+e);return this}intersectsObject(t){if(t.boundingSphere!==void 0)t.boundingSphere===null&&t.computeBoundingSphere(),Ea.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const e=t.geometry;e.boundingSphere===null&&e.computeBoundingSphere(),Ea.copy(e.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(Ea)}intersectsSprite(t){return Ea.center.set(0,0,0),Ea.radius=.7071067811865476,Ea.applyMatrix4(t.matrixWorld),this.intersectsSphere(Ea)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let r=0;r<6;r++)if(e[r].distanceToPoint(n)<i)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(Of.x=i.normal.x>0?t.max.x:t.min.x,Of.y=i.normal.y>0?t.max.y:t.min.y,Of.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(Of)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}};function wC(){let s=null,t=!1,e=null,n=null;function i(r,o){e(r,o),n=s.requestAnimationFrame(i)}return{start:function(){t!==!0&&e!==null&&(n=s.requestAnimationFrame(i),t=!0)},stop:function(){s.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(r){e=r},setContext:function(r){s=r}}}function K3(s){const t=new WeakMap;function e(a,c){const l=a.array,h=a.usage,u=l.byteLength,d=s.createBuffer();s.bindBuffer(c,d),s.bufferData(c,l,h),a.onUploadCallback();let f;if(l instanceof Float32Array)f=s.FLOAT;else if(l instanceof Uint16Array)a.isFloat16BufferAttribute?f=s.HALF_FLOAT:f=s.UNSIGNED_SHORT;else if(l instanceof Int16Array)f=s.SHORT;else if(l instanceof Uint32Array)f=s.UNSIGNED_INT;else if(l instanceof Int32Array)f=s.INT;else if(l instanceof Int8Array)f=s.BYTE;else if(l instanceof Uint8Array)f=s.UNSIGNED_BYTE;else if(l instanceof Uint8ClampedArray)f=s.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+l);return{buffer:d,type:f,bytesPerElement:l.BYTES_PER_ELEMENT,version:a.version,size:u}}function n(a,c,l){const h=c.array,u=c.updateRanges;if(s.bindBuffer(l,a),u.length===0)s.bufferSubData(l,0,h);else{u.sort((f,p)=>f.start-p.start);let d=0;for(let f=1;f<u.length;f++){const p=u[d],_=u[f];_.start<=p.start+p.count+1?p.count=Math.max(p.count,_.start+_.count-p.start):(++d,u[d]=_)}u.length=d+1;for(let f=0,p=u.length;f<p;f++){const _=u[f];s.bufferSubData(l,_.start*h.BYTES_PER_ELEMENT,h,_.start,_.count)}c.clearUpdateRanges()}c.onUploadCallback()}function i(a){return a.isInterleavedBufferAttribute&&(a=a.data),t.get(a)}function r(a){a.isInterleavedBufferAttribute&&(a=a.data);const c=t.get(a);c&&(s.deleteBuffer(c.buffer),t.delete(a))}function o(a,c){if(a.isInterleavedBufferAttribute&&(a=a.data),a.isGLBufferAttribute){const h=t.get(a);(!h||h.version<a.version)&&t.set(a,{buffer:a.buffer,type:a.type,bytesPerElement:a.elementSize,version:a.version});return}const l=t.get(a);if(l===void 0)t.set(a,e(a,c));else if(l.version<a.version){if(l.size!==a.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(l.buffer,a,c),l.version=a.version}}return{get:i,remove:r,update:o}}class ug extends Sc{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const r=t/2,o=e/2,a=Math.floor(n),c=Math.floor(i),l=a+1,h=c+1,u=t/a,d=e/c,f=[],p=[],_=[],g=[];for(let m=0;m<h;m++){const x=m*d-o;for(let v=0;v<l;v++){const y=v*u-r;p.push(y,-x,0),_.push(0,0,1),g.push(v/a),g.push(1-m/c)}}for(let m=0;m<c;m++)for(let x=0;x<a;x++){const v=x+l*m,y=x+l*(m+1),b=x+1+l*(m+1),S=x+1+l*m;f.push(v,y,S),f.push(y,b,S)}this.setIndex(f),this.setAttribute("position",new os(p,3)),this.setAttribute("normal",new os(_,3)),this.setAttribute("uv",new os(g,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new ug(t.width,t.height,t.widthSegments,t.heightSegments)}}var Q3=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,J3=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,tk=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,ek=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,nk=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,ik=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,sk=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,rk=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,ok=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,ak=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,ck=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,lk=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,hk=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,uk=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,dk=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,fk=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,pk=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,mk=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,gk=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,_k=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,yk=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,xk=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,vk=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,bk=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,Sk=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Mk=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,Tk=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,wk=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,Ak=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Ek=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Ck="gl_FragColor = linearToOutputTexel( gl_FragColor );",Rk=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,Nk=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Pk=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Dk=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Ik=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,Fk=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,Ok=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,Lk=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,Bk=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,Uk=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,kk=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,zk=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,Vk=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,Gk=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,Hk=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,$k=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,Wk=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,qk=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,jk=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,Xk=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,Yk=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,Zk=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,Kk=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,Qk=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,Jk=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,tz=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,ez=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,nz=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,iz=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,sz=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,rz=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,oz=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,az=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,cz=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,lz=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,hz=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,uz=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,dz=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,fz=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,pz=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,mz=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,gz=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,_z=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,yz=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,xz=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,vz=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,bz=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,Sz=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,Mz=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,Tz=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,wz=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,Az=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,Ez=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Cz=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Rz=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Nz=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Pz=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Dz=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Iz=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,Fz=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Oz=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,Lz=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,Bz=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,Uz=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,kz=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,zz=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,Vz=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,Gz=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,Hz=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,$z=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,Wz=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,qz=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
		
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
		
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		
		#else
		
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,jz=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,Xz=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,Yz=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,Zz=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const Kz=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,Qz=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Jz=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,tV=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,eV=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,nV=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,iV=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,sV=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,rV=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,oV=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,aV=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,cV=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,lV=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,hV=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,uV=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,dV=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,fV=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,pV=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,mV=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,gV=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,_V=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,yV=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,xV=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,vV=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,bV=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,SV=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,MV=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,TV=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,wV=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,AV=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,EV=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,CV=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,RV=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,NV=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,ce={alphahash_fragment:Q3,alphahash_pars_fragment:J3,alphamap_fragment:tk,alphamap_pars_fragment:ek,alphatest_fragment:nk,alphatest_pars_fragment:ik,aomap_fragment:sk,aomap_pars_fragment:rk,batching_pars_vertex:ok,batching_vertex:ak,begin_vertex:ck,beginnormal_vertex:lk,bsdfs:hk,iridescence_fragment:uk,bumpmap_pars_fragment:dk,clipping_planes_fragment:fk,clipping_planes_pars_fragment:pk,clipping_planes_pars_vertex:mk,clipping_planes_vertex:gk,color_fragment:_k,color_pars_fragment:yk,color_pars_vertex:xk,color_vertex:vk,common:bk,cube_uv_reflection_fragment:Sk,defaultnormal_vertex:Mk,displacementmap_pars_vertex:Tk,displacementmap_vertex:wk,emissivemap_fragment:Ak,emissivemap_pars_fragment:Ek,colorspace_fragment:Ck,colorspace_pars_fragment:Rk,envmap_fragment:Nk,envmap_common_pars_fragment:Pk,envmap_pars_fragment:Dk,envmap_pars_vertex:Ik,envmap_physical_pars_fragment:$k,envmap_vertex:Fk,fog_vertex:Ok,fog_pars_vertex:Lk,fog_fragment:Bk,fog_pars_fragment:Uk,gradientmap_pars_fragment:kk,lightmap_pars_fragment:zk,lights_lambert_fragment:Vk,lights_lambert_pars_fragment:Gk,lights_pars_begin:Hk,lights_toon_fragment:Wk,lights_toon_pars_fragment:qk,lights_phong_fragment:jk,lights_phong_pars_fragment:Xk,lights_physical_fragment:Yk,lights_physical_pars_fragment:Zk,lights_fragment_begin:Kk,lights_fragment_maps:Qk,lights_fragment_end:Jk,logdepthbuf_fragment:tz,logdepthbuf_pars_fragment:ez,logdepthbuf_pars_vertex:nz,logdepthbuf_vertex:iz,map_fragment:sz,map_pars_fragment:rz,map_particle_fragment:oz,map_particle_pars_fragment:az,metalnessmap_fragment:cz,metalnessmap_pars_fragment:lz,morphinstance_vertex:hz,morphcolor_vertex:uz,morphnormal_vertex:dz,morphtarget_pars_vertex:fz,morphtarget_vertex:pz,normal_fragment_begin:mz,normal_fragment_maps:gz,normal_pars_fragment:_z,normal_pars_vertex:yz,normal_vertex:xz,normalmap_pars_fragment:vz,clearcoat_normal_fragment_begin:bz,clearcoat_normal_fragment_maps:Sz,clearcoat_pars_fragment:Mz,iridescence_pars_fragment:Tz,opaque_fragment:wz,packing:Az,premultiplied_alpha_fragment:Ez,project_vertex:Cz,dithering_fragment:Rz,dithering_pars_fragment:Nz,roughnessmap_fragment:Pz,roughnessmap_pars_fragment:Dz,shadowmap_pars_fragment:Iz,shadowmap_pars_vertex:Fz,shadowmap_vertex:Oz,shadowmask_pars_fragment:Lz,skinbase_vertex:Bz,skinning_pars_vertex:Uz,skinning_vertex:kz,skinnormal_vertex:zz,specularmap_fragment:Vz,specularmap_pars_fragment:Gz,tonemapping_fragment:Hz,tonemapping_pars_fragment:$z,transmission_fragment:Wz,transmission_pars_fragment:qz,uv_pars_fragment:jz,uv_pars_vertex:Xz,uv_vertex:Yz,worldpos_vertex:Zz,background_vert:Kz,background_frag:Qz,backgroundCube_vert:Jz,backgroundCube_frag:tV,cube_vert:eV,cube_frag:nV,depth_vert:iV,depth_frag:sV,distanceRGBA_vert:rV,distanceRGBA_frag:oV,equirect_vert:aV,equirect_frag:cV,linedashed_vert:lV,linedashed_frag:hV,meshbasic_vert:uV,meshbasic_frag:dV,meshlambert_vert:fV,meshlambert_frag:pV,meshmatcap_vert:mV,meshmatcap_frag:gV,meshnormal_vert:_V,meshnormal_frag:yV,meshphong_vert:xV,meshphong_frag:vV,meshphysical_vert:bV,meshphysical_frag:SV,meshtoon_vert:MV,meshtoon_frag:TV,points_vert:wV,points_frag:AV,shadow_vert:EV,shadow_frag:CV,sprite_vert:RV,sprite_frag:NV},Mt={common:{diffuse:{value:new Ee(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new ue},alphaMap:{value:null},alphaMapTransform:{value:new ue},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new ue}},envmap:{envMap:{value:null},envMapRotation:{value:new ue},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new ue}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new ue}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new ue},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new ue},normalScale:{value:new qt(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new ue},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new ue}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new ue}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new ue}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ee(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ee(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new ue},alphaTest:{value:0},uvTransform:{value:new ue}},sprite:{diffuse:{value:new Ee(16777215)},opacity:{value:1},center:{value:new qt(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new ue},alphaMap:{value:null},alphaMapTransform:{value:new ue},alphaTest:{value:0}}},Zs={basic:{uniforms:ai([Mt.common,Mt.specularmap,Mt.envmap,Mt.aomap,Mt.lightmap,Mt.fog]),vertexShader:ce.meshbasic_vert,fragmentShader:ce.meshbasic_frag},lambert:{uniforms:ai([Mt.common,Mt.specularmap,Mt.envmap,Mt.aomap,Mt.lightmap,Mt.emissivemap,Mt.bumpmap,Mt.normalmap,Mt.displacementmap,Mt.fog,Mt.lights,{emissive:{value:new Ee(0)}}]),vertexShader:ce.meshlambert_vert,fragmentShader:ce.meshlambert_frag},phong:{uniforms:ai([Mt.common,Mt.specularmap,Mt.envmap,Mt.aomap,Mt.lightmap,Mt.emissivemap,Mt.bumpmap,Mt.normalmap,Mt.displacementmap,Mt.fog,Mt.lights,{emissive:{value:new Ee(0)},specular:{value:new Ee(1118481)},shininess:{value:30}}]),vertexShader:ce.meshphong_vert,fragmentShader:ce.meshphong_frag},standard:{uniforms:ai([Mt.common,Mt.envmap,Mt.aomap,Mt.lightmap,Mt.emissivemap,Mt.bumpmap,Mt.normalmap,Mt.displacementmap,Mt.roughnessmap,Mt.metalnessmap,Mt.fog,Mt.lights,{emissive:{value:new Ee(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ce.meshphysical_vert,fragmentShader:ce.meshphysical_frag},toon:{uniforms:ai([Mt.common,Mt.aomap,Mt.lightmap,Mt.emissivemap,Mt.bumpmap,Mt.normalmap,Mt.displacementmap,Mt.gradientmap,Mt.fog,Mt.lights,{emissive:{value:new Ee(0)}}]),vertexShader:ce.meshtoon_vert,fragmentShader:ce.meshtoon_frag},matcap:{uniforms:ai([Mt.common,Mt.bumpmap,Mt.normalmap,Mt.displacementmap,Mt.fog,{matcap:{value:null}}]),vertexShader:ce.meshmatcap_vert,fragmentShader:ce.meshmatcap_frag},points:{uniforms:ai([Mt.points,Mt.fog]),vertexShader:ce.points_vert,fragmentShader:ce.points_frag},dashed:{uniforms:ai([Mt.common,Mt.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ce.linedashed_vert,fragmentShader:ce.linedashed_frag},depth:{uniforms:ai([Mt.common,Mt.displacementmap]),vertexShader:ce.depth_vert,fragmentShader:ce.depth_frag},normal:{uniforms:ai([Mt.common,Mt.bumpmap,Mt.normalmap,Mt.displacementmap,{opacity:{value:1}}]),vertexShader:ce.meshnormal_vert,fragmentShader:ce.meshnormal_frag},sprite:{uniforms:ai([Mt.sprite,Mt.fog]),vertexShader:ce.sprite_vert,fragmentShader:ce.sprite_frag},background:{uniforms:{uvTransform:{value:new ue},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:ce.background_vert,fragmentShader:ce.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new ue}},vertexShader:ce.backgroundCube_vert,fragmentShader:ce.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:ce.cube_vert,fragmentShader:ce.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ce.equirect_vert,fragmentShader:ce.equirect_frag},distanceRGBA:{uniforms:ai([Mt.common,Mt.displacementmap,{referencePosition:{value:new X},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ce.distanceRGBA_vert,fragmentShader:ce.distanceRGBA_frag},shadow:{uniforms:ai([Mt.lights,Mt.fog,{color:{value:new Ee(0)},opacity:{value:1}}]),vertexShader:ce.shadow_vert,fragmentShader:ce.shadow_frag}};Zs.physical={uniforms:ai([Zs.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new ue},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new ue},clearcoatNormalScale:{value:new qt(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new ue},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new ue},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new ue},sheen:{value:0},sheenColor:{value:new Ee(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new ue},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new ue},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new ue},transmissionSamplerSize:{value:new qt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new ue},attenuationDistance:{value:0},attenuationColor:{value:new Ee(0)},specularColor:{value:new Ee(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new ue},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new ue},anisotropyVector:{value:new qt},anisotropyMap:{value:null},anisotropyMapTransform:{value:new ue}}]),vertexShader:ce.meshphysical_vert,fragmentShader:ce.meshphysical_frag};const Lf={r:0,b:0,g:0},Ca=new hc,PV=new un;function DV(s,t,e,n,i,r,o){const a=new Ee(0);let c=r===!0?0:1,l,h,u=null,d=0,f=null;function p(x){let v=x.isScene===!0?x.background:null;return v&&v.isTexture&&(v=(x.backgroundBlurriness>0?e:t).get(v)),v}function _(x){let v=!1;const y=p(x);y===null?m(a,c):y&&y.isColor&&(m(y,1),v=!0);const b=s.xr.getEnvironmentBlendMode();b==="additive"?n.buffers.color.setClear(0,0,0,1,o):b==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,o),(s.autoClear||v)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil))}function g(x,v){const y=p(v);y&&(y.isCubeTexture||y.mapping===cg)?(h===void 0&&(h=new Is(new cb(1,1,1),new ir({name:"BackgroundCubeMaterial",uniforms:ah(Zs.backgroundCube.uniforms),vertexShader:Zs.backgroundCube.vertexShader,fragmentShader:Zs.backgroundCube.fragmentShader,side:fi,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(b,S,M){this.matrixWorld.copyPosition(M.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(h)),Ca.copy(v.backgroundRotation),Ca.x*=-1,Ca.y*=-1,Ca.z*=-1,y.isCubeTexture&&y.isRenderTargetTexture===!1&&(Ca.y*=-1,Ca.z*=-1),h.material.uniforms.envMap.value=y,h.material.uniforms.flipEnvMap.value=y.isCubeTexture&&y.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=v.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=v.backgroundIntensity,h.material.uniforms.backgroundRotation.value.setFromMatrix4(PV.makeRotationFromEuler(Ca)),h.material.toneMapped=be.getTransfer(y.colorSpace)!==Oe,(u!==y||d!==y.version||f!==s.toneMapping)&&(h.material.needsUpdate=!0,u=y,d=y.version,f=s.toneMapping),h.layers.enableAll(),x.unshift(h,h.geometry,h.material,0,0,null)):y&&y.isTexture&&(l===void 0&&(l=new Is(new ug(2,2),new ir({name:"BackgroundMaterial",uniforms:ah(Zs.background.uniforms),vertexShader:Zs.background.vertexShader,fragmentShader:Zs.background.fragmentShader,side:aa,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(l)),l.material.uniforms.t2D.value=y,l.material.uniforms.backgroundIntensity.value=v.backgroundIntensity,l.material.toneMapped=be.getTransfer(y.colorSpace)!==Oe,y.matrixAutoUpdate===!0&&y.updateMatrix(),l.material.uniforms.uvTransform.value.copy(y.matrix),(u!==y||d!==y.version||f!==s.toneMapping)&&(l.material.needsUpdate=!0,u=y,d=y.version,f=s.toneMapping),l.layers.enableAll(),x.unshift(l,l.geometry,l.material,0,0,null))}function m(x,v){x.getRGB(Lf,bC(s)),n.buffers.color.setClear(Lf.r,Lf.g,Lf.b,v,o)}return{getClearColor:function(){return a},setClearColor:function(x,v=1){a.set(x),c=v,m(a,c)},getClearAlpha:function(){return c},setClearAlpha:function(x){c=x,m(a,c)},render:_,addToRenderList:g}}function IV(s,t){const e=s.getParameter(s.MAX_VERTEX_ATTRIBS),n={},i=d(null);let r=i,o=!1;function a(w,E,N,I,P){let D=!1;const O=u(I,N,E);r!==O&&(r=O,l(r.object)),D=f(w,I,N,P),D&&p(w,I,N,P),P!==null&&t.update(P,s.ELEMENT_ARRAY_BUFFER),(D||o)&&(o=!1,y(w,E,N,I),P!==null&&s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,t.get(P).buffer))}function c(){return s.createVertexArray()}function l(w){return s.bindVertexArray(w)}function h(w){return s.deleteVertexArray(w)}function u(w,E,N){const I=N.wireframe===!0;let P=n[w.id];P===void 0&&(P={},n[w.id]=P);let D=P[E.id];D===void 0&&(D={},P[E.id]=D);let O=D[I];return O===void 0&&(O=d(c()),D[I]=O),O}function d(w){const E=[],N=[],I=[];for(let P=0;P<e;P++)E[P]=0,N[P]=0,I[P]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:E,enabledAttributes:N,attributeDivisors:I,object:w,attributes:{},index:null}}function f(w,E,N,I){const P=r.attributes,D=E.attributes;let O=0;const k=N.getAttributes();for(const z in k)if(k[z].location>=0){const U=P[z];let W=D[z];if(W===void 0&&(z==="instanceMatrix"&&w.instanceMatrix&&(W=w.instanceMatrix),z==="instanceColor"&&w.instanceColor&&(W=w.instanceColor)),U===void 0||U.attribute!==W||W&&U.data!==W.data)return!0;O++}return r.attributesNum!==O||r.index!==I}function p(w,E,N,I){const P={},D=E.attributes;let O=0;const k=N.getAttributes();for(const z in k)if(k[z].location>=0){let U=D[z];U===void 0&&(z==="instanceMatrix"&&w.instanceMatrix&&(U=w.instanceMatrix),z==="instanceColor"&&w.instanceColor&&(U=w.instanceColor));const W={};W.attribute=U,U&&U.data&&(W.data=U.data),P[z]=W,O++}r.attributes=P,r.attributesNum=O,r.index=I}function _(){const w=r.newAttributes;for(let E=0,N=w.length;E<N;E++)w[E]=0}function g(w){m(w,0)}function m(w,E){const N=r.newAttributes,I=r.enabledAttributes,P=r.attributeDivisors;N[w]=1,I[w]===0&&(s.enableVertexAttribArray(w),I[w]=1),P[w]!==E&&(s.vertexAttribDivisor(w,E),P[w]=E)}function x(){const w=r.newAttributes,E=r.enabledAttributes;for(let N=0,I=E.length;N<I;N++)E[N]!==w[N]&&(s.disableVertexAttribArray(N),E[N]=0)}function v(w,E,N,I,P,D,O){O===!0?s.vertexAttribIPointer(w,E,N,P,D):s.vertexAttribPointer(w,E,N,I,P,D)}function y(w,E,N,I){_();const P=I.attributes,D=N.getAttributes(),O=E.defaultAttributeValues;for(const k in D){const z=D[k];if(z.location>=0){let Y=P[k];if(Y===void 0&&(k==="instanceMatrix"&&w.instanceMatrix&&(Y=w.instanceMatrix),k==="instanceColor"&&w.instanceColor&&(Y=w.instanceColor)),Y!==void 0){const U=Y.normalized,W=Y.itemSize,lt=t.get(Y);if(lt===void 0)continue;const wt=lt.buffer,H=lt.type,B=lt.bytesPerElement,nt=H===s.INT||H===s.UNSIGNED_INT||Y.gpuType===Kv;if(Y.isInterleavedBufferAttribute){const at=Y.data,et=at.stride,Nt=Y.offset;if(at.isInstancedInterleavedBuffer){for(let Ft=0;Ft<z.locationSize;Ft++)m(z.location+Ft,at.meshPerAttribute);w.isInstancedMesh!==!0&&I._maxInstanceCount===void 0&&(I._maxInstanceCount=at.meshPerAttribute*at.count)}else for(let Ft=0;Ft<z.locationSize;Ft++)g(z.location+Ft);s.bindBuffer(s.ARRAY_BUFFER,wt);for(let Ft=0;Ft<z.locationSize;Ft++)v(z.location+Ft,W/z.locationSize,H,U,et*B,(Nt+W/z.locationSize*Ft)*B,nt)}else{if(Y.isInstancedBufferAttribute){for(let at=0;at<z.locationSize;at++)m(z.location+at,Y.meshPerAttribute);w.isInstancedMesh!==!0&&I._maxInstanceCount===void 0&&(I._maxInstanceCount=Y.meshPerAttribute*Y.count)}else for(let at=0;at<z.locationSize;at++)g(z.location+at);s.bindBuffer(s.ARRAY_BUFFER,wt);for(let at=0;at<z.locationSize;at++)v(z.location+at,W/z.locationSize,H,U,W*B,W/z.locationSize*at*B,nt)}}else if(O!==void 0){const U=O[k];if(U!==void 0)switch(U.length){case 2:s.vertexAttrib2fv(z.location,U);break;case 3:s.vertexAttrib3fv(z.location,U);break;case 4:s.vertexAttrib4fv(z.location,U);break;default:s.vertexAttrib1fv(z.location,U)}}}}x()}function b(){T();for(const w in n){const E=n[w];for(const N in E){const I=E[N];for(const P in I)h(I[P].object),delete I[P];delete E[N]}delete n[w]}}function S(w){if(n[w.id]===void 0)return;const E=n[w.id];for(const N in E){const I=E[N];for(const P in I)h(I[P].object),delete I[P];delete E[N]}delete n[w.id]}function M(w){for(const E in n){const N=n[E];if(N[w.id]===void 0)continue;const I=N[w.id];for(const P in I)h(I[P].object),delete I[P];delete N[w.id]}}function T(){A(),o=!0,r!==i&&(r=i,l(r.object))}function A(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:a,reset:T,resetDefaultState:A,dispose:b,releaseStatesOfGeometry:S,releaseStatesOfProgram:M,initAttributes:_,enableAttribute:g,disableUnusedAttributes:x}}function FV(s,t,e){let n;function i(l){n=l}function r(l,h){s.drawArrays(n,l,h),e.update(h,n,1)}function o(l,h,u){u!==0&&(s.drawArraysInstanced(n,l,h,u),e.update(h,n,u))}function a(l,h,u){if(u===0)return;t.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,l,0,h,0,u);let f=0;for(let p=0;p<u;p++)f+=h[p];e.update(f,n,1)}function c(l,h,u,d){if(u===0)return;const f=t.get("WEBGL_multi_draw");if(f===null)for(let p=0;p<l.length;p++)o(l[p],h[p],d[p]);else{f.multiDrawArraysInstancedWEBGL(n,l,0,h,0,d,0,u);let p=0;for(let _=0;_<u;_++)p+=h[_]*d[_];e.update(p,n,1)}}this.setMode=i,this.render=r,this.renderInstances=o,this.renderMultiDraw=a,this.renderMultiDrawInstances=c}function OV(s,t,e,n){let i;function r(){if(i!==void 0)return i;if(t.has("EXT_texture_filter_anisotropic")===!0){const M=t.get("EXT_texture_filter_anisotropic");i=s.getParameter(M.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function o(M){return!(M!==Ds&&n.convert(M)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_FORMAT))}function a(M){const T=M===wh&&(t.has("EXT_color_buffer_half_float")||t.has("EXT_color_buffer_float"));return!(M!==ao&&n.convert(M)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_TYPE)&&M!==Wr&&!T)}function c(M){if(M==="highp"){if(s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.HIGH_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.HIGH_FLOAT).precision>0)return"highp";M="mediump"}return M==="mediump"&&s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.MEDIUM_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let l=e.precision!==void 0?e.precision:"highp";const h=c(l);h!==l&&(console.warn("THREE.WebGLRenderer:",l,"not supported, using",h,"instead."),l=h);const u=e.logarithmicDepthBuffer===!0,d=e.reverseDepthBuffer===!0&&t.has("EXT_clip_control"),f=s.getParameter(s.MAX_TEXTURE_IMAGE_UNITS),p=s.getParameter(s.MAX_VERTEX_TEXTURE_IMAGE_UNITS),_=s.getParameter(s.MAX_TEXTURE_SIZE),g=s.getParameter(s.MAX_CUBE_MAP_TEXTURE_SIZE),m=s.getParameter(s.MAX_VERTEX_ATTRIBS),x=s.getParameter(s.MAX_VERTEX_UNIFORM_VECTORS),v=s.getParameter(s.MAX_VARYING_VECTORS),y=s.getParameter(s.MAX_FRAGMENT_UNIFORM_VECTORS),b=p>0,S=s.getParameter(s.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:r,getMaxPrecision:c,textureFormatReadable:o,textureTypeReadable:a,precision:l,logarithmicDepthBuffer:u,reverseDepthBuffer:d,maxTextures:f,maxVertexTextures:p,maxTextureSize:_,maxCubemapSize:g,maxAttributes:m,maxVertexUniforms:x,maxVaryings:v,maxFragmentUniforms:y,vertexTextures:b,maxSamples:S}}function LV(s){const t=this;let e=null,n=0,i=!1,r=!1;const o=new Or,a=new ue,c={value:null,needsUpdate:!1};this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(u,d){const f=u.length!==0||d||n!==0||i;return i=d,n=u.length,f},this.beginShadows=function(){r=!0,h(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(u,d){e=h(u,d,0)},this.setState=function(u,d,f){const p=u.clippingPlanes,_=u.clipIntersection,g=u.clipShadows,m=s.get(u);if(!i||p===null||p.length===0||r&&!g)r?h(null):l();else{const x=r?0:n,v=x*4;let y=m.clippingState||null;c.value=y,y=h(p,d,v,f);for(let b=0;b!==v;++b)y[b]=e[b];m.clippingState=y,this.numIntersection=_?this.numPlanes:0,this.numPlanes+=x}};function l(){c.value!==e&&(c.value=e,c.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function h(u,d,f,p){const _=u!==null?u.length:0;let g=null;if(_!==0){if(g=c.value,p!==!0||g===null){const m=f+_*4,x=d.matrixWorldInverse;a.getNormalMatrix(x),(g===null||g.length<m)&&(g=new Float32Array(m));for(let v=0,y=f;v!==_;++v,y+=4)o.copy(u[v]).applyMatrix4(x,a),o.normal.toArray(g,y),g[y+3]=o.constant}c.value=g,c.needsUpdate=!0}return t.numPlanes=_,t.numIntersection=0,g}}function BV(s){let t=new WeakMap;function e(o,a){return a===Ny?o.mapping=ih:a===Py&&(o.mapping=sh),o}function n(o){if(o&&o.isTexture){const a=o.mapping;if(a===Ny||a===Py)if(t.has(o)){const c=t.get(o).texture;return e(c,o.mapping)}else{const c=o.image;if(c&&c.height>0){const l=new X3(c.height);return l.fromEquirectangularTexture(s,o),t.set(o,l),o.addEventListener("dispose",i),e(l.texture,o.mapping)}else return null}}return o}function i(o){const a=o.target;a.removeEventListener("dispose",i);const c=t.get(a);c!==void 0&&(t.delete(a),c.dispose())}function r(){t=new WeakMap}return{get:n,dispose:r}}let hb=class extends MC{constructor(t=-1,e=1,n=1,i=-1,r=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=r,this.far=o,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,r,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-t,o=n+t,a=i+e,c=i-e;if(this.view!==null&&this.view.enabled){const l=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=l*this.view.offsetX,o=r+l*this.view.width,a-=h*this.view.offsetY,c=a-h*this.view.height}this.projectionMatrix.makeOrthographic(r,o,a,c,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}};const Tl=4,nT=[.125,.215,.35,.446,.526,.582],Ga=20,I_=new hb,iT=new Ee;let F_=null,O_=0,L_=0,B_=!1;const Oa=(1+Math.sqrt(5))/2,Qc=1/Oa,sT=[new X(-Oa,Qc,0),new X(Oa,Qc,0),new X(-Qc,0,Oa),new X(Qc,0,Oa),new X(0,Oa,-Qc),new X(0,Oa,Qc),new X(-1,1,-1),new X(1,1,-1),new X(-1,1,1),new X(1,1,1)];let rT=class{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,i=100){F_=this._renderer.getRenderTarget(),O_=this._renderer.getActiveCubeFace(),L_=this._renderer.getActiveMipmapLevel(),B_=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(t,n,i,r),e>0&&this._blur(r,0,0,e),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=cT(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=aT(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(F_,O_,L_),this._renderer.xr.enabled=B_,t.scissorTest=!1,Bf(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===ih||t.mapping===sh?this._setSize(t.image.length===0?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),F_=this._renderer.getRenderTarget(),O_=this._renderer.getActiveCubeFace(),L_=this._renderer.getActiveMipmapLevel(),B_=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:Ks,minFilter:Ks,generateMipmaps:!1,type:wh,format:Ds,colorSpace:Ah,depthBuffer:!1},i=oT(t,e,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=oT(t,e,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=UV(r)),this._blurMaterial=kV(r,t,e)}return i}_compileMaterial(t){const e=new Is(this._lodPlanes[0],t);this._renderer.compile(e,I_)}_sceneToCubeUV(t,e,n,i){const a=new ns(90,1,e,n),c=[1,-1,1,1,1,1],l=[1,1,1,-1,-1,-1],h=this._renderer,u=h.autoClear,d=h.toneMapping;h.getClearColor(iT),h.toneMapping=Jo,h.autoClear=!1;const f=new ab({name:"PMREM.Background",side:fi,depthWrite:!1,depthTest:!1}),p=new Is(new cb,f);let _=!1;const g=t.background;g?g.isColor&&(f.color.copy(g),t.background=null,_=!0):(f.color.copy(iT),_=!0);for(let m=0;m<6;m++){const x=m%3;x===0?(a.up.set(0,c[m],0),a.lookAt(l[m],0,0)):x===1?(a.up.set(0,0,c[m]),a.lookAt(0,l[m],0)):(a.up.set(0,c[m],0),a.lookAt(0,0,l[m]));const v=this._cubeSize;Bf(i,x*v,m>2?v:0,v,v),h.setRenderTarget(i),_&&h.render(p,a),h.render(t,a)}p.geometry.dispose(),p.material.dispose(),h.toneMapping=d,h.autoClear=u,t.background=g}_textureToCubeUV(t,e){const n=this._renderer,i=t.mapping===ih||t.mapping===sh;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=cT()),this._cubemapMaterial.uniforms.flipEnvMap.value=t.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=aT());const r=i?this._cubemapMaterial:this._equirectMaterial,o=new Is(this._lodPlanes[0],r),a=r.uniforms;a.envMap.value=t;const c=this._cubeSize;Bf(e,0,0,3*c,2*c),n.setRenderTarget(e),n.render(o,I_)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;const i=this._lodPlanes.length;for(let r=1;r<i;r++){const o=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),a=sT[(i-r-1)%sT.length];this._blur(t,r-1,r,o,a)}e.autoClear=n}_blur(t,e,n,i,r){const o=this._pingPongRenderTarget;this._halfBlur(t,o,e,n,i,"latitudinal",r),this._halfBlur(o,t,n,n,i,"longitudinal",r)}_halfBlur(t,e,n,i,r,o,a){const c=this._renderer,l=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,u=new Is(this._lodPlanes[i],l),d=l.uniforms,f=this._sizeLods[n]-1,p=isFinite(r)?Math.PI/(2*f):2*Math.PI/(2*Ga-1),_=r/p,g=isFinite(r)?1+Math.floor(h*_):Ga;g>Ga&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${Ga}`);const m=[];let x=0;for(let M=0;M<Ga;++M){const T=M/_,A=Math.exp(-T*T/2);m.push(A),M===0?x+=A:M<g&&(x+=2*A)}for(let M=0;M<m.length;M++)m[M]=m[M]/x;d.envMap.value=t.texture,d.samples.value=g,d.weights.value=m,d.latitudinal.value=o==="latitudinal",a&&(d.poleAxis.value=a);const{_lodMax:v}=this;d.dTheta.value=p,d.mipInt.value=v-n;const y=this._sizeLods[i],b=3*y*(i>v-Tl?i-v+Tl:0),S=4*(this._cubeSize-y);Bf(e,b,S,3*y,2*y),c.setRenderTarget(e),c.render(u,I_)}};function UV(s){const t=[],e=[],n=[];let i=s;const r=s-Tl+1+nT.length;for(let o=0;o<r;o++){const a=Math.pow(2,i);e.push(a);let c=1/a;o>s-Tl?c=nT[o-s+Tl-1]:o===0&&(c=0),n.push(c);const l=1/(a-2),h=-l,u=1+l,d=[h,h,u,h,u,u,h,h,u,u,h,u],f=6,p=6,_=3,g=2,m=1,x=new Float32Array(_*p*f),v=new Float32Array(g*p*f),y=new Float32Array(m*p*f);for(let S=0;S<f;S++){const M=S%3*2/3-1,T=S>2?0:-1,A=[M,T,0,M+2/3,T,0,M+2/3,T+1,0,M,T,0,M+2/3,T+1,0,M,T+1,0];x.set(A,_*p*S),v.set(d,g*p*S);const w=[S,S,S,S,S,S];y.set(w,m*p*S)}const b=new Sc;b.setAttribute("position",new er(x,_)),b.setAttribute("uv",new er(v,g)),b.setAttribute("faceIndex",new er(y,m)),t.push(b),i>Tl&&i--}return{lodPlanes:t,sizeLods:e,sigmas:n}}function oT(s,t,e){const n=new ca(s,t,e);return n.texture.mapping=cg,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Bf(s,t,e,n,i){s.viewport.set(t,e,n,i),s.scissor.set(t,e,n,i)}function kV(s,t,e){const n=new Float32Array(Ga),i=new X(0,1,0);return new ir({name:"SphericalGaussianBlur",defines:{n:Ga,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/e,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:ub(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Zr,depthTest:!1,depthWrite:!1})}function aT(){return new ir({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:ub(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Zr,depthTest:!1,depthWrite:!1})}function cT(){return new ir({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:ub(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Zr,depthTest:!1,depthWrite:!1})}function ub(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function zV(s){let t=new WeakMap,e=null;function n(a){if(a&&a.isTexture){const c=a.mapping,l=c===Ny||c===Py,h=c===ih||c===sh;if(l||h){let u=t.get(a);const d=u!==void 0?u.texture.pmremVersion:0;if(a.isRenderTargetTexture&&a.pmremVersion!==d)return e===null&&(e=new rT(s)),u=l?e.fromEquirectangular(a,u):e.fromCubemap(a,u),u.texture.pmremVersion=a.pmremVersion,t.set(a,u),u.texture;if(u!==void 0)return u.texture;{const f=a.image;return l&&f&&f.height>0||h&&f&&i(f)?(e===null&&(e=new rT(s)),u=l?e.fromEquirectangular(a):e.fromCubemap(a),u.texture.pmremVersion=a.pmremVersion,t.set(a,u),a.addEventListener("dispose",r),u.texture):null}}}return a}function i(a){let c=0;const l=6;for(let h=0;h<l;h++)a[h]!==void 0&&c++;return c===l}function r(a){const c=a.target;c.removeEventListener("dispose",r);const l=t.get(c);l!==void 0&&(t.delete(c),l.dispose())}function o(){t=new WeakMap,e!==null&&(e.dispose(),e=null)}return{get:n,dispose:o}}function VV(s){const t={};function e(n){if(t[n]!==void 0)return t[n];let i;switch(n){case"WEBGL_depth_texture":i=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=s.getExtension(n)}return t[n]=i,i}return{has:function(n){return e(n)!==null},init:function(){e("EXT_color_buffer_float"),e("WEBGL_clip_cull_distance"),e("OES_texture_float_linear"),e("EXT_color_buffer_half_float"),e("WEBGL_multisampled_render_to_texture"),e("WEBGL_render_shared_exponent")},get:function(n){const i=e(n);return i===null&&yu("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function GV(s,t,e,n){const i={},r=new WeakMap;function o(u){const d=u.target;d.index!==null&&t.remove(d.index);for(const p in d.attributes)t.remove(d.attributes[p]);for(const p in d.morphAttributes){const _=d.morphAttributes[p];for(let g=0,m=_.length;g<m;g++)t.remove(_[g])}d.removeEventListener("dispose",o),delete i[d.id];const f=r.get(d);f&&(t.remove(f),r.delete(d)),n.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,e.memory.geometries--}function a(u,d){return i[d.id]===!0||(d.addEventListener("dispose",o),i[d.id]=!0,e.memory.geometries++),d}function c(u){const d=u.attributes;for(const p in d)t.update(d[p],s.ARRAY_BUFFER);const f=u.morphAttributes;for(const p in f){const _=f[p];for(let g=0,m=_.length;g<m;g++)t.update(_[g],s.ARRAY_BUFFER)}}function l(u){const d=[],f=u.index,p=u.attributes.position;let _=0;if(f!==null){const x=f.array;_=f.version;for(let v=0,y=x.length;v<y;v+=3){const b=x[v+0],S=x[v+1],M=x[v+2];d.push(b,S,S,M,M,b)}}else if(p!==void 0){const x=p.array;_=p.version;for(let v=0,y=x.length/3-1;v<y;v+=3){const b=v+0,S=v+1,M=v+2;d.push(b,S,S,M,M,b)}}else return;const g=new(hC(d)?yC:_C)(d,1);g.version=_;const m=r.get(u);m&&t.remove(m),r.set(u,g)}function h(u){const d=r.get(u);if(d){const f=u.index;f!==null&&d.version<f.version&&l(u)}else l(u);return r.get(u)}return{get:a,update:c,getWireframeAttribute:h}}function HV(s,t,e){let n;function i(d){n=d}let r,o;function a(d){r=d.type,o=d.bytesPerElement}function c(d,f){s.drawElements(n,f,r,d*o),e.update(f,n,1)}function l(d,f,p){p!==0&&(s.drawElementsInstanced(n,f,r,d*o,p),e.update(f,n,p))}function h(d,f,p){if(p===0)return;t.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,f,0,r,d,0,p);let g=0;for(let m=0;m<p;m++)g+=f[m];e.update(g,n,1)}function u(d,f,p,_){if(p===0)return;const g=t.get("WEBGL_multi_draw");if(g===null)for(let m=0;m<d.length;m++)l(d[m]/o,f[m],_[m]);else{g.multiDrawElementsInstancedWEBGL(n,f,0,r,d,0,_,0,p);let m=0;for(let x=0;x<p;x++)m+=f[x]*_[x];e.update(m,n,1)}}this.setMode=i,this.setIndex=a,this.render=c,this.renderInstances=l,this.renderMultiDraw=h,this.renderMultiDrawInstances=u}function $V(s){const t={geometries:0,textures:0},e={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,o,a){switch(e.calls++,o){case s.TRIANGLES:e.triangles+=a*(r/3);break;case s.LINES:e.lines+=a*(r/2);break;case s.LINE_STRIP:e.lines+=a*(r-1);break;case s.LINE_LOOP:e.lines+=a*r;break;case s.POINTS:e.points+=a*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function i(){e.calls=0,e.triangles=0,e.points=0,e.lines=0}return{memory:t,render:e,programs:null,autoReset:!0,reset:i,update:n}}function WV(s,t,e){const n=new WeakMap,i=new vn;function r(o,a,c){const l=o.morphTargetInfluences,h=a.morphAttributes.position||a.morphAttributes.normal||a.morphAttributes.color,u=h!==void 0?h.length:0;let d=n.get(a);if(d===void 0||d.count!==u){let w=function(){T.dispose(),n.delete(a),a.removeEventListener("dispose",w)};var f=w;d!==void 0&&d.texture.dispose();const p=a.morphAttributes.position!==void 0,_=a.morphAttributes.normal!==void 0,g=a.morphAttributes.color!==void 0,m=a.morphAttributes.position||[],x=a.morphAttributes.normal||[],v=a.morphAttributes.color||[];let y=0;p===!0&&(y=1),_===!0&&(y=2),g===!0&&(y=3);let b=a.attributes.position.count*y,S=1;b>t.maxTextureSize&&(S=Math.ceil(b/t.maxTextureSize),b=t.maxTextureSize);const M=new Float32Array(b*S*4*u),T=new fC(M,b,S,u);T.type=Wr,T.needsUpdate=!0;const A=y*4;for(let E=0;E<u;E++){const N=m[E],I=x[E],P=v[E],D=b*S*4*E;for(let O=0;O<N.count;O++){const k=O*A;p===!0&&(i.fromBufferAttribute(N,O),M[D+k+0]=i.x,M[D+k+1]=i.y,M[D+k+2]=i.z,M[D+k+3]=0),_===!0&&(i.fromBufferAttribute(I,O),M[D+k+4]=i.x,M[D+k+5]=i.y,M[D+k+6]=i.z,M[D+k+7]=0),g===!0&&(i.fromBufferAttribute(P,O),M[D+k+8]=i.x,M[D+k+9]=i.y,M[D+k+10]=i.z,M[D+k+11]=P.itemSize===4?i.w:1)}}d={count:u,texture:T,size:new qt(b,S)},n.set(a,d),a.addEventListener("dispose",w)}if(o.isInstancedMesh===!0&&o.morphTexture!==null)c.getUniforms().setValue(s,"morphTexture",o.morphTexture,e);else{let p=0;for(let g=0;g<l.length;g++)p+=l[g];const _=a.morphTargetsRelative?1:1-p;c.getUniforms().setValue(s,"morphTargetBaseInfluence",_),c.getUniforms().setValue(s,"morphTargetInfluences",l)}c.getUniforms().setValue(s,"morphTargetsTexture",d.texture,e),c.getUniforms().setValue(s,"morphTargetsTextureSize",d.size)}return{update:r}}function qV(s,t,e,n){let i=new WeakMap;function r(c){const l=n.render.frame,h=c.geometry,u=t.get(c,h);if(i.get(u)!==l&&(t.update(u),i.set(u,l)),c.isInstancedMesh&&(c.hasEventListener("dispose",a)===!1&&c.addEventListener("dispose",a),i.get(c)!==l&&(e.update(c.instanceMatrix,s.ARRAY_BUFFER),c.instanceColor!==null&&e.update(c.instanceColor,s.ARRAY_BUFFER),i.set(c,l))),c.isSkinnedMesh){const d=c.skeleton;i.get(d)!==l&&(d.update(),i.set(d,l))}return u}function o(){i=new WeakMap}function a(c){const l=c.target;l.removeEventListener("dispose",a),e.remove(l.instanceMatrix),l.instanceColor!==null&&e.remove(l.instanceColor)}return{update:r,dispose:o}}let AC=class extends js{constructor(t,e,n,i,r,o,a,c,l,h=Bl){if(h!==Bl&&h!==oh)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&h===Bl&&(n=lc),n===void 0&&h===oh&&(n=rh),super(null,i,r,o,a,c,h,n,l),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=a!==void 0?a:Bs,this.minFilter=c!==void 0?c:Bs,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return this.compareFunction!==null&&(e.compareFunction=this.compareFunction),e}};const EC=new js,lT=new AC(1,1),CC=new fC,RC=new I3,NC=new TC,hT=[],uT=[],dT=new Float32Array(16),fT=new Float32Array(9),pT=new Float32Array(4);function Rh(s,t,e){const n=s[0];if(n<=0||n>0)return s;const i=t*e;let r=hT[i];if(r===void 0&&(r=new Float32Array(i),hT[i]=r),t!==0){n.toArray(r,0);for(let o=1,a=0;o!==t;++o)a+=e,s[o].toArray(r,a)}return r}function Cn(s,t){if(s.length!==t.length)return!1;for(let e=0,n=s.length;e<n;e++)if(s[e]!==t[e])return!1;return!0}function Rn(s,t){for(let e=0,n=t.length;e<n;e++)s[e]=t[e]}function dg(s,t){let e=uT[t];e===void 0&&(e=new Int32Array(t),uT[t]=e);for(let n=0;n!==t;++n)e[n]=s.allocateTextureUnit();return e}function jV(s,t){const e=this.cache;e[0]!==t&&(s.uniform1f(this.addr,t),e[0]=t)}function XV(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2f(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Cn(e,t))return;s.uniform2fv(this.addr,t),Rn(e,t)}}function YV(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3f(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else if(t.r!==void 0)(e[0]!==t.r||e[1]!==t.g||e[2]!==t.b)&&(s.uniform3f(this.addr,t.r,t.g,t.b),e[0]=t.r,e[1]=t.g,e[2]=t.b);else{if(Cn(e,t))return;s.uniform3fv(this.addr,t),Rn(e,t)}}function ZV(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4f(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Cn(e,t))return;s.uniform4fv(this.addr,t),Rn(e,t)}}function KV(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(Cn(e,t))return;s.uniformMatrix2fv(this.addr,!1,t),Rn(e,t)}else{if(Cn(e,n))return;pT.set(n),s.uniformMatrix2fv(this.addr,!1,pT),Rn(e,n)}}function QV(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(Cn(e,t))return;s.uniformMatrix3fv(this.addr,!1,t),Rn(e,t)}else{if(Cn(e,n))return;fT.set(n),s.uniformMatrix3fv(this.addr,!1,fT),Rn(e,n)}}function JV(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(Cn(e,t))return;s.uniformMatrix4fv(this.addr,!1,t),Rn(e,t)}else{if(Cn(e,n))return;dT.set(n),s.uniformMatrix4fv(this.addr,!1,dT),Rn(e,n)}}function t4(s,t){const e=this.cache;e[0]!==t&&(s.uniform1i(this.addr,t),e[0]=t)}function e4(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2i(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Cn(e,t))return;s.uniform2iv(this.addr,t),Rn(e,t)}}function n4(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3i(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(Cn(e,t))return;s.uniform3iv(this.addr,t),Rn(e,t)}}function i4(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4i(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Cn(e,t))return;s.uniform4iv(this.addr,t),Rn(e,t)}}function s4(s,t){const e=this.cache;e[0]!==t&&(s.uniform1ui(this.addr,t),e[0]=t)}function r4(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2ui(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Cn(e,t))return;s.uniform2uiv(this.addr,t),Rn(e,t)}}function o4(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3ui(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(Cn(e,t))return;s.uniform3uiv(this.addr,t),Rn(e,t)}}function a4(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4ui(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Cn(e,t))return;s.uniform4uiv(this.addr,t),Rn(e,t)}}function c4(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i);let r;this.type===s.SAMPLER_2D_SHADOW?(lT.compareFunction=aC,r=lT):r=EC,e.setTexture2D(t||r,i)}function l4(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture3D(t||RC,i)}function h4(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTextureCube(t||NC,i)}function u4(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture2DArray(t||CC,i)}function d4(s){switch(s){case 5126:return jV;case 35664:return XV;case 35665:return YV;case 35666:return ZV;case 35674:return KV;case 35675:return QV;case 35676:return JV;case 5124:case 35670:return t4;case 35667:case 35671:return e4;case 35668:case 35672:return n4;case 35669:case 35673:return i4;case 5125:return s4;case 36294:return r4;case 36295:return o4;case 36296:return a4;case 35678:case 36198:case 36298:case 36306:case 35682:return c4;case 35679:case 36299:case 36307:return l4;case 35680:case 36300:case 36308:case 36293:return h4;case 36289:case 36303:case 36311:case 36292:return u4}}function f4(s,t){s.uniform1fv(this.addr,t)}function p4(s,t){const e=Rh(t,this.size,2);s.uniform2fv(this.addr,e)}function m4(s,t){const e=Rh(t,this.size,3);s.uniform3fv(this.addr,e)}function g4(s,t){const e=Rh(t,this.size,4);s.uniform4fv(this.addr,e)}function _4(s,t){const e=Rh(t,this.size,4);s.uniformMatrix2fv(this.addr,!1,e)}function y4(s,t){const e=Rh(t,this.size,9);s.uniformMatrix3fv(this.addr,!1,e)}function x4(s,t){const e=Rh(t,this.size,16);s.uniformMatrix4fv(this.addr,!1,e)}function v4(s,t){s.uniform1iv(this.addr,t)}function b4(s,t){s.uniform2iv(this.addr,t)}function S4(s,t){s.uniform3iv(this.addr,t)}function M4(s,t){s.uniform4iv(this.addr,t)}function T4(s,t){s.uniform1uiv(this.addr,t)}function w4(s,t){s.uniform2uiv(this.addr,t)}function A4(s,t){s.uniform3uiv(this.addr,t)}function E4(s,t){s.uniform4uiv(this.addr,t)}function C4(s,t,e){const n=this.cache,i=t.length,r=dg(e,i);Cn(n,r)||(s.uniform1iv(this.addr,r),Rn(n,r));for(let o=0;o!==i;++o)e.setTexture2D(t[o]||EC,r[o])}function R4(s,t,e){const n=this.cache,i=t.length,r=dg(e,i);Cn(n,r)||(s.uniform1iv(this.addr,r),Rn(n,r));for(let o=0;o!==i;++o)e.setTexture3D(t[o]||RC,r[o])}function N4(s,t,e){const n=this.cache,i=t.length,r=dg(e,i);Cn(n,r)||(s.uniform1iv(this.addr,r),Rn(n,r));for(let o=0;o!==i;++o)e.setTextureCube(t[o]||NC,r[o])}function P4(s,t,e){const n=this.cache,i=t.length,r=dg(e,i);Cn(n,r)||(s.uniform1iv(this.addr,r),Rn(n,r));for(let o=0;o!==i;++o)e.setTexture2DArray(t[o]||CC,r[o])}function D4(s){switch(s){case 5126:return f4;case 35664:return p4;case 35665:return m4;case 35666:return g4;case 35674:return _4;case 35675:return y4;case 35676:return x4;case 5124:case 35670:return v4;case 35667:case 35671:return b4;case 35668:case 35672:return S4;case 35669:case 35673:return M4;case 5125:return T4;case 36294:return w4;case 36295:return A4;case 36296:return E4;case 35678:case 36198:case 36298:case 36306:case 35682:return C4;case 35679:case 36299:case 36307:return R4;case 35680:case 36300:case 36308:case 36293:return N4;case 36289:case 36303:case 36311:case 36292:return P4}}class I4{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.setValue=d4(e.type)}}class F4{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.size=e.size,this.setValue=D4(e.type)}}class O4{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const i=this.seq;for(let r=0,o=i.length;r!==o;++r){const a=i[r];a.setValue(t,e[a.id],n)}}}const U_=/(\w+)(\])?(\[|\.)?/g;function mT(s,t){s.seq.push(t),s.map[t.id]=t}function L4(s,t,e){const n=s.name,i=n.length;for(U_.lastIndex=0;;){const r=U_.exec(n),o=U_.lastIndex;let a=r[1];const c=r[2]==="]",l=r[3];if(c&&(a=a|0),l===void 0||l==="["&&o+2===i){mT(e,l===void 0?new I4(a,s,t):new F4(a,s,t));break}else{let u=e.map[a];u===void 0&&(u=new O4(a),mT(e,u)),e=u}}}class kp{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,t.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const r=t.getActiveUniform(e,i),o=t.getUniformLocation(e,r.name);L4(r,o,this)}}setValue(t,e,n,i){const r=this.map[e];r!==void 0&&r.setValue(t,n,i)}setOptional(t,e,n){const i=e[n];i!==void 0&&this.setValue(t,n,i)}static upload(t,e,n,i){for(let r=0,o=e.length;r!==o;++r){const a=e[r],c=n[a.id];c.needsUpdate!==!1&&a.setValue(t,c.value,i)}}static seqWithValue(t,e){const n=[];for(let i=0,r=t.length;i!==r;++i){const o=t[i];o.id in e&&n.push(o)}return n}}function gT(s,t,e){const n=s.createShader(t);return s.shaderSource(n,e),s.compileShader(n),n}const B4=37297;let U4=0;function k4(s,t){const e=s.split(`
`),n=[],i=Math.max(t-6,0),r=Math.min(t+6,e.length);for(let o=i;o<r;o++){const a=o+1;n.push(`${a===t?">":" "} ${a}: ${e[o]}`)}return n.join(`
`)}const _T=new ue;function z4(s){be._getMatrix(_T,be.workingColorSpace,s);const t=`mat3( ${_T.elements.map(e=>e.toFixed(4))} )`;switch(be.getTransfer(s)){case lg:return[t,"LinearTransferOETF"];case Oe:return[t,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",s),[t,"LinearTransferOETF"]}}function yT(s,t,e){const n=s.getShaderParameter(t,s.COMPILE_STATUS),i=s.getShaderInfoLog(t).trim();if(n&&i==="")return"";const r=/ERROR: 0:(\d+)/.exec(i);if(r){const o=parseInt(r[1]);return e.toUpperCase()+`

`+i+`

`+k4(s.getShaderSource(t),o)}else return i}function V4(s,t){const e=z4(t);return[`vec4 ${s}( vec4 value ) {`,`	return ${e[1]}( vec4( value.rgb * ${e[0]}, value.a ) );`,"}"].join(`
`)}function G4(s,t){let e;switch(t){case $U:e="Linear";break;case WU:e="Reinhard";break;case qU:e="Cineon";break;case jU:e="ACESFilmic";break;case YU:e="AgX";break;case ZU:e="Neutral";break;case XU:e="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),e="Linear"}return"vec3 "+s+"( vec3 color ) { return "+e+"ToneMapping( color ); }"}const Uf=new X;function H4(){be.getLuminanceCoefficients(Uf);const s=Uf.x.toFixed(4),t=Uf.y.toFixed(4),e=Uf.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${s}, ${t}, ${e} );`,"	return dot( weights, rgb );","}"].join(`
`)}function $4(s){return[s.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",s.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(xu).join(`
`)}function W4(s){const t=[];for(const e in s){const n=s[e];n!==!1&&t.push("#define "+e+" "+n)}return t.join(`
`)}function q4(s,t){const e={},n=s.getProgramParameter(t,s.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const r=s.getActiveAttrib(t,i),o=r.name;let a=1;r.type===s.FLOAT_MAT2&&(a=2),r.type===s.FLOAT_MAT3&&(a=3),r.type===s.FLOAT_MAT4&&(a=4),e[o]={type:r.type,location:s.getAttribLocation(t,o),locationSize:a}}return e}function xu(s){return s!==""}function xT(s,t){const e=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,e).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function vT(s,t){return s.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const j4=/^[ \t]*#include +<([\w\d./]+)>/gm;function cx(s){return s.replace(j4,Y4)}const X4=new Map;function Y4(s,t){let e=ce[t];if(e===void 0){const n=X4.get(t);if(n!==void 0)e=ce[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',t,n);else throw new Error("Can not resolve #include <"+t+">")}return cx(e)}const Z4=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function bT(s){return s.replace(Z4,K4)}function K4(s,t,e,n){let i="";for(let r=parseInt(t);r<parseInt(e);r++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}function ST(s){let t=`precision ${s.precision} float;
	precision ${s.precision} int;
	precision ${s.precision} sampler2D;
	precision ${s.precision} samplerCube;
	precision ${s.precision} sampler3D;
	precision ${s.precision} sampler2DArray;
	precision ${s.precision} sampler2DShadow;
	precision ${s.precision} samplerCubeShadow;
	precision ${s.precision} sampler2DArrayShadow;
	precision ${s.precision} isampler2D;
	precision ${s.precision} isampler3D;
	precision ${s.precision} isamplerCube;
	precision ${s.precision} isampler2DArray;
	precision ${s.precision} usampler2D;
	precision ${s.precision} usampler3D;
	precision ${s.precision} usamplerCube;
	precision ${s.precision} usampler2DArray;
	`;return s.precision==="highp"?t+=`
#define HIGH_PRECISION`:s.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function Q4(s){let t="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===XE?t="SHADOWMAP_TYPE_PCF":s.shadowMapType===MU?t="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===Dr&&(t="SHADOWMAP_TYPE_VSM"),t}function J4(s){let t="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case ih:case sh:t="ENVMAP_TYPE_CUBE";break;case cg:t="ENVMAP_TYPE_CUBE_UV";break}return t}function tG(s){let t="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case sh:t="ENVMAP_MODE_REFRACTION";break}return t}function eG(s){let t="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case YE:t="ENVMAP_BLENDING_MULTIPLY";break;case GU:t="ENVMAP_BLENDING_MIX";break;case HU:t="ENVMAP_BLENDING_ADD";break}return t}function nG(s){const t=s.envMapCubeUVHeight;if(t===null)return null;const e=Math.log2(t)-2,n=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,e),7*16)),texelHeight:n,maxMip:e}}function iG(s,t,e,n){const i=s.getContext(),r=e.defines;let o=e.vertexShader,a=e.fragmentShader;const c=Q4(e),l=J4(e),h=tG(e),u=eG(e),d=nG(e),f=$4(e),p=W4(r),_=i.createProgram();let g,m,x=e.glslVersion?"#version "+e.glslVersion+`
`:"";e.isRawShaderMaterial?(g=["#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,p].filter(xu).join(`
`),g.length>0&&(g+=`
`),m=["#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,p].filter(xu).join(`
`),m.length>0&&(m+=`
`)):(g=[ST(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,p,e.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",e.batching?"#define USE_BATCHING":"",e.batchingColor?"#define USE_BATCHING_COLOR":"",e.instancing?"#define USE_INSTANCING":"",e.instancingColor?"#define USE_INSTANCING_COLOR":"",e.instancingMorph?"#define USE_INSTANCING_MORPH":"",e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+h:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.displacementMap?"#define USE_DISPLACEMENTMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.mapUv?"#define MAP_UV "+e.mapUv:"",e.alphaMapUv?"#define ALPHAMAP_UV "+e.alphaMapUv:"",e.lightMapUv?"#define LIGHTMAP_UV "+e.lightMapUv:"",e.aoMapUv?"#define AOMAP_UV "+e.aoMapUv:"",e.emissiveMapUv?"#define EMISSIVEMAP_UV "+e.emissiveMapUv:"",e.bumpMapUv?"#define BUMPMAP_UV "+e.bumpMapUv:"",e.normalMapUv?"#define NORMALMAP_UV "+e.normalMapUv:"",e.displacementMapUv?"#define DISPLACEMENTMAP_UV "+e.displacementMapUv:"",e.metalnessMapUv?"#define METALNESSMAP_UV "+e.metalnessMapUv:"",e.roughnessMapUv?"#define ROUGHNESSMAP_UV "+e.roughnessMapUv:"",e.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+e.anisotropyMapUv:"",e.clearcoatMapUv?"#define CLEARCOATMAP_UV "+e.clearcoatMapUv:"",e.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+e.clearcoatNormalMapUv:"",e.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+e.clearcoatRoughnessMapUv:"",e.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+e.iridescenceMapUv:"",e.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+e.iridescenceThicknessMapUv:"",e.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+e.sheenColorMapUv:"",e.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+e.sheenRoughnessMapUv:"",e.specularMapUv?"#define SPECULARMAP_UV "+e.specularMapUv:"",e.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+e.specularColorMapUv:"",e.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+e.specularIntensityMapUv:"",e.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+e.transmissionMapUv:"",e.thicknessMapUv?"#define THICKNESSMAP_UV "+e.thicknessMapUv:"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.flatShading?"#define FLAT_SHADED":"",e.skinning?"#define USE_SKINNING":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals&&e.flatShading===!1?"#define USE_MORPHNORMALS":"",e.morphColors?"#define USE_MORPHCOLORS":"",e.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+e.morphTextureStride:"",e.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+e.morphTargetsCount:"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+c:"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.numLightProbes>0?"#define USE_LIGHT_PROBES":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(xu).join(`
`),m=[ST(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,p,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",e.map?"#define USE_MAP":"",e.matcap?"#define USE_MATCAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+l:"",e.envMap?"#define "+h:"",e.envMap?"#define "+u:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoat?"#define USE_CLEARCOAT":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.dispersion?"#define USE_DISPERSION":"",e.iridescence?"#define USE_IRIDESCENCE":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaTest?"#define USE_ALPHATEST":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.sheen?"#define USE_SHEEN":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors||e.instancingColor||e.batchingColor?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.gradientMap?"#define USE_GRADIENTMAP":"",e.flatShading?"#define FLAT_SHADED":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+c:"",e.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",e.numLightProbes>0?"#define USE_LIGHT_PROBES":"",e.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",e.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",e.toneMapping!==Jo?"#define TONE_MAPPING":"",e.toneMapping!==Jo?ce.tonemapping_pars_fragment:"",e.toneMapping!==Jo?G4("toneMapping",e.toneMapping):"",e.dithering?"#define DITHERING":"",e.opaque?"#define OPAQUE":"",ce.colorspace_pars_fragment,V4("linearToOutputTexel",e.outputColorSpace),H4(),e.useDepthPacking?"#define DEPTH_PACKING "+e.depthPacking:"",`
`].filter(xu).join(`
`)),o=cx(o),o=xT(o,e),o=vT(o,e),a=cx(a),a=xT(a,e),a=vT(a,e),o=bT(o),a=bT(a),e.isRawShaderMaterial!==!0&&(x=`#version 300 es
`,g=[f,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+g,m=["#define varying in",e.glslVersion===FM?"":"layout(location = 0) out highp vec4 pc_fragColor;",e.glslVersion===FM?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+m);const v=x+g+o,y=x+m+a,b=gT(i,i.VERTEX_SHADER,v),S=gT(i,i.FRAGMENT_SHADER,y);i.attachShader(_,b),i.attachShader(_,S),e.index0AttributeName!==void 0?i.bindAttribLocation(_,0,e.index0AttributeName):e.morphTargets===!0&&i.bindAttribLocation(_,0,"position"),i.linkProgram(_);function M(E){if(s.debug.checkShaderErrors){const N=i.getProgramInfoLog(_).trim(),I=i.getShaderInfoLog(b).trim(),P=i.getShaderInfoLog(S).trim();let D=!0,O=!0;if(i.getProgramParameter(_,i.LINK_STATUS)===!1)if(D=!1,typeof s.debug.onShaderError=="function")s.debug.onShaderError(i,_,b,S);else{const k=yT(i,b,"vertex"),z=yT(i,S,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(_,i.VALIDATE_STATUS)+`

Material Name: `+E.name+`
Material Type: `+E.type+`

Program Info Log: `+N+`
`+k+`
`+z)}else N!==""?console.warn("THREE.WebGLProgram: Program Info Log:",N):(I===""||P==="")&&(O=!1);O&&(E.diagnostics={runnable:D,programLog:N,vertexShader:{log:I,prefix:g},fragmentShader:{log:P,prefix:m}})}i.deleteShader(b),i.deleteShader(S),T=new kp(i,_),A=q4(i,_)}let T;this.getUniforms=function(){return T===void 0&&M(this),T};let A;this.getAttributes=function(){return A===void 0&&M(this),A};let w=e.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return w===!1&&(w=i.getProgramParameter(_,B4)),w},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(_),this.program=void 0},this.type=e.shaderType,this.name=e.shaderName,this.id=U4++,this.cacheKey=t,this.usedTimes=1,this.program=_,this.vertexShader=b,this.fragmentShader=S,this}let sG=0;class rG{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,i=this._getShaderStage(e),r=this._getShaderStage(n),o=this._getShaderCacheForMaterial(t);return o.has(i)===!1&&(o.add(i),i.usedTimes++),o.has(r)===!1&&(o.add(r),r.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const n of e)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let n=e.get(t);return n===void 0&&(n=new Set,e.set(t,n)),n}_getShaderStage(t){const e=this.shaderCache;let n=e.get(t);return n===void 0&&(n=new oG(t),e.set(t,n)),n}}class oG{constructor(t){this.id=sG++,this.code=t,this.usedTimes=0}}function aG(s,t,e,n,i,r,o){const a=new ob,c=new rG,l=new Set,h=[],u=i.logarithmicDepthBuffer,d=i.vertexTextures;let f=i.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function _(A){return l.add(A),A===0?"uv":`uv${A}`}function g(A,w,E,N,I){const P=N.fog,D=I.geometry,O=A.isMeshStandardMaterial?N.environment:null,k=(A.isMeshStandardMaterial?e:t).get(A.envMap||O),z=k&&k.mapping===cg?k.image.height:null,Y=p[A.type];A.precision!==null&&(f=i.getMaxPrecision(A.precision),f!==A.precision&&console.warn("THREE.WebGLProgram.getParameters:",A.precision,"not supported, using",f,"instead."));const U=D.morphAttributes.position||D.morphAttributes.normal||D.morphAttributes.color,W=U!==void 0?U.length:0;let lt=0;D.morphAttributes.position!==void 0&&(lt=1),D.morphAttributes.normal!==void 0&&(lt=2),D.morphAttributes.color!==void 0&&(lt=3);let wt,H,B,nt;if(Y){const Fe=Zs[Y];wt=Fe.vertexShader,H=Fe.fragmentShader}else wt=A.vertexShader,H=A.fragmentShader,c.update(A),B=c.getVertexShaderID(A),nt=c.getFragmentShaderID(A);const at=s.getRenderTarget(),et=s.state.buffers.depth.getReversed(),Nt=I.isInstancedMesh===!0,Ft=I.isBatchedMesh===!0,jt=!!A.map,Xt=!!A.matcap,Ie=!!k,V=!!A.aoMap,gt=!!A.lightMap,mt=!!A.bumpMap,Ot=!!A.normalMap,St=!!A.displacementMap,Ht=!!A.emissiveMap,Et=!!A.metalnessMap,F=!!A.roughnessMap,C=A.anisotropy>0,K=A.clearcoat>0,dt=A.dispersion>0,pt=A.iridescence>0,ht=A.sheen>0,$t=A.transmission>0,Rt=C&&!!A.anisotropyMap,Lt=K&&!!A.clearcoatMap,ve=K&&!!A.clearcoatNormalMap,yt=K&&!!A.clearcoatRoughnessMap,Bt=pt&&!!A.iridescenceMap,Kt=pt&&!!A.iridescenceThicknessMap,Qt=ht&&!!A.sheenColorMap,Ut=ht&&!!A.sheenRoughnessMap,ye=!!A.specularMap,ae=!!A.specularColorMap,ze=!!A.specularIntensityMap,G=$t&&!!A.transmissionMap,Ct=$t&&!!A.thicknessMap,st=!!A.gradientMap,ft=!!A.alphaMap,It=A.alphaTest>0,Pt=!!A.alphaHash,re=!!A.extensions;let sn=Jo;A.toneMapped&&(at===null||at.isXRRenderTarget===!0)&&(sn=s.toneMapping);const Wn={shaderID:Y,shaderType:A.type,shaderName:A.name,vertexShader:wt,fragmentShader:H,defines:A.defines,customVertexShaderID:B,customFragmentShaderID:nt,isRawShaderMaterial:A.isRawShaderMaterial===!0,glslVersion:A.glslVersion,precision:f,batching:Ft,batchingColor:Ft&&I._colorsTexture!==null,instancing:Nt,instancingColor:Nt&&I.instanceColor!==null,instancingMorph:Nt&&I.morphTexture!==null,supportsVertexTextures:d,outputColorSpace:at===null?s.outputColorSpace:at.isXRRenderTarget===!0?at.texture.colorSpace:Ah,alphaToCoverage:!!A.alphaToCoverage,map:jt,matcap:Xt,envMap:Ie,envMapMode:Ie&&k.mapping,envMapCubeUVHeight:z,aoMap:V,lightMap:gt,bumpMap:mt,normalMap:Ot,displacementMap:d&&St,emissiveMap:Ht,normalMapObjectSpace:Ot&&A.normalMapType===e3,normalMapTangentSpace:Ot&&A.normalMapType===t3,metalnessMap:Et,roughnessMap:F,anisotropy:C,anisotropyMap:Rt,clearcoat:K,clearcoatMap:Lt,clearcoatNormalMap:ve,clearcoatRoughnessMap:yt,dispersion:dt,iridescence:pt,iridescenceMap:Bt,iridescenceThicknessMap:Kt,sheen:ht,sheenColorMap:Qt,sheenRoughnessMap:Ut,specularMap:ye,specularColorMap:ae,specularIntensityMap:ze,transmission:$t,transmissionMap:G,thicknessMap:Ct,gradientMap:st,opaque:A.transparent===!1&&A.blending===Ll&&A.alphaToCoverage===!1,alphaMap:ft,alphaTest:It,alphaHash:Pt,combine:A.combine,mapUv:jt&&_(A.map.channel),aoMapUv:V&&_(A.aoMap.channel),lightMapUv:gt&&_(A.lightMap.channel),bumpMapUv:mt&&_(A.bumpMap.channel),normalMapUv:Ot&&_(A.normalMap.channel),displacementMapUv:St&&_(A.displacementMap.channel),emissiveMapUv:Ht&&_(A.emissiveMap.channel),metalnessMapUv:Et&&_(A.metalnessMap.channel),roughnessMapUv:F&&_(A.roughnessMap.channel),anisotropyMapUv:Rt&&_(A.anisotropyMap.channel),clearcoatMapUv:Lt&&_(A.clearcoatMap.channel),clearcoatNormalMapUv:ve&&_(A.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:yt&&_(A.clearcoatRoughnessMap.channel),iridescenceMapUv:Bt&&_(A.iridescenceMap.channel),iridescenceThicknessMapUv:Kt&&_(A.iridescenceThicknessMap.channel),sheenColorMapUv:Qt&&_(A.sheenColorMap.channel),sheenRoughnessMapUv:Ut&&_(A.sheenRoughnessMap.channel),specularMapUv:ye&&_(A.specularMap.channel),specularColorMapUv:ae&&_(A.specularColorMap.channel),specularIntensityMapUv:ze&&_(A.specularIntensityMap.channel),transmissionMapUv:G&&_(A.transmissionMap.channel),thicknessMapUv:Ct&&_(A.thicknessMap.channel),alphaMapUv:ft&&_(A.alphaMap.channel),vertexTangents:!!D.attributes.tangent&&(Ot||C),vertexColors:A.vertexColors,vertexAlphas:A.vertexColors===!0&&!!D.attributes.color&&D.attributes.color.itemSize===4,pointsUvs:I.isPoints===!0&&!!D.attributes.uv&&(jt||ft),fog:!!P,useFog:A.fog===!0,fogExp2:!!P&&P.isFogExp2,flatShading:A.flatShading===!0,sizeAttenuation:A.sizeAttenuation===!0,logarithmicDepthBuffer:u,reverseDepthBuffer:et,skinning:I.isSkinnedMesh===!0,morphTargets:D.morphAttributes.position!==void 0,morphNormals:D.morphAttributes.normal!==void 0,morphColors:D.morphAttributes.color!==void 0,morphTargetsCount:W,morphTextureStride:lt,numDirLights:w.directional.length,numPointLights:w.point.length,numSpotLights:w.spot.length,numSpotLightMaps:w.spotLightMap.length,numRectAreaLights:w.rectArea.length,numHemiLights:w.hemi.length,numDirLightShadows:w.directionalShadowMap.length,numPointLightShadows:w.pointShadowMap.length,numSpotLightShadows:w.spotShadowMap.length,numSpotLightShadowsWithMaps:w.numSpotLightShadowsWithMaps,numLightProbes:w.numLightProbes,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:A.dithering,shadowMapEnabled:s.shadowMap.enabled&&E.length>0,shadowMapType:s.shadowMap.type,toneMapping:sn,decodeVideoTexture:jt&&A.map.isVideoTexture===!0&&be.getTransfer(A.map.colorSpace)===Oe,decodeVideoTextureEmissive:Ht&&A.emissiveMap.isVideoTexture===!0&&be.getTransfer(A.emissiveMap.colorSpace)===Oe,premultipliedAlpha:A.premultipliedAlpha,doubleSided:A.side===kr,flipSided:A.side===fi,useDepthPacking:A.depthPacking>=0,depthPacking:A.depthPacking||0,index0AttributeName:A.index0AttributeName,extensionClipCullDistance:re&&A.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(re&&A.extensions.multiDraw===!0||Ft)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:A.customProgramCacheKey()};return Wn.vertexUv1s=l.has(1),Wn.vertexUv2s=l.has(2),Wn.vertexUv3s=l.has(3),l.clear(),Wn}function m(A){const w=[];if(A.shaderID?w.push(A.shaderID):(w.push(A.customVertexShaderID),w.push(A.customFragmentShaderID)),A.defines!==void 0)for(const E in A.defines)w.push(E),w.push(A.defines[E]);return A.isRawShaderMaterial===!1&&(x(w,A),v(w,A),w.push(s.outputColorSpace)),w.push(A.customProgramCacheKey),w.join()}function x(A,w){A.push(w.precision),A.push(w.outputColorSpace),A.push(w.envMapMode),A.push(w.envMapCubeUVHeight),A.push(w.mapUv),A.push(w.alphaMapUv),A.push(w.lightMapUv),A.push(w.aoMapUv),A.push(w.bumpMapUv),A.push(w.normalMapUv),A.push(w.displacementMapUv),A.push(w.emissiveMapUv),A.push(w.metalnessMapUv),A.push(w.roughnessMapUv),A.push(w.anisotropyMapUv),A.push(w.clearcoatMapUv),A.push(w.clearcoatNormalMapUv),A.push(w.clearcoatRoughnessMapUv),A.push(w.iridescenceMapUv),A.push(w.iridescenceThicknessMapUv),A.push(w.sheenColorMapUv),A.push(w.sheenRoughnessMapUv),A.push(w.specularMapUv),A.push(w.specularColorMapUv),A.push(w.specularIntensityMapUv),A.push(w.transmissionMapUv),A.push(w.thicknessMapUv),A.push(w.combine),A.push(w.fogExp2),A.push(w.sizeAttenuation),A.push(w.morphTargetsCount),A.push(w.morphAttributeCount),A.push(w.numDirLights),A.push(w.numPointLights),A.push(w.numSpotLights),A.push(w.numSpotLightMaps),A.push(w.numHemiLights),A.push(w.numRectAreaLights),A.push(w.numDirLightShadows),A.push(w.numPointLightShadows),A.push(w.numSpotLightShadows),A.push(w.numSpotLightShadowsWithMaps),A.push(w.numLightProbes),A.push(w.shadowMapType),A.push(w.toneMapping),A.push(w.numClippingPlanes),A.push(w.numClipIntersection),A.push(w.depthPacking)}function v(A,w){a.disableAll(),w.supportsVertexTextures&&a.enable(0),w.instancing&&a.enable(1),w.instancingColor&&a.enable(2),w.instancingMorph&&a.enable(3),w.matcap&&a.enable(4),w.envMap&&a.enable(5),w.normalMapObjectSpace&&a.enable(6),w.normalMapTangentSpace&&a.enable(7),w.clearcoat&&a.enable(8),w.iridescence&&a.enable(9),w.alphaTest&&a.enable(10),w.vertexColors&&a.enable(11),w.vertexAlphas&&a.enable(12),w.vertexUv1s&&a.enable(13),w.vertexUv2s&&a.enable(14),w.vertexUv3s&&a.enable(15),w.vertexTangents&&a.enable(16),w.anisotropy&&a.enable(17),w.alphaHash&&a.enable(18),w.batching&&a.enable(19),w.dispersion&&a.enable(20),w.batchingColor&&a.enable(21),A.push(a.mask),a.disableAll(),w.fog&&a.enable(0),w.useFog&&a.enable(1),w.flatShading&&a.enable(2),w.logarithmicDepthBuffer&&a.enable(3),w.reverseDepthBuffer&&a.enable(4),w.skinning&&a.enable(5),w.morphTargets&&a.enable(6),w.morphNormals&&a.enable(7),w.morphColors&&a.enable(8),w.premultipliedAlpha&&a.enable(9),w.shadowMapEnabled&&a.enable(10),w.doubleSided&&a.enable(11),w.flipSided&&a.enable(12),w.useDepthPacking&&a.enable(13),w.dithering&&a.enable(14),w.transmission&&a.enable(15),w.sheen&&a.enable(16),w.opaque&&a.enable(17),w.pointsUvs&&a.enable(18),w.decodeVideoTexture&&a.enable(19),w.decodeVideoTextureEmissive&&a.enable(20),w.alphaToCoverage&&a.enable(21),A.push(a.mask)}function y(A){const w=p[A.type];let E;if(w){const N=Zs[w];E=SC.clone(N.uniforms)}else E=A.uniforms;return E}function b(A,w){let E;for(let N=0,I=h.length;N<I;N++){const P=h[N];if(P.cacheKey===w){E=P,++E.usedTimes;break}}return E===void 0&&(E=new iG(s,w,A,r),h.push(E)),E}function S(A){if(--A.usedTimes===0){const w=h.indexOf(A);h[w]=h[h.length-1],h.pop(),A.destroy()}}function M(A){c.remove(A)}function T(){c.dispose()}return{getParameters:g,getProgramCacheKey:m,getUniforms:y,acquireProgram:b,releaseProgram:S,releaseShaderCache:M,programs:h,dispose:T}}function cG(){let s=new WeakMap;function t(o){return s.has(o)}function e(o){let a=s.get(o);return a===void 0&&(a={},s.set(o,a)),a}function n(o){s.delete(o)}function i(o,a,c){s.get(o)[a]=c}function r(){s=new WeakMap}return{has:t,get:e,remove:n,update:i,dispose:r}}function lG(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.material.id!==t.material.id?s.material.id-t.material.id:s.z!==t.z?s.z-t.z:s.id-t.id}function MT(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.z!==t.z?t.z-s.z:s.id-t.id}function TT(){const s=[];let t=0;const e=[],n=[],i=[];function r(){t=0,e.length=0,n.length=0,i.length=0}function o(u,d,f,p,_,g){let m=s[t];return m===void 0?(m={id:u.id,object:u,geometry:d,material:f,groupOrder:p,renderOrder:u.renderOrder,z:_,group:g},s[t]=m):(m.id=u.id,m.object=u,m.geometry=d,m.material=f,m.groupOrder=p,m.renderOrder=u.renderOrder,m.z=_,m.group=g),t++,m}function a(u,d,f,p,_,g){const m=o(u,d,f,p,_,g);f.transmission>0?n.push(m):f.transparent===!0?i.push(m):e.push(m)}function c(u,d,f,p,_,g){const m=o(u,d,f,p,_,g);f.transmission>0?n.unshift(m):f.transparent===!0?i.unshift(m):e.unshift(m)}function l(u,d){e.length>1&&e.sort(u||lG),n.length>1&&n.sort(d||MT),i.length>1&&i.sort(d||MT)}function h(){for(let u=t,d=s.length;u<d;u++){const f=s[u];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:e,transmissive:n,transparent:i,init:r,push:a,unshift:c,finish:h,sort:l}}function hG(){let s=new WeakMap;function t(n,i){const r=s.get(n);let o;return r===void 0?(o=new TT,s.set(n,[o])):i>=r.length?(o=new TT,r.push(o)):o=r[i],o}function e(){s=new WeakMap}return{get:t,dispose:e}}function uG(){const s={};return{get:function(t){if(s[t.id]!==void 0)return s[t.id];let e;switch(t.type){case"DirectionalLight":e={direction:new X,color:new Ee};break;case"SpotLight":e={position:new X,direction:new X,color:new Ee,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":e={position:new X,color:new Ee,distance:0,decay:0};break;case"HemisphereLight":e={direction:new X,skyColor:new Ee,groundColor:new Ee};break;case"RectAreaLight":e={color:new Ee,position:new X,halfWidth:new X,halfHeight:new X};break}return s[t.id]=e,e}}}function dG(){const s={};return{get:function(t){if(s[t.id]!==void 0)return s[t.id];let e;switch(t.type){case"DirectionalLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new qt};break;case"SpotLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new qt};break;case"PointLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new qt,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[t.id]=e,e}}}let fG=0;function pG(s,t){return(t.castShadow?2:0)-(s.castShadow?2:0)+(t.map?1:0)-(s.map?1:0)}function mG(s){const t=new uG,e=dG(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let l=0;l<9;l++)n.probe.push(new X);const i=new X,r=new un,o=new un;function a(l){let h=0,u=0,d=0;for(let A=0;A<9;A++)n.probe[A].set(0,0,0);let f=0,p=0,_=0,g=0,m=0,x=0,v=0,y=0,b=0,S=0,M=0;l.sort(pG);for(let A=0,w=l.length;A<w;A++){const E=l[A],N=E.color,I=E.intensity,P=E.distance,D=E.shadow&&E.shadow.map?E.shadow.map.texture:null;if(E.isAmbientLight)h+=N.r*I,u+=N.g*I,d+=N.b*I;else if(E.isLightProbe){for(let O=0;O<9;O++)n.probe[O].addScaledVector(E.sh.coefficients[O],I);M++}else if(E.isDirectionalLight){const O=t.get(E);if(O.color.copy(E.color).multiplyScalar(E.intensity),E.castShadow){const k=E.shadow,z=e.get(E);z.shadowIntensity=k.intensity,z.shadowBias=k.bias,z.shadowNormalBias=k.normalBias,z.shadowRadius=k.radius,z.shadowMapSize=k.mapSize,n.directionalShadow[f]=z,n.directionalShadowMap[f]=D,n.directionalShadowMatrix[f]=E.shadow.matrix,x++}n.directional[f]=O,f++}else if(E.isSpotLight){const O=t.get(E);O.position.setFromMatrixPosition(E.matrixWorld),O.color.copy(N).multiplyScalar(I),O.distance=P,O.coneCos=Math.cos(E.angle),O.penumbraCos=Math.cos(E.angle*(1-E.penumbra)),O.decay=E.decay,n.spot[_]=O;const k=E.shadow;if(E.map&&(n.spotLightMap[b]=E.map,b++,k.updateMatrices(E),E.castShadow&&S++),n.spotLightMatrix[_]=k.matrix,E.castShadow){const z=e.get(E);z.shadowIntensity=k.intensity,z.shadowBias=k.bias,z.shadowNormalBias=k.normalBias,z.shadowRadius=k.radius,z.shadowMapSize=k.mapSize,n.spotShadow[_]=z,n.spotShadowMap[_]=D,y++}_++}else if(E.isRectAreaLight){const O=t.get(E);O.color.copy(N).multiplyScalar(I),O.halfWidth.set(E.width*.5,0,0),O.halfHeight.set(0,E.height*.5,0),n.rectArea[g]=O,g++}else if(E.isPointLight){const O=t.get(E);if(O.color.copy(E.color).multiplyScalar(E.intensity),O.distance=E.distance,O.decay=E.decay,E.castShadow){const k=E.shadow,z=e.get(E);z.shadowIntensity=k.intensity,z.shadowBias=k.bias,z.shadowNormalBias=k.normalBias,z.shadowRadius=k.radius,z.shadowMapSize=k.mapSize,z.shadowCameraNear=k.camera.near,z.shadowCameraFar=k.camera.far,n.pointShadow[p]=z,n.pointShadowMap[p]=D,n.pointShadowMatrix[p]=E.shadow.matrix,v++}n.point[p]=O,p++}else if(E.isHemisphereLight){const O=t.get(E);O.skyColor.copy(E.color).multiplyScalar(I),O.groundColor.copy(E.groundColor).multiplyScalar(I),n.hemi[m]=O,m++}}g>0&&(s.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=Mt.LTC_FLOAT_1,n.rectAreaLTC2=Mt.LTC_FLOAT_2):(n.rectAreaLTC1=Mt.LTC_HALF_1,n.rectAreaLTC2=Mt.LTC_HALF_2)),n.ambient[0]=h,n.ambient[1]=u,n.ambient[2]=d;const T=n.hash;(T.directionalLength!==f||T.pointLength!==p||T.spotLength!==_||T.rectAreaLength!==g||T.hemiLength!==m||T.numDirectionalShadows!==x||T.numPointShadows!==v||T.numSpotShadows!==y||T.numSpotMaps!==b||T.numLightProbes!==M)&&(n.directional.length=f,n.spot.length=_,n.rectArea.length=g,n.point.length=p,n.hemi.length=m,n.directionalShadow.length=x,n.directionalShadowMap.length=x,n.pointShadow.length=v,n.pointShadowMap.length=v,n.spotShadow.length=y,n.spotShadowMap.length=y,n.directionalShadowMatrix.length=x,n.pointShadowMatrix.length=v,n.spotLightMatrix.length=y+b-S,n.spotLightMap.length=b,n.numSpotLightShadowsWithMaps=S,n.numLightProbes=M,T.directionalLength=f,T.pointLength=p,T.spotLength=_,T.rectAreaLength=g,T.hemiLength=m,T.numDirectionalShadows=x,T.numPointShadows=v,T.numSpotShadows=y,T.numSpotMaps=b,T.numLightProbes=M,n.version=fG++)}function c(l,h){let u=0,d=0,f=0,p=0,_=0;const g=h.matrixWorldInverse;for(let m=0,x=l.length;m<x;m++){const v=l[m];if(v.isDirectionalLight){const y=n.directional[u];y.direction.setFromMatrixPosition(v.matrixWorld),i.setFromMatrixPosition(v.target.matrixWorld),y.direction.sub(i),y.direction.transformDirection(g),u++}else if(v.isSpotLight){const y=n.spot[f];y.position.setFromMatrixPosition(v.matrixWorld),y.position.applyMatrix4(g),y.direction.setFromMatrixPosition(v.matrixWorld),i.setFromMatrixPosition(v.target.matrixWorld),y.direction.sub(i),y.direction.transformDirection(g),f++}else if(v.isRectAreaLight){const y=n.rectArea[p];y.position.setFromMatrixPosition(v.matrixWorld),y.position.applyMatrix4(g),o.identity(),r.copy(v.matrixWorld),r.premultiply(g),o.extractRotation(r),y.halfWidth.set(v.width*.5,0,0),y.halfHeight.set(0,v.height*.5,0),y.halfWidth.applyMatrix4(o),y.halfHeight.applyMatrix4(o),p++}else if(v.isPointLight){const y=n.point[d];y.position.setFromMatrixPosition(v.matrixWorld),y.position.applyMatrix4(g),d++}else if(v.isHemisphereLight){const y=n.hemi[_];y.direction.setFromMatrixPosition(v.matrixWorld),y.direction.transformDirection(g),_++}}}return{setup:a,setupView:c,state:n}}function wT(s){const t=new mG(s),e=[],n=[];function i(h){l.camera=h,e.length=0,n.length=0}function r(h){e.push(h)}function o(h){n.push(h)}function a(){t.setup(e)}function c(h){t.setupView(e,h)}const l={lightsArray:e,shadowsArray:n,camera:null,lights:t,transmissionRenderTarget:{}};return{init:i,state:l,setupLights:a,setupLightsView:c,pushLight:r,pushShadow:o}}function gG(s){let t=new WeakMap;function e(i,r=0){const o=t.get(i);let a;return o===void 0?(a=new wT(s),t.set(i,[a])):r>=o.length?(a=new wT(s),o.push(a)):a=o[r],a}function n(){t=new WeakMap}return{get:e,dispose:n}}class _G extends hg{static get type(){return"MeshDepthMaterial"}constructor(t){super(),this.isMeshDepthMaterial=!0,this.depthPacking=QU,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class yG extends hg{static get type(){return"MeshDistanceMaterial"}constructor(t){super(),this.isMeshDistanceMaterial=!0,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}const xG=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,vG=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function bG(s,t,e){let n=new lb;const i=new qt,r=new qt,o=new vn,a=new _G({depthPacking:JU}),c=new yG,l={},h=e.maxTextureSize,u={[aa]:fi,[fi]:aa,[kr]:kr},d=new ir({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new qt},radius:{value:4}},vertexShader:xG,fragmentShader:vG}),f=d.clone();f.defines.HORIZONTAL_PASS=1;const p=new Sc;p.setAttribute("position",new er(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const _=new Is(p,d),g=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=XE;let m=this.type;this.render=function(S,M,T){if(g.enabled===!1||g.autoUpdate===!1&&g.needsUpdate===!1||S.length===0)return;const A=s.getRenderTarget(),w=s.getActiveCubeFace(),E=s.getActiveMipmapLevel(),N=s.state;N.setBlending(Zr),N.buffers.color.setClear(1,1,1,1),N.buffers.depth.setTest(!0),N.setScissorTest(!1);const I=m!==Dr&&this.type===Dr,P=m===Dr&&this.type!==Dr;for(let D=0,O=S.length;D<O;D++){const k=S[D],z=k.shadow;if(z===void 0){console.warn("THREE.WebGLShadowMap:",k,"has no shadow.");continue}if(z.autoUpdate===!1&&z.needsUpdate===!1)continue;i.copy(z.mapSize);const Y=z.getFrameExtents();if(i.multiply(Y),r.copy(z.mapSize),(i.x>h||i.y>h)&&(i.x>h&&(r.x=Math.floor(h/Y.x),i.x=r.x*Y.x,z.mapSize.x=r.x),i.y>h&&(r.y=Math.floor(h/Y.y),i.y=r.y*Y.y,z.mapSize.y=r.y)),z.map===null||I===!0||P===!0){const W=this.type!==Dr?{minFilter:Bs,magFilter:Bs}:{};z.map!==null&&z.map.dispose(),z.map=new ca(i.x,i.y,W),z.map.texture.name=k.name+".shadowMap",z.camera.updateProjectionMatrix()}s.setRenderTarget(z.map),s.clear();const U=z.getViewportCount();for(let W=0;W<U;W++){const lt=z.getViewport(W);o.set(r.x*lt.x,r.y*lt.y,r.x*lt.z,r.y*lt.w),N.viewport(o),z.updateMatrices(k,W),n=z.getFrustum(),y(M,T,z.camera,k,this.type)}z.isPointLightShadow!==!0&&this.type===Dr&&x(z,T),z.needsUpdate=!1}m=this.type,g.needsUpdate=!1,s.setRenderTarget(A,w,E)};function x(S,M){const T=t.update(_);d.defines.VSM_SAMPLES!==S.blurSamples&&(d.defines.VSM_SAMPLES=S.blurSamples,f.defines.VSM_SAMPLES=S.blurSamples,d.needsUpdate=!0,f.needsUpdate=!0),S.mapPass===null&&(S.mapPass=new ca(i.x,i.y)),d.uniforms.shadow_pass.value=S.map.texture,d.uniforms.resolution.value=S.mapSize,d.uniforms.radius.value=S.radius,s.setRenderTarget(S.mapPass),s.clear(),s.renderBufferDirect(M,null,T,d,_,null),f.uniforms.shadow_pass.value=S.mapPass.texture,f.uniforms.resolution.value=S.mapSize,f.uniforms.radius.value=S.radius,s.setRenderTarget(S.map),s.clear(),s.renderBufferDirect(M,null,T,f,_,null)}function v(S,M,T,A){let w=null;const E=T.isPointLight===!0?S.customDistanceMaterial:S.customDepthMaterial;if(E!==void 0)w=E;else if(w=T.isPointLight===!0?c:a,s.localClippingEnabled&&M.clipShadows===!0&&Array.isArray(M.clippingPlanes)&&M.clippingPlanes.length!==0||M.displacementMap&&M.displacementScale!==0||M.alphaMap&&M.alphaTest>0||M.map&&M.alphaTest>0){const N=w.uuid,I=M.uuid;let P=l[N];P===void 0&&(P={},l[N]=P);let D=P[I];D===void 0&&(D=w.clone(),P[I]=D,M.addEventListener("dispose",b)),w=D}if(w.visible=M.visible,w.wireframe=M.wireframe,A===Dr?w.side=M.shadowSide!==null?M.shadowSide:M.side:w.side=M.shadowSide!==null?M.shadowSide:u[M.side],w.alphaMap=M.alphaMap,w.alphaTest=M.alphaTest,w.map=M.map,w.clipShadows=M.clipShadows,w.clippingPlanes=M.clippingPlanes,w.clipIntersection=M.clipIntersection,w.displacementMap=M.displacementMap,w.displacementScale=M.displacementScale,w.displacementBias=M.displacementBias,w.wireframeLinewidth=M.wireframeLinewidth,w.linewidth=M.linewidth,T.isPointLight===!0&&w.isMeshDistanceMaterial===!0){const N=s.properties.get(w);N.light=T}return w}function y(S,M,T,A,w){if(S.visible===!1)return;if(S.layers.test(M.layers)&&(S.isMesh||S.isLine||S.isPoints)&&(S.castShadow||S.receiveShadow&&w===Dr)&&(!S.frustumCulled||n.intersectsObject(S))){S.modelViewMatrix.multiplyMatrices(T.matrixWorldInverse,S.matrixWorld);const I=t.update(S),P=S.material;if(Array.isArray(P)){const D=I.groups;for(let O=0,k=D.length;O<k;O++){const z=D[O],Y=P[z.materialIndex];if(Y&&Y.visible){const U=v(S,Y,A,w);S.onBeforeShadow(s,S,M,T,I,U,z),s.renderBufferDirect(T,null,I,U,S,z),S.onAfterShadow(s,S,M,T,I,U,z)}}}else if(P.visible){const D=v(S,P,A,w);S.onBeforeShadow(s,S,M,T,I,D,null),s.renderBufferDirect(T,null,I,D,S,null),S.onAfterShadow(s,S,M,T,I,D,null)}}const N=S.children;for(let I=0,P=N.length;I<P;I++)y(N[I],M,T,A,w)}function b(S){S.target.removeEventListener("dispose",b);for(const T in l){const A=l[T],w=S.target.uuid;w in A&&(A[w].dispose(),delete A[w])}}}const SG={[My]:Ty,[wy]:Cy,[Ay]:Ry,[nh]:Ey,[Ty]:My,[Cy]:wy,[Ry]:Ay,[Ey]:nh};function MG(s,t){function e(){let G=!1;const Ct=new vn;let st=null;const ft=new vn(0,0,0,0);return{setMask:function(It){st!==It&&!G&&(s.colorMask(It,It,It,It),st=It)},setLocked:function(It){G=It},setClear:function(It,Pt,re,sn,Wn){Wn===!0&&(It*=sn,Pt*=sn,re*=sn),Ct.set(It,Pt,re,sn),ft.equals(Ct)===!1&&(s.clearColor(It,Pt,re,sn),ft.copy(Ct))},reset:function(){G=!1,st=null,ft.set(-1,0,0,0)}}}function n(){let G=!1,Ct=!1,st=null,ft=null,It=null;return{setReversed:function(Pt){if(Ct!==Pt){const re=t.get("EXT_clip_control");Ct?re.clipControlEXT(re.LOWER_LEFT_EXT,re.ZERO_TO_ONE_EXT):re.clipControlEXT(re.LOWER_LEFT_EXT,re.NEGATIVE_ONE_TO_ONE_EXT);const sn=It;It=null,this.setClear(sn)}Ct=Pt},getReversed:function(){return Ct},setTest:function(Pt){Pt?at(s.DEPTH_TEST):et(s.DEPTH_TEST)},setMask:function(Pt){st!==Pt&&!G&&(s.depthMask(Pt),st=Pt)},setFunc:function(Pt){if(Ct&&(Pt=SG[Pt]),ft!==Pt){switch(Pt){case My:s.depthFunc(s.NEVER);break;case Ty:s.depthFunc(s.ALWAYS);break;case wy:s.depthFunc(s.LESS);break;case nh:s.depthFunc(s.LEQUAL);break;case Ay:s.depthFunc(s.EQUAL);break;case Ey:s.depthFunc(s.GEQUAL);break;case Cy:s.depthFunc(s.GREATER);break;case Ry:s.depthFunc(s.NOTEQUAL);break;default:s.depthFunc(s.LEQUAL)}ft=Pt}},setLocked:function(Pt){G=Pt},setClear:function(Pt){It!==Pt&&(Ct&&(Pt=1-Pt),s.clearDepth(Pt),It=Pt)},reset:function(){G=!1,st=null,ft=null,It=null,Ct=!1}}}function i(){let G=!1,Ct=null,st=null,ft=null,It=null,Pt=null,re=null,sn=null,Wn=null;return{setTest:function(Fe){G||(Fe?at(s.STENCIL_TEST):et(s.STENCIL_TEST))},setMask:function(Fe){Ct!==Fe&&!G&&(s.stencilMask(Fe),Ct=Fe)},setFunc:function(Fe,hs,dr){(st!==Fe||ft!==hs||It!==dr)&&(s.stencilFunc(Fe,hs,dr),st=Fe,ft=hs,It=dr)},setOp:function(Fe,hs,dr){(Pt!==Fe||re!==hs||sn!==dr)&&(s.stencilOp(Fe,hs,dr),Pt=Fe,re=hs,sn=dr)},setLocked:function(Fe){G=Fe},setClear:function(Fe){Wn!==Fe&&(s.clearStencil(Fe),Wn=Fe)},reset:function(){G=!1,Ct=null,st=null,ft=null,It=null,Pt=null,re=null,sn=null,Wn=null}}}const r=new e,o=new n,a=new i,c=new WeakMap,l=new WeakMap;let h={},u={},d=new WeakMap,f=[],p=null,_=!1,g=null,m=null,x=null,v=null,y=null,b=null,S=null,M=new Ee(0,0,0),T=0,A=!1,w=null,E=null,N=null,I=null,P=null;const D=s.getParameter(s.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let O=!1,k=0;const z=s.getParameter(s.VERSION);z.indexOf("WebGL")!==-1?(k=parseFloat(/^WebGL (\d)/.exec(z)[1]),O=k>=1):z.indexOf("OpenGL ES")!==-1&&(k=parseFloat(/^OpenGL ES (\d)/.exec(z)[1]),O=k>=2);let Y=null,U={};const W=s.getParameter(s.SCISSOR_BOX),lt=s.getParameter(s.VIEWPORT),wt=new vn().fromArray(W),H=new vn().fromArray(lt);function B(G,Ct,st,ft){const It=new Uint8Array(4),Pt=s.createTexture();s.bindTexture(G,Pt),s.texParameteri(G,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri(G,s.TEXTURE_MAG_FILTER,s.NEAREST);for(let re=0;re<st;re++)G===s.TEXTURE_3D||G===s.TEXTURE_2D_ARRAY?s.texImage3D(Ct,0,s.RGBA,1,1,ft,0,s.RGBA,s.UNSIGNED_BYTE,It):s.texImage2D(Ct+re,0,s.RGBA,1,1,0,s.RGBA,s.UNSIGNED_BYTE,It);return Pt}const nt={};nt[s.TEXTURE_2D]=B(s.TEXTURE_2D,s.TEXTURE_2D,1),nt[s.TEXTURE_CUBE_MAP]=B(s.TEXTURE_CUBE_MAP,s.TEXTURE_CUBE_MAP_POSITIVE_X,6),nt[s.TEXTURE_2D_ARRAY]=B(s.TEXTURE_2D_ARRAY,s.TEXTURE_2D_ARRAY,1,1),nt[s.TEXTURE_3D]=B(s.TEXTURE_3D,s.TEXTURE_3D,1,1),r.setClear(0,0,0,1),o.setClear(1),a.setClear(0),at(s.DEPTH_TEST),o.setFunc(nh),mt(!1),Ot(CM),at(s.CULL_FACE),V(Zr);function at(G){h[G]!==!0&&(s.enable(G),h[G]=!0)}function et(G){h[G]!==!1&&(s.disable(G),h[G]=!1)}function Nt(G,Ct){return u[G]!==Ct?(s.bindFramebuffer(G,Ct),u[G]=Ct,G===s.DRAW_FRAMEBUFFER&&(u[s.FRAMEBUFFER]=Ct),G===s.FRAMEBUFFER&&(u[s.DRAW_FRAMEBUFFER]=Ct),!0):!1}function Ft(G,Ct){let st=f,ft=!1;if(G){st=d.get(Ct),st===void 0&&(st=[],d.set(Ct,st));const It=G.textures;if(st.length!==It.length||st[0]!==s.COLOR_ATTACHMENT0){for(let Pt=0,re=It.length;Pt<re;Pt++)st[Pt]=s.COLOR_ATTACHMENT0+Pt;st.length=It.length,ft=!0}}else st[0]!==s.BACK&&(st[0]=s.BACK,ft=!0);ft&&s.drawBuffers(st)}function jt(G){return p!==G?(s.useProgram(G),p=G,!0):!1}const Xt={[Va]:s.FUNC_ADD,[wU]:s.FUNC_SUBTRACT,[AU]:s.FUNC_REVERSE_SUBTRACT};Xt[EU]=s.MIN,Xt[CU]=s.MAX;const Ie={[RU]:s.ZERO,[NU]:s.ONE,[PU]:s.SRC_COLOR,[by]:s.SRC_ALPHA,[BU]:s.SRC_ALPHA_SATURATE,[OU]:s.DST_COLOR,[IU]:s.DST_ALPHA,[DU]:s.ONE_MINUS_SRC_COLOR,[Sy]:s.ONE_MINUS_SRC_ALPHA,[LU]:s.ONE_MINUS_DST_COLOR,[FU]:s.ONE_MINUS_DST_ALPHA,[UU]:s.CONSTANT_COLOR,[kU]:s.ONE_MINUS_CONSTANT_COLOR,[zU]:s.CONSTANT_ALPHA,[VU]:s.ONE_MINUS_CONSTANT_ALPHA};function V(G,Ct,st,ft,It,Pt,re,sn,Wn,Fe){if(G===Zr){_===!0&&(et(s.BLEND),_=!1);return}if(_===!1&&(at(s.BLEND),_=!0),G!==TU){if(G!==g||Fe!==A){if((m!==Va||y!==Va)&&(s.blendEquation(s.FUNC_ADD),m=Va,y=Va),Fe)switch(G){case Ll:s.blendFuncSeparate(s.ONE,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case RM:s.blendFunc(s.ONE,s.ONE);break;case NM:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case PM:s.blendFuncSeparate(s.ZERO,s.SRC_COLOR,s.ZERO,s.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",G);break}else switch(G){case Ll:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case RM:s.blendFunc(s.SRC_ALPHA,s.ONE);break;case NM:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case PM:s.blendFunc(s.ZERO,s.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",G);break}x=null,v=null,b=null,S=null,M.set(0,0,0),T=0,g=G,A=Fe}return}It=It||Ct,Pt=Pt||st,re=re||ft,(Ct!==m||It!==y)&&(s.blendEquationSeparate(Xt[Ct],Xt[It]),m=Ct,y=It),(st!==x||ft!==v||Pt!==b||re!==S)&&(s.blendFuncSeparate(Ie[st],Ie[ft],Ie[Pt],Ie[re]),x=st,v=ft,b=Pt,S=re),(sn.equals(M)===!1||Wn!==T)&&(s.blendColor(sn.r,sn.g,sn.b,Wn),M.copy(sn),T=Wn),g=G,A=!1}function gt(G,Ct){G.side===kr?et(s.CULL_FACE):at(s.CULL_FACE);let st=G.side===fi;Ct&&(st=!st),mt(st),G.blending===Ll&&G.transparent===!1?V(Zr):V(G.blending,G.blendEquation,G.blendSrc,G.blendDst,G.blendEquationAlpha,G.blendSrcAlpha,G.blendDstAlpha,G.blendColor,G.blendAlpha,G.premultipliedAlpha),o.setFunc(G.depthFunc),o.setTest(G.depthTest),o.setMask(G.depthWrite),r.setMask(G.colorWrite);const ft=G.stencilWrite;a.setTest(ft),ft&&(a.setMask(G.stencilWriteMask),a.setFunc(G.stencilFunc,G.stencilRef,G.stencilFuncMask),a.setOp(G.stencilFail,G.stencilZFail,G.stencilZPass)),Ht(G.polygonOffset,G.polygonOffsetFactor,G.polygonOffsetUnits),G.alphaToCoverage===!0?at(s.SAMPLE_ALPHA_TO_COVERAGE):et(s.SAMPLE_ALPHA_TO_COVERAGE)}function mt(G){w!==G&&(G?s.frontFace(s.CW):s.frontFace(s.CCW),w=G)}function Ot(G){G!==bU?(at(s.CULL_FACE),G!==E&&(G===CM?s.cullFace(s.BACK):G===SU?s.cullFace(s.FRONT):s.cullFace(s.FRONT_AND_BACK))):et(s.CULL_FACE),E=G}function St(G){G!==N&&(O&&s.lineWidth(G),N=G)}function Ht(G,Ct,st){G?(at(s.POLYGON_OFFSET_FILL),(I!==Ct||P!==st)&&(s.polygonOffset(Ct,st),I=Ct,P=st)):et(s.POLYGON_OFFSET_FILL)}function Et(G){G?at(s.SCISSOR_TEST):et(s.SCISSOR_TEST)}function F(G){G===void 0&&(G=s.TEXTURE0+D-1),Y!==G&&(s.activeTexture(G),Y=G)}function C(G,Ct,st){st===void 0&&(Y===null?st=s.TEXTURE0+D-1:st=Y);let ft=U[st];ft===void 0&&(ft={type:void 0,texture:void 0},U[st]=ft),(ft.type!==G||ft.texture!==Ct)&&(Y!==st&&(s.activeTexture(st),Y=st),s.bindTexture(G,Ct||nt[G]),ft.type=G,ft.texture=Ct)}function K(){const G=U[Y];G!==void 0&&G.type!==void 0&&(s.bindTexture(G.type,null),G.type=void 0,G.texture=void 0)}function dt(){try{s.compressedTexImage2D.apply(s,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function pt(){try{s.compressedTexImage3D.apply(s,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function ht(){try{s.texSubImage2D.apply(s,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function $t(){try{s.texSubImage3D.apply(s,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Rt(){try{s.compressedTexSubImage2D.apply(s,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Lt(){try{s.compressedTexSubImage3D.apply(s,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function ve(){try{s.texStorage2D.apply(s,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function yt(){try{s.texStorage3D.apply(s,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Bt(){try{s.texImage2D.apply(s,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Kt(){try{s.texImage3D.apply(s,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Qt(G){wt.equals(G)===!1&&(s.scissor(G.x,G.y,G.z,G.w),wt.copy(G))}function Ut(G){H.equals(G)===!1&&(s.viewport(G.x,G.y,G.z,G.w),H.copy(G))}function ye(G,Ct){let st=l.get(Ct);st===void 0&&(st=new WeakMap,l.set(Ct,st));let ft=st.get(G);ft===void 0&&(ft=s.getUniformBlockIndex(Ct,G.name),st.set(G,ft))}function ae(G,Ct){const ft=l.get(Ct).get(G);c.get(Ct)!==ft&&(s.uniformBlockBinding(Ct,ft,G.__bindingPointIndex),c.set(Ct,ft))}function ze(){s.disable(s.BLEND),s.disable(s.CULL_FACE),s.disable(s.DEPTH_TEST),s.disable(s.POLYGON_OFFSET_FILL),s.disable(s.SCISSOR_TEST),s.disable(s.STENCIL_TEST),s.disable(s.SAMPLE_ALPHA_TO_COVERAGE),s.blendEquation(s.FUNC_ADD),s.blendFunc(s.ONE,s.ZERO),s.blendFuncSeparate(s.ONE,s.ZERO,s.ONE,s.ZERO),s.blendColor(0,0,0,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(s.LESS),o.setReversed(!1),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(s.ALWAYS,0,4294967295),s.stencilOp(s.KEEP,s.KEEP,s.KEEP),s.clearStencil(0),s.cullFace(s.BACK),s.frontFace(s.CCW),s.polygonOffset(0,0),s.activeTexture(s.TEXTURE0),s.bindFramebuffer(s.FRAMEBUFFER,null),s.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),s.bindFramebuffer(s.READ_FRAMEBUFFER,null),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),h={},Y=null,U={},u={},d=new WeakMap,f=[],p=null,_=!1,g=null,m=null,x=null,v=null,y=null,b=null,S=null,M=new Ee(0,0,0),T=0,A=!1,w=null,E=null,N=null,I=null,P=null,wt.set(0,0,s.canvas.width,s.canvas.height),H.set(0,0,s.canvas.width,s.canvas.height),r.reset(),o.reset(),a.reset()}return{buffers:{color:r,depth:o,stencil:a},enable:at,disable:et,bindFramebuffer:Nt,drawBuffers:Ft,useProgram:jt,setBlending:V,setMaterial:gt,setFlipSided:mt,setCullFace:Ot,setLineWidth:St,setPolygonOffset:Ht,setScissorTest:Et,activeTexture:F,bindTexture:C,unbindTexture:K,compressedTexImage2D:dt,compressedTexImage3D:pt,texImage2D:Bt,texImage3D:Kt,updateUBOMapping:ye,uniformBlockBinding:ae,texStorage2D:ve,texStorage3D:yt,texSubImage2D:ht,texSubImage3D:$t,compressedTexSubImage2D:Rt,compressedTexSubImage3D:Lt,scissor:Qt,viewport:Ut,reset:ze}}function AT(s,t,e,n){const i=TG(n);switch(e){case tC:return s*t;case nC:return s*t;case iC:return s*t*2;case sC:return s*t/i.components*i.byteLength;case tb:return s*t/i.components*i.byteLength;case rC:return s*t*2/i.components*i.byteLength;case eb:return s*t*2/i.components*i.byteLength;case eC:return s*t*3/i.components*i.byteLength;case Ds:return s*t*4/i.components*i.byteLength;case nb:return s*t*4/i.components*i.byteLength;case Dp:case Ip:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*8;case Fp:case Op:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*16;case Oy:case By:return Math.max(s,16)*Math.max(t,8)/4;case Fy:case Ly:return Math.max(s,8)*Math.max(t,8)/2;case Uy:case ky:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*8;case zy:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*16;case Vy:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*16;case Gy:return Math.floor((s+4)/5)*Math.floor((t+3)/4)*16;case Hy:return Math.floor((s+4)/5)*Math.floor((t+4)/5)*16;case $y:return Math.floor((s+5)/6)*Math.floor((t+4)/5)*16;case Wy:return Math.floor((s+5)/6)*Math.floor((t+5)/6)*16;case qy:return Math.floor((s+7)/8)*Math.floor((t+4)/5)*16;case jy:return Math.floor((s+7)/8)*Math.floor((t+5)/6)*16;case Xy:return Math.floor((s+7)/8)*Math.floor((t+7)/8)*16;case Yy:return Math.floor((s+9)/10)*Math.floor((t+4)/5)*16;case Zy:return Math.floor((s+9)/10)*Math.floor((t+5)/6)*16;case Ky:return Math.floor((s+9)/10)*Math.floor((t+7)/8)*16;case Qy:return Math.floor((s+9)/10)*Math.floor((t+9)/10)*16;case Jy:return Math.floor((s+11)/12)*Math.floor((t+9)/10)*16;case tx:return Math.floor((s+11)/12)*Math.floor((t+11)/12)*16;case Lp:case ex:case nx:return Math.ceil(s/4)*Math.ceil(t/4)*16;case oC:case ix:return Math.ceil(s/4)*Math.ceil(t/4)*8;case sx:case rx:return Math.ceil(s/4)*Math.ceil(t/4)*16}throw new Error(`Unable to determine texture byte length for ${e} format.`)}function TG(s){switch(s){case ao:case KE:return{byteLength:1,components:1};case Ju:case QE:case wh:return{byteLength:2,components:1};case Qv:case Jv:return{byteLength:2,components:4};case lc:case Kv:case Wr:return{byteLength:4,components:1};case JE:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${s}.`)}function wG(s,t,e,n,i,r,o){const a=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,c=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),l=new qt,h=new WeakMap;let u;const d=new WeakMap;let f=!1;try{f=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function p(F,C){return f?new OffscreenCanvas(F,C):ed("canvas")}function _(F,C,K){let dt=1;const pt=Et(F);if((pt.width>K||pt.height>K)&&(dt=K/Math.max(pt.width,pt.height)),dt<1)if(typeof HTMLImageElement<"u"&&F instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&F instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&F instanceof ImageBitmap||typeof VideoFrame<"u"&&F instanceof VideoFrame){const ht=Math.floor(dt*pt.width),$t=Math.floor(dt*pt.height);u===void 0&&(u=p(ht,$t));const Rt=C?p(ht,$t):u;return Rt.width=ht,Rt.height=$t,Rt.getContext("2d").drawImage(F,0,0,ht,$t),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+pt.width+"x"+pt.height+") to ("+ht+"x"+$t+")."),Rt}else return"data"in F&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+pt.width+"x"+pt.height+")."),F;return F}function g(F){return F.generateMipmaps}function m(F){s.generateMipmap(F)}function x(F){return F.isWebGLCubeRenderTarget?s.TEXTURE_CUBE_MAP:F.isWebGL3DRenderTarget?s.TEXTURE_3D:F.isWebGLArrayRenderTarget||F.isCompressedArrayTexture?s.TEXTURE_2D_ARRAY:s.TEXTURE_2D}function v(F,C,K,dt,pt=!1){if(F!==null){if(s[F]!==void 0)return s[F];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+F+"'")}let ht=C;if(C===s.RED&&(K===s.FLOAT&&(ht=s.R32F),K===s.HALF_FLOAT&&(ht=s.R16F),K===s.UNSIGNED_BYTE&&(ht=s.R8)),C===s.RED_INTEGER&&(K===s.UNSIGNED_BYTE&&(ht=s.R8UI),K===s.UNSIGNED_SHORT&&(ht=s.R16UI),K===s.UNSIGNED_INT&&(ht=s.R32UI),K===s.BYTE&&(ht=s.R8I),K===s.SHORT&&(ht=s.R16I),K===s.INT&&(ht=s.R32I)),C===s.RG&&(K===s.FLOAT&&(ht=s.RG32F),K===s.HALF_FLOAT&&(ht=s.RG16F),K===s.UNSIGNED_BYTE&&(ht=s.RG8)),C===s.RG_INTEGER&&(K===s.UNSIGNED_BYTE&&(ht=s.RG8UI),K===s.UNSIGNED_SHORT&&(ht=s.RG16UI),K===s.UNSIGNED_INT&&(ht=s.RG32UI),K===s.BYTE&&(ht=s.RG8I),K===s.SHORT&&(ht=s.RG16I),K===s.INT&&(ht=s.RG32I)),C===s.RGB_INTEGER&&(K===s.UNSIGNED_BYTE&&(ht=s.RGB8UI),K===s.UNSIGNED_SHORT&&(ht=s.RGB16UI),K===s.UNSIGNED_INT&&(ht=s.RGB32UI),K===s.BYTE&&(ht=s.RGB8I),K===s.SHORT&&(ht=s.RGB16I),K===s.INT&&(ht=s.RGB32I)),C===s.RGBA_INTEGER&&(K===s.UNSIGNED_BYTE&&(ht=s.RGBA8UI),K===s.UNSIGNED_SHORT&&(ht=s.RGBA16UI),K===s.UNSIGNED_INT&&(ht=s.RGBA32UI),K===s.BYTE&&(ht=s.RGBA8I),K===s.SHORT&&(ht=s.RGBA16I),K===s.INT&&(ht=s.RGBA32I)),C===s.RGB&&K===s.UNSIGNED_INT_5_9_9_9_REV&&(ht=s.RGB9_E5),C===s.RGBA){const $t=pt?lg:be.getTransfer(dt);K===s.FLOAT&&(ht=s.RGBA32F),K===s.HALF_FLOAT&&(ht=s.RGBA16F),K===s.UNSIGNED_BYTE&&(ht=$t===Oe?s.SRGB8_ALPHA8:s.RGBA8),K===s.UNSIGNED_SHORT_4_4_4_4&&(ht=s.RGBA4),K===s.UNSIGNED_SHORT_5_5_5_1&&(ht=s.RGB5_A1)}return(ht===s.R16F||ht===s.R32F||ht===s.RG16F||ht===s.RG32F||ht===s.RGBA16F||ht===s.RGBA32F)&&t.get("EXT_color_buffer_float"),ht}function y(F,C){let K;return F?C===null||C===lc||C===rh?K=s.DEPTH24_STENCIL8:C===Wr?K=s.DEPTH32F_STENCIL8:C===Ju&&(K=s.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):C===null||C===lc||C===rh?K=s.DEPTH_COMPONENT24:C===Wr?K=s.DEPTH_COMPONENT32F:C===Ju&&(K=s.DEPTH_COMPONENT16),K}function b(F,C){return g(F)===!0||F.isFramebufferTexture&&F.minFilter!==Bs&&F.minFilter!==Ks?Math.log2(Math.max(C.width,C.height))+1:F.mipmaps!==void 0&&F.mipmaps.length>0?F.mipmaps.length:F.isCompressedTexture&&Array.isArray(F.image)?C.mipmaps.length:1}function S(F){const C=F.target;C.removeEventListener("dispose",S),T(C),C.isVideoTexture&&h.delete(C)}function M(F){const C=F.target;C.removeEventListener("dispose",M),w(C)}function T(F){const C=n.get(F);if(C.__webglInit===void 0)return;const K=F.source,dt=d.get(K);if(dt){const pt=dt[C.__cacheKey];pt.usedTimes--,pt.usedTimes===0&&A(F),Object.keys(dt).length===0&&d.delete(K)}n.remove(F)}function A(F){const C=n.get(F);s.deleteTexture(C.__webglTexture);const K=F.source,dt=d.get(K);delete dt[C.__cacheKey],o.memory.textures--}function w(F){const C=n.get(F);if(F.depthTexture&&(F.depthTexture.dispose(),n.remove(F.depthTexture)),F.isWebGLCubeRenderTarget)for(let dt=0;dt<6;dt++){if(Array.isArray(C.__webglFramebuffer[dt]))for(let pt=0;pt<C.__webglFramebuffer[dt].length;pt++)s.deleteFramebuffer(C.__webglFramebuffer[dt][pt]);else s.deleteFramebuffer(C.__webglFramebuffer[dt]);C.__webglDepthbuffer&&s.deleteRenderbuffer(C.__webglDepthbuffer[dt])}else{if(Array.isArray(C.__webglFramebuffer))for(let dt=0;dt<C.__webglFramebuffer.length;dt++)s.deleteFramebuffer(C.__webglFramebuffer[dt]);else s.deleteFramebuffer(C.__webglFramebuffer);if(C.__webglDepthbuffer&&s.deleteRenderbuffer(C.__webglDepthbuffer),C.__webglMultisampledFramebuffer&&s.deleteFramebuffer(C.__webglMultisampledFramebuffer),C.__webglColorRenderbuffer)for(let dt=0;dt<C.__webglColorRenderbuffer.length;dt++)C.__webglColorRenderbuffer[dt]&&s.deleteRenderbuffer(C.__webglColorRenderbuffer[dt]);C.__webglDepthRenderbuffer&&s.deleteRenderbuffer(C.__webglDepthRenderbuffer)}const K=F.textures;for(let dt=0,pt=K.length;dt<pt;dt++){const ht=n.get(K[dt]);ht.__webglTexture&&(s.deleteTexture(ht.__webglTexture),o.memory.textures--),n.remove(K[dt])}n.remove(F)}let E=0;function N(){E=0}function I(){const F=E;return F>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+F+" texture units while this GPU supports only "+i.maxTextures),E+=1,F}function P(F){const C=[];return C.push(F.wrapS),C.push(F.wrapT),C.push(F.wrapR||0),C.push(F.magFilter),C.push(F.minFilter),C.push(F.anisotropy),C.push(F.internalFormat),C.push(F.format),C.push(F.type),C.push(F.generateMipmaps),C.push(F.premultiplyAlpha),C.push(F.flipY),C.push(F.unpackAlignment),C.push(F.colorSpace),C.join()}function D(F,C){const K=n.get(F);if(F.isVideoTexture&&St(F),F.isRenderTargetTexture===!1&&F.version>0&&K.__version!==F.version){const dt=F.image;if(dt===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(dt.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{H(K,F,C);return}}e.bindTexture(s.TEXTURE_2D,K.__webglTexture,s.TEXTURE0+C)}function O(F,C){const K=n.get(F);if(F.version>0&&K.__version!==F.version){H(K,F,C);return}e.bindTexture(s.TEXTURE_2D_ARRAY,K.__webglTexture,s.TEXTURE0+C)}function k(F,C){const K=n.get(F);if(F.version>0&&K.__version!==F.version){H(K,F,C);return}e.bindTexture(s.TEXTURE_3D,K.__webglTexture,s.TEXTURE0+C)}function z(F,C){const K=n.get(F);if(F.version>0&&K.__version!==F.version){B(K,F,C);return}e.bindTexture(s.TEXTURE_CUBE_MAP,K.__webglTexture,s.TEXTURE0+C)}const Y={[Dy]:s.REPEAT,[Xa]:s.CLAMP_TO_EDGE,[Iy]:s.MIRRORED_REPEAT},U={[Bs]:s.NEAREST,[KU]:s.NEAREST_MIPMAP_NEAREST,[yf]:s.NEAREST_MIPMAP_LINEAR,[Ks]:s.LINEAR,[d_]:s.LINEAR_MIPMAP_NEAREST,[Ya]:s.LINEAR_MIPMAP_LINEAR},W={[n3]:s.NEVER,[c3]:s.ALWAYS,[i3]:s.LESS,[aC]:s.LEQUAL,[s3]:s.EQUAL,[a3]:s.GEQUAL,[r3]:s.GREATER,[o3]:s.NOTEQUAL};function lt(F,C){if(C.type===Wr&&t.has("OES_texture_float_linear")===!1&&(C.magFilter===Ks||C.magFilter===d_||C.magFilter===yf||C.magFilter===Ya||C.minFilter===Ks||C.minFilter===d_||C.minFilter===yf||C.minFilter===Ya)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),s.texParameteri(F,s.TEXTURE_WRAP_S,Y[C.wrapS]),s.texParameteri(F,s.TEXTURE_WRAP_T,Y[C.wrapT]),(F===s.TEXTURE_3D||F===s.TEXTURE_2D_ARRAY)&&s.texParameteri(F,s.TEXTURE_WRAP_R,Y[C.wrapR]),s.texParameteri(F,s.TEXTURE_MAG_FILTER,U[C.magFilter]),s.texParameteri(F,s.TEXTURE_MIN_FILTER,U[C.minFilter]),C.compareFunction&&(s.texParameteri(F,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(F,s.TEXTURE_COMPARE_FUNC,W[C.compareFunction])),t.has("EXT_texture_filter_anisotropic")===!0){if(C.magFilter===Bs||C.minFilter!==yf&&C.minFilter!==Ya||C.type===Wr&&t.has("OES_texture_float_linear")===!1)return;if(C.anisotropy>1||n.get(C).__currentAnisotropy){const K=t.get("EXT_texture_filter_anisotropic");s.texParameterf(F,K.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(C.anisotropy,i.getMaxAnisotropy())),n.get(C).__currentAnisotropy=C.anisotropy}}}function wt(F,C){let K=!1;F.__webglInit===void 0&&(F.__webglInit=!0,C.addEventListener("dispose",S));const dt=C.source;let pt=d.get(dt);pt===void 0&&(pt={},d.set(dt,pt));const ht=P(C);if(ht!==F.__cacheKey){pt[ht]===void 0&&(pt[ht]={texture:s.createTexture(),usedTimes:0},o.memory.textures++,K=!0),pt[ht].usedTimes++;const $t=pt[F.__cacheKey];$t!==void 0&&(pt[F.__cacheKey].usedTimes--,$t.usedTimes===0&&A(C)),F.__cacheKey=ht,F.__webglTexture=pt[ht].texture}return K}function H(F,C,K){let dt=s.TEXTURE_2D;(C.isDataArrayTexture||C.isCompressedArrayTexture)&&(dt=s.TEXTURE_2D_ARRAY),C.isData3DTexture&&(dt=s.TEXTURE_3D);const pt=wt(F,C),ht=C.source;e.bindTexture(dt,F.__webglTexture,s.TEXTURE0+K);const $t=n.get(ht);if(ht.version!==$t.__version||pt===!0){e.activeTexture(s.TEXTURE0+K);const Rt=be.getPrimaries(be.workingColorSpace),Lt=C.colorSpace===jo?null:be.getPrimaries(C.colorSpace),ve=C.colorSpace===jo||Rt===Lt?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,C.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,C.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,C.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,ve);let yt=_(C.image,!1,i.maxTextureSize);yt=Ht(C,yt);const Bt=r.convert(C.format,C.colorSpace),Kt=r.convert(C.type);let Qt=v(C.internalFormat,Bt,Kt,C.colorSpace,C.isVideoTexture);lt(dt,C);let Ut;const ye=C.mipmaps,ae=C.isVideoTexture!==!0,ze=$t.__version===void 0||pt===!0,G=ht.dataReady,Ct=b(C,yt);if(C.isDepthTexture)Qt=y(C.format===oh,C.type),ze&&(ae?e.texStorage2D(s.TEXTURE_2D,1,Qt,yt.width,yt.height):e.texImage2D(s.TEXTURE_2D,0,Qt,yt.width,yt.height,0,Bt,Kt,null));else if(C.isDataTexture)if(ye.length>0){ae&&ze&&e.texStorage2D(s.TEXTURE_2D,Ct,Qt,ye[0].width,ye[0].height);for(let st=0,ft=ye.length;st<ft;st++)Ut=ye[st],ae?G&&e.texSubImage2D(s.TEXTURE_2D,st,0,0,Ut.width,Ut.height,Bt,Kt,Ut.data):e.texImage2D(s.TEXTURE_2D,st,Qt,Ut.width,Ut.height,0,Bt,Kt,Ut.data);C.generateMipmaps=!1}else ae?(ze&&e.texStorage2D(s.TEXTURE_2D,Ct,Qt,yt.width,yt.height),G&&e.texSubImage2D(s.TEXTURE_2D,0,0,0,yt.width,yt.height,Bt,Kt,yt.data)):e.texImage2D(s.TEXTURE_2D,0,Qt,yt.width,yt.height,0,Bt,Kt,yt.data);else if(C.isCompressedTexture)if(C.isCompressedArrayTexture){ae&&ze&&e.texStorage3D(s.TEXTURE_2D_ARRAY,Ct,Qt,ye[0].width,ye[0].height,yt.depth);for(let st=0,ft=ye.length;st<ft;st++)if(Ut=ye[st],C.format!==Ds)if(Bt!==null)if(ae){if(G)if(C.layerUpdates.size>0){const It=AT(Ut.width,Ut.height,C.format,C.type);for(const Pt of C.layerUpdates){const re=Ut.data.subarray(Pt*It/Ut.data.BYTES_PER_ELEMENT,(Pt+1)*It/Ut.data.BYTES_PER_ELEMENT);e.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,st,0,0,Pt,Ut.width,Ut.height,1,Bt,re)}C.clearLayerUpdates()}else e.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,st,0,0,0,Ut.width,Ut.height,yt.depth,Bt,Ut.data)}else e.compressedTexImage3D(s.TEXTURE_2D_ARRAY,st,Qt,Ut.width,Ut.height,yt.depth,0,Ut.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else ae?G&&e.texSubImage3D(s.TEXTURE_2D_ARRAY,st,0,0,0,Ut.width,Ut.height,yt.depth,Bt,Kt,Ut.data):e.texImage3D(s.TEXTURE_2D_ARRAY,st,Qt,Ut.width,Ut.height,yt.depth,0,Bt,Kt,Ut.data)}else{ae&&ze&&e.texStorage2D(s.TEXTURE_2D,Ct,Qt,ye[0].width,ye[0].height);for(let st=0,ft=ye.length;st<ft;st++)Ut=ye[st],C.format!==Ds?Bt!==null?ae?G&&e.compressedTexSubImage2D(s.TEXTURE_2D,st,0,0,Ut.width,Ut.height,Bt,Ut.data):e.compressedTexImage2D(s.TEXTURE_2D,st,Qt,Ut.width,Ut.height,0,Ut.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):ae?G&&e.texSubImage2D(s.TEXTURE_2D,st,0,0,Ut.width,Ut.height,Bt,Kt,Ut.data):e.texImage2D(s.TEXTURE_2D,st,Qt,Ut.width,Ut.height,0,Bt,Kt,Ut.data)}else if(C.isDataArrayTexture)if(ae){if(ze&&e.texStorage3D(s.TEXTURE_2D_ARRAY,Ct,Qt,yt.width,yt.height,yt.depth),G)if(C.layerUpdates.size>0){const st=AT(yt.width,yt.height,C.format,C.type);for(const ft of C.layerUpdates){const It=yt.data.subarray(ft*st/yt.data.BYTES_PER_ELEMENT,(ft+1)*st/yt.data.BYTES_PER_ELEMENT);e.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,ft,yt.width,yt.height,1,Bt,Kt,It)}C.clearLayerUpdates()}else e.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,yt.width,yt.height,yt.depth,Bt,Kt,yt.data)}else e.texImage3D(s.TEXTURE_2D_ARRAY,0,Qt,yt.width,yt.height,yt.depth,0,Bt,Kt,yt.data);else if(C.isData3DTexture)ae?(ze&&e.texStorage3D(s.TEXTURE_3D,Ct,Qt,yt.width,yt.height,yt.depth),G&&e.texSubImage3D(s.TEXTURE_3D,0,0,0,0,yt.width,yt.height,yt.depth,Bt,Kt,yt.data)):e.texImage3D(s.TEXTURE_3D,0,Qt,yt.width,yt.height,yt.depth,0,Bt,Kt,yt.data);else if(C.isFramebufferTexture){if(ze)if(ae)e.texStorage2D(s.TEXTURE_2D,Ct,Qt,yt.width,yt.height);else{let st=yt.width,ft=yt.height;for(let It=0;It<Ct;It++)e.texImage2D(s.TEXTURE_2D,It,Qt,st,ft,0,Bt,Kt,null),st>>=1,ft>>=1}}else if(ye.length>0){if(ae&&ze){const st=Et(ye[0]);e.texStorage2D(s.TEXTURE_2D,Ct,Qt,st.width,st.height)}for(let st=0,ft=ye.length;st<ft;st++)Ut=ye[st],ae?G&&e.texSubImage2D(s.TEXTURE_2D,st,0,0,Bt,Kt,Ut):e.texImage2D(s.TEXTURE_2D,st,Qt,Bt,Kt,Ut);C.generateMipmaps=!1}else if(ae){if(ze){const st=Et(yt);e.texStorage2D(s.TEXTURE_2D,Ct,Qt,st.width,st.height)}G&&e.texSubImage2D(s.TEXTURE_2D,0,0,0,Bt,Kt,yt)}else e.texImage2D(s.TEXTURE_2D,0,Qt,Bt,Kt,yt);g(C)&&m(dt),$t.__version=ht.version,C.onUpdate&&C.onUpdate(C)}F.__version=C.version}function B(F,C,K){if(C.image.length!==6)return;const dt=wt(F,C),pt=C.source;e.bindTexture(s.TEXTURE_CUBE_MAP,F.__webglTexture,s.TEXTURE0+K);const ht=n.get(pt);if(pt.version!==ht.__version||dt===!0){e.activeTexture(s.TEXTURE0+K);const $t=be.getPrimaries(be.workingColorSpace),Rt=C.colorSpace===jo?null:be.getPrimaries(C.colorSpace),Lt=C.colorSpace===jo||$t===Rt?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,C.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,C.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,C.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,Lt);const ve=C.isCompressedTexture||C.image[0].isCompressedTexture,yt=C.image[0]&&C.image[0].isDataTexture,Bt=[];for(let ft=0;ft<6;ft++)!ve&&!yt?Bt[ft]=_(C.image[ft],!0,i.maxCubemapSize):Bt[ft]=yt?C.image[ft].image:C.image[ft],Bt[ft]=Ht(C,Bt[ft]);const Kt=Bt[0],Qt=r.convert(C.format,C.colorSpace),Ut=r.convert(C.type),ye=v(C.internalFormat,Qt,Ut,C.colorSpace),ae=C.isVideoTexture!==!0,ze=ht.__version===void 0||dt===!0,G=pt.dataReady;let Ct=b(C,Kt);lt(s.TEXTURE_CUBE_MAP,C);let st;if(ve){ae&&ze&&e.texStorage2D(s.TEXTURE_CUBE_MAP,Ct,ye,Kt.width,Kt.height);for(let ft=0;ft<6;ft++){st=Bt[ft].mipmaps;for(let It=0;It<st.length;It++){const Pt=st[It];C.format!==Ds?Qt!==null?ae?G&&e.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ft,It,0,0,Pt.width,Pt.height,Qt,Pt.data):e.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ft,It,ye,Pt.width,Pt.height,0,Pt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):ae?G&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ft,It,0,0,Pt.width,Pt.height,Qt,Ut,Pt.data):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ft,It,ye,Pt.width,Pt.height,0,Qt,Ut,Pt.data)}}}else{if(st=C.mipmaps,ae&&ze){st.length>0&&Ct++;const ft=Et(Bt[0]);e.texStorage2D(s.TEXTURE_CUBE_MAP,Ct,ye,ft.width,ft.height)}for(let ft=0;ft<6;ft++)if(yt){ae?G&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ft,0,0,0,Bt[ft].width,Bt[ft].height,Qt,Ut,Bt[ft].data):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ft,0,ye,Bt[ft].width,Bt[ft].height,0,Qt,Ut,Bt[ft].data);for(let It=0;It<st.length;It++){const re=st[It].image[ft].image;ae?G&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ft,It+1,0,0,re.width,re.height,Qt,Ut,re.data):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ft,It+1,ye,re.width,re.height,0,Qt,Ut,re.data)}}else{ae?G&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ft,0,0,0,Qt,Ut,Bt[ft]):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ft,0,ye,Qt,Ut,Bt[ft]);for(let It=0;It<st.length;It++){const Pt=st[It];ae?G&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ft,It+1,0,0,Qt,Ut,Pt.image[ft]):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ft,It+1,ye,Qt,Ut,Pt.image[ft])}}}g(C)&&m(s.TEXTURE_CUBE_MAP),ht.__version=pt.version,C.onUpdate&&C.onUpdate(C)}F.__version=C.version}function nt(F,C,K,dt,pt,ht){const $t=r.convert(K.format,K.colorSpace),Rt=r.convert(K.type),Lt=v(K.internalFormat,$t,Rt,K.colorSpace),ve=n.get(C),yt=n.get(K);if(yt.__renderTarget=C,!ve.__hasExternalTextures){const Bt=Math.max(1,C.width>>ht),Kt=Math.max(1,C.height>>ht);pt===s.TEXTURE_3D||pt===s.TEXTURE_2D_ARRAY?e.texImage3D(pt,ht,Lt,Bt,Kt,C.depth,0,$t,Rt,null):e.texImage2D(pt,ht,Lt,Bt,Kt,0,$t,Rt,null)}e.bindFramebuffer(s.FRAMEBUFFER,F),Ot(C)?a.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,dt,pt,yt.__webglTexture,0,mt(C)):(pt===s.TEXTURE_2D||pt>=s.TEXTURE_CUBE_MAP_POSITIVE_X&&pt<=s.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&s.framebufferTexture2D(s.FRAMEBUFFER,dt,pt,yt.__webglTexture,ht),e.bindFramebuffer(s.FRAMEBUFFER,null)}function at(F,C,K){if(s.bindRenderbuffer(s.RENDERBUFFER,F),C.depthBuffer){const dt=C.depthTexture,pt=dt&&dt.isDepthTexture?dt.type:null,ht=y(C.stencilBuffer,pt),$t=C.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,Rt=mt(C);Ot(C)?a.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,Rt,ht,C.width,C.height):K?s.renderbufferStorageMultisample(s.RENDERBUFFER,Rt,ht,C.width,C.height):s.renderbufferStorage(s.RENDERBUFFER,ht,C.width,C.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,$t,s.RENDERBUFFER,F)}else{const dt=C.textures;for(let pt=0;pt<dt.length;pt++){const ht=dt[pt],$t=r.convert(ht.format,ht.colorSpace),Rt=r.convert(ht.type),Lt=v(ht.internalFormat,$t,Rt,ht.colorSpace),ve=mt(C);K&&Ot(C)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,ve,Lt,C.width,C.height):Ot(C)?a.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,ve,Lt,C.width,C.height):s.renderbufferStorage(s.RENDERBUFFER,Lt,C.width,C.height)}}s.bindRenderbuffer(s.RENDERBUFFER,null)}function et(F,C){if(C&&C.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(s.FRAMEBUFFER,F),!(C.depthTexture&&C.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const dt=n.get(C.depthTexture);dt.__renderTarget=C,(!dt.__webglTexture||C.depthTexture.image.width!==C.width||C.depthTexture.image.height!==C.height)&&(C.depthTexture.image.width=C.width,C.depthTexture.image.height=C.height,C.depthTexture.needsUpdate=!0),D(C.depthTexture,0);const pt=dt.__webglTexture,ht=mt(C);if(C.depthTexture.format===Bl)Ot(C)?a.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,pt,0,ht):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,pt,0);else if(C.depthTexture.format===oh)Ot(C)?a.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,pt,0,ht):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,pt,0);else throw new Error("Unknown depthTexture format")}function Nt(F){const C=n.get(F),K=F.isWebGLCubeRenderTarget===!0;if(C.__boundDepthTexture!==F.depthTexture){const dt=F.depthTexture;if(C.__depthDisposeCallback&&C.__depthDisposeCallback(),dt){const pt=()=>{delete C.__boundDepthTexture,delete C.__depthDisposeCallback,dt.removeEventListener("dispose",pt)};dt.addEventListener("dispose",pt),C.__depthDisposeCallback=pt}C.__boundDepthTexture=dt}if(F.depthTexture&&!C.__autoAllocateDepthBuffer){if(K)throw new Error("target.depthTexture not supported in Cube render targets");et(C.__webglFramebuffer,F)}else if(K){C.__webglDepthbuffer=[];for(let dt=0;dt<6;dt++)if(e.bindFramebuffer(s.FRAMEBUFFER,C.__webglFramebuffer[dt]),C.__webglDepthbuffer[dt]===void 0)C.__webglDepthbuffer[dt]=s.createRenderbuffer(),at(C.__webglDepthbuffer[dt],F,!1);else{const pt=F.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,ht=C.__webglDepthbuffer[dt];s.bindRenderbuffer(s.RENDERBUFFER,ht),s.framebufferRenderbuffer(s.FRAMEBUFFER,pt,s.RENDERBUFFER,ht)}}else if(e.bindFramebuffer(s.FRAMEBUFFER,C.__webglFramebuffer),C.__webglDepthbuffer===void 0)C.__webglDepthbuffer=s.createRenderbuffer(),at(C.__webglDepthbuffer,F,!1);else{const dt=F.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,pt=C.__webglDepthbuffer;s.bindRenderbuffer(s.RENDERBUFFER,pt),s.framebufferRenderbuffer(s.FRAMEBUFFER,dt,s.RENDERBUFFER,pt)}e.bindFramebuffer(s.FRAMEBUFFER,null)}function Ft(F,C,K){const dt=n.get(F);C!==void 0&&nt(dt.__webglFramebuffer,F,F.texture,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,0),K!==void 0&&Nt(F)}function jt(F){const C=F.texture,K=n.get(F),dt=n.get(C);F.addEventListener("dispose",M);const pt=F.textures,ht=F.isWebGLCubeRenderTarget===!0,$t=pt.length>1;if($t||(dt.__webglTexture===void 0&&(dt.__webglTexture=s.createTexture()),dt.__version=C.version,o.memory.textures++),ht){K.__webglFramebuffer=[];for(let Rt=0;Rt<6;Rt++)if(C.mipmaps&&C.mipmaps.length>0){K.__webglFramebuffer[Rt]=[];for(let Lt=0;Lt<C.mipmaps.length;Lt++)K.__webglFramebuffer[Rt][Lt]=s.createFramebuffer()}else K.__webglFramebuffer[Rt]=s.createFramebuffer()}else{if(C.mipmaps&&C.mipmaps.length>0){K.__webglFramebuffer=[];for(let Rt=0;Rt<C.mipmaps.length;Rt++)K.__webglFramebuffer[Rt]=s.createFramebuffer()}else K.__webglFramebuffer=s.createFramebuffer();if($t)for(let Rt=0,Lt=pt.length;Rt<Lt;Rt++){const ve=n.get(pt[Rt]);ve.__webglTexture===void 0&&(ve.__webglTexture=s.createTexture(),o.memory.textures++)}if(F.samples>0&&Ot(F)===!1){K.__webglMultisampledFramebuffer=s.createFramebuffer(),K.__webglColorRenderbuffer=[],e.bindFramebuffer(s.FRAMEBUFFER,K.__webglMultisampledFramebuffer);for(let Rt=0;Rt<pt.length;Rt++){const Lt=pt[Rt];K.__webglColorRenderbuffer[Rt]=s.createRenderbuffer(),s.bindRenderbuffer(s.RENDERBUFFER,K.__webglColorRenderbuffer[Rt]);const ve=r.convert(Lt.format,Lt.colorSpace),yt=r.convert(Lt.type),Bt=v(Lt.internalFormat,ve,yt,Lt.colorSpace,F.isXRRenderTarget===!0),Kt=mt(F);s.renderbufferStorageMultisample(s.RENDERBUFFER,Kt,Bt,F.width,F.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Rt,s.RENDERBUFFER,K.__webglColorRenderbuffer[Rt])}s.bindRenderbuffer(s.RENDERBUFFER,null),F.depthBuffer&&(K.__webglDepthRenderbuffer=s.createRenderbuffer(),at(K.__webglDepthRenderbuffer,F,!0)),e.bindFramebuffer(s.FRAMEBUFFER,null)}}if(ht){e.bindTexture(s.TEXTURE_CUBE_MAP,dt.__webglTexture),lt(s.TEXTURE_CUBE_MAP,C);for(let Rt=0;Rt<6;Rt++)if(C.mipmaps&&C.mipmaps.length>0)for(let Lt=0;Lt<C.mipmaps.length;Lt++)nt(K.__webglFramebuffer[Rt][Lt],F,C,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+Rt,Lt);else nt(K.__webglFramebuffer[Rt],F,C,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+Rt,0);g(C)&&m(s.TEXTURE_CUBE_MAP),e.unbindTexture()}else if($t){for(let Rt=0,Lt=pt.length;Rt<Lt;Rt++){const ve=pt[Rt],yt=n.get(ve);e.bindTexture(s.TEXTURE_2D,yt.__webglTexture),lt(s.TEXTURE_2D,ve),nt(K.__webglFramebuffer,F,ve,s.COLOR_ATTACHMENT0+Rt,s.TEXTURE_2D,0),g(ve)&&m(s.TEXTURE_2D)}e.unbindTexture()}else{let Rt=s.TEXTURE_2D;if((F.isWebGL3DRenderTarget||F.isWebGLArrayRenderTarget)&&(Rt=F.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY),e.bindTexture(Rt,dt.__webglTexture),lt(Rt,C),C.mipmaps&&C.mipmaps.length>0)for(let Lt=0;Lt<C.mipmaps.length;Lt++)nt(K.__webglFramebuffer[Lt],F,C,s.COLOR_ATTACHMENT0,Rt,Lt);else nt(K.__webglFramebuffer,F,C,s.COLOR_ATTACHMENT0,Rt,0);g(C)&&m(Rt),e.unbindTexture()}F.depthBuffer&&Nt(F)}function Xt(F){const C=F.textures;for(let K=0,dt=C.length;K<dt;K++){const pt=C[K];if(g(pt)){const ht=x(F),$t=n.get(pt).__webglTexture;e.bindTexture(ht,$t),m(ht),e.unbindTexture()}}}const Ie=[],V=[];function gt(F){if(F.samples>0){if(Ot(F)===!1){const C=F.textures,K=F.width,dt=F.height;let pt=s.COLOR_BUFFER_BIT;const ht=F.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,$t=n.get(F),Rt=C.length>1;if(Rt)for(let Lt=0;Lt<C.length;Lt++)e.bindFramebuffer(s.FRAMEBUFFER,$t.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Lt,s.RENDERBUFFER,null),e.bindFramebuffer(s.FRAMEBUFFER,$t.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+Lt,s.TEXTURE_2D,null,0);e.bindFramebuffer(s.READ_FRAMEBUFFER,$t.__webglMultisampledFramebuffer),e.bindFramebuffer(s.DRAW_FRAMEBUFFER,$t.__webglFramebuffer);for(let Lt=0;Lt<C.length;Lt++){if(F.resolveDepthBuffer&&(F.depthBuffer&&(pt|=s.DEPTH_BUFFER_BIT),F.stencilBuffer&&F.resolveStencilBuffer&&(pt|=s.STENCIL_BUFFER_BIT)),Rt){s.framebufferRenderbuffer(s.READ_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.RENDERBUFFER,$t.__webglColorRenderbuffer[Lt]);const ve=n.get(C[Lt]).__webglTexture;s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,ve,0)}s.blitFramebuffer(0,0,K,dt,0,0,K,dt,pt,s.NEAREST),c===!0&&(Ie.length=0,V.length=0,Ie.push(s.COLOR_ATTACHMENT0+Lt),F.depthBuffer&&F.resolveDepthBuffer===!1&&(Ie.push(ht),V.push(ht),s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,V)),s.invalidateFramebuffer(s.READ_FRAMEBUFFER,Ie))}if(e.bindFramebuffer(s.READ_FRAMEBUFFER,null),e.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),Rt)for(let Lt=0;Lt<C.length;Lt++){e.bindFramebuffer(s.FRAMEBUFFER,$t.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Lt,s.RENDERBUFFER,$t.__webglColorRenderbuffer[Lt]);const ve=n.get(C[Lt]).__webglTexture;e.bindFramebuffer(s.FRAMEBUFFER,$t.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+Lt,s.TEXTURE_2D,ve,0)}e.bindFramebuffer(s.DRAW_FRAMEBUFFER,$t.__webglMultisampledFramebuffer)}else if(F.depthBuffer&&F.resolveDepthBuffer===!1&&c){const C=F.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT;s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,[C])}}}function mt(F){return Math.min(i.maxSamples,F.samples)}function Ot(F){const C=n.get(F);return F.samples>0&&t.has("WEBGL_multisampled_render_to_texture")===!0&&C.__useRenderToTexture!==!1}function St(F){const C=o.render.frame;h.get(F)!==C&&(h.set(F,C),F.update())}function Ht(F,C){const K=F.colorSpace,dt=F.format,pt=F.type;return F.isCompressedTexture===!0||F.isVideoTexture===!0||K!==Ah&&K!==jo&&(be.getTransfer(K)===Oe?(dt!==Ds||pt!==ao)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",K)),C}function Et(F){return typeof HTMLImageElement<"u"&&F instanceof HTMLImageElement?(l.width=F.naturalWidth||F.width,l.height=F.naturalHeight||F.height):typeof VideoFrame<"u"&&F instanceof VideoFrame?(l.width=F.displayWidth,l.height=F.displayHeight):(l.width=F.width,l.height=F.height),l}this.allocateTextureUnit=I,this.resetTextureUnits=N,this.setTexture2D=D,this.setTexture2DArray=O,this.setTexture3D=k,this.setTextureCube=z,this.rebindTextures=Ft,this.setupRenderTarget=jt,this.updateRenderTargetMipmap=Xt,this.updateMultisampleRenderTarget=gt,this.setupDepthRenderbuffer=Nt,this.setupFrameBufferTexture=nt,this.useMultisampledRTT=Ot}function AG(s,t){function e(n,i=jo){let r;const o=be.getTransfer(i);if(n===ao)return s.UNSIGNED_BYTE;if(n===Qv)return s.UNSIGNED_SHORT_4_4_4_4;if(n===Jv)return s.UNSIGNED_SHORT_5_5_5_1;if(n===JE)return s.UNSIGNED_INT_5_9_9_9_REV;if(n===KE)return s.BYTE;if(n===QE)return s.SHORT;if(n===Ju)return s.UNSIGNED_SHORT;if(n===Kv)return s.INT;if(n===lc)return s.UNSIGNED_INT;if(n===Wr)return s.FLOAT;if(n===wh)return s.HALF_FLOAT;if(n===tC)return s.ALPHA;if(n===eC)return s.RGB;if(n===Ds)return s.RGBA;if(n===nC)return s.LUMINANCE;if(n===iC)return s.LUMINANCE_ALPHA;if(n===Bl)return s.DEPTH_COMPONENT;if(n===oh)return s.DEPTH_STENCIL;if(n===sC)return s.RED;if(n===tb)return s.RED_INTEGER;if(n===rC)return s.RG;if(n===eb)return s.RG_INTEGER;if(n===nb)return s.RGBA_INTEGER;if(n===Dp||n===Ip||n===Fp||n===Op)if(o===Oe)if(r=t.get("WEBGL_compressed_texture_s3tc_srgb"),r!==null){if(n===Dp)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===Ip)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===Fp)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===Op)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(r=t.get("WEBGL_compressed_texture_s3tc"),r!==null){if(n===Dp)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===Ip)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===Fp)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===Op)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===Fy||n===Oy||n===Ly||n===By)if(r=t.get("WEBGL_compressed_texture_pvrtc"),r!==null){if(n===Fy)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===Oy)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===Ly)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===By)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===Uy||n===ky||n===zy)if(r=t.get("WEBGL_compressed_texture_etc"),r!==null){if(n===Uy||n===ky)return o===Oe?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(n===zy)return o===Oe?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===Vy||n===Gy||n===Hy||n===$y||n===Wy||n===qy||n===jy||n===Xy||n===Yy||n===Zy||n===Ky||n===Qy||n===Jy||n===tx)if(r=t.get("WEBGL_compressed_texture_astc"),r!==null){if(n===Vy)return o===Oe?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===Gy)return o===Oe?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===Hy)return o===Oe?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===$y)return o===Oe?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===Wy)return o===Oe?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===qy)return o===Oe?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===jy)return o===Oe?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===Xy)return o===Oe?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===Yy)return o===Oe?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===Zy)return o===Oe?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===Ky)return o===Oe?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===Qy)return o===Oe?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===Jy)return o===Oe?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===tx)return o===Oe?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===Lp||n===ex||n===nx)if(r=t.get("EXT_texture_compression_bptc"),r!==null){if(n===Lp)return o===Oe?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===ex)return r.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===nx)return r.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===oC||n===ix||n===sx||n===rx)if(r=t.get("EXT_texture_compression_rgtc"),r!==null){if(n===Lp)return r.COMPRESSED_RED_RGTC1_EXT;if(n===ix)return r.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===sx)return r.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===rx)return r.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===rh?s.UNSIGNED_INT_24_8:s[n]!==void 0?s[n]:null}return{convert:e}}class EG extends ns{constructor(t=[]){super(),this.isArrayCamera=!0,this.cameras=t}}let kf=class extends cs{constructor(){super(),this.isGroup=!0,this.type="Group"}};const CG={type:"move"};class k_{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new kf,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new kf,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new X,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new X),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new kf,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new X,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new X),this._grip}dispatchEvent(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const e=this._hand;if(e)for(const n of t.hand.values())this._getHandJoint(e,n)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(t,e,n){let i=null,r=null,o=null;const a=this._targetRay,c=this._grip,l=this._hand;if(t&&e.session.visibilityState!=="visible-blurred"){if(l&&t.hand){o=!0;for(const _ of t.hand.values()){const g=e.getJointPose(_,n),m=this._getHandJoint(l,_);g!==null&&(m.matrix.fromArray(g.transform.matrix),m.matrix.decompose(m.position,m.rotation,m.scale),m.matrixWorldNeedsUpdate=!0,m.jointRadius=g.radius),m.visible=g!==null}const h=l.joints["index-finger-tip"],u=l.joints["thumb-tip"],d=h.position.distanceTo(u.position),f=.02,p=.005;l.inputState.pinching&&d>f+p?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!l.inputState.pinching&&d<=f-p&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else c!==null&&t.gripSpace&&(r=e.getPose(t.gripSpace,n),r!==null&&(c.matrix.fromArray(r.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,r.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(r.linearVelocity)):c.hasLinearVelocity=!1,r.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(r.angularVelocity)):c.hasAngularVelocity=!1));a!==null&&(i=e.getPose(t.targetRaySpace,n),i===null&&r!==null&&(i=r),i!==null&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(CG)))}return a!==null&&(a.visible=i!==null),c!==null&&(c.visible=r!==null),l!==null&&(l.visible=o!==null),this}_getHandJoint(t,e){if(t.joints[e.jointName]===void 0){const n=new kf;n.matrixAutoUpdate=!1,n.visible=!1,t.joints[e.jointName]=n,t.add(n)}return t.joints[e.jointName]}}const RG=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,NG=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class PG{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(t,e,n){if(this.texture===null){const i=new js,r=t.properties.get(i);r.__webglTexture=e.texture,(e.depthNear!=n.depthNear||e.depthFar!=n.depthFar)&&(this.depthNear=e.depthNear,this.depthFar=e.depthFar),this.texture=i}}getMesh(t){if(this.texture!==null&&this.mesh===null){const e=t.cameras[0].viewport,n=new ir({vertexShader:RG,fragmentShader:NG,uniforms:{depthColor:{value:this.texture},depthWidth:{value:e.z},depthHeight:{value:e.w}}});this.mesh=new Is(new ug(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class DG extends pa{constructor(t,e){super();const n=this;let i=null,r=1,o=null,a="local-floor",c=1,l=null,h=null,u=null,d=null,f=null,p=null;const _=new PG,g=e.getContextAttributes();let m=null,x=null;const v=[],y=[],b=new qt;let S=null;const M=new ns;M.viewport=new vn;const T=new ns;T.viewport=new vn;const A=[M,T],w=new EG;let E=null,N=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(H){let B=v[H];return B===void 0&&(B=new k_,v[H]=B),B.getTargetRaySpace()},this.getControllerGrip=function(H){let B=v[H];return B===void 0&&(B=new k_,v[H]=B),B.getGripSpace()},this.getHand=function(H){let B=v[H];return B===void 0&&(B=new k_,v[H]=B),B.getHandSpace()};function I(H){const B=y.indexOf(H.inputSource);if(B===-1)return;const nt=v[B];nt!==void 0&&(nt.update(H.inputSource,H.frame,l||o),nt.dispatchEvent({type:H.type,data:H.inputSource}))}function P(){i.removeEventListener("select",I),i.removeEventListener("selectstart",I),i.removeEventListener("selectend",I),i.removeEventListener("squeeze",I),i.removeEventListener("squeezestart",I),i.removeEventListener("squeezeend",I),i.removeEventListener("end",P),i.removeEventListener("inputsourceschange",D);for(let H=0;H<v.length;H++){const B=y[H];B!==null&&(y[H]=null,v[H].disconnect(B))}E=null,N=null,_.reset(),t.setRenderTarget(m),f=null,d=null,u=null,i=null,x=null,wt.stop(),n.isPresenting=!1,t.setPixelRatio(S),t.setSize(b.width,b.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(H){r=H,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(H){a=H,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||o},this.setReferenceSpace=function(H){l=H},this.getBaseLayer=function(){return d!==null?d:f},this.getBinding=function(){return u},this.getFrame=function(){return p},this.getSession=function(){return i},this.setSession=async function(H){if(i=H,i!==null){if(m=t.getRenderTarget(),i.addEventListener("select",I),i.addEventListener("selectstart",I),i.addEventListener("selectend",I),i.addEventListener("squeeze",I),i.addEventListener("squeezestart",I),i.addEventListener("squeezeend",I),i.addEventListener("end",P),i.addEventListener("inputsourceschange",D),g.xrCompatible!==!0&&await e.makeXRCompatible(),S=t.getPixelRatio(),t.getSize(b),i.renderState.layers===void 0){const B={antialias:g.antialias,alpha:!0,depth:g.depth,stencil:g.stencil,framebufferScaleFactor:r};f=new XRWebGLLayer(i,e,B),i.updateRenderState({baseLayer:f}),t.setPixelRatio(1),t.setSize(f.framebufferWidth,f.framebufferHeight,!1),x=new ca(f.framebufferWidth,f.framebufferHeight,{format:Ds,type:ao,colorSpace:t.outputColorSpace,stencilBuffer:g.stencil})}else{let B=null,nt=null,at=null;g.depth&&(at=g.stencil?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT24,B=g.stencil?oh:Bl,nt=g.stencil?rh:lc);const et={colorFormat:e.RGBA8,depthFormat:at,scaleFactor:r};u=new XRWebGLBinding(i,e),d=u.createProjectionLayer(et),i.updateRenderState({layers:[d]}),t.setPixelRatio(1),t.setSize(d.textureWidth,d.textureHeight,!1),x=new ca(d.textureWidth,d.textureHeight,{format:Ds,type:ao,depthTexture:new AC(d.textureWidth,d.textureHeight,nt,void 0,void 0,void 0,void 0,void 0,void 0,B),stencilBuffer:g.stencil,colorSpace:t.outputColorSpace,samples:g.antialias?4:0,resolveDepthBuffer:d.ignoreDepthValues===!1})}x.isXRRenderTarget=!0,this.setFoveation(c),l=null,o=await i.requestReferenceSpace(a),wt.setContext(i),wt.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode},this.getDepthTexture=function(){return _.getDepthTexture()};function D(H){for(let B=0;B<H.removed.length;B++){const nt=H.removed[B],at=y.indexOf(nt);at>=0&&(y[at]=null,v[at].disconnect(nt))}for(let B=0;B<H.added.length;B++){const nt=H.added[B];let at=y.indexOf(nt);if(at===-1){for(let Nt=0;Nt<v.length;Nt++)if(Nt>=y.length){y.push(nt),at=Nt;break}else if(y[Nt]===null){y[Nt]=nt,at=Nt;break}if(at===-1)break}const et=v[at];et&&et.connect(nt)}}const O=new X,k=new X;function z(H,B,nt){O.setFromMatrixPosition(B.matrixWorld),k.setFromMatrixPosition(nt.matrixWorld);const at=O.distanceTo(k),et=B.projectionMatrix.elements,Nt=nt.projectionMatrix.elements,Ft=et[14]/(et[10]-1),jt=et[14]/(et[10]+1),Xt=(et[9]+1)/et[5],Ie=(et[9]-1)/et[5],V=(et[8]-1)/et[0],gt=(Nt[8]+1)/Nt[0],mt=Ft*V,Ot=Ft*gt,St=at/(-V+gt),Ht=St*-V;if(B.matrixWorld.decompose(H.position,H.quaternion,H.scale),H.translateX(Ht),H.translateZ(St),H.matrixWorld.compose(H.position,H.quaternion,H.scale),H.matrixWorldInverse.copy(H.matrixWorld).invert(),et[10]===-1)H.projectionMatrix.copy(B.projectionMatrix),H.projectionMatrixInverse.copy(B.projectionMatrixInverse);else{const Et=Ft+St,F=jt+St,C=mt-Ht,K=Ot+(at-Ht),dt=Xt*jt/F*Et,pt=Ie*jt/F*Et;H.projectionMatrix.makePerspective(C,K,dt,pt,Et,F),H.projectionMatrixInverse.copy(H.projectionMatrix).invert()}}function Y(H,B){B===null?H.matrixWorld.copy(H.matrix):H.matrixWorld.multiplyMatrices(B.matrixWorld,H.matrix),H.matrixWorldInverse.copy(H.matrixWorld).invert()}this.updateCamera=function(H){if(i===null)return;let B=H.near,nt=H.far;_.texture!==null&&(_.depthNear>0&&(B=_.depthNear),_.depthFar>0&&(nt=_.depthFar)),w.near=T.near=M.near=B,w.far=T.far=M.far=nt,(E!==w.near||N!==w.far)&&(i.updateRenderState({depthNear:w.near,depthFar:w.far}),E=w.near,N=w.far),M.layers.mask=H.layers.mask|2,T.layers.mask=H.layers.mask|4,w.layers.mask=M.layers.mask|T.layers.mask;const at=H.parent,et=w.cameras;Y(w,at);for(let Nt=0;Nt<et.length;Nt++)Y(et[Nt],at);et.length===2?z(w,M,T):w.projectionMatrix.copy(M.projectionMatrix),U(H,w,at)};function U(H,B,nt){nt===null?H.matrix.copy(B.matrixWorld):(H.matrix.copy(nt.matrixWorld),H.matrix.invert(),H.matrix.multiply(B.matrixWorld)),H.matrix.decompose(H.position,H.quaternion,H.scale),H.updateMatrixWorld(!0),H.projectionMatrix.copy(B.projectionMatrix),H.projectionMatrixInverse.copy(B.projectionMatrixInverse),H.isPerspectiveCamera&&(H.fov=td*2*Math.atan(1/H.projectionMatrix.elements[5]),H.zoom=1)}this.getCamera=function(){return w},this.getFoveation=function(){if(!(d===null&&f===null))return c},this.setFoveation=function(H){c=H,d!==null&&(d.fixedFoveation=H),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=H)},this.hasDepthSensing=function(){return _.texture!==null},this.getDepthSensingMesh=function(){return _.getMesh(w)};let W=null;function lt(H,B){if(h=B.getViewerPose(l||o),p=B,h!==null){const nt=h.views;f!==null&&(t.setRenderTargetFramebuffer(x,f.framebuffer),t.setRenderTarget(x));let at=!1;nt.length!==w.cameras.length&&(w.cameras.length=0,at=!0);for(let Nt=0;Nt<nt.length;Nt++){const Ft=nt[Nt];let jt=null;if(f!==null)jt=f.getViewport(Ft);else{const Ie=u.getViewSubImage(d,Ft);jt=Ie.viewport,Nt===0&&(t.setRenderTargetTextures(x,Ie.colorTexture,d.ignoreDepthValues?void 0:Ie.depthStencilTexture),t.setRenderTarget(x))}let Xt=A[Nt];Xt===void 0&&(Xt=new ns,Xt.layers.enable(Nt),Xt.viewport=new vn,A[Nt]=Xt),Xt.matrix.fromArray(Ft.transform.matrix),Xt.matrix.decompose(Xt.position,Xt.quaternion,Xt.scale),Xt.projectionMatrix.fromArray(Ft.projectionMatrix),Xt.projectionMatrixInverse.copy(Xt.projectionMatrix).invert(),Xt.viewport.set(jt.x,jt.y,jt.width,jt.height),Nt===0&&(w.matrix.copy(Xt.matrix),w.matrix.decompose(w.position,w.quaternion,w.scale)),at===!0&&w.cameras.push(Xt)}const et=i.enabledFeatures;if(et&&et.includes("depth-sensing")){const Nt=u.getDepthInformation(nt[0]);Nt&&Nt.isValid&&Nt.texture&&_.init(t,Nt,i.renderState)}}for(let nt=0;nt<v.length;nt++){const at=y[nt],et=v[nt];at!==null&&et!==void 0&&et.update(at,B,l||o)}W&&W(H,B),B.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:B}),p=null}const wt=new wC;wt.setAnimationLoop(lt),this.setAnimationLoop=function(H){W=H},this.dispose=function(){}}}const Ra=new hc,IG=new un;function FG(s,t){function e(g,m){g.matrixAutoUpdate===!0&&g.updateMatrix(),m.value.copy(g.matrix)}function n(g,m){m.color.getRGB(g.fogColor.value,bC(s)),m.isFog?(g.fogNear.value=m.near,g.fogFar.value=m.far):m.isFogExp2&&(g.fogDensity.value=m.density)}function i(g,m,x,v,y){m.isMeshBasicMaterial||m.isMeshLambertMaterial?r(g,m):m.isMeshToonMaterial?(r(g,m),u(g,m)):m.isMeshPhongMaterial?(r(g,m),h(g,m)):m.isMeshStandardMaterial?(r(g,m),d(g,m),m.isMeshPhysicalMaterial&&f(g,m,y)):m.isMeshMatcapMaterial?(r(g,m),p(g,m)):m.isMeshDepthMaterial?r(g,m):m.isMeshDistanceMaterial?(r(g,m),_(g,m)):m.isMeshNormalMaterial?r(g,m):m.isLineBasicMaterial?(o(g,m),m.isLineDashedMaterial&&a(g,m)):m.isPointsMaterial?c(g,m,x,v):m.isSpriteMaterial?l(g,m):m.isShadowMaterial?(g.color.value.copy(m.color),g.opacity.value=m.opacity):m.isShaderMaterial&&(m.uniformsNeedUpdate=!1)}function r(g,m){g.opacity.value=m.opacity,m.color&&g.diffuse.value.copy(m.color),m.emissive&&g.emissive.value.copy(m.emissive).multiplyScalar(m.emissiveIntensity),m.map&&(g.map.value=m.map,e(m.map,g.mapTransform)),m.alphaMap&&(g.alphaMap.value=m.alphaMap,e(m.alphaMap,g.alphaMapTransform)),m.bumpMap&&(g.bumpMap.value=m.bumpMap,e(m.bumpMap,g.bumpMapTransform),g.bumpScale.value=m.bumpScale,m.side===fi&&(g.bumpScale.value*=-1)),m.normalMap&&(g.normalMap.value=m.normalMap,e(m.normalMap,g.normalMapTransform),g.normalScale.value.copy(m.normalScale),m.side===fi&&g.normalScale.value.negate()),m.displacementMap&&(g.displacementMap.value=m.displacementMap,e(m.displacementMap,g.displacementMapTransform),g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias),m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap,e(m.emissiveMap,g.emissiveMapTransform)),m.specularMap&&(g.specularMap.value=m.specularMap,e(m.specularMap,g.specularMapTransform)),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest);const x=t.get(m),v=x.envMap,y=x.envMapRotation;v&&(g.envMap.value=v,Ra.copy(y),Ra.x*=-1,Ra.y*=-1,Ra.z*=-1,v.isCubeTexture&&v.isRenderTargetTexture===!1&&(Ra.y*=-1,Ra.z*=-1),g.envMapRotation.value.setFromMatrix4(IG.makeRotationFromEuler(Ra)),g.flipEnvMap.value=v.isCubeTexture&&v.isRenderTargetTexture===!1?-1:1,g.reflectivity.value=m.reflectivity,g.ior.value=m.ior,g.refractionRatio.value=m.refractionRatio),m.lightMap&&(g.lightMap.value=m.lightMap,g.lightMapIntensity.value=m.lightMapIntensity,e(m.lightMap,g.lightMapTransform)),m.aoMap&&(g.aoMap.value=m.aoMap,g.aoMapIntensity.value=m.aoMapIntensity,e(m.aoMap,g.aoMapTransform))}function o(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,m.map&&(g.map.value=m.map,e(m.map,g.mapTransform))}function a(g,m){g.dashSize.value=m.dashSize,g.totalSize.value=m.dashSize+m.gapSize,g.scale.value=m.scale}function c(g,m,x,v){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.size.value=m.size*x,g.scale.value=v*.5,m.map&&(g.map.value=m.map,e(m.map,g.uvTransform)),m.alphaMap&&(g.alphaMap.value=m.alphaMap,e(m.alphaMap,g.alphaMapTransform)),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest)}function l(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.rotation.value=m.rotation,m.map&&(g.map.value=m.map,e(m.map,g.mapTransform)),m.alphaMap&&(g.alphaMap.value=m.alphaMap,e(m.alphaMap,g.alphaMapTransform)),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest)}function h(g,m){g.specular.value.copy(m.specular),g.shininess.value=Math.max(m.shininess,1e-4)}function u(g,m){m.gradientMap&&(g.gradientMap.value=m.gradientMap)}function d(g,m){g.metalness.value=m.metalness,m.metalnessMap&&(g.metalnessMap.value=m.metalnessMap,e(m.metalnessMap,g.metalnessMapTransform)),g.roughness.value=m.roughness,m.roughnessMap&&(g.roughnessMap.value=m.roughnessMap,e(m.roughnessMap,g.roughnessMapTransform)),m.envMap&&(g.envMapIntensity.value=m.envMapIntensity)}function f(g,m,x){g.ior.value=m.ior,m.sheen>0&&(g.sheenColor.value.copy(m.sheenColor).multiplyScalar(m.sheen),g.sheenRoughness.value=m.sheenRoughness,m.sheenColorMap&&(g.sheenColorMap.value=m.sheenColorMap,e(m.sheenColorMap,g.sheenColorMapTransform)),m.sheenRoughnessMap&&(g.sheenRoughnessMap.value=m.sheenRoughnessMap,e(m.sheenRoughnessMap,g.sheenRoughnessMapTransform))),m.clearcoat>0&&(g.clearcoat.value=m.clearcoat,g.clearcoatRoughness.value=m.clearcoatRoughness,m.clearcoatMap&&(g.clearcoatMap.value=m.clearcoatMap,e(m.clearcoatMap,g.clearcoatMapTransform)),m.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=m.clearcoatRoughnessMap,e(m.clearcoatRoughnessMap,g.clearcoatRoughnessMapTransform)),m.clearcoatNormalMap&&(g.clearcoatNormalMap.value=m.clearcoatNormalMap,e(m.clearcoatNormalMap,g.clearcoatNormalMapTransform),g.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),m.side===fi&&g.clearcoatNormalScale.value.negate())),m.dispersion>0&&(g.dispersion.value=m.dispersion),m.iridescence>0&&(g.iridescence.value=m.iridescence,g.iridescenceIOR.value=m.iridescenceIOR,g.iridescenceThicknessMinimum.value=m.iridescenceThicknessRange[0],g.iridescenceThicknessMaximum.value=m.iridescenceThicknessRange[1],m.iridescenceMap&&(g.iridescenceMap.value=m.iridescenceMap,e(m.iridescenceMap,g.iridescenceMapTransform)),m.iridescenceThicknessMap&&(g.iridescenceThicknessMap.value=m.iridescenceThicknessMap,e(m.iridescenceThicknessMap,g.iridescenceThicknessMapTransform))),m.transmission>0&&(g.transmission.value=m.transmission,g.transmissionSamplerMap.value=x.texture,g.transmissionSamplerSize.value.set(x.width,x.height),m.transmissionMap&&(g.transmissionMap.value=m.transmissionMap,e(m.transmissionMap,g.transmissionMapTransform)),g.thickness.value=m.thickness,m.thicknessMap&&(g.thicknessMap.value=m.thicknessMap,e(m.thicknessMap,g.thicknessMapTransform)),g.attenuationDistance.value=m.attenuationDistance,g.attenuationColor.value.copy(m.attenuationColor)),m.anisotropy>0&&(g.anisotropyVector.value.set(m.anisotropy*Math.cos(m.anisotropyRotation),m.anisotropy*Math.sin(m.anisotropyRotation)),m.anisotropyMap&&(g.anisotropyMap.value=m.anisotropyMap,e(m.anisotropyMap,g.anisotropyMapTransform))),g.specularIntensity.value=m.specularIntensity,g.specularColor.value.copy(m.specularColor),m.specularColorMap&&(g.specularColorMap.value=m.specularColorMap,e(m.specularColorMap,g.specularColorMapTransform)),m.specularIntensityMap&&(g.specularIntensityMap.value=m.specularIntensityMap,e(m.specularIntensityMap,g.specularIntensityMapTransform))}function p(g,m){m.matcap&&(g.matcap.value=m.matcap)}function _(g,m){const x=t.get(m).light;g.referencePosition.value.setFromMatrixPosition(x.matrixWorld),g.nearDistance.value=x.shadow.camera.near,g.farDistance.value=x.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function OG(s,t,e,n){let i={},r={},o=[];const a=s.getParameter(s.MAX_UNIFORM_BUFFER_BINDINGS);function c(x,v){const y=v.program;n.uniformBlockBinding(x,y)}function l(x,v){let y=i[x.id];y===void 0&&(p(x),y=h(x),i[x.id]=y,x.addEventListener("dispose",g));const b=v.program;n.updateUBOMapping(x,b);const S=t.render.frame;r[x.id]!==S&&(d(x),r[x.id]=S)}function h(x){const v=u();x.__bindingPointIndex=v;const y=s.createBuffer(),b=x.__size,S=x.usage;return s.bindBuffer(s.UNIFORM_BUFFER,y),s.bufferData(s.UNIFORM_BUFFER,b,S),s.bindBuffer(s.UNIFORM_BUFFER,null),s.bindBufferBase(s.UNIFORM_BUFFER,v,y),y}function u(){for(let x=0;x<a;x++)if(o.indexOf(x)===-1)return o.push(x),x;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(x){const v=i[x.id],y=x.uniforms,b=x.__cache;s.bindBuffer(s.UNIFORM_BUFFER,v);for(let S=0,M=y.length;S<M;S++){const T=Array.isArray(y[S])?y[S]:[y[S]];for(let A=0,w=T.length;A<w;A++){const E=T[A];if(f(E,S,A,b)===!0){const N=E.__offset,I=Array.isArray(E.value)?E.value:[E.value];let P=0;for(let D=0;D<I.length;D++){const O=I[D],k=_(O);typeof O=="number"||typeof O=="boolean"?(E.__data[0]=O,s.bufferSubData(s.UNIFORM_BUFFER,N+P,E.__data)):O.isMatrix3?(E.__data[0]=O.elements[0],E.__data[1]=O.elements[1],E.__data[2]=O.elements[2],E.__data[3]=0,E.__data[4]=O.elements[3],E.__data[5]=O.elements[4],E.__data[6]=O.elements[5],E.__data[7]=0,E.__data[8]=O.elements[6],E.__data[9]=O.elements[7],E.__data[10]=O.elements[8],E.__data[11]=0):(O.toArray(E.__data,P),P+=k.storage/Float32Array.BYTES_PER_ELEMENT)}s.bufferSubData(s.UNIFORM_BUFFER,N,E.__data)}}}s.bindBuffer(s.UNIFORM_BUFFER,null)}function f(x,v,y,b){const S=x.value,M=v+"_"+y;if(b[M]===void 0)return typeof S=="number"||typeof S=="boolean"?b[M]=S:b[M]=S.clone(),!0;{const T=b[M];if(typeof S=="number"||typeof S=="boolean"){if(T!==S)return b[M]=S,!0}else if(T.equals(S)===!1)return T.copy(S),!0}return!1}function p(x){const v=x.uniforms;let y=0;const b=16;for(let M=0,T=v.length;M<T;M++){const A=Array.isArray(v[M])?v[M]:[v[M]];for(let w=0,E=A.length;w<E;w++){const N=A[w],I=Array.isArray(N.value)?N.value:[N.value];for(let P=0,D=I.length;P<D;P++){const O=I[P],k=_(O),z=y%b,Y=z%k.boundary,U=z+Y;y+=Y,U!==0&&b-U<k.storage&&(y+=b-U),N.__data=new Float32Array(k.storage/Float32Array.BYTES_PER_ELEMENT),N.__offset=y,y+=k.storage}}}const S=y%b;return S>0&&(y+=b-S),x.__size=y,x.__cache={},this}function _(x){const v={boundary:0,storage:0};return typeof x=="number"||typeof x=="boolean"?(v.boundary=4,v.storage=4):x.isVector2?(v.boundary=8,v.storage=8):x.isVector3||x.isColor?(v.boundary=16,v.storage=12):x.isVector4?(v.boundary=16,v.storage=16):x.isMatrix3?(v.boundary=48,v.storage=48):x.isMatrix4?(v.boundary=64,v.storage=64):x.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",x),v}function g(x){const v=x.target;v.removeEventListener("dispose",g);const y=o.indexOf(v.__bindingPointIndex);o.splice(y,1),s.deleteBuffer(i[v.id]),delete i[v.id],delete r[v.id]}function m(){for(const x in i)s.deleteBuffer(i[x]);o=[],i={},r={}}return{bind:c,update:l,dispose:m}}class LG{constructor(t={}){const{canvas:e=w3(),context:n=null,depth:i=!0,stencil:r=!1,alpha:o=!1,antialias:a=!1,premultipliedAlpha:c=!0,preserveDrawingBuffer:l=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:u=!1,reverseDepthBuffer:d=!1}=t;this.isWebGLRenderer=!0;let f;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");f=n.getContextAttributes().alpha}else f=o;const p=new Uint32Array(4),_=new Int32Array(4);let g=null,m=null;const x=[],v=[];this.domElement=e,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=Wi,this.toneMapping=Jo,this.toneMappingExposure=1;const y=this;let b=!1,S=0,M=0,T=null,A=-1,w=null;const E=new vn,N=new vn;let I=null;const P=new Ee(0);let D=0,O=e.width,k=e.height,z=1,Y=null,U=null;const W=new vn(0,0,O,k),lt=new vn(0,0,O,k);let wt=!1;const H=new lb;let B=!1,nt=!1;const at=new un,et=new un,Nt=new X,Ft=new vn,jt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let Xt=!1;function Ie(){return T===null?z:1}let V=n;function gt(R,q){return e.getContext(R,q)}try{const R={alpha:!0,depth:i,stencil:r,antialias:a,premultipliedAlpha:c,preserveDrawingBuffer:l,powerPreference:h,failIfMajorPerformanceCaveat:u};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${ag}`),e.addEventListener("webglcontextlost",ft,!1),e.addEventListener("webglcontextrestored",It,!1),e.addEventListener("webglcontextcreationerror",Pt,!1),V===null){const q="webgl2";if(V=gt(q,R),V===null)throw gt(q)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(R){throw console.error("THREE.WebGLRenderer: "+R.message),R}let mt,Ot,St,Ht,Et,F,C,K,dt,pt,ht,$t,Rt,Lt,ve,yt,Bt,Kt,Qt,Ut,ye,ae,ze,G;function Ct(){mt=new VV(V),mt.init(),ae=new AG(V,mt),Ot=new OV(V,mt,t,ae),St=new MG(V,mt),Ot.reverseDepthBuffer&&d&&St.buffers.depth.setReversed(!0),Ht=new $V(V),Et=new cG,F=new wG(V,mt,St,Et,Ot,ae,Ht),C=new BV(y),K=new zV(y),dt=new K3(V),ze=new IV(V,dt),pt=new GV(V,dt,Ht,ze),ht=new qV(V,pt,dt,Ht),Qt=new WV(V,Ot,F),yt=new LV(Et),$t=new aG(y,C,K,mt,Ot,ze,yt),Rt=new FG(y,Et),Lt=new hG,ve=new gG(mt),Kt=new DV(y,C,K,St,ht,f,c),Bt=new bG(y,ht,Ot),G=new OG(V,Ht,Ot,St),Ut=new FV(V,mt,Ht),ye=new HV(V,mt,Ht),Ht.programs=$t.programs,y.capabilities=Ot,y.extensions=mt,y.properties=Et,y.renderLists=Lt,y.shadowMap=Bt,y.state=St,y.info=Ht}Ct();const st=new DG(y,V);this.xr=st,this.getContext=function(){return V},this.getContextAttributes=function(){return V.getContextAttributes()},this.forceContextLoss=function(){const R=mt.get("WEBGL_lose_context");R&&R.loseContext()},this.forceContextRestore=function(){const R=mt.get("WEBGL_lose_context");R&&R.restoreContext()},this.getPixelRatio=function(){return z},this.setPixelRatio=function(R){R!==void 0&&(z=R,this.setSize(O,k,!1))},this.getSize=function(R){return R.set(O,k)},this.setSize=function(R,q,J=!0){if(st.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}O=R,k=q,e.width=Math.floor(R*z),e.height=Math.floor(q*z),J===!0&&(e.style.width=R+"px",e.style.height=q+"px"),this.setViewport(0,0,R,q)},this.getDrawingBufferSize=function(R){return R.set(O*z,k*z).floor()},this.setDrawingBufferSize=function(R,q,J){O=R,k=q,z=J,e.width=Math.floor(R*J),e.height=Math.floor(q*J),this.setViewport(0,0,R,q)},this.getCurrentViewport=function(R){return R.copy(E)},this.getViewport=function(R){return R.copy(W)},this.setViewport=function(R,q,J,tt){R.isVector4?W.set(R.x,R.y,R.z,R.w):W.set(R,q,J,tt),St.viewport(E.copy(W).multiplyScalar(z).round())},this.getScissor=function(R){return R.copy(lt)},this.setScissor=function(R,q,J,tt){R.isVector4?lt.set(R.x,R.y,R.z,R.w):lt.set(R,q,J,tt),St.scissor(N.copy(lt).multiplyScalar(z).round())},this.getScissorTest=function(){return wt},this.setScissorTest=function(R){St.setScissorTest(wt=R)},this.setOpaqueSort=function(R){Y=R},this.setTransparentSort=function(R){U=R},this.getClearColor=function(R){return R.copy(Kt.getClearColor())},this.setClearColor=function(){Kt.setClearColor.apply(Kt,arguments)},this.getClearAlpha=function(){return Kt.getClearAlpha()},this.setClearAlpha=function(){Kt.setClearAlpha.apply(Kt,arguments)},this.clear=function(R=!0,q=!0,J=!0){let tt=0;if(R){let j=!1;if(T!==null){const xt=T.texture.format;j=xt===nb||xt===eb||xt===tb}if(j){const xt=T.texture.type,Dt=xt===ao||xt===lc||xt===Ju||xt===rh||xt===Qv||xt===Jv,kt=Kt.getClearColor(),zt=Kt.getClearAlpha(),te=kt.r,oe=kt.g,Vt=kt.b;Dt?(p[0]=te,p[1]=oe,p[2]=Vt,p[3]=zt,V.clearBufferuiv(V.COLOR,0,p)):(_[0]=te,_[1]=oe,_[2]=Vt,_[3]=zt,V.clearBufferiv(V.COLOR,0,_))}else tt|=V.COLOR_BUFFER_BIT}q&&(tt|=V.DEPTH_BUFFER_BIT),J&&(tt|=V.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),V.clear(tt)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",ft,!1),e.removeEventListener("webglcontextrestored",It,!1),e.removeEventListener("webglcontextcreationerror",Pt,!1),Lt.dispose(),ve.dispose(),Et.dispose(),C.dispose(),K.dispose(),ht.dispose(),ze.dispose(),G.dispose(),$t.dispose(),st.dispose(),st.removeEventListener("sessionstart",bS),st.removeEventListener("sessionend",SS),va.stop()};function ft(R){R.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),b=!0}function It(){console.log("THREE.WebGLRenderer: Context Restored."),b=!1;const R=Ht.autoReset,q=Bt.enabled,J=Bt.autoUpdate,tt=Bt.needsUpdate,j=Bt.type;Ct(),Ht.autoReset=R,Bt.enabled=q,Bt.autoUpdate=J,Bt.needsUpdate=tt,Bt.type=j}function Pt(R){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",R.statusMessage)}function re(R){const q=R.target;q.removeEventListener("dispose",re),sn(q)}function sn(R){Wn(R),Et.remove(R)}function Wn(R){const q=Et.get(R).programs;q!==void 0&&(q.forEach(function(J){$t.releaseProgram(J)}),R.isShaderMaterial&&$t.releaseShaderCache(R))}this.renderBufferDirect=function(R,q,J,tt,j,xt){q===null&&(q=jt);const Dt=j.isMesh&&j.matrixWorld.determinant()<0,kt=bP(R,q,J,tt,j);St.setMaterial(tt,Dt);let zt=J.index,te=1;if(tt.wireframe===!0){if(zt=pt.getWireframeAttribute(J),zt===void 0)return;te=2}const oe=J.drawRange,Vt=J.attributes.position;let Se=oe.start*te,Ve=(oe.start+oe.count)*te;xt!==null&&(Se=Math.max(Se,xt.start*te),Ve=Math.min(Ve,(xt.start+xt.count)*te)),zt!==null?(Se=Math.max(Se,0),Ve=Math.min(Ve,zt.count)):Vt!=null&&(Se=Math.max(Se,0),Ve=Math.min(Ve,Vt.count));const He=Ve-Se;if(He<0||He===1/0)return;ze.setup(j,tt,kt,J,zt);let xi,Ce=Ut;if(zt!==null&&(xi=dt.get(zt),Ce=ye,Ce.setIndex(xi)),j.isMesh)tt.wireframe===!0?(St.setLineWidth(tt.wireframeLinewidth*Ie()),Ce.setMode(V.LINES)):Ce.setMode(V.TRIANGLES);else if(j.isLine){let Wt=tt.linewidth;Wt===void 0&&(Wt=1),St.setLineWidth(Wt*Ie()),j.isLineSegments?Ce.setMode(V.LINES):j.isLineLoop?Ce.setMode(V.LINE_LOOP):Ce.setMode(V.LINE_STRIP)}else j.isPoints?Ce.setMode(V.POINTS):j.isSprite&&Ce.setMode(V.TRIANGLES);if(j.isBatchedMesh)if(j._multiDrawInstances!==null)Ce.renderMultiDrawInstances(j._multiDrawStarts,j._multiDrawCounts,j._multiDrawCount,j._multiDrawInstances);else if(mt.get("WEBGL_multi_draw"))Ce.renderMultiDraw(j._multiDrawStarts,j._multiDrawCounts,j._multiDrawCount);else{const Wt=j._multiDrawStarts,fr=j._multiDrawCounts,Re=j._multiDrawCount,us=zt?dt.get(zt).bytesPerElement:1,Ec=Et.get(tt).currentProgram.getUniforms();for(let Fi=0;Fi<Re;Fi++)Ec.setValue(V,"_gl_DrawID",Fi),Ce.render(Wt[Fi]/us,fr[Fi])}else if(j.isInstancedMesh)Ce.renderInstances(Se,He,j.count);else if(J.isInstancedBufferGeometry){const Wt=J._maxInstanceCount!==void 0?J._maxInstanceCount:1/0,fr=Math.min(J.instanceCount,Wt);Ce.renderInstances(Se,He,fr)}else Ce.render(Se,He)};function Fe(R,q,J){R.transparent===!0&&R.side===kr&&R.forceSinglePass===!1?(R.side=fi,R.needsUpdate=!0,Wd(R,q,J),R.side=aa,R.needsUpdate=!0,Wd(R,q,J),R.side=kr):Wd(R,q,J)}this.compile=function(R,q,J=null){J===null&&(J=R),m=ve.get(J),m.init(q),v.push(m),J.traverseVisible(function(j){j.isLight&&j.layers.test(q.layers)&&(m.pushLight(j),j.castShadow&&m.pushShadow(j))}),R!==J&&R.traverseVisible(function(j){j.isLight&&j.layers.test(q.layers)&&(m.pushLight(j),j.castShadow&&m.pushShadow(j))}),m.setupLights();const tt=new Set;return R.traverse(function(j){if(!(j.isMesh||j.isPoints||j.isLine||j.isSprite))return;const xt=j.material;if(xt)if(Array.isArray(xt))for(let Dt=0;Dt<xt.length;Dt++){const kt=xt[Dt];Fe(kt,J,j),tt.add(kt)}else Fe(xt,J,j),tt.add(xt)}),v.pop(),m=null,tt},this.compileAsync=function(R,q,J=null){const tt=this.compile(R,q,J);return new Promise(j=>{function xt(){if(tt.forEach(function(Dt){Et.get(Dt).currentProgram.isReady()&&tt.delete(Dt)}),tt.size===0){j(R);return}setTimeout(xt,10)}mt.get("KHR_parallel_shader_compile")!==null?xt():setTimeout(xt,10)})};let hs=null;function dr(R){hs&&hs(R)}function bS(){va.stop()}function SS(){va.start()}const va=new wC;va.setAnimationLoop(dr),typeof self<"u"&&va.setContext(self),this.setAnimationLoop=function(R){hs=R,st.setAnimationLoop(R),R===null?va.stop():va.start()},st.addEventListener("sessionstart",bS),st.addEventListener("sessionend",SS),this.render=function(R,q){if(q!==void 0&&q.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(b===!0)return;if(R.matrixWorldAutoUpdate===!0&&R.updateMatrixWorld(),q.parent===null&&q.matrixWorldAutoUpdate===!0&&q.updateMatrixWorld(),st.enabled===!0&&st.isPresenting===!0&&(st.cameraAutoUpdate===!0&&st.updateCamera(q),q=st.getCamera()),R.isScene===!0&&R.onBeforeRender(y,R,q,T),m=ve.get(R,v.length),m.init(q),v.push(m),et.multiplyMatrices(q.projectionMatrix,q.matrixWorldInverse),H.setFromProjectionMatrix(et),nt=this.localClippingEnabled,B=yt.init(this.clippingPlanes,nt),g=Lt.get(R,x.length),g.init(),x.push(g),st.enabled===!0&&st.isPresenting===!0){const xt=y.xr.getDepthSensingMesh();xt!==null&&Bg(xt,q,-1/0,y.sortObjects)}Bg(R,q,0,y.sortObjects),g.finish(),y.sortObjects===!0&&g.sort(Y,U),Xt=st.enabled===!1||st.isPresenting===!1||st.hasDepthSensing()===!1,Xt&&Kt.addToRenderList(g,R),this.info.render.frame++,B===!0&&yt.beginShadows();const J=m.state.shadowsArray;Bt.render(J,R,q),B===!0&&yt.endShadows(),this.info.autoReset===!0&&this.info.reset();const tt=g.opaque,j=g.transmissive;if(m.setupLights(),q.isArrayCamera){const xt=q.cameras;if(j.length>0)for(let Dt=0,kt=xt.length;Dt<kt;Dt++){const zt=xt[Dt];TS(tt,j,R,zt)}Xt&&Kt.render(R);for(let Dt=0,kt=xt.length;Dt<kt;Dt++){const zt=xt[Dt];MS(g,R,zt,zt.viewport)}}else j.length>0&&TS(tt,j,R,q),Xt&&Kt.render(R),MS(g,R,q);T!==null&&(F.updateMultisampleRenderTarget(T),F.updateRenderTargetMipmap(T)),R.isScene===!0&&R.onAfterRender(y,R,q),ze.resetDefaultState(),A=-1,w=null,v.pop(),v.length>0?(m=v[v.length-1],B===!0&&yt.setGlobalState(y.clippingPlanes,m.state.camera)):m=null,x.pop(),x.length>0?g=x[x.length-1]:g=null};function Bg(R,q,J,tt){if(R.visible===!1)return;if(R.layers.test(q.layers)){if(R.isGroup)J=R.renderOrder;else if(R.isLOD)R.autoUpdate===!0&&R.update(q);else if(R.isLight)m.pushLight(R),R.castShadow&&m.pushShadow(R);else if(R.isSprite){if(!R.frustumCulled||H.intersectsSprite(R)){tt&&Ft.setFromMatrixPosition(R.matrixWorld).applyMatrix4(et);const Dt=ht.update(R),kt=R.material;kt.visible&&g.push(R,Dt,kt,J,Ft.z,null)}}else if((R.isMesh||R.isLine||R.isPoints)&&(!R.frustumCulled||H.intersectsObject(R))){const Dt=ht.update(R),kt=R.material;if(tt&&(R.boundingSphere!==void 0?(R.boundingSphere===null&&R.computeBoundingSphere(),Ft.copy(R.boundingSphere.center)):(Dt.boundingSphere===null&&Dt.computeBoundingSphere(),Ft.copy(Dt.boundingSphere.center)),Ft.applyMatrix4(R.matrixWorld).applyMatrix4(et)),Array.isArray(kt)){const zt=Dt.groups;for(let te=0,oe=zt.length;te<oe;te++){const Vt=zt[te],Se=kt[Vt.materialIndex];Se&&Se.visible&&g.push(R,Dt,Se,J,Ft.z,Vt)}}else kt.visible&&g.push(R,Dt,kt,J,Ft.z,null)}}const xt=R.children;for(let Dt=0,kt=xt.length;Dt<kt;Dt++)Bg(xt[Dt],q,J,tt)}function MS(R,q,J,tt){const j=R.opaque,xt=R.transmissive,Dt=R.transparent;m.setupLightsView(J),B===!0&&yt.setGlobalState(y.clippingPlanes,J),tt&&St.viewport(E.copy(tt)),j.length>0&&$d(j,q,J),xt.length>0&&$d(xt,q,J),Dt.length>0&&$d(Dt,q,J),St.buffers.depth.setTest(!0),St.buffers.depth.setMask(!0),St.buffers.color.setMask(!0),St.setPolygonOffset(!1)}function TS(R,q,J,tt){if((J.isScene===!0?J.overrideMaterial:null)!==null)return;m.state.transmissionRenderTarget[tt.id]===void 0&&(m.state.transmissionRenderTarget[tt.id]=new ca(1,1,{generateMipmaps:!0,type:mt.has("EXT_color_buffer_half_float")||mt.has("EXT_color_buffer_float")?wh:ao,minFilter:Ya,samples:4,stencilBuffer:r,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:be.workingColorSpace}));const xt=m.state.transmissionRenderTarget[tt.id],Dt=tt.viewport||E;xt.setSize(Dt.z,Dt.w);const kt=y.getRenderTarget();y.setRenderTarget(xt),y.getClearColor(P),D=y.getClearAlpha(),D<1&&y.setClearColor(16777215,.5),y.clear(),Xt&&Kt.render(J);const zt=y.toneMapping;y.toneMapping=Jo;const te=tt.viewport;if(tt.viewport!==void 0&&(tt.viewport=void 0),m.setupLightsView(tt),B===!0&&yt.setGlobalState(y.clippingPlanes,tt),$d(R,J,tt),F.updateMultisampleRenderTarget(xt),F.updateRenderTargetMipmap(xt),mt.has("WEBGL_multisampled_render_to_texture")===!1){let oe=!1;for(let Vt=0,Se=q.length;Vt<Se;Vt++){const Ve=q[Vt],He=Ve.object,xi=Ve.geometry,Ce=Ve.material,Wt=Ve.group;if(Ce.side===kr&&He.layers.test(tt.layers)){const fr=Ce.side;Ce.side=fi,Ce.needsUpdate=!0,wS(He,J,tt,xi,Ce,Wt),Ce.side=fr,Ce.needsUpdate=!0,oe=!0}}oe===!0&&(F.updateMultisampleRenderTarget(xt),F.updateRenderTargetMipmap(xt))}y.setRenderTarget(kt),y.setClearColor(P,D),te!==void 0&&(tt.viewport=te),y.toneMapping=zt}function $d(R,q,J){const tt=q.isScene===!0?q.overrideMaterial:null;for(let j=0,xt=R.length;j<xt;j++){const Dt=R[j],kt=Dt.object,zt=Dt.geometry,te=tt===null?Dt.material:tt,oe=Dt.group;kt.layers.test(J.layers)&&wS(kt,q,J,zt,te,oe)}}function wS(R,q,J,tt,j,xt){R.onBeforeRender(y,q,J,tt,j,xt),R.modelViewMatrix.multiplyMatrices(J.matrixWorldInverse,R.matrixWorld),R.normalMatrix.getNormalMatrix(R.modelViewMatrix),j.onBeforeRender(y,q,J,tt,R,xt),j.transparent===!0&&j.side===kr&&j.forceSinglePass===!1?(j.side=fi,j.needsUpdate=!0,y.renderBufferDirect(J,q,tt,j,R,xt),j.side=aa,j.needsUpdate=!0,y.renderBufferDirect(J,q,tt,j,R,xt),j.side=kr):y.renderBufferDirect(J,q,tt,j,R,xt),R.onAfterRender(y,q,J,tt,j,xt)}function Wd(R,q,J){q.isScene!==!0&&(q=jt);const tt=Et.get(R),j=m.state.lights,xt=m.state.shadowsArray,Dt=j.state.version,kt=$t.getParameters(R,j.state,xt,q,J),zt=$t.getProgramCacheKey(kt);let te=tt.programs;tt.environment=R.isMeshStandardMaterial?q.environment:null,tt.fog=q.fog,tt.envMap=(R.isMeshStandardMaterial?K:C).get(R.envMap||tt.environment),tt.envMapRotation=tt.environment!==null&&R.envMap===null?q.environmentRotation:R.envMapRotation,te===void 0&&(R.addEventListener("dispose",re),te=new Map,tt.programs=te);let oe=te.get(zt);if(oe!==void 0){if(tt.currentProgram===oe&&tt.lightsStateVersion===Dt)return ES(R,kt),oe}else kt.uniforms=$t.getUniforms(R),R.onBeforeCompile(kt,y),oe=$t.acquireProgram(kt,zt),te.set(zt,oe),tt.uniforms=kt.uniforms;const Vt=tt.uniforms;return(!R.isShaderMaterial&&!R.isRawShaderMaterial||R.clipping===!0)&&(Vt.clippingPlanes=yt.uniform),ES(R,kt),tt.needsLights=MP(R),tt.lightsStateVersion=Dt,tt.needsLights&&(Vt.ambientLightColor.value=j.state.ambient,Vt.lightProbe.value=j.state.probe,Vt.directionalLights.value=j.state.directional,Vt.directionalLightShadows.value=j.state.directionalShadow,Vt.spotLights.value=j.state.spot,Vt.spotLightShadows.value=j.state.spotShadow,Vt.rectAreaLights.value=j.state.rectArea,Vt.ltc_1.value=j.state.rectAreaLTC1,Vt.ltc_2.value=j.state.rectAreaLTC2,Vt.pointLights.value=j.state.point,Vt.pointLightShadows.value=j.state.pointShadow,Vt.hemisphereLights.value=j.state.hemi,Vt.directionalShadowMap.value=j.state.directionalShadowMap,Vt.directionalShadowMatrix.value=j.state.directionalShadowMatrix,Vt.spotShadowMap.value=j.state.spotShadowMap,Vt.spotLightMatrix.value=j.state.spotLightMatrix,Vt.spotLightMap.value=j.state.spotLightMap,Vt.pointShadowMap.value=j.state.pointShadowMap,Vt.pointShadowMatrix.value=j.state.pointShadowMatrix),tt.currentProgram=oe,tt.uniformsList=null,oe}function AS(R){if(R.uniformsList===null){const q=R.currentProgram.getUniforms();R.uniformsList=kp.seqWithValue(q.seq,R.uniforms)}return R.uniformsList}function ES(R,q){const J=Et.get(R);J.outputColorSpace=q.outputColorSpace,J.batching=q.batching,J.batchingColor=q.batchingColor,J.instancing=q.instancing,J.instancingColor=q.instancingColor,J.instancingMorph=q.instancingMorph,J.skinning=q.skinning,J.morphTargets=q.morphTargets,J.morphNormals=q.morphNormals,J.morphColors=q.morphColors,J.morphTargetsCount=q.morphTargetsCount,J.numClippingPlanes=q.numClippingPlanes,J.numIntersection=q.numClipIntersection,J.vertexAlphas=q.vertexAlphas,J.vertexTangents=q.vertexTangents,J.toneMapping=q.toneMapping}function bP(R,q,J,tt,j){q.isScene!==!0&&(q=jt),F.resetTextureUnits();const xt=q.fog,Dt=tt.isMeshStandardMaterial?q.environment:null,kt=T===null?y.outputColorSpace:T.isXRRenderTarget===!0?T.texture.colorSpace:Ah,zt=(tt.isMeshStandardMaterial?K:C).get(tt.envMap||Dt),te=tt.vertexColors===!0&&!!J.attributes.color&&J.attributes.color.itemSize===4,oe=!!J.attributes.tangent&&(!!tt.normalMap||tt.anisotropy>0),Vt=!!J.morphAttributes.position,Se=!!J.morphAttributes.normal,Ve=!!J.morphAttributes.color;let He=Jo;tt.toneMapped&&(T===null||T.isXRRenderTarget===!0)&&(He=y.toneMapping);const xi=J.morphAttributes.position||J.morphAttributes.normal||J.morphAttributes.color,Ce=xi!==void 0?xi.length:0,Wt=Et.get(tt),fr=m.state.lights;if(B===!0&&(nt===!0||R!==w)){const Ki=R===w&&tt.id===A;yt.setState(tt,R,Ki)}let Re=!1;tt.version===Wt.__version?(Wt.needsLights&&Wt.lightsStateVersion!==fr.state.version||Wt.outputColorSpace!==kt||j.isBatchedMesh&&Wt.batching===!1||!j.isBatchedMesh&&Wt.batching===!0||j.isBatchedMesh&&Wt.batchingColor===!0&&j.colorTexture===null||j.isBatchedMesh&&Wt.batchingColor===!1&&j.colorTexture!==null||j.isInstancedMesh&&Wt.instancing===!1||!j.isInstancedMesh&&Wt.instancing===!0||j.isSkinnedMesh&&Wt.skinning===!1||!j.isSkinnedMesh&&Wt.skinning===!0||j.isInstancedMesh&&Wt.instancingColor===!0&&j.instanceColor===null||j.isInstancedMesh&&Wt.instancingColor===!1&&j.instanceColor!==null||j.isInstancedMesh&&Wt.instancingMorph===!0&&j.morphTexture===null||j.isInstancedMesh&&Wt.instancingMorph===!1&&j.morphTexture!==null||Wt.envMap!==zt||tt.fog===!0&&Wt.fog!==xt||Wt.numClippingPlanes!==void 0&&(Wt.numClippingPlanes!==yt.numPlanes||Wt.numIntersection!==yt.numIntersection)||Wt.vertexAlphas!==te||Wt.vertexTangents!==oe||Wt.morphTargets!==Vt||Wt.morphNormals!==Se||Wt.morphColors!==Ve||Wt.toneMapping!==He||Wt.morphTargetsCount!==Ce)&&(Re=!0):(Re=!0,Wt.__version=tt.version);let us=Wt.currentProgram;Re===!0&&(us=Wd(tt,q,j));let Ec=!1,Fi=!1,Uh=!1;const $e=us.getUniforms(),Xs=Wt.uniforms;if(St.useProgram(us.program)&&(Ec=!0,Fi=!0,Uh=!0),tt.id!==A&&(A=tt.id,Fi=!0),Ec||w!==R){St.buffers.depth.getReversed()?(at.copy(R.projectionMatrix),E3(at),C3(at),$e.setValue(V,"projectionMatrix",at)):$e.setValue(V,"projectionMatrix",R.projectionMatrix),$e.setValue(V,"viewMatrix",R.matrixWorldInverse);const vo=$e.map.cameraPosition;vo!==void 0&&vo.setValue(V,Nt.setFromMatrixPosition(R.matrixWorld)),Ot.logarithmicDepthBuffer&&$e.setValue(V,"logDepthBufFC",2/(Math.log(R.far+1)/Math.LN2)),(tt.isMeshPhongMaterial||tt.isMeshToonMaterial||tt.isMeshLambertMaterial||tt.isMeshBasicMaterial||tt.isMeshStandardMaterial||tt.isShaderMaterial)&&$e.setValue(V,"isOrthographic",R.isOrthographicCamera===!0),w!==R&&(w=R,Fi=!0,Uh=!0)}if(j.isSkinnedMesh){$e.setOptional(V,j,"bindMatrix"),$e.setOptional(V,j,"bindMatrixInverse");const Ki=j.skeleton;Ki&&(Ki.boneTexture===null&&Ki.computeBoneTexture(),$e.setValue(V,"boneTexture",Ki.boneTexture,F))}j.isBatchedMesh&&($e.setOptional(V,j,"batchingTexture"),$e.setValue(V,"batchingTexture",j._matricesTexture,F),$e.setOptional(V,j,"batchingIdTexture"),$e.setValue(V,"batchingIdTexture",j._indirectTexture,F),$e.setOptional(V,j,"batchingColorTexture"),j._colorsTexture!==null&&$e.setValue(V,"batchingColorTexture",j._colorsTexture,F));const kh=J.morphAttributes;if((kh.position!==void 0||kh.normal!==void 0||kh.color!==void 0)&&Qt.update(j,J,us),(Fi||Wt.receiveShadow!==j.receiveShadow)&&(Wt.receiveShadow=j.receiveShadow,$e.setValue(V,"receiveShadow",j.receiveShadow)),tt.isMeshGouraudMaterial&&tt.envMap!==null&&(Xs.envMap.value=zt,Xs.flipEnvMap.value=zt.isCubeTexture&&zt.isRenderTargetTexture===!1?-1:1),tt.isMeshStandardMaterial&&tt.envMap===null&&q.environment!==null&&(Xs.envMapIntensity.value=q.environmentIntensity),Fi&&($e.setValue(V,"toneMappingExposure",y.toneMappingExposure),Wt.needsLights&&SP(Xs,Uh),xt&&tt.fog===!0&&Rt.refreshFogUniforms(Xs,xt),Rt.refreshMaterialUniforms(Xs,tt,z,k,m.state.transmissionRenderTarget[R.id]),kp.upload(V,AS(Wt),Xs,F)),tt.isShaderMaterial&&tt.uniformsNeedUpdate===!0&&(kp.upload(V,AS(Wt),Xs,F),tt.uniformsNeedUpdate=!1),tt.isSpriteMaterial&&$e.setValue(V,"center",j.center),$e.setValue(V,"modelViewMatrix",j.modelViewMatrix),$e.setValue(V,"normalMatrix",j.normalMatrix),$e.setValue(V,"modelMatrix",j.matrixWorld),tt.isShaderMaterial||tt.isRawShaderMaterial){const Ki=tt.uniformsGroups;for(let vo=0,bo=Ki.length;vo<bo;vo++){const CS=Ki[vo];G.update(CS,us),G.bind(CS,us)}}return us}function SP(R,q){R.ambientLightColor.needsUpdate=q,R.lightProbe.needsUpdate=q,R.directionalLights.needsUpdate=q,R.directionalLightShadows.needsUpdate=q,R.pointLights.needsUpdate=q,R.pointLightShadows.needsUpdate=q,R.spotLights.needsUpdate=q,R.spotLightShadows.needsUpdate=q,R.rectAreaLights.needsUpdate=q,R.hemisphereLights.needsUpdate=q}function MP(R){return R.isMeshLambertMaterial||R.isMeshToonMaterial||R.isMeshPhongMaterial||R.isMeshStandardMaterial||R.isShadowMaterial||R.isShaderMaterial&&R.lights===!0}this.getActiveCubeFace=function(){return S},this.getActiveMipmapLevel=function(){return M},this.getRenderTarget=function(){return T},this.setRenderTargetTextures=function(R,q,J){Et.get(R.texture).__webglTexture=q,Et.get(R.depthTexture).__webglTexture=J;const tt=Et.get(R);tt.__hasExternalTextures=!0,tt.__autoAllocateDepthBuffer=J===void 0,tt.__autoAllocateDepthBuffer||mt.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),tt.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(R,q){const J=Et.get(R);J.__webglFramebuffer=q,J.__useDefaultFramebuffer=q===void 0},this.setRenderTarget=function(R,q=0,J=0){T=R,S=q,M=J;let tt=!0,j=null,xt=!1,Dt=!1;if(R){const zt=Et.get(R);if(zt.__useDefaultFramebuffer!==void 0)St.bindFramebuffer(V.FRAMEBUFFER,null),tt=!1;else if(zt.__webglFramebuffer===void 0)F.setupRenderTarget(R);else if(zt.__hasExternalTextures)F.rebindTextures(R,Et.get(R.texture).__webglTexture,Et.get(R.depthTexture).__webglTexture);else if(R.depthBuffer){const Vt=R.depthTexture;if(zt.__boundDepthTexture!==Vt){if(Vt!==null&&Et.has(Vt)&&(R.width!==Vt.image.width||R.height!==Vt.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");F.setupDepthRenderbuffer(R)}}const te=R.texture;(te.isData3DTexture||te.isDataArrayTexture||te.isCompressedArrayTexture)&&(Dt=!0);const oe=Et.get(R).__webglFramebuffer;R.isWebGLCubeRenderTarget?(Array.isArray(oe[q])?j=oe[q][J]:j=oe[q],xt=!0):R.samples>0&&F.useMultisampledRTT(R)===!1?j=Et.get(R).__webglMultisampledFramebuffer:Array.isArray(oe)?j=oe[J]:j=oe,E.copy(R.viewport),N.copy(R.scissor),I=R.scissorTest}else E.copy(W).multiplyScalar(z).floor(),N.copy(lt).multiplyScalar(z).floor(),I=wt;if(St.bindFramebuffer(V.FRAMEBUFFER,j)&&tt&&St.drawBuffers(R,j),St.viewport(E),St.scissor(N),St.setScissorTest(I),xt){const zt=Et.get(R.texture);V.framebufferTexture2D(V.FRAMEBUFFER,V.COLOR_ATTACHMENT0,V.TEXTURE_CUBE_MAP_POSITIVE_X+q,zt.__webglTexture,J)}else if(Dt){const zt=Et.get(R.texture),te=q||0;V.framebufferTextureLayer(V.FRAMEBUFFER,V.COLOR_ATTACHMENT0,zt.__webglTexture,J||0,te)}A=-1},this.readRenderTargetPixels=function(R,q,J,tt,j,xt,Dt){if(!(R&&R.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let kt=Et.get(R).__webglFramebuffer;if(R.isWebGLCubeRenderTarget&&Dt!==void 0&&(kt=kt[Dt]),kt){St.bindFramebuffer(V.FRAMEBUFFER,kt);try{const zt=R.texture,te=zt.format,oe=zt.type;if(!Ot.textureFormatReadable(te)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!Ot.textureTypeReadable(oe)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}q>=0&&q<=R.width-tt&&J>=0&&J<=R.height-j&&V.readPixels(q,J,tt,j,ae.convert(te),ae.convert(oe),xt)}finally{const zt=T!==null?Et.get(T).__webglFramebuffer:null;St.bindFramebuffer(V.FRAMEBUFFER,zt)}}},this.readRenderTargetPixelsAsync=async function(R,q,J,tt,j,xt,Dt){if(!(R&&R.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let kt=Et.get(R).__webglFramebuffer;if(R.isWebGLCubeRenderTarget&&Dt!==void 0&&(kt=kt[Dt]),kt){const zt=R.texture,te=zt.format,oe=zt.type;if(!Ot.textureFormatReadable(te))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!Ot.textureTypeReadable(oe))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");if(q>=0&&q<=R.width-tt&&J>=0&&J<=R.height-j){St.bindFramebuffer(V.FRAMEBUFFER,kt);const Vt=V.createBuffer();V.bindBuffer(V.PIXEL_PACK_BUFFER,Vt),V.bufferData(V.PIXEL_PACK_BUFFER,xt.byteLength,V.STREAM_READ),V.readPixels(q,J,tt,j,ae.convert(te),ae.convert(oe),0);const Se=T!==null?Et.get(T).__webglFramebuffer:null;St.bindFramebuffer(V.FRAMEBUFFER,Se);const Ve=V.fenceSync(V.SYNC_GPU_COMMANDS_COMPLETE,0);return V.flush(),await A3(V,Ve,4),V.bindBuffer(V.PIXEL_PACK_BUFFER,Vt),V.getBufferSubData(V.PIXEL_PACK_BUFFER,0,xt),V.deleteBuffer(Vt),V.deleteSync(Ve),xt}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")}},this.copyFramebufferToTexture=function(R,q=null,J=0){R.isTexture!==!0&&(yu("WebGLRenderer: copyFramebufferToTexture function signature has changed."),q=arguments[0]||null,R=arguments[1]);const tt=Math.pow(2,-J),j=Math.floor(R.image.width*tt),xt=Math.floor(R.image.height*tt),Dt=q!==null?q.x:0,kt=q!==null?q.y:0;F.setTexture2D(R,0),V.copyTexSubImage2D(V.TEXTURE_2D,J,0,0,Dt,kt,j,xt),St.unbindTexture()},this.copyTextureToTexture=function(R,q,J=null,tt=null,j=0){R.isTexture!==!0&&(yu("WebGLRenderer: copyTextureToTexture function signature has changed."),tt=arguments[0]||null,R=arguments[1],q=arguments[2],j=arguments[3]||0,J=null);let xt,Dt,kt,zt,te,oe,Vt,Se,Ve;const He=R.isCompressedTexture?R.mipmaps[j]:R.image;J!==null?(xt=J.max.x-J.min.x,Dt=J.max.y-J.min.y,kt=J.isBox3?J.max.z-J.min.z:1,zt=J.min.x,te=J.min.y,oe=J.isBox3?J.min.z:0):(xt=He.width,Dt=He.height,kt=He.depth||1,zt=0,te=0,oe=0),tt!==null?(Vt=tt.x,Se=tt.y,Ve=tt.z):(Vt=0,Se=0,Ve=0);const xi=ae.convert(q.format),Ce=ae.convert(q.type);let Wt;q.isData3DTexture?(F.setTexture3D(q,0),Wt=V.TEXTURE_3D):q.isDataArrayTexture||q.isCompressedArrayTexture?(F.setTexture2DArray(q,0),Wt=V.TEXTURE_2D_ARRAY):(F.setTexture2D(q,0),Wt=V.TEXTURE_2D),V.pixelStorei(V.UNPACK_FLIP_Y_WEBGL,q.flipY),V.pixelStorei(V.UNPACK_PREMULTIPLY_ALPHA_WEBGL,q.premultiplyAlpha),V.pixelStorei(V.UNPACK_ALIGNMENT,q.unpackAlignment);const fr=V.getParameter(V.UNPACK_ROW_LENGTH),Re=V.getParameter(V.UNPACK_IMAGE_HEIGHT),us=V.getParameter(V.UNPACK_SKIP_PIXELS),Ec=V.getParameter(V.UNPACK_SKIP_ROWS),Fi=V.getParameter(V.UNPACK_SKIP_IMAGES);V.pixelStorei(V.UNPACK_ROW_LENGTH,He.width),V.pixelStorei(V.UNPACK_IMAGE_HEIGHT,He.height),V.pixelStorei(V.UNPACK_SKIP_PIXELS,zt),V.pixelStorei(V.UNPACK_SKIP_ROWS,te),V.pixelStorei(V.UNPACK_SKIP_IMAGES,oe);const Uh=R.isDataArrayTexture||R.isData3DTexture,$e=q.isDataArrayTexture||q.isData3DTexture;if(R.isRenderTargetTexture||R.isDepthTexture){const Xs=Et.get(R),kh=Et.get(q),Ki=Et.get(Xs.__renderTarget),vo=Et.get(kh.__renderTarget);St.bindFramebuffer(V.READ_FRAMEBUFFER,Ki.__webglFramebuffer),St.bindFramebuffer(V.DRAW_FRAMEBUFFER,vo.__webglFramebuffer);for(let bo=0;bo<kt;bo++)Uh&&V.framebufferTextureLayer(V.READ_FRAMEBUFFER,V.COLOR_ATTACHMENT0,Et.get(R).__webglTexture,j,oe+bo),R.isDepthTexture?($e&&V.framebufferTextureLayer(V.DRAW_FRAMEBUFFER,V.COLOR_ATTACHMENT0,Et.get(q).__webglTexture,j,Ve+bo),V.blitFramebuffer(zt,te,xt,Dt,Vt,Se,xt,Dt,V.DEPTH_BUFFER_BIT,V.NEAREST)):$e?V.copyTexSubImage3D(Wt,j,Vt,Se,Ve+bo,zt,te,xt,Dt):V.copyTexSubImage2D(Wt,j,Vt,Se,Ve+bo,zt,te,xt,Dt);St.bindFramebuffer(V.READ_FRAMEBUFFER,null),St.bindFramebuffer(V.DRAW_FRAMEBUFFER,null)}else $e?R.isDataTexture||R.isData3DTexture?V.texSubImage3D(Wt,j,Vt,Se,Ve,xt,Dt,kt,xi,Ce,He.data):q.isCompressedArrayTexture?V.compressedTexSubImage3D(Wt,j,Vt,Se,Ve,xt,Dt,kt,xi,He.data):V.texSubImage3D(Wt,j,Vt,Se,Ve,xt,Dt,kt,xi,Ce,He):R.isDataTexture?V.texSubImage2D(V.TEXTURE_2D,j,Vt,Se,xt,Dt,xi,Ce,He.data):R.isCompressedTexture?V.compressedTexSubImage2D(V.TEXTURE_2D,j,Vt,Se,He.width,He.height,xi,He.data):V.texSubImage2D(V.TEXTURE_2D,j,Vt,Se,xt,Dt,xi,Ce,He);V.pixelStorei(V.UNPACK_ROW_LENGTH,fr),V.pixelStorei(V.UNPACK_IMAGE_HEIGHT,Re),V.pixelStorei(V.UNPACK_SKIP_PIXELS,us),V.pixelStorei(V.UNPACK_SKIP_ROWS,Ec),V.pixelStorei(V.UNPACK_SKIP_IMAGES,Fi),j===0&&q.generateMipmaps&&V.generateMipmap(Wt),St.unbindTexture()},this.copyTextureToTexture3D=function(R,q,J=null,tt=null,j=0){return R.isTexture!==!0&&(yu("WebGLRenderer: copyTextureToTexture3D function signature has changed."),J=arguments[0]||null,tt=arguments[1]||null,R=arguments[2],q=arguments[3],j=arguments[4]||0),yu('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(R,q,J,tt,j)},this.initRenderTarget=function(R){Et.get(R).__webglFramebuffer===void 0&&F.setupRenderTarget(R)},this.initTexture=function(R){R.isCubeTexture?F.setTextureCube(R,0):R.isData3DTexture?F.setTexture3D(R,0):R.isDataArrayTexture||R.isCompressedArrayTexture?F.setTexture2DArray(R,0):F.setTexture2D(R,0),St.unbindTexture()},this.resetState=function(){S=0,M=0,T=null,St.reset(),ze.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return qr}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(t){this._outputColorSpace=t;const e=this.getContext();e.drawingBufferColorspace=be._getDrawingBufferColorSpace(t),e.unpackColorSpace=be._getUnpackColorSpace()}}let BG=class extends cs{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new hc,this.environmentIntensity=1,this.environmentRotation=new hc,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,this.backgroundRotation.copy(t.backgroundRotation),this.environmentIntensity=t.environmentIntensity,this.environmentRotation.copy(t.environmentRotation),t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return this.fog!==null&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(e.object.backgroundIntensity=this.backgroundIntensity),e.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(e.object.environmentIntensity=this.environmentIntensity),e.object.environmentRotation=this.environmentRotation.toArray(),e}},UG=class PC extends Sc{constructor(t=1,e=32,n=16,i=0,r=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:r,thetaStart:o,thetaLength:a},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const c=Math.min(o+a,Math.PI);let l=0;const h=[],u=new X,d=new X,f=[],p=[],_=[],g=[];for(let m=0;m<=n;m++){const x=[],v=m/n;let y=0;m===0&&o===0?y=.5/e:m===n&&c===Math.PI&&(y=-.5/e);for(let b=0;b<=e;b++){const S=b/e;u.x=-t*Math.cos(i+S*r)*Math.sin(o+v*a),u.y=t*Math.cos(o+v*a),u.z=t*Math.sin(i+S*r)*Math.sin(o+v*a),p.push(u.x,u.y,u.z),d.copy(u).normalize(),_.push(d.x,d.y,d.z),g.push(S+y,1-v),x.push(l++)}h.push(x)}for(let m=0;m<n;m++)for(let x=0;x<e;x++){const v=h[m][x+1],y=h[m][x],b=h[m+1][x],S=h[m+1][x+1];(m!==0||o>0)&&f.push(v,y,S),(m!==n-1||c<Math.PI)&&f.push(y,b,S)}this.setIndex(f),this.setAttribute("position",new os(p,3)),this.setAttribute("normal",new os(_,3)),this.setAttribute("uv",new os(g,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new PC(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}};const ET={enabled:!1,files:{},add:function(s,t){this.enabled!==!1&&(this.files[s]=t)},get:function(s){if(this.enabled!==!1)return this.files[s]},remove:function(s){delete this.files[s]},clear:function(){this.files={}}};class kG{constructor(t,e,n){const i=this;let r=!1,o=0,a=0,c;const l=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(h){a++,r===!1&&i.onStart!==void 0&&i.onStart(h,o,a),r=!0},this.itemEnd=function(h){o++,i.onProgress!==void 0&&i.onProgress(h,o,a),o===a&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(h){i.onError!==void 0&&i.onError(h)},this.resolveURL=function(h){return c?c(h):h},this.setURLModifier=function(h){return c=h,this},this.addHandler=function(h,u){return l.push(h,u),this},this.removeHandler=function(h){const u=l.indexOf(h);return u!==-1&&l.splice(u,2),this},this.getHandler=function(h){for(let u=0,d=l.length;u<d;u+=2){const f=l[u],p=l[u+1];if(f.global&&(f.lastIndex=0),f.test(h))return p}return null}}}const zG=new kG;class db{constructor(t){this.manager=t!==void 0?t:zG,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise(function(i,r){n.load(t,i,e,r)})}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}db.DEFAULT_MATERIAL_NAME="__DEFAULT";class VG extends db{constructor(t){super(t)}load(t,e,n,i){this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,o=ET.get(t);if(o!==void 0)return r.manager.itemStart(t),setTimeout(function(){e&&e(o),r.manager.itemEnd(t)},0),o;const a=ed("img");function c(){h(),ET.add(t,this),e&&e(this),r.manager.itemEnd(t)}function l(u){h(),i&&i(u),r.manager.itemError(t),r.manager.itemEnd(t)}function h(){a.removeEventListener("load",c,!1),a.removeEventListener("error",l,!1)}return a.addEventListener("load",c,!1),a.addEventListener("error",l,!1),t.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),r.manager.itemStart(t),a.src=t,a}}class GG extends db{constructor(t){super(t)}load(t,e,n,i){const r=new js,o=new VG(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(t,function(a){r.image=a,r.needsUpdate=!0,e!==void 0&&e(r)},n,i),r}}let DC=class extends cs{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new Ee(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(e.object.target=this.target.uuid),e}};const z_=new un,CT=new X,RT=new X;let HG=class{constructor(t){this.camera=t,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new qt(512,512),this.map=null,this.mapPass=null,this.matrix=new un,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new lb,this._frameExtents=new qt(1,1),this._viewportCount=1,this._viewports=[new vn(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;CT.setFromMatrixPosition(t.matrixWorld),e.position.copy(CT),RT.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(RT),e.updateMatrixWorld(),z_.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(z_),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(z_)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.intensity=t.intensity,this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const t={};return this.intensity!==1&&(t.intensity=this.intensity),this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}},$G=class extends HG{constructor(){super(new hb(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}},WG=class extends DC{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(cs.DEFAULT_UP),this.updateMatrix(),this.target=new cs,this.shadow=new $G}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}},qG=class extends DC{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}};class IC{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=NT(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=NT();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function NT(){return performance.now()}const PT=new un;class FC{constructor(t,e,n=0,i=1/0){this.ray=new rb(t,e),this.near=n,this.far=i,this.camera=null,this.layers=new ob,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}setFromXRController(t){return PT.identity().extractRotation(t.matrixWorld),this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(PT),this}intersectObject(t,e=!0,n=[]){return lx(t,this,n,e),n.sort(DT),n}intersectObjects(t,e=!0,n=[]){for(let i=0,r=t.length;i<r;i++)lx(t[i],this,n,e);return n.sort(DT),n}}function DT(s,t){return s.distance-t.distance}function lx(s,t,e,n){let i=!0;if(s.layers.test(t.layers)&&s.raycast(t,e)===!1&&(i=!1),i===!0&&n===!0){const r=s.children;for(let o=0,a=r.length;o<a;o++)lx(r[o],t,e,!0)}}class hx{constructor(t=1,e=0,n=0){return this.radius=t,this.phi=e,this.theta=n,this}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(Jn(e/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class fg extends pa{constructor(t,e=null){super(),this.object=t,this.domElement=e,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(){}disconnect(){}dispose(){}update(){}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:ag}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=ag);const kl=new Or,zr=new qt,OC=new X,V_=new qt,zp=new qt,vm=new X,ux=new X,LC=new un,BC=new X,UC=new X;let Mi=null,Ys=null;const Vr=[],ta={NONE:-1,PAN:0,ROTATE:1};class jG extends fg{constructor(t,e,n=null){super(e,n),this.objects=t,this.recursive=!0,this.transformGroup=!1,this.rotateSpeed=1,this.raycaster=new FC,this.mouseButtons={LEFT:In.PAN,MIDDLE:In.PAN,RIGHT:In.ROTATE},this.touches={ONE:$r.PAN},this._onPointerMove=XG.bind(this),this._onPointerDown=YG.bind(this),this._onPointerCancel=ZG.bind(this),this._onContextMenu=KG.bind(this),n!==null&&this.connect()}connect(){this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointerup",this._onPointerCancel),this.domElement.addEventListener("pointerleave",this._onPointerCancel),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointerup",this._onPointerCancel),this.domElement.removeEventListener("pointerleave",this._onPointerCancel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="auto",this.domElement.style.cursor=""}dispose(){this.disconnect()}_updatePointer(t){const e=this.domElement.getBoundingClientRect();zr.x=(t.clientX-e.left)/e.width*2-1,zr.y=-(t.clientY-e.top)/e.height*2+1}_updateState(t){let e;if(t.pointerType==="touch")e=this.touches.ONE;else switch(t.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=null}switch(e){case In.PAN:case $r.PAN:this.state=ta.PAN;break;case In.ROTATE:case $r.ROTATE:this.state=ta.ROTATE;break;default:this.state=ta.NONE}}getRaycaster(){return console.warn("THREE.DragControls: getRaycaster() has been deprecated. Use controls.raycaster instead."),this.raycaster}setObjects(t){console.warn("THREE.DragControls: setObjects() has been deprecated. Use controls.objects instead."),this.objects=t}getObjects(){return console.warn("THREE.DragControls: getObjects() has been deprecated. Use controls.objects instead."),this.objects}activate(){console.warn("THREE.DragControls: activate() has been renamed to connect()."),this.connect()}deactivate(){console.warn("THREE.DragControls: deactivate() has been renamed to disconnect()."),this.disconnect()}set mode(t){console.warn("THREE.DragControls: The .mode property has been removed. Define the type of transformation via the .mouseButtons or .touches properties.")}get mode(){console.warn("THREE.DragControls: The .mode property has been removed. Define the type of transformation via the .mouseButtons or .touches properties.")}}function XG(s){const t=this.object,e=this.domElement,n=this.raycaster;if(this.enabled!==!1){if(this._updatePointer(s),n.setFromCamera(zr,t),Mi)this.state===ta.PAN?n.ray.intersectPlane(kl,vm)&&Mi.position.copy(vm.sub(OC).applyMatrix4(LC)):this.state===ta.ROTATE&&(V_.subVectors(zr,zp).multiplyScalar(this.rotateSpeed),Mi.rotateOnWorldAxis(BC,V_.x),Mi.rotateOnWorldAxis(UC.normalize(),-V_.y)),this.dispatchEvent({type:"drag",object:Mi}),zp.copy(zr);else if(s.pointerType==="mouse"||s.pointerType==="pen")if(Vr.length=0,n.setFromCamera(zr,t),n.intersectObjects(this.objects,this.recursive,Vr),Vr.length>0){const i=Vr[0].object;kl.setFromNormalAndCoplanarPoint(t.getWorldDirection(kl.normal),ux.setFromMatrixPosition(i.matrixWorld)),Ys!==i&&Ys!==null&&(this.dispatchEvent({type:"hoveroff",object:Ys}),e.style.cursor="auto",Ys=null),Ys!==i&&(this.dispatchEvent({type:"hoveron",object:i}),e.style.cursor="pointer",Ys=i)}else Ys!==null&&(this.dispatchEvent({type:"hoveroff",object:Ys}),e.style.cursor="auto",Ys=null);zp.copy(zr)}}function YG(s){const t=this.object,e=this.domElement,n=this.raycaster;this.enabled!==!1&&(this._updatePointer(s),this._updateState(s),Vr.length=0,n.setFromCamera(zr,t),n.intersectObjects(this.objects,this.recursive,Vr),Vr.length>0&&(this.transformGroup===!0?Mi=kC(Vr[0].object):Mi=Vr[0].object,kl.setFromNormalAndCoplanarPoint(t.getWorldDirection(kl.normal),ux.setFromMatrixPosition(Mi.matrixWorld)),n.ray.intersectPlane(kl,vm)&&(this.state===ta.PAN?(LC.copy(Mi.parent.matrixWorld).invert(),OC.copy(vm).sub(ux.setFromMatrixPosition(Mi.matrixWorld))):this.state===ta.ROTATE&&(BC.set(0,1,0).applyQuaternion(t.quaternion).normalize(),UC.set(1,0,0).applyQuaternion(t.quaternion).normalize())),e.style.cursor="move",this.dispatchEvent({type:"dragstart",object:Mi})),zp.copy(zr))}function ZG(){this.enabled!==!1&&(Mi&&(this.dispatchEvent({type:"dragend",object:Mi}),Mi=null),this.domElement.style.cursor=Ys?"pointer":"auto",this.state=ta.NONE)}function KG(s){this.enabled!==!1&&s.preventDefault()}function kC(s,t=null){return s.isGroup&&(t=s),s.parent===null?t:kC(s.parent,t)}function QG(s,t,e){var n,i=1;s==null&&(s=0),t==null&&(t=0),e==null&&(e=0);function r(){var o,a=n.length,c,l=0,h=0,u=0;for(o=0;o<a;++o)c=n[o],l+=c.x||0,h+=c.y||0,u+=c.z||0;for(l=(l/a-s)*i,h=(h/a-t)*i,u=(u/a-e)*i,o=0;o<a;++o)c=n[o],l&&(c.x-=l),h&&(c.y-=h),u&&(c.z-=u)}return r.initialize=function(o){n=o},r.x=function(o){return arguments.length?(s=+o,r):s},r.y=function(o){return arguments.length?(t=+o,r):t},r.z=function(o){return arguments.length?(e=+o,r):e},r.strength=function(o){return arguments.length?(i=+o,r):i},r}function JG(s){const t=+this._x.call(null,s);return zC(this.cover(t),t,s)}function zC(s,t,e){if(isNaN(t))return s;var n,i=s._root,r={data:e},o=s._x0,a=s._x1,c,l,h,u,d;if(!i)return s._root=r,s;for(;i.length;)if((h=t>=(c=(o+a)/2))?o=c:a=c,n=i,!(i=i[u=+h]))return n[u]=r,s;if(l=+s._x.call(null,i.data),t===l)return r.next=i,n?n[u]=r:s._root=r,s;do n=n?n[u]=new Array(2):s._root=new Array(2),(h=t>=(c=(o+a)/2))?o=c:a=c;while((u=+h)==(d=+(l>=c)));return n[d]=i,n[u]=r,s}function t5(s){Array.isArray(s)||(s=Array.from(s));const t=s.length,e=new Float64Array(t);let n=1/0,i=-1/0;for(let r=0,o;r<t;++r)isNaN(o=+this._x.call(null,s[r]))||(e[r]=o,o<n&&(n=o),o>i&&(i=o));if(n>i)return this;this.cover(n).cover(i);for(let r=0;r<t;++r)zC(this,e[r],s[r]);return this}function e5(s){if(isNaN(s=+s))return this;var t=this._x0,e=this._x1;if(isNaN(t))e=(t=Math.floor(s))+1;else{for(var n=e-t||1,i=this._root,r,o;t>s||s>=e;)switch(o=+(s<t),r=new Array(2),r[o]=i,i=r,n*=2,o){case 0:e=t+n;break;case 1:t=e-n;break}this._root&&this._root.length&&(this._root=i)}return this._x0=t,this._x1=e,this}function n5(){var s=[];return this.visit(function(t){if(!t.length)do s.push(t.data);while(t=t.next)}),s}function i5(s){return arguments.length?this.cover(+s[0][0]).cover(+s[1][0]):isNaN(this._x0)?void 0:[[this._x0],[this._x1]]}function Qr(s,t,e){this.node=s,this.x0=t,this.x1=e}function s5(s,t){var e,n=this._x0,i,r,o=this._x1,a=[],c=this._root,l,h;for(c&&a.push(new Qr(c,n,o)),t==null?t=1/0:(n=s-t,o=s+t);l=a.pop();)if(!(!(c=l.node)||(i=l.x0)>o||(r=l.x1)<n))if(c.length){var u=(i+r)/2;a.push(new Qr(c[1],u,r),new Qr(c[0],i,u)),(h=+(s>=u))&&(l=a[a.length-1],a[a.length-1]=a[a.length-1-h],a[a.length-1-h]=l)}else{var d=Math.abs(s-+this._x.call(null,c.data));d<t&&(t=d,n=s-d,o=s+d,e=c.data)}return e}function r5(s){if(isNaN(c=+this._x.call(null,s)))return this;var t,e=this._root,n,i,r,o=this._x0,a=this._x1,c,l,h,u,d;if(!e)return this;if(e.length)for(;;){if((h=c>=(l=(o+a)/2))?o=l:a=l,t=e,!(e=e[u=+h]))return this;if(!e.length)break;t[u+1&1]&&(n=t,d=u)}for(;e.data!==s;)if(i=e,!(e=e.next))return this;return(r=e.next)&&delete e.next,i?(r?i.next=r:delete i.next,this):t?(r?t[u]=r:delete t[u],(e=t[0]||t[1])&&e===(t[1]||t[0])&&!e.length&&(n?n[d]=e:this._root=e),this):(this._root=r,this)}function o5(s){for(var t=0,e=s.length;t<e;++t)this.remove(s[t]);return this}function a5(){return this._root}function c5(){var s=0;return this.visit(function(t){if(!t.length)do++s;while(t=t.next)}),s}function l5(s){var t=[],e,n=this._root,i,r,o;for(n&&t.push(new Qr(n,this._x0,this._x1));e=t.pop();)if(!s(n=e.node,r=e.x0,o=e.x1)&&n.length){var a=(r+o)/2;(i=n[1])&&t.push(new Qr(i,a,o)),(i=n[0])&&t.push(new Qr(i,r,a))}return this}function h5(s){var t=[],e=[],n;for(this._root&&t.push(new Qr(this._root,this._x0,this._x1));n=t.pop();){var i=n.node;if(i.length){var r,o=n.x0,a=n.x1,c=(o+a)/2;(r=i[0])&&t.push(new Qr(r,o,c)),(r=i[1])&&t.push(new Qr(r,c,a))}e.push(n)}for(;n=e.pop();)s(n.node,n.x0,n.x1);return this}function u5(s){return s[0]}function d5(s){return arguments.length?(this._x=s,this):this._x}function VC(s,t){var e=new fb(t??u5,NaN,NaN);return s==null?e:e.addAll(s)}function fb(s,t,e){this._x=s,this._x0=t,this._x1=e,this._root=void 0}function IT(s){for(var t={data:s.data},e=t;s=s.next;)e=e.next={data:s.data};return t}var Di=VC.prototype=fb.prototype;Di.copy=function(){var s=new fb(this._x,this._x0,this._x1),t=this._root,e,n;if(!t)return s;if(!t.length)return s._root=IT(t),s;for(e=[{source:t,target:s._root=new Array(2)}];t=e.pop();)for(var i=0;i<2;++i)(n=t.source[i])&&(n.length?e.push({source:n,target:t.target[i]=new Array(2)}):t.target[i]=IT(n));return s};Di.add=JG;Di.addAll=t5;Di.cover=e5;Di.data=n5;Di.extent=i5;Di.find=s5;Di.remove=r5;Di.removeAll=o5;Di.root=a5;Di.size=c5;Di.visit=l5;Di.visitAfter=h5;Di.x=d5;function f5(s){const t=+this._x.call(null,s),e=+this._y.call(null,s);return GC(this.cover(t,e),t,e,s)}function GC(s,t,e,n){if(isNaN(t)||isNaN(e))return s;var i,r=s._root,o={data:n},a=s._x0,c=s._y0,l=s._x1,h=s._y1,u,d,f,p,_,g,m,x;if(!r)return s._root=o,s;for(;r.length;)if((_=t>=(u=(a+l)/2))?a=u:l=u,(g=e>=(d=(c+h)/2))?c=d:h=d,i=r,!(r=r[m=g<<1|_]))return i[m]=o,s;if(f=+s._x.call(null,r.data),p=+s._y.call(null,r.data),t===f&&e===p)return o.next=r,i?i[m]=o:s._root=o,s;do i=i?i[m]=new Array(4):s._root=new Array(4),(_=t>=(u=(a+l)/2))?a=u:l=u,(g=e>=(d=(c+h)/2))?c=d:h=d;while((m=g<<1|_)===(x=(p>=d)<<1|f>=u));return i[x]=r,i[m]=o,s}function p5(s){var t,e,n=s.length,i,r,o=new Array(n),a=new Array(n),c=1/0,l=1/0,h=-1/0,u=-1/0;for(e=0;e<n;++e)isNaN(i=+this._x.call(null,t=s[e]))||isNaN(r=+this._y.call(null,t))||(o[e]=i,a[e]=r,i<c&&(c=i),i>h&&(h=i),r<l&&(l=r),r>u&&(u=r));if(c>h||l>u)return this;for(this.cover(c,l).cover(h,u),e=0;e<n;++e)GC(this,o[e],a[e],s[e]);return this}function m5(s,t){if(isNaN(s=+s)||isNaN(t=+t))return this;var e=this._x0,n=this._y0,i=this._x1,r=this._y1;if(isNaN(e))i=(e=Math.floor(s))+1,r=(n=Math.floor(t))+1;else{for(var o=i-e||1,a=this._root,c,l;e>s||s>=i||n>t||t>=r;)switch(l=(t<n)<<1|s<e,c=new Array(4),c[l]=a,a=c,o*=2,l){case 0:i=e+o,r=n+o;break;case 1:e=i-o,r=n+o;break;case 2:i=e+o,n=r-o;break;case 3:e=i-o,n=r-o;break}this._root&&this._root.length&&(this._root=a)}return this._x0=e,this._y0=n,this._x1=i,this._y1=r,this}function g5(){var s=[];return this.visit(function(t){if(!t.length)do s.push(t.data);while(t=t.next)}),s}function _5(s){return arguments.length?this.cover(+s[0][0],+s[0][1]).cover(+s[1][0],+s[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]}function hi(s,t,e,n,i){this.node=s,this.x0=t,this.y0=e,this.x1=n,this.y1=i}function y5(s,t,e){var n,i=this._x0,r=this._y0,o,a,c,l,h=this._x1,u=this._y1,d=[],f=this._root,p,_;for(f&&d.push(new hi(f,i,r,h,u)),e==null?e=1/0:(i=s-e,r=t-e,h=s+e,u=t+e,e*=e);p=d.pop();)if(!(!(f=p.node)||(o=p.x0)>h||(a=p.y0)>u||(c=p.x1)<i||(l=p.y1)<r))if(f.length){var g=(o+c)/2,m=(a+l)/2;d.push(new hi(f[3],g,m,c,l),new hi(f[2],o,m,g,l),new hi(f[1],g,a,c,m),new hi(f[0],o,a,g,m)),(_=(t>=m)<<1|s>=g)&&(p=d[d.length-1],d[d.length-1]=d[d.length-1-_],d[d.length-1-_]=p)}else{var x=s-+this._x.call(null,f.data),v=t-+this._y.call(null,f.data),y=x*x+v*v;if(y<e){var b=Math.sqrt(e=y);i=s-b,r=t-b,h=s+b,u=t+b,n=f.data}}return n}function x5(s){if(isNaN(h=+this._x.call(null,s))||isNaN(u=+this._y.call(null,s)))return this;var t,e=this._root,n,i,r,o=this._x0,a=this._y0,c=this._x1,l=this._y1,h,u,d,f,p,_,g,m;if(!e)return this;if(e.length)for(;;){if((p=h>=(d=(o+c)/2))?o=d:c=d,(_=u>=(f=(a+l)/2))?a=f:l=f,t=e,!(e=e[g=_<<1|p]))return this;if(!e.length)break;(t[g+1&3]||t[g+2&3]||t[g+3&3])&&(n=t,m=g)}for(;e.data!==s;)if(i=e,!(e=e.next))return this;return(r=e.next)&&delete e.next,i?(r?i.next=r:delete i.next,this):t?(r?t[g]=r:delete t[g],(e=t[0]||t[1]||t[2]||t[3])&&e===(t[3]||t[2]||t[1]||t[0])&&!e.length&&(n?n[m]=e:this._root=e),this):(this._root=r,this)}function v5(s){for(var t=0,e=s.length;t<e;++t)this.remove(s[t]);return this}function b5(){return this._root}function S5(){var s=0;return this.visit(function(t){if(!t.length)do++s;while(t=t.next)}),s}function M5(s){var t=[],e,n=this._root,i,r,o,a,c;for(n&&t.push(new hi(n,this._x0,this._y0,this._x1,this._y1));e=t.pop();)if(!s(n=e.node,r=e.x0,o=e.y0,a=e.x1,c=e.y1)&&n.length){var l=(r+a)/2,h=(o+c)/2;(i=n[3])&&t.push(new hi(i,l,h,a,c)),(i=n[2])&&t.push(new hi(i,r,h,l,c)),(i=n[1])&&t.push(new hi(i,l,o,a,h)),(i=n[0])&&t.push(new hi(i,r,o,l,h))}return this}function T5(s){var t=[],e=[],n;for(this._root&&t.push(new hi(this._root,this._x0,this._y0,this._x1,this._y1));n=t.pop();){var i=n.node;if(i.length){var r,o=n.x0,a=n.y0,c=n.x1,l=n.y1,h=(o+c)/2,u=(a+l)/2;(r=i[0])&&t.push(new hi(r,o,a,h,u)),(r=i[1])&&t.push(new hi(r,h,a,c,u)),(r=i[2])&&t.push(new hi(r,o,u,h,l)),(r=i[3])&&t.push(new hi(r,h,u,c,l))}e.push(n)}for(;n=e.pop();)s(n.node,n.x0,n.y0,n.x1,n.y1);return this}function w5(s){return s[0]}function A5(s){return arguments.length?(this._x=s,this):this._x}function E5(s){return s[1]}function C5(s){return arguments.length?(this._y=s,this):this._y}function HC(s,t,e){var n=new pb(t??w5,e??E5,NaN,NaN,NaN,NaN);return s==null?n:n.addAll(s)}function pb(s,t,e,n,i,r){this._x=s,this._y=t,this._x0=e,this._y0=n,this._x1=i,this._y1=r,this._root=void 0}function FT(s){for(var t={data:s.data},e=t;s=s.next;)e=e.next={data:s.data};return t}var yi=HC.prototype=pb.prototype;yi.copy=function(){var s=new pb(this._x,this._y,this._x0,this._y0,this._x1,this._y1),t=this._root,e,n;if(!t)return s;if(!t.length)return s._root=FT(t),s;for(e=[{source:t,target:s._root=new Array(4)}];t=e.pop();)for(var i=0;i<4;++i)(n=t.source[i])&&(n.length?e.push({source:n,target:t.target[i]=new Array(4)}):t.target[i]=FT(n));return s};yi.add=f5;yi.addAll=p5;yi.cover=m5;yi.data=g5;yi.extent=_5;yi.find=y5;yi.remove=x5;yi.removeAll=v5;yi.root=b5;yi.size=S5;yi.visit=M5;yi.visitAfter=T5;yi.x=A5;yi.y=C5;function R5(s){const t=+this._x.call(null,s),e=+this._y.call(null,s),n=+this._z.call(null,s);return $C(this.cover(t,e,n),t,e,n,s)}function $C(s,t,e,n,i){if(isNaN(t)||isNaN(e)||isNaN(n))return s;var r,o=s._root,a={data:i},c=s._x0,l=s._y0,h=s._z0,u=s._x1,d=s._y1,f=s._z1,p,_,g,m,x,v,y,b,S,M,T;if(!o)return s._root=a,s;for(;o.length;)if((y=t>=(p=(c+u)/2))?c=p:u=p,(b=e>=(_=(l+d)/2))?l=_:d=_,(S=n>=(g=(h+f)/2))?h=g:f=g,r=o,!(o=o[M=S<<2|b<<1|y]))return r[M]=a,s;if(m=+s._x.call(null,o.data),x=+s._y.call(null,o.data),v=+s._z.call(null,o.data),t===m&&e===x&&n===v)return a.next=o,r?r[M]=a:s._root=a,s;do r=r?r[M]=new Array(8):s._root=new Array(8),(y=t>=(p=(c+u)/2))?c=p:u=p,(b=e>=(_=(l+d)/2))?l=_:d=_,(S=n>=(g=(h+f)/2))?h=g:f=g;while((M=S<<2|b<<1|y)===(T=(v>=g)<<2|(x>=_)<<1|m>=p));return r[T]=o,r[M]=a,s}function N5(s){Array.isArray(s)||(s=Array.from(s));const t=s.length,e=new Float64Array(t),n=new Float64Array(t),i=new Float64Array(t);let r=1/0,o=1/0,a=1/0,c=-1/0,l=-1/0,h=-1/0;for(let u=0,d,f,p,_;u<t;++u)isNaN(f=+this._x.call(null,d=s[u]))||isNaN(p=+this._y.call(null,d))||isNaN(_=+this._z.call(null,d))||(e[u]=f,n[u]=p,i[u]=_,f<r&&(r=f),f>c&&(c=f),p<o&&(o=p),p>l&&(l=p),_<a&&(a=_),_>h&&(h=_));if(r>c||o>l||a>h)return this;this.cover(r,o,a).cover(c,l,h);for(let u=0;u<t;++u)$C(this,e[u],n[u],i[u],s[u]);return this}function P5(s,t,e){if(isNaN(s=+s)||isNaN(t=+t)||isNaN(e=+e))return this;var n=this._x0,i=this._y0,r=this._z0,o=this._x1,a=this._y1,c=this._z1;if(isNaN(n))o=(n=Math.floor(s))+1,a=(i=Math.floor(t))+1,c=(r=Math.floor(e))+1;else{for(var l=o-n||1,h=this._root,u,d;n>s||s>=o||i>t||t>=a||r>e||e>=c;)switch(d=(e<r)<<2|(t<i)<<1|s<n,u=new Array(8),u[d]=h,h=u,l*=2,d){case 0:o=n+l,a=i+l,c=r+l;break;case 1:n=o-l,a=i+l,c=r+l;break;case 2:o=n+l,i=a-l,c=r+l;break;case 3:n=o-l,i=a-l,c=r+l;break;case 4:o=n+l,a=i+l,r=c-l;break;case 5:n=o-l,a=i+l,r=c-l;break;case 6:o=n+l,i=a-l,r=c-l;break;case 7:n=o-l,i=a-l,r=c-l;break}this._root&&this._root.length&&(this._root=h)}return this._x0=n,this._y0=i,this._z0=r,this._x1=o,this._y1=a,this._z1=c,this}function D5(){var s=[];return this.visit(function(t){if(!t.length)do s.push(t.data);while(t=t.next)}),s}function I5(s){return arguments.length?this.cover(+s[0][0],+s[0][1],+s[0][2]).cover(+s[1][0],+s[1][1],+s[1][2]):isNaN(this._x0)?void 0:[[this._x0,this._y0,this._z0],[this._x1,this._y1,this._z1]]}function ke(s,t,e,n,i,r,o){this.node=s,this.x0=t,this.y0=e,this.z0=n,this.x1=i,this.y1=r,this.z1=o}function F5(s,t,e,n){var i,r=this._x0,o=this._y0,a=this._z0,c,l,h,u,d,f,p=this._x1,_=this._y1,g=this._z1,m=[],x=this._root,v,y;for(x&&m.push(new ke(x,r,o,a,p,_,g)),n==null?n=1/0:(r=s-n,o=t-n,a=e-n,p=s+n,_=t+n,g=e+n,n*=n);v=m.pop();)if(!(!(x=v.node)||(c=v.x0)>p||(l=v.y0)>_||(h=v.z0)>g||(u=v.x1)<r||(d=v.y1)<o||(f=v.z1)<a))if(x.length){var b=(c+u)/2,S=(l+d)/2,M=(h+f)/2;m.push(new ke(x[7],b,S,M,u,d,f),new ke(x[6],c,S,M,b,d,f),new ke(x[5],b,l,M,u,S,f),new ke(x[4],c,l,M,b,S,f),new ke(x[3],b,S,h,u,d,M),new ke(x[2],c,S,h,b,d,M),new ke(x[1],b,l,h,u,S,M),new ke(x[0],c,l,h,b,S,M)),(y=(e>=M)<<2|(t>=S)<<1|s>=b)&&(v=m[m.length-1],m[m.length-1]=m[m.length-1-y],m[m.length-1-y]=v)}else{var T=s-+this._x.call(null,x.data),A=t-+this._y.call(null,x.data),w=e-+this._z.call(null,x.data),E=T*T+A*A+w*w;if(E<n){var N=Math.sqrt(n=E);r=s-N,o=t-N,a=e-N,p=s+N,_=t+N,g=e+N,i=x.data}}return i}function O5(s){if(isNaN(d=+this._x.call(null,s))||isNaN(f=+this._y.call(null,s))||isNaN(p=+this._z.call(null,s)))return this;var t,e=this._root,n,i,r,o=this._x0,a=this._y0,c=this._z0,l=this._x1,h=this._y1,u=this._z1,d,f,p,_,g,m,x,v,y,b,S;if(!e)return this;if(e.length)for(;;){if((x=d>=(_=(o+l)/2))?o=_:l=_,(v=f>=(g=(a+h)/2))?a=g:h=g,(y=p>=(m=(c+u)/2))?c=m:u=m,t=e,!(e=e[b=y<<2|v<<1|x]))return this;if(!e.length)break;(t[b+1&7]||t[b+2&7]||t[b+3&7]||t[b+4&7]||t[b+5&7]||t[b+6&7]||t[b+7&7])&&(n=t,S=b)}for(;e.data!==s;)if(i=e,!(e=e.next))return this;return(r=e.next)&&delete e.next,i?(r?i.next=r:delete i.next,this):t?(r?t[b]=r:delete t[b],(e=t[0]||t[1]||t[2]||t[3]||t[4]||t[5]||t[6]||t[7])&&e===(t[7]||t[6]||t[5]||t[4]||t[3]||t[2]||t[1]||t[0])&&!e.length&&(n?n[S]=e:this._root=e),this):(this._root=r,this)}function L5(s){for(var t=0,e=s.length;t<e;++t)this.remove(s[t]);return this}function B5(){return this._root}function U5(){var s=0;return this.visit(function(t){if(!t.length)do++s;while(t=t.next)}),s}function k5(s){var t=[],e,n=this._root,i,r,o,a,c,l,h;for(n&&t.push(new ke(n,this._x0,this._y0,this._z0,this._x1,this._y1,this._z1));e=t.pop();)if(!s(n=e.node,r=e.x0,o=e.y0,a=e.z0,c=e.x1,l=e.y1,h=e.z1)&&n.length){var u=(r+c)/2,d=(o+l)/2,f=(a+h)/2;(i=n[7])&&t.push(new ke(i,u,d,f,c,l,h)),(i=n[6])&&t.push(new ke(i,r,d,f,u,l,h)),(i=n[5])&&t.push(new ke(i,u,o,f,c,d,h)),(i=n[4])&&t.push(new ke(i,r,o,f,u,d,h)),(i=n[3])&&t.push(new ke(i,u,d,a,c,l,f)),(i=n[2])&&t.push(new ke(i,r,d,a,u,l,f)),(i=n[1])&&t.push(new ke(i,u,o,a,c,d,f)),(i=n[0])&&t.push(new ke(i,r,o,a,u,d,f))}return this}function z5(s){var t=[],e=[],n;for(this._root&&t.push(new ke(this._root,this._x0,this._y0,this._z0,this._x1,this._y1,this._z1));n=t.pop();){var i=n.node;if(i.length){var r,o=n.x0,a=n.y0,c=n.z0,l=n.x1,h=n.y1,u=n.z1,d=(o+l)/2,f=(a+h)/2,p=(c+u)/2;(r=i[0])&&t.push(new ke(r,o,a,c,d,f,p)),(r=i[1])&&t.push(new ke(r,d,a,c,l,f,p)),(r=i[2])&&t.push(new ke(r,o,f,c,d,h,p)),(r=i[3])&&t.push(new ke(r,d,f,c,l,h,p)),(r=i[4])&&t.push(new ke(r,o,a,p,d,f,u)),(r=i[5])&&t.push(new ke(r,d,a,p,l,f,u)),(r=i[6])&&t.push(new ke(r,o,f,p,d,h,u)),(r=i[7])&&t.push(new ke(r,d,f,p,l,h,u))}e.push(n)}for(;n=e.pop();)s(n.node,n.x0,n.y0,n.z0,n.x1,n.y1,n.z1);return this}function V5(s){return s[0]}function G5(s){return arguments.length?(this._x=s,this):this._x}function H5(s){return s[1]}function $5(s){return arguments.length?(this._y=s,this):this._y}function W5(s){return s[2]}function q5(s){return arguments.length?(this._z=s,this):this._z}function WC(s,t,e,n){var i=new mb(t??V5,e??H5,n??W5,NaN,NaN,NaN,NaN,NaN,NaN);return s==null?i:i.addAll(s)}function mb(s,t,e,n,i,r,o,a,c){this._x=s,this._y=t,this._z=e,this._x0=n,this._y0=i,this._z0=r,this._x1=o,this._y1=a,this._z1=c,this._root=void 0}function OT(s){for(var t={data:s.data},e=t;s=s.next;)e=e.next={data:s.data};return t}var si=WC.prototype=mb.prototype;si.copy=function(){var s=new mb(this._x,this._y,this._z,this._x0,this._y0,this._z0,this._x1,this._y1,this._z1),t=this._root,e,n;if(!t)return s;if(!t.length)return s._root=OT(t),s;for(e=[{source:t,target:s._root=new Array(8)}];t=e.pop();)for(var i=0;i<8;++i)(n=t.source[i])&&(n.length?e.push({source:n,target:t.target[i]=new Array(8)}):t.target[i]=OT(n));return s};si.add=R5;si.addAll=N5;si.cover=P5;si.data=D5;si.extent=I5;si.find=F5;si.remove=O5;si.removeAll=L5;si.root=B5;si.size=U5;si.visit=k5;si.visitAfter=z5;si.x=G5;si.y=$5;si.z=q5;function jr(s){return function(){return s}}function Lr(s){return(s()-.5)*1e-6}function j5(s){return s.index}function LT(s,t){var e=s.get(t);if(!e)throw new Error("node not found: "+t);return e}function X5(s){var t=j5,e=d,n,i=jr(30),r,o,a,c,l,h,u=1;s==null&&(s=[]);function d(m){return 1/Math.min(c[m.source.index],c[m.target.index])}function f(m){for(var x=0,v=s.length;x<u;++x)for(var y=0,b,S,M,T=0,A=0,w=0,E,N;y<v;++y)b=s[y],S=b.source,M=b.target,T=M.x+M.vx-S.x-S.vx||Lr(h),a>1&&(A=M.y+M.vy-S.y-S.vy||Lr(h)),a>2&&(w=M.z+M.vz-S.z-S.vz||Lr(h)),E=Math.sqrt(T*T+A*A+w*w),E=(E-r[y])/E*m*n[y],T*=E,A*=E,w*=E,M.vx-=T*(N=l[y]),a>1&&(M.vy-=A*N),a>2&&(M.vz-=w*N),S.vx+=T*(N=1-N),a>1&&(S.vy+=A*N),a>2&&(S.vz+=w*N)}function p(){if(o){var m,x=o.length,v=s.length,y=new Map(o.map((S,M)=>[t(S,M,o),S])),b;for(m=0,c=new Array(x);m<v;++m)b=s[m],b.index=m,typeof b.source!="object"&&(b.source=LT(y,b.source)),typeof b.target!="object"&&(b.target=LT(y,b.target)),c[b.source.index]=(c[b.source.index]||0)+1,c[b.target.index]=(c[b.target.index]||0)+1;for(m=0,l=new Array(v);m<v;++m)b=s[m],l[m]=c[b.source.index]/(c[b.source.index]+c[b.target.index]);n=new Array(v),_(),r=new Array(v),g()}}function _(){if(o)for(var m=0,x=s.length;m<x;++m)n[m]=+e(s[m],m,s)}function g(){if(o)for(var m=0,x=s.length;m<x;++m)r[m]=+i(s[m],m,s)}return f.initialize=function(m,...x){o=m,h=x.find(v=>typeof v=="function")||Math.random,a=x.find(v=>[1,2,3].includes(v))||2,p()},f.links=function(m){return arguments.length?(s=m,p(),f):s},f.id=function(m){return arguments.length?(t=m,f):t},f.iterations=function(m){return arguments.length?(u=+m,f):u},f.strength=function(m){return arguments.length?(e=typeof m=="function"?m:jr(+m),_(),f):e},f.distance=function(m){return arguments.length?(i=typeof m=="function"?m:jr(+m),g(),f):i},f}var Y5={value:()=>{}};function qC(){for(var s=0,t=arguments.length,e={},n;s<t;++s){if(!(n=arguments[s]+"")||n in e||/[\s.]/.test(n))throw new Error("illegal type: "+n);e[n]=[]}return new Vp(e)}function Vp(s){this._=s}function Z5(s,t){return s.trim().split(/^|\s+/).map(function(e){var n="",i=e.indexOf(".");if(i>=0&&(n=e.slice(i+1),e=e.slice(0,i)),e&&!t.hasOwnProperty(e))throw new Error("unknown type: "+e);return{type:e,name:n}})}Vp.prototype=qC.prototype={constructor:Vp,on:function(s,t){var e=this._,n=Z5(s+"",e),i,r=-1,o=n.length;if(arguments.length<2){for(;++r<o;)if((i=(s=n[r]).type)&&(i=K5(e[i],s.name)))return i;return}if(t!=null&&typeof t!="function")throw new Error("invalid callback: "+t);for(;++r<o;)if(i=(s=n[r]).type)e[i]=BT(e[i],s.name,t);else if(t==null)for(i in e)e[i]=BT(e[i],s.name,null);return this},copy:function(){var s={},t=this._;for(var e in t)s[e]=t[e].slice();return new Vp(s)},call:function(s,t){if((i=arguments.length-2)>0)for(var e=new Array(i),n=0,i,r;n<i;++n)e[n]=arguments[n+2];if(!this._.hasOwnProperty(s))throw new Error("unknown type: "+s);for(r=this._[s],n=0,i=r.length;n<i;++n)r[n].value.apply(t,e)},apply:function(s,t,e){if(!this._.hasOwnProperty(s))throw new Error("unknown type: "+s);for(var n=this._[s],i=0,r=n.length;i<r;++i)n[i].value.apply(t,e)}};function K5(s,t){for(var e=0,n=s.length,i;e<n;++e)if((i=s[e]).name===t)return i.value}function BT(s,t,e){for(var n=0,i=s.length;n<i;++n)if(s[n].name===t){s[n]=Y5,s=s.slice(0,n).concat(s.slice(n+1));break}return e!=null&&s.push({name:t,value:e}),s}var ch=0,vu=0,Qh=0,jC=1e3,bm,bu,Sm=0,uc=0,pg=0,nd=typeof performance=="object"&&performance.now?performance:Date,XC=typeof window=="object"&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(s){setTimeout(s,17)};function YC(){return uc||(XC(Q5),uc=nd.now()+pg)}function Q5(){uc=0}function dx(){this._call=this._time=this._next=null}dx.prototype=ZC.prototype={constructor:dx,restart:function(s,t,e){if(typeof s!="function")throw new TypeError("callback is not a function");e=(e==null?YC():+e)+(t==null?0:+t),!this._next&&bu!==this&&(bu?bu._next=this:bm=this,bu=this),this._call=s,this._time=e,fx()},stop:function(){this._call&&(this._call=null,this._time=1/0,fx())}};function ZC(s,t,e){var n=new dx;return n.restart(s,t,e),n}function J5(){YC(),++ch;for(var s=bm,t;s;)(t=uc-s._time)>=0&&s._call.call(void 0,t),s=s._next;--ch}function UT(){uc=(Sm=nd.now())+pg,ch=vu=0;try{J5()}finally{ch=0,eH(),uc=0}}function tH(){var s=nd.now(),t=s-Sm;t>jC&&(pg-=t,Sm=s)}function eH(){for(var s,t=bm,e,n=1/0;t;)t._call?(n>t._time&&(n=t._time),s=t,t=t._next):(e=t._next,t._next=null,t=s?s._next=e:bm=e);bu=s,fx(n)}function fx(s){if(!ch){vu&&(vu=clearTimeout(vu));var t=s-uc;t>24?(s<1/0&&(vu=setTimeout(UT,s-nd.now()-pg)),Qh&&(Qh=clearInterval(Qh))):(Qh||(Sm=nd.now(),Qh=setInterval(tH,jC)),ch=1,XC(UT))}}const nH=1664525,iH=1013904223,kT=4294967296;function sH(){let s=1;return()=>(s=(nH*s+iH)%kT)/kT}var zT=3;function G_(s){return s.x}function VT(s){return s.y}function rH(s){return s.z}var oH=10,aH=Math.PI*(3-Math.sqrt(5)),cH=Math.PI*20/(9+Math.sqrt(221));function lH(s,t){t=t||2;var e=Math.min(zT,Math.max(1,Math.round(t))),n,i=1,r=.001,o=1-Math.pow(r,1/300),a=0,c=.6,l=new Map,h=ZC(f),u=qC("tick","end"),d=sH();s==null&&(s=[]);function f(){p(),u.call("tick",n),i<r&&(h.stop(),u.call("end",n))}function p(m){var x,v=s.length,y;m===void 0&&(m=1);for(var b=0;b<m;++b)for(i+=(a-i)*o,l.forEach(function(S){S(i)}),x=0;x<v;++x)y=s[x],y.fx==null?y.x+=y.vx*=c:(y.x=y.fx,y.vx=0),e>1&&(y.fy==null?y.y+=y.vy*=c:(y.y=y.fy,y.vy=0)),e>2&&(y.fz==null?y.z+=y.vz*=c:(y.z=y.fz,y.vz=0));return n}function _(){for(var m=0,x=s.length,v;m<x;++m){if(v=s[m],v.index=m,v.fx!=null&&(v.x=v.fx),v.fy!=null&&(v.y=v.fy),v.fz!=null&&(v.z=v.fz),isNaN(v.x)||e>1&&isNaN(v.y)||e>2&&isNaN(v.z)){var y=oH*(e>2?Math.cbrt(.5+m):e>1?Math.sqrt(.5+m):m),b=m*aH,S=m*cH;e===1?v.x=y:e===2?(v.x=y*Math.cos(b),v.y=y*Math.sin(b)):(v.x=y*Math.sin(b)*Math.cos(S),v.y=y*Math.cos(b),v.z=y*Math.sin(b)*Math.sin(S))}(isNaN(v.vx)||e>1&&isNaN(v.vy)||e>2&&isNaN(v.vz))&&(v.vx=0,e>1&&(v.vy=0),e>2&&(v.vz=0))}}function g(m){return m.initialize&&m.initialize(s,d,e),m}return _(),n={tick:p,restart:function(){return h.restart(f),n},stop:function(){return h.stop(),n},numDimensions:function(m){return arguments.length?(e=Math.min(zT,Math.max(1,Math.round(m))),l.forEach(g),n):e},nodes:function(m){return arguments.length?(s=m,_(),l.forEach(g),n):s},alpha:function(m){return arguments.length?(i=+m,n):i},alphaMin:function(m){return arguments.length?(r=+m,n):r},alphaDecay:function(m){return arguments.length?(o=+m,n):+o},alphaTarget:function(m){return arguments.length?(a=+m,n):a},velocityDecay:function(m){return arguments.length?(c=1-m,n):1-c},randomSource:function(m){return arguments.length?(d=m,l.forEach(g),n):d},force:function(m,x){return arguments.length>1?(x==null?l.delete(m):l.set(m,g(x)),n):l.get(m)},find:function(){var m=Array.prototype.slice.call(arguments),x=m.shift()||0,v=(e>1?m.shift():null)||0,y=(e>2?m.shift():null)||0,b=m.shift()||1/0,S=0,M=s.length,T,A,w,E,N,I;for(b*=b,S=0;S<M;++S)N=s[S],T=x-N.x,A=v-(N.y||0),w=y-(N.z||0),E=T*T+A*A+w*w,E<b&&(I=N,b=E);return I},on:function(m,x){return arguments.length>1?(u.on(m,x),n):u.on(m)}}}function hH(){var s,t,e,n,i,r=jr(-30),o,a=1,c=1/0,l=.81;function h(p){var _,g=s.length,m=(t===1?VC(s,G_):t===2?HC(s,G_,VT):t===3?WC(s,G_,VT,rH):null).visitAfter(d);for(i=p,_=0;_<g;++_)e=s[_],m.visit(f)}function u(){if(s){var p,_=s.length,g;for(o=new Array(_),p=0;p<_;++p)g=s[p],o[g.index]=+r(g,p,s)}}function d(p){var _=0,g,m,x=0,v,y,b,S,M=p.length;if(M){for(v=y=b=S=0;S<M;++S)(g=p[S])&&(m=Math.abs(g.value))&&(_+=g.value,x+=m,v+=m*(g.x||0),y+=m*(g.y||0),b+=m*(g.z||0));_*=Math.sqrt(4/M),p.x=v/x,t>1&&(p.y=y/x),t>2&&(p.z=b/x)}else{g=p,g.x=g.data.x,t>1&&(g.y=g.data.y),t>2&&(g.z=g.data.z);do _+=o[g.data.index];while(g=g.next)}p.value=_}function f(p,_,g,m,x){if(!p.value)return!0;var v=[g,m,x][t-1],y=p.x-e.x,b=t>1?p.y-e.y:0,S=t>2?p.z-e.z:0,M=v-_,T=y*y+b*b+S*S;if(M*M/l<T)return T<c&&(y===0&&(y=Lr(n),T+=y*y),t>1&&b===0&&(b=Lr(n),T+=b*b),t>2&&S===0&&(S=Lr(n),T+=S*S),T<a&&(T=Math.sqrt(a*T)),e.vx+=y*p.value*i/T,t>1&&(e.vy+=b*p.value*i/T),t>2&&(e.vz+=S*p.value*i/T)),!0;if(p.length||T>=c)return;(p.data!==e||p.next)&&(y===0&&(y=Lr(n),T+=y*y),t>1&&b===0&&(b=Lr(n),T+=b*b),t>2&&S===0&&(S=Lr(n),T+=S*S),T<a&&(T=Math.sqrt(a*T)));do p.data!==e&&(M=o[p.data.index]*i/T,e.vx+=y*M,t>1&&(e.vy+=b*M),t>2&&(e.vz+=S*M));while(p=p.next)}return h.initialize=function(p,..._){s=p,n=_.find(g=>typeof g=="function")||Math.random,t=_.find(g=>[1,2,3].includes(g))||2,u()},h.strength=function(p){return arguments.length?(r=typeof p=="function"?p:jr(+p),u(),h):r},h.distanceMin=function(p){return arguments.length?(a=p*p,h):Math.sqrt(a)},h.distanceMax=function(p){return arguments.length?(c=p*p,h):Math.sqrt(c)},h.theta=function(p){return arguments.length?(l=p*p,h):Math.sqrt(l)},h}function uH(s,t,e,n){var i,r,o=jr(.1),a,c;typeof s!="function"&&(s=jr(+s)),t==null&&(t=0),e==null&&(e=0),n==null&&(n=0);function l(u){for(var d=0,f=i.length;d<f;++d){var p=i[d],_=p.x-t||1e-6,g=(p.y||0)-e||1e-6,m=(p.z||0)-n||1e-6,x=Math.sqrt(_*_+g*g+m*m),v=(c[d]-x)*a[d]*u/x;p.vx+=_*v,r>1&&(p.vy+=g*v),r>2&&(p.vz+=m*v)}}function h(){if(i){var u,d=i.length;for(a=new Array(d),c=new Array(d),u=0;u<d;++u)c[u]=+s(i[u],u,i),a[u]=isNaN(c[u])?0:+o(i[u],u,i)}}return l.initialize=function(u,...d){i=u,r=d.find(f=>[1,2,3].includes(f))||2,h()},l.strength=function(u){return arguments.length?(o=typeof u=="function"?u:jr(+u),h(),l):o},l.radius=function(u){return arguments.length?(s=typeof u=="function"?u:jr(+u),h(),l):s},l.x=function(u){return arguments.length?(t=+u,l):t},l.y=function(u){return arguments.length?(e=+u,l):e},l.z=function(u){return arguments.length?(n=+u,l):n},l}function KC(s){return s&&s.__esModule&&Object.prototype.hasOwnProperty.call(s,"default")?s.default:s}var gb=function(t){fH(t);var e=dH(t);return t.on=e.on,t.off=e.off,t.fire=e.fire,t};function dH(s){var t=Object.create(null);return{on:function(e,n,i){if(typeof n!="function")throw new Error("callback is expected to be a function");var r=t[e];return r||(r=t[e]=[]),r.push({callback:n,ctx:i}),s},off:function(e,n){var i=typeof e>"u";if(i)return t=Object.create(null),s;if(t[e]){var r=typeof n!="function";if(r)delete t[e];else for(var o=t[e],a=0;a<o.length;++a)o[a].callback===n&&o.splice(a,1)}return s},fire:function(e){var n=t[e];if(!n)return s;var i;arguments.length>1&&(i=Array.prototype.splice.call(arguments,1));for(var r=0;r<n.length;++r){var o=n[r];o.callback.apply(o.ctx,i)}return s}}}function fH(s){if(!s)throw new Error("Eventify cannot use falsy object as events subject");for(var t=["on","fire","off"],e=0;e<t.length;++e)if(s.hasOwnProperty(t[e]))throw new Error("Subject cannot be eventified, since it already has property '"+t[e]+"'")}var pH=gH,mH=gb;function gH(s){if(s=s||{},"uniqueLinkId"in s&&(console.warn("ngraph.graph: Starting from version 0.14 `uniqueLinkId` is deprecated.\nUse `multigraph` option instead\n",`
`,`Note: there is also change in default behavior: From now on each graph
is considered to be not a multigraph by default (each edge is unique).`),s.multigraph=s.uniqueLinkId),s.multigraph===void 0&&(s.multigraph=!1),typeof Map!="function")throw new Error("ngraph.graph requires `Map` to be defined. Please polyfill it before using ngraph");var t=new Map,e=new Map,n={},i=0,r=s.multigraph?y:v,o=[],a=O,c=O,l=O,h=O,u={version:20,addNode:_,addLink:x,removeLink:T,removeNode:m,getNode:g,getNodeCount:b,getLinkCount:S,getEdgeCount:S,getLinksCount:S,getNodesCount:b,getLinks:M,forEachNode:Y,forEachLinkedNode:I,forEachLink:N,beginUpdate:l,endUpdate:h,clear:E,hasLink:w,hasNode:g,getLink:w};return mH(u),d(),u;function d(){var U=u.on;u.on=W;function W(){return u.beginUpdate=l=k,u.endUpdate=h=z,a=f,c=p,u.on=U,U.apply(u,arguments)}}function f(U,W){o.push({link:U,changeType:W})}function p(U,W){o.push({node:U,changeType:W})}function _(U,W){if(U===void 0)throw new Error("Invalid node identifier");l();var lt=g(U);return lt?(lt.data=W,c(lt,"update")):(lt=new _H(U,W),c(lt,"add")),t.set(U,lt),h(),lt}function g(U){return t.get(U)}function m(U){var W=g(U);if(!W)return!1;l();var lt=W.links;return lt&&(lt.forEach(A),W.links=null),t.delete(U),c(W,"remove"),h(),!0}function x(U,W,lt){l();var wt=g(U)||_(U),H=g(W)||_(W),B=r(U,W,lt),nt=e.has(B.id);return e.set(B.id,B),GT(wt,B),U!==W&&GT(H,B),a(B,nt?"update":"add"),h(),B}function v(U,W,lt){var wt=zf(U,W),H=e.get(wt);return H?(H.data=lt,H):new HT(U,W,lt,wt)}function y(U,W,lt){var wt=zf(U,W),H=n.hasOwnProperty(wt);if(H||w(U,W)){H||(n[wt]=0);var B="@"+ ++n[wt];wt=zf(U+B,W+B)}return new HT(U,W,lt,wt)}function b(){return t.size}function S(){return e.size}function M(U){var W=g(U);return W?W.links:null}function T(U,W){return W!==void 0&&(U=w(U,W)),A(U)}function A(U){if(!U||!e.get(U.id))return!1;l(),e.delete(U.id);var W=g(U.fromId),lt=g(U.toId);return W&&W.links.delete(U),lt&&lt.links.delete(U),a(U,"remove"),h(),!0}function w(U,W){if(!(U===void 0||W===void 0))return e.get(zf(U,W))}function E(){l(),Y(function(U){m(U.id)}),h()}function N(U){if(typeof U=="function")for(var W=e.values(),lt=W.next();!lt.done;){if(U(lt.value))return!0;lt=W.next()}}function I(U,W,lt){var wt=g(U);if(wt&&wt.links&&typeof W=="function")return lt?D(wt.links,U,W):P(wt.links,U,W)}function P(U,W,lt){for(var wt,H=U.values(),B=H.next();!B.done;){var nt=B.value,at=nt.fromId===W?nt.toId:nt.fromId;if(wt=lt(t.get(at),nt),wt)return!0;B=H.next()}}function D(U,W,lt){for(var wt,H=U.values(),B=H.next();!B.done;){var nt=B.value;if(nt.fromId===W&&(wt=lt(t.get(nt.toId),nt),wt))return!0;B=H.next()}}function O(){}function k(){i+=1}function z(){i-=1,i===0&&o.length>0&&(u.fire("changed",o),o.length=0)}function Y(U){if(typeof U!="function")throw new Error("Function is expected to iterate over graph nodes. You passed "+U);for(var W=t.values(),lt=W.next();!lt.done;){if(U(lt.value))return!0;lt=W.next()}}}function _H(s,t){this.id=s,this.links=null,this.data=t}function GT(s,t){s.links?s.links.add(t):s.links=new Set([t])}function HT(s,t,e,n){this.fromId=s,this.toId=t,this.data=e,this.id=n}function zf(s,t){return s.toString()+"👉 "+t.toString()}const yH=KC(pH);var _b={exports:{}},Dd={exports:{}},QC=function(t){return t===0?"x":t===1?"y":t===2?"z":"c"+(t+1)};const xH=QC;var Nh=function(t){return e;function e(n,i){let r=i&&i.indent||0,o=i&&i.join!==void 0?i.join:`
`,a=Array(r+1).join(" "),c=[];for(let l=0;l<t;++l){let h=xH(l),u=l===0?"":a;c.push(u+n.replace(/{var}/g,h))}return c.join(o)}};const JC=Nh;Dd.exports=vH;Dd.exports.generateCreateBodyFunctionBody=tR;Dd.exports.getVectorCode=nR;Dd.exports.getBodyCode=eR;function vH(s,t){let e=tR(s,t),{Body:n}=new Function(e)();return n}function tR(s,t){return`
${nR(s,t)}
${eR(s)}
return {Body: Body, Vector: Vector};
`}function eR(s){let t=JC(s),e=t("{var}",{join:", "});return`
function Body(${e}) {
  this.isPinned = false;
  this.pos = new Vector(${e});
  this.force = new Vector();
  this.velocity = new Vector();
  this.mass = 1;

  this.springCount = 0;
  this.springLength = 0;
}

Body.prototype.reset = function() {
  this.force.reset();
  this.springCount = 0;
  this.springLength = 0;
}

Body.prototype.setPosition = function (${e}) {
  ${t("this.pos.{var} = {var} || 0;",{indent:2})}
};`}function nR(s,t){let e=JC(s),n="";return t&&(n=`${e(`
   var v{var};
Object.defineProperty(this, '{var}', {
  set: function(v) { 
    if (!Number.isFinite(v)) throw new Error('Cannot set non-numbers to {var}');
    v{var} = v; 
  },
  get: function() { return v{var}; }
});`)}`),`function Vector(${e("{var}",{join:", "})}) {
  ${n}
    if (typeof arguments[0] === 'object') {
      // could be another vector
      let v = arguments[0];
      ${e('if (!Number.isFinite(v.{var})) throw new Error("Expected value is not a finite number at Vector constructor ({var})");',{indent:4})}
      ${e("this.{var} = v.{var};",{indent:4})}
    } else {
      ${e('this.{var} = typeof {var} === "number" ? {var} : 0;',{indent:4})}
    }
  }
  
  Vector.prototype.reset = function () {
    ${e("this.{var} = ",{join:""})}0;
  };`}var bH=Dd.exports,ma={exports:{}};const yb=Nh,Fo=QC;ma.exports=SH;ma.exports.generateQuadTreeFunctionBody=iR;ma.exports.getInsertStackCode=cR;ma.exports.getQuadNodeCode=aR;ma.exports.isSamePosition=sR;ma.exports.getChildBodyCode=oR;ma.exports.setChildBodyCode=rR;function SH(s){let t=iR(s);return new Function(t)()}function iR(s){let t=yb(s),e=Math.pow(2,s);return`
${cR()}
${aR(s)}
${sR(s)}
${oR(s)}
${rR(s)}

function createQuadTree(options, random) {
  options = options || {};
  options.gravity = typeof options.gravity === 'number' ? options.gravity : -1;
  options.theta = typeof options.theta === 'number' ? options.theta : 0.8;

  var gravity = options.gravity;
  var updateQueue = [];
  var insertStack = new InsertStack();
  var theta = options.theta;

  var nodesCache = [];
  var currentInCache = 0;
  var root = newNode();

  return {
    insertBodies: insertBodies,

    /**
     * Gets root node if it is present
     */
    getRoot: function() {
      return root;
    },

    updateBodyForce: update,

    options: function(newOptions) {
      if (newOptions) {
        if (typeof newOptions.gravity === 'number') {
          gravity = newOptions.gravity;
        }
        if (typeof newOptions.theta === 'number') {
          theta = newOptions.theta;
        }

        return this;
      }

      return {
        gravity: gravity,
        theta: theta
      };
    }
  };

  function newNode() {
    // To avoid pressure on GC we reuse nodes.
    var node = nodesCache[currentInCache];
    if (node) {
${o("      node.")}
      node.body = null;
      node.mass = ${t("node.mass_{var} = ",{join:""})}0;
      ${t("node.min_{var} = node.max_{var} = ",{join:""})}0;
    } else {
      node = new QuadNode();
      nodesCache[currentInCache] = node;
    }

    ++currentInCache;
    return node;
  }

  function update(sourceBody) {
    var queue = updateQueue;
    var v;
    ${t("var d{var};",{indent:4})}
    var r; 
    ${t("var f{var} = 0;",{indent:4})}
    var queueLength = 1;
    var shiftIdx = 0;
    var pushIdx = 1;

    queue[0] = root;

    while (queueLength) {
      var node = queue[shiftIdx];
      var body = node.body;

      queueLength -= 1;
      shiftIdx += 1;
      var differentBody = (body !== sourceBody);
      if (body && differentBody) {
        // If the current node is a leaf node (and it is not source body),
        // calculate the force exerted by the current node on body, and add this
        // amount to body's net force.
        ${t("d{var} = body.pos.{var} - sourceBody.pos.{var};",{indent:8})}
        r = Math.sqrt(${t("d{var} * d{var}",{join:" + "})});

        if (r === 0) {
          // Poor man's protection against zero distance.
          ${t("d{var} = (random.nextDouble() - 0.5) / 50;",{indent:10})}
          r = Math.sqrt(${t("d{var} * d{var}",{join:" + "})});
        }

        // This is standard gravitation force calculation but we divide
        // by r^3 to save two operations when normalizing force vector.
        v = gravity * body.mass * sourceBody.mass / (r * r * r);
        ${t("f{var} += v * d{var};",{indent:8})}
      } else if (differentBody) {
        // Otherwise, calculate the ratio s / r,  where s is the width of the region
        // represented by the internal node, and r is the distance between the body
        // and the node's center-of-mass
        ${t("d{var} = node.mass_{var} / node.mass - sourceBody.pos.{var};",{indent:8})}
        r = Math.sqrt(${t("d{var} * d{var}",{join:" + "})});

        if (r === 0) {
          // Sorry about code duplication. I don't want to create many functions
          // right away. Just want to see performance first.
          ${t("d{var} = (random.nextDouble() - 0.5) / 50;",{indent:10})}
          r = Math.sqrt(${t("d{var} * d{var}",{join:" + "})});
        }
        // If s / r < θ, treat this internal node as a single body, and calculate the
        // force it exerts on sourceBody, and add this amount to sourceBody's net force.
        if ((node.max_${Fo(0)} - node.min_${Fo(0)}) / r < theta) {
          // in the if statement above we consider node's width only
          // because the region was made into square during tree creation.
          // Thus there is no difference between using width or height.
          v = gravity * node.mass * sourceBody.mass / (r * r * r);
          ${t("f{var} += v * d{var};",{indent:10})}
        } else {
          // Otherwise, run the procedure recursively on each of the current node's children.

          // I intentionally unfolded this loop, to save several CPU cycles.
${r()}
        }
      }
    }

    ${t("sourceBody.force.{var} += f{var};",{indent:4})}
  }

  function insertBodies(bodies) {
    ${t("var {var}min = Number.MAX_VALUE;",{indent:4})}
    ${t("var {var}max = Number.MIN_VALUE;",{indent:4})}
    var i = bodies.length;

    // To reduce quad tree depth we are looking for exact bounding box of all particles.
    while (i--) {
      var pos = bodies[i].pos;
      ${t("if (pos.{var} < {var}min) {var}min = pos.{var};",{indent:6})}
      ${t("if (pos.{var} > {var}max) {var}max = pos.{var};",{indent:6})}
    }

    // Makes the bounds square.
    var maxSideLength = -Infinity;
    ${t("if ({var}max - {var}min > maxSideLength) maxSideLength = {var}max - {var}min ;",{indent:4})}

    currentInCache = 0;
    root = newNode();
    ${t("root.min_{var} = {var}min;",{indent:4})}
    ${t("root.max_{var} = {var}min + maxSideLength;",{indent:4})}

    i = bodies.length - 1;
    if (i >= 0) {
      root.body = bodies[i];
    }
    while (i--) {
      insert(bodies[i], root);
    }
  }

  function insert(newBody) {
    insertStack.reset();
    insertStack.push(root, newBody);

    while (!insertStack.isEmpty()) {
      var stackItem = insertStack.pop();
      var node = stackItem.node;
      var body = stackItem.body;

      if (!node.body) {
        // This is internal node. Update the total mass of the node and center-of-mass.
        ${t("var {var} = body.pos.{var};",{indent:8})}
        node.mass += body.mass;
        ${t("node.mass_{var} += body.mass * {var};",{indent:8})}

        // Recursively insert the body in the appropriate quadrant.
        // But first find the appropriate quadrant.
        var quadIdx = 0; // Assume we are in the 0's quad.
        ${t("var min_{var} = node.min_{var};",{indent:8})}
        ${t("var max_{var} = (min_{var} + node.max_{var}) / 2;",{indent:8})}

${i(8)}

        var child = getChild(node, quadIdx);

        if (!child) {
          // The node is internal but this quadrant is not taken. Add
          // subnode to it.
          child = newNode();
          ${t("child.min_{var} = min_{var};",{indent:10})}
          ${t("child.max_{var} = max_{var};",{indent:10})}
          child.body = body;

          setChild(node, quadIdx, child);
        } else {
          // continue searching in this quadrant.
          insertStack.push(child, body);
        }
      } else {
        // We are trying to add to the leaf node.
        // We have to convert current leaf into internal node
        // and continue adding two nodes.
        var oldBody = node.body;
        node.body = null; // internal nodes do not cary bodies

        if (isSamePosition(oldBody.pos, body.pos)) {
          // Prevent infinite subdivision by bumping one node
          // anywhere in this quadrant
          var retriesCount = 3;
          do {
            var offset = random.nextDouble();
            ${t("var d{var} = (node.max_{var} - node.min_{var}) * offset;",{indent:12})}

            ${t("oldBody.pos.{var} = node.min_{var} + d{var};",{indent:12})}
            retriesCount -= 1;
            // Make sure we don't bump it out of the box. If we do, next iteration should fix it
          } while (retriesCount > 0 && isSamePosition(oldBody.pos, body.pos));

          if (retriesCount === 0 && isSamePosition(oldBody.pos, body.pos)) {
            // This is very bad, we ran out of precision.
            // if we do not return from the method we'll get into
            // infinite loop here. So we sacrifice correctness of layout, and keep the app running
            // Next layout iteration should get larger bounding box in the first step and fix this
            return;
          }
        }
        // Next iteration should subdivide node further.
        insertStack.push(node, oldBody);
        insertStack.push(node, body);
      }
    }
  }
}
return createQuadTree;

`;function i(a){let c=[],l=Array(a+1).join(" ");for(let h=0;h<s;++h)c.push(l+`if (${Fo(h)} > max_${Fo(h)}) {`),c.push(l+`  quadIdx = quadIdx + ${Math.pow(2,h)};`),c.push(l+`  min_${Fo(h)} = max_${Fo(h)};`),c.push(l+`  max_${Fo(h)} = node.max_${Fo(h)};`),c.push(l+"}");return c.join(`
`)}function r(){let a=Array(11).join(" "),c=[];for(let l=0;l<e;++l)c.push(a+`if (node.quad${l}) {`),c.push(a+`  queue[pushIdx] = node.quad${l};`),c.push(a+"  queueLength += 1;"),c.push(a+"  pushIdx += 1;"),c.push(a+"}");return c.join(`
`)}function o(a){let c=[];for(let l=0;l<e;++l)c.push(`${a}quad${l} = null;`);return c.join(`
`)}}function sR(s){let t=yb(s);return`
  function isSamePosition(point1, point2) {
    ${t("var d{var} = Math.abs(point1.{var} - point2.{var});",{indent:2})}
  
    return ${t("d{var} < 1e-8",{join:" && "})};
  }  
`}function rR(s){var t=Math.pow(2,s);return`
function setChild(node, idx, child) {
  ${e()}
}`;function e(){let n=[];for(let i=0;i<t;++i){let r=i===0?"  ":"  else ";n.push(`${r}if (idx === ${i}) node.quad${i} = child;`)}return n.join(`
`)}}function oR(s){return`function getChild(node, idx) {
${t()}
  return null;
}`;function t(){let e=[],n=Math.pow(2,s);for(let i=0;i<n;++i)e.push(`  if (idx === ${i}) return node.quad${i};`);return e.join(`
`)}}function aR(s){let t=yb(s),e=Math.pow(2,s);var n=`
function QuadNode() {
  // body stored inside this node. In quad tree only leaf nodes (by construction)
  // contain bodies:
  this.body = null;

  // Child nodes are stored in quads. Each quad is presented by number:
  // 0 | 1
  // -----
  // 2 | 3
${i("  this.")}

  // Total mass of current node
  this.mass = 0;

  // Center of mass coordinates
  ${t("this.mass_{var} = 0;",{indent:2})}

  // bounding box coordinates
  ${t("this.min_{var} = 0;",{indent:2})}
  ${t("this.max_{var} = 0;",{indent:2})}
}
`;return n;function i(r){let o=[];for(let a=0;a<e;++a)o.push(`${r}quad${a} = null;`);return o.join(`
`)}}function cR(){return`
/**
 * Our implementation of QuadTree is non-recursive to avoid GC hit
 * This data structure represent stack of elements
 * which we are trying to insert into quad tree.
 */
function InsertStack () {
    this.stack = [];
    this.popIdx = 0;
}

InsertStack.prototype = {
    isEmpty: function() {
        return this.popIdx === 0;
    },
    push: function (node, body) {
        var item = this.stack[this.popIdx];
        if (!item) {
            // we are trying to avoid memory pressure: create new element
            // only when absolutely necessary
            this.stack[this.popIdx] = new InsertStackElement(node, body);
        } else {
            item.node = node;
            item.body = body;
        }
        ++this.popIdx;
    },
    pop: function () {
        if (this.popIdx > 0) {
            return this.stack[--this.popIdx];
        }
    },
    reset: function () {
        this.popIdx = 0;
    }
};

function InsertStackElement(node, body) {
    this.node = node; // QuadTree node
    this.body = body; // physical body which needs to be inserted to node
}
`}var MH=ma.exports,xb={exports:{}};xb.exports=wH;xb.exports.generateFunctionBody=lR;const TH=Nh;function wH(s){let t=lR(s);return new Function("bodies","settings","random",t)}function lR(s){let t=TH(s);return`
  var boundingBox = {
    ${t("min_{var}: 0, max_{var}: 0,",{indent:4})}
  };

  return {
    box: boundingBox,

    update: updateBoundingBox,

    reset: resetBoundingBox,

    getBestNewPosition: function (neighbors) {
      var ${t("base_{var} = 0",{join:", "})};

      if (neighbors.length) {
        for (var i = 0; i < neighbors.length; ++i) {
          let neighborPos = neighbors[i].pos;
          ${t("base_{var} += neighborPos.{var};",{indent:10})}
        }

        ${t("base_{var} /= neighbors.length;",{indent:8})}
      } else {
        ${t("base_{var} = (boundingBox.min_{var} + boundingBox.max_{var}) / 2;",{indent:8})}
      }

      var springLength = settings.springLength;
      return {
        ${t("{var}: base_{var} + (random.nextDouble() - 0.5) * springLength,",{indent:8})}
      };
    }
  };

  function updateBoundingBox() {
    var i = bodies.length;
    if (i === 0) return; // No bodies - no borders.

    ${t("var max_{var} = -Infinity;",{indent:4})}
    ${t("var min_{var} = Infinity;",{indent:4})}

    while(i--) {
      // this is O(n), it could be done faster with quadtree, if we check the root node bounds
      var bodyPos = bodies[i].pos;
      ${t("if (bodyPos.{var} < min_{var}) min_{var} = bodyPos.{var};",{indent:6})}
      ${t("if (bodyPos.{var} > max_{var}) max_{var} = bodyPos.{var};",{indent:6})}
    }

    ${t("boundingBox.min_{var} = min_{var};",{indent:4})}
    ${t("boundingBox.max_{var} = max_{var};",{indent:4})}
  }

  function resetBoundingBox() {
    ${t("boundingBox.min_{var} = boundingBox.max_{var} = 0;",{indent:4})}
  }
`}var AH=xb.exports,vb={exports:{}};const EH=Nh;vb.exports=CH;vb.exports.generateCreateDragForceFunctionBody=hR;function CH(s){let t=hR(s);return new Function("options",t)}function hR(s){return`
  if (!Number.isFinite(options.dragCoefficient)) throw new Error('dragCoefficient is not a finite number');

  return {
    update: function(body) {
      ${EH(s)("body.force.{var} -= options.dragCoefficient * body.velocity.{var};",{indent:6})}
    }
  };
`}var RH=vb.exports,bb={exports:{}};const NH=Nh;bb.exports=PH;bb.exports.generateCreateSpringForceFunctionBody=uR;function PH(s){let t=uR(s);return new Function("options","random",t)}function uR(s){let t=NH(s);return`
  if (!Number.isFinite(options.springCoefficient)) throw new Error('Spring coefficient is not a number');
  if (!Number.isFinite(options.springLength)) throw new Error('Spring length is not a number');

  return {
    /**
     * Updates forces acting on a spring
     */
    update: function (spring) {
      var body1 = spring.from;
      var body2 = spring.to;
      var length = spring.length < 0 ? options.springLength : spring.length;
      ${t("var d{var} = body2.pos.{var} - body1.pos.{var};",{indent:6})}
      var r = Math.sqrt(${t("d{var} * d{var}",{join:" + "})});

      if (r === 0) {
        ${t("d{var} = (random.nextDouble() - 0.5) / 50;",{indent:8})}
        r = Math.sqrt(${t("d{var} * d{var}",{join:" + "})});
      }

      var d = r - length;
      var coefficient = ((spring.coefficient > 0) ? spring.coefficient : options.springCoefficient) * d / r;

      ${t("body1.force.{var} += coefficient * d{var}",{indent:6})};
      body1.springCount += 1;
      body1.springLength += r;

      ${t("body2.force.{var} -= coefficient * d{var}",{indent:6})};
      body2.springCount += 1;
      body2.springLength += r;
    }
  };
`}var DH=bb.exports,Sb={exports:{}};const IH=Nh;Sb.exports=FH;Sb.exports.generateIntegratorFunctionBody=dR;function FH(s){let t=dR(s);return new Function("bodies","timeStep","adaptiveTimeStepWeight",t)}function dR(s){let t=IH(s);return`
  var length = bodies.length;
  if (length === 0) return 0;

  ${t("var d{var} = 0, t{var} = 0;",{indent:2})}

  for (var i = 0; i < length; ++i) {
    var body = bodies[i];
    if (body.isPinned) continue;

    if (adaptiveTimeStepWeight && body.springCount) {
      timeStep = (adaptiveTimeStepWeight * body.springLength/body.springCount);
    }

    var coeff = timeStep / body.mass;

    ${t("body.velocity.{var} += coeff * body.force.{var};",{indent:4})}
    ${t("var v{var} = body.velocity.{var};",{indent:4})}
    var v = Math.sqrt(${t("v{var} * v{var}",{join:" + "})});

    if (v > 1) {
      // We normalize it so that we move within timeStep range. 
      // for the case when v <= 1 - we let velocity to fade out.
      ${t("body.velocity.{var} = v{var} / v;",{indent:6})}
    }

    ${t("d{var} = timeStep * body.velocity.{var};",{indent:4})}

    ${t("body.pos.{var} += d{var};",{indent:4})}

    ${t("t{var} += Math.abs(d{var});",{indent:4})}
  }

  return (${t("t{var} * t{var}",{join:" + "})})/length;
`}var OH=Sb.exports,H_,$T;function LH(){if($T)return H_;$T=1,H_=s;function s(t,e,n,i){this.from=t,this.to=e,this.length=n,this.coefficient=i}return H_}var $_,WT;function BH(){if(WT)return $_;WT=1,$_=s;function s(t,e){var n;if(t||(t={}),e){for(n in e)if(e.hasOwnProperty(n)){var i=t.hasOwnProperty(n),r=typeof e[n],o=!i||typeof t[n]!==r;o?t[n]=e[n]:r==="object"&&(t[n]=s(t[n],e[n]))}}return t}return $_}var Jh={exports:{}},qT;function UH(){if(qT)return Jh.exports;qT=1,Jh.exports=s,Jh.exports.random=s,Jh.exports.randomIterator=a;function s(c){var l=typeof c=="number"?c:+new Date;return new t(l)}function t(c){this.seed=c}t.prototype.next=o,t.prototype.nextDouble=r,t.prototype.uniform=r,t.prototype.gaussian=e;function e(){var c,l,h;do l=this.nextDouble()*2-1,h=this.nextDouble()*2-1,c=l*l+h*h;while(c>=1||c===0);return l*Math.sqrt(-2*Math.log(c)/c)}t.prototype.levy=n;function n(){var c=1.5,l=Math.pow(i(1+c)*Math.sin(Math.PI*c/2)/(i((1+c)/2)*c*Math.pow(2,(c-1)/2)),1/c);return this.gaussian()*l/Math.pow(Math.abs(this.gaussian()),1/c)}function i(c){return Math.sqrt(2*Math.PI/c)*Math.pow(1/Math.E*(c+1/(12*c-1/(10*c))),c)}function r(){var c=this.seed;return c=c+2127912214+(c<<12)&4294967295,c=(c^3345072700^c>>>19)&4294967295,c=c+374761393+(c<<5)&4294967295,c=(c+3550635116^c<<9)&4294967295,c=c+4251993797+(c<<3)&4294967295,c=(c^3042594569^c>>>16)&4294967295,this.seed=c,(c&268435455)/268435456}function o(c){return Math.floor(this.nextDouble()*c)}function a(c,l){var h=l||s();if(typeof h.next!="function")throw new Error("customRandom does not match expected API: next() function is missing");return{forEach:d,shuffle:u};function u(){var f,p,_;for(f=c.length-1;f>0;--f)p=h.next(f+1),_=c[p],c[p]=c[f],c[f]=_;return c}function d(f){var p,_,g;for(p=c.length-1;p>0;--p)_=h.next(p+1),g=c[_],c[_]=c[p],c[p]=g,f(g);c.length&&f(c[0])}}return Jh.exports}var fR=WH,kH=bH,zH=MH,VH=AH,GH=RH,HH=DH,$H=OH,jT={};function WH(s){var t=LH(),e=BH(),n=gb;if(s){if(s.springCoeff!==void 0)throw new Error("springCoeff was renamed to springCoefficient");if(s.dragCoeff!==void 0)throw new Error("dragCoeff was renamed to dragCoefficient")}s=e(s,{springLength:10,springCoefficient:.8,gravity:-12,theta:.8,dragCoefficient:.9,timeStep:.5,adaptiveTimeStepWeight:0,dimensions:2,debug:!1});var i=jT[s.dimensions];if(!i){var r=s.dimensions;i={Body:kH(r,s.debug),createQuadTree:zH(r),createBounds:VH(r),createDragForce:GH(r),createSpringForce:HH(r),integrate:$H(r)},jT[r]=i}var o=i.Body,a=i.createQuadTree,c=i.createBounds,l=i.createDragForce,h=i.createSpringForce,u=i.integrate,d=D=>new o(D),f=UH().random(42),p=[],_=[],g=a(s,f),m=c(p,s,f),x=h(s,f),v=l(s),y=0,b=[],S=new Map,M=0;w("nbody",I),w("spring",P);var T={bodies:p,quadTree:g,springs:_,settings:s,addForce:w,removeForce:E,getForces:N,step:function(){for(var D=0;D<b.length;++D)b[D](M);var O=u(p,s.timeStep,s.adaptiveTimeStepWeight);return M+=1,O},addBody:function(D){if(!D)throw new Error("Body is required");return p.push(D),D},addBodyAt:function(D){if(!D)throw new Error("Body position is required");var O=d(D);return p.push(O),O},removeBody:function(D){if(D){var O=p.indexOf(D);if(!(O<0))return p.splice(O,1),p.length===0&&m.reset(),!0}},addSpring:function(D,O,k,z){if(!D||!O)throw new Error("Cannot add null spring to force simulator");typeof k!="number"&&(k=-1);var Y=new t(D,O,k,z>=0?z:-1);return _.push(Y),Y},getTotalMovement:function(){return y},removeSpring:function(D){if(D){var O=_.indexOf(D);if(O>-1)return _.splice(O,1),!0}},getBestNewBodyPosition:function(D){return m.getBestNewPosition(D)},getBBox:A,getBoundingBox:A,invalidateBBox:function(){console.warn("invalidateBBox() is deprecated, bounds always recomputed on `getBBox()` call")},gravity:function(D){return D!==void 0?(s.gravity=D,g.options({gravity:D}),this):s.gravity},theta:function(D){return D!==void 0?(s.theta=D,g.options({theta:D}),this):s.theta},random:f};return qH(s,T),n(T),T;function A(){return m.update(),m.box}function w(D,O){if(S.has(D))throw new Error("Force "+D+" is already added");S.set(D,O),b.push(O)}function E(D){var O=b.indexOf(S.get(D));O<0||(b.splice(O,1),S.delete(D))}function N(){return S}function I(){if(p.length!==0){g.insertBodies(p);for(var D=p.length;D--;){var O=p[D];O.isPinned||(O.reset(),g.updateBodyForce(O),v.update(O))}}}function P(){for(var D=_.length;D--;)x.update(_[D])}}function qH(s,t){for(var e in s)jH(s,t,e)}function jH(s,t,e){if(s.hasOwnProperty(e)&&typeof t[e]!="function"){var n=Number.isFinite(s[e]);n?t[e]=function(i){if(i!==void 0){if(!Number.isFinite(i))throw new Error("Value of "+e+" should be a valid number.");return s[e]=i,t}return s[e]}:t[e]=function(i){return i!==void 0?(s[e]=i,t):s[e]}}}_b.exports=YH;_b.exports.simulator=fR;var XH=gb;function YH(s,t){if(!s)throw new Error("Graph structure cannot be undefined");var e=t&&t.createSimulator||fR,n=e(t);if(Array.isArray(t))throw new Error("Physics settings is expected to be an object");var i=s.version>19?I:N;t&&typeof t.nodeMass=="function"&&(i=t.nodeMass);var r=new Map,o={},a=0,c=n.settings.springTransform||ZH;v(),g();var l=!1,h={step:function(){if(a===0)return u(!0),!0;var P=n.step();h.lastMove=P,h.fire("step");var D=P/a,O=D<=.01;return u(O),O},getNodePosition:function(P){return E(P).pos},setNodePosition:function(P){var D=E(P);D.setPosition.apply(D,Array.prototype.slice.call(arguments,1))},getLinkPosition:function(P){var D=o[P];if(D)return{from:D.from.pos,to:D.to.pos}},getGraphRect:function(){return n.getBBox()},forEachBody:d,pinNode:function(P,D){var O=E(P.id);O.isPinned=!!D},isNodePinned:function(P){return E(P.id).isPinned},dispose:function(){s.off("changed",x),h.fire("disposed")},getBody:_,getSpring:p,getForceVectorLength:f,simulator:n,graph:s,lastMove:0};return XH(h),h;function u(P){l!==P&&(l=P,m(P))}function d(P){r.forEach(P)}function f(){var P=0,D=0;return d(function(O){P+=Math.abs(O.force.x),D+=Math.abs(O.force.y)}),Math.sqrt(P*P+D*D)}function p(P,D){var O;if(D===void 0)typeof P!="object"?O=P:O=P.id;else{var k=s.hasLink(P,D);if(!k)return;O=k.id}return o[O]}function _(P){return r.get(P)}function g(){s.on("changed",x)}function m(P){h.fire("stable",P)}function x(P){for(var D=0;D<P.length;++D){var O=P[D];O.changeType==="add"?(O.node&&y(O.node.id),O.link&&S(O.link)):O.changeType==="remove"&&(O.node&&b(O.node),O.link&&M(O.link))}a=s.getNodesCount()}function v(){a=0,s.forEachNode(function(P){y(P.id),a+=1}),s.forEachLink(S)}function y(P){var D=r.get(P);if(!D){var O=s.getNode(P);if(!O)throw new Error("initBody() was called with unknown node id");var k=O.position;if(!k){var z=T(O);k=n.getBestNewBodyPosition(z)}D=n.addBodyAt(k),D.id=P,r.set(P,D),A(P),w(O)&&(D.isPinned=!0)}}function b(P){var D=P.id,O=r.get(D);O&&(r.delete(D),n.removeBody(O))}function S(P){A(P.fromId),A(P.toId);var D=r.get(P.fromId),O=r.get(P.toId),k=n.addSpring(D,O,P.length);c(P,k),o[P.id]=k}function M(P){var D=o[P.id];if(D){var O=s.getNode(P.fromId),k=s.getNode(P.toId);O&&A(O.id),k&&A(k.id),delete o[P.id],n.removeSpring(D)}}function T(P){var D=[];if(!P.links)return D;for(var O=Math.min(P.links.length,2),k=0;k<O;++k){var z=P.links[k],Y=z.fromId!==P.id?r.get(z.fromId):r.get(z.toId);Y&&Y.pos&&D.push(Y)}return D}function A(P){var D=r.get(P);if(D.mass=i(P),Number.isNaN(D.mass))throw new Error("Node mass should be a number")}function w(P){return P&&(P.isPinned||P.data&&P.data.isPinned)}function E(P){var D=r.get(P);return D||(y(P),D=r.get(P)),D}function N(P){var D=s.getLinks(P);return D?1+D.length/3:1}function I(P){var D=s.getLinks(P);return D?1+D.size/3:1}}function ZH(){}var KH=_b.exports;const QH=KC(KH);function px(s){var t=typeof s;return s!=null&&(t=="object"||t=="function")}var JH=typeof global=="object"&&global&&global.Object===Object&&global;const t$=JH;var e$=typeof self=="object"&&self&&self.Object===Object&&self,n$=t$||e$||Function("return this")();const pR=n$;var i$=function(){return pR.Date.now()};const W_=i$;var s$=/\s/;function r$(s){for(var t=s.length;t--&&s$.test(s.charAt(t)););return t}var o$=/^\s+/;function a$(s){return s&&s.slice(0,r$(s)+1).replace(o$,"")}var c$=pR.Symbol;const Mm=c$;var mR=Object.prototype,l$=mR.hasOwnProperty,h$=mR.toString,tu=Mm?Mm.toStringTag:void 0;function u$(s){var t=l$.call(s,tu),e=s[tu];try{s[tu]=void 0;var n=!0}catch{}var i=h$.call(s);return n&&(t?s[tu]=e:delete s[tu]),i}var d$=Object.prototype,f$=d$.toString;function p$(s){return f$.call(s)}var m$="[object Null]",g$="[object Undefined]",XT=Mm?Mm.toStringTag:void 0;function _$(s){return s==null?s===void 0?g$:m$:XT&&XT in Object(s)?u$(s):p$(s)}function y$(s){return s!=null&&typeof s=="object"}var x$="[object Symbol]";function v$(s){return typeof s=="symbol"||y$(s)&&_$(s)==x$}var YT=0/0,b$=/^[-+]0x[0-9a-f]+$/i,S$=/^0b[01]+$/i,M$=/^0o[0-7]+$/i,T$=parseInt;function ZT(s){if(typeof s=="number")return s;if(v$(s))return YT;if(px(s)){var t=typeof s.valueOf=="function"?s.valueOf():s;s=px(t)?t+"":t}if(typeof s!="string")return s===0?s:+s;s=a$(s);var e=S$.test(s);return e||M$.test(s)?T$(s.slice(2),e?2:8):b$.test(s)?YT:+s}var w$="Expected a function",A$=Math.max,E$=Math.min;function C$(s,t,e){var n,i,r,o,a,c,l=0,h=!1,u=!1,d=!0;if(typeof s!="function")throw new TypeError(w$);t=ZT(t)||0,px(e)&&(h=!!e.leading,u="maxWait"in e,r=u?A$(ZT(e.maxWait)||0,t):r,d="trailing"in e?!!e.trailing:d);function f(S){var M=n,T=i;return n=i=void 0,l=S,o=s.apply(T,M),o}function p(S){return l=S,a=setTimeout(m,t),h?f(S):o}function _(S){var M=S-c,T=S-l,A=t-M;return u?E$(A,r-T):A}function g(S){var M=S-c,T=S-l;return c===void 0||M>=t||M<0||u&&T>=r}function m(){var S=W_();if(g(S))return x(S);a=setTimeout(m,_(S))}function x(S){return a=void 0,d&&n?f(S):(n=i=void 0,o)}function v(){a!==void 0&&clearTimeout(a),l=0,n=c=i=a=void 0}function y(){return a===void 0?o:x(W_())}function b(){var S=W_(),M=g(S);if(n=arguments,i=this,c=S,M){if(a===void 0)return p(c);if(u)return clearTimeout(a),a=setTimeout(m,t),f(c)}return a===void 0&&(a=setTimeout(m,t)),o}return b.cancel=v,b.flush=y,b}function KT(s,t){(t==null||t>s.length)&&(t=s.length);for(var e=0,n=Array(t);e<t;e++)n[e]=s[e];return n}function R$(s){if(Array.isArray(s))return s}function N$(s,t){if(!(s instanceof t))throw new TypeError("Cannot call a class as a function")}function P$(s,t,e){return Object.defineProperty(s,"prototype",{writable:!1}),s}function D$(s,t){var e=s==null?null:typeof Symbol<"u"&&s[Symbol.iterator]||s["@@iterator"];if(e!=null){var n,i,r,o,a=[],c=!0,l=!1;try{if(r=(e=e.call(s)).next,t!==0)for(;!(c=(n=r.call(e)).done)&&(a.push(n.value),a.length!==t);c=!0);}catch(h){l=!0,i=h}finally{try{if(!c&&e.return!=null&&(o=e.return(),Object(o)!==o))return}finally{if(l)throw i}}return a}}function I$(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function F$(s,t){return R$(s)||D$(s,t)||O$(s,t)||I$()}function O$(s,t){if(s){if(typeof s=="string")return KT(s,t);var e={}.toString.call(s).slice(8,-1);return e==="Object"&&s.constructor&&(e=s.constructor.name),e==="Map"||e==="Set"?Array.from(s):e==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?KT(s,t):void 0}}var L$=P$(function s(t,e){var n=e.default,i=n===void 0?null:n,r=e.triggerUpdate,o=r===void 0?!0:r,a=e.onChange,c=a===void 0?function(l,h){}:a;N$(this,s),this.name=t,this.defaultVal=i,this.triggerUpdate=o,this.onChange=c});function Mb(s){var t=s.stateInit,e=t===void 0?function(){return{}}:t,n=s.props,i=n===void 0?{}:n,r=s.methods,o=r===void 0?{}:r,a=s.aliases,c=a===void 0?{}:a,l=s.init,h=l===void 0?function(){}:l,u=s.update,d=u===void 0?function(){}:u,f=Object.keys(i).map(function(p){return new L$(p,i[p])});return function p(){for(var _=arguments.length,g=new Array(_),m=0;m<_;m++)g[m]=arguments[m];var x=!!(this instanceof p&&this.constructor),v=x?g.shift():void 0,y=g[0],b=y===void 0?{}:y,S=Object.assign({},e instanceof Function?e(b):e,{initialised:!1}),M={};function T(E){return A(E,b),w(),T}var A=function(N,I){h.call(T,N,S,I),S.initialised=!0},w=C$(function(){S.initialised&&(d.call(T,S,M),M={})},1);return f.forEach(function(E){T[E.name]=N(E);function N(I){var P=I.name,D=I.triggerUpdate,O=D===void 0?!1:D,k=I.onChange,z=k===void 0?function(W,lt){}:k,Y=I.defaultVal,U=Y===void 0?null:Y;return function(W){var lt=S[P];if(!arguments.length)return lt;var wt=W===void 0?U:W;return S[P]=wt,z.call(T,wt,S,lt),!M.hasOwnProperty(P)&&(M[P]=lt),O&&w(),T}}}),Object.keys(o).forEach(function(E){T[E]=function(){for(var N,I=arguments.length,P=new Array(I),D=0;D<I;D++)P[D]=arguments[D];return(N=o[E]).call.apply(N,[T,S].concat(P))}}),Object.entries(c).forEach(function(E){var N=F$(E,2),I=N[0],P=N[1];return T[I]=T[P]}),T.resetProps=function(){return f.forEach(function(E){T[E.name](E.defaultVal)}),T},T.resetProps(),S._rerender=w,x&&v&&T(v),T}}var Me=function(s){return typeof s=="function"?s:typeof s=="string"?function(t){return t[s]}:function(t){return s}};class QT extends Map{constructor(t,e=k$){if(super(),Object.defineProperties(this,{_intern:{value:new Map},_key:{value:e}}),t!=null)for(const[n,i]of t)this.set(n,i)}get(t){return super.get(JT(this,t))}has(t){return super.has(JT(this,t))}set(t,e){return super.set(B$(this,t),e)}delete(t){return super.delete(U$(this,t))}}function JT({_intern:s,_key:t},e){const n=t(e);return s.has(n)?s.get(n):e}function B$({_intern:s,_key:t},e){const n=t(e);return s.has(n)?s.get(n):(s.set(n,e),e)}function U$({_intern:s,_key:t},e){const n=t(e);return s.has(n)&&(e=s.get(n),s.delete(n)),e}function k$(s){return s!==null&&typeof s=="object"?s.valueOf():s}function z$(s,t){let e;if(t===void 0)for(const n of s)n!=null&&(e<n||e===void 0&&n>=n)&&(e=n);else{let n=-1;for(let i of s)(i=t(i,++n,s))!=null&&(e<i||e===void 0&&i>=i)&&(e=i)}return e}function V$(s,t){let e;if(t===void 0)for(const n of s)n!=null&&(e>n||e===void 0&&n>=n)&&(e=n);else{let n=-1;for(let i of s)(i=t(i,++n,s))!=null&&(e>i||e===void 0&&i>=i)&&(e=i)}return e}function mx(s,t){(t==null||t>s.length)&&(t=s.length);for(var e=0,n=Array(t);e<t;e++)n[e]=s[e];return n}function G$(s){if(Array.isArray(s))return s}function H$(s){if(Array.isArray(s))return mx(s)}function $$(s){if(typeof Symbol<"u"&&s[Symbol.iterator]!=null||s["@@iterator"]!=null)return Array.from(s)}function W$(s,t){var e=s==null?null:typeof Symbol<"u"&&s[Symbol.iterator]||s["@@iterator"];if(e!=null){var n,i,r,o,a=[],c=!0,l=!1;try{if(r=(e=e.call(s)).next,t!==0)for(;!(c=(n=r.call(e)).done)&&(a.push(n.value),a.length!==t);c=!0);}catch(h){l=!0,i=h}finally{try{if(!c&&e.return!=null&&(o=e.return(),Object(o)!==o))return}finally{if(l)throw i}}return a}}function q$(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function j$(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function X$(s,t){if(s==null)return{};var e,n,i=Y$(s,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(s);for(n=0;n<r.length;n++)e=r[n],t.includes(e)||{}.propertyIsEnumerable.call(s,e)&&(i[e]=s[e])}return i}function Y$(s,t){if(s==null)return{};var e={};for(var n in s)if({}.hasOwnProperty.call(s,n)){if(t.includes(n))continue;e[n]=s[n]}return e}function Z$(s,t){return G$(s)||W$(s,t)||gR(s,t)||q$()}function K$(s){return H$(s)||$$(s)||gR(s)||j$()}function Q$(s,t){if(typeof s!="object"||!s)return s;var e=s[Symbol.toPrimitive];if(e!==void 0){var n=e.call(s,t);if(typeof n!="object")return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(s)}function J$(s){var t=Q$(s,"string");return typeof t=="symbol"?t:t+""}function gR(s,t){if(s){if(typeof s=="string")return mx(s,t);var e={}.toString.call(s).slice(8,-1);return e==="Object"&&s.constructor&&(e=s.constructor.name),e==="Map"||e==="Set"?Array.from(s):e==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?mx(s,t):void 0}}var tw=function(){var s=arguments.length>0&&arguments[0]!==void 0?arguments[0]:[],t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:[],e=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!0,n=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,i=(t instanceof Array?t.length?t:[void 0]:[t]).map(function(a){return{keyAccessor:a,isProp:!(a instanceof Function)}}),r=s.reduce(function(a,c){var l=a,h=c;return i.forEach(function(u,d){var f=u.keyAccessor,p=u.isProp,_;if(p){var g=h,m=g[f],x=X$(g,[f].map(J$));_=m,h=x}else _=f(h,d);d+1<i.length?(l.hasOwnProperty(_)||(l[_]={}),l=l[_]):e?(l.hasOwnProperty(_)||(l[_]=[]),l[_].push(h)):l[_]=h}),a},{});e instanceof Function&&function a(c){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:1;l===i.length?Object.keys(c).forEach(function(h){return c[h]=e(c[h])}):Object.values(c).forEach(function(h){return a(h,l+1)})}(r);var o=r;return n&&(o=[],function a(c){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:[];l.length===i.length?o.push({keys:l,vals:c}):Object.entries(c).forEach(function(h){var u=Z$(h,2),d=u[0],f=u[1];return a(f,[].concat(K$(l),[d]))})}(r),t instanceof Array&&t.length===0&&o.length===1&&(o[0].keys=[])),o};function tW(s,t){var e=s==null?null:typeof Symbol<"u"&&s[Symbol.iterator]||s["@@iterator"];if(e!=null){var n,i,r,o,a=[],c=!0,l=!1;try{if(r=(e=e.call(s)).next,t===0){if(Object(e)!==e)return;c=!1}else for(;!(c=(n=r.call(e)).done)&&(a.push(n.value),a.length!==t);c=!0);}catch(h){l=!0,i=h}finally{try{if(!c&&e.return!=null&&(o=e.return(),Object(o)!==o))return}finally{if(l)throw i}}return a}}function ew(s,t){var e=Object.keys(s);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(s);t&&(n=n.filter(function(i){return Object.getOwnPropertyDescriptor(s,i).enumerable})),e.push.apply(e,n)}return e}function eW(s){for(var t=1;t<arguments.length;t++){var e=arguments[t]!=null?arguments[t]:{};t%2?ew(Object(e),!0).forEach(function(n){_R(s,n,e[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(s,Object.getOwnPropertyDescriptors(e)):ew(Object(e)).forEach(function(n){Object.defineProperty(s,n,Object.getOwnPropertyDescriptor(e,n))})}return s}function _R(s,t,e){return t=hW(t),t in s?Object.defineProperty(s,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):s[t]=e,s}function nW(s,t){if(s==null)return{};var e={},n=Object.keys(s),i,r;for(r=0;r<n.length;r++)i=n[r],!(t.indexOf(i)>=0)&&(e[i]=s[i]);return e}function iW(s,t){if(s==null)return{};var e=nW(s,t),n,i;if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(s);for(i=0;i<r.length;i++)n=r[i],!(t.indexOf(n)>=0)&&Object.prototype.propertyIsEnumerable.call(s,n)&&(e[n]=s[n])}return e}function yR(s,t){return rW(s)||tW(s,t)||xR(s,t)||cW()}function Tm(s){return sW(s)||oW(s)||xR(s)||aW()}function sW(s){if(Array.isArray(s))return gx(s)}function rW(s){if(Array.isArray(s))return s}function oW(s){if(typeof Symbol<"u"&&s[Symbol.iterator]!=null||s["@@iterator"]!=null)return Array.from(s)}function xR(s,t){if(s){if(typeof s=="string")return gx(s,t);var e=Object.prototype.toString.call(s).slice(8,-1);if(e==="Object"&&s.constructor&&(e=s.constructor.name),e==="Map"||e==="Set")return Array.from(s);if(e==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return gx(s,t)}}function gx(s,t){(t==null||t>s.length)&&(t=s.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=s[e];return n}function aW(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function cW(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function lW(s,t){if(typeof s!="object"||s===null)return s;var e=s[Symbol.toPrimitive];if(e!==void 0){var n=e.call(s,t||"default");if(typeof n!="object")return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return(t==="string"?String:Number)(s)}function hW(s){var t=lW(s,"string");return typeof t=="symbol"?t:String(t)}var uW=["createObj","updateObj","exitObj","objBindAttr","dataBindAttr"];function dW(s,t,e){var n={enter:[],update:[],exit:[]};if(e){var o=tw(s,e,!1),a=tw(t,e,!1),c=Object.assign({},o,a);Object.entries(c).forEach(function(l){var h=yR(l,2),u=h[0],d=h[1],f=o.hasOwnProperty(u)?a.hasOwnProperty(u)?"update":"exit":"enter";n[f].push(f==="update"?[o[u],a[u]]:d)})}else{var i=new Set(s),r=new Set(t);new Set([].concat(Tm(i),Tm(r))).forEach(function(l){var h=i.has(l)?r.has(l)?"update":"exit":"enter";n[h].push(h==="update"?[l,l]:l)})}return n}function fW(s,t,e){var n=e.objBindAttr,i=n===void 0?"__obj":n,r=e.dataBindAttr,o=r===void 0?"__data":r,a=e.idAccessor,c=e.purge,l=c===void 0?!1:c,h=function(g){return g.hasOwnProperty(o)},u=t.filter(function(_){return!h(_)}),d=t.filter(h).map(function(_){return _[o]}),f=s,p=l?{enter:f,exit:d,update:[]}:dW(d,f,a);return p.update=p.update.map(function(_){var g=yR(_,2),m=g[0],x=g[1];return m!==x&&(x[i]=m[i],x[i][o]=x),x}),p.exit=p.exit.concat(u.map(function(_){return _R({},i,_)})),p}function pW(s,t,e,n,i){var r=i.createObj,o=r===void 0?function(T){return{}}:r,a=i.updateObj,c=a===void 0?function(T,A){}:a,l=i.exitObj,h=l===void 0?function(T){}:l,u=i.objBindAttr,d=u===void 0?"__obj":u,f=i.dataBindAttr,p=f===void 0?"__data":f,_=iW(i,uW),g=fW(s,t,eW({objBindAttr:d,dataBindAttr:p},_)),m=g.enter,x=g.update,v=g.exit;v.forEach(function(T){var A=T[d];delete T[d],h(A),n(A)});var y=S(m),b=[].concat(Tm(m),Tm(x));M(b),y.forEach(e);function S(T){var A=[];return T.forEach(function(w){var E=o(w);E&&(E[p]=w,w[d]=E,A.push(E))}),A}function M(T){T.forEach(function(A){var w=A[d];w&&(w[p]=A,c(w,A))})}}function mW(s,t){switch(arguments.length){case 0:break;case 1:this.range(s);break;default:this.range(t).domain(s);break}return this}const nw=Symbol("implicit");function vR(){var s=new QT,t=[],e=[],n=nw;function i(r){let o=s.get(r);if(o===void 0){if(n!==nw)return n;s.set(r,o=t.push(r)-1)}return e[o%e.length]}return i.domain=function(r){if(!arguments.length)return t.slice();t=[],s=new QT;for(const o of r)s.has(o)||s.set(o,t.push(o)-1);return i},i.range=function(r){return arguments.length?(e=Array.from(r),i):e.slice()},i.unknown=function(r){return arguments.length?(n=r,i):n},i.copy=function(){return vR(t,e).unknown(n)},mW.apply(i,arguments),i}function gW(s){for(var t=s.length/6|0,e=new Array(t),n=0;n<t;)e[n]="#"+s.slice(n*6,++n*6);return e}const _W=gW("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928");function wm(s){return wm=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(t){return typeof t}:function(t){return t&&typeof Symbol=="function"&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},wm(s)}var yW=/^\s+/,xW=/\s+$/;function Gt(s,t){if(s=s||"",t=t||{},s instanceof Gt)return s;if(!(this instanceof Gt))return new Gt(s,t);var e=vW(s);this._originalInput=s,this._r=e.r,this._g=e.g,this._b=e.b,this._a=e.a,this._roundA=Math.round(100*this._a)/100,this._format=t.format||e.format,this._gradientType=t.gradientType,this._r<1&&(this._r=Math.round(this._r)),this._g<1&&(this._g=Math.round(this._g)),this._b<1&&(this._b=Math.round(this._b)),this._ok=e.ok}Gt.prototype={isDark:function(){return this.getBrightness()<128},isLight:function(){return!this.isDark()},isValid:function(){return this._ok},getOriginalInput:function(){return this._originalInput},getFormat:function(){return this._format},getAlpha:function(){return this._a},getBrightness:function(){var t=this.toRgb();return(t.r*299+t.g*587+t.b*114)/1e3},getLuminance:function(){var t=this.toRgb(),e,n,i,r,o,a;return e=t.r/255,n=t.g/255,i=t.b/255,e<=.03928?r=e/12.92:r=Math.pow((e+.055)/1.055,2.4),n<=.03928?o=n/12.92:o=Math.pow((n+.055)/1.055,2.4),i<=.03928?a=i/12.92:a=Math.pow((i+.055)/1.055,2.4),.2126*r+.7152*o+.0722*a},setAlpha:function(t){return this._a=bR(t),this._roundA=Math.round(100*this._a)/100,this},toHsv:function(){var t=sw(this._r,this._g,this._b);return{h:t.h*360,s:t.s,v:t.v,a:this._a}},toHsvString:function(){var t=sw(this._r,this._g,this._b),e=Math.round(t.h*360),n=Math.round(t.s*100),i=Math.round(t.v*100);return this._a==1?"hsv("+e+", "+n+"%, "+i+"%)":"hsva("+e+", "+n+"%, "+i+"%, "+this._roundA+")"},toHsl:function(){var t=iw(this._r,this._g,this._b);return{h:t.h*360,s:t.s,l:t.l,a:this._a}},toHslString:function(){var t=iw(this._r,this._g,this._b),e=Math.round(t.h*360),n=Math.round(t.s*100),i=Math.round(t.l*100);return this._a==1?"hsl("+e+", "+n+"%, "+i+"%)":"hsla("+e+", "+n+"%, "+i+"%, "+this._roundA+")"},toHex:function(t){return rw(this._r,this._g,this._b,t)},toHexString:function(t){return"#"+this.toHex(t)},toHex8:function(t){return TW(this._r,this._g,this._b,this._a,t)},toHex8String:function(t){return"#"+this.toHex8(t)},toRgb:function(){return{r:Math.round(this._r),g:Math.round(this._g),b:Math.round(this._b),a:this._a}},toRgbString:function(){return this._a==1?"rgb("+Math.round(this._r)+", "+Math.round(this._g)+", "+Math.round(this._b)+")":"rgba("+Math.round(this._r)+", "+Math.round(this._g)+", "+Math.round(this._b)+", "+this._roundA+")"},toPercentageRgb:function(){return{r:Math.round(Ke(this._r,255)*100)+"%",g:Math.round(Ke(this._g,255)*100)+"%",b:Math.round(Ke(this._b,255)*100)+"%",a:this._a}},toPercentageRgbString:function(){return this._a==1?"rgb("+Math.round(Ke(this._r,255)*100)+"%, "+Math.round(Ke(this._g,255)*100)+"%, "+Math.round(Ke(this._b,255)*100)+"%)":"rgba("+Math.round(Ke(this._r,255)*100)+"%, "+Math.round(Ke(this._g,255)*100)+"%, "+Math.round(Ke(this._b,255)*100)+"%, "+this._roundA+")"},toName:function(){return this._a===0?"transparent":this._a<1?!1:LW[rw(this._r,this._g,this._b,!0)]||!1},toFilter:function(t){var e="#"+ow(this._r,this._g,this._b,this._a),n=e,i=this._gradientType?"GradientType = 1, ":"";if(t){var r=Gt(t);n="#"+ow(r._r,r._g,r._b,r._a)}return"progid:DXImageTransform.Microsoft.gradient("+i+"startColorstr="+e+",endColorstr="+n+")"},toString:function(t){var e=!!t;t=t||this._format;var n=!1,i=this._a<1&&this._a>=0,r=!e&&i&&(t==="hex"||t==="hex6"||t==="hex3"||t==="hex4"||t==="hex8"||t==="name");return r?t==="name"&&this._a===0?this.toName():this.toRgbString():(t==="rgb"&&(n=this.toRgbString()),t==="prgb"&&(n=this.toPercentageRgbString()),(t==="hex"||t==="hex6")&&(n=this.toHexString()),t==="hex3"&&(n=this.toHexString(!0)),t==="hex4"&&(n=this.toHex8String(!0)),t==="hex8"&&(n=this.toHex8String()),t==="name"&&(n=this.toName()),t==="hsl"&&(n=this.toHslString()),t==="hsv"&&(n=this.toHsvString()),n||this.toHexString())},clone:function(){return Gt(this.toString())},_applyModification:function(t,e){var n=t.apply(null,[this].concat([].slice.call(e)));return this._r=n._r,this._g=n._g,this._b=n._b,this.setAlpha(n._a),this},lighten:function(){return this._applyModification(CW,arguments)},brighten:function(){return this._applyModification(RW,arguments)},darken:function(){return this._applyModification(NW,arguments)},desaturate:function(){return this._applyModification(wW,arguments)},saturate:function(){return this._applyModification(AW,arguments)},greyscale:function(){return this._applyModification(EW,arguments)},spin:function(){return this._applyModification(PW,arguments)},_applyCombination:function(t,e){return t.apply(null,[this].concat([].slice.call(e)))},analogous:function(){return this._applyCombination(FW,arguments)},complement:function(){return this._applyCombination(DW,arguments)},monochromatic:function(){return this._applyCombination(OW,arguments)},splitcomplement:function(){return this._applyCombination(IW,arguments)},triad:function(){return this._applyCombination(aw,[3])},tetrad:function(){return this._applyCombination(aw,[4])}};Gt.fromRatio=function(s,t){if(wm(s)=="object"){var e={};for(var n in s)s.hasOwnProperty(n)&&(n==="a"?e[n]=s[n]:e[n]=Su(s[n]));s=e}return Gt(s,t)};function vW(s){var t={r:0,g:0,b:0},e=1,n=null,i=null,r=null,o=!1,a=!1;return typeof s=="string"&&(s=zW(s)),wm(s)=="object"&&(Tr(s.r)&&Tr(s.g)&&Tr(s.b)?(t=bW(s.r,s.g,s.b),o=!0,a=String(s.r).substr(-1)==="%"?"prgb":"rgb"):Tr(s.h)&&Tr(s.s)&&Tr(s.v)?(n=Su(s.s),i=Su(s.v),t=MW(s.h,n,i),o=!0,a="hsv"):Tr(s.h)&&Tr(s.s)&&Tr(s.l)&&(n=Su(s.s),r=Su(s.l),t=SW(s.h,n,r),o=!0,a="hsl"),s.hasOwnProperty("a")&&(e=s.a)),e=bR(e),{ok:o,format:s.format||a,r:Math.min(255,Math.max(t.r,0)),g:Math.min(255,Math.max(t.g,0)),b:Math.min(255,Math.max(t.b,0)),a:e}}function bW(s,t,e){return{r:Ke(s,255)*255,g:Ke(t,255)*255,b:Ke(e,255)*255}}function iw(s,t,e){s=Ke(s,255),t=Ke(t,255),e=Ke(e,255);var n=Math.max(s,t,e),i=Math.min(s,t,e),r,o,a=(n+i)/2;if(n==i)r=o=0;else{var c=n-i;switch(o=a>.5?c/(2-n-i):c/(n+i),n){case s:r=(t-e)/c+(t<e?6:0);break;case t:r=(e-s)/c+2;break;case e:r=(s-t)/c+4;break}r/=6}return{h:r,s:o,l:a}}function SW(s,t,e){var n,i,r;s=Ke(s,360),t=Ke(t,100),e=Ke(e,100);function o(l,h,u){return u<0&&(u+=1),u>1&&(u-=1),u<1/6?l+(h-l)*6*u:u<1/2?h:u<2/3?l+(h-l)*(2/3-u)*6:l}if(t===0)n=i=r=e;else{var a=e<.5?e*(1+t):e+t-e*t,c=2*e-a;n=o(c,a,s+1/3),i=o(c,a,s),r=o(c,a,s-1/3)}return{r:n*255,g:i*255,b:r*255}}function sw(s,t,e){s=Ke(s,255),t=Ke(t,255),e=Ke(e,255);var n=Math.max(s,t,e),i=Math.min(s,t,e),r,o,a=n,c=n-i;if(o=n===0?0:c/n,n==i)r=0;else{switch(n){case s:r=(t-e)/c+(t<e?6:0);break;case t:r=(e-s)/c+2;break;case e:r=(s-t)/c+4;break}r/=6}return{h:r,s:o,v:a}}function MW(s,t,e){s=Ke(s,360)*6,t=Ke(t,100),e=Ke(e,100);var n=Math.floor(s),i=s-n,r=e*(1-t),o=e*(1-i*t),a=e*(1-(1-i)*t),c=n%6,l=[e,o,r,r,a,e][c],h=[a,e,e,o,r,r][c],u=[r,r,a,e,e,o][c];return{r:l*255,g:h*255,b:u*255}}function rw(s,t,e,n){var i=[Fs(Math.round(s).toString(16)),Fs(Math.round(t).toString(16)),Fs(Math.round(e).toString(16))];return n&&i[0].charAt(0)==i[0].charAt(1)&&i[1].charAt(0)==i[1].charAt(1)&&i[2].charAt(0)==i[2].charAt(1)?i[0].charAt(0)+i[1].charAt(0)+i[2].charAt(0):i.join("")}function TW(s,t,e,n,i){var r=[Fs(Math.round(s).toString(16)),Fs(Math.round(t).toString(16)),Fs(Math.round(e).toString(16)),Fs(SR(n))];return i&&r[0].charAt(0)==r[0].charAt(1)&&r[1].charAt(0)==r[1].charAt(1)&&r[2].charAt(0)==r[2].charAt(1)&&r[3].charAt(0)==r[3].charAt(1)?r[0].charAt(0)+r[1].charAt(0)+r[2].charAt(0)+r[3].charAt(0):r.join("")}function ow(s,t,e,n){var i=[Fs(SR(n)),Fs(Math.round(s).toString(16)),Fs(Math.round(t).toString(16)),Fs(Math.round(e).toString(16))];return i.join("")}Gt.equals=function(s,t){return!s||!t?!1:Gt(s).toRgbString()==Gt(t).toRgbString()};Gt.random=function(){return Gt.fromRatio({r:Math.random(),g:Math.random(),b:Math.random()})};function wW(s,t){t=t===0?0:t||10;var e=Gt(s).toHsl();return e.s-=t/100,e.s=mg(e.s),Gt(e)}function AW(s,t){t=t===0?0:t||10;var e=Gt(s).toHsl();return e.s+=t/100,e.s=mg(e.s),Gt(e)}function EW(s){return Gt(s).desaturate(100)}function CW(s,t){t=t===0?0:t||10;var e=Gt(s).toHsl();return e.l+=t/100,e.l=mg(e.l),Gt(e)}function RW(s,t){t=t===0?0:t||10;var e=Gt(s).toRgb();return e.r=Math.max(0,Math.min(255,e.r-Math.round(255*-(t/100)))),e.g=Math.max(0,Math.min(255,e.g-Math.round(255*-(t/100)))),e.b=Math.max(0,Math.min(255,e.b-Math.round(255*-(t/100)))),Gt(e)}function NW(s,t){t=t===0?0:t||10;var e=Gt(s).toHsl();return e.l-=t/100,e.l=mg(e.l),Gt(e)}function PW(s,t){var e=Gt(s).toHsl(),n=(e.h+t)%360;return e.h=n<0?360+n:n,Gt(e)}function DW(s){var t=Gt(s).toHsl();return t.h=(t.h+180)%360,Gt(t)}function aw(s,t){if(isNaN(t)||t<=0)throw new Error("Argument to polyad must be a positive number");for(var e=Gt(s).toHsl(),n=[Gt(s)],i=360/t,r=1;r<t;r++)n.push(Gt({h:(e.h+r*i)%360,s:e.s,l:e.l}));return n}function IW(s){var t=Gt(s).toHsl(),e=t.h;return[Gt(s),Gt({h:(e+72)%360,s:t.s,l:t.l}),Gt({h:(e+216)%360,s:t.s,l:t.l})]}function FW(s,t,e){t=t||6,e=e||30;var n=Gt(s).toHsl(),i=360/e,r=[Gt(s)];for(n.h=(n.h-(i*t>>1)+720)%360;--t;)n.h=(n.h+i)%360,r.push(Gt(n));return r}function OW(s,t){t=t||6;for(var e=Gt(s).toHsv(),n=e.h,i=e.s,r=e.v,o=[],a=1/t;t--;)o.push(Gt({h:n,s:i,v:r})),r=(r+a)%1;return o}Gt.mix=function(s,t,e){e=e===0?0:e||50;var n=Gt(s).toRgb(),i=Gt(t).toRgb(),r=e/100,o={r:(i.r-n.r)*r+n.r,g:(i.g-n.g)*r+n.g,b:(i.b-n.b)*r+n.b,a:(i.a-n.a)*r+n.a};return Gt(o)};Gt.readability=function(s,t){var e=Gt(s),n=Gt(t);return(Math.max(e.getLuminance(),n.getLuminance())+.05)/(Math.min(e.getLuminance(),n.getLuminance())+.05)};Gt.isReadable=function(s,t,e){var n=Gt.readability(s,t),i,r;switch(r=!1,i=VW(e),i.level+i.size){case"AAsmall":case"AAAlarge":r=n>=4.5;break;case"AAlarge":r=n>=3;break;case"AAAsmall":r=n>=7;break}return r};Gt.mostReadable=function(s,t,e){var n=null,i=0,r,o,a,c;e=e||{},o=e.includeFallbackColors,a=e.level,c=e.size;for(var l=0;l<t.length;l++)r=Gt.readability(s,t[l]),r>i&&(i=r,n=Gt(t[l]));return Gt.isReadable(s,n,{level:a,size:c})||!o?n:(e.includeFallbackColors=!1,Gt.mostReadable(s,["#fff","#000"],e))};var _x=Gt.names={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"0ff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"00f",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",burntsienna:"ea7e5d",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"0ff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"f0f",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",rebeccapurple:"663399",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"},LW=Gt.hexNames=BW(_x);function BW(s){var t={};for(var e in s)s.hasOwnProperty(e)&&(t[s[e]]=e);return t}function bR(s){return s=parseFloat(s),(isNaN(s)||s<0||s>1)&&(s=1),s}function Ke(s,t){UW(s)&&(s="100%");var e=kW(s);return s=Math.min(t,Math.max(0,parseFloat(s))),e&&(s=parseInt(s*t,10)/100),Math.abs(s-t)<1e-6?1:s%t/parseFloat(t)}function mg(s){return Math.min(1,Math.max(0,s))}function Hi(s){return parseInt(s,16)}function UW(s){return typeof s=="string"&&s.indexOf(".")!=-1&&parseFloat(s)===1}function kW(s){return typeof s=="string"&&s.indexOf("%")!=-1}function Fs(s){return s.length==1?"0"+s:""+s}function Su(s){return s<=1&&(s=s*100+"%"),s}function SR(s){return Math.round(parseFloat(s)*255).toString(16)}function cw(s){return Hi(s)/255}var Ss=function(){var s="[-\\+]?\\d+%?",t="[-\\+]?\\d*\\.\\d+%?",e="(?:"+t+")|(?:"+s+")",n="[\\s|\\(]+("+e+")[,|\\s]+("+e+")[,|\\s]+("+e+")\\s*\\)?",i="[\\s|\\(]+("+e+")[,|\\s]+("+e+")[,|\\s]+("+e+")[,|\\s]+("+e+")\\s*\\)?";return{CSS_UNIT:new RegExp(e),rgb:new RegExp("rgb"+n),rgba:new RegExp("rgba"+i),hsl:new RegExp("hsl"+n),hsla:new RegExp("hsla"+i),hsv:new RegExp("hsv"+n),hsva:new RegExp("hsva"+i),hex3:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,hex4:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex8:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/}}();function Tr(s){return!!Ss.CSS_UNIT.exec(s)}function zW(s){s=s.replace(yW,"").replace(xW,"").toLowerCase();var t=!1;if(_x[s])s=_x[s],t=!0;else if(s=="transparent")return{r:0,g:0,b:0,a:0,format:"name"};var e;return(e=Ss.rgb.exec(s))?{r:e[1],g:e[2],b:e[3]}:(e=Ss.rgba.exec(s))?{r:e[1],g:e[2],b:e[3],a:e[4]}:(e=Ss.hsl.exec(s))?{h:e[1],s:e[2],l:e[3]}:(e=Ss.hsla.exec(s))?{h:e[1],s:e[2],l:e[3],a:e[4]}:(e=Ss.hsv.exec(s))?{h:e[1],s:e[2],v:e[3]}:(e=Ss.hsva.exec(s))?{h:e[1],s:e[2],v:e[3],a:e[4]}:(e=Ss.hex8.exec(s))?{r:Hi(e[1]),g:Hi(e[2]),b:Hi(e[3]),a:cw(e[4]),format:t?"name":"hex8"}:(e=Ss.hex6.exec(s))?{r:Hi(e[1]),g:Hi(e[2]),b:Hi(e[3]),format:t?"name":"hex"}:(e=Ss.hex4.exec(s))?{r:Hi(e[1]+""+e[1]),g:Hi(e[2]+""+e[2]),b:Hi(e[3]+""+e[3]),a:cw(e[4]+""+e[4]),format:t?"name":"hex8"}:(e=Ss.hex3.exec(s))?{r:Hi(e[1]+""+e[1]),g:Hi(e[2]+""+e[2]),b:Hi(e[3]+""+e[3]),format:t?"name":"hex"}:!1}function VW(s){var t,e;return s=s||{level:"AA",size:"small"},t=(s.level||"AA").toUpperCase(),e=(s.size||"small").toLowerCase(),t!=="AA"&&t!=="AAA"&&(t="AA"),e!=="small"&&e!=="large"&&(e="small"),{level:t,size:e}}function yx(s,t){(t==null||t>s.length)&&(t=s.length);for(var e=0,n=Array(t);e<t;e++)n[e]=s[e];return n}function GW(s){if(Array.isArray(s))return s}function HW(s){if(Array.isArray(s))return yx(s)}function $W(s){if(s===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return s}function WW(s,t,e){return t=Am(t),e8(s,wb()?Reflect.construct(t,e||[],Am(s).constructor):t.apply(s,e))}function qW(s,t){if(!(s instanceof t))throw new TypeError("Cannot call a class as a function")}function MR(s,t,e){if(wb())return Reflect.construct.apply(null,arguments);var n=[null];n.push.apply(n,t);var i=new(s.bind.apply(s,n));return i}function jW(s,t,e){return Object.defineProperty(s,"prototype",{writable:!1}),s}function Tb(s,t,e){return(t=i8(t))in s?Object.defineProperty(s,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):s[t]=e,s}function Am(s){return Am=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},Am(s)}function XW(s,t){if(typeof t!="function"&&t!==null)throw new TypeError("Super expression must either be null or a function");s.prototype=Object.create(t&&t.prototype,{constructor:{value:s,writable:!0,configurable:!0}}),Object.defineProperty(s,"prototype",{writable:!1}),t&&xx(s,t)}function wb(){try{var s=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch{}return(wb=function(){return!!s})()}function YW(s){if(typeof Symbol<"u"&&s[Symbol.iterator]!=null||s["@@iterator"]!=null)return Array.from(s)}function ZW(s,t){var e=s==null?null:typeof Symbol<"u"&&s[Symbol.iterator]||s["@@iterator"];if(e!=null){var n,i,r,o,a=[],c=!0,l=!1;try{if(r=(e=e.call(s)).next,t!==0)for(;!(c=(n=r.call(e)).done)&&(a.push(n.value),a.length!==t);c=!0);}catch(h){l=!0,i=h}finally{try{if(!c&&e.return!=null&&(o=e.return(),Object(o)!==o))return}finally{if(l)throw i}}return a}}function KW(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function QW(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function lw(s,t){var e=Object.keys(s);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(s);t&&(n=n.filter(function(i){return Object.getOwnPropertyDescriptor(s,i).enumerable})),e.push.apply(e,n)}return e}function TR(s){for(var t=1;t<arguments.length;t++){var e=arguments[t]!=null?arguments[t]:{};t%2?lw(Object(e),!0).forEach(function(n){Tb(s,n,e[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(s,Object.getOwnPropertyDescriptors(e)):lw(Object(e)).forEach(function(n){Object.defineProperty(s,n,Object.getOwnPropertyDescriptor(e,n))})}return s}function JW(s,t){if(s==null)return{};var e,n,i=t8(s,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(s);for(n=0;n<r.length;n++)e=r[n],t.includes(e)||{}.propertyIsEnumerable.call(s,e)&&(i[e]=s[e])}return i}function t8(s,t){if(s==null)return{};var e={};for(var n in s)if({}.hasOwnProperty.call(s,n)){if(t.includes(n))continue;e[n]=s[n]}return e}function e8(s,t){if(t&&(typeof t=="object"||typeof t=="function"))return t;if(t!==void 0)throw new TypeError("Derived constructors may only return object or undefined");return $W(s)}function xx(s,t){return xx=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,n){return e.__proto__=n,e},xx(s,t)}function hw(s,t){return GW(s)||ZW(s,t)||wR(s,t)||KW()}function ws(s){return HW(s)||YW(s)||wR(s)||QW()}function n8(s,t){if(typeof s!="object"||!s)return s;var e=s[Symbol.toPrimitive];if(e!==void 0){var n=e.call(s,t||"default");if(typeof n!="object")return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return(t==="string"?String:Number)(s)}function i8(s){var t=n8(s,"string");return typeof t=="symbol"?t:t+""}function vx(s){return vx=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(t){return typeof t}:function(t){return t&&typeof Symbol=="function"&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},vx(s)}function wR(s,t){if(s){if(typeof s=="string")return yx(s,t);var e={}.toString.call(s).slice(8,-1);return e==="Object"&&s.constructor&&(e=s.constructor.name),e==="Map"||e==="Set"?Array.from(s):e==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?yx(s,t):void 0}}var AR=function(t){t instanceof Array?t.forEach(AR):(t.map&&t.map.dispose(),t.dispose())},ER=function(t){t.geometry&&t.geometry.dispose(),t.material&&AR(t.material),t.texture&&t.texture.dispose(),t.children&&t.children.forEach(ER)},bx=function(t){for(;t.children.length;){var e=t.children[0];t.remove(e),ER(e)}},s8=["objFilter"];function eu(s,t){var e=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},n=e.objFilter,i=n===void 0?function(){return!0}:n,r=JW(e,s8);return pW(s,t.children.filter(i),function(o){return t.add(o)},function(o){t.remove(o),bx(o)},TR({objBindAttr:"__threeObj"},r))}var nu=function(t){return isNaN(t)?parseInt(Gt(t).toHex(),16):t},q_=function(t){return isNaN(t)?Gt(t).getAlpha():1},r8=vR(_W);function uw(s,t,e){!t||typeof e!="string"||s.filter(function(n){return!n[e]}).forEach(function(n){n[e]=r8(t(n))})}function o8(s,t){var e=s.nodes,n=s.links,i=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},r=i.nodeFilter,o=r===void 0?function(){return!0}:r,a=i.onLoopError,c=a===void 0?function(f){throw"Invalid DAG structure! Found cycle in node path: ".concat(f.join(" -> "),".")}:a,l={};e.forEach(function(f){return l[t(f)]={data:f,out:[],depth:-1,skip:!o(f)}}),n.forEach(function(f){var p=f.source,_=f.target,g=y(p),m=y(_);if(!l.hasOwnProperty(g))throw"Missing source node with id: ".concat(g);if(!l.hasOwnProperty(m))throw"Missing target node with id: ".concat(m);var x=l[g],v=l[m];x.out.push(v);function y(b){return vx(b)==="object"?t(b):b}});var h=[];d(Object.values(l));var u=Object.assign.apply(Object,[{}].concat(ws(Object.entries(l).filter(function(f){var p=hw(f,2),_=p[1];return!_.skip}).map(function(f){var p=hw(f,2),_=p[0],g=p[1];return Tb({},_,g.depth)}))));return u;function d(f){for(var p=arguments.length>1&&arguments[1]!==void 0?arguments[1]:[],_=arguments.length>2&&arguments[2]!==void 0?arguments[2]:0,g=function(){var y=f[m];if(p.indexOf(y)!==-1){var b=[].concat(ws(p.slice(p.indexOf(y))),[y]).map(function(S){return t(S.data)});return h.some(function(S){return S.length===b.length&&S.every(function(M,T){return M===b[T]})})||(h.push(b),c(b)),1}_>y.depth&&(y.depth=_,d(y.out,[].concat(ws(p),[y]),_+(y.skip?0:1)))},m=0,x=f.length;m<x;m++)g()}}var Zt=window.THREE?window.THREE:{Group:DA,Mesh:bd,MeshLambertMaterial:yD,Color:Us,BufferGeometry:uo,BufferAttribute:Za,Matrix4:Ei,Vector3:Q,SphereGeometry:UA,CylinderGeometry:Km,TubeGeometry:bv,ConeGeometry:vv,Line:PA,LineBasicMaterial:_v,QuadraticBezierCurve3:xv,CubicBezierCurve3:OA,Box3:yh},dw={graph:yH,forcelayout:QH},a8=2,j_=new Zt.BufferGeometry().setAttribute?"setAttribute":"addAttribute",Vf=new Zt.BufferGeometry().applyMatrix4?"applyMatrix4":"applyMatrix",c8=Mb({props:{jsonUrl:{onChange:function(t,e){var n=this;t&&!e.fetchingJson&&(e.fetchingJson=!0,e.onLoading(),fetch(t).then(function(i){return i.json()}).then(function(i){e.fetchingJson=!1,e.onFinishLoading(i),n.graphData(i)}))},triggerUpdate:!1},graphData:{default:{nodes:[],links:[]},onChange:function(t,e){e.engineRunning=!1}},numDimensions:{default:3,onChange:function(t,e){var n=e.d3ForceLayout.force("charge");n&&n.strength(t>2?-60:-30),t<3&&i(e.graphData.nodes,"z"),t<2&&i(e.graphData.nodes,"y");function i(r,o){r.forEach(function(a){delete a[o],delete a["v".concat(o)]})}}},dagMode:{onChange:function(t,e){!t&&e.forceEngine==="d3"&&(e.graphData.nodes||[]).forEach(function(n){return n.fx=n.fy=n.fz=void 0})}},dagLevelDistance:{},dagNodeFilter:{default:function(t){return!0}},onDagError:{triggerUpdate:!1},nodeRelSize:{default:4},nodeId:{default:"id"},nodeVal:{default:"val"},nodeResolution:{default:8},nodeColor:{default:"color"},nodeAutoColorBy:{},nodeOpacity:{default:.75},nodeVisibility:{default:!0},nodeThreeObject:{},nodeThreeObjectExtend:{default:!1},nodePositionUpdate:{triggerUpdate:!1},linkSource:{default:"source"},linkTarget:{default:"target"},linkVisibility:{default:!0},linkColor:{default:"color"},linkAutoColorBy:{},linkOpacity:{default:.2},linkWidth:{},linkResolution:{default:6},linkCurvature:{default:0,triggerUpdate:!1},linkCurveRotation:{default:0,triggerUpdate:!1},linkMaterial:{},linkThreeObject:{},linkThreeObjectExtend:{default:!1},linkPositionUpdate:{triggerUpdate:!1},linkDirectionalArrowLength:{default:0},linkDirectionalArrowColor:{},linkDirectionalArrowRelPos:{default:.5,triggerUpdate:!1},linkDirectionalArrowResolution:{default:8},linkDirectionalParticles:{default:0},linkDirectionalParticleSpeed:{default:.01,triggerUpdate:!1},linkDirectionalParticleWidth:{default:.5},linkDirectionalParticleColor:{},linkDirectionalParticleResolution:{default:4},forceEngine:{default:"d3"},d3AlphaMin:{default:0},d3AlphaDecay:{default:.0228,triggerUpdate:!1,onChange:function(t,e){e.d3ForceLayout.alphaDecay(t)}},d3AlphaTarget:{default:0,triggerUpdate:!1,onChange:function(t,e){e.d3ForceLayout.alphaTarget(t)}},d3VelocityDecay:{default:.4,triggerUpdate:!1,onChange:function(t,e){e.d3ForceLayout.velocityDecay(t)}},ngraphPhysics:{default:{timeStep:20,gravity:-1.2,theta:.8,springLength:30,springCoefficient:8e-4,dragCoefficient:.02}},warmupTicks:{default:0,triggerUpdate:!1},cooldownTicks:{default:1/0,triggerUpdate:!1},cooldownTime:{default:15e3,triggerUpdate:!1},onLoading:{default:function(){},triggerUpdate:!1},onFinishLoading:{default:function(){},triggerUpdate:!1},onUpdate:{default:function(){},triggerUpdate:!1},onFinishUpdate:{default:function(){},triggerUpdate:!1},onEngineTick:{default:function(){},triggerUpdate:!1},onEngineStop:{default:function(){},triggerUpdate:!1}},methods:{refresh:function(t){return t._flushObjects=!0,t._rerender(),this},d3Force:function(t,e,n){return n===void 0?t.d3ForceLayout.force(e):(t.d3ForceLayout.force(e,n),this)},d3ReheatSimulation:function(t){return t.d3ForceLayout.alpha(1),this.resetCountdown(),this},resetCountdown:function(t){return t.cntTicks=0,t.startTickTime=new Date,t.engineRunning=!0,this},tickFrame:function(t){var e=t.forceEngine!=="ngraph";return t.engineRunning&&n(),i(),r(),this;function n(){++t.cntTicks>t.cooldownTicks||new Date-t.startTickTime>t.cooldownTime||e&&t.d3AlphaMin>0&&t.d3ForceLayout.alpha()<t.d3AlphaMin?(t.engineRunning=!1,t.onEngineStop()):(t.layout[e?"tick":"step"](),t.onEngineTick());var o=Me(t.nodeThreeObjectExtend);t.graphData.nodes.forEach(function(d){var f=d.__threeObj;if(f){var p=e?d:t.layout.getNodePosition(d[t.nodeId]),_=o(d);(!t.nodePositionUpdate||!t.nodePositionUpdate(_?f.children[0]:f,{x:p.x,y:p.y,z:p.z},d)||_)&&(f.position.x=p.x,f.position.y=p.y||0,f.position.z=p.z||0)}});var a=Me(t.linkWidth),c=Me(t.linkCurvature),l=Me(t.linkCurveRotation),h=Me(t.linkThreeObjectExtend);t.graphData.links.forEach(function(d){var f=d.__lineObj;if(f){var p=e?d:t.layout.getLinkPosition(t.layout.graph.getLink(d.source,d.target).id),_=p[e?"source":"from"],g=p[e?"target":"to"];if(!(!_||!g||!_.hasOwnProperty("x")||!g.hasOwnProperty("x"))){u(d);var m=h(d);if(!(t.linkPositionUpdate&&t.linkPositionUpdate(m?f.children[1]:f,{start:{x:_.x,y:_.y,z:_.z},end:{x:g.x,y:g.y,z:g.z}},d)&&!m)){var x=30,v=d.__curve,y=f.children.length?f.children[0]:f;if(y.type==="Line"){if(v){var S=v.getPoints(x);y.geometry.getAttribute("position").array.length!==S.length*3&&y.geometry[j_]("position",new Zt.BufferAttribute(new Float32Array(S.length*3),3)),y.geometry.setFromPoints(S)}else{var b=y.geometry.getAttribute("position");(!b||!b.array||b.array.length!==6)&&y.geometry[j_]("position",b=new Zt.BufferAttribute(new Float32Array(2*3),3)),b.array[0]=_.x,b.array[1]=_.y||0,b.array[2]=_.z||0,b.array[3]=g.x,b.array[4]=g.y||0,b.array[5]=g.z||0,b.needsUpdate=!0}y.geometry.computeBoundingSphere()}else if(y.type==="Mesh")if(v){y.geometry.type.match(/^Tube(Buffer)?Geometry$/)||(y.position.set(0,0,0),y.rotation.set(0,0,0),y.scale.set(1,1,1));var I=Math.ceil(a(d)*10)/10,P=I/2,D=new Zt.TubeGeometry(v,x,P,t.linkResolution,!1);y.geometry.dispose(),y.geometry=D}else{if(!y.geometry.type.match(/^Cylinder(Buffer)?Geometry$/)){var M=Math.ceil(a(d)*10)/10,T=M/2,A=new Zt.CylinderGeometry(T,T,1,t.linkResolution,1,!1);A[Vf](new Zt.Matrix4().makeTranslation(0,1/2,0)),A[Vf](new Zt.Matrix4().makeRotationX(Math.PI/2)),y.geometry.dispose(),y.geometry=A}var w=new Zt.Vector3(_.x,_.y||0,_.z||0),E=new Zt.Vector3(g.x,g.y||0,g.z||0),N=w.distanceTo(E);y.position.x=w.x,y.position.y=w.y,y.position.z=w.z,y.scale.z=N,y.parent.localToWorld(E),y.lookAt(E)}}}}});function u(d){var f=e?d:t.layout.getLinkPosition(t.layout.graph.getLink(d.source,d.target).id),p=f[e?"source":"from"],_=f[e?"target":"to"];if(!(!p||!_||!p.hasOwnProperty("x")||!_.hasOwnProperty("x"))){var g=c(d);if(!g)d.__curve=null;else{var m=new Zt.Vector3(p.x,p.y||0,p.z||0),x=new Zt.Vector3(_.x,_.y||0,_.z||0),v=m.distanceTo(x),y,b=l(d);if(v>0){var S=_.x-p.x,M=_.y-p.y||0,T=new Zt.Vector3().subVectors(x,m),A=T.clone().multiplyScalar(g).cross(S!==0||M!==0?new Zt.Vector3(0,0,1):new Zt.Vector3(0,1,0)).applyAxisAngle(T.normalize(),b).add(new Zt.Vector3().addVectors(m,x).divideScalar(2));y=new Zt.QuadraticBezierCurve3(m,A,x)}else{var w=g*70,E=-b,N=E+Math.PI/2;y=new Zt.CubicBezierCurve3(m,new Zt.Vector3(w*Math.cos(N),w*Math.sin(N),0).add(m),new Zt.Vector3(w*Math.cos(E),w*Math.sin(E),0).add(m),x)}d.__curve=y}}}}function i(){var o=Me(t.linkDirectionalArrowRelPos),a=Me(t.linkDirectionalArrowLength),c=Me(t.nodeVal);t.graphData.links.forEach(function(l){var h=l.__arrowObj;if(h){var u=e?l:t.layout.getLinkPosition(t.layout.graph.getLink(l.source,l.target).id),d=u[e?"source":"from"],f=u[e?"target":"to"];if(!(!d||!f||!d.hasOwnProperty("x")||!f.hasOwnProperty("x"))){var p=Math.cbrt(Math.max(0,c(d)||1))*t.nodeRelSize,_=Math.cbrt(Math.max(0,c(f)||1))*t.nodeRelSize,g=a(l),m=o(l),x=l.__curve?function(T){return l.__curve.getPoint(T)}:function(T){var A=function(E,N,I,P){return N[E]+(I[E]-N[E])*P||0};return{x:A("x",d,f,T),y:A("y",d,f,T),z:A("z",d,f,T)}},v=l.__curve?l.__curve.getLength():Math.sqrt(["x","y","z"].map(function(T){return Math.pow((f[T]||0)-(d[T]||0),2)}).reduce(function(T,A){return T+A},0)),y=p+g+(v-p-_-g)*m,b=x(y/v),S=x((y-g)/v);["x","y","z"].forEach(function(T){return h.position[T]=S[T]});var M=MR(Zt.Vector3,ws(["x","y","z"].map(function(T){return b[T]})));h.parent.localToWorld(M),h.lookAt(M)}}})}function r(){var o=Me(t.linkDirectionalParticleSpeed);t.graphData.links.forEach(function(a){var c=a.__photonsObj&&a.__photonsObj.children,l=a.__singleHopPhotonsObj&&a.__singleHopPhotonsObj.children;if(!((!l||!l.length)&&(!c||!c.length))){var h=e?a:t.layout.getLinkPosition(t.layout.graph.getLink(a.source,a.target).id),u=h[e?"source":"from"],d=h[e?"target":"to"];if(!(!u||!d||!u.hasOwnProperty("x")||!d.hasOwnProperty("x"))){var f=o(a),p=a.__curve?function(g){return a.__curve.getPoint(g)}:function(g){var m=function(v,y,b,S){return y[v]+(b[v]-y[v])*S||0};return{x:m("x",u,d,g),y:m("y",u,d,g),z:m("z",u,d,g)}},_=[].concat(ws(c||[]),ws(l||[]));_.forEach(function(g,m){var x=g.parent.__linkThreeObjType==="singleHopPhotons";if(g.hasOwnProperty("__progressRatio")||(g.__progressRatio=x?0:m/c.length),g.__progressRatio+=f,g.__progressRatio>=1)if(!x)g.__progressRatio=g.__progressRatio%1;else{g.parent.remove(g),bx(g);return}var v=g.__progressRatio,y=p(v);["x","y","z"].forEach(function(b){return g.position[b]=y[b]})})}}})}},emitParticle:function(t,e){if(e&&t.graphData.links.includes(e)){if(!e.__singleHopPhotonsObj){var n=new Zt.Group;n.__linkThreeObjType="singleHopPhotons",e.__singleHopPhotonsObj=n,t.graphScene.add(n)}var i=Me(t.linkDirectionalParticleWidth),r=Math.ceil(i(e)*10)/10/2,o=t.linkDirectionalParticleResolution,a=new Zt.SphereGeometry(r,o,o),c=Me(t.linkColor),l=Me(t.linkDirectionalParticleColor),h=l(e)||c(e)||"#f0f0f0",u=new Zt.Color(nu(h)),d=t.linkOpacity*3,f=new Zt.MeshLambertMaterial({color:u,transparent:!0,opacity:d});e.__singleHopPhotonsObj.add(new Zt.Mesh(a,f))}return this},getGraphBbox:function(t){var e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:function(){return!0};if(!t.initialised)return null;var n=function i(r){var o=[];if(r.geometry){r.geometry.computeBoundingBox();var a=new Zt.Box3;a.copy(r.geometry.boundingBox).applyMatrix4(r.matrixWorld),o.push(a)}return o.concat.apply(o,ws((r.children||[]).filter(function(c){return!c.hasOwnProperty("__graphObjType")||c.__graphObjType==="node"&&e(c.__data)}).map(i)))}(t.graphScene);return n.length?Object.assign.apply(Object,ws(["x","y","z"].map(function(i){return Tb({},i,[V$(n,function(r){return r.min[i]}),z$(n,function(r){return r.max[i]})])}))):null}},stateInit:function(){return{d3ForceLayout:lH().force("link",X5()).force("charge",hH()).force("center",QG()).force("dagRadial",null).stop(),engineRunning:!1}},init:function(t,e){e.graphScene=t},update:function(t,e){var n=function(B){return B.some(function(nt){return e.hasOwnProperty(nt)})};if(t.engineRunning=!1,t.onUpdate(),t.nodeAutoColorBy!==null&&n(["nodeAutoColorBy","graphData","nodeColor"])&&uw(t.graphData.nodes,Me(t.nodeAutoColorBy),t.nodeColor),t.linkAutoColorBy!==null&&n(["linkAutoColorBy","graphData","linkColor"])&&uw(t.graphData.links,Me(t.linkAutoColorBy),t.linkColor),t._flushObjects||n(["graphData","nodeThreeObject","nodeThreeObjectExtend","nodeVal","nodeColor","nodeVisibility","nodeRelSize","nodeResolution","nodeOpacity"])){var i=Me(t.nodeThreeObject),r=Me(t.nodeThreeObjectExtend),o=Me(t.nodeVal),a=Me(t.nodeColor),c=Me(t.nodeVisibility),l={},h={};eu(t.graphData.nodes.filter(c),t.graphScene,{purge:t._flushObjects||n(["nodeThreeObject","nodeThreeObjectExtend"]),objFilter:function(B){return B.__graphObjType==="node"},createObj:function(B){var nt=i(B),at=r(B);nt&&t.nodeThreeObject===nt&&(nt=nt.clone());var et;return nt&&!at?et=nt:(et=new Zt.Mesh,et.__graphDefaultObj=!0,nt&&at&&et.add(nt)),et.__graphObjType="node",et},updateObj:function(B,nt){if(B.__graphDefaultObj){var at=o(nt)||1,et=Math.cbrt(at)*t.nodeRelSize,Nt=t.nodeResolution;(!B.geometry.type.match(/^Sphere(Buffer)?Geometry$/)||B.geometry.parameters.radius!==et||B.geometry.parameters.widthSegments!==Nt)&&(l.hasOwnProperty(at)||(l[at]=new Zt.SphereGeometry(et,Nt,Nt)),B.geometry.dispose(),B.geometry=l[at]);var Ft=a(nt),jt=new Zt.Color(nu(Ft||"#ffffaa")),Xt=t.nodeOpacity*q_(Ft);(B.material.type!=="MeshLambertMaterial"||!B.material.color.equals(jt)||B.material.opacity!==Xt)&&(h.hasOwnProperty(Ft)||(h[Ft]=new Zt.MeshLambertMaterial({color:jt,transparent:!0,opacity:Xt})),B.material.dispose(),B.material=h[Ft])}}})}if(t._flushObjects||n(["graphData","linkThreeObject","linkThreeObjectExtend","linkMaterial","linkColor","linkWidth","linkVisibility","linkResolution","linkOpacity","linkDirectionalArrowLength","linkDirectionalArrowColor","linkDirectionalArrowResolution","linkDirectionalParticles","linkDirectionalParticleWidth","linkDirectionalParticleColor","linkDirectionalParticleResolution"])){var u=Me(t.linkThreeObject),d=Me(t.linkThreeObjectExtend),f=Me(t.linkMaterial),p=Me(t.linkVisibility),_=Me(t.linkColor),g=Me(t.linkWidth),m={},x={},v={},y=t.graphData.links.filter(p);if(eu(y,t.graphScene,{objBindAttr:"__lineObj",purge:t._flushObjects||n(["linkThreeObject","linkThreeObjectExtend","linkWidth"]),objFilter:function(B){return B.__graphObjType==="link"},exitObj:function(B){var nt=B.__data&&B.__data.__singleHopPhotonsObj;nt&&(nt.parent.remove(nt),bx(nt),delete B.__data.__singleHopPhotonsObj)},createObj:function(B){var nt=u(B),at=d(B);nt&&t.linkThreeObject===nt&&(nt=nt.clone());var et;if(!nt||at){var Nt=!!g(B);if(Nt)et=new Zt.Mesh;else{var Ft=new Zt.BufferGeometry;Ft[j_]("position",new Zt.BufferAttribute(new Float32Array(2*3),3)),et=new Zt.Line(Ft)}}var jt;return nt?at?(jt=new Zt.Group,jt.__graphDefaultObj=!0,jt.add(et),jt.add(nt)):jt=nt:(jt=et,jt.__graphDefaultObj=!0),jt.renderOrder=10,jt.__graphObjType="link",jt},updateObj:function(B,nt){if(B.__graphDefaultObj){var at=B.children.length?B.children[0]:B,et=Math.ceil(g(nt)*10)/10,Nt=!!et;if(Nt){var Ft=et/2,jt=t.linkResolution;if(!at.geometry.type.match(/^Cylinder(Buffer)?Geometry$/)||at.geometry.parameters.radiusTop!==Ft||at.geometry.parameters.radialSegments!==jt){if(!m.hasOwnProperty(et)){var Xt=new Zt.CylinderGeometry(Ft,Ft,1,jt,1,!1);Xt[Vf](new Zt.Matrix4().makeTranslation(0,1/2,0)),Xt[Vf](new Zt.Matrix4().makeRotationX(Math.PI/2)),m[et]=Xt}at.geometry.dispose(),at.geometry=m[et]}}var Ie=f(nt);if(Ie)at.material=Ie;else{var V=_(nt),gt=new Zt.Color(nu(V||"#f0f0f0")),mt=t.linkOpacity*q_(V),Ot=Nt?"MeshLambertMaterial":"LineBasicMaterial";if(at.material.type!==Ot||!at.material.color.equals(gt)||at.material.opacity!==mt){var St=Nt?x:v;St.hasOwnProperty(V)||(St[V]=new Zt[Ot]({color:gt,transparent:mt<1,opacity:mt,depthWrite:mt>=1})),at.material.dispose(),at.material=St[V]}}}}}),t.linkDirectionalArrowLength||e.hasOwnProperty("linkDirectionalArrowLength")){var b=Me(t.linkDirectionalArrowLength),S=Me(t.linkDirectionalArrowColor);eu(y.filter(b),t.graphScene,{objBindAttr:"__arrowObj",objFilter:function(B){return B.__linkThreeObjType==="arrow"},createObj:function(){var B=new Zt.Mesh(void 0,new Zt.MeshLambertMaterial({transparent:!0}));return B.__linkThreeObjType="arrow",B},updateObj:function(B,nt){var at=b(nt),et=t.linkDirectionalArrowResolution;if(!B.geometry.type.match(/^Cone(Buffer)?Geometry$/)||B.geometry.parameters.height!==at||B.geometry.parameters.radialSegments!==et){var Nt=new Zt.ConeGeometry(at*.25,at,et);Nt.translate(0,at/2,0),Nt.rotateX(Math.PI/2),B.geometry.dispose(),B.geometry=Nt}var Ft=S(nt)||_(nt)||"#f0f0f0";B.material.color=new Zt.Color(nu(Ft)),B.material.opacity=t.linkOpacity*3*q_(Ft)}})}if(t.linkDirectionalParticles||e.hasOwnProperty("linkDirectionalParticles")){var M=Me(t.linkDirectionalParticles),T=Me(t.linkDirectionalParticleWidth),A=Me(t.linkDirectionalParticleColor),w={},E={};eu(y.filter(M),t.graphScene,{objBindAttr:"__photonsObj",objFilter:function(B){return B.__linkThreeObjType==="photons"},createObj:function(){var B=new Zt.Group;return B.__linkThreeObjType="photons",B},updateObj:function(B,nt){var at=Math.round(Math.abs(M(nt))),et=!!B.children.length&&B.children[0],Nt=Math.ceil(T(nt)*10)/10/2,Ft=t.linkDirectionalParticleResolution,jt;et&&et.geometry.parameters.radius===Nt&&et.geometry.parameters.widthSegments===Ft?jt=et.geometry:(E.hasOwnProperty(Nt)||(E[Nt]=new Zt.SphereGeometry(Nt,Ft,Ft)),jt=E[Nt],et&&et.geometry.dispose());var Xt=A(nt)||_(nt)||"#f0f0f0",Ie=new Zt.Color(nu(Xt)),V=t.linkOpacity*3,gt;et&&et.material.color.equals(Ie)&&et.material.opacity===V?gt=et.material:(w.hasOwnProperty(Xt)||(w[Xt]=new Zt.MeshLambertMaterial({color:Ie,transparent:!0,opacity:V})),gt=w[Xt],et&&et.material.dispose()),eu(ws(new Array(at)).map(function(mt,Ot){return{idx:Ot}}),B,{idAccessor:function(Ot){return Ot.idx},createObj:function(){return new Zt.Mesh(jt,gt)},updateObj:function(Ot){Ot.geometry=jt,Ot.material=gt}})}})}}if(t._flushObjects=!1,n(["graphData","nodeId","linkSource","linkTarget","numDimensions","forceEngine","dagMode","dagNodeFilter","dagLevelDistance"])){t.engineRunning=!1,t.graphData.links.forEach(function(H){H.source=H[t.linkSource],H.target=H[t.linkTarget]});var N=t.forceEngine!=="ngraph",I;if(N){(I=t.d3ForceLayout).stop().alpha(1).numDimensions(t.numDimensions).nodes(t.graphData.nodes);var P=t.d3ForceLayout.force("link");P&&P.id(function(H){return H[t.nodeId]}).links(t.graphData.links);var D=t.dagMode&&o8(t.graphData,function(H){return H[t.nodeId]},{nodeFilter:t.dagNodeFilter,onLoopError:t.onDagError||void 0}),O=Math.max.apply(Math,ws(Object.values(D||[]))),k=t.dagLevelDistance||t.graphData.nodes.length/(O||1)*a8*(["radialin","radialout"].indexOf(t.dagMode)!==-1?.7:1);if(["lr","rl","td","bu","zin","zout"].includes(e.dagMode)){var z=["lr","rl"].includes(e.dagMode)?"fx":["td","bu"].includes(e.dagMode)?"fy":"fz";t.graphData.nodes.filter(t.dagNodeFilter).forEach(function(H){return delete H[z]})}if(["lr","rl","td","bu","zin","zout"].includes(t.dagMode)){var Y=["rl","td","zout"].includes(t.dagMode),U=function(B){return(D[B[t.nodeId]]-O/2)*k*(Y?-1:1)},W=["lr","rl"].includes(t.dagMode)?"fx":["td","bu"].includes(t.dagMode)?"fy":"fz";t.graphData.nodes.filter(t.dagNodeFilter).forEach(function(H){return H[W]=U(H)})}t.d3ForceLayout.force("dagRadial",["radialin","radialout"].indexOf(t.dagMode)!==-1?uH(function(H){var B=D[H[t.nodeId]]||-1;return(t.dagMode==="radialin"?O-B:B)*k}).strength(function(H){return t.dagNodeFilter(H)?1:0}):null)}else{var lt=dw.graph();t.graphData.nodes.forEach(function(H){lt.addNode(H[t.nodeId])}),t.graphData.links.forEach(function(H){lt.addLink(H.source,H.target)}),I=dw.forcelayout(lt,TR({dimensions:t.numDimensions},t.ngraphPhysics)),I.graph=lt}for(var wt=0;wt<t.warmupTicks&&!(N&&t.d3AlphaMin>0&&t.d3ForceLayout.alpha()<t.d3AlphaMin);wt++)I[N?"tick":"step"]();t.layout=I,this.resetCountdown()}t.engineRunning=!0,t.onFinishUpdate()}});function l8(s){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Object,e=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,n=function(i){function r(){var o;qW(this,r);for(var a=arguments.length,c=new Array(a),l=0;l<a;l++)c[l]=arguments[l];return o=WW(this,r,[].concat(c)),o.__kapsuleInstance=MR(s,[].concat(ws(e?[o]:[]),c)),o}return XW(r,i),jW(r)}(t);return Object.keys(s()).forEach(function(i){return n.prototype[i]=function(){var r,o=(r=this.__kapsuleInstance)[i].apply(r,arguments);return o===this.__kapsuleInstance?this:o}}),n}var h8=window.THREE?window.THREE:{Group:DA},CR=l8(c8,h8.Group,!0);/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const gg="170",u8=0,d8=1,f8=2,p8=1,Gf=3,lh=0,Vs=1,zl=2,hh=0,ea=1,Em=2,Cm=3,Rm=4,RR=5,Xo=100,NR=101,PR=102,m8=103,g8=104,DR=200,IR=201,FR=202,OR=203,Nm=204,Pm=205,LR=206,BR=207,UR=208,kR=209,zR=210,VR=0,GR=1,HR=2,Dm=3,$R=4,WR=5,qR=6,jR=7,_g=0,_8=1,y8=2,Vl=0,x8=1,v8=2,b8=3,S8=4,M8=6,T8=7,Ab=300,dc=301,uh=302,Id=303,Fd=304,Sx=306,Im=1e3,wl=1001,Fm=1002,ti=1003,Mx=1004,Gl=1005,Yi=1006,Tx=1007,Jr=1008,na=1009,Du=1010,Iu=1011,Al=1012,li=1013,Un=1014,ji=1015,to=1016,w8=1017,A8=1018,Od=1020,XR=35902,E8=1021,Eb=1022,Ph=1023,C8=1024,R8=1025,Ja=1026,dh=1027,Cb=1028,Rb=1029,id=1030,Nb=1031,N8=1032,Pb=1033,X_=33776,Gp=33777,Hp=33778,$p=33779,fw=35840,pw=35841,mw=35842,gw=35843,_w=36196,wx=37492,Ax=37496,Ex=37808,Cx=37809,Rx=37810,Nx=37811,Px=37812,Dx=37813,Ix=37814,Fx=37815,Ox=37816,Lx=37817,Bx=37818,Ux=37819,kx=37820,zx=37821,Y_=36492,P8=36283,yw=36284,xw=36285,vw=36286,la=0,D8=1,fc="",Yt="srgb",ia="srgb-linear",YR="linear",sd="srgb",I8=0,La=7680,F8=7681,O8=7682,L8=7683,B8=34055,U8=34056,k8=5386,z8=512,V8=513,G8=514,H8=515,$8=516,W8=517,q8=518,Vx=519,ZR=512,Db=513,KR=514,QR=515,JR=516,tN=517,eN=518,nN=519,Om=35044,El=35048,Os=2e3,pc=2001;class Dh{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;const i=this._listeners[t];if(i!==void 0){const r=i.indexOf(e);r!==-1&&i.splice(r,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const n=this._listeners[t.type];if(n!==void 0){t.target=this;const i=n.slice(0);for(let r=0,o=i.length;r<o;r++)i[r].call(this,t);t.target=null}}}const Zn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let bw=1234567;const Fu=Math.PI/180,rd=180/Math.PI;function eo(){const s=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Zn[s&255]+Zn[s>>8&255]+Zn[s>>16&255]+Zn[s>>24&255]+"-"+Zn[t&255]+Zn[t>>8&255]+"-"+Zn[t>>16&15|64]+Zn[t>>24&255]+"-"+Zn[e&63|128]+Zn[e>>8&255]+"-"+Zn[e>>16&255]+Zn[e>>24&255]+Zn[n&255]+Zn[n>>8&255]+Zn[n>>16&255]+Zn[n>>24&255]).toLowerCase()}function kn(s,t,e){return Math.max(t,Math.min(e,s))}function Ib(s,t){return(s%t+t)%t}function j8(s,t,e,n,i){return n+(s-t)*(i-n)/(e-t)}function X8(s,t,e){return s!==t?(e-s)/(t-s):0}function Ou(s,t,e){return(1-e)*s+e*t}function Y8(s,t,e,n){return Ou(s,t,1-Math.exp(-e*n))}function Z8(s,t=1){return t-Math.abs(Ib(s,t*2)-t)}function K8(s,t,e){return s<=t?0:s>=e?1:(s=(s-t)/(e-t),s*s*(3-2*s))}function Q8(s,t,e){return s<=t?0:s>=e?1:(s=(s-t)/(e-t),s*s*s*(s*(s*6-15)+10))}function J8(s,t){return s+Math.floor(Math.random()*(t-s+1))}function t6(s,t){return s+Math.random()*(t-s)}function e6(s){return s*(.5-Math.random())}function n6(s){s!==void 0&&(bw=s);let t=bw+=1831565813;return t=Math.imul(t^t>>>15,t|1),t^=t+Math.imul(t^t>>>7,t|61),((t^t>>>14)>>>0)/4294967296}function i6(s){return s*Fu}function s6(s){return s*rd}function r6(s){return(s&s-1)===0&&s!==0}function o6(s){return Math.pow(2,Math.ceil(Math.log(s)/Math.LN2))}function a6(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function c6(s,t,e,n,i){const r=Math.cos,o=Math.sin,a=r(e/2),c=o(e/2),l=r((t+n)/2),h=o((t+n)/2),u=r((t-n)/2),d=o((t-n)/2),f=r((n-t)/2),p=o((n-t)/2);switch(i){case"XYX":s.set(a*h,c*u,c*d,a*l);break;case"YZY":s.set(c*d,a*h,c*u,a*l);break;case"ZXZ":s.set(c*u,c*d,a*h,a*l);break;case"XZX":s.set(a*h,c*p,c*f,a*l);break;case"YXY":s.set(c*f,a*h,c*p,a*l);break;case"ZYZ":s.set(c*p,c*f,a*h,a*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function ui(s,t){switch(t.constructor){case Float32Array:return s;case Uint32Array:return s/4294967295;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int32Array:return Math.max(s/2147483647,-1);case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function ie(s,t){switch(t.constructor){case Float32Array:return s;case Uint32Array:return Math.round(s*4294967295);case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int32Array:return Math.round(s*2147483647);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}const l6={DEG2RAD:Fu,RAD2DEG:rd,generateUUID:eo,clamp:kn,euclideanModulo:Ib,mapLinear:j8,inverseLerp:X8,lerp:Ou,damp:Y8,pingpong:Z8,smoothstep:K8,smootherstep:Q8,randInt:J8,randFloat:t6,randFloatSpread:e6,seededRandom:n6,degToRad:i6,radToDeg:s6,isPowerOfTwo:r6,ceilPowerOfTwo:o6,floorPowerOfTwo:a6,setQuaternionFromProperEuler:c6,normalize:ie,denormalize:ui};class xe{constructor(t=0,e=0){xe.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(kn(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),r=this.x-t.x,o=this.y-t.y;return this.x=r*n-o*i+t.x,this.y=r*i+o*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Ii{constructor(t,e,n,i,r,o,a,c,l){Ii.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,e,n,i,r,o,a,c,l)}set(t,e,n,i,r,o,a,c,l){const h=this.elements;return h[0]=t,h[1]=i,h[2]=a,h[3]=e,h[4]=r,h[5]=c,h[6]=n,h[7]=o,h[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,o=n[0],a=n[3],c=n[6],l=n[1],h=n[4],u=n[7],d=n[2],f=n[5],p=n[8],_=i[0],g=i[3],m=i[6],x=i[1],v=i[4],y=i[7],b=i[2],S=i[5],M=i[8];return r[0]=o*_+a*x+c*b,r[3]=o*g+a*v+c*S,r[6]=o*m+a*y+c*M,r[1]=l*_+h*x+u*b,r[4]=l*g+h*v+u*S,r[7]=l*m+h*y+u*M,r[2]=d*_+f*x+p*b,r[5]=d*g+f*v+p*S,r[8]=d*m+f*y+p*M,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],o=t[4],a=t[5],c=t[6],l=t[7],h=t[8];return e*o*h-e*a*l-n*r*h+n*a*c+i*r*l-i*o*c}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],o=t[4],a=t[5],c=t[6],l=t[7],h=t[8],u=h*o-a*l,d=a*c-h*r,f=l*r-o*c,p=e*u+n*d+i*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const _=1/p;return t[0]=u*_,t[1]=(i*l-h*n)*_,t[2]=(a*n-i*o)*_,t[3]=d*_,t[4]=(h*e-i*c)*_,t[5]=(i*r-a*e)*_,t[6]=f*_,t[7]=(n*c-l*e)*_,t[8]=(o*e-n*r)*_,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,r,o,a){const c=Math.cos(r),l=Math.sin(r);return this.set(n*c,n*l,-n*(c*o+l*a)+o+t,-i*l,i*c,-i*(-l*o+c*a)+a+e,0,0,1),this}scale(t,e){return this.premultiply(Z_.makeScale(t,e)),this}rotate(t){return this.premultiply(Z_.makeRotation(-t)),this}translate(t,e){return this.premultiply(Z_.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,n,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<9;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const Z_=new Ii;function h6(s){for(let t=s.length-1;t>=0;--t)if(s[t]>=65535)return!0;return!1}function Gx(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function u6(){const s=Gx("canvas");return s.style.display="block",s}const Sw={};function d6(s){s in Sw||(Sw[s]=!0,console.warn(s))}const _n={enabled:!0,workingColorSpace:ia,spaces:{},convert:function(s,t,e){return this.enabled===!1||t===e||!t||!e||(this.spaces[t].transfer===sd&&(s.r=no(s.r),s.g=no(s.g),s.b=no(s.b)),this.spaces[t].primaries!==this.spaces[e].primaries&&(s.applyMatrix3(this.spaces[t].toXYZ),s.applyMatrix3(this.spaces[e].fromXYZ)),this.spaces[e].transfer===sd&&(s.r=Hl(s.r),s.g=Hl(s.g),s.b=Hl(s.b))),s},fromWorkingColorSpace:function(s,t){return this.convert(s,this.workingColorSpace,t)},toWorkingColorSpace:function(s,t){return this.convert(s,t,this.workingColorSpace)},getPrimaries:function(s){return this.spaces[s].primaries},getTransfer:function(s){return s===fc?YR:this.spaces[s].transfer},getLuminanceCoefficients:function(s,t=this.workingColorSpace){return s.fromArray(this.spaces[t].luminanceCoefficients)},define:function(s){Object.assign(this.spaces,s)},_getMatrix:function(s,t,e){return s.copy(this.spaces[t].toXYZ).multiply(this.spaces[e].fromXYZ)},_getDrawingBufferColorSpace:function(s){return this.spaces[s].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(s=this.workingColorSpace){return this.spaces[s].workingColorSpaceConfig.unpackColorSpace}};function no(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function Hl(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}const Mw=[.64,.33,.3,.6,.15,.06],Tw=[.2126,.7152,.0722],ww=[.3127,.329],Aw=new Ii().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),Ew=new Ii().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);_n.define({[ia]:{primaries:Mw,whitePoint:ww,transfer:YR,toXYZ:Aw,fromXYZ:Ew,luminanceCoefficients:Tw,workingColorSpaceConfig:{unpackColorSpace:Yt},outputColorSpaceConfig:{drawingBufferColorSpace:Yt}},[Yt]:{primaries:Mw,whitePoint:ww,transfer:sd,toXYZ:Aw,fromXYZ:Ew,luminanceCoefficients:Tw,outputColorSpaceConfig:{drawingBufferColorSpace:Yt}}});let Jc;class f6{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{Jc===void 0&&(Jc=Gx("canvas")),Jc.width=t.width,Jc.height=t.height;const n=Jc.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=Jc}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=Gx("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const i=n.getImageData(0,0,t.width,t.height),r=i.data;for(let o=0;o<r.length;o++)r[o]=no(r[o]/255)*255;return n.putImageData(i,0,0),e}else if(t.data){const e=t.data.slice(0);for(let n=0;n<e.length;n++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[n]=Math.floor(no(e[n]/255)*255):e[n]=no(e[n]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let p6=0;class iN{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:p6++}),this.uuid=eo(),this.data=t,this.dataReady=!0,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let r;if(Array.isArray(i)){r=[];for(let o=0,a=i.length;o<a;o++)i[o].isDataTexture?r.push(K_(i[o].image)):r.push(K_(i[o]))}else r=K_(i);n.url=r}return e||(t.images[this.uuid]=n),n}}function K_(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?f6.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let m6=0;class pi extends Dh{constructor(t=pi.DEFAULT_IMAGE,e=pi.DEFAULT_MAPPING,n=wl,i=wl,r=Yi,o=Jr,a=Ph,c=na,l=pi.DEFAULT_ANISOTROPY,h=fc){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:m6++}),this.uuid=eo(),this.name="",this.source=new iN(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=o,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=c,this.offset=new xe(0,0),this.repeat=new xe(1,1),this.center=new xe(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Ii,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==Ab)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case Im:t.x=t.x-Math.floor(t.x);break;case wl:t.x=t.x<0?0:1;break;case Fm:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case Im:t.y=t.y-Math.floor(t.y);break;case wl:t.y=t.y<0?0:1;break;case Fm:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){t===!0&&this.pmremVersion++}}pi.DEFAULT_IMAGE=null;pi.DEFAULT_MAPPING=Ab;pi.DEFAULT_ANISOTROPY=1;class Ne{constructor(t=0,e=0,n=0,i=1){Ne.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=this.w,o=t.elements;return this.x=o[0]*e+o[4]*n+o[8]*i+o[12]*r,this.y=o[1]*e+o[5]*n+o[9]*i+o[13]*r,this.z=o[2]*e+o[6]*n+o[10]*i+o[14]*r,this.w=o[3]*e+o[7]*n+o[11]*i+o[15]*r,this}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this.w/=t.w,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,r;const c=t.elements,l=c[0],h=c[4],u=c[8],d=c[1],f=c[5],p=c[9],_=c[2],g=c[6],m=c[10];if(Math.abs(h-d)<.01&&Math.abs(u-_)<.01&&Math.abs(p-g)<.01){if(Math.abs(h+d)<.1&&Math.abs(u+_)<.1&&Math.abs(p+g)<.1&&Math.abs(l+f+m-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const v=(l+1)/2,y=(f+1)/2,b=(m+1)/2,S=(h+d)/4,M=(u+_)/4,T=(p+g)/4;return v>y&&v>b?v<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(v),i=S/n,r=M/n):y>b?y<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(y),n=S/i,r=T/i):b<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(b),n=M/r,i=T/r),this.set(n,i,r,e),this}let x=Math.sqrt((g-p)*(g-p)+(u-_)*(u-_)+(d-h)*(d-h));return Math.abs(x)<.001&&(x=1),this.x=(g-p)/x,this.y=(u-_)/x,this.z=(d-h)/x,this.w=Math.acos((l+f+m-1)/2),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this.w=e[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Ih extends Dh{constructor(t=1,e=1,n={}){super(),this.isRenderTarget=!0,this.width=t,this.height=e,this.depth=1,this.scissor=new Ne(0,0,t,e),this.scissorTest=!1,this.viewport=new Ne(0,0,t,e);const i={width:t,height:e,depth:1};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Yi,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},n);const r=new pi(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);r.flipY=!1,r.generateMipmaps=n.generateMipmaps,r.internalFormat=n.internalFormat,this.textures=[];const o=n.count;for(let a=0;a<o;a++)this.textures[a]=r.clone(),this.textures[a].isRenderTargetTexture=!0;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}get texture(){return this.textures[0]}set texture(t){this.textures[0]=t}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let i=0,r=this.textures.length;i<r;i++)this.textures[i].image.width=t,this.textures[i].image.height=e,this.textures[i].image.depth=n;this.dispose()}this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.textures.length=0;for(let n=0,i=t.textures.length;n<i;n++)this.textures[n]=t.textures[n].clone(),this.textures[n].isRenderTargetTexture=!0;const e=Object.assign({},t.texture.image);return this.texture.source=new iN(e),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.resolveDepthBuffer=t.resolveDepthBuffer,this.resolveStencilBuffer=t.resolveStencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class g6 extends Ih{constructor(t=1,e=1,n={}){super(t,e,n),this.isWebGLRenderTarget=!0}}class _6 extends pi{constructor(t=null,e=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=ti,this.minFilter=ti,this.wrapR=wl,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class Ld{constructor(t=0,e=0,n=0,i=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=i}static slerpFlat(t,e,n,i,r,o,a){let c=n[i+0],l=n[i+1],h=n[i+2],u=n[i+3];const d=r[o+0],f=r[o+1],p=r[o+2],_=r[o+3];if(a===0){t[e+0]=c,t[e+1]=l,t[e+2]=h,t[e+3]=u;return}if(a===1){t[e+0]=d,t[e+1]=f,t[e+2]=p,t[e+3]=_;return}if(u!==_||c!==d||l!==f||h!==p){let g=1-a;const m=c*d+l*f+h*p+u*_,x=m>=0?1:-1,v=1-m*m;if(v>Number.EPSILON){const b=Math.sqrt(v),S=Math.atan2(b,m*x);g=Math.sin(g*S)/b,a=Math.sin(a*S)/b}const y=a*x;if(c=c*g+d*y,l=l*g+f*y,h=h*g+p*y,u=u*g+_*y,g===1-a){const b=1/Math.sqrt(c*c+l*l+h*h+u*u);c*=b,l*=b,h*=b,u*=b}}t[e]=c,t[e+1]=l,t[e+2]=h,t[e+3]=u}static multiplyQuaternionsFlat(t,e,n,i,r,o){const a=n[i],c=n[i+1],l=n[i+2],h=n[i+3],u=r[o],d=r[o+1],f=r[o+2],p=r[o+3];return t[e]=a*p+h*u+c*f-l*d,t[e+1]=c*p+h*d+l*u-a*f,t[e+2]=l*p+h*f+a*d-c*u,t[e+3]=h*p-a*u-c*d-l*f,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const n=t._x,i=t._y,r=t._z,o=t._order,a=Math.cos,c=Math.sin,l=a(n/2),h=a(i/2),u=a(r/2),d=c(n/2),f=c(i/2),p=c(r/2);switch(o){case"XYZ":this._x=d*h*u+l*f*p,this._y=l*f*u-d*h*p,this._z=l*h*p+d*f*u,this._w=l*h*u-d*f*p;break;case"YXZ":this._x=d*h*u+l*f*p,this._y=l*f*u-d*h*p,this._z=l*h*p-d*f*u,this._w=l*h*u+d*f*p;break;case"ZXY":this._x=d*h*u-l*f*p,this._y=l*f*u+d*h*p,this._z=l*h*p+d*f*u,this._w=l*h*u-d*f*p;break;case"ZYX":this._x=d*h*u-l*f*p,this._y=l*f*u+d*h*p,this._z=l*h*p-d*f*u,this._w=l*h*u+d*f*p;break;case"YZX":this._x=d*h*u+l*f*p,this._y=l*f*u+d*h*p,this._z=l*h*p-d*f*u,this._w=l*h*u-d*f*p;break;case"XZY":this._x=d*h*u-l*f*p,this._y=l*f*u-d*h*p,this._z=l*h*p+d*f*u,this._w=l*h*u+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return e===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],r=e[8],o=e[1],a=e[5],c=e[9],l=e[2],h=e[6],u=e[10],d=n+a+u;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(h-c)*f,this._y=(r-l)*f,this._z=(o-i)*f}else if(n>a&&n>u){const f=2*Math.sqrt(1+n-a-u);this._w=(h-c)/f,this._x=.25*f,this._y=(i+o)/f,this._z=(r+l)/f}else if(a>u){const f=2*Math.sqrt(1+a-n-u);this._w=(r-l)/f,this._x=(i+o)/f,this._y=.25*f,this._z=(c+h)/f}else{const f=2*Math.sqrt(1+u-n-a);this._w=(o-i)/f,this._x=(r+l)/f,this._y=(c+h)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(kn(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(n===0)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,r=t._z,o=t._w,a=e._x,c=e._y,l=e._z,h=e._w;return this._x=n*h+o*a+i*l-r*c,this._y=i*h+o*c+r*a-n*l,this._z=r*h+o*l+n*c-i*a,this._w=o*h-n*a-i*c-r*l,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const n=this._x,i=this._y,r=this._z,o=this._w;let a=o*t._w+n*t._x+i*t._y+r*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=o,this._x=n,this._y=i,this._z=r,this;const c=1-a*a;if(c<=Number.EPSILON){const f=1-e;return this._w=f*o+e*this._w,this._x=f*n+e*this._x,this._y=f*i+e*this._y,this._z=f*r+e*this._z,this.normalize(),this}const l=Math.sqrt(c),h=Math.atan2(l,a),u=Math.sin((1-e)*h)/l,d=Math.sin(e*h)/l;return this._w=o*u+this._w*d,this._x=n*u+this._x*d,this._y=i*u+this._y*d,this._z=r*u+this._z*d,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),r=Math.sqrt(n);return this.set(i*Math.sin(t),i*Math.cos(t),r*Math.sin(e),r*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class Z{constructor(t=0,e=0,n=0){Z.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return n===void 0&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(Cw.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(Cw.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6]*i,this.y=r[1]*e+r[4]*n+r[7]*i,this.z=r[2]*e+r[5]*n+r[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=t.elements,o=1/(r[3]*e+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*e+r[4]*n+r[8]*i+r[12])*o,this.y=(r[1]*e+r[5]*n+r[9]*i+r[13])*o,this.z=(r[2]*e+r[6]*n+r[10]*i+r[14])*o,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,r=t.x,o=t.y,a=t.z,c=t.w,l=2*(o*i-a*n),h=2*(a*e-r*i),u=2*(r*n-o*e);return this.x=e+c*l+o*u-a*h,this.y=n+c*h+a*l-r*u,this.z=i+c*u+r*h-o*l,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*i,this.y=r[1]*e+r[5]*n+r[9]*i,this.z=r[2]*e+r[6]*n+r[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,r=t.z,o=e.x,a=e.y,c=e.z;return this.x=i*c-r*a,this.y=r*o-n*c,this.z=n*a-i*o,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return Q_.copy(this).projectOnVector(t),this.sub(Q_)}reflect(t){return this.sub(Q_.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(kn(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=Math.random()*2-1,n=Math.sqrt(1-e*e);return this.x=n*Math.cos(t),this.y=e,this.z=n*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Q_=new Z,Cw=new Ld;class Bd{constructor(t=new Z(1/0,1/0,1/0),e=new Z(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e+=3)this.expandByPoint(xs.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,n=t.count;e<n;e++)this.expandByPoint(xs.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=xs.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(n!==void 0){const r=n.getAttribute("position");if(e===!0&&r!==void 0&&t.isInstancedMesh!==!0)for(let o=0,a=r.count;o<a;o++)t.isMesh===!0?t.getVertexPosition(o,xs):xs.fromBufferAttribute(r,o),xs.applyMatrix4(t.matrixWorld),this.expandByPoint(xs);else t.boundingBox!==void 0?(t.boundingBox===null&&t.computeBoundingBox(),Hf.copy(t.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),Hf.copy(n.boundingBox)),Hf.applyMatrix4(t.matrixWorld),this.union(Hf)}const i=t.children;for(let r=0,o=i.length;r<o;r++)this.expandByObject(i[r],e);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,xs),xs.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(iu),$f.subVectors(this.max,iu),tl.subVectors(t.a,iu),el.subVectors(t.b,iu),nl.subVectors(t.c,iu),Oo.subVectors(el,tl),Lo.subVectors(nl,el),Na.subVectors(tl,nl);let e=[0,-Oo.z,Oo.y,0,-Lo.z,Lo.y,0,-Na.z,Na.y,Oo.z,0,-Oo.x,Lo.z,0,-Lo.x,Na.z,0,-Na.x,-Oo.y,Oo.x,0,-Lo.y,Lo.x,0,-Na.y,Na.x,0];return!J_(e,tl,el,nl,$f)||(e=[1,0,0,0,1,0,0,0,1],!J_(e,tl,el,nl,$f))?!1:(Wf.crossVectors(Oo,Lo),e=[Wf.x,Wf.y,Wf.z],J_(e,tl,el,nl,$f))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,xs).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(xs).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(wr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),wr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),wr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),wr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),wr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),wr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),wr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),wr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(wr),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const wr=[new Z,new Z,new Z,new Z,new Z,new Z,new Z,new Z],xs=new Z,Hf=new Bd,tl=new Z,el=new Z,nl=new Z,Oo=new Z,Lo=new Z,Na=new Z,iu=new Z,$f=new Z,Wf=new Z,Pa=new Z;function J_(s,t,e,n,i){for(let r=0,o=s.length-3;r<=o;r+=3){Pa.fromArray(s,r);const a=i.x*Math.abs(Pa.x)+i.y*Math.abs(Pa.y)+i.z*Math.abs(Pa.z),c=t.dot(Pa),l=e.dot(Pa),h=n.dot(Pa);if(Math.max(-Math.max(c,l,h),Math.min(c,l,h))>a)return!1}return!0}const y6=new Bd,su=new Z,t0=new Z;class Fb{constructor(t=new Z,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;e!==void 0?n.copy(e):y6.setFromPoints(t).getCenter(n);let i=0;for(let r=0,o=t.length;r<o;r++)i=Math.max(i,n.distanceToSquared(t[r]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;su.subVectors(t,this.center);const e=su.lengthSq();if(e>this.radius*this.radius){const n=Math.sqrt(e),i=(n-this.radius)*.5;this.center.addScaledVector(su,i/n),this.radius+=i}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(t0.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(su.copy(t.center).add(t0)),this.expandByPoint(su.copy(t.center).sub(t0))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Ar=new Z,e0=new Z,qf=new Z,Bo=new Z,n0=new Z,jf=new Z,i0=new Z;class x6{constructor(t=new Z,e=new Z(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Ar)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Ar.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Ar.copy(this.origin).addScaledVector(this.direction,e),Ar.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){e0.copy(t).add(e).multiplyScalar(.5),qf.copy(e).sub(t).normalize(),Bo.copy(this.origin).sub(e0);const r=t.distanceTo(e)*.5,o=-this.direction.dot(qf),a=Bo.dot(this.direction),c=-Bo.dot(qf),l=Bo.lengthSq(),h=Math.abs(1-o*o);let u,d,f,p;if(h>0)if(u=o*c-a,d=o*a-c,p=r*h,u>=0)if(d>=-p)if(d<=p){const _=1/h;u*=_,d*=_,f=u*(u+o*d+2*a)+d*(o*u+d+2*c)+l}else d=r,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*c)+l;else d=-r,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*c)+l;else d<=-p?(u=Math.max(0,-(-o*r+a)),d=u>0?-r:Math.min(Math.max(-r,-c),r),f=-u*u+d*(d+2*c)+l):d<=p?(u=0,d=Math.min(Math.max(-r,-c),r),f=d*(d+2*c)+l):(u=Math.max(0,-(o*r+a)),d=u>0?r:Math.min(Math.max(-r,-c),r),f=-u*u+d*(d+2*c)+l);else d=o>0?-r:r,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*c)+l;return n&&n.copy(this.origin).addScaledVector(this.direction,u),i&&i.copy(e0).addScaledVector(qf,d),f}intersectSphere(t,e){Ar.subVectors(t.center,this.origin);const n=Ar.dot(this.direction),i=Ar.dot(Ar)-n*n,r=t.radius*t.radius;if(i>r)return null;const o=Math.sqrt(r-i),a=n-o,c=n+o;return c<0?null:a<0?this.at(c,e):this.at(a,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return n===null?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,r,o,a,c;const l=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,d=this.origin;return l>=0?(n=(t.min.x-d.x)*l,i=(t.max.x-d.x)*l):(n=(t.max.x-d.x)*l,i=(t.min.x-d.x)*l),h>=0?(r=(t.min.y-d.y)*h,o=(t.max.y-d.y)*h):(r=(t.max.y-d.y)*h,o=(t.min.y-d.y)*h),n>o||r>i||((r>n||isNaN(n))&&(n=r),(o<i||isNaN(i))&&(i=o),u>=0?(a=(t.min.z-d.z)*u,c=(t.max.z-d.z)*u):(a=(t.max.z-d.z)*u,c=(t.min.z-d.z)*u),n>c||a>i)||((a>n||n!==n)&&(n=a),(c<i||i!==i)&&(i=c),i<0)?null:this.at(n>=0?n:i,e)}intersectsBox(t){return this.intersectBox(t,Ar)!==null}intersectTriangle(t,e,n,i,r){n0.subVectors(e,t),jf.subVectors(n,t),i0.crossVectors(n0,jf);let o=this.direction.dot(i0),a;if(o>0){if(i)return null;a=1}else if(o<0)a=-1,o=-o;else return null;Bo.subVectors(this.origin,t);const c=a*this.direction.dot(jf.crossVectors(Bo,jf));if(c<0)return null;const l=a*this.direction.dot(n0.cross(Bo));if(l<0||c+l>o)return null;const h=-a*Bo.dot(i0);return h<0?null:this.at(h/o,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Je{constructor(t,e,n,i,r,o,a,c,l,h,u,d,f,p,_,g){Je.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,e,n,i,r,o,a,c,l,h,u,d,f,p,_,g)}set(t,e,n,i,r,o,a,c,l,h,u,d,f,p,_,g){const m=this.elements;return m[0]=t,m[4]=e,m[8]=n,m[12]=i,m[1]=r,m[5]=o,m[9]=a,m[13]=c,m[2]=l,m[6]=h,m[10]=u,m[14]=d,m[3]=f,m[7]=p,m[11]=_,m[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Je().fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/il.setFromMatrixColumn(t,0).length(),r=1/il.setFromMatrixColumn(t,1).length(),o=1/il.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*r,e[5]=n[5]*r,e[6]=n[6]*r,e[7]=0,e[8]=n[8]*o,e[9]=n[9]*o,e[10]=n[10]*o,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,i=t.y,r=t.z,o=Math.cos(n),a=Math.sin(n),c=Math.cos(i),l=Math.sin(i),h=Math.cos(r),u=Math.sin(r);if(t.order==="XYZ"){const d=o*h,f=o*u,p=a*h,_=a*u;e[0]=c*h,e[4]=-c*u,e[8]=l,e[1]=f+p*l,e[5]=d-_*l,e[9]=-a*c,e[2]=_-d*l,e[6]=p+f*l,e[10]=o*c}else if(t.order==="YXZ"){const d=c*h,f=c*u,p=l*h,_=l*u;e[0]=d+_*a,e[4]=p*a-f,e[8]=o*l,e[1]=o*u,e[5]=o*h,e[9]=-a,e[2]=f*a-p,e[6]=_+d*a,e[10]=o*c}else if(t.order==="ZXY"){const d=c*h,f=c*u,p=l*h,_=l*u;e[0]=d-_*a,e[4]=-o*u,e[8]=p+f*a,e[1]=f+p*a,e[5]=o*h,e[9]=_-d*a,e[2]=-o*l,e[6]=a,e[10]=o*c}else if(t.order==="ZYX"){const d=o*h,f=o*u,p=a*h,_=a*u;e[0]=c*h,e[4]=p*l-f,e[8]=d*l+_,e[1]=c*u,e[5]=_*l+d,e[9]=f*l-p,e[2]=-l,e[6]=a*c,e[10]=o*c}else if(t.order==="YZX"){const d=o*c,f=o*l,p=a*c,_=a*l;e[0]=c*h,e[4]=_-d*u,e[8]=p*u+f,e[1]=u,e[5]=o*h,e[9]=-a*h,e[2]=-l*h,e[6]=f*u+p,e[10]=d-_*u}else if(t.order==="XZY"){const d=o*c,f=o*l,p=a*c,_=a*l;e[0]=c*h,e[4]=-u,e[8]=l*h,e[1]=d*u+_,e[5]=o*h,e[9]=f*u-p,e[2]=p*u-f,e[6]=a*h,e[10]=_*u+d}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(v6,t,b6)}lookAt(t,e,n){const i=this.elements;return ki.subVectors(t,e),ki.lengthSq()===0&&(ki.z=1),ki.normalize(),Uo.crossVectors(n,ki),Uo.lengthSq()===0&&(Math.abs(n.z)===1?ki.x+=1e-4:ki.z+=1e-4,ki.normalize(),Uo.crossVectors(n,ki)),Uo.normalize(),Xf.crossVectors(ki,Uo),i[0]=Uo.x,i[4]=Xf.x,i[8]=ki.x,i[1]=Uo.y,i[5]=Xf.y,i[9]=ki.y,i[2]=Uo.z,i[6]=Xf.z,i[10]=ki.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,o=n[0],a=n[4],c=n[8],l=n[12],h=n[1],u=n[5],d=n[9],f=n[13],p=n[2],_=n[6],g=n[10],m=n[14],x=n[3],v=n[7],y=n[11],b=n[15],S=i[0],M=i[4],T=i[8],A=i[12],w=i[1],E=i[5],N=i[9],I=i[13],P=i[2],D=i[6],O=i[10],k=i[14],z=i[3],Y=i[7],U=i[11],W=i[15];return r[0]=o*S+a*w+c*P+l*z,r[4]=o*M+a*E+c*D+l*Y,r[8]=o*T+a*N+c*O+l*U,r[12]=o*A+a*I+c*k+l*W,r[1]=h*S+u*w+d*P+f*z,r[5]=h*M+u*E+d*D+f*Y,r[9]=h*T+u*N+d*O+f*U,r[13]=h*A+u*I+d*k+f*W,r[2]=p*S+_*w+g*P+m*z,r[6]=p*M+_*E+g*D+m*Y,r[10]=p*T+_*N+g*O+m*U,r[14]=p*A+_*I+g*k+m*W,r[3]=x*S+v*w+y*P+b*z,r[7]=x*M+v*E+y*D+b*Y,r[11]=x*T+v*N+y*O+b*U,r[15]=x*A+v*I+y*k+b*W,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],r=t[12],o=t[1],a=t[5],c=t[9],l=t[13],h=t[2],u=t[6],d=t[10],f=t[14],p=t[3],_=t[7],g=t[11],m=t[15];return p*(+r*c*u-i*l*u-r*a*d+n*l*d+i*a*f-n*c*f)+_*(+e*c*f-e*l*d+r*o*d-i*o*f+i*l*h-r*c*h)+g*(+e*l*u-e*a*f-r*o*u+n*o*f+r*a*h-n*l*h)+m*(-i*a*h-e*c*u+e*a*d+i*o*u-n*o*d+n*c*h)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],o=t[4],a=t[5],c=t[6],l=t[7],h=t[8],u=t[9],d=t[10],f=t[11],p=t[12],_=t[13],g=t[14],m=t[15],x=u*g*l-_*d*l+_*c*f-a*g*f-u*c*m+a*d*m,v=p*d*l-h*g*l-p*c*f+o*g*f+h*c*m-o*d*m,y=h*_*l-p*u*l+p*a*f-o*_*f-h*a*m+o*u*m,b=p*u*c-h*_*c-p*a*d+o*_*d+h*a*g-o*u*g,S=e*x+n*v+i*y+r*b;if(S===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const M=1/S;return t[0]=x*M,t[1]=(_*d*r-u*g*r-_*i*f+n*g*f+u*i*m-n*d*m)*M,t[2]=(a*g*r-_*c*r+_*i*l-n*g*l-a*i*m+n*c*m)*M,t[3]=(u*c*r-a*d*r-u*i*l+n*d*l+a*i*f-n*c*f)*M,t[4]=v*M,t[5]=(h*g*r-p*d*r+p*i*f-e*g*f-h*i*m+e*d*m)*M,t[6]=(p*c*r-o*g*r-p*i*l+e*g*l+o*i*m-e*c*m)*M,t[7]=(o*d*r-h*c*r+h*i*l-e*d*l-o*i*f+e*c*f)*M,t[8]=y*M,t[9]=(p*u*r-h*_*r-p*n*f+e*_*f+h*n*m-e*u*m)*M,t[10]=(o*_*r-p*a*r+p*n*l-e*_*l-o*n*m+e*a*m)*M,t[11]=(h*a*r-o*u*r-h*n*l+e*u*l+o*n*f-e*a*f)*M,t[12]=b*M,t[13]=(h*_*i-p*u*i+p*n*d-e*_*d-h*n*g+e*u*g)*M,t[14]=(p*a*i-o*_*i-p*n*c+e*_*c+o*n*g-e*a*g)*M,t[15]=(o*u*i-h*a*i+h*n*c-e*u*c-o*n*d+e*a*d)*M,this}scale(t){const e=this.elements,n=t.x,i=t.y,r=t.z;return e[0]*=n,e[4]*=i,e[8]*=r,e[1]*=n,e[5]*=i,e[9]*=r,e[2]*=n,e[6]*=i,e[10]*=r,e[3]*=n,e[7]*=i,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),r=1-n,o=t.x,a=t.y,c=t.z,l=r*o,h=r*a;return this.set(l*o+n,l*a-i*c,l*c+i*a,0,l*a+i*c,h*a+n,h*c-i*o,0,l*c-i*a,h*c+i*o,r*c*c+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,i,r,o){return this.set(1,n,r,0,t,1,o,0,e,i,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,r=e._x,o=e._y,a=e._z,c=e._w,l=r+r,h=o+o,u=a+a,d=r*l,f=r*h,p=r*u,_=o*h,g=o*u,m=a*u,x=c*l,v=c*h,y=c*u,b=n.x,S=n.y,M=n.z;return i[0]=(1-(_+m))*b,i[1]=(f+y)*b,i[2]=(p-v)*b,i[3]=0,i[4]=(f-y)*S,i[5]=(1-(d+m))*S,i[6]=(g+x)*S,i[7]=0,i[8]=(p+v)*M,i[9]=(g-x)*M,i[10]=(1-(d+_))*M,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let r=il.set(i[0],i[1],i[2]).length();const o=il.set(i[4],i[5],i[6]).length(),a=il.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),t.x=i[12],t.y=i[13],t.z=i[14],vs.copy(this);const l=1/r,h=1/o,u=1/a;return vs.elements[0]*=l,vs.elements[1]*=l,vs.elements[2]*=l,vs.elements[4]*=h,vs.elements[5]*=h,vs.elements[6]*=h,vs.elements[8]*=u,vs.elements[9]*=u,vs.elements[10]*=u,e.setFromRotationMatrix(vs),n.x=r,n.y=o,n.z=a,this}makePerspective(t,e,n,i,r,o,a=Os){const c=this.elements,l=2*r/(e-t),h=2*r/(n-i),u=(e+t)/(e-t),d=(n+i)/(n-i);let f,p;if(a===Os)f=-(o+r)/(o-r),p=-2*o*r/(o-r);else if(a===pc)f=-o/(o-r),p=-o*r/(o-r);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return c[0]=l,c[4]=0,c[8]=u,c[12]=0,c[1]=0,c[5]=h,c[9]=d,c[13]=0,c[2]=0,c[6]=0,c[10]=f,c[14]=p,c[3]=0,c[7]=0,c[11]=-1,c[15]=0,this}makeOrthographic(t,e,n,i,r,o,a=Os){const c=this.elements,l=1/(e-t),h=1/(n-i),u=1/(o-r),d=(e+t)*l,f=(n+i)*h;let p,_;if(a===Os)p=(o+r)*u,_=-2*u;else if(a===pc)p=r*u,_=-1*u;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return c[0]=2*l,c[4]=0,c[8]=0,c[12]=-d,c[1]=0,c[5]=2*h,c[9]=0,c[13]=-f,c[2]=0,c[6]=0,c[10]=_,c[14]=-p,c[3]=0,c[7]=0,c[11]=0,c[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<16;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const il=new Z,vs=new Je,v6=new Z(0,0,0),b6=new Z(1,1,1),Uo=new Z,Xf=new Z,ki=new Z,Rw=new Je,Nw=new Ld;class Gs{constructor(t=0,e=0,n=0,i=Gs.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i=this._order){return this._x=t,this._y=e,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const i=t.elements,r=i[0],o=i[4],a=i[8],c=i[1],l=i[5],h=i[9],u=i[2],d=i[6],f=i[10];switch(e){case"XYZ":this._y=Math.asin(kn(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-h,f),this._z=Math.atan2(-o,r)):(this._x=Math.atan2(d,l),this._z=0);break;case"YXZ":this._x=Math.asin(-kn(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-u,r),this._z=0);break;case"ZXY":this._x=Math.asin(kn(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,f),this._z=Math.atan2(-o,l)):(this._y=0,this._z=Math.atan2(c,r));break;case"ZYX":this._y=Math.asin(-kn(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(c,r)):(this._x=0,this._z=Math.atan2(-o,l));break;case"YZX":this._z=Math.asin(kn(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-u,r)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-kn(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,l),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-h,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,n===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return Rw.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Rw,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return Nw.setFromEuler(this),this.setFromQuaternion(Nw,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Gs.DEFAULT_ORDER="XYZ";class S6{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let M6=0;const Pw=new Z,sl=new Ld,Er=new Je,Yf=new Z,ru=new Z,T6=new Z,w6=new Ld,Dw=new Z(1,0,0),Iw=new Z(0,1,0),Fw=new Z(0,0,1),Ow={type:"added"},A6={type:"removed"},rl={type:"childadded",child:null},s0={type:"childremoved",child:null};class On extends Dh{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:M6++}),this.uuid=eo(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=On.DEFAULT_UP.clone();const t=new Z,e=new Gs,n=new Ld,i=new Z(1,1,1);function r(){n.setFromEuler(e,!1)}function o(){e.setFromQuaternion(n,void 0,!1)}e._onChange(r),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Je},normalMatrix:{value:new Ii}}),this.matrix=new Je,this.matrixWorld=new Je,this.matrixAutoUpdate=On.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=On.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new S6,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return sl.setFromAxisAngle(t,e),this.quaternion.multiply(sl),this}rotateOnWorldAxis(t,e){return sl.setFromAxisAngle(t,e),this.quaternion.premultiply(sl),this}rotateX(t){return this.rotateOnAxis(Dw,t)}rotateY(t){return this.rotateOnAxis(Iw,t)}rotateZ(t){return this.rotateOnAxis(Fw,t)}translateOnAxis(t,e){return Pw.copy(t).applyQuaternion(this.quaternion),this.position.add(Pw.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(Dw,t)}translateY(t){return this.translateOnAxis(Iw,t)}translateZ(t){return this.translateOnAxis(Fw,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(Er.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?Yf.copy(t):Yf.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),ru.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Er.lookAt(ru,Yf,this.up):Er.lookAt(Yf,ru,this.up),this.quaternion.setFromRotationMatrix(Er),i&&(Er.extractRotation(i.matrixWorld),sl.setFromRotationMatrix(Er),this.quaternion.premultiply(sl.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(Ow),rl.child=t,this.dispatchEvent(rl),rl.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(A6),s0.child=t,this.dispatchEvent(s0),s0.child=null),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),Er.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),Er.multiply(t.parent.matrixWorld)),t.applyMatrix4(Er),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(Ow),rl.child=t,this.dispatchEvent(rl),rl.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(t,e);if(o!==void 0)return o}}getObjectsByProperty(t,e,n=[]){this[t]===e&&n.push(this);const i=this.children;for(let r=0,o=i.length;r<o;r++)i[r].getObjectsByProperty(t,e,n);return n}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ru,t,T6),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ru,w6,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)}updateWorldMatrix(t,e){const n=this.parent;if(t===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),e===!0){const i=this.children;for(let r=0,o=i.length;r<o;r++)i[r].updateWorldMatrix(!1,!0)}}toJSON(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.visibility=this._visibility,i.active=this._active,i.bounds=this._bounds.map(a=>({boxInitialized:a.boxInitialized,boxMin:a.box.min.toArray(),boxMax:a.box.max.toArray(),sphereInitialized:a.sphereInitialized,sphereRadius:a.sphere.radius,sphereCenter:a.sphere.center.toArray()})),i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.geometryCount=this._geometryCount,i.matricesTexture=this._matricesTexture.toJSON(t),this._colorsTexture!==null&&(i.colorsTexture=this._colorsTexture.toJSON(t)),this.boundingSphere!==null&&(i.boundingSphere={center:i.boundingSphere.center.toArray(),radius:i.boundingSphere.radius}),this.boundingBox!==null&&(i.boundingBox={min:i.boundingBox.min.toArray(),max:i.boundingBox.max.toArray()}));function r(a,c){return a[c.uuid]===void 0&&(a[c.uuid]=c.toJSON(t)),c.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(t.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const c=a.shapes;if(Array.isArray(c))for(let l=0,h=c.length;l<h;l++){const u=c[l];r(t.shapes,u)}else r(t.shapes,c)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let c=0,l=this.material.length;c<l;c++)a.push(r(t.materials,this.material[c]));i.material=a}else i.material=r(t.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const c=this.animations[a];i.animations.push(r(t.animations,c))}}if(e){const a=o(t.geometries),c=o(t.materials),l=o(t.textures),h=o(t.images),u=o(t.shapes),d=o(t.skeletons),f=o(t.animations),p=o(t.nodes);a.length>0&&(n.geometries=a),c.length>0&&(n.materials=c),l.length>0&&(n.textures=l),h.length>0&&(n.images=h),u.length>0&&(n.shapes=u),d.length>0&&(n.skeletons=d),f.length>0&&(n.animations=f),p.length>0&&(n.nodes=p)}return n.object=i,n;function o(a){const c=[];for(const l in a){const h=a[l];delete h.metadata,c.push(h)}return c}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const i=t.children[n];this.add(i.clone())}return this}}On.DEFAULT_UP=new Z(0,1,0);On.DEFAULT_MATRIX_AUTO_UPDATE=!0;On.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const bs=new Z,Cr=new Z,r0=new Z,Rr=new Z,ol=new Z,al=new Z,Lw=new Z,o0=new Z,a0=new Z,c0=new Z,l0=new Ne,h0=new Ne,u0=new Ne;class Rs{constructor(t=new Z,e=new Z,n=new Z){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){i.subVectors(n,e),bs.subVectors(t,e),i.cross(bs);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(t,e,n,i,r){bs.subVectors(i,e),Cr.subVectors(n,e),r0.subVectors(t,e);const o=bs.dot(bs),a=bs.dot(Cr),c=bs.dot(r0),l=Cr.dot(Cr),h=Cr.dot(r0),u=o*l-a*a;if(u===0)return r.set(0,0,0),null;const d=1/u,f=(l*c-a*h)*d,p=(o*h-a*c)*d;return r.set(1-f-p,p,f)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,Rr)===null?!1:Rr.x>=0&&Rr.y>=0&&Rr.x+Rr.y<=1}static getInterpolation(t,e,n,i,r,o,a,c){return this.getBarycoord(t,e,n,i,Rr)===null?(c.x=0,c.y=0,"z"in c&&(c.z=0),"w"in c&&(c.w=0),null):(c.setScalar(0),c.addScaledVector(r,Rr.x),c.addScaledVector(o,Rr.y),c.addScaledVector(a,Rr.z),c)}static getInterpolatedAttribute(t,e,n,i,r,o){return l0.setScalar(0),h0.setScalar(0),u0.setScalar(0),l0.fromBufferAttribute(t,e),h0.fromBufferAttribute(t,n),u0.fromBufferAttribute(t,i),o.setScalar(0),o.addScaledVector(l0,r.x),o.addScaledVector(h0,r.y),o.addScaledVector(u0,r.z),o}static isFrontFacing(t,e,n,i){return bs.subVectors(n,e),Cr.subVectors(t,e),bs.cross(Cr).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,n,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,i),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return bs.subVectors(this.c,this.b),Cr.subVectors(this.a,this.b),bs.cross(Cr).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return Rs.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return Rs.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,n,i,r){return Rs.getInterpolation(t,this.a,this.b,this.c,e,n,i,r)}containsPoint(t){return Rs.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return Rs.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,i=this.b,r=this.c;let o,a;ol.subVectors(i,n),al.subVectors(r,n),o0.subVectors(t,n);const c=ol.dot(o0),l=al.dot(o0);if(c<=0&&l<=0)return e.copy(n);a0.subVectors(t,i);const h=ol.dot(a0),u=al.dot(a0);if(h>=0&&u<=h)return e.copy(i);const d=c*u-h*l;if(d<=0&&c>=0&&h<=0)return o=c/(c-h),e.copy(n).addScaledVector(ol,o);c0.subVectors(t,r);const f=ol.dot(c0),p=al.dot(c0);if(p>=0&&f<=p)return e.copy(r);const _=f*l-c*p;if(_<=0&&l>=0&&p<=0)return a=l/(l-p),e.copy(n).addScaledVector(al,a);const g=h*p-f*u;if(g<=0&&u-h>=0&&f-p>=0)return Lw.subVectors(r,i),a=(u-h)/(u-h+(f-p)),e.copy(i).addScaledVector(Lw,a);const m=1/(g+_+d);return o=_*m,a=d*m,e.copy(n).addScaledVector(ol,o).addScaledVector(al,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const sN={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ko={h:0,s:0,l:0},Zf={h:0,s:0,l:0};function d0(s,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?s+(t-s)*6*e:e<1/2?t:e<2/3?s+(t-s)*6*(2/3-e):s}class Pe{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,n)}set(t,e,n){if(e===void 0&&n===void 0){const i=t;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(t,e,n);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=Yt){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,_n.toWorkingColorSpace(this,e),this}setRGB(t,e,n,i=_n.workingColorSpace){return this.r=t,this.g=e,this.b=n,_n.toWorkingColorSpace(this,i),this}setHSL(t,e,n,i=_n.workingColorSpace){if(t=Ib(t,1),e=kn(e,0,1),n=kn(n,0,1),e===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+e):n+e-n*e,o=2*n-r;this.r=d0(o,r,t+1/3),this.g=d0(o,r,t),this.b=d0(o,r,t-1/3)}return _n.toWorkingColorSpace(this,i),this}setStyle(t,e=Yt){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(t)){let r;const o=i[1],a=i[2];switch(o){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,e);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,e);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const r=i[1],o=r.length;if(o===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,e);if(o===6)return this.setHex(parseInt(r,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=Yt){const n=sN[t.toLowerCase()];return n!==void 0?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=no(t.r),this.g=no(t.g),this.b=no(t.b),this}copyLinearToSRGB(t){return this.r=Hl(t.r),this.g=Hl(t.g),this.b=Hl(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=Yt){return _n.fromWorkingColorSpace(Kn.copy(this),t),Math.round(kn(Kn.r*255,0,255))*65536+Math.round(kn(Kn.g*255,0,255))*256+Math.round(kn(Kn.b*255,0,255))}getHexString(t=Yt){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=_n.workingColorSpace){_n.fromWorkingColorSpace(Kn.copy(this),e);const n=Kn.r,i=Kn.g,r=Kn.b,o=Math.max(n,i,r),a=Math.min(n,i,r);let c,l;const h=(a+o)/2;if(a===o)c=0,l=0;else{const u=o-a;switch(l=h<=.5?u/(o+a):u/(2-o-a),o){case n:c=(i-r)/u+(i<r?6:0);break;case i:c=(r-n)/u+2;break;case r:c=(n-i)/u+4;break}c/=6}return t.h=c,t.s=l,t.l=h,t}getRGB(t,e=_n.workingColorSpace){return _n.fromWorkingColorSpace(Kn.copy(this),e),t.r=Kn.r,t.g=Kn.g,t.b=Kn.b,t}getStyle(t=Yt){_n.fromWorkingColorSpace(Kn.copy(this),t);const e=Kn.r,n=Kn.g,i=Kn.b;return t!==Yt?`color(${t} ${e.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(e*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(t,e,n){return this.getHSL(ko),this.setHSL(ko.h+t,ko.s+e,ko.l+n)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(ko),t.getHSL(Zf);const n=Ou(ko.h,Zf.h,e),i=Ou(ko.s,Zf.s,e),r=Ou(ko.l,Zf.l,e);return this.setHSL(n,i,r),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,n=this.g,i=this.b,r=t.elements;return this.r=r[0]*e+r[3]*n+r[6]*i,this.g=r[1]*e+r[4]*n+r[7]*i,this.b=r[2]*e+r[5]*n+r[8]*i,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Kn=new Pe;Pe.NAMES=sN;let E6=0;class Ni extends Dh{static get type(){return"Material"}get type(){return this.constructor.type}set type(t){}constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:E6++}),this.uuid=eo(),this.name="",this.blending=ea,this.side=lh,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Nm,this.blendDst=Pm,this.blendEquation=Xo,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Pe(0,0,0),this.blendAlpha=0,this.depthFunc=Dm,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Vx,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=La,this.stencilZFail=La,this.stencilZPass=La,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const n=t[e];if(n===void 0){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const i=this[e];if(i===void 0){console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==ea&&(n.blending=this.blending),this.side!==lh&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==Nm&&(n.blendSrc=this.blendSrc),this.blendDst!==Pm&&(n.blendDst=this.blendDst),this.blendEquation!==Xo&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==Dm&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==Vx&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==La&&(n.stencilFail=this.stencilFail),this.stencilZFail!==La&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==La&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(r){const o=[];for(const a in r){const c=r[a];delete c.metadata,o.push(c)}return o}if(e){const r=i(t.textures),o=i(t.images);r.length>0&&(n.textures=r),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(e!==null){const i=e.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=e[r].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class yg extends Ni{static get type(){return"MeshBasicMaterial"}constructor(t){super(),this.isMeshBasicMaterial=!0,this.color=new Pe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Gs,this.combine=_g,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const Gr=C6();function C6(){const s=new ArrayBuffer(4),t=new Float32Array(s),e=new Uint32Array(s),n=new Uint32Array(512),i=new Uint32Array(512);for(let c=0;c<256;++c){const l=c-127;l<-27?(n[c]=0,n[c|256]=32768,i[c]=24,i[c|256]=24):l<-14?(n[c]=1024>>-l-14,n[c|256]=1024>>-l-14|32768,i[c]=-l-1,i[c|256]=-l-1):l<=15?(n[c]=l+15<<10,n[c|256]=l+15<<10|32768,i[c]=13,i[c|256]=13):l<128?(n[c]=31744,n[c|256]=64512,i[c]=24,i[c|256]=24):(n[c]=31744,n[c|256]=64512,i[c]=13,i[c|256]=13)}const r=new Uint32Array(2048),o=new Uint32Array(64),a=new Uint32Array(64);for(let c=1;c<1024;++c){let l=c<<13,h=0;for(;!(l&8388608);)l<<=1,h-=8388608;l&=-8388609,h+=947912704,r[c]=l|h}for(let c=1024;c<2048;++c)r[c]=939524096+(c-1024<<13);for(let c=1;c<31;++c)o[c]=c<<23;o[31]=1199570944,o[32]=2147483648;for(let c=33;c<63;++c)o[c]=2147483648+(c-32<<23);o[63]=3347054592;for(let c=1;c<64;++c)c!==32&&(a[c]=1024);return{floatView:t,uint32View:e,baseTable:n,shiftTable:i,mantissaTable:r,exponentTable:o,offsetTable:a}}function zi(s){Math.abs(s)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),s=kn(s,-65504,65504),Gr.floatView[0]=s;const t=Gr.uint32View[0],e=t>>23&511;return Gr.baseTable[e]+((t&8388607)>>Gr.shiftTable[e])}function Kf(s){const t=s>>10;return Gr.uint32View[0]=Gr.mantissaTable[Gr.offsetTable[t]+(s&1023)]+Gr.exponentTable[t],Gr.floatView[0]}const mn=new Z,Qf=new xe;class as{constructor(t,e,n=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n,this.usage=Om,this.updateRanges=[],this.gpuType=ji,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)Qf.fromBufferAttribute(this,e),Qf.applyMatrix3(t),this.setXY(e,Qf.x,Qf.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)mn.fromBufferAttribute(this,e),mn.applyMatrix3(t),this.setXYZ(e,mn.x,mn.y,mn.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)mn.fromBufferAttribute(this,e),mn.applyMatrix4(t),this.setXYZ(e,mn.x,mn.y,mn.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)mn.fromBufferAttribute(this,e),mn.applyNormalMatrix(t),this.setXYZ(e,mn.x,mn.y,mn.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)mn.fromBufferAttribute(this,e),mn.transformDirection(t),this.setXYZ(e,mn.x,mn.y,mn.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let n=this.array[t*this.itemSize+e];return this.normalized&&(n=ui(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=ie(n,this.array)),this.array[t*this.itemSize+e]=n,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=ui(e,this.array)),e}setX(t,e){return this.normalized&&(e=ie(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=ui(e,this.array)),e}setY(t,e){return this.normalized&&(e=ie(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=ui(e,this.array)),e}setZ(t,e){return this.normalized&&(e=ie(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=ui(e,this.array)),e}setW(t,e){return this.normalized&&(e=ie(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=ie(e,this.array),n=ie(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=ie(e,this.array),n=ie(n,this.array),i=ie(i,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this}setXYZW(t,e,n,i,r){return t*=this.itemSize,this.normalized&&(e=ie(e,this.array),n=ie(n,this.array),i=ie(i,this.array),r=ie(r,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=r,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==Om&&(t.usage=this.usage),t}}class rN extends as{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class oN extends as{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class aN extends as{constructor(t,e,n){super(new Uint16Array(t),e,n),this.isFloat16BufferAttribute=!0}getX(t){let e=Kf(this.array[t*this.itemSize]);return this.normalized&&(e=ui(e,this.array)),e}setX(t,e){return this.normalized&&(e=ie(e,this.array)),this.array[t*this.itemSize]=zi(e),this}getY(t){let e=Kf(this.array[t*this.itemSize+1]);return this.normalized&&(e=ui(e,this.array)),e}setY(t,e){return this.normalized&&(e=ie(e,this.array)),this.array[t*this.itemSize+1]=zi(e),this}getZ(t){let e=Kf(this.array[t*this.itemSize+2]);return this.normalized&&(e=ui(e,this.array)),e}setZ(t,e){return this.normalized&&(e=ie(e,this.array)),this.array[t*this.itemSize+2]=zi(e),this}getW(t){let e=Kf(this.array[t*this.itemSize+3]);return this.normalized&&(e=ui(e,this.array)),e}setW(t,e){return this.normalized&&(e=ie(e,this.array)),this.array[t*this.itemSize+3]=zi(e),this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=ie(e,this.array),n=ie(n,this.array)),this.array[t+0]=zi(e),this.array[t+1]=zi(n),this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=ie(e,this.array),n=ie(n,this.array),i=ie(i,this.array)),this.array[t+0]=zi(e),this.array[t+1]=zi(n),this.array[t+2]=zi(i),this}setXYZW(t,e,n,i,r){return t*=this.itemSize,this.normalized&&(e=ie(e,this.array),n=ie(n,this.array),i=ie(i,this.array),r=ie(r,this.array)),this.array[t+0]=zi(e),this.array[t+1]=zi(n),this.array[t+2]=zi(i),this.array[t+3]=zi(r),this}}class io extends as{constructor(t,e,n){super(new Float32Array(t),e,n)}}let R6=0;const ts=new Je,f0=new On,cl=new Z,Vi=new Bd,ou=new Bd,Dn=new Z;class Mc extends Dh{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:R6++}),this.uuid=eo(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(h6(t)?oN:rN)(t,1):this.index=t,this}setIndirect(t){return this.indirect=t,this}getIndirect(){return this.indirect}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new Ii().getNormalMatrix(t);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(t),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return ts.makeRotationFromQuaternion(t),this.applyMatrix4(ts),this}rotateX(t){return ts.makeRotationX(t),this.applyMatrix4(ts),this}rotateY(t){return ts.makeRotationY(t),this.applyMatrix4(ts),this}rotateZ(t){return ts.makeRotationZ(t),this.applyMatrix4(ts),this}translate(t,e,n){return ts.makeTranslation(t,e,n),this.applyMatrix4(ts),this}scale(t,e,n){return ts.makeScale(t,e,n),this.applyMatrix4(ts),this}lookAt(t){return f0.lookAt(t),f0.updateMatrix(),this.applyMatrix4(f0.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(cl).negate(),this.translate(cl.x,cl.y,cl.z),this}setFromPoints(t){const e=this.getAttribute("position");if(e===void 0){const n=[];for(let i=0,r=t.length;i<r;i++){const o=t[i];n.push(o.x,o.y,o.z||0)}this.setAttribute("position",new io(n,3))}else{for(let n=0,i=e.count;n<i;n++){const r=t[n];e.setXYZ(n,r.x,r.y,r.z||0)}t.length>e.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),e.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Bd);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new Z(-1/0,-1/0,-1/0),new Z(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,i=e.length;n<i;n++){const r=e[n];Vi.setFromBufferAttribute(r),this.morphTargetsRelative?(Dn.addVectors(this.boundingBox.min,Vi.min),this.boundingBox.expandByPoint(Dn),Dn.addVectors(this.boundingBox.max,Vi.max),this.boundingBox.expandByPoint(Dn)):(this.boundingBox.expandByPoint(Vi.min),this.boundingBox.expandByPoint(Vi.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Fb);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new Z,1/0);return}if(t){const n=this.boundingSphere.center;if(Vi.setFromBufferAttribute(t),e)for(let r=0,o=e.length;r<o;r++){const a=e[r];ou.setFromBufferAttribute(a),this.morphTargetsRelative?(Dn.addVectors(Vi.min,ou.min),Vi.expandByPoint(Dn),Dn.addVectors(Vi.max,ou.max),Vi.expandByPoint(Dn)):(Vi.expandByPoint(ou.min),Vi.expandByPoint(ou.max))}Vi.getCenter(n);let i=0;for(let r=0,o=t.count;r<o;r++)Dn.fromBufferAttribute(t,r),i=Math.max(i,n.distanceToSquared(Dn));if(e)for(let r=0,o=e.length;r<o;r++){const a=e[r],c=this.morphTargetsRelative;for(let l=0,h=a.count;l<h;l++)Dn.fromBufferAttribute(a,l),c&&(cl.fromBufferAttribute(t,l),Dn.add(cl)),i=Math.max(i,n.distanceToSquared(Dn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.position,i=e.normal,r=e.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new as(new Float32Array(4*n.count),4));const o=this.getAttribute("tangent"),a=[],c=[];for(let T=0;T<n.count;T++)a[T]=new Z,c[T]=new Z;const l=new Z,h=new Z,u=new Z,d=new xe,f=new xe,p=new xe,_=new Z,g=new Z;function m(T,A,w){l.fromBufferAttribute(n,T),h.fromBufferAttribute(n,A),u.fromBufferAttribute(n,w),d.fromBufferAttribute(r,T),f.fromBufferAttribute(r,A),p.fromBufferAttribute(r,w),h.sub(l),u.sub(l),f.sub(d),p.sub(d);const E=1/(f.x*p.y-p.x*f.y);isFinite(E)&&(_.copy(h).multiplyScalar(p.y).addScaledVector(u,-f.y).multiplyScalar(E),g.copy(u).multiplyScalar(f.x).addScaledVector(h,-p.x).multiplyScalar(E),a[T].add(_),a[A].add(_),a[w].add(_),c[T].add(g),c[A].add(g),c[w].add(g))}let x=this.groups;x.length===0&&(x=[{start:0,count:t.count}]);for(let T=0,A=x.length;T<A;++T){const w=x[T],E=w.start,N=w.count;for(let I=E,P=E+N;I<P;I+=3)m(t.getX(I+0),t.getX(I+1),t.getX(I+2))}const v=new Z,y=new Z,b=new Z,S=new Z;function M(T){b.fromBufferAttribute(i,T),S.copy(b);const A=a[T];v.copy(A),v.sub(b.multiplyScalar(b.dot(A))).normalize(),y.crossVectors(S,A);const E=y.dot(c[T])<0?-1:1;o.setXYZW(T,v.x,v.y,v.z,E)}for(let T=0,A=x.length;T<A;++T){const w=x[T],E=w.start,N=w.count;for(let I=E,P=E+N;I<P;I+=3)M(t.getX(I+0)),M(t.getX(I+1)),M(t.getX(I+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new as(new Float32Array(e.count*3),3),this.setAttribute("normal",n);else for(let d=0,f=n.count;d<f;d++)n.setXYZ(d,0,0,0);const i=new Z,r=new Z,o=new Z,a=new Z,c=new Z,l=new Z,h=new Z,u=new Z;if(t)for(let d=0,f=t.count;d<f;d+=3){const p=t.getX(d+0),_=t.getX(d+1),g=t.getX(d+2);i.fromBufferAttribute(e,p),r.fromBufferAttribute(e,_),o.fromBufferAttribute(e,g),h.subVectors(o,r),u.subVectors(i,r),h.cross(u),a.fromBufferAttribute(n,p),c.fromBufferAttribute(n,_),l.fromBufferAttribute(n,g),a.add(h),c.add(h),l.add(h),n.setXYZ(p,a.x,a.y,a.z),n.setXYZ(_,c.x,c.y,c.z),n.setXYZ(g,l.x,l.y,l.z)}else for(let d=0,f=e.count;d<f;d+=3)i.fromBufferAttribute(e,d+0),r.fromBufferAttribute(e,d+1),o.fromBufferAttribute(e,d+2),h.subVectors(o,r),u.subVectors(i,r),h.cross(u),n.setXYZ(d+0,h.x,h.y,h.z),n.setXYZ(d+1,h.x,h.y,h.z),n.setXYZ(d+2,h.x,h.y,h.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)Dn.fromBufferAttribute(t,e),Dn.normalize(),t.setXYZ(e,Dn.x,Dn.y,Dn.z)}toNonIndexed(){function t(a,c){const l=a.array,h=a.itemSize,u=a.normalized,d=new l.constructor(c.length*h);let f=0,p=0;for(let _=0,g=c.length;_<g;_++){a.isInterleavedBufferAttribute?f=c[_]*a.data.stride+a.offset:f=c[_]*h;for(let m=0;m<h;m++)d[p++]=l[f++]}return new as(d,h,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new Mc,n=this.index.array,i=this.attributes;for(const a in i){const c=i[a],l=t(c,n);e.setAttribute(a,l)}const r=this.morphAttributes;for(const a in r){const c=[],l=r[a];for(let h=0,u=l.length;h<u;h++){const d=l[h],f=t(d,n);c.push(f)}e.morphAttributes[a]=c}e.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,c=o.length;a<c;a++){const l=o[a];e.addGroup(l.start,l.count,l.materialIndex)}return e}toJSON(){const t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const c=this.parameters;for(const l in c)c[l]!==void 0&&(t[l]=c[l]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const c in n){const l=n[c];t.data.attributes[c]=l.toJSON(t.data)}const i={};let r=!1;for(const c in this.morphAttributes){const l=this.morphAttributes[c],h=[];for(let u=0,d=l.length;u<d;u++){const f=l[u];h.push(f.toJSON(t.data))}h.length>0&&(i[c]=h,r=!0)}r&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(t.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;n!==null&&this.setIndex(n.clone(e));const i=t.attributes;for(const l in i){const h=i[l];this.setAttribute(l,h.clone(e))}const r=t.morphAttributes;for(const l in r){const h=[],u=r[l];for(let d=0,f=u.length;d<f;d++)h.push(u[d].clone(e));this.morphAttributes[l]=h}this.morphTargetsRelative=t.morphTargetsRelative;const o=t.groups;for(let l=0,h=o.length;l<h;l++){const u=o[l];this.addGroup(u.start,u.count,u.materialIndex)}const a=t.boundingBox;a!==null&&(this.boundingBox=a.clone());const c=t.boundingSphere;return c!==null&&(this.boundingSphere=c.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Bw=new Je,Da=new x6,Jf=new Fb,Uw=new Z,tp=new Z,ep=new Z,np=new Z,p0=new Z,ip=new Z,kw=new Z,sp=new Z;class mc extends On{constructor(t=new Mc,e=new yg){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}getVertexPosition(t,e){const n=this.geometry,i=n.attributes.position,r=n.morphAttributes.position,o=n.morphTargetsRelative;e.fromBufferAttribute(i,t);const a=this.morphTargetInfluences;if(r&&a){ip.set(0,0,0);for(let c=0,l=r.length;c<l;c++){const h=a[c],u=r[c];h!==0&&(p0.fromBufferAttribute(u,t),o?ip.addScaledVector(p0,h):ip.addScaledVector(p0.sub(e),h))}e.add(ip)}return e}raycast(t,e){const n=this.geometry,i=this.material,r=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),Jf.copy(n.boundingSphere),Jf.applyMatrix4(r),Da.copy(t.ray).recast(t.near),!(Jf.containsPoint(Da.origin)===!1&&(Da.intersectSphere(Jf,Uw)===null||Da.origin.distanceToSquared(Uw)>(t.far-t.near)**2))&&(Bw.copy(r).invert(),Da.copy(t.ray).applyMatrix4(Bw),!(n.boundingBox!==null&&Da.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(t,e,Da)))}_computeIntersections(t,e,n){let i;const r=this.geometry,o=this.material,a=r.index,c=r.attributes.position,l=r.attributes.uv,h=r.attributes.uv1,u=r.attributes.normal,d=r.groups,f=r.drawRange;if(a!==null)if(Array.isArray(o))for(let p=0,_=d.length;p<_;p++){const g=d[p],m=o[g.materialIndex],x=Math.max(g.start,f.start),v=Math.min(a.count,Math.min(g.start+g.count,f.start+f.count));for(let y=x,b=v;y<b;y+=3){const S=a.getX(y),M=a.getX(y+1),T=a.getX(y+2);i=rp(this,m,t,n,l,h,u,S,M,T),i&&(i.faceIndex=Math.floor(y/3),i.face.materialIndex=g.materialIndex,e.push(i))}}else{const p=Math.max(0,f.start),_=Math.min(a.count,f.start+f.count);for(let g=p,m=_;g<m;g+=3){const x=a.getX(g),v=a.getX(g+1),y=a.getX(g+2);i=rp(this,o,t,n,l,h,u,x,v,y),i&&(i.faceIndex=Math.floor(g/3),e.push(i))}}else if(c!==void 0)if(Array.isArray(o))for(let p=0,_=d.length;p<_;p++){const g=d[p],m=o[g.materialIndex],x=Math.max(g.start,f.start),v=Math.min(c.count,Math.min(g.start+g.count,f.start+f.count));for(let y=x,b=v;y<b;y+=3){const S=y,M=y+1,T=y+2;i=rp(this,m,t,n,l,h,u,S,M,T),i&&(i.faceIndex=Math.floor(y/3),i.face.materialIndex=g.materialIndex,e.push(i))}}else{const p=Math.max(0,f.start),_=Math.min(c.count,f.start+f.count);for(let g=p,m=_;g<m;g+=3){const x=g,v=g+1,y=g+2;i=rp(this,o,t,n,l,h,u,x,v,y),i&&(i.faceIndex=Math.floor(g/3),e.push(i))}}}}function N6(s,t,e,n,i,r,o,a){let c;if(t.side===Vs?c=n.intersectTriangle(o,r,i,!0,a):c=n.intersectTriangle(i,r,o,t.side===lh,a),c===null)return null;sp.copy(a),sp.applyMatrix4(s.matrixWorld);const l=e.ray.origin.distanceTo(sp);return l<e.near||l>e.far?null:{distance:l,point:sp.clone(),object:s}}function rp(s,t,e,n,i,r,o,a,c,l){s.getVertexPosition(a,tp),s.getVertexPosition(c,ep),s.getVertexPosition(l,np);const h=N6(s,t,e,n,tp,ep,np,kw);if(h){const u=new Z;Rs.getBarycoord(kw,tp,ep,np,u),i&&(h.uv=Rs.getInterpolatedAttribute(i,a,c,l,u,new xe)),r&&(h.uv1=Rs.getInterpolatedAttribute(r,a,c,l,u,new xe)),o&&(h.normal=Rs.getInterpolatedAttribute(o,a,c,l,u,new Z),h.normal.dot(n.direction)>0&&h.normal.multiplyScalar(-1));const d={a,b:c,c:l,normal:new Z,materialIndex:0};Rs.getNormal(tp,ep,np,d.normal),h.face=d,h.barycoord=u}return h}class Ud extends Mc{constructor(t=1,e=1,n=1,i=1,r=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:r,depthSegments:o};const a=this;i=Math.floor(i),r=Math.floor(r),o=Math.floor(o);const c=[],l=[],h=[],u=[];let d=0,f=0;p("z","y","x",-1,-1,n,e,t,o,r,0),p("z","y","x",1,-1,n,e,-t,o,r,1),p("x","z","y",1,1,t,n,e,i,o,2),p("x","z","y",1,-1,t,n,-e,i,o,3),p("x","y","z",1,-1,t,e,n,i,r,4),p("x","y","z",-1,-1,t,e,-n,i,r,5),this.setIndex(c),this.setAttribute("position",new io(l,3)),this.setAttribute("normal",new io(h,3)),this.setAttribute("uv",new io(u,2));function p(_,g,m,x,v,y,b,S,M,T,A){const w=y/M,E=b/T,N=y/2,I=b/2,P=S/2,D=M+1,O=T+1;let k=0,z=0;const Y=new Z;for(let U=0;U<O;U++){const W=U*E-I;for(let lt=0;lt<D;lt++){const wt=lt*w-N;Y[_]=wt*x,Y[g]=W*v,Y[m]=P,l.push(Y.x,Y.y,Y.z),Y[_]=0,Y[g]=0,Y[m]=S>0?1:-1,h.push(Y.x,Y.y,Y.z),u.push(lt/M),u.push(1-U/T),k+=1}}for(let U=0;U<T;U++)for(let W=0;W<M;W++){const lt=d+W+D*U,wt=d+W+D*(U+1),H=d+(W+1)+D*(U+1),B=d+(W+1)+D*U;c.push(lt,wt,B),c.push(wt,H,B),z+=6}a.addGroup(f,z,A),f+=z,d+=k}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Ud(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function cN(s){const t={};for(const e in s){t[e]={};for(const n in s[e]){const i=s[e][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[e][n]=null):t[e][n]=i.clone():Array.isArray(i)?t[e][n]=i.slice():t[e][n]=i}}return t}function P6(s){const t=[];for(let e=0;e<s.length;e++)t.push(s[e].clone());return t}var D6=`
void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}
`,I6=`
void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}
`;class F6 extends Ni{static get type(){return"ShaderMaterial"}constructor(t){super(),this.isShaderMaterial=!0,this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=D6,this.fragmentShader=I6,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=cN(t.uniforms),this.uniformsGroups=P6(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?e.uniforms[i]={type:"t",value:o.toJSON(t).uuid}:o&&o.isColor?e.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?e.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?e.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?e.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?e.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?e.uniforms[i]={type:"m4",value:o.toArray()}:e.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}class lN extends On{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Je,this.projectionMatrix=new Je,this.projectionMatrixInverse=new Je,this.coordinateSystem=Os}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){return super.getWorldDirection(t).negate()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const zo=new Z,zw=new xe,Vw=new xe;class Br extends lN{constructor(t=50,e=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=rd*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(Fu*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return rd*2*Math.atan(Math.tan(Fu*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(t,e,n){zo.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),e.set(zo.x,zo.y).multiplyScalar(-t/zo.z),zo.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(zo.x,zo.y).multiplyScalar(-t/zo.z)}getViewSize(t,e){return this.getViewBounds(t,zw,Vw),e.subVectors(Vw,zw)}setViewOffset(t,e,n,i,r,o){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(Fu*.5*this.fov)/this.zoom,n=2*e,i=this.aspect*n,r=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const c=o.fullWidth,l=o.fullHeight;r+=o.offsetX*i/c,e-=o.offsetY*n/l,i*=o.width/c,n*=o.height/l}const a=this.filmOffset;a!==0&&(r+=t*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,e,e-n,t,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const ll=-90,hl=1;class hN extends On{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new Br(ll,hl,t,e);i.layers=this.layers,this.add(i);const r=new Br(ll,hl,t,e);r.layers=this.layers,this.add(r);const o=new Br(ll,hl,t,e);o.layers=this.layers,this.add(o);const a=new Br(ll,hl,t,e);a.layers=this.layers,this.add(a);const c=new Br(ll,hl,t,e);c.layers=this.layers,this.add(c);const l=new Br(ll,hl,t,e);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){const t=this.coordinateSystem,e=this.children.concat(),[n,i,r,o,a,c]=e;for(const l of e)this.remove(l);if(t===Os)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),c.up.set(0,1,0),c.lookAt(0,0,-1);else if(t===pc)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),c.up.set(0,-1,0),c.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+t);for(const l of e)this.add(l),l.updateMatrixWorld()}update(t,e){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==t.coordinateSystem&&(this.coordinateSystem=t.coordinateSystem,this.updateCoordinateSystem());const[r,o,a,c,l,h]=this.children,u=t.getRenderTarget(),d=t.getActiveCubeFace(),f=t.getActiveMipmapLevel(),p=t.xr.enabled;t.xr.enabled=!1;const _=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0,i),t.render(e,r),t.setRenderTarget(n,1,i),t.render(e,o),t.setRenderTarget(n,2,i),t.render(e,a),t.setRenderTarget(n,3,i),t.render(e,c),t.setRenderTarget(n,4,i),t.render(e,l),n.texture.generateMipmaps=_,t.setRenderTarget(n,5,i),t.render(e,h),t.setRenderTarget(u,d,f),t.xr.enabled=p,n.texture.needsPMREMUpdate=!0}}class Ob extends pi{constructor(t,e,n,i,r,o,a,c,l,h){t=t!==void 0?t:[],e=e!==void 0?e:dc,super(t,e,n,i,r,o,a,c,l,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class O6 extends g6{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},i=[n,n,n,n,n,n];this.texture=new Ob(i,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=e.generateMipmaps!==void 0?e.generateMipmaps:!1,this.texture.minFilter=e.minFilter!==void 0?e.minFilter:Yi}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.colorSpace=e.colorSpace,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Ud(5,5,5),r=new F6({name:"CubemapFromEquirect",uniforms:cN(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Vs,blending:hh});r.uniforms.tEquirect.value=e;const o=new mc(i,r),a=e.minFilter;return e.minFilter===Jr&&(e.minFilter=Yi),new hN(1,10,this).update(t,o),e.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(t,e,n,i){const r=t.getRenderTarget();for(let o=0;o<6;o++)t.setRenderTarget(this,o),t.clear(e,n,i);t.setRenderTarget(r)}}class uN extends On{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Gs,this.environmentIntensity=1,this.environmentRotation=new Gs,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,this.backgroundRotation.copy(t.backgroundRotation),this.environmentIntensity=t.environmentIntensity,this.environmentRotation.copy(t.environmentRotation),t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return this.fog!==null&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(e.object.backgroundIntensity=this.backgroundIntensity),e.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(e.object.environmentIntensity=this.environmentIntensity),e.object.environmentRotation=this.environmentRotation.toArray(),e}}class dN{constructor(t,e){this.isInterleavedBuffer=!0,this.array=t,this.stride=e,this.count=t!==void 0?t.length/e:0,this.usage=Om,this.updateRanges=[],this.version=0,this.uuid=eo()}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,r=this.stride;i<r;i++)this.array[t+i]=e.array[n+i];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=eo()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(e,this.stride);return n.setUsage(this.usage),n}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=eo()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const ri=new Z;class Lb{constructor(t,e,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,n=this.data.count;e<n;e++)ri.fromBufferAttribute(this,e),ri.applyMatrix4(t),this.setXYZ(e,ri.x,ri.y,ri.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)ri.fromBufferAttribute(this,e),ri.applyNormalMatrix(t),this.setXYZ(e,ri.x,ri.y,ri.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)ri.fromBufferAttribute(this,e),ri.transformDirection(t),this.setXYZ(e,ri.x,ri.y,ri.z);return this}getComponent(t,e){let n=this.array[t*this.data.stride+this.offset+e];return this.normalized&&(n=ui(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=ie(n,this.array)),this.data.array[t*this.data.stride+this.offset+e]=n,this}setX(t,e){return this.normalized&&(e=ie(e,this.array)),this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.normalized&&(e=ie(e,this.array)),this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.normalized&&(e=ie(e,this.array)),this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.normalized&&(e=ie(e,this.array)),this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){let e=this.data.array[t*this.data.stride+this.offset];return this.normalized&&(e=ui(e,this.array)),e}getY(t){let e=this.data.array[t*this.data.stride+this.offset+1];return this.normalized&&(e=ui(e,this.array)),e}getZ(t){let e=this.data.array[t*this.data.stride+this.offset+2];return this.normalized&&(e=ui(e,this.array)),e}getW(t){let e=this.data.array[t*this.data.stride+this.offset+3];return this.normalized&&(e=ui(e,this.array)),e}setXY(t,e,n){return t=t*this.data.stride+this.offset,this.normalized&&(e=ie(e,this.array),n=ie(n,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this}setXYZ(t,e,n,i){return t=t*this.data.stride+this.offset,this.normalized&&(e=ie(e,this.array),n=ie(n,this.array),i=ie(i,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this}setXYZW(t,e,n,i,r){return t=t*this.data.stride+this.offset,this.normalized&&(e=ie(e,this.array),n=ie(n,this.array),i=ie(i,this.array),r=ie(r,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=r,this}clone(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)e.push(this.data.array[i+r])}return new as(new this.array.constructor(e),this.itemSize,this.normalized)}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new Lb(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)e.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class fN extends Ni{static get type(){return"SpriteMaterial"}constructor(t){super(),this.isSpriteMaterial=!0,this.color=new Pe(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}class L6 extends pi{constructor(t=null,e=1,n=1,i,r,o,a,c,l=ti,h=ti,u,d){super(null,o,a,c,l,h,i,r,u,d),this.isDataTexture=!0,this.image={data:t,width:e,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class B6 extends as{constructor(t,e,n,i=1){super(t,e,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}const m0=new Z,U6=new Z,k6=new Ii;class Wo{constructor(t=new Z(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=m0.subVectors(n,e).cross(U6.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,e){const n=t.delta(m0),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):null;const r=-(t.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:e.copy(t.start).addScaledVector(n,r)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||k6.getNormalMatrix(t),i=this.coplanarPoint(m0).applyMatrix4(t),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Ia=new Fb,op=new Z;class pN{constructor(t=new Wo,e=new Wo,n=new Wo,i=new Wo,r=new Wo,o=new Wo){this.planes=[t,e,n,i,r,o]}set(t,e,n,i,r,o){const a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(n),a[3].copy(i),a[4].copy(r),a[5].copy(o),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t,e=Os){const n=this.planes,i=t.elements,r=i[0],o=i[1],a=i[2],c=i[3],l=i[4],h=i[5],u=i[6],d=i[7],f=i[8],p=i[9],_=i[10],g=i[11],m=i[12],x=i[13],v=i[14],y=i[15];if(n[0].setComponents(c-r,d-l,g-f,y-m).normalize(),n[1].setComponents(c+r,d+l,g+f,y+m).normalize(),n[2].setComponents(c+o,d+h,g+p,y+x).normalize(),n[3].setComponents(c-o,d-h,g-p,y-x).normalize(),n[4].setComponents(c-a,d-u,g-_,y-v).normalize(),e===Os)n[5].setComponents(c+a,d+u,g+_,y+v).normalize();else if(e===pc)n[5].setComponents(a,u,_,v).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+e);return this}intersectsObject(t){if(t.boundingSphere!==void 0)t.boundingSphere===null&&t.computeBoundingSphere(),Ia.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const e=t.geometry;e.boundingSphere===null&&e.computeBoundingSphere(),Ia.copy(e.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(Ia)}intersectsSprite(t){return Ia.center.set(0,0,0),Ia.radius=.7071067811865476,Ia.applyMatrix4(t.matrixWorld),this.intersectsSphere(Ia)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let r=0;r<6;r++)if(e[r].distanceToPoint(n)<i)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(op.x=i.normal.x>0?t.max.x:t.min.x,op.y=i.normal.y>0?t.max.y:t.min.y,op.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(op)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}class Bb extends Ni{static get type(){return"LineBasicMaterial"}constructor(t){super(),this.isLineBasicMaterial=!0,this.color=new Pe(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}class mN extends Ni{static get type(){return"PointsMaterial"}constructor(t){super(),this.isPointsMaterial=!0,this.color=new Pe(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}class z6 extends pi{constructor(t,e){super({width:t,height:e}),this.isFramebufferTexture=!0,this.magFilter=ti,this.minFilter=ti,this.generateMipmaps=!1,this.needsUpdate=!0}}class Fh extends pi{constructor(t,e,n,i,r,o,a,c,l,h=Ja){if(h!==Ja&&h!==dh)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&h===Ja&&(n=Un),n===void 0&&h===dh&&(n=Od),super(null,i,r,o,a,c,h,n,l),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=a!==void 0?a:ti,this.minFilter=c!==void 0?c:ti,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return this.compareFunction!==null&&(e.compareFunction=this.compareFunction),e}}class Ub extends Mc{constructor(t=1,e=32,n=16,i=0,r=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:r,thetaStart:o,thetaLength:a},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const c=Math.min(o+a,Math.PI);let l=0;const h=[],u=new Z,d=new Z,f=[],p=[],_=[],g=[];for(let m=0;m<=n;m++){const x=[],v=m/n;let y=0;m===0&&o===0?y=.5/e:m===n&&c===Math.PI&&(y=-.5/e);for(let b=0;b<=e;b++){const S=b/e;u.x=-t*Math.cos(i+S*r)*Math.sin(o+v*a),u.y=t*Math.cos(o+v*a),u.z=t*Math.sin(i+S*r)*Math.sin(o+v*a),p.push(u.x,u.y,u.z),d.copy(u).normalize(),_.push(d.x,d.y,d.z),g.push(S+y,1-v),x.push(l++)}h.push(x)}for(let m=0;m<n;m++)for(let x=0;x<e;x++){const v=h[m][x+1],y=h[m][x],b=h[m+1][x],S=h[m+1][x+1];(m!==0||o>0)&&f.push(v,y,S),(m!==n-1||c<Math.PI)&&f.push(y,b,S)}this.setIndex(f),this.setAttribute("position",new io(p,3)),this.setAttribute("normal",new io(_,3)),this.setAttribute("uv",new io(g,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Ub(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class gN extends Ni{static get type(){return"ShadowMaterial"}constructor(t){super(),this.isShadowMaterial=!0,this.color=new Pe(0),this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.fog=t.fog,this}}class kb extends Ni{static get type(){return"MeshStandardMaterial"}constructor(t){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.color=new Pe(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Pe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=la,this.normalScale=new xe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Gs,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class _N extends kb{static get type(){return"MeshPhysicalMaterial"}constructor(t){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new xe(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return kn(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Pe(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Pe(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Pe(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(t)}get anisotropy(){return this._anisotropy}set anisotropy(t){this._anisotropy>0!=t>0&&this.version++,this._anisotropy=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!=t>0&&this.version++,this._clearcoat=t}get iridescence(){return this._iridescence}set iridescence(t){this._iridescence>0!=t>0&&this.version++,this._iridescence=t}get dispersion(){return this._dispersion}set dispersion(t){this._dispersion>0!=t>0&&this.version++,this._dispersion=t}get sheen(){return this._sheen}set sheen(t){this._sheen>0!=t>0&&this.version++,this._sheen=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!=t>0&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=t.anisotropy,this.anisotropyRotation=t.anisotropyRotation,this.anisotropyMap=t.anisotropyMap,this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.dispersion=t.dispersion,this.ior=t.ior,this.iridescence=t.iridescence,this.iridescenceMap=t.iridescenceMap,this.iridescenceIOR=t.iridescenceIOR,this.iridescenceThicknessRange=[...t.iridescenceThicknessRange],this.iridescenceThicknessMap=t.iridescenceThicknessMap,this.sheen=t.sheen,this.sheenColor.copy(t.sheenColor),this.sheenColorMap=t.sheenColorMap,this.sheenRoughness=t.sheenRoughness,this.sheenRoughnessMap=t.sheenRoughnessMap,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularColor.copy(t.specularColor),this.specularColorMap=t.specularColorMap,this}}class yN extends Ni{static get type(){return"MeshPhongMaterial"}constructor(t){super(),this.isMeshPhongMaterial=!0,this.color=new Pe(16777215),this.specular=new Pe(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Pe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=la,this.normalScale=new xe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Gs,this.combine=_g,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class xN extends Ni{static get type(){return"MeshToonMaterial"}constructor(t){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.color=new Pe(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Pe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=la,this.normalScale=new xe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}class vN extends Ni{static get type(){return"MeshNormalMaterial"}constructor(t){super(),this.isMeshNormalMaterial=!0,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=la,this.normalScale=new xe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}class bN extends Ni{static get type(){return"MeshLambertMaterial"}constructor(t){super(),this.isMeshLambertMaterial=!0,this.color=new Pe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Pe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=la,this.normalScale=new xe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Gs,this.combine=_g,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class SN extends Ni{static get type(){return"MeshMatcapMaterial"}constructor(t){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.color=new Pe(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=la,this.normalScale=new xe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this.fog=t.fog,this}}class MN extends Bb{static get type(){return"LineDashedMaterial"}constructor(t){super(),this.isLineDashedMaterial=!0,this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}class Tc extends On{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new Pe(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(e.object.target=this.target.uuid),e}}class V6 extends Tc{constructor(t,e,n){super(t,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(On.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Pe(e)}copy(t,e){return super.copy(t,e),this.groundColor.copy(t.groundColor),this}}const g0=new Je,Gw=new Z,Hw=new Z;class zb{constructor(t){this.camera=t,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new xe(512,512),this.map=null,this.mapPass=null,this.matrix=new Je,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new pN,this._frameExtents=new xe(1,1),this._viewportCount=1,this._viewports=[new Ne(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;Gw.setFromMatrixPosition(t.matrixWorld),e.position.copy(Gw),Hw.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(Hw),e.updateMatrixWorld(),g0.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(g0),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(g0)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.intensity=t.intensity,this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const t={};return this.intensity!==1&&(t.intensity=this.intensity),this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class G6 extends zb{constructor(){super(new Br(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(t){const e=this.camera,n=rd*2*t.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=t.distance||e.far;(n!==e.fov||i!==e.aspect||r!==e.far)&&(e.fov=n,e.aspect=i,e.far=r,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}class TN extends Tc{constructor(t,e,n=0,i=Math.PI/3,r=0,o=2){super(t,e),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(On.DEFAULT_UP),this.updateMatrix(),this.target=new On,this.distance=n,this.angle=i,this.penumbra=r,this.decay=o,this.map=null,this.shadow=new G6}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}const $w=new Je,au=new Z,_0=new Z;class H6 extends zb{constructor(){super(new Br(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new xe(4,2),this._viewportCount=6,this._viewports=[new Ne(2,1,1,1),new Ne(0,1,1,1),new Ne(3,1,1,1),new Ne(1,1,1,1),new Ne(3,0,1,1),new Ne(1,0,1,1)],this._cubeDirections=[new Z(1,0,0),new Z(-1,0,0),new Z(0,0,1),new Z(0,0,-1),new Z(0,1,0),new Z(0,-1,0)],this._cubeUps=[new Z(0,1,0),new Z(0,1,0),new Z(0,1,0),new Z(0,1,0),new Z(0,0,1),new Z(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,i=this.matrix,r=t.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),au.setFromMatrixPosition(t.matrixWorld),n.position.copy(au),_0.copy(n.position),_0.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(_0),n.updateMatrixWorld(),i.makeTranslation(-au.x,-au.y,-au.z),$w.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix($w)}}class $6 extends Tc{constructor(t,e,n=0,i=2){super(t,e),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new H6}get power(){return this.intensity*4*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}class Vb extends lN{constructor(t=-1,e=1,n=1,i=-1,r=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=r,this.far=o,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,r,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-t,o=n+t,a=i+e,c=i-e;if(this.view!==null&&this.view.enabled){const l=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=l*this.view.offsetX,o=r+l*this.view.width,a-=h*this.view.offsetY,c=a-h*this.view.height}this.projectionMatrix.makeOrthographic(r,o,a,c,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}}class W6 extends zb{constructor(){super(new Vb(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class q6 extends Tc{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(On.DEFAULT_UP),this.updateMatrix(),this.target=new On,this.shadow=new W6}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class j6 extends Tc{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}class X6 extends Tc{constructor(t,e,n=10,i=10){super(t,e),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(t){this.intensity=t/(this.width*this.height*Math.PI)}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}class Y6{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new Z)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,i=t.y,r=t.z,o=this.coefficients;return e.copy(o[0]).multiplyScalar(.282095),e.addScaledVector(o[1],.488603*i),e.addScaledVector(o[2],.488603*r),e.addScaledVector(o[3],.488603*n),e.addScaledVector(o[4],1.092548*(n*i)),e.addScaledVector(o[5],1.092548*(i*r)),e.addScaledVector(o[6],.315392*(3*r*r-1)),e.addScaledVector(o[7],1.092548*(n*r)),e.addScaledVector(o[8],.546274*(n*n-i*i)),e}getIrradianceAt(t,e){const n=t.x,i=t.y,r=t.z,o=this.coefficients;return e.copy(o[0]).multiplyScalar(.886227),e.addScaledVector(o[1],2*.511664*i),e.addScaledVector(o[2],2*.511664*r),e.addScaledVector(o[3],2*.511664*n),e.addScaledVector(o[4],2*.429043*n*i),e.addScaledVector(o[5],2*.429043*i*r),e.addScaledVector(o[6],.743125*r*r-.247708),e.addScaledVector(o[7],2*.429043*n*r),e.addScaledVector(o[8],.429043*(n*n-i*i)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(t,e+i*3);return this}toArray(t=[],e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(t,e+i*3);return t}static getBasisAt(t,e){const n=t.x,i=t.y,r=t.z;e[0]=.282095,e[1]=.488603*i,e[2]=.488603*r,e[3]=.488603*n,e[4]=1.092548*n*i,e[5]=1.092548*i*r,e[6]=.315392*(3*r*r-1),e[7]=1.092548*n*r,e[8]=.546274*(n*n-i*i)}}class Z6 extends Tc{constructor(t=new Y6,e=1){super(void 0,e),this.isLightProbe=!0,this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}class K6 extends dN{constructor(t,e,n=1){super(t,e),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}const Q6=["alphaMap","alphaTest","anisotropy","anisotropyMap","anisotropyRotation","aoMap","attenuationColor","attenuationDistance","bumpMap","clearcoat","clearcoatMap","clearcoatNormalMap","clearcoatNormalScale","clearcoatRoughness","color","dispersion","displacementMap","emissive","emissiveMap","envMap","gradientMap","ior","iridescence","iridescenceIOR","iridescenceMap","iridescenceThicknessMap","lightMap","map","matcap","metalness","metalnessMap","normalMap","normalScale","opacity","roughness","roughnessMap","sheen","sheenColor","sheenColorMap","sheenRoughnessMap","shininess","specular","specularColor","specularColorMap","specularIntensity","specularIntensityMap","specularMap","thickness","transmission","transmissionMap"];class J6{constructor(t){this.renderObjects=new WeakMap,this.hasNode=this.containsNode(t),this.hasAnimation=t.object.isSkinnedMesh===!0,this.refreshUniforms=Q6,this.renderId=0}firstInitialization(t){return this.renderObjects.has(t)===!1?(this.getRenderObjectData(t),!0):!1}getRenderObjectData(t){let e=this.renderObjects.get(t);if(e===void 0){const{geometry:n,material:i}=t;if(e={material:this.getMaterialData(i),geometry:{attributes:this.getAttributesData(n.attributes),indexVersion:n.index?n.index.version:null,drawRange:{start:n.drawRange.start,count:n.drawRange.count}},worldMatrix:t.object.matrixWorld.clone()},t.object.center&&(e.center=t.object.center.clone()),t.object.morphTargetInfluences&&(e.morphTargetInfluences=t.object.morphTargetInfluences.slice()),t.bundle!==null&&(e.version=t.bundle.version),e.material.transmission>0){const{width:r,height:o}=t.context;e.bufferWidth=r,e.bufferHeight=o}this.renderObjects.set(t,e)}return e}getAttributesData(t){const e={};for(const n in t){const i=t[n];e[n]={version:i.version}}return e}containsNode(t){const e=t.material;for(const n in e)if(e[n]&&e[n].isNode)return!0;return t.renderer.nodes.modelViewMatrix!==null||t.renderer.nodes.modelNormalViewMatrix!==null}getMaterialData(t){const e={};for(const n of this.refreshUniforms){const i=t[n];i!=null&&(typeof i=="object"&&i.clone!==void 0?i.isTexture===!0?e[n]={id:i.id,version:i.version}:e[n]=i.clone():e[n]=i)}return e}equals(t){const{object:e,material:n,geometry:i}=t,r=this.getRenderObjectData(t);if(r.worldMatrix.equals(e.matrixWorld)!==!0)return r.worldMatrix.copy(e.matrixWorld),!1;const o=r.material;for(const _ in o){const g=o[_],m=n[_];if(g.equals!==void 0){if(g.equals(m)===!1)return g.copy(m),!1}else if(m.isTexture===!0){if(g.id!==m.id||g.version!==m.version)return g.id=m.id,g.version=m.version,!1}else if(g!==m)return o[_]=m,!1}if(o.transmission>0){const{width:_,height:g}=t.context;if(r.bufferWidth!==_||r.bufferHeight!==g)return r.bufferWidth=_,r.bufferHeight=g,!1}const a=r.geometry,c=i.attributes,l=a.attributes,h=Object.keys(l),u=Object.keys(c);if(h.length!==u.length)return r.geometry.attributes=this.getAttributesData(c),!1;for(const _ of h){const g=l[_],m=c[_];if(m===void 0)return delete l[_],!1;if(g.version!==m.version)return g.version=m.version,!1}const d=i.index,f=a.indexVersion,p=d?d.version:null;if(f!==p)return a.indexVersion=p,!1;if(a.drawRange.start!==i.drawRange.start||a.drawRange.count!==i.drawRange.count)return a.drawRange.start=i.drawRange.start,a.drawRange.count=i.drawRange.count,!1;if(r.morphTargetInfluences){let _=!1;for(let g=0;g<r.morphTargetInfluences.length;g++)r.morphTargetInfluences[g]!==e.morphTargetInfluences[g]&&(_=!0);if(_)return!0}return r.center&&r.center.equals(e.center)===!1?(r.center.copy(e.center),!0):(t.bundle!==null&&(r.version=t.bundle.version),!0)}needsRefresh(t,e){if(this.hasNode||this.hasAnimation||this.firstInitialization(t))return!0;const{renderId:n}=e;if(this.renderId!==n)return this.renderId=n,!0;const i=t.object.static===!0,r=t.bundle!==null&&t.bundle.static===!0&&this.getRenderObjectData(t).version===t.bundle.version;return i||r?!1:this.equals(t)!==!0}}function od(s,t=0){let e=3735928559^t,n=1103547991^t;if(s instanceof Array)for(let i=0,r;i<s.length;i++)r=s[i],e=Math.imul(e^r,2654435761),n=Math.imul(n^r,1597334677);else for(let i=0,r;i<s.length;i++)r=s.charCodeAt(i),e=Math.imul(e^r,2654435761),n=Math.imul(n^r,1597334677);return e=Math.imul(e^e>>>16,2246822507),e^=Math.imul(n^n>>>13,3266489909),n=Math.imul(n^n>>>16,2246822507),n^=Math.imul(e^e>>>13,3266489909),4294967296*(2097151&n)+(e>>>0)}const tq=s=>od(s),wN=s=>od(s),Lm=(...s)=>od(s);function AN(s,t=!1){const e=[];s.isNode===!0&&(e.push(s.id),s=s.getSelf());for(const{property:n,childNode:i}of Bm(s))e.push(e,od(n.slice(0,-4)),i.getCacheKey(t));return od(e)}function*Bm(s,t=!1){for(const e in s){if(e.startsWith("_")===!0)continue;const n=s[e];if(Array.isArray(n)===!0)for(let i=0;i<n.length;i++){const r=n[i];r&&(r.isNode===!0||t&&typeof r.toJSON=="function")&&(yield{property:e,index:i,childNode:r})}else if(n&&n.isNode===!0)yield{property:e,childNode:n};else if(typeof n=="object")for(const i in n){const r=n[i];r&&(r.isNode===!0||t&&typeof r.toJSON=="function")&&(yield{property:e,index:i,childNode:r})}}}function Um(s){if(s==null)return null;const t=typeof s;return s.isNode===!0?"node":t==="number"?"float":t==="boolean"?"bool":t==="string"?"string":t==="function"?"shader":s.isVector2===!0?"vec2":s.isVector3===!0?"vec3":s.isVector4===!0?"vec4":s.isMatrix3===!0?"mat3":s.isMatrix4===!0?"mat4":s.isColor===!0?"color":s instanceof ArrayBuffer?"ArrayBuffer":null}function EN(s,...t){const e=s?s.slice(-4):void 0;return t.length===1&&(e==="vec2"?t=[t[0],t[0]]:e==="vec3"?t=[t[0],t[0],t[0]]:e==="vec4"&&(t=[t[0],t[0],t[0],t[0]])),s==="color"?new Pe(...t):e==="vec2"?new xe(...t):e==="vec3"?new Z(...t):e==="vec4"?new Ne(...t):e==="mat3"?new Ii(...t):e==="mat4"?new Je(...t):s==="bool"?t[0]||!1:s==="float"||s==="int"||s==="uint"?t[0]||0:s==="string"?t[0]||"":s==="ArrayBuffer"?nq(t[0]):null}function eq(s){let t="";const e=new Uint8Array(s);for(let n=0;n<e.length;n++)t+=String.fromCharCode(e[n]);return btoa(t)}function nq(s){return Uint8Array.from(atob(s),t=>t.charCodeAt(0)).buffer}const Ww={VERTEX:"vertex",FRAGMENT:"fragment"},he={NONE:"none",FRAME:"frame",RENDER:"render",OBJECT:"object"},iq=["fragment","vertex"],qw=["setup","analyze","generate"],jw=[...iq,"compute"],Oh=["x","y","z","w"];let sq=0;class se extends Dh{static get type(){return"Node"}constructor(t=null){super(),this.nodeType=t,this.updateType=he.NONE,this.updateBeforeType=he.NONE,this.updateAfterType=he.NONE,this.uuid=l6.generateUUID(),this.version=0,this._cacheKey=null,this._cacheKeyVersion=0,this.global=!1,this.isNode=!0,Object.defineProperty(this,"id",{value:sq++})}set needsUpdate(t){t===!0&&this.version++}get type(){return this.constructor.type}onUpdate(t,e){return this.updateType=e,this.update=t.bind(this.getSelf()),this}onFrameUpdate(t){return this.onUpdate(t,he.FRAME)}onRenderUpdate(t){return this.onUpdate(t,he.RENDER)}onObjectUpdate(t){return this.onUpdate(t,he.OBJECT)}onReference(t){return this.updateReference=t.bind(this.getSelf()),this}getSelf(){return this.self||this}updateReference(){return this}isGlobal(){return this.global}*getChildren(){for(const{childNode:t}of Bm(this))yield t}dispose(){this.dispatchEvent({type:"dispose"})}traverse(t){t(this);for(const e of this.getChildren())e.traverse(t)}getCacheKey(t=!1){return t=t||this.version!==this._cacheKeyVersion,(t===!0||this._cacheKey===null)&&(this._cacheKey=AN(this,t),this._cacheKeyVersion=this.version),this._cacheKey}getScope(){return this}getHash(){return this.uuid}getUpdateType(){return this.updateType}getUpdateBeforeType(){return this.updateBeforeType}getUpdateAfterType(){return this.updateAfterType}getElementType(t){const e=this.getNodeType(t);return t.getElementType(e)}getNodeType(t){const e=t.getNodeProperties(this);return e.outputNode?e.outputNode.getNodeType(t):this.nodeType}getShared(t){const e=this.getHash(t);return t.getNodeFromHash(e)||this}setup(t){const e=t.getNodeProperties(this);let n=0;for(const i of this.getChildren())e["node"+n++]=i;return null}analyze(t){if(t.increaseUsage(this)===1){const n=t.getNodeProperties(this);for(const i of Object.values(n))i&&i.isNode===!0&&i.build(t)}}generate(t,e){const{outputNode:n}=t.getNodeProperties(this);if(n&&n.isNode===!0)return n.build(t,e)}updateBefore(){console.warn("Abstract function.")}updateAfter(){console.warn("Abstract function.")}update(){console.warn("Abstract function.")}build(t,e=null){const n=this.getShared(t);if(this!==n)return n.build(t,e);t.addNode(this),t.addChain(this);let i=null;const r=t.getBuildStage();if(r==="setup"){this.updateReference(t);const o=t.getNodeProperties(this);if(o.initialized!==!0){const a=t.stack.nodes.length;o.initialized=!0,o.outputNode=this.setup(t),o.outputNode!==null&&t.stack.nodes.length;for(const c of Object.values(o))c&&c.isNode===!0&&c.build(t)}}else if(r==="analyze")this.analyze(t);else if(r==="generate")if(this.generate.length===1){const a=this.getNodeType(t),c=t.getDataFromNode(this);i=c.snippet,i===void 0?(i=this.generate(t)||"",c.snippet=i):c.flowCodes!==void 0&&t.context.nodeBlock!==void 0&&t.addFlowCodeHierarchy(this,t.context.nodeBlock),i=t.format(i,a,e)}else i=this.generate(t,e)||"";return t.removeChain(this),t.addSequentialNode(this),i}getSerializeChildren(){return Bm(this)}serialize(t){const e=this.getSerializeChildren(),n={};for(const{property:i,index:r,childNode:o}of e)r!==void 0?(n[i]===void 0&&(n[i]=Number.isInteger(r)?[]:{}),n[i][r]=o.toJSON(t.meta).uuid):n[i]=o.toJSON(t.meta).uuid;Object.keys(n).length>0&&(t.inputNodes=n)}deserialize(t){if(t.inputNodes!==void 0){const e=t.meta.nodes;for(const n in t.inputNodes)if(Array.isArray(t.inputNodes[n])){const i=[];for(const r of t.inputNodes[n])i.push(e[r]);this[n]=i}else if(typeof t.inputNodes[n]=="object"){const i={};for(const r in t.inputNodes[n]){const o=t.inputNodes[n][r];i[r]=e[o]}this[n]=i}else{const i=t.inputNodes[n];this[n]=e[i]}}}toJSON(t){const{uuid:e,type:n}=this,i=t===void 0||typeof t=="string";i&&(t={textures:{},images:{},nodes:{}});let r=t.nodes[e];r===void 0&&(r={uuid:e,type:n,meta:t,metadata:{version:4.6,type:"Node",generator:"Node.toJSON"}},i!==!0&&(t.nodes[r.uuid]=r),this.serialize(r),delete r.meta);function o(a){const c=[];for(const l in a){const h=a[l];delete h.metadata,c.push(h)}return c}if(i){const a=o(t.textures),c=o(t.images),l=o(t.nodes);a.length>0&&(r.textures=a),c.length>0&&(r.images=c),l.length>0&&(r.nodes=l)}return r}}class kd extends se{static get type(){return"ArrayElementNode"}constructor(t,e){super(),this.node=t,this.indexNode=e,this.isArrayElementNode=!0}getNodeType(t){return this.node.getElementType(t)}generate(t){const e=this.node.build(t),n=this.indexNode.build(t,"uint");return`${e}[ ${n} ]`}}class CN extends se{static get type(){return"ConvertNode"}constructor(t,e){super(),this.node=t,this.convertTo=e}getNodeType(t){const e=this.node.getNodeType(t);let n=null;for(const i of this.convertTo.split("|"))(n===null||t.getTypeLength(e)===t.getTypeLength(i))&&(n=i);return n}serialize(t){super.serialize(t),t.convertTo=this.convertTo}deserialize(t){super.deserialize(t),this.convertTo=t.convertTo}generate(t,e){const n=this.node,i=this.getNodeType(t),r=n.build(t,i);return t.format(r,i,e)}}class Mn extends se{static get type(){return"TempNode"}constructor(t){super(t),this.isTempNode=!0}hasDependencies(t){return t.getDataFromNode(this).usageCount>1}build(t,e){if(t.getBuildStage()==="generate"){const i=t.getVectorType(this.getNodeType(t,e)),r=t.getDataFromNode(this);if(r.propertyName!==void 0)return t.format(r.propertyName,i,e);if(i!=="void"&&e!=="void"&&this.hasDependencies(t)){const o=super.build(t,i),a=t.getVarFromNode(this,null,i),c=t.getPropertyName(a);return t.addLineFlowCode(`${c} = ${o}`,this),r.snippet=o,r.propertyName=c,t.format(r.propertyName,i,e)}}return super.build(t,e)}}class rq extends Mn{static get type(){return"JoinNode"}constructor(t=[],e=null){super(e),this.nodes=t}getNodeType(t){return this.nodeType!==null?t.getVectorType(this.nodeType):t.getTypeFromLength(this.nodes.reduce((e,n)=>e+t.getTypeLength(n.getNodeType(t)),0))}generate(t,e){const n=this.getNodeType(t),i=this.nodes,r=t.getComponentType(n),o=[];for(const c of i){let l=c.build(t);const h=t.getComponentType(c.getNodeType(t));h!==r&&(l=t.format(l,h,r)),o.push(l)}const a=`${t.getType(n)}( ${o.join(", ")} )`;return t.format(a,n,e)}}const oq=Oh.join("");class Xw extends se{static get type(){return"SplitNode"}constructor(t,e="x"){super(),this.node=t,this.components=e,this.isSplitNode=!0}getVectorLength(){let t=this.components.length;for(const e of this.components)t=Math.max(Oh.indexOf(e)+1,t);return t}getComponentType(t){return t.getComponentType(this.node.getNodeType(t))}getNodeType(t){return t.getTypeFromLength(this.components.length,this.getComponentType(t))}generate(t,e){const n=this.node,i=t.getTypeLength(n.getNodeType(t));let r=null;if(i>1){let o=null;this.getVectorLength()>=i&&(o=t.getTypeFromLength(this.getVectorLength(),this.getComponentType(t)));const c=n.build(t,o);this.components.length===i&&this.components===oq.slice(0,this.components.length)?r=t.format(c,o,e):r=t.format(`${c}.${this.components}`,this.getNodeType(t),e)}else r=n.build(t,e);return r}serialize(t){super.serialize(t),t.components=this.components}deserialize(t){super.deserialize(t),this.components=t.components}}class aq extends Mn{static get type(){return"SetNode"}constructor(t,e,n){super(),this.sourceNode=t,this.components=e,this.targetNode=n}getNodeType(t){return this.sourceNode.getNodeType(t)}generate(t){const{sourceNode:e,components:n,targetNode:i}=this,r=this.getNodeType(t),o=t.getTypeFromLength(n.length,i.getNodeType(t)),a=i.build(t,o),c=e.build(t,r),l=t.getTypeLength(r),h=[];for(let u=0;u<l;u++){const d=Oh[u];d===n[0]?(h.push(a),u+=n.length-1):h.push(c+"."+d)}return`${t.getType(r)}( ${h.join(", ")} )`}}class cq extends Mn{static get type(){return"FlipNode"}constructor(t,e){super(),this.sourceNode=t,this.components=e}getNodeType(t){return this.sourceNode.getNodeType(t)}generate(t){const{components:e,sourceNode:n}=this,i=this.getNodeType(t),r=n.build(t),o=t.getVarFromNode(this),a=t.getPropertyName(o);t.addLineFlowCode(a+" = "+r,this);const c=t.getTypeLength(i),l=[];let h=0;for(let u=0;u<c;u++){const d=Oh[u];d===e[h]?(l.push("1.0 - "+(a+"."+d)),h++):l.push(a+"."+d)}return`${t.getType(i)}( ${l.join(", ")} )`}}class Gb extends se{static get type(){return"InputNode"}constructor(t,e=null){super(e),this.isInputNode=!0,this.value=t,this.precision=null}getNodeType(){return this.nodeType===null?Um(this.value):this.nodeType}getInputType(t){return this.getNodeType(t)}setPrecision(t){return this.precision=t,this}serialize(t){super.serialize(t),t.value=this.value,this.value&&this.value.toArray&&(t.value=this.value.toArray()),t.valueType=Um(this.value),t.nodeType=this.nodeType,t.valueType==="ArrayBuffer"&&(t.value=eq(t.value)),t.precision=this.precision}deserialize(t){super.deserialize(t),this.nodeType=t.nodeType,this.value=Array.isArray(t.value)?EN(t.valueType,...t.value):t.value,this.precision=t.precision||null,this.value&&this.value.fromArray&&(this.value=this.value.fromArray(t.value))}generate(){console.warn("Abstract function.")}}class _o extends Gb{static get type(){return"ConstNode"}constructor(t,e=null){super(t,e),this.isConstNode=!0}generateConst(t){return t.generateConst(this.getNodeType(t),this.value)}generate(t,e){const n=this.getNodeType(t);return t.format(this.generateConst(t),n,e)}}let fh=null;const Cl=new Map;function rt(s,t){if(Cl.has(s)){console.warn(`Redefinition of method chaining ${s}`);return}if(typeof t!="function")throw new Error(`Node element ${s} is not a function`);Cl.set(s,t)}const RN=s=>s.replace(/r|s/g,"x").replace(/g|t/g,"y").replace(/b|p/g,"z").replace(/a|q/g,"w"),Yw=s=>RN(s).split("").sort().join(""),NN={setup(s,t){const e=t.shift();return s(bg(e),...t)},get(s,t,e){if(typeof t=="string"&&s[t]===void 0){if(s.isStackNode!==!0&&t==="assign")return(...n)=>(fh.assign(e,...n),e);if(Cl.has(t)){const n=Cl.get(t);return s.isStackNode?(...i)=>e.add(n(...i)):(...i)=>n(e,...i)}else{if(t==="self")return s;if(t.endsWith("Assign")&&Cl.has(t.slice(0,t.length-6))){const n=Cl.get(t.slice(0,t.length-6));return s.isStackNode?(...i)=>e.assign(i[0],n(...i)):(...i)=>e.assign(n(e,...i))}else{if(/^[xyzwrgbastpq]{1,4}$/.test(t)===!0)return t=RN(t),_t(new Xw(e,t));if(/^set[XYZWRGBASTPQ]{1,4}$/.test(t)===!0)return t=Yw(t.slice(3).toLowerCase()),n=>_t(new aq(s,t,n));if(/^flip[XYZWRGBASTPQ]{1,4}$/.test(t)===!0)return t=Yw(t.slice(4).toLowerCase()),()=>_t(new cq(_t(s),t));if(t==="width"||t==="height"||t==="depth")return t==="width"?t="x":t==="height"?t="y":t==="depth"&&(t="z"),_t(new Xw(s,t));if(/^\d+$/.test(t)===!0)return _t(new kd(e,new _o(Number(t),"uint")))}}}return Reflect.get(s,t,e)},set(s,t,e,n){return typeof t=="string"&&s[t]===void 0&&(/^[xyzwrgbastpq]{1,4}$/.test(t)===!0||t==="width"||t==="height"||t==="depth"||/^\d+$/.test(t)===!0)?(n[t].assign(e),!0):Reflect.set(s,t,e,n)}},y0=new WeakMap,Zw=new WeakMap,lq=function(s,t=null){const e=Um(s);if(e==="node"){let n=y0.get(s);return n===void 0&&(n=new Proxy(s,NN),y0.set(s,n),y0.set(n,n)),n}else{if(t===null&&(e==="float"||e==="boolean")||e&&e!=="shader"&&e!=="string")return _t(Hx(s,t));if(e==="shader")return bt(s)}return s},hq=function(s,t=null){for(const e in s)s[e]=_t(s[e],t);return s},uq=function(s,t=null){const e=s.length;for(let n=0;n<e;n++)s[n]=_t(s[n],t);return s},dq=function(s,t=null,e=null,n=null){const i=r=>_t(n!==null?Object.assign(r,n):r);return t===null?(...r)=>i(new s(...$l(r))):e!==null?(e=_t(e),(...r)=>i(new s(t,...$l(r),e))):(...r)=>i(new s(t,...$l(r)))},fq=function(s,...t){return _t(new s(...$l(t)))};class pq extends se{constructor(t,e){super(),this.shaderNode=t,this.inputNodes=e}getNodeType(t){return this.shaderNode.nodeType||this.getOutputNode(t).getNodeType(t)}call(t){const{shaderNode:e,inputNodes:n}=this,i=t.getNodeProperties(e);if(i.onceOutput)return i.onceOutput;let r=null;if(e.layout){let o=Zw.get(t.constructor);o===void 0&&(o=new WeakMap,Zw.set(t.constructor,o));let a=o.get(e);a===void 0&&(a=_t(t.buildFunctionNode(e)),o.set(e,a)),t.currentFunctionNode!==null&&t.currentFunctionNode.includes.push(a),r=_t(a.call(n))}else{const o=e.jsFunc,a=n!==null?o(n,t):o(t);r=_t(a)}return e.once&&(i.onceOutput=r),r}getOutputNode(t){const e=t.getNodeProperties(this);return e.outputNode===null&&(e.outputNode=this.setupOutput(t)),e.outputNode}setup(t){return this.getOutputNode(t)}setupOutput(t){return t.addStack(),t.stack.outputNode=this.call(t),t.removeStack()}generate(t,e){return this.getOutputNode(t).build(t,e)}}class mq extends se{constructor(t,e){super(e),this.jsFunc=t,this.layout=null,this.global=!0,this.once=!1}setLayout(t){return this.layout=t,this}call(t=null){return bg(t),_t(new pq(this,t))}setup(){return this.call()}}const gq=[!1,!0],_q=[0,1,2,3],yq=[-1,-2],PN=[.5,1.5,1/3,1e-6,1e6,Math.PI,Math.PI*2,1/Math.PI,2/Math.PI,1/(Math.PI*2),Math.PI/2],Hb=new Map;for(const s of gq)Hb.set(s,new _o(s));const $b=new Map;for(const s of _q)$b.set(s,new _o(s,"uint"));const Wb=new Map([...$b].map(s=>new _o(s.value,"int")));for(const s of yq)Wb.set(s,new _o(s,"int"));const xg=new Map([...Wb].map(s=>new _o(s.value)));for(const s of PN)xg.set(s,new _o(s));for(const s of PN)xg.set(-s,new _o(-s));const vg={bool:Hb,uint:$b,ints:Wb,float:xg},Kw=new Map([...Hb,...xg]),Hx=(s,t)=>Kw.has(s)?Kw.get(s):s.isNode===!0?s:new _o(s,t),xq=s=>{try{return s.getNodeType()}catch{return}},Tn=function(s,t=null){return(...e)=>{if((e.length===0||!["bool","float","int","uint"].includes(s)&&e.every(i=>typeof i!="object"))&&(e=[EN(s,...e)]),e.length===1&&t!==null&&t.has(e[0]))return _t(t.get(e[0]));if(e.length===1){const i=Hx(e[0],s);return xq(i)===s?_t(i):_t(new CN(i,s))}const n=e.map(i=>Hx(i));return _t(new rq(n,s))}},Qw=s=>typeof s=="object"&&s!==null?s.value:s,vq=s=>s!=null?s.nodeType||s.convertTo||(typeof s=="string"?s:null):null;function Wp(s,t){return new Proxy(new mq(s,t),NN)}const _t=(s,t=null)=>lq(s,t),bg=(s,t=null)=>new hq(s,t),$l=(s,t=null)=>new uq(s,t),ut=(...s)=>new dq(...s),vt=(...s)=>new fq(...s),bt=(s,t)=>{const e=new Wp(s,t),n=(...i)=>{let r;return bg(i),i[0]&&i[0].isNode?r=[...i]:r=i[0],e.call(r)};return n.shaderNode=e,n.setLayout=i=>(e.setLayout(i),n),n.once=()=>(e.once=!0,n),n};rt("toGlobal",s=>(s.global=!0,s));const km=s=>{fh=s},DN=()=>fh,Gn=(...s)=>fh.If(...s);function bq(s){return fh&&fh.add(s),s}rt("append",bq);const Sq=new Tn("color"),ct=new Tn("float",vg.float),on=new Tn("int",vg.ints),Mq=new Tn("uint",vg.uint),Tq=new Tn("bool",vg.bool),At=new Tn("vec2"),Ur=new Tn("ivec2"),wq=new Tn("uvec2"),Aq=new Tn("bvec2"),ot=new Tn("vec3"),Eq=new Tn("ivec3"),Cq=new Tn("uvec3"),Rq=new Tn("bvec3"),ee=new Tn("vec4"),Nq=new Tn("ivec4"),Pq=new Tn("uvec4"),Dq=new Tn("bvec4"),qb=new Tn("mat2"),mi=new Tn("mat3"),Wl=new Tn("mat4");rt("toColor",Sq);rt("toFloat",ct);rt("toInt",on);rt("toUint",Mq);rt("toBool",Tq);rt("toVec2",At);rt("toIVec2",Ur);rt("toUVec2",wq);rt("toBVec2",Aq);rt("toVec3",ot);rt("toIVec3",Eq);rt("toUVec3",Cq);rt("toBVec3",Rq);rt("toVec4",ee);rt("toIVec4",Nq);rt("toUVec4",Pq);rt("toBVec4",Dq);rt("toMat2",qb);rt("toMat3",mi);rt("toMat4",Wl);const Iq=ut(kd),Fq=(s,t)=>_t(new CN(_t(s),t));rt("element",Iq);rt("convert",Fq);class IN extends se{static get type(){return"UniformGroupNode"}constructor(t,e=!1,n=1){super("string"),this.name=t,this.version=0,this.shared=e,this.order=n,this.isUniformGroup=!0}set needsUpdate(t){t===!0&&this.version++}serialize(t){super.serialize(t),t.name=this.name,t.version=this.version,t.shared=this.shared}deserialize(t){super.deserialize(t),this.name=t.name,this.version=t.version,this.shared=t.shared}}const Oq=s=>new IN(s),FN=(s,t=0)=>new IN(s,!0,t),Lq=FN("frame"),_e=FN("render"),ON=Oq("object");class zd extends Gb{static get type(){return"UniformNode"}constructor(t,e=null){super(t,e),this.isUniformNode=!0,this.name="",this.groupNode=ON}label(t){return this.name=t,this}setGroup(t){return this.groupNode=t,this}getGroup(){return this.groupNode}getUniformHash(t){return this.getHash(t)}onUpdate(t,e){const n=this.getSelf();return t=t.bind(n),super.onUpdate(i=>{const r=t(i,n);r!==void 0&&(this.value=r)},e)}generate(t,e){const n=this.getNodeType(t),i=this.getUniformHash(t);let r=t.getNodeFromHash(i);r===void 0&&(t.setHashNode(this,i),r=this);const o=r.getInputType(t),a=t.getUniformFromNode(r,o,t.shaderStage,this.name||t.context.label),c=t.getPropertyName(a);return t.context.label!==void 0&&delete t.context.label,t.format(c,n,e)}}const ne=(s,t)=>{const e=vq(t||s),n=s&&s.isNode===!0?s.node&&s.node.value||s.value:s;return _t(new zd(n,e))};class De extends se{static get type(){return"PropertyNode"}constructor(t,e=null,n=!1){super(t),this.name=e,this.varying=n,this.isPropertyNode=!0}getHash(t){return this.name||super.getHash(t)}isGlobal(){return!0}generate(t){let e;return this.varying===!0?(e=t.getVaryingFromNode(this,this.name),e.needsInterpolation=!0):e=t.getVarFromNode(this,this.name),t.getPropertyName(e)}}const bl=(s,t)=>_t(new De(s,t)),zm=(s,t)=>_t(new De(s,t,!0)),we=vt(De,"vec4","DiffuseColor"),Jw=vt(De,"vec3","EmissiveColor"),Hr=vt(De,"float","Roughness"),Vm=vt(De,"float","Metalness"),$x=vt(De,"float","Clearcoat"),Gm=vt(De,"float","ClearcoatRoughness"),Rl=vt(De,"vec3","Sheen"),jb=vt(De,"float","SheenRoughness"),Xb=vt(De,"float","Iridescence"),LN=vt(De,"float","IridescenceIOR"),BN=vt(De,"float","IridescenceThickness"),Wx=vt(De,"float","AlphaT"),Ba=vt(De,"float","Anisotropy"),qp=vt(De,"vec3","AnisotropyT"),ql=vt(De,"vec3","AnisotropyB"),$i=vt(De,"color","SpecularColor"),Hm=vt(De,"float","SpecularF90"),qx=vt(De,"float","Shininess"),Bq=vt(De,"vec4","Output"),x0=vt(De,"float","dashSize"),t1=vt(De,"float","gapSize"),jp=vt(De,"float","IOR"),jx=vt(De,"float","Transmission"),UN=vt(De,"float","Thickness"),kN=vt(De,"float","AttenuationDistance"),zN=vt(De,"color","AttenuationColor"),VN=vt(De,"float","Dispersion");class Uq extends Mn{static get type(){return"AssignNode"}constructor(t,e){super(),this.targetNode=t,this.sourceNode=e}hasDependencies(){return!1}getNodeType(t,e){return e!=="void"?this.targetNode.getNodeType(t):"void"}needsSplitAssign(t){const{targetNode:e}=this;if(t.isAvailable("swizzleAssign")===!1&&e.isSplitNode&&e.components.length>1){const n=t.getTypeLength(e.node.getNodeType(t));return Oh.join("").slice(0,n)!==e.components}return!1}generate(t,e){const{targetNode:n,sourceNode:i}=this,r=this.needsSplitAssign(t),o=n.getNodeType(t),a=n.context({assign:!0}).build(t),c=i.build(t,o),l=i.getNodeType(t),h=t.getDataFromNode(this);let u;if(h.initialized===!0)e!=="void"&&(u=a);else if(r){const d=t.getVarFromNode(this,null,o),f=t.getPropertyName(d);t.addLineFlowCode(`${f} = ${c}`,this);const p=n.node.context({assign:!0}).build(t);for(let _=0;_<n.components.length;_++){const g=n.components[_];t.addLineFlowCode(`${p}.${g} = ${f}[ ${_} ]`,this)}e!=="void"&&(u=a)}else u=`${a} = ${c}`,(e==="void"||l==="void")&&(t.addLineFlowCode(u,this),e!=="void"&&(u=a));return h.initialized=!0,t.format(u,o,e)}}const kq=ut(Uq);rt("assign",kq);class zq extends Mn{static get type(){return"FunctionCallNode"}constructor(t=null,e={}){super(),this.functionNode=t,this.parameters=e}setParameters(t){return this.parameters=t,this}getParameters(){return this.parameters}getNodeType(t){return this.functionNode.getNodeType(t)}generate(t){const e=[],n=this.functionNode,i=n.getInputs(t),r=this.parameters,o=(c,l)=>{const h=l.type,u=h==="pointer";let d;return u?d="&"+c.build(t):d=c.build(t,h),d};if(Array.isArray(r))for(let c=0;c<r.length;c++)e.push(o(r[c],i[c]));else for(const c of i){const l=r[c.name];if(l!==void 0)e.push(o(l,c));else throw new Error(`FunctionCallNode: Input '${c.name}' not found in FunctionNode.`)}return`${n.build(t,"property")}( ${e.join(", ")} )`}}const Vq=(s,...t)=>(t=t.length>1||t[0]&&t[0].isNode===!0?$l(t):bg(t[0]),_t(new zq(_t(s),t)));rt("call",Vq);class tn extends Mn{static get type(){return"OperatorNode"}constructor(t,e,n,...i){if(super(),i.length>0){let r=new tn(t,e,n);for(let o=0;o<i.length-1;o++)r=new tn(t,r,i[o]);e=r,n=i[i.length-1]}this.op=t,this.aNode=e,this.bNode=n}getNodeType(t,e){const n=this.op,i=this.aNode,r=this.bNode,o=i.getNodeType(t),a=typeof r<"u"?r.getNodeType(t):null;if(o==="void"||a==="void")return"void";if(n==="%")return o;if(n==="~"||n==="&"||n==="|"||n==="^"||n===">>"||n==="<<")return t.getIntegerType(o);if(n==="!"||n==="=="||n==="&&"||n==="||"||n==="^^")return"bool";if(n==="<"||n===">"||n==="<="||n===">="){const c=e?t.getTypeLength(e):Math.max(t.getTypeLength(o),t.getTypeLength(a));return c>1?`bvec${c}`:"bool"}else return o==="float"&&t.isMatrix(a)?a:t.isMatrix(o)&&t.isVector(a)?t.getVectorFromMatrix(o):t.isVector(o)&&t.isMatrix(a)?t.getVectorFromMatrix(a):t.getTypeLength(a)>t.getTypeLength(o)?a:o}generate(t,e){const n=this.op,i=this.aNode,r=this.bNode,o=this.getNodeType(t,e);let a=null,c=null;o!=="void"?(a=i.getNodeType(t),c=typeof r<"u"?r.getNodeType(t):null,n==="<"||n===">"||n==="<="||n===">="||n==="=="?t.isVector(a)?c=a:a!==c&&(a=c="float"):n===">>"||n==="<<"?(a=o,c=t.changeComponentType(c,"uint")):t.isMatrix(a)&&t.isVector(c)?c=t.getVectorFromMatrix(a):t.isVector(a)&&t.isMatrix(c)?a=t.getVectorFromMatrix(c):a=c=o):a=c=o;const l=i.build(t,a),h=typeof r<"u"?r.build(t,c):null,u=t.getTypeLength(e),d=t.getFunctionOperator(n);if(e!=="void")return n==="<"&&u>1?t.useComparisonMethod?t.format(`${t.getMethod("lessThan",e)}( ${l}, ${h} )`,o,e):t.format(`( ${l} < ${h} )`,o,e):n==="<="&&u>1?t.useComparisonMethod?t.format(`${t.getMethod("lessThanEqual",e)}( ${l}, ${h} )`,o,e):t.format(`( ${l} <= ${h} )`,o,e):n===">"&&u>1?t.useComparisonMethod?t.format(`${t.getMethod("greaterThan",e)}( ${l}, ${h} )`,o,e):t.format(`( ${l} > ${h} )`,o,e):n===">="&&u>1?t.useComparisonMethod?t.format(`${t.getMethod("greaterThanEqual",e)}( ${l}, ${h} )`,o,e):t.format(`( ${l} >= ${h} )`,o,e):n==="!"||n==="~"?t.format(`(${n}${l})`,a,e):d?t.format(`${d}( ${l}, ${h} )`,o,e):t.format(`( ${l} ${n} ${h} )`,o,e);if(a!=="void")return d?t.format(`${d}( ${l}, ${h} )`,o,e):t.format(`${l} ${n} ${h}`,o,e)}serialize(t){super.serialize(t),t.op=this.op}deserialize(t){super.deserialize(t),this.op=t.op}}const gi=ut(tn,"+"),qi=ut(tn,"-"),de=ut(tn,"*"),ha=ut(tn,"/"),GN=ut(tn,"%"),Gq=ut(tn,"=="),Hq=ut(tn,"!="),$q=ut(tn,"<"),Wq=ut(tn,">"),qq=ut(tn,"<="),jq=ut(tn,">="),Xq=ut(tn,"&&"),Yq=ut(tn,"||"),Zq=ut(tn,"!"),Kq=ut(tn,"^^"),Qq=ut(tn,"&"),Jq=ut(tn,"~"),t9=ut(tn,"|"),e9=ut(tn,"^"),n9=ut(tn,"<<"),i9=ut(tn,">>");rt("add",gi);rt("sub",qi);rt("mul",de);rt("div",ha);rt("modInt",GN);rt("equal",Gq);rt("notEqual",Hq);rt("lessThan",$q);rt("greaterThan",Wq);rt("lessThanEqual",qq);rt("greaterThanEqual",jq);rt("and",Xq);rt("or",Yq);rt("not",Zq);rt("xor",Kq);rt("bitAnd",Qq);rt("bitNot",Jq);rt("bitOr",t9);rt("bitXor",e9);rt("shiftLeft",n9);rt("shiftRight",i9);const s9=(...s)=>(console.warn("TSL.OperatorNode: .remainder() has been renamed to .modInt()."),GN(...s));rt("remainder",s9);class $ extends Mn{static get type(){return"MathNode"}constructor(t,e,n=null,i=null){super(),this.method=t,this.aNode=e,this.bNode=n,this.cNode=i}getInputType(t){const e=this.aNode.getNodeType(t),n=this.bNode?this.bNode.getNodeType(t):null,i=this.cNode?this.cNode.getNodeType(t):null,r=t.isMatrix(e)?0:t.getTypeLength(e),o=t.isMatrix(n)?0:t.getTypeLength(n),a=t.isMatrix(i)?0:t.getTypeLength(i);return r>o&&r>a?e:o>a?n:a>r?i:e}getNodeType(t){const e=this.method;return e===$.LENGTH||e===$.DISTANCE||e===$.DOT?"float":e===$.CROSS?"vec3":e===$.ALL?"bool":e===$.EQUALS?t.changeComponentType(this.aNode.getNodeType(t),"bool"):e===$.MOD?this.aNode.getNodeType(t):this.getInputType(t)}generate(t,e){const n=this.method,i=this.getNodeType(t),r=this.getInputType(t),o=this.aNode,a=this.bNode,c=this.cNode,l=t.renderer.isWebGLRenderer===!0;if(n===$.TRANSFORM_DIRECTION){let h=o,u=a;t.isMatrix(h.getNodeType(t))?u=ee(ot(u),0):h=ee(ot(h),0);const d=de(h,u).xyz;return cd(d).build(t,e)}else{if(n===$.NEGATE)return t.format("( - "+o.build(t,r)+" )",i,e);if(n===$.ONE_MINUS)return qi(1,o).build(t,e);if(n===$.RECIPROCAL)return ha(1,o).build(t,e);if(n===$.DIFFERENCE)return Cs(qi(o,a)).build(t,e);{const h=[];return n===$.CROSS||n===$.MOD?h.push(o.build(t,i),a.build(t,i)):l&&n===$.STEP?h.push(o.build(t,t.getTypeLength(o.getNodeType(t))===1?"float":r),a.build(t,r)):l&&(n===$.MIN||n===$.MAX)||n===$.MOD?h.push(o.build(t,r),a.build(t,t.getTypeLength(a.getNodeType(t))===1?"float":r)):n===$.REFRACT?h.push(o.build(t,r),a.build(t,r),c.build(t,"float")):n===$.MIX?h.push(o.build(t,r),a.build(t,r),c.build(t,t.getTypeLength(c.getNodeType(t))===1?"float":r)):(h.push(o.build(t,r)),a!==null&&h.push(a.build(t,r)),c!==null&&h.push(c.build(t,r))),t.format(`${t.getMethod(n,i)}( ${h.join(", ")} )`,i,e)}}}serialize(t){super.serialize(t),t.method=this.method}deserialize(t){super.deserialize(t),this.method=t.method}}$.ALL="all";$.ANY="any";$.EQUALS="equals";$.RADIANS="radians";$.DEGREES="degrees";$.EXP="exp";$.EXP2="exp2";$.LOG="log";$.LOG2="log2";$.SQRT="sqrt";$.INVERSE_SQRT="inversesqrt";$.FLOOR="floor";$.CEIL="ceil";$.NORMALIZE="normalize";$.FRACT="fract";$.SIN="sin";$.COS="cos";$.TAN="tan";$.ASIN="asin";$.ACOS="acos";$.ATAN="atan";$.ABS="abs";$.SIGN="sign";$.LENGTH="length";$.NEGATE="negate";$.ONE_MINUS="oneMinus";$.DFDX="dFdx";$.DFDY="dFdy";$.ROUND="round";$.RECIPROCAL="reciprocal";$.TRUNC="trunc";$.FWIDTH="fwidth";$.BITCAST="bitcast";$.TRANSPOSE="transpose";$.ATAN2="atan2";$.MIN="min";$.MAX="max";$.MOD="mod";$.STEP="step";$.REFLECT="reflect";$.DISTANCE="distance";$.DIFFERENCE="difference";$.DOT="dot";$.CROSS="cross";$.POW="pow";$.TRANSFORM_DIRECTION="transformDirection";$.MIX="mix";$.CLAMP="clamp";$.REFRACT="refract";$.SMOOTHSTEP="smoothstep";$.FACEFORWARD="faceforward";const r9=ct(1e-6),o9=ct(Math.PI),HN=ut($,$.ALL),a9=ut($,$.ANY),c9=ut($,$.EQUALS),l9=ut($,$.RADIANS),h9=ut($,$.DEGREES),$N=ut($,$.EXP),ad=ut($,$.EXP2),WN=ut($,$.LOG),so=ut($,$.LOG2),Yb=ut($,$.SQRT),u9=ut($,$.INVERSE_SQRT),tc=ut($,$.FLOOR),Zb=ut($,$.CEIL),cd=ut($,$.NORMALIZE),ga=ut($,$.FRACT),Es=ut($,$.SIN),qo=ut($,$.COS),d9=ut($,$.TAN),f9=ut($,$.ASIN),p9=ut($,$.ACOS),m9=ut($,$.ATAN),Cs=ut($,$.ABS),qN=ut($,$.SIGN),sa=ut($,$.LENGTH),g9=ut($,$.NEGATE),_9=ut($,$.ONE_MINUS),jN=ut($,$.DFDX),XN=ut($,$.DFDY),y9=ut($,$.ROUND),x9=ut($,$.RECIPROCAL),v9=ut($,$.TRUNC),b9=ut($,$.FWIDTH);$.BITCAST;const S9=ut($,$.TRANSPOSE),M9=ut($,$.ATAN2),ld=ut($,$.MIN),ls=ut($,$.MAX),YN=ut($,$.MOD),ZN=ut($,$.STEP),T9=ut($,$.REFLECT),w9=ut($,$.DISTANCE),A9=ut($,$.DIFFERENCE),Kb=ut($,$.DOT),KN=ut($,$.CROSS),Sg=ut($,$.POW),QN=ut($,$.POW,2),E9=ut($,$.POW,3),C9=ut($,$.POW,4),R9=ut($,$.TRANSFORM_DIRECTION),N9=s=>de(qN(s),Sg(Cs(s),1/3)),P9=s=>Kb(s,s),qe=ut($,$.MIX),co=(s,t=0,e=1)=>_t(new $($.CLAMP,_t(s),_t(t),_t(e))),D9=s=>co(s),JN=ut($,$.REFRACT),gc=ut($,$.SMOOTHSTEP),I9=ut($,$.FACEFORWARD),F9=bt(([s])=>{const n=43758.5453,i=Kb(s.xy,At(12.9898,78.233)),r=YN(i,o9);return ga(Es(r).mul(n))}),O9=(s,t,e)=>qe(t,e,s),L9=(s,t,e)=>gc(t,e,s);rt("all",HN);rt("any",a9);rt("equals",c9);rt("radians",l9);rt("degrees",h9);rt("exp",$N);rt("exp2",ad);rt("log",WN);rt("log2",so);rt("sqrt",Yb);rt("inverseSqrt",u9);rt("floor",tc);rt("ceil",Zb);rt("normalize",cd);rt("fract",ga);rt("sin",Es);rt("cos",qo);rt("tan",d9);rt("asin",f9);rt("acos",p9);rt("atan",m9);rt("abs",Cs);rt("sign",qN);rt("length",sa);rt("lengthSq",P9);rt("negate",g9);rt("oneMinus",_9);rt("dFdx",jN);rt("dFdy",XN);rt("round",y9);rt("reciprocal",x9);rt("trunc",v9);rt("fwidth",b9);rt("atan2",M9);rt("min",ld);rt("max",ls);rt("mod",YN);rt("step",ZN);rt("reflect",T9);rt("distance",w9);rt("dot",Kb);rt("cross",KN);rt("pow",Sg);rt("pow2",QN);rt("pow3",E9);rt("pow4",C9);rt("transformDirection",R9);rt("mix",O9);rt("clamp",co);rt("refract",JN);rt("smoothstep",L9);rt("faceForward",I9);rt("difference",A9);rt("saturate",D9);rt("cbrt",N9);rt("transpose",S9);rt("rand",F9);class B9 extends se{static get type(){return"ConditionalNode"}constructor(t,e,n=null){super(),this.condNode=t,this.ifNode=e,this.elseNode=n}getNodeType(t){const e=this.ifNode.getNodeType(t);if(this.elseNode!==null){const n=this.elseNode.getNodeType(t);if(t.getTypeLength(n)>t.getTypeLength(e))return n}return e}setup(t){const e=this.condNode.cache(),n=this.ifNode.cache(),i=this.elseNode?this.elseNode.cache():null,r=t.context.nodeBlock;t.getDataFromNode(n).parentNodeBlock=r,i!==null&&(t.getDataFromNode(i).parentNodeBlock=r);const o=t.getNodeProperties(this);o.condNode=e,o.ifNode=n.context({nodeBlock:n}),o.elseNode=i?i.context({nodeBlock:i}):null}generate(t,e){const n=this.getNodeType(t),i=t.getDataFromNode(this);if(i.nodeProperty!==void 0)return i.nodeProperty;const{condNode:r,ifNode:o,elseNode:a}=t.getNodeProperties(this),c=e!=="void",l=c?bl(n).build(t):"";i.nodeProperty=l;const h=r.build(t,"bool");t.addFlowCode(`
${t.tab}if ( ${h} ) {

`).addFlowTab();let u=o.build(t,n);if(u&&(c?u=l+" = "+u+";":u="return "+u+";"),t.removeFlowTab().addFlowCode(t.tab+"	"+u+`

`+t.tab+"}"),a!==null){t.addFlowCode(` else {

`).addFlowTab();let d=a.build(t,n);d&&(c?d=l+" = "+d+";":d="return "+d+";"),t.removeFlowTab().addFlowCode(t.tab+"	"+d+`

`+t.tab+`}

`)}else t.addFlowCode(`

`);return t.format(l,n,e)}}const Ti=ut(B9);rt("select",Ti);const U9=(...s)=>(console.warn("TSL.ConditionalNode: cond() has been renamed to select()."),Ti(...s));rt("cond",U9);class t2 extends se{static get type(){return"ContextNode"}constructor(t,e={}){super(),this.isContextNode=!0,this.node=t,this.value=e}getScope(){return this.node.getScope()}getNodeType(t){return this.node.getNodeType(t)}analyze(t){this.node.build(t)}setup(t){const e=t.getContext();t.setContext({...t.context,...this.value});const n=this.node.build(t);return t.setContext(e),n}generate(t,e){const n=t.getContext();t.setContext({...t.context,...this.value});const i=this.node.build(t,e);return t.setContext(n),i}}const Qb=ut(t2),k9=(s,t)=>Qb(s,{label:t});rt("context",Qb);rt("label",k9);class z9 extends se{static get type(){return"VarNode"}constructor(t,e=null){super(),this.node=t,this.name=e,this.global=!0,this.isVarNode=!0}getHash(t){return this.name||super.getHash(t)}getNodeType(t){return this.node.getNodeType(t)}generate(t){const{node:e,name:n}=this,i=t.getVarFromNode(this,n,t.getVectorType(this.getNodeType(t))),r=t.getPropertyName(i),o=e.build(t,i.type);return t.addLineFlowCode(`${r} = ${o}`,this),r}}const e2=ut(z9);rt("toVar",(...s)=>e2(...s).append());const V9=s=>(console.warn('TSL: "temp" is deprecated. Use ".toVar()" instead.'),e2(s));rt("temp",V9);class G9 extends se{static get type(){return"VaryingNode"}constructor(t,e=null){super(),this.node=t,this.name=e,this.isVaryingNode=!0}isGlobal(){return!0}getHash(t){return this.name||super.getHash(t)}getNodeType(t){return this.node.getNodeType(t)}setupVarying(t){const e=t.getNodeProperties(this);let n=e.varying;if(n===void 0){const i=this.name,r=this.getNodeType(t);e.varying=n=t.getVaryingFromNode(this,i,r),e.node=this.node}return n.needsInterpolation||(n.needsInterpolation=t.shaderStage==="fragment"),n}setup(t){this.setupVarying(t)}analyze(t){return this.setupVarying(t),this.node.analyze(t)}generate(t){const e=t.getNodeProperties(this),n=this.setupVarying(t);if(e.propertyName===void 0){const i=this.getNodeType(t),r=t.getPropertyName(n,Ww.VERTEX);t.flowNodeFromShaderStage(Ww.VERTEX,this.node,i,r),e.propertyName=r}return t.getPropertyName(n)}}const yo=ut(G9);rt("varying",yo);const H9=bt(([s])=>{const t=s.mul(.9478672986).add(.0521327014).pow(2.4),e=s.mul(.0773993808),n=s.lessThanEqual(.04045);return qe(t,e,n)}).setLayout({name:"sRGBTransferEOTF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),$9=bt(([s])=>{const t=s.pow(.41666).mul(1.055).sub(.055),e=s.mul(12.92),n=s.lessThanEqual(.0031308);return qe(t,e,n)}).setLayout({name:"sRGBTransferOETF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),Vd="WorkingColorSpace",Jb="OutputColorSpace";class Mg extends Mn{static get type(){return"ColorSpaceNode"}constructor(t,e,n){super("vec4"),this.colorNode=t,this.source=e,this.target=n}resolveColorSpace(t,e){return e===Vd?_n.workingColorSpace:e===Jb?t.context.outputColorSpace||t.renderer.outputColorSpace:e}setup(t){const{colorNode:e}=this,n=this.resolveColorSpace(t,this.source),i=this.resolveColorSpace(t,this.target);let r=e;return _n.enabled===!1||n===i||!n||!i||(_n.getTransfer(n)===sd&&(r=ee(H9(r.rgb),r.a)),_n.getPrimaries(n)!==_n.getPrimaries(i)&&(r=ee(mi(_n._getMatrix(new Ii,n,i)).mul(r.rgb),r.a)),_n.getTransfer(i)===sd&&(r=ee($9(r.rgb),r.a))),r}}const W9=s=>_t(new Mg(_t(s),Vd,Jb)),q9=s=>_t(new Mg(_t(s),Jb,Vd)),j9=(s,t)=>_t(new Mg(_t(s),Vd,t)),n2=(s,t)=>_t(new Mg(_t(s),t,Vd));rt("toOutputColorSpace",W9);rt("toWorkingColorSpace",q9);rt("workingToColorSpace",j9);rt("colorSpaceToWorking",n2);let X9=class extends kd{static get type(){return"ReferenceElementNode"}constructor(t,e){super(t,e),this.referenceNode=t,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(t){const e=super.generate(t),n=this.referenceNode.getNodeType(),i=this.getNodeType();return t.format(e,n,i)}};class i2 extends se{static get type(){return"ReferenceBaseNode"}constructor(t,e,n=null,i=null){super(),this.property=t,this.uniformType=e,this.object=n,this.count=i,this.properties=t.split("."),this.reference=n,this.node=null,this.group=null,this.updateType=he.OBJECT}setGroup(t){return this.group=t,this}element(t){return _t(new X9(this,_t(t)))}setNodeType(t){const e=ne(null,t).getSelf();this.group!==null&&e.setGroup(this.group),this.node=e}getNodeType(t){return this.node===null&&(this.updateReference(t),this.updateValue()),this.node.getNodeType(t)}getValueFromReference(t=this.reference){const{properties:e}=this;let n=t[e[0]];for(let i=1;i<e.length;i++)n=n[e[i]];return n}updateReference(t){return this.reference=this.object!==null?this.object:t.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){this.node===null&&this.setNodeType(this.uniformType);const t=this.getValueFromReference();Array.isArray(t)?this.node.array=t:this.node.value=t}}const Y9=(s,t,e)=>_t(new i2(s,t,e));class Z9 extends i2{static get type(){return"RendererReferenceNode"}constructor(t,e,n=null){super(t,e,n),this.renderer=n,this.setGroup(_e)}updateReference(t){return this.reference=this.renderer!==null?this.renderer:t.renderer,this.reference}}const K9=(s,t,e)=>_t(new Z9(s,t,e));class Q9 extends Mn{static get type(){return"ToneMappingNode"}constructor(t,e=tj,n=null){super("vec3"),this.toneMapping=t,this.exposureNode=e,this.colorNode=n}getCacheKey(){return Lm(super.getCacheKey(),this.toneMapping)}setup(t){const e=this.colorNode||t.context.color,n=this.toneMapping;if(n===Vl)return e;let i=null;const r=t.renderer.library.getToneMappingFunction(n);return r!==null?i=ee(r(e.rgb,this.exposureNode),e.a):(console.error("ToneMappingNode: Unsupported Tone Mapping configuration.",n),i=e),i}}const J9=(s,t,e)=>_t(new Q9(s,_t(t),_t(e))),tj=K9("toneMappingExposure","float");rt("toneMapping",(s,t,e)=>J9(t,e,s));class ej extends Gb{static get type(){return"BufferAttributeNode"}constructor(t,e=null,n=0,i=0){super(t,e),this.isBufferNode=!0,this.bufferType=e,this.bufferStride=n,this.bufferOffset=i,this.usage=Om,this.instanced=!1,this.attribute=null,this.global=!0,t&&t.isBufferAttribute===!0&&(this.attribute=t,this.usage=t.usage,this.instanced=t.isInstancedBufferAttribute)}getHash(t){if(this.bufferStride===0&&this.bufferOffset===0){let e=t.globalCache.getData(this.value);return e===void 0&&(e={node:this},t.globalCache.setData(this.value,e)),e.node.uuid}return this.uuid}getNodeType(t){return this.bufferType===null&&(this.bufferType=t.getTypeFromAttribute(this.attribute)),this.bufferType}setup(t){if(this.attribute!==null)return;const e=this.getNodeType(t),n=this.value,i=t.getTypeLength(e),r=this.bufferStride||i,o=this.bufferOffset,a=n.isInterleavedBuffer===!0?n:new dN(n,r),c=new Lb(a,i,o);a.setUsage(this.usage),this.attribute=c,this.attribute.isInstancedBufferAttribute=this.instanced}generate(t){const e=this.getNodeType(t),n=t.getBufferAttributeFromNode(this,e),i=t.getPropertyName(n);let r=null;return t.shaderStage==="vertex"||t.shaderStage==="compute"?(this.name=i,r=i):r=yo(this).build(t,e),r}getInputType(){return"bufferAttribute"}setUsage(t){return this.usage=t,this.attribute&&this.attribute.isBufferAttribute===!0&&(this.attribute.usage=t),this}setInstanced(t){return this.instanced=t,this}}const tS=(s,t,e,n)=>_t(new ej(s,t,e,n)),nj=(s,t,e,n)=>tS(s,t,e,n).setUsage(El),e1=(s,t,e,n)=>tS(s,t,e,n).setInstanced(!0),n1=(s,t,e,n)=>nj(s,t,e,n).setInstanced(!0);rt("toAttribute",s=>tS(s.value));class ij extends se{static get type(){return"ComputeNode"}constructor(t,e,n=[64]){super("void"),this.isComputeNode=!0,this.computeNode=t,this.count=e,this.workgroupSize=n,this.dispatchCount=0,this.version=1,this.updateBeforeType=he.OBJECT,this.onInitFunction=null,this.updateDispatchCount()}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}updateDispatchCount(){const{count:t,workgroupSize:e}=this;let n=e[0];for(let i=1;i<e.length;i++)n*=e[i];this.dispatchCount=Math.ceil(t/n)}onInit(t){return this.onInitFunction=t,this}updateBefore({renderer:t}){t.compute(this)}generate(t){const{shaderStage:e}=t;if(e==="compute"){const n=this.computeNode.build(t,"void");n!==""&&t.addLineFlowCode(n,this)}}}const sj=(s,t,e)=>_t(new ij(_t(s),t,e));rt("compute",sj);class rj extends se{static get type(){return"CacheNode"}constructor(t,e=!0){super(),this.node=t,this.parent=e,this.isCacheNode=!0}getNodeType(t){return this.node.getNodeType(t)}build(t,...e){const n=t.getCache(),i=t.getCacheFromNode(this,this.parent);t.setCache(i);const r=this.node.build(t,...e);return t.setCache(n),r}}const Xp=(s,...t)=>_t(new rj(_t(s),...t));rt("cache",Xp);class oj extends se{static get type(){return"BypassNode"}constructor(t,e){super(),this.isBypassNode=!0,this.outputNode=t,this.callNode=e}getNodeType(t){return this.outputNode.getNodeType(t)}generate(t){const e=this.callNode.build(t,"void");return e!==""&&t.addLineFlowCode(e,this),this.outputNode.build(t)}}const aj=ut(oj);rt("bypass",aj);class s2 extends se{static get type(){return"RemapNode"}constructor(t,e,n,i=ct(0),r=ct(1)){super(),this.node=t,this.inLowNode=e,this.inHighNode=n,this.outLowNode=i,this.outHighNode=r,this.doClamp=!0}setup(){const{node:t,inLowNode:e,inHighNode:n,outLowNode:i,outHighNode:r,doClamp:o}=this;let a=t.sub(e).div(n.sub(e));return o===!0&&(a=a.clamp()),a.mul(r.sub(i)).add(i)}}const cj=ut(s2,null,null,{doClamp:!1}),lj=ut(s2);rt("remap",cj);rt("remapClamp",lj);class hj extends se{static get type(){return"ExpressionNode"}constructor(t="",e="void"){super(e),this.snippet=t}generate(t,e){const n=this.getNodeType(t),i=this.snippet;if(n==="void")t.addLineFlowCode(i,this);else return t.format(`( ${i} )`,n,e)}}const hd=ut(hj),uj=s=>(s?Ti(s,hd("discard")):hd("discard")).append();rt("discard",uj);class dj extends Mn{static get type(){return"RenderOutputNode"}constructor(t,e,n){super("vec4"),this.colorNode=t,this.toneMapping=e,this.outputColorSpace=n,this.isRenderOutput=!0}setup({context:t}){let e=this.colorNode||t.color;const n=(this.toneMapping!==null?this.toneMapping:t.toneMapping)||Vl,i=(this.outputColorSpace!==null?this.outputColorSpace:t.outputColorSpace)||fc;return n!==Vl&&(e=e.toneMapping(n)),i!==fc&&i!==_n.workingColorSpace&&(e=e.workingToColorSpace(i)),e}}const fj=(s,t=null,e=null)=>_t(new dj(_t(s),t,e));rt("renderOutput",fj);class pj extends se{static get type(){return"AttributeNode"}constructor(t,e=null){super(e),this.global=!0,this._attributeName=t}getHash(t){return this.getAttributeName(t)}getNodeType(t){let e=this.nodeType;if(e===null){const n=this.getAttributeName(t);if(t.hasGeometryAttribute(n)){const i=t.geometry.getAttribute(n);e=t.getTypeFromAttribute(i)}else e="float"}return e}setAttributeName(t){return this._attributeName=t,this}getAttributeName(){return this._attributeName}generate(t){const e=this.getAttributeName(t),n=this.getNodeType(t);if(t.hasGeometryAttribute(e)===!0){const r=t.geometry.getAttribute(e),o=t.getTypeFromAttribute(r),a=t.getAttribute(e,o);return t.shaderStage==="vertex"?t.format(a.name,o,n):yo(this).build(t,n)}else return console.warn(`AttributeNode: Vertex attribute "${e}" not found on geometry.`),t.generateConst(n)}serialize(t){super.serialize(t),t.global=this.global,t._attributeName=this._attributeName}deserialize(t){super.deserialize(t),this.global=t.global,this._attributeName=t._attributeName}}const lo=(s,t)=>_t(new pj(s,t)),Tg=s=>lo("uv"+(s>0?s:""),"vec2");class mj extends se{static get type(){return"TextureSizeNode"}constructor(t,e=null){super("uvec2"),this.isTextureSizeNode=!0,this.textureNode=t,this.levelNode=e}generate(t,e){const n=this.textureNode.build(t,"property"),i=this.levelNode===null?"0":this.levelNode.build(t,"int");return t.format(`${t.getMethod("textureDimensions")}( ${n}, ${i} )`,this.getNodeType(t),e)}}const Lu=ut(mj);class gj extends zd{static get type(){return"MaxMipLevelNode"}constructor(t){super(0),this._textureNode=t,this.updateType=he.FRAME}get textureNode(){return this._textureNode}get texture(){return this._textureNode.value}update(){const t=this.texture,e=t.images,n=e&&e.length>0?e[0]&&e[0].image||e[0]:t.image;if(n&&n.width!==void 0){const{width:i,height:r}=n;this.value=Math.log2(Math.max(i,r))}}}const _j=ut(gj);class Gd extends zd{static get type(){return"TextureNode"}constructor(t,e=null,n=null,i=null){super(t),this.isTextureNode=!0,this.uvNode=e,this.levelNode=n,this.biasNode=i,this.compareNode=null,this.depthNode=null,this.gradNode=null,this.sampler=!0,this.updateMatrix=!1,this.updateType=he.NONE,this.referenceNode=null,this._value=t,this._matrixUniform=null,this.setUpdateMatrix(e===null)}set value(t){this.referenceNode?this.referenceNode.value=t:this._value=t}get value(){return this.referenceNode?this.referenceNode.value:this._value}getUniformHash(){return this.value.uuid}getNodeType(){return this.value.isDepthTexture===!0?"float":this.value.type===Un?"uvec4":this.value.type===li?"ivec4":"vec4"}getInputType(){return"texture"}getDefaultUV(){return Tg(this.value.channel)}updateReference(){return this.value}getTransformedUV(t){return this._matrixUniform===null&&(this._matrixUniform=ne(this.value.matrix)),this._matrixUniform.mul(ot(t,1)).xy}setUpdateMatrix(t){return this.updateMatrix=t,this.updateType=t?he.FRAME:he.NONE,this}setupUV(t,e){const n=this.value;return t.isFlipY()&&(n.isRenderTargetTexture===!0||n.isFramebufferTexture===!0||n.isDepthTexture===!0)&&(this.sampler?e=e.flipY():e=e.setY(on(Lu(this,this.levelNode).y).sub(e.y).sub(1))),e}setup(t){const e=t.getNodeProperties(this);e.referenceNode=this.referenceNode;let n=this.uvNode;(n===null||t.context.forceUVContext===!0)&&t.context.getUV&&(n=t.context.getUV(this)),n||(n=this.getDefaultUV()),this.updateMatrix===!0&&(n=this.getTransformedUV(n)),n=this.setupUV(t,n);let i=this.levelNode;i===null&&t.context.getTextureLevel&&(i=t.context.getTextureLevel(this)),e.uvNode=n,e.levelNode=i,e.biasNode=this.biasNode,e.compareNode=this.compareNode,e.gradNode=this.gradNode,e.depthNode=this.depthNode}generateUV(t,e){return e.build(t,this.sampler===!0?"vec2":"ivec2")}generateSnippet(t,e,n,i,r,o,a,c){const l=this.value;let h;return i?h=t.generateTextureLevel(l,e,n,i,o):r?h=t.generateTextureBias(l,e,n,r,o):c?h=t.generateTextureGrad(l,e,n,c,o):a?h=t.generateTextureCompare(l,e,n,a,o):this.sampler===!1?h=t.generateTextureLoad(l,e,n,o):h=t.generateTexture(l,e,n,o),h}generate(t,e){const n=t.getNodeProperties(this),i=this.value;if(!i||i.isTexture!==!0)throw new Error("TextureNode: Need a three.js texture.");const r=super.generate(t,"property");if(e==="sampler")return r+"_sampler";if(t.isReference(e))return r;{const o=t.getDataFromNode(this);let a=o.propertyName;if(a===void 0){const{uvNode:h,levelNode:u,biasNode:d,compareNode:f,depthNode:p,gradNode:_}=n,g=this.generateUV(t,h),m=u?u.build(t,"float"):null,x=d?d.build(t,"float"):null,v=p?p.build(t,"int"):null,y=f?f.build(t,"float"):null,b=_?[_[0].build(t,"vec2"),_[1].build(t,"vec2")]:null,S=t.getVarFromNode(this);a=t.getPropertyName(S);const M=this.generateSnippet(t,r,g,m,x,v,y,b);t.addLineFlowCode(`${a} = ${M}`,this),o.snippet=M,o.propertyName=a}let c=a;const l=this.getNodeType(t);return t.needsToWorkingColorSpace(i)&&(c=n2(hd(c,l),i.colorSpace).setup(t).build(t,l)),t.format(c,l,e)}}setSampler(t){return this.sampler=t,this}getSampler(){return this.sampler}uv(t){const e=this.clone();return e.uvNode=_t(t),e.referenceNode=this.getSelf(),_t(e)}blur(t){const e=this.clone();return e.biasNode=_t(t).mul(_j(e)),e.referenceNode=this.getSelf(),_t(e)}level(t){const e=this.clone();return e.levelNode=_t(t),e.referenceNode=this.getSelf(),_t(e)}size(t){return Lu(this,t)}bias(t){const e=this.clone();return e.biasNode=_t(t),e.referenceNode=this.getSelf(),_t(e)}compare(t){const e=this.clone();return e.compareNode=_t(t),e.referenceNode=this.getSelf(),_t(e)}grad(t,e){const n=this.clone();return n.gradNode=[_t(t),_t(e)],n.referenceNode=this.getSelf(),_t(n)}depth(t){const e=this.clone();return e.depthNode=_t(t),e.referenceNode=this.getSelf(),_t(e)}serialize(t){super.serialize(t),t.value=this.value.toJSON(t.meta).uuid,t.sampler=this.sampler,t.updateMatrix=this.updateMatrix,t.updateType=this.updateType}deserialize(t){super.deserialize(t),this.value=t.meta.textures[t.value],this.sampler=t.sampler,this.updateMatrix=t.updateMatrix,this.updateType=t.updateType}update(){const t=this.value,e=this._matrixUniform;e!==null&&(e.value=t.matrix),t.matrixAutoUpdate===!0&&t.updateMatrix()}clone(){const t=new this.constructor(this.value,this.uvNode,this.levelNode,this.biasNode);return t.sampler=this.sampler,t}}const an=ut(Gd),Ms=(...s)=>an(...s).setSampler(!1),Ha=ne("float").label("cameraNear").setGroup(_e).onRenderUpdate(({camera:s})=>s.near),$a=ne("float").label("cameraFar").setGroup(_e).onRenderUpdate(({camera:s})=>s.far),$m=ne("mat4").label("cameraProjectionMatrix").setGroup(_e).onRenderUpdate(({camera:s})=>s.projectionMatrix),xo=ne("mat4").label("cameraViewMatrix").setGroup(_e).onRenderUpdate(({camera:s})=>s.matrixWorldInverse),yj=ne(new Z).label("cameraPosition").setGroup(_e).onRenderUpdate(({camera:s},t)=>t.value.setFromMatrixPosition(s.matrixWorld));class Te extends se{static get type(){return"Object3DNode"}constructor(t,e=null){super(),this.scope=t,this.object3d=e,this.updateType=he.OBJECT,this._uniformNode=new zd(null)}getNodeType(){const t=this.scope;if(t===Te.WORLD_MATRIX)return"mat4";if(t===Te.POSITION||t===Te.VIEW_POSITION||t===Te.DIRECTION||t===Te.SCALE)return"vec3"}update(t){const e=this.object3d,n=this._uniformNode,i=this.scope;if(i===Te.WORLD_MATRIX)n.value=e.matrixWorld;else if(i===Te.POSITION)n.value=n.value||new Z,n.value.setFromMatrixPosition(e.matrixWorld);else if(i===Te.SCALE)n.value=n.value||new Z,n.value.setFromMatrixScale(e.matrixWorld);else if(i===Te.DIRECTION)n.value=n.value||new Z,e.getWorldDirection(n.value);else if(i===Te.VIEW_POSITION){const r=t.camera;n.value=n.value||new Z,n.value.setFromMatrixPosition(e.matrixWorld),n.value.applyMatrix4(r.matrixWorldInverse)}}generate(t){const e=this.scope;return e===Te.WORLD_MATRIX?this._uniformNode.nodeType="mat4":(e===Te.POSITION||e===Te.VIEW_POSITION||e===Te.DIRECTION||e===Te.SCALE)&&(this._uniformNode.nodeType="vec3"),this._uniformNode.build(t)}serialize(t){super.serialize(t),t.scope=this.scope}deserialize(t){super.deserialize(t),this.scope=t.scope}}Te.WORLD_MATRIX="worldMatrix";Te.POSITION="position";Te.SCALE="scale";Te.VIEW_POSITION="viewPosition";Te.DIRECTION="direction";Te.DIRECTION;Te.WORLD_MATRIX;Te.POSITION;Te.SCALE;Te.VIEW_POSITION;class sr extends Te{static get type(){return"ModelNode"}constructor(t){super(t)}update(t){this.object3d=t.object,super.update(t)}}sr.DIRECTION;const _c=vt(sr,sr.WORLD_MATRIX);sr.POSITION;sr.SCALE;sr.VIEW_POSITION;const xj=ne(new Ii).onObjectUpdate(({object:s},t)=>t.value.getNormalMatrix(s.matrixWorld)),wg=xo.mul(_c).toVar("modelViewMatrix"),r2=lo("position","vec3"),Hn=r2.varying("positionLocal"),i1=r2.varying("positionPrevious"),Xx=_c.mul(Hn).xyz.varying("v_positionWorld"),o2=Hn.transformDirection(_c).varying("v_positionWorldDirection").normalize().toVar("positionWorldDirection"),zn=wg.mul(Hn).xyz.varying("v_positionView"),en=zn.negate().varying("v_positionViewDirection").normalize().toVar("positionViewDirection");class vj extends se{static get type(){return"FrontFacingNode"}constructor(){super("bool"),this.isFrontFacingNode=!0}generate(t){const{renderer:e,material:n}=t;return e.coordinateSystem===Os&&n.side===Vs?"false":t.getFrontFacing()}}const bj=vt(vj),Ag=ct(bj).mul(2).sub(1),a2=lo("normal","vec3"),rr=bt(s=>s.geometry.hasAttribute("normal")===!1?(console.warn('TSL.NormalNode: Vertex attribute "normal" not found on geometry.'),ot(0,1,0)):a2,"vec3").once()().toVar("normalLocal"),Sj=zn.dFdx().cross(zn.dFdy()).normalize().toVar("normalFlat"),Hs=bt(s=>{let t;return s.material.flatShading===!0?t=Sj:t=yo(l2(rr),"v_normalView").normalize(),t},"vec3").once()().toVar("normalView"),c2=yo(Hs.transformDirection(xo),"v_normalWorld").normalize().toVar("normalWorld"),xn=bt(s=>s.context.setupNormal(),"vec3").once()().mul(Ag).toVar("transformedNormalView"),eS=xn.transformDirection(xo).toVar("transformedNormalWorld"),Mu=bt(s=>s.context.setupClearcoatNormal(),"vec3").once()().mul(Ag).toVar("transformedClearcoatNormalView"),Mj=bt(([s,t=_c])=>{const e=mi(t),n=s.div(ot(e[0].dot(e[0]),e[1].dot(e[1]),e[2].dot(e[2])));return e.mul(n).xyz}),l2=bt(([s],t)=>{const e=t.renderer.nodes.modelNormalViewMatrix;if(e!==null)return e.transformDirection(s);const n=xj.mul(s);return xo.transformDirection(n)}),Tj=ne(0).onReference(({material:s})=>s).onRenderUpdate(({material:s})=>s.refractionRatio),wj=en.negate().reflect(xn),Aj=en.negate().refract(xn,Tj),Ej=wj.transformDirection(xo).toVar("reflectVector"),Cj=Aj.transformDirection(xo).toVar("reflectVector");class Rj extends Gd{static get type(){return"CubeTextureNode"}constructor(t,e=null,n=null,i=null){super(t,e,n,i),this.isCubeTextureNode=!0}getInputType(){return"cubeTexture"}getDefaultUV(){const t=this.value;return t.mapping===dc?Ej:t.mapping===uh?Cj:(console.error('THREE.CubeTextureNode: Mapping "%s" not supported.',t.mapping),ot(0,0,0))}setUpdateMatrix(){}setupUV(t,e){const n=this.value;return t.renderer.coordinateSystem===pc||!n.isRenderTargetTexture?ot(e.x.negate(),e.yz):e}generateUV(t,e){return e.build(t,"vec3")}}const ud=ut(Rj);class h2 extends zd{static get type(){return"BufferNode"}constructor(t,e,n=0){super(t,e),this.isBufferNode=!0,this.bufferType=e,this.bufferCount=n}getElementType(t){return this.getNodeType(t)}getInputType(){return"buffer"}}const nS=(s,t,e)=>_t(new h2(s,t,e));class Nj extends kd{static get type(){return"UniformArrayElementNode"}constructor(t,e){super(t,e),this.isArrayBufferElementNode=!0}generate(t){const e=super.generate(t),n=this.getNodeType();return t.format(e,"vec4",n)}}class Pj extends h2{static get type(){return"UniformArrayNode"}constructor(t,e=null){super(null,"vec4"),this.array=t,this.elementType=e,this._elementType=null,this._elementLength=0,this.updateType=he.RENDER,this.isArrayBufferNode=!0}getElementType(){return this.elementType||this._elementType}getElementLength(){return this._elementLength}update(){const{array:t,value:e}=this,n=this.getElementLength(),i=this.getElementType();if(n===1)for(let r=0;r<t.length;r++){const o=r*4;e[o]=t[r]}else if(i==="color")for(let r=0;r<t.length;r++){const o=r*4,a=t[r];e[o]=a.r,e[o+1]=a.g,e[o+2]=a.b||0}else for(let r=0;r<t.length;r++){const o=r*4,a=t[r];e[o]=a.x,e[o+1]=a.y,e[o+2]=a.z||0,e[o+3]=a.w||0}}setup(t){const e=this.array.length;this._elementType=this.elementType===null?Um(this.array[0]):this.elementType,this._elementLength=t.getTypeLength(this._elementType);let n=Float32Array;return this._elementType.charAt(0)==="i"?n=Int32Array:this._elementType.charAt(0)==="u"&&(n=Uint32Array),this.value=new n(e*4),this.bufferCount=e,this.bufferType=t.changeComponentType("vec4",t.getComponentType(this._elementType)),super.setup(t)}element(t){return _t(new Nj(this,_t(t)))}}const dd=(s,t)=>_t(new Pj(s,t));class Dj extends kd{static get type(){return"ReferenceElementNode"}constructor(t,e){super(t,e),this.referenceNode=t,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(t){const e=super.generate(t),n=this.referenceNode.getNodeType(),i=this.getNodeType();return t.format(e,n,i)}}class iS extends se{static get type(){return"ReferenceNode"}constructor(t,e,n=null,i=null){super(),this.property=t,this.uniformType=e,this.object=n,this.count=i,this.properties=t.split("."),this.reference=n,this.node=null,this.group=null,this.name=null,this.updateType=he.OBJECT}element(t){return _t(new Dj(this,_t(t)))}setGroup(t){return this.group=t,this}label(t){return this.name=t,this}setNodeType(t){let e=null;this.count!==null?e=nS(null,t,this.count):Array.isArray(this.getValueFromReference())?e=dd(null,t):t==="texture"?e=an(null):t==="cubeTexture"?e=ud(null):e=ne(null,t),this.group!==null&&e.setGroup(this.group),this.name!==null&&e.label(this.name),this.node=e.getSelf()}getNodeType(t){return this.node===null&&(this.updateReference(t),this.updateValue()),this.node.getNodeType(t)}getValueFromReference(t=this.reference){const{properties:e}=this;let n=t[e[0]];for(let i=1;i<e.length;i++)n=n[e[i]];return n}updateReference(t){return this.reference=this.object!==null?this.object:t.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){this.node===null&&this.setNodeType(this.uniformType);const t=this.getValueFromReference();Array.isArray(t)?this.node.array=t:this.node.value=t}}const nn=(s,t,e)=>_t(new iS(s,t,e)),s1=(s,t,e,n)=>_t(new iS(s,t,n,e));class Ij extends iS{static get type(){return"MaterialReferenceNode"}constructor(t,e,n=null){super(t,e,n),this.material=n,this.isMaterialReferenceNode=!0}updateReference(t){return this.reference=this.material!==null?this.material:t.material,this.reference}}const Yo=(s,t,e)=>_t(new Ij(s,t,e)),u2=bt(s=>(s.geometry.hasAttribute("tangent")===!1&&s.geometry.computeTangents(),lo("tangent","vec4")))(),sS=u2.xyz.toVar("tangentLocal"),d2=wg.mul(ee(sS,0)).xyz.varying("v_tangentView").normalize().toVar("tangentView"),Fj=s=>s.mul(u2.w).xyz,Oj=yo(Fj(Hs.cross(d2)),"v_bitangentView").normalize().toVar("bitangentView"),Tu=mi(d2,Oj,Hs),Lj=(()=>{let s=ql.cross(en);return s=s.cross(ql).normalize(),s=qe(s,xn,Ba.mul(Hr.oneMinus()).oneMinus().pow2().pow2()).normalize(),s})(),Bj=bt(s=>{const{eye_pos:t,surf_norm:e,mapN:n,uv:i}=s,r=t.dFdx(),o=t.dFdy(),a=i.dFdx(),c=i.dFdy(),l=e,h=o.cross(l),u=l.cross(r),d=h.mul(a.x).add(u.mul(c.x)),f=h.mul(a.y).add(u.mul(c.y)),p=d.dot(d).max(f.dot(f)),_=Ag.mul(p.inverseSqrt());return gi(d.mul(n.x,_),f.mul(n.y,_),l.mul(n.z)).normalize()});class Uj extends Mn{static get type(){return"NormalMapNode"}constructor(t,e=null){super("vec3"),this.node=t,this.scaleNode=e,this.normalMapType=la}setup(t){const{normalMapType:e,scaleNode:n}=this;let i=this.node.mul(2).sub(1);n!==null&&(i=ot(i.xy.mul(n),i.z));let r=null;return e===D8?r=l2(i):e===la&&(t.hasGeometryAttribute("tangent")===!0?r=Tu.mul(i).normalize():r=Bj({eye_pos:zn,surf_norm:Hs,mapN:i,uv:Tg()})),r}}const r1=ut(Uj),kj=bt(({textureNode:s,bumpScale:t})=>{const e=i=>s.cache().context({getUV:r=>i(r.uvNode||Tg()),forceUVContext:!0}),n=ct(e(i=>i));return At(ct(e(i=>i.add(i.dFdx()))).sub(n),ct(e(i=>i.add(i.dFdy()))).sub(n)).mul(t)}),zj=bt(s=>{const{surf_pos:t,surf_norm:e,dHdxy:n}=s,i=t.dFdx().normalize(),r=t.dFdy().normalize(),o=e,a=r.cross(o),c=o.cross(i),l=i.dot(a).mul(Ag),h=l.sign().mul(n.x.mul(a).add(n.y.mul(c)));return l.abs().mul(e).sub(h).normalize()});class Vj extends Mn{static get type(){return"BumpMapNode"}constructor(t,e=null){super("vec3"),this.textureNode=t,this.scaleNode=e}setup(){const t=this.scaleNode!==null?this.scaleNode:1,e=kj({textureNode:this.textureNode,bumpScale:t});return zj({surf_pos:zn,surf_norm:Hs,dHdxy:e})}}const Gj=ut(Vj),o1=new Map;class it extends se{static get type(){return"MaterialNode"}constructor(t){super(),this.scope=t}getCache(t,e){let n=o1.get(t);return n===void 0&&(n=Yo(t,e),o1.set(t,n)),n}getFloat(t){return this.getCache(t,"float")}getColor(t){return this.getCache(t,"color")}getTexture(t){return this.getCache(t==="map"?"map":t+"Map","texture")}setup(t){const e=t.context.material,n=this.scope;let i=null;if(n===it.COLOR){const r=e.color!==void 0?this.getColor(n):ot();e.map&&e.map.isTexture===!0?i=r.mul(this.getTexture("map")):i=r}else if(n===it.OPACITY){const r=this.getFloat(n);e.alphaMap&&e.alphaMap.isTexture===!0?i=r.mul(this.getTexture("alpha")):i=r}else if(n===it.SPECULAR_STRENGTH)e.specularMap&&e.specularMap.isTexture===!0?i=this.getTexture("specular").r:i=ct(1);else if(n===it.SPECULAR_INTENSITY){const r=this.getFloat(n);e.specularMap?i=r.mul(this.getTexture(n).a):i=r}else if(n===it.SPECULAR_COLOR){const r=this.getColor(n);e.specularColorMap&&e.specularColorMap.isTexture===!0?i=r.mul(this.getTexture(n).rgb):i=r}else if(n===it.ROUGHNESS){const r=this.getFloat(n);e.roughnessMap&&e.roughnessMap.isTexture===!0?i=r.mul(this.getTexture(n).g):i=r}else if(n===it.METALNESS){const r=this.getFloat(n);e.metalnessMap&&e.metalnessMap.isTexture===!0?i=r.mul(this.getTexture(n).b):i=r}else if(n===it.EMISSIVE){const r=this.getFloat("emissiveIntensity"),o=this.getColor(n).mul(r);e.emissiveMap&&e.emissiveMap.isTexture===!0?i=o.mul(this.getTexture(n)):i=o}else if(n===it.NORMAL)e.normalMap?(i=r1(this.getTexture("normal"),this.getCache("normalScale","vec2")),i.normalMapType=e.normalMapType):e.bumpMap?i=Gj(this.getTexture("bump").r,this.getFloat("bumpScale")):i=Hs;else if(n===it.CLEARCOAT){const r=this.getFloat(n);e.clearcoatMap&&e.clearcoatMap.isTexture===!0?i=r.mul(this.getTexture(n).r):i=r}else if(n===it.CLEARCOAT_ROUGHNESS){const r=this.getFloat(n);e.clearcoatRoughnessMap&&e.clearcoatRoughnessMap.isTexture===!0?i=r.mul(this.getTexture(n).r):i=r}else if(n===it.CLEARCOAT_NORMAL)e.clearcoatNormalMap?i=r1(this.getTexture(n),this.getCache(n+"Scale","vec2")):i=Hs;else if(n===it.SHEEN){const r=this.getColor("sheenColor").mul(this.getFloat("sheen"));e.sheenColorMap&&e.sheenColorMap.isTexture===!0?i=r.mul(this.getTexture("sheenColor").rgb):i=r}else if(n===it.SHEEN_ROUGHNESS){const r=this.getFloat(n);e.sheenRoughnessMap&&e.sheenRoughnessMap.isTexture===!0?i=r.mul(this.getTexture(n).a):i=r,i=i.clamp(.07,1)}else if(n===it.ANISOTROPY)if(e.anisotropyMap&&e.anisotropyMap.isTexture===!0){const r=this.getTexture(n);i=qb(cu.x,cu.y,cu.y.negate(),cu.x).mul(r.rg.mul(2).sub(At(1)).normalize().mul(r.b))}else i=cu;else if(n===it.IRIDESCENCE_THICKNESS){const r=nn("1","float",e.iridescenceThicknessRange);if(e.iridescenceThicknessMap){const o=nn("0","float",e.iridescenceThicknessRange);i=r.sub(o).mul(this.getTexture(n).g).add(o)}else i=r}else if(n===it.TRANSMISSION){const r=this.getFloat(n);e.transmissionMap?i=r.mul(this.getTexture(n).r):i=r}else if(n===it.THICKNESS){const r=this.getFloat(n);e.thicknessMap?i=r.mul(this.getTexture(n).g):i=r}else if(n===it.IOR)i=this.getFloat(n);else if(n===it.LIGHT_MAP)i=this.getTexture(n).rgb.mul(this.getFloat("lightMapIntensity"));else if(n===it.AO_MAP)i=this.getTexture(n).r.sub(1).mul(this.getFloat("aoMapIntensity")).add(1);else{const r=this.getNodeType(t);i=this.getCache(n,r)}return i}}it.ALPHA_TEST="alphaTest";it.COLOR="color";it.OPACITY="opacity";it.SHININESS="shininess";it.SPECULAR="specular";it.SPECULAR_STRENGTH="specularStrength";it.SPECULAR_INTENSITY="specularIntensity";it.SPECULAR_COLOR="specularColor";it.REFLECTIVITY="reflectivity";it.ROUGHNESS="roughness";it.METALNESS="metalness";it.NORMAL="normal";it.CLEARCOAT="clearcoat";it.CLEARCOAT_ROUGHNESS="clearcoatRoughness";it.CLEARCOAT_NORMAL="clearcoatNormal";it.EMISSIVE="emissive";it.ROTATION="rotation";it.SHEEN="sheen";it.SHEEN_ROUGHNESS="sheenRoughness";it.ANISOTROPY="anisotropy";it.IRIDESCENCE="iridescence";it.IRIDESCENCE_IOR="iridescenceIOR";it.IRIDESCENCE_THICKNESS="iridescenceThickness";it.IOR="ior";it.TRANSMISSION="transmission";it.THICKNESS="thickness";it.ATTENUATION_DISTANCE="attenuationDistance";it.ATTENUATION_COLOR="attenuationColor";it.LINE_SCALE="scale";it.LINE_DASH_SIZE="dashSize";it.LINE_GAP_SIZE="gapSize";it.LINE_WIDTH="linewidth";it.LINE_DASH_OFFSET="dashOffset";it.POINT_WIDTH="pointWidth";it.DISPERSION="dispersion";it.LIGHT_MAP="light";it.AO_MAP="ao";const Hj=vt(it,it.ALPHA_TEST),$j=vt(it,it.COLOR),Wj=vt(it,it.SHININESS),qj=vt(it,it.EMISSIVE),f2=vt(it,it.OPACITY),jj=vt(it,it.SPECULAR),a1=vt(it,it.SPECULAR_INTENSITY),Xj=vt(it,it.SPECULAR_COLOR),Yp=vt(it,it.SPECULAR_STRENGTH),v0=vt(it,it.REFLECTIVITY),Yj=vt(it,it.ROUGHNESS),Zj=vt(it,it.METALNESS),Kj=vt(it,it.NORMAL).context({getUV:null}),Qj=vt(it,it.CLEARCOAT),Jj=vt(it,it.CLEARCOAT_ROUGHNESS),tX=vt(it,it.CLEARCOAT_NORMAL).context({getUV:null}),eX=vt(it,it.ROTATION),nX=vt(it,it.SHEEN),iX=vt(it,it.SHEEN_ROUGHNESS),sX=vt(it,it.ANISOTROPY),rX=vt(it,it.IRIDESCENCE),oX=vt(it,it.IRIDESCENCE_IOR),aX=vt(it,it.IRIDESCENCE_THICKNESS),cX=vt(it,it.TRANSMISSION),lX=vt(it,it.THICKNESS),hX=vt(it,it.IOR),uX=vt(it,it.ATTENUATION_DISTANCE),dX=vt(it,it.ATTENUATION_COLOR),fX=vt(it,it.LINE_SCALE),pX=vt(it,it.LINE_DASH_SIZE),mX=vt(it,it.LINE_GAP_SIZE);it.LINE_WIDTH;it.LINE_DASH_OFFSET;it.POINT_WIDTH;const gX=vt(it,it.DISPERSION),p2=vt(it,it.LIGHT_MAP),_X=vt(it,it.AO_MAP),cu=ne(new xe).onReference(function(s){return s.material}).onRenderUpdate(function({material:s}){this.value.set(s.anisotropy*Math.cos(s.anisotropyRotation),s.anisotropy*Math.sin(s.anisotropyRotation))});class yX extends Mn{static get type(){return"ModelViewProjectionNode"}constructor(t=null){super("vec4"),this.positionNode=t}setup(t){if(t.shaderStage==="fragment")return yo(t.context.mvp);const e=this.positionNode||Hn,n=t.renderer.nodes.modelViewMatrix||wg;return $m.mul(n).mul(e)}}const Yx=ut(yX);class je extends se{static get type(){return"IndexNode"}constructor(t){super("uint"),this.scope=t,this.isInstanceIndexNode=!0}generate(t){const e=this.getNodeType(t),n=this.scope;let i;if(n===je.VERTEX)i=t.getVertexIndex();else if(n===je.INSTANCE)i=t.getInstanceIndex();else if(n===je.DRAW)i=t.getDrawIndex();else if(n===je.INVOCATION_LOCAL)i=t.getInvocationLocalIndex();else if(n===je.INVOCATION_SUBGROUP)i=t.getInvocationSubgroupIndex();else if(n===je.SUBGROUP)i=t.getSubgroupIndex();else throw new Error("THREE.IndexNode: Unknown scope: "+n);let r;return t.shaderStage==="vertex"||t.shaderStage==="compute"?r=i:r=yo(this).build(t,e),r}}je.VERTEX="vertex";je.INSTANCE="instance";je.SUBGROUP="subgroup";je.INVOCATION_LOCAL="invocationLocal";je.INVOCATION_SUBGROUP="invocationSubgroup";je.DRAW="draw";const xX=vt(je,je.VERTEX),rS=vt(je,je.INSTANCE);je.SUBGROUP;je.INVOCATION_SUBGROUP;je.INVOCATION_LOCAL;const vX=vt(je,je.DRAW);class bX extends se{static get type(){return"InstanceNode"}constructor(t){super("void"),this.instanceMesh=t,this.instanceMatrixNode=null,this.instanceColorNode=null,this.updateType=he.FRAME,this.buffer=null,this.bufferColor=null}setup(t){let e=this.instanceMatrixNode,n=this.instanceColorNode;const i=this.instanceMesh;if(e===null){const a=i.instanceMatrix;if(i.count<=1e3)e=nS(a.array,"mat4",Math.max(i.count,1)).element(rS);else{const c=new K6(a.array,16,1);this.buffer=c;const l=a.usage===El?n1:e1,h=[l(c,"vec4",16,0),l(c,"vec4",16,4),l(c,"vec4",16,8),l(c,"vec4",16,12)];e=Wl(...h)}this.instanceMatrixNode=e}const r=i.instanceColor;if(r&&n===null){const a=new B6(r.array,3),c=r.usage===El?n1:e1;this.bufferColor=a,n=ot(c(a,"vec3",3,0)),this.instanceColorNode=n}const o=e.mul(Hn).xyz;if(Hn.assign(o),t.hasGeometryAttribute("normal")){const a=Mj(rr,e);rr.assign(a)}this.instanceColorNode!==null&&zm("vec3","vInstanceColor").assign(this.instanceColorNode)}update(){this.instanceMesh.instanceMatrix.usage!==El&&this.buffer!=null&&this.instanceMesh.instanceMatrix.version!==this.buffer.version&&(this.buffer.version=this.instanceMesh.instanceMatrix.version),this.instanceMesh.instanceColor&&this.instanceMesh.instanceColor.usage!==El&&this.bufferColor!=null&&this.instanceMesh.instanceColor.version!==this.bufferColor.version&&(this.bufferColor.version=this.instanceMesh.instanceColor.version)}}const SX=ut(bX);class MX extends se{static get type(){return"BatchNode"}constructor(t){super("void"),this.batchMesh=t,this.batchingIdNode=null}setup(t){this.batchingIdNode===null&&(t.getDrawIndex()===null?this.batchingIdNode=rS:this.batchingIdNode=vX);const n=bt(([p])=>{const _=Lu(Ms(this.batchMesh._indirectTexture),0),g=on(p).modInt(on(_)),m=on(p).div(on(_));return Ms(this.batchMesh._indirectTexture,Ur(g,m)).x}).setLayout({name:"getIndirectIndex",type:"uint",inputs:[{name:"id",type:"int"}]})(on(this.batchingIdNode)),i=this.batchMesh._matricesTexture,r=Lu(Ms(i),0),o=ct(n).mul(4).toInt().toVar(),a=o.modInt(r),c=o.div(on(r)),l=Wl(Ms(i,Ur(a,c)),Ms(i,Ur(a.add(1),c)),Ms(i,Ur(a.add(2),c)),Ms(i,Ur(a.add(3),c))),h=this.batchMesh._colorsTexture;if(h!==null){const _=bt(([g])=>{const m=Lu(Ms(h),0).x,x=g,v=x.modInt(m),y=x.div(m);return Ms(h,Ur(v,y)).rgb}).setLayout({name:"getBatchingColor",type:"vec3",inputs:[{name:"id",type:"int"}]})(n);zm("vec3","vBatchColor").assign(_)}const u=mi(l);Hn.assign(l.mul(Hn));const d=rr.div(ot(u[0].dot(u[0]),u[1].dot(u[1]),u[2].dot(u[2]))),f=u.mul(d).xyz;rr.assign(f),t.hasGeometryAttribute("tangent")&&sS.mulAssign(u)}}const TX=ut(MX),c1=new WeakMap;class wX extends se{static get type(){return"SkinningNode"}constructor(t,e=!1){super("void"),this.skinnedMesh=t,this.useReference=e,this.updateType=he.OBJECT,this.skinIndexNode=lo("skinIndex","uvec4"),this.skinWeightNode=lo("skinWeight","vec4");let n,i,r;e?(n=nn("bindMatrix","mat4"),i=nn("bindMatrixInverse","mat4"),r=s1("skeleton.boneMatrices","mat4",t.skeleton.bones.length)):(n=ne(t.bindMatrix,"mat4"),i=ne(t.bindMatrixInverse,"mat4"),r=nS(t.skeleton.boneMatrices,"mat4",t.skeleton.bones.length)),this.bindMatrixNode=n,this.bindMatrixInverseNode=i,this.boneMatricesNode=r,this.previousBoneMatricesNode=null}getSkinnedPosition(t=this.boneMatricesNode,e=Hn){const{skinIndexNode:n,skinWeightNode:i,bindMatrixNode:r,bindMatrixInverseNode:o}=this,a=t.element(n.x),c=t.element(n.y),l=t.element(n.z),h=t.element(n.w),u=r.mul(e),d=gi(a.mul(i.x).mul(u),c.mul(i.y).mul(u),l.mul(i.z).mul(u),h.mul(i.w).mul(u));return o.mul(d).xyz}getSkinnedNormal(t=this.boneMatricesNode,e=rr){const{skinIndexNode:n,skinWeightNode:i,bindMatrixNode:r,bindMatrixInverseNode:o}=this,a=t.element(n.x),c=t.element(n.y),l=t.element(n.z),h=t.element(n.w);let u=gi(i.x.mul(a),i.y.mul(c),i.z.mul(l),i.w.mul(h));return u=o.mul(u).mul(r),u.transformDirection(e).xyz}getPreviousSkinnedPosition(t){const e=t.object;return this.previousBoneMatricesNode===null&&(e.skeleton.previousBoneMatrices=new Float32Array(e.skeleton.boneMatrices),this.previousBoneMatricesNode=s1("skeleton.previousBoneMatrices","mat4",e.skeleton.bones.length)),this.getSkinnedPosition(this.previousBoneMatricesNode,i1)}needsPreviousBoneMatrices(t){const e=t.renderer.getMRT();return e&&e.has("velocity")}setup(t){this.needsPreviousBoneMatrices(t)&&i1.assign(this.getPreviousSkinnedPosition(t));const e=this.getSkinnedPosition();if(Hn.assign(e),t.hasGeometryAttribute("normal")){const n=this.getSkinnedNormal();rr.assign(n),t.hasGeometryAttribute("tangent")&&sS.assign(n)}}generate(t,e){if(e!=="void")return Hn.build(t,e)}update(t){const n=(this.useReference?t.object:this.skinnedMesh).skeleton;c1.get(n)!==t.frameId&&(c1.set(n,t.frameId),this.previousBoneMatricesNode!==null&&n.previousBoneMatrices.set(n.boneMatrices),n.update())}}const AX=s=>_t(new wX(s,!0));class EX extends se{static get type(){return"LoopNode"}constructor(t=[]){super(),this.params=t}getVarName(t){return String.fromCharCode("i".charCodeAt()+t)}getProperties(t){const e=t.getNodeProperties(this);if(e.stackNode!==void 0)return e;const n={};for(let r=0,o=this.params.length-1;r<o;r++){const a=this.params[r],c=a.isNode!==!0&&a.name||this.getVarName(r),l=a.isNode!==!0&&a.type||"int";n[c]=hd(c,l)}const i=t.addStack();return e.returnsNode=this.params[this.params.length-1](n,i,t),e.stackNode=i,t.removeStack(),e}getNodeType(t){const{returnsNode:e}=this.getProperties(t);return e?e.getNodeType(t):"void"}setup(t){this.getProperties(t)}generate(t){const e=this.getProperties(t),n=this.params,i=e.stackNode;for(let a=0,c=n.length-1;a<c;a++){const l=n[a];let h=null,u=null,d=null,f=null,p=null,_=null;l.isNode?(f="int",d=this.getVarName(a),h="0",u=l.build(t,f),p="<"):(f=l.type||"int",d=l.name||this.getVarName(a),h=l.start,u=l.end,p=l.condition,_=l.update,typeof h=="number"?h=t.generateConst(f,h):h&&h.isNode&&(h=h.build(t,f)),typeof u=="number"?u=t.generateConst(f,u):u&&u.isNode&&(u=u.build(t,f)),h!==void 0&&u===void 0?(h=h+" - 1",u="0",p=">="):u!==void 0&&h===void 0&&(h="0",p="<"),p===void 0&&(Number(h)>Number(u)?p=">=":p="<"));const g={start:h,end:u,condition:p},m=g.start,x=g.end;let v="",y="",b="";_||(f==="int"||f==="uint"?p.includes("<")?_="++":_="--":p.includes("<")?_="+= 1.":_="-= 1."),v+=t.getVar(f,d)+" = "+m,y+=d+" "+p+" "+x,b+=d+" "+_;const S=`for ( ${v}; ${y}; ${b} )`;t.addFlowCode((a===0?`
`:"")+t.tab+S+` {

`).addFlowTab()}const r=i.build(t,"void"),o=e.returnsNode?e.returnsNode.build(t):"";t.removeFlowTab().addFlowCode(`
`+t.tab+r);for(let a=0,c=this.params.length-1;a<c;a++)t.addFlowCode((a===0?"":t.tab)+`}

`).removeFlowTab();return t.addFlowTab(),o}}const Qs=(...s)=>_t(new EX($l(s,"int"))).append(),CX=()=>hd("break").append(),b0=new WeakMap,Gi=new Ne,l1=bt(({bufferMap:s,influence:t,stride:e,width:n,depth:i,offset:r})=>{const o=on(xX).mul(e).add(r),a=o.div(n),c=o.sub(a.mul(n));return Ms(s,Ur(c,a)).depth(i).mul(t)});function RX(s){const t=s.morphAttributes.position!==void 0,e=s.morphAttributes.normal!==void 0,n=s.morphAttributes.color!==void 0,i=s.morphAttributes.position||s.morphAttributes.normal||s.morphAttributes.color,r=i!==void 0?i.length:0;let o=b0.get(s);if(o===void 0||o.count!==r){let x=function(){g.dispose(),b0.delete(s),s.removeEventListener("dispose",x)};var a=x;o!==void 0&&o.texture.dispose();const c=s.morphAttributes.position||[],l=s.morphAttributes.normal||[],h=s.morphAttributes.color||[];let u=0;t===!0&&(u=1),e===!0&&(u=2),n===!0&&(u=3);let d=s.attributes.position.count*u,f=1;const p=4096;d>p&&(f=Math.ceil(d/p),d=p);const _=new Float32Array(d*f*4*r),g=new _6(_,d,f,r);g.type=ji,g.needsUpdate=!0;const m=u*4;for(let v=0;v<r;v++){const y=c[v],b=l[v],S=h[v],M=d*f*4*v;for(let T=0;T<y.count;T++){const A=T*m;t===!0&&(Gi.fromBufferAttribute(y,T),_[M+A+0]=Gi.x,_[M+A+1]=Gi.y,_[M+A+2]=Gi.z,_[M+A+3]=0),e===!0&&(Gi.fromBufferAttribute(b,T),_[M+A+4]=Gi.x,_[M+A+5]=Gi.y,_[M+A+6]=Gi.z,_[M+A+7]=0),n===!0&&(Gi.fromBufferAttribute(S,T),_[M+A+8]=Gi.x,_[M+A+9]=Gi.y,_[M+A+10]=Gi.z,_[M+A+11]=S.itemSize===4?Gi.w:1)}}o={count:r,texture:g,stride:u,size:new xe(d,f)},b0.set(s,o),s.addEventListener("dispose",x)}return o}class NX extends se{static get type(){return"MorphNode"}constructor(t){super("void"),this.mesh=t,this.morphBaseInfluence=ne(1),this.updateType=he.OBJECT}setup(t){const{geometry:e}=t,n=e.morphAttributes.position!==void 0,i=e.hasAttribute("normal")&&e.morphAttributes.normal!==void 0,r=e.morphAttributes.position||e.morphAttributes.normal||e.morphAttributes.color,o=r!==void 0?r.length:0,{texture:a,stride:c,size:l}=RX(e);n===!0&&Hn.mulAssign(this.morphBaseInfluence),i===!0&&rr.mulAssign(this.morphBaseInfluence);const h=on(l.width);Qs(o,({i:u})=>{const d=ct(0).toVar();this.mesh.count>1&&this.mesh.morphTexture!==null&&this.mesh.morphTexture!==void 0?d.assign(Ms(this.mesh.morphTexture,Ur(on(u).add(1),on(rS))).r):d.assign(nn("morphTargetInfluences","float").element(u).toVar()),n===!0&&Hn.addAssign(l1({bufferMap:a,influence:d,stride:c,width:h,depth:u,offset:on(0)})),i===!0&&rr.addAssign(l1({bufferMap:a,influence:d,stride:c,width:h,depth:u,offset:on(1)}))})}update(){const t=this.morphBaseInfluence;this.mesh.geometry.morphTargetsRelative?t.value=1:t.value=1-this.mesh.morphTargetInfluences.reduce((e,n)=>e+n,0)}}const PX=ut(NX);class Lh extends se{static get type(){return"LightingNode"}constructor(){super("vec3"),this.isLightingNode=!0}generate(){console.warn("Abstract function.")}}class DX extends Lh{static get type(){return"AONode"}constructor(t=null){super(),this.aoNode=t}setup(t){t.context.ambientOcclusion.mulAssign(this.aoNode)}}class IX extends t2{static get type(){return"LightingContextNode"}constructor(t,e=null,n=null,i=null){super(t),this.lightingModel=e,this.backdropNode=n,this.backdropAlphaNode=i,this._value=null}getContext(){const{backdropNode:t,backdropAlphaNode:e}=this,n=ot().toVar("directDiffuse"),i=ot().toVar("directSpecular"),r=ot().toVar("indirectDiffuse"),o=ot().toVar("indirectSpecular"),a={directDiffuse:n,directSpecular:i,indirectDiffuse:r,indirectSpecular:o};return{radiance:ot().toVar("radiance"),irradiance:ot().toVar("irradiance"),iblIrradiance:ot().toVar("iblIrradiance"),ambientOcclusion:ct(1).toVar("ambientOcclusion"),reflectedLight:a,backdrop:t,backdropAlpha:e}}setup(t){return this.value=this._value||(this._value=this.getContext()),this.value.lightingModel=this.lightingModel||t.context.lightingModel,super.setup(t)}}const FX=ut(IX);class OX extends Lh{static get type(){return"IrradianceNode"}constructor(t){super(),this.node=t}setup(t){t.context.irradiance.addAssign(this.node)}}let lu,hu;class yn extends se{static get type(){return"ScreenNode"}constructor(t){super(),this.scope=t,this.isViewportNode=!0}getNodeType(){return this.scope===yn.VIEWPORT?"vec4":"vec2"}getUpdateType(){let t=he.NONE;return(this.scope===yn.SIZE||this.scope===yn.VIEWPORT)&&(t=he.RENDER),this.updateType=t,t}update({renderer:t}){const e=t.getRenderTarget();this.scope===yn.VIEWPORT?e!==null?hu.copy(e.viewport):(t.getViewport(hu),hu.multiplyScalar(t.getPixelRatio())):e!==null?(lu.width=e.width,lu.height=e.height):t.getDrawingBufferSize(lu)}setup(){const t=this.scope;let e=null;return t===yn.SIZE?e=ne(lu||(lu=new xe)):t===yn.VIEWPORT?e=ne(hu||(hu=new Ne)):e=At(Eg.div(Zx)),e}generate(t){if(this.scope===yn.COORDINATE){let e=t.getFragCoord();if(t.isFlipY()){const n=t.getNodeProperties(Zx).outputNode.build(t);e=`${t.getType("vec2")}( ${e}.x, ${n}.y - ${e}.y )`}return e}return super.generate(t)}}yn.COORDINATE="coordinate";yn.VIEWPORT="viewport";yn.SIZE="size";yn.UV="uv";const fd=vt(yn,yn.UV),Zx=vt(yn,yn.SIZE),Eg=vt(yn,yn.COORDINATE),m2=vt(yn,yn.VIEWPORT);m2.zw;m2.xy;const uu=new xe;class g2 extends Gd{static get type(){return"ViewportTextureNode"}constructor(t=fd,e=null,n=null){n===null&&(n=new z6,n.minFilter=Jr),super(n,t,e),this.generateMipmaps=!1,this.isOutputTextureNode=!0,this.updateBeforeType=he.FRAME}updateBefore(t){const e=t.renderer;e.getDrawingBufferSize(uu);const n=this.value;(n.image.width!==uu.width||n.image.height!==uu.height)&&(n.image.width=uu.width,n.image.height=uu.height,n.needsUpdate=!0);const i=n.generateMipmaps;n.generateMipmaps=this.generateMipmaps,e.copyFramebufferToTexture(n),n.generateMipmaps=i}clone(){const t=new this.constructor(this.uvNode,this.levelNode,this.value);return t.generateMipmaps=this.generateMipmaps,t}}const _2=ut(g2,null,null,{generateMipmaps:!0});let S0=null;class LX extends g2{static get type(){return"ViewportDepthTextureNode"}constructor(t=fd,e=null){S0===null&&(S0=new Fh),super(t,e,S0)}}const BX=ut(LX);class wi extends se{static get type(){return"ViewportDepthNode"}constructor(t,e=null){super("float"),this.scope=t,this.valueNode=e,this.isViewportDepthNode=!0}generate(t){const{scope:e}=this;return e===wi.DEPTH_BASE?t.getFragDepth():super.generate(t)}setup({camera:t}){const{scope:e}=this,n=this.valueNode;let i=null;if(e===wi.DEPTH_BASE)n!==null&&(i=v2().assign(n));else if(e===wi.DEPTH)t.isPerspectiveCamera?i=UX(zn.z,Ha,$a):i=Bu(zn.z,Ha,$a);else if(e===wi.LINEAR_DEPTH)if(n!==null)if(t.isPerspectiveCamera){const r=y2(n,Ha,$a);i=Bu(r,Ha,$a)}else i=n;else i=Bu(zn.z,Ha,$a);return i}}wi.DEPTH_BASE="depthBase";wi.DEPTH="depth";wi.LINEAR_DEPTH="linearDepth";const Bu=(s,t,e)=>s.add(t).div(t.sub(e)),UX=(s,t,e)=>t.add(s).mul(e).div(e.sub(t).mul(s)),y2=(s,t,e)=>t.mul(e).div(e.sub(t).mul(s).sub(e)),x2=(s,t,e)=>{t=t.max(1e-6).toVar();const n=so(s.div(t).add(1)),i=so(e.div(t).add(1));return n.div(i)},v2=ut(wi,wi.DEPTH_BASE),b2=vt(wi,wi.DEPTH),kX=ut(wi,wi.LINEAR_DEPTH);BX();b2.assign=s=>v2(s);class ua extends se{static get type(){return"ClippingNode"}constructor(t=ua.DEFAULT){super(),this.scope=t}setup(t){super.setup(t);const e=t.clippingContext,{localClipIntersection:n,localClippingCount:i,globalClippingCount:r}=e,o=r+i,a=n?o-i:o;return this.scope===ua.ALPHA_TO_COVERAGE?this.setupAlphaToCoverage(e.planes,o,a):this.setupDefault(e.planes,o,a)}setupAlphaToCoverage(t,e,n){return bt(()=>{const i=dd(t),r=bl("float","distanceToPlane"),o=bl("float","distanceToGradient"),a=bl("float","clipOpacity");a.assign(1);let c;if(Qs(n,({i:l})=>{c=i.element(l),r.assign(zn.dot(c.xyz).negate().add(c.w)),o.assign(r.fwidth().div(2)),a.mulAssign(gc(o.negate(),o,r)),a.equal(0).discard()}),n<e){const l=bl("float","unionclipOpacity");l.assign(1),Qs({start:n,end:e},({i:h})=>{c=i.element(h),r.assign(zn.dot(c.xyz).negate().add(c.w)),o.assign(r.fwidth().div(2)),l.mulAssign(gc(o.negate(),o,r).oneMinus())}),a.mulAssign(l.oneMinus())}we.a.mulAssign(a),we.a.equal(0).discard()})()}setupDefault(t,e,n){return bt(()=>{const i=dd(t);let r;if(Qs(n,({i:o})=>{r=i.element(o),zn.dot(r.xyz).greaterThan(r.w).discard()}),n<e){const o=bl("bool","clipped");o.assign(!0),Qs({start:n,end:e},({i:a})=>{r=i.element(a),o.assign(zn.dot(r.xyz).greaterThan(r.w).and(o))}),o.discard()}})()}}ua.ALPHA_TO_COVERAGE="alphaToCoverage";ua.DEFAULT="default";const zX=()=>_t(new ua),VX=()=>_t(new ua(ua.ALPHA_TO_COVERAGE)),GX=.05,h1=bt(([s])=>ga(de(1e4,Es(de(17,s.x).add(de(.1,s.y)))).mul(gi(.1,Cs(Es(de(13,s.y).add(s.x))))))),u1=bt(([s])=>h1(At(h1(s.xy),s.z))),HX=bt(([s])=>{const t=ls(sa(jN(s.xyz)),sa(XN(s.xyz))).toVar("maxDeriv"),e=ct(1).div(ct(GX).mul(t)).toVar("pixScale"),n=At(ad(tc(so(e))),ad(Zb(so(e)))).toVar("pixScales"),i=At(u1(tc(n.x.mul(s.xyz))),u1(tc(n.y.mul(s.xyz)))).toVar("alpha"),r=ga(so(e)).toVar("lerpFactor"),o=gi(de(r.oneMinus(),i.x),de(r,i.y)).toVar("x"),a=ld(r,r.oneMinus()).toVar("a"),c=ot(o.mul(o).div(de(2,a).mul(qi(1,a))),o.sub(de(.5,a)).div(qi(1,a)),qi(1,qi(1,o).mul(qi(1,o)).div(de(2,a).mul(qi(1,a))))).toVar("cases"),l=o.lessThan(a.oneMinus()).select(o.lessThan(a).select(c.x,c.y),c.z);return co(l,1e-6,1)});class Sn extends Ni{static get type(){return"NodeMaterial"}constructor(){super(),this.isNodeMaterial=!0,this.type=this.constructor.type,this.forceSinglePass=!1,this.fog=!0,this.lights=!1,this.lightsNode=null,this.envNode=null,this.aoNode=null,this.colorNode=null,this.normalNode=null,this.opacityNode=null,this.backdropNode=null,this.backdropAlphaNode=null,this.alphaTestNode=null,this.positionNode=null,this.geometryNode=null,this.depthNode=null,this.shadowNode=null,this.shadowPositionNode=null,this.outputNode=null,this.mrtNode=null,this.fragmentNode=null,this.vertexNode=null}customProgramCacheKey(){return this.type+AN(this)}build(t){this.setup(t)}setupObserver(t){return new J6(t)}setup(t){t.context.setupNormal=()=>this.setupNormal(t),t.addStack(),t.stack.outputNode=this.vertexNode||this.setupPosition(t),this.geometryNode!==null&&(t.stack.outputNode=t.stack.outputNode.bypass(this.geometryNode)),t.addFlow("vertex",t.removeStack()),t.addStack();let e;const n=this.setupClipping(t);if(this.depthWrite===!0&&this.setupDepth(t),this.fragmentNode===null){this.setupDiffuseColor(t),this.setupVariants(t);const i=this.setupLighting(t);n!==null&&t.stack.add(n);const r=ee(i,we.a).max(0);if(e=this.setupOutput(t,r),Bq.assign(e),this.outputNode!==null&&(e=this.outputNode),t.renderer.getRenderTarget()!==null){const a=t.renderer.getMRT(),c=this.mrtNode;a!==null?(e=a,c!==null&&(e=a.merge(c))):c!==null&&(e=c)}}else{let i=this.fragmentNode;i.isOutputStructNode!==!0&&(i=ee(i)),e=this.setupOutput(t,i)}t.stack.outputNode=e,t.addFlow("fragment",t.removeStack()),t.monitor=this.setupObserver(t)}setupClipping(t){if(t.clippingContext===null)return null;const{globalClippingCount:e,localClippingCount:n}=t.clippingContext;let i=null;if(e||n){const r=t.renderer.samples;this.alphaToCoverage&&r>1?i=VX():t.stack.add(zX())}return i}setupDepth(t){const{renderer:e,camera:n}=t;let i=this.depthNode;if(i===null){const r=e.getMRT();r&&r.has("depth")?i=r.get("depth"):e.logarithmicDepthBuffer===!0&&(n.isPerspectiveCamera?i=x2(Yx().w,Ha,$a):i=Bu(zn.z,Ha,$a))}i!==null&&b2.assign(i).append()}setupPosition(t){const{object:e}=t,n=e.geometry;if(t.addStack(),(n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color)&&PX(e).append(),e.isSkinnedMesh===!0&&AX(e).append(),this.displacementMap){const r=Yo("displacementMap","texture"),o=Yo("displacementScale","float"),a=Yo("displacementBias","float");Hn.addAssign(rr.normalize().mul(r.x.mul(o).add(a)))}e.isBatchedMesh&&TX(e).append(),e.instanceMatrix&&e.instanceMatrix.isInstancedBufferAttribute===!0&&SX(e).append(),this.positionNode!==null&&Hn.assign(this.positionNode);const i=Yx();return t.context.vertex=t.removeStack(),t.context.mvp=i,i}setupDiffuseColor({object:t,geometry:e}){let n=this.colorNode?ee(this.colorNode):$j;this.vertexColors===!0&&e.hasAttribute("color")&&(n=ee(n.xyz.mul(lo("color","vec3")),n.a)),t.instanceColor&&(n=zm("vec3","vInstanceColor").mul(n)),t.isBatchedMesh&&t._colorsTexture&&(n=zm("vec3","vBatchColor").mul(n)),we.assign(n);const i=this.opacityNode?ct(this.opacityNode):f2;if(we.a.assign(we.a.mul(i)),this.alphaTestNode!==null||this.alphaTest>0){const r=this.alphaTestNode!==null?ct(this.alphaTestNode):Hj;we.a.lessThanEqual(r).discard()}this.alphaHash===!0&&we.a.lessThan(HX(Hn)).discard(),this.transparent===!1&&this.blending===ea&&this.alphaToCoverage===!1&&we.a.assign(1)}setupVariants(){}setupOutgoingLight(){return this.lights===!0?ot(0):we.rgb}setupNormal(){return this.normalNode?ot(this.normalNode):Kj}setupEnvironment(){let t=null;return this.envNode?t=this.envNode:this.envMap&&(t=this.envMap.isCubeTexture?Yo("envMap","cubeTexture"):Yo("envMap","texture")),t}setupLightMap(t){let e=null;return t.material.lightMap&&(e=new OX(p2)),e}setupLights(t){const e=[],n=this.setupEnvironment(t);n&&n.isLightingNode&&e.push(n);const i=this.setupLightMap(t);if(i&&i.isLightingNode&&e.push(i),this.aoNode!==null||t.material.aoMap){const o=this.aoNode!==null?this.aoNode:_X;e.push(new DX(o))}let r=this.lightsNode||t.lightsNode;return e.length>0&&(r=t.renderer.lighting.createNode([...r.getLights(),...e])),r}setupLightingModel(){}setupLighting(t){const{material:e}=t,{backdropNode:n,backdropAlphaNode:i,emissiveNode:r}=this,a=this.lights===!0||this.lightsNode!==null?this.setupLights(t):null;let c=this.setupOutgoingLight(t);if(a&&a.getScope().hasLights){const l=this.setupLightingModel(t);c=FX(a,l,n,i)}else n!==null&&(c=ot(i!==null?qe(c,n,i):n));return(r&&r.isNode===!0||e.emissive&&e.emissive.isColor===!0)&&(Jw.assign(ot(r||qj)),c=c.add(Jw)),c}setupOutput(t,e){if(this.fog===!0){const n=t.fogNode;n&&(e=ee(n.mix(e.rgb,n.colorNode),e.a))}return e}setDefaultValues(t){for(const n in t){const i=t[n];this[n]===void 0&&(this[n]=i,i&&i.clone&&(this[n]=i.clone()))}const e=Object.getOwnPropertyDescriptors(t.constructor.prototype);for(const n in e)Object.getOwnPropertyDescriptor(this.constructor.prototype,n)===void 0&&e[n].get!==void 0&&Object.defineProperty(this.constructor.prototype,n,e[n])}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{},nodes:{}});const n=Ni.prototype.toJSON.call(this,t),i=Bm(this);n.inputNodes={};for(const{property:o,childNode:a}of i)n.inputNodes[o]=a.toJSON(t).uuid;function r(o){const a=[];for(const c in o){const l=o[c];delete l.metadata,a.push(l)}return a}if(e){const o=r(t.textures),a=r(t.images),c=r(t.nodes);o.length>0&&(n.textures=o),a.length>0&&(n.images=a),c.length>0&&(n.nodes=c)}return n}copy(t){return this.lightsNode=t.lightsNode,this.envNode=t.envNode,this.colorNode=t.colorNode,this.normalNode=t.normalNode,this.opacityNode=t.opacityNode,this.backdropNode=t.backdropNode,this.backdropAlphaNode=t.backdropAlphaNode,this.alphaTestNode=t.alphaTestNode,this.positionNode=t.positionNode,this.geometryNode=t.geometryNode,this.depthNode=t.depthNode,this.shadowNode=t.shadowNode,this.shadowPositionNode=t.shadowPositionNode,this.outputNode=t.outputNode,this.mrtNode=t.mrtNode,this.fragmentNode=t.fragmentNode,this.vertexNode=t.vertexNode,super.copy(t)}}const $X=new Bb;class WX extends Sn{static get type(){return"LineBasicNodeMaterial"}constructor(t){super(),this.isLineBasicNodeMaterial=!0,this.lights=!1,this.setDefaultValues($X),this.setValues(t)}}const qX=new MN;class jX extends Sn{static get type(){return"LineDashedNodeMaterial"}constructor(t){super(),this.isLineDashedNodeMaterial=!0,this.lights=!1,this.setDefaultValues(qX),this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.setValues(t)}setupVariants(){const t=this.offsetNode,e=this.dashScaleNode?ct(this.dashScaleNode):fX,n=this.dashSizeNode?ct(this.dashSizeNode):pX,i=this.dashSizeNode?ct(this.dashGapNode):mX;x0.assign(n),t1.assign(i);const r=yo(lo("lineDistance").mul(e));(t?r.add(t):r).mod(x0.add(t1)).greaterThan(x0).discard()}}const XX=s=>_t(s).mul(.5).add(.5),YX=new vN;class ZX extends Sn{static get type(){return"MeshNormalNodeMaterial"}constructor(t){super(),this.lights=!1,this.isMeshNormalNodeMaterial=!0,this.setDefaultValues(YX),this.setValues(t)}setupDiffuseColor(){const t=this.opacityNode?ct(this.opacityNode):f2;we.assign(ee(XX(xn),t))}}class KX extends Mn{static get type(){return"EquirectUVNode"}constructor(t=o2){super("vec2"),this.dirNode=t}setup(){const t=this.dirNode,e=t.z.atan2(t.x).mul(1/(Math.PI*2)).add(.5),n=t.y.clamp(-1,1).asin().mul(1/Math.PI).add(.5);return At(e,n)}}const S2=ut(KX);class M2 extends O6{constructor(t=1,e={}){super(t,e),this.isCubeRenderTarget=!0}fromEquirectangularTexture(t,e){const n=e.minFilter,i=e.generateMipmaps;e.generateMipmaps=!0,this.texture.type=e.type,this.texture.colorSpace=e.colorSpace,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const r=new Ud(5,5,5),o=S2(o2),a=new Sn;a.colorNode=an(e,o,0),a.side=Vs,a.blending=hh;const c=new mc(r,a),l=new uN;l.add(c),e.minFilter===Jr&&(e.minFilter=Yi);const h=new hN(1,10,this),u=t.getMRT();return t.setMRT(null),h.update(t,l),t.setMRT(u),e.minFilter=n,e.currentGenerateMipmaps=i,c.geometry.dispose(),c.material.dispose(),this}}const Uu=new WeakMap;class QX extends Mn{static get type(){return"CubeMapNode"}constructor(t){super("vec3"),this.envNode=t,this._cubeTexture=null,this._cubeTextureNode=ud();const e=new Ob;e.isRenderTargetTexture=!0,this._defaultTexture=e,this.updateBeforeType=he.RENDER}updateBefore(t){const{renderer:e,material:n}=t,i=this.envNode;if(i.isTextureNode||i.isMaterialReferenceNode){const r=i.isTextureNode?i.value:n[i.property];if(r&&r.isTexture){const o=r.mapping;if(o===Id||o===Fd){if(Uu.has(r)){const a=Uu.get(r);d1(a,r.mapping),this._cubeTexture=a}else{const a=r.image;if(JX(a)){const c=new M2(a.height);c.fromEquirectangularTexture(e,r),d1(c.texture,r.mapping),this._cubeTexture=c.texture,Uu.set(r,c.texture),r.addEventListener("dispose",T2)}else this._cubeTexture=this._defaultTexture}this._cubeTextureNode.value=this._cubeTexture}else this._cubeTextureNode=this.envNode}}}setup(t){return this.updateBefore(t),this._cubeTextureNode}}function JX(s){return s==null?!1:s.height>0}function T2(s){const t=s.target;t.removeEventListener("dispose",T2);const e=Uu.get(t);e!==void 0&&(Uu.delete(t),e.dispose())}function d1(s,t){t===Id?s.mapping=dc:t===Fd&&(s.mapping=uh)}const w2=ut(QX);class oS extends Lh{static get type(){return"BasicEnvironmentNode"}constructor(t=null){super(),this.envNode=t}setup(t){t.context.environment=w2(this.envNode)}}class t7 extends Lh{static get type(){return"BasicLightMapNode"}constructor(t=null){super(),this.lightMapNode=t}setup(t){const e=ct(1/Math.PI);t.context.irradianceLightMap=this.lightMapNode.mul(e)}}class Cg{start(){}finish(){}direct(){}directRectArea(){}indirect(){}ambientOcclusion(){}}class A2 extends Cg{constructor(){super()}indirect(t,e,n){const i=t.ambientOcclusion,r=t.reflectedLight,o=n.context.irradianceLightMap;r.indirectDiffuse.assign(ee(0)),o?r.indirectDiffuse.addAssign(o):r.indirectDiffuse.addAssign(ee(1,1,1,0)),r.indirectDiffuse.mulAssign(i),r.indirectDiffuse.mulAssign(we.rgb)}finish(t,e,n){const i=n.material,r=t.outgoingLight,o=n.context.environment;if(o)switch(i.combine){case _g:r.rgb.assign(qe(r.rgb,r.rgb.mul(o.rgb),Yp.mul(v0)));break;case _8:r.rgb.assign(qe(r.rgb,o.rgb,Yp.mul(v0)));break;case y8:r.rgb.addAssign(o.rgb.mul(Yp.mul(v0)));break;default:console.warn("THREE.BasicLightingModel: Unsupported .combine value:",i.combine);break}}}const e7=new yg;class n7 extends Sn{static get type(){return"MeshBasicNodeMaterial"}constructor(t){super(),this.isMeshBasicNodeMaterial=!0,this.lights=!0,this.setDefaultValues(e7),this.setValues(t)}setupNormal(){return Hs}setupEnvironment(t){const e=super.setupEnvironment(t);return e?new oS(e):null}setupLightMap(t){let e=null;return t.material.lightMap&&(e=new t7(p2)),e}setupOutgoingLight(){return we.rgb}setupLightingModel(){return new A2}}const pd=bt(({f0:s,f90:t,dotVH:e})=>{const n=e.mul(-5.55473).sub(6.98316).mul(e).exp2();return s.mul(n.oneMinus()).add(t.mul(n))}),ph=bt(s=>s.diffuseColor.mul(1/Math.PI)),i7=()=>ct(.25),s7=bt(({dotNH:s})=>qx.mul(ct(.5)).add(1).mul(ct(1/Math.PI)).mul(s.pow(qx))),r7=bt(({lightDirection:s})=>{const t=s.add(en).normalize(),e=xn.dot(t).clamp(),n=en.dot(t).clamp(),i=pd({f0:$i,f90:1,dotVH:n}),r=i7(),o=s7({dotNH:e});return i.mul(r).mul(o)});class E2 extends A2{constructor(t=!0){super(),this.specular=t}direct({lightDirection:t,lightColor:e,reflectedLight:n}){const r=xn.dot(t).clamp().mul(e);n.directDiffuse.addAssign(r.mul(ph({diffuseColor:we.rgb}))),this.specular===!0&&n.directSpecular.addAssign(r.mul(r7({lightDirection:t})).mul(Yp))}indirect({ambientOcclusion:t,irradiance:e,reflectedLight:n}){n.indirectDiffuse.addAssign(e.mul(ph({diffuseColor:we}))),n.indirectDiffuse.mulAssign(t)}}const o7=new bN;class a7 extends Sn{static get type(){return"MeshLambertNodeMaterial"}constructor(t){super(),this.isMeshLambertNodeMaterial=!0,this.lights=!0,this.setDefaultValues(o7),this.setValues(t)}setupEnvironment(t){const e=super.setupEnvironment(t);return e?new oS(e):null}setupLightingModel(){return new E2(!1)}}const c7=new yN;class l7 extends Sn{static get type(){return"MeshPhongNodeMaterial"}constructor(t){super(),this.isMeshPhongNodeMaterial=!0,this.lights=!0,this.shininessNode=null,this.specularNode=null,this.setDefaultValues(c7),this.setValues(t)}setupEnvironment(t){const e=super.setupEnvironment(t);return e?new oS(e):null}setupLightingModel(){return new E2}setupVariants(){const t=(this.shininessNode?ct(this.shininessNode):Wj).max(1e-4);qx.assign(t);const e=this.specularNode||jj;$i.assign(e)}copy(t){return this.shininessNode=t.shininessNode,this.specularNode=t.specularNode,super.copy(t)}}const h7=bt(s=>{if(s.geometry.hasAttribute("normal")===!1)return ct(0);const t=Hs.dFdx().abs().max(Hs.dFdy().abs());return t.x.max(t.y).max(t.z)}),C2=bt(s=>{const{roughness:t}=s,e=h7();let n=t.max(.0525);return n=n.add(e),n=n.min(1),n}),u7=bt(({alpha:s,dotNL:t,dotNV:e})=>{const n=s.pow2(),i=t.mul(n.add(n.oneMinus().mul(e.pow2())).sqrt()),r=e.mul(n.add(n.oneMinus().mul(t.pow2())).sqrt());return ha(.5,i.add(r).max(r9))}).setLayout({name:"V_GGX_SmithCorrelated",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNL",type:"float"},{name:"dotNV",type:"float"}]}),d7=bt(({alphaT:s,alphaB:t,dotTV:e,dotBV:n,dotTL:i,dotBL:r,dotNV:o,dotNL:a})=>{const c=a.mul(ot(s.mul(e),t.mul(n),o).length()),l=o.mul(ot(s.mul(i),t.mul(r),a).length());return ha(.5,c.add(l)).saturate()}).setLayout({name:"V_GGX_SmithCorrelated_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotTV",type:"float",qualifier:"in"},{name:"dotBV",type:"float",qualifier:"in"},{name:"dotTL",type:"float",qualifier:"in"},{name:"dotBL",type:"float",qualifier:"in"},{name:"dotNV",type:"float",qualifier:"in"},{name:"dotNL",type:"float",qualifier:"in"}]}),f7=bt(({alpha:s,dotNH:t})=>{const e=s.pow2(),n=t.pow2().mul(e.oneMinus()).oneMinus();return e.div(n.pow2()).mul(1/Math.PI)}).setLayout({name:"D_GGX",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNH",type:"float"}]}),p7=ct(1/Math.PI),m7=bt(({alphaT:s,alphaB:t,dotNH:e,dotTH:n,dotBH:i})=>{const r=s.mul(t),o=ot(t.mul(n),s.mul(i),r.mul(e)),a=o.dot(o),c=r.div(a);return p7.mul(r.mul(c.pow2()))}).setLayout({name:"D_GGX_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotNH",type:"float",qualifier:"in"},{name:"dotTH",type:"float",qualifier:"in"},{name:"dotBH",type:"float",qualifier:"in"}]}),f1=bt(s=>{const{lightDirection:t,f0:e,f90:n,roughness:i,f:r,USE_IRIDESCENCE:o,USE_ANISOTROPY:a}=s,c=s.normalView||xn,l=i.pow2(),h=t.add(en).normalize(),u=c.dot(t).clamp(),d=c.dot(en).clamp(),f=c.dot(h).clamp(),p=en.dot(h).clamp();let _=pd({f0:e,f90:n,dotVH:p}),g,m;if(Qw(o)&&(_=Xb.mix(_,r)),Qw(a)){const x=qp.dot(t),v=qp.dot(en),y=qp.dot(h),b=ql.dot(t),S=ql.dot(en),M=ql.dot(h);g=d7({alphaT:Wx,alphaB:l,dotTV:v,dotBV:S,dotTL:x,dotBL:b,dotNV:d,dotNL:u}),m=m7({alphaT:Wx,alphaB:l,dotNH:f,dotTH:y,dotBH:M})}else g=u7({alpha:l,dotNL:u,dotNV:d}),m=f7({alpha:l,dotNH:f});return _.mul(g).mul(m)}),R2=bt(({roughness:s,dotNV:t})=>{const e=ee(-1,-.0275,-.572,.022),n=ee(1,.0425,1.04,-.04),i=s.mul(e).add(n),r=i.x.mul(i.x).min(t.mul(-9.28).exp2()).mul(i.x).add(i.y);return At(-1.04,1.04).mul(r).add(i.zw)}).setLayout({name:"DFGApprox",type:"vec2",inputs:[{name:"roughness",type:"float"},{name:"dotNV",type:"vec3"}]}),N2=bt(s=>{const{dotNV:t,specularColor:e,specularF90:n,roughness:i}=s,r=R2({dotNV:t,roughness:i});return e.mul(r.x).add(n.mul(r.y))}),g7=bt(({f:s,f90:t,dotVH:e})=>{const n=e.oneMinus().saturate(),i=n.mul(n),r=n.mul(i,i).clamp(0,.9999);return s.sub(ot(t).mul(r)).div(r.oneMinus())}).setLayout({name:"Schlick_to_F0",type:"vec3",inputs:[{name:"f",type:"vec3"},{name:"f90",type:"float"},{name:"dotVH",type:"float"}]}),_7=bt(({roughness:s,dotNH:t})=>{const e=s.pow2(),n=ct(1).div(e),r=t.pow2().oneMinus().max(.0078125);return ct(2).add(n).mul(r.pow(n.mul(.5))).div(2*Math.PI)}).setLayout({name:"D_Charlie",type:"float",inputs:[{name:"roughness",type:"float"},{name:"dotNH",type:"float"}]}),y7=bt(({dotNV:s,dotNL:t})=>ct(1).div(ct(4).mul(t.add(s).sub(t.mul(s))))).setLayout({name:"V_Neubelt",type:"float",inputs:[{name:"dotNV",type:"float"},{name:"dotNL",type:"float"}]}),x7=bt(({lightDirection:s})=>{const t=s.add(en).normalize(),e=xn.dot(s).clamp(),n=xn.dot(en).clamp(),i=xn.dot(t).clamp(),r=_7({roughness:jb,dotNH:i}),o=y7({dotNV:n,dotNL:e});return Rl.mul(r).mul(o)}),v7=bt(({N:s,V:t,roughness:e})=>{const r=.0078125,o=s.dot(t).saturate(),a=At(e,o.oneMinus().sqrt());return a.assign(a.mul(.984375).add(r)),a}).setLayout({name:"LTC_Uv",type:"vec2",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"roughness",type:"float"}]}),b7=bt(({f:s})=>{const t=s.length();return ls(t.mul(t).add(s.z).div(t.add(1)),0)}).setLayout({name:"LTC_ClippedSphereFormFactor",type:"float",inputs:[{name:"f",type:"vec3"}]}),ap=bt(({v1:s,v2:t})=>{const e=s.dot(t),n=e.abs().toVar(),i=n.mul(.0145206).add(.4965155).mul(n).add(.8543985).toVar(),r=n.add(4.1616724).mul(n).add(3.417594).toVar(),o=i.div(r),a=e.greaterThan(0).select(o,ls(e.mul(e).oneMinus(),1e-7).inverseSqrt().mul(.5).sub(o));return s.cross(t).mul(a)}).setLayout({name:"LTC_EdgeVectorFormFactor",type:"vec3",inputs:[{name:"v1",type:"vec3"},{name:"v2",type:"vec3"}]}),p1=bt(({N:s,V:t,P:e,mInv:n,p0:i,p1:r,p2:o,p3:a})=>{const c=r.sub(i).toVar(),l=a.sub(i).toVar(),h=c.cross(l),u=ot().toVar();return Gn(h.dot(e.sub(i)).greaterThanEqual(0),()=>{const d=t.sub(s.mul(t.dot(s))).normalize(),f=s.cross(d).negate(),p=n.mul(mi(d,f,s).transpose()).toVar(),_=p.mul(i.sub(e)).normalize().toVar(),g=p.mul(r.sub(e)).normalize().toVar(),m=p.mul(o.sub(e)).normalize().toVar(),x=p.mul(a.sub(e)).normalize().toVar(),v=ot(0).toVar();v.addAssign(ap({v1:_,v2:g})),v.addAssign(ap({v1:g,v2:m})),v.addAssign(ap({v1:m,v2:x})),v.addAssign(ap({v1:x,v2:_})),u.assign(ot(b7({f:v})))}),u}).setLayout({name:"LTC_Evaluate",type:"vec3",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"P",type:"vec3"},{name:"mInv",type:"mat3"},{name:"p0",type:"vec3"},{name:"p1",type:"vec3"},{name:"p2",type:"vec3"},{name:"p3",type:"vec3"}]}),Rg=1/6,P2=s=>de(Rg,de(s,de(s,s.negate().add(3)).sub(3)).add(1)),Kx=s=>de(Rg,de(s,de(s,de(3,s).sub(6))).add(4)),D2=s=>de(Rg,de(s,de(s,de(-3,s).add(3)).add(3)).add(1)),Qx=s=>de(Rg,Sg(s,3)),m1=s=>P2(s).add(Kx(s)),g1=s=>D2(s).add(Qx(s)),_1=s=>gi(-1,Kx(s).div(P2(s).add(Kx(s)))),y1=s=>gi(1,Qx(s).div(D2(s).add(Qx(s)))),x1=(s,t,e)=>{const n=s.uvNode,i=de(n,t.zw).add(.5),r=tc(i),o=ga(i),a=m1(o.x),c=g1(o.x),l=_1(o.x),h=y1(o.x),u=_1(o.y),d=y1(o.y),f=At(r.x.add(l),r.y.add(u)).sub(.5).mul(t.xy),p=At(r.x.add(h),r.y.add(u)).sub(.5).mul(t.xy),_=At(r.x.add(l),r.y.add(d)).sub(.5).mul(t.xy),g=At(r.x.add(h),r.y.add(d)).sub(.5).mul(t.xy),m=m1(o.y).mul(gi(a.mul(s.uv(f).level(e)),c.mul(s.uv(p).level(e)))),x=g1(o.y).mul(gi(a.mul(s.uv(_).level(e)),c.mul(s.uv(g).level(e))));return m.add(x)},S7=bt(([s,t=ct(3)])=>{const e=At(s.size(on(t))),n=At(s.size(on(t.add(1)))),i=ha(1,e),r=ha(1,n),o=x1(s,ee(i,e),tc(t)),a=x1(s,ee(r,n),Zb(t));return ga(t).mix(o,a)}),v1=bt(([s,t,e,n,i])=>{const r=ot(JN(t.negate(),cd(s),ha(1,n))),o=ot(sa(i[0].xyz),sa(i[1].xyz),sa(i[2].xyz));return cd(r).mul(e.mul(o))}).setLayout({name:"getVolumeTransmissionRay",type:"vec3",inputs:[{name:"n",type:"vec3"},{name:"v",type:"vec3"},{name:"thickness",type:"float"},{name:"ior",type:"float"},{name:"modelMatrix",type:"mat4"}]}),M7=bt(([s,t])=>s.mul(co(t.mul(2).sub(2),0,1))).setLayout({name:"applyIorToRoughness",type:"float",inputs:[{name:"roughness",type:"float"},{name:"ior",type:"float"}]}),T7=_2(),w7=_2(),b1=bt(([s,t,e],{material:n})=>{const r=(n.side==Vs?T7:w7).uv(s),o=so(Zx.x).mul(M7(t,e));return S7(r,o)}),S1=bt(([s,t,e])=>(Gn(e.notEqual(0),()=>{const n=WN(t).negate().div(e);return $N(n.negate().mul(s))}),ot(1))).setLayout({name:"volumeAttenuation",type:"vec3",inputs:[{name:"transmissionDistance",type:"float"},{name:"attenuationColor",type:"vec3"},{name:"attenuationDistance",type:"float"}]}),A7=bt(([s,t,e,n,i,r,o,a,c,l,h,u,d,f,p])=>{let _,g;if(p){_=ee().toVar(),g=ot().toVar();const b=h.sub(1).mul(p.mul(.025)),S=ot(h.sub(b),h,h.add(b));Qs({start:0,end:3},({i:M})=>{const T=S.element(M),A=v1(s,t,u,T,a),w=o.add(A),E=l.mul(c.mul(ee(w,1))),N=At(E.xy.div(E.w)).toVar();N.addAssign(1),N.divAssign(2),N.assign(At(N.x,N.y.oneMinus()));const I=b1(N,e,T);_.element(M).assign(I.element(M)),_.a.addAssign(I.a),g.element(M).assign(n.element(M).mul(S1(sa(A),d,f).element(M)))}),_.a.divAssign(3)}else{const b=v1(s,t,u,h,a),S=o.add(b),M=l.mul(c.mul(ee(S,1))),T=At(M.xy.div(M.w)).toVar();T.addAssign(1),T.divAssign(2),T.assign(At(T.x,T.y.oneMinus())),_=b1(T,e,h),g=n.mul(S1(sa(b),d,f))}const m=g.rgb.mul(_.rgb),x=s.dot(t).clamp(),v=ot(N2({dotNV:x,specularColor:i,specularF90:r,roughness:e})),y=g.r.add(g.g,g.b).div(3);return ee(v.oneMinus().mul(m),_.a.oneMinus().mul(y).oneMinus())}),E7=mi(3.2404542,-.969266,.0556434,-1.5371385,1.8760108,-.2040259,-.4985314,.041556,1.0572252),C7=s=>{const t=s.sqrt();return ot(1).add(t).div(ot(1).sub(t))},M1=(s,t)=>s.sub(t).div(s.add(t)).pow2(),R7=(s,t)=>{const e=s.mul(2*Math.PI*1e-9),n=ot(54856e-17,44201e-17,52481e-17),i=ot(1681e3,1795300,2208400),r=ot(43278e5,93046e5,66121e5),o=ct(9747e-17*Math.sqrt(2*Math.PI*45282e5)).mul(e.mul(2239900).add(t.x).cos()).mul(e.pow2().mul(-45282e5).exp());let a=n.mul(r.mul(2*Math.PI).sqrt()).mul(i.mul(e).add(t).cos()).mul(e.pow2().negate().mul(r).exp());return a=ot(a.x.add(o),a.y,a.z).div(10685e-11),E7.mul(a)},N7=bt(({outsideIOR:s,eta2:t,cosTheta1:e,thinFilmThickness:n,baseF0:i})=>{const r=qe(s,t,gc(0,.03,n)),a=s.div(r).pow2().mul(e.pow2().oneMinus()).oneMinus();Gn(a.lessThan(0),()=>ot(1));const c=a.sqrt(),l=M1(r,s),h=pd({f0:l,f90:1,dotVH:e}),u=h.oneMinus(),d=r.lessThan(s).select(Math.PI,0),f=ct(Math.PI).sub(d),p=C7(i.clamp(0,.9999)),_=M1(p,r.toVec3()),g=pd({f0:_,f90:1,dotVH:c}),m=ot(p.x.lessThan(r).select(Math.PI,0),p.y.lessThan(r).select(Math.PI,0),p.z.lessThan(r).select(Math.PI,0)),x=r.mul(n,c,2),v=ot(f).add(m),y=h.mul(g).clamp(1e-5,.9999),b=y.sqrt(),S=u.pow2().mul(g).div(ot(1).sub(y)),T=h.add(S).toVar(),A=S.sub(u).toVar();return Qs({start:1,end:2,condition:"<=",name:"m"},({m:w})=>{A.mulAssign(b);const E=R7(ct(w).mul(x),ct(w).mul(v)).mul(2);T.addAssign(A.mul(E))}),T.max(ot(0))}).setLayout({name:"evalIridescence",type:"vec3",inputs:[{name:"outsideIOR",type:"float"},{name:"eta2",type:"float"},{name:"cosTheta1",type:"float"},{name:"thinFilmThickness",type:"float"},{name:"baseF0",type:"vec3"}]}),P7=bt(({normal:s,viewDir:t,roughness:e})=>{const n=s.dot(t).saturate(),i=e.pow2(),r=Ti(e.lessThan(.25),ct(-339.2).mul(i).add(ct(161.4).mul(e)).sub(25.9),ct(-8.48).mul(i).add(ct(14.3).mul(e)).sub(9.95)),o=Ti(e.lessThan(.25),ct(44).mul(i).sub(ct(23.7).mul(e)).add(3.26),ct(1.97).mul(i).sub(ct(3.27).mul(e)).add(.72));return Ti(e.lessThan(.25),0,ct(.1).mul(e).sub(.025)).add(r.mul(n).add(o).exp()).mul(1/Math.PI).saturate()}),M0=ot(.04),T0=ct(1);class I2 extends Cg{constructor(t=!1,e=!1,n=!1,i=!1,r=!1,o=!1){super(),this.clearcoat=t,this.sheen=e,this.iridescence=n,this.anisotropy=i,this.transmission=r,this.dispersion=o,this.clearcoatRadiance=null,this.clearcoatSpecularDirect=null,this.clearcoatSpecularIndirect=null,this.sheenSpecularDirect=null,this.sheenSpecularIndirect=null,this.iridescenceFresnel=null,this.iridescenceF0=null}start(t){if(this.clearcoat===!0&&(this.clearcoatRadiance=ot().toVar("clearcoatRadiance"),this.clearcoatSpecularDirect=ot().toVar("clearcoatSpecularDirect"),this.clearcoatSpecularIndirect=ot().toVar("clearcoatSpecularIndirect")),this.sheen===!0&&(this.sheenSpecularDirect=ot().toVar("sheenSpecularDirect"),this.sheenSpecularIndirect=ot().toVar("sheenSpecularIndirect")),this.iridescence===!0){const e=xn.dot(en).clamp();this.iridescenceFresnel=N7({outsideIOR:ct(1),eta2:LN,cosTheta1:e,thinFilmThickness:BN,baseF0:$i}),this.iridescenceF0=g7({f:this.iridescenceFresnel,f90:1,dotVH:e})}if(this.transmission===!0){const e=Xx,n=yj.sub(Xx).normalize(),i=eS;t.backdrop=A7(i,n,Hr,we,$i,Hm,e,_c,xo,$m,jp,UN,zN,kN,this.dispersion?VN:null),t.backdropAlpha=jx,we.a.mulAssign(qe(1,t.backdrop.a,jx))}}computeMultiscattering(t,e,n){const i=xn.dot(en).clamp(),r=R2({roughness:Hr,dotNV:i}),a=(this.iridescenceF0?Xb.mix($i,this.iridescenceF0):$i).mul(r.x).add(n.mul(r.y)),l=r.x.add(r.y).oneMinus(),h=$i.add($i.oneMinus().mul(.047619)),u=a.mul(h).div(l.mul(h).oneMinus());t.addAssign(a),e.addAssign(u.mul(l))}direct({lightDirection:t,lightColor:e,reflectedLight:n}){const r=xn.dot(t).clamp().mul(e);if(this.sheen===!0&&this.sheenSpecularDirect.addAssign(r.mul(x7({lightDirection:t}))),this.clearcoat===!0){const a=Mu.dot(t).clamp().mul(e);this.clearcoatSpecularDirect.addAssign(a.mul(f1({lightDirection:t,f0:M0,f90:T0,roughness:Gm,normalView:Mu})))}n.directDiffuse.addAssign(r.mul(ph({diffuseColor:we.rgb}))),n.directSpecular.addAssign(r.mul(f1({lightDirection:t,f0:$i,f90:1,roughness:Hr,iridescence:this.iridescence,f:this.iridescenceFresnel,USE_IRIDESCENCE:this.iridescence,USE_ANISOTROPY:this.anisotropy})))}directRectArea({lightColor:t,lightPosition:e,halfWidth:n,halfHeight:i,reflectedLight:r,ltc_1:o,ltc_2:a}){const c=e.add(n).sub(i),l=e.sub(n).sub(i),h=e.sub(n).add(i),u=e.add(n).add(i),d=xn,f=en,p=zn.toVar(),_=v7({N:d,V:f,roughness:Hr}),g=o.uv(_).toVar(),m=a.uv(_).toVar(),x=mi(ot(g.x,0,g.y),ot(0,1,0),ot(g.z,0,g.w)).toVar(),v=$i.mul(m.x).add($i.oneMinus().mul(m.y)).toVar();r.directSpecular.addAssign(t.mul(v).mul(p1({N:d,V:f,P:p,mInv:x,p0:c,p1:l,p2:h,p3:u}))),r.directDiffuse.addAssign(t.mul(we).mul(p1({N:d,V:f,P:p,mInv:mi(1,0,0,0,1,0,0,0,1),p0:c,p1:l,p2:h,p3:u})))}indirect(t,e,n){this.indirectDiffuse(t,e,n),this.indirectSpecular(t,e,n),this.ambientOcclusion(t,e,n)}indirectDiffuse({irradiance:t,reflectedLight:e}){e.indirectDiffuse.addAssign(t.mul(ph({diffuseColor:we})))}indirectSpecular({radiance:t,iblIrradiance:e,reflectedLight:n}){if(this.sheen===!0&&this.sheenSpecularIndirect.addAssign(e.mul(Rl,P7({normal:xn,viewDir:en,roughness:jb}))),this.clearcoat===!0){const l=Mu.dot(en).clamp(),h=N2({dotNV:l,specularColor:M0,specularF90:T0,roughness:Gm});this.clearcoatSpecularIndirect.addAssign(this.clearcoatRadiance.mul(h))}const i=ot().toVar("singleScattering"),r=ot().toVar("multiScattering"),o=e.mul(1/Math.PI);this.computeMultiscattering(i,r,Hm);const a=i.add(r),c=we.mul(a.r.max(a.g).max(a.b).oneMinus());n.indirectSpecular.addAssign(t.mul(i)),n.indirectSpecular.addAssign(r.mul(o)),n.indirectDiffuse.addAssign(c.mul(o))}ambientOcclusion({ambientOcclusion:t,reflectedLight:e}){const i=xn.dot(en).clamp().add(t),r=Hr.mul(-16).oneMinus().negate().exp2(),o=t.sub(i.pow(r).oneMinus()).clamp();this.clearcoat===!0&&this.clearcoatSpecularIndirect.mulAssign(t),this.sheen===!0&&this.sheenSpecularIndirect.mulAssign(t),e.indirectDiffuse.mulAssign(t),e.indirectSpecular.mulAssign(o)}finish(t){const{outgoingLight:e}=t;if(this.clearcoat===!0){const n=Mu.dot(en).clamp(),i=pd({dotVH:n,f0:M0,f90:T0}),r=e.mul($x.mul(i).oneMinus()).add(this.clearcoatSpecularDirect.add(this.clearcoatSpecularIndirect).mul($x));e.assign(r)}if(this.sheen===!0){const n=Rl.r.max(Rl.g).max(Rl.b).mul(.157).oneMinus(),i=e.mul(n).add(this.sheenSpecularDirect,this.sheenSpecularIndirect);e.assign(i)}}}const T1=ct(1),Jx=ct(-2),cp=ct(.8),w0=ct(-1),lp=ct(.4),A0=ct(2),hp=ct(.305),E0=ct(3),w1=ct(.21),D7=ct(4),A1=ct(4),I7=ct(16),F7=bt(([s])=>{const t=ot(Cs(s)).toVar(),e=ct(-1).toVar();return Gn(t.x.greaterThan(t.z),()=>{Gn(t.x.greaterThan(t.y),()=>{e.assign(Ti(s.x.greaterThan(0),0,3))}).Else(()=>{e.assign(Ti(s.y.greaterThan(0),1,4))})}).Else(()=>{Gn(t.z.greaterThan(t.y),()=>{e.assign(Ti(s.z.greaterThan(0),2,5))}).Else(()=>{e.assign(Ti(s.y.greaterThan(0),1,4))})}),e}).setLayout({name:"getFace",type:"float",inputs:[{name:"direction",type:"vec3"}]}),O7=bt(([s,t])=>{const e=At().toVar();return Gn(t.equal(0),()=>{e.assign(At(s.z,s.y).div(Cs(s.x)))}).ElseIf(t.equal(1),()=>{e.assign(At(s.x.negate(),s.z.negate()).div(Cs(s.y)))}).ElseIf(t.equal(2),()=>{e.assign(At(s.x.negate(),s.y).div(Cs(s.z)))}).ElseIf(t.equal(3),()=>{e.assign(At(s.z.negate(),s.y).div(Cs(s.x)))}).ElseIf(t.equal(4),()=>{e.assign(At(s.x.negate(),s.z).div(Cs(s.y)))}).Else(()=>{e.assign(At(s.x,s.y).div(Cs(s.z)))}),de(.5,e.add(1))}).setLayout({name:"getUV",type:"vec2",inputs:[{name:"direction",type:"vec3"},{name:"face",type:"float"}]}),L7=bt(([s])=>{const t=ct(0).toVar();return Gn(s.greaterThanEqual(cp),()=>{t.assign(T1.sub(s).mul(w0.sub(Jx)).div(T1.sub(cp)).add(Jx))}).ElseIf(s.greaterThanEqual(lp),()=>{t.assign(cp.sub(s).mul(A0.sub(w0)).div(cp.sub(lp)).add(w0))}).ElseIf(s.greaterThanEqual(hp),()=>{t.assign(lp.sub(s).mul(E0.sub(A0)).div(lp.sub(hp)).add(A0))}).ElseIf(s.greaterThanEqual(w1),()=>{t.assign(hp.sub(s).mul(D7.sub(E0)).div(hp.sub(w1)).add(E0))}).Else(()=>{t.assign(ct(-2).mul(so(de(1.16,s))))}),t}).setLayout({name:"roughnessToMip",type:"float",inputs:[{name:"roughness",type:"float"}]}),B7=bt(([s,t])=>{const e=s.toVar();e.assign(de(2,e).sub(1));const n=ot(e,1).toVar();return Gn(t.equal(0),()=>{n.assign(n.zyx)}).ElseIf(t.equal(1),()=>{n.assign(n.xzy),n.xz.mulAssign(-1)}).ElseIf(t.equal(2),()=>{n.x.mulAssign(-1)}).ElseIf(t.equal(3),()=>{n.assign(n.zyx),n.xz.mulAssign(-1)}).ElseIf(t.equal(4),()=>{n.assign(n.xzy),n.xy.mulAssign(-1)}).ElseIf(t.equal(5),()=>{n.z.mulAssign(-1)}),n}).setLayout({name:"getDirection",type:"vec3",inputs:[{name:"uv",type:"vec2"},{name:"face",type:"float"}]}),U7=bt(([s,t,e,n,i,r])=>{const o=ct(e),a=ot(t),c=co(L7(o),Jx,r),l=ga(c),h=tc(c),u=ot(tv(s,a,h,n,i,r)).toVar();return Gn(l.notEqual(0),()=>{const d=ot(tv(s,a,h.add(1),n,i,r)).toVar();u.assign(qe(u,d,l))}),u}),tv=bt(([s,t,e,n,i,r])=>{const o=ct(e).toVar(),a=ot(t),c=ct(F7(a)).toVar(),l=ct(ls(A1.sub(o),0)).toVar();o.assign(ls(o,A1));const h=ct(ad(o)).toVar(),u=At(O7(a,c).mul(h.sub(2)).add(1)).toVar();return Gn(c.greaterThan(2),()=>{u.y.addAssign(h),c.subAssign(3)}),u.x.addAssign(c.mul(h)),u.x.addAssign(l.mul(de(3,I7))),u.y.addAssign(de(4,ad(r).sub(h))),u.x.mulAssign(n),u.y.mulAssign(i),s.uv(u).grad(At(),At())}),C0=bt(({envMap:s,mipInt:t,outputDirection:e,theta:n,axis:i,CUBEUV_TEXEL_WIDTH:r,CUBEUV_TEXEL_HEIGHT:o,CUBEUV_MAX_MIP:a})=>{const c=qo(n),l=e.mul(c).add(i.cross(e).mul(Es(n))).add(i.mul(i.dot(e).mul(c.oneMinus())));return tv(s,l,t,r,o,a)}),k7=bt(({n:s,latitudinal:t,poleAxis:e,outputDirection:n,weights:i,samples:r,dTheta:o,mipInt:a,envMap:c,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:h,CUBEUV_MAX_MIP:u})=>{const d=ot(Ti(t,e,KN(e,n))).toVar();Gn(HN(d.equals(ot(0))),()=>{d.assign(ot(n.z,0,n.x.negate()))}),d.assign(cd(d));const f=ot().toVar();return f.addAssign(i.element(on(0)).mul(C0({theta:0,axis:d,outputDirection:n,mipInt:a,envMap:c,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:h,CUBEUV_MAX_MIP:u}))),Qs({start:on(1),end:s},({i:p})=>{Gn(p.greaterThanEqual(r),()=>{CX()});const _=ct(o.mul(ct(p))).toVar();f.addAssign(i.element(p).mul(C0({theta:_.mul(-1),axis:d,outputDirection:n,mipInt:a,envMap:c,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:h,CUBEUV_MAX_MIP:u}))),f.addAssign(i.element(p).mul(C0({theta:_,axis:d,outputDirection:n,mipInt:a,envMap:c,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:h,CUBEUV_MAX_MIP:u})))}),ee(f,1)});let Wm=null;const E1=new WeakMap;function z7(s){const t=Math.log2(s)-2,e=1/s;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:e,maxMip:t}}function V7(s){let t=E1.get(s);if((t!==void 0?t.pmremVersion:-1)!==s.pmremVersion){const n=s.image;if(s.isCubeTexture)if(H7(n))t=Wm.fromCubemap(s,t);else return null;else if($7(n))t=Wm.fromEquirectangular(s,t);else return null;t.pmremVersion=s.pmremVersion,E1.set(s,t)}return t.texture}class G7 extends Mn{static get type(){return"PMREMNode"}constructor(t,e=null,n=null){super("vec3"),this._value=t,this._pmrem=null,this.uvNode=e,this.levelNode=n,this._generator=null;const i=new pi;i.isRenderTargetTexture=!0,this._texture=an(i),this._width=ne(0),this._height=ne(0),this._maxMip=ne(0),this.updateBeforeType=he.RENDER}set value(t){this._value=t,this._pmrem=null}get value(){return this._value}updateFromTexture(t){const e=z7(t.image.height);this._texture.value=t,this._width.value=e.texelWidth,this._height.value=e.texelHeight,this._maxMip.value=e.maxMip}updateBefore(){let t=this._pmrem;const e=t?t.pmremVersion:-1,n=this._value;e!==n.pmremVersion&&(n.isPMREMTexture===!0?t=n:t=V7(n),t!==null&&(this._pmrem=t,this.updateFromTexture(t)))}setup(t){Wm===null&&(Wm=t.createPMREMGenerator()),this.updateBefore(t);let e=this.uvNode;e===null&&t.context.getUV&&(e=t.context.getUV(this));const n=this.value;t.renderer.coordinateSystem===Os&&n.isPMREMTexture!==!0&&n.isRenderTargetTexture===!0&&(e=ot(e.x.negate(),e.yz));let i=this.levelNode;return i===null&&t.context.getTextureLevel&&(i=t.context.getTextureLevel(this)),U7(this._texture,e,i,this._width,this._height,this._maxMip)}}function H7(s){if(s==null)return!1;let t=0;const e=6;for(let n=0;n<e;n++)s[n]!==void 0&&t++;return t===e}function $7(s){return s==null?!1:s.height>0}const F2=ut(G7),C1=new WeakMap;class W7 extends Lh{static get type(){return"EnvironmentNode"}constructor(t=null){super(),this.envNode=t}setup(t){const{material:e}=t;let n=this.envNode;if(n.isTextureNode||n.isMaterialReferenceNode){const f=n.isTextureNode?n.value:e[n.property];let p=C1.get(f);p===void 0&&(p=F2(f),C1.set(f,p)),n=p}const r=e.envMap?nn("envMapIntensity","float",t.material):nn("environmentIntensity","float",t.scene),a=e.useAnisotropy===!0||e.anisotropy>0?Lj:xn,c=n.context(R1(Hr,a)).mul(r),l=n.context(q7(eS)).mul(Math.PI).mul(r),h=Xp(c),u=Xp(l);t.context.radiance.addAssign(h),t.context.iblIrradiance.addAssign(u);const d=t.context.lightingModel.clearcoatRadiance;if(d){const f=n.context(R1(Gm,Mu)).mul(r),p=Xp(f);d.addAssign(p)}}}const R1=(s,t)=>{let e=null;return{getUV:()=>(e===null&&(e=en.negate().reflect(t),e=s.mul(s).mix(e,t).normalize(),e=e.transformDirection(xo)),e),getTextureLevel:()=>s}},q7=s=>({getUV:()=>s,getTextureLevel:()=>ct(1)}),j7=new kb;class O2 extends Sn{static get type(){return"MeshStandardNodeMaterial"}constructor(t){super(),this.isMeshStandardNodeMaterial=!0,this.lights=!0,this.emissiveNode=null,this.metalnessNode=null,this.roughnessNode=null,this.setDefaultValues(j7),this.setValues(t)}setupEnvironment(t){let e=super.setupEnvironment(t);return e===null&&t.environmentNode&&(e=t.environmentNode),e?new W7(e):null}setupLightingModel(){return new I2}setupSpecular(){const t=qe(ot(.04),we.rgb,Vm);$i.assign(t),Hm.assign(1)}setupVariants(){const t=this.metalnessNode?ct(this.metalnessNode):Zj;Vm.assign(t);let e=this.roughnessNode?ct(this.roughnessNode):Yj;e=C2({roughness:e}),Hr.assign(e),this.setupSpecular(),we.assign(ee(we.rgb.mul(t.oneMinus()),we.a))}copy(t){return this.emissiveNode=t.emissiveNode,this.metalnessNode=t.metalnessNode,this.roughnessNode=t.roughnessNode,super.copy(t)}}const X7=new _N;class Y7 extends O2{static get type(){return"MeshPhysicalNodeMaterial"}constructor(t){super(),this.isMeshPhysicalNodeMaterial=!0,this.clearcoatNode=null,this.clearcoatRoughnessNode=null,this.clearcoatNormalNode=null,this.sheenNode=null,this.sheenRoughnessNode=null,this.iridescenceNode=null,this.iridescenceIORNode=null,this.iridescenceThicknessNode=null,this.specularIntensityNode=null,this.specularColorNode=null,this.iorNode=null,this.transmissionNode=null,this.thicknessNode=null,this.attenuationDistanceNode=null,this.attenuationColorNode=null,this.dispersionNode=null,this.anisotropyNode=null,this.setDefaultValues(X7),this.setValues(t)}get useClearcoat(){return this.clearcoat>0||this.clearcoatNode!==null}get useIridescence(){return this.iridescence>0||this.iridescenceNode!==null}get useSheen(){return this.sheen>0||this.sheenNode!==null}get useAnisotropy(){return this.anisotropy>0||this.anisotropyNode!==null}get useTransmission(){return this.transmission>0||this.transmissionNode!==null}get useDispersion(){return this.dispersion>0||this.dispersionNode!==null}setupSpecular(){const t=this.iorNode?ct(this.iorNode):hX;jp.assign(t),$i.assign(qe(ld(QN(jp.sub(1).div(jp.add(1))).mul(Xj),ot(1)).mul(a1),we.rgb,Vm)),Hm.assign(qe(a1,1,Vm))}setupLightingModel(){return new I2(this.useClearcoat,this.useSheen,this.useIridescence,this.useAnisotropy,this.useTransmission,this.useDispersion)}setupVariants(t){if(super.setupVariants(t),this.useClearcoat){const e=this.clearcoatNode?ct(this.clearcoatNode):Qj,n=this.clearcoatRoughnessNode?ct(this.clearcoatRoughnessNode):Jj;$x.assign(e),Gm.assign(C2({roughness:n}))}if(this.useSheen){const e=this.sheenNode?ot(this.sheenNode):nX,n=this.sheenRoughnessNode?ct(this.sheenRoughnessNode):iX;Rl.assign(e),jb.assign(n)}if(this.useIridescence){const e=this.iridescenceNode?ct(this.iridescenceNode):rX,n=this.iridescenceIORNode?ct(this.iridescenceIORNode):oX,i=this.iridescenceThicknessNode?ct(this.iridescenceThicknessNode):aX;Xb.assign(e),LN.assign(n),BN.assign(i)}if(this.useAnisotropy){const e=(this.anisotropyNode?At(this.anisotropyNode):sX).toVar();Ba.assign(e.length()),Gn(Ba.equal(0),()=>{e.assign(At(1,0))}).Else(()=>{e.divAssign(At(Ba)),Ba.assign(Ba.saturate())}),Wx.assign(Ba.pow2().mix(Hr.pow2(),1)),qp.assign(Tu[0].mul(e.x).add(Tu[1].mul(e.y))),ql.assign(Tu[1].mul(e.x).sub(Tu[0].mul(e.y)))}if(this.useTransmission){const e=this.transmissionNode?ct(this.transmissionNode):cX,n=this.thicknessNode?ct(this.thicknessNode):lX,i=this.attenuationDistanceNode?ct(this.attenuationDistanceNode):uX,r=this.attenuationColorNode?ot(this.attenuationColorNode):dX;if(jx.assign(e),UN.assign(n),kN.assign(i),zN.assign(r),this.useDispersion){const o=this.dispersionNode?ct(this.dispersionNode):gX;VN.assign(o)}}}setupClearcoatNormal(){return this.clearcoatNormalNode?ot(this.clearcoatNormalNode):tX}setup(t){t.context.setupClearcoatNormal=()=>this.setupClearcoatNormal(t),super.setup(t)}copy(t){return this.clearcoatNode=t.clearcoatNode,this.clearcoatRoughnessNode=t.clearcoatRoughnessNode,this.clearcoatNormalNode=t.clearcoatNormalNode,this.sheenNode=t.sheenNode,this.sheenRoughnessNode=t.sheenRoughnessNode,this.iridescenceNode=t.iridescenceNode,this.iridescenceIORNode=t.iridescenceIORNode,this.iridescenceThicknessNode=t.iridescenceThicknessNode,this.specularIntensityNode=t.specularIntensityNode,this.specularColorNode=t.specularColorNode,this.transmissionNode=t.transmissionNode,this.thicknessNode=t.thicknessNode,this.attenuationDistanceNode=t.attenuationDistanceNode,this.attenuationColorNode=t.attenuationColorNode,this.dispersionNode=t.dispersionNode,this.anisotropyNode=t.anisotropyNode,super.copy(t)}}const Z7=bt(({normal:s,lightDirection:t,builder:e})=>{const n=s.dot(t),i=At(n.mul(.5).add(.5),0);if(e.material.gradientMap){const r=Yo("gradientMap","texture").context({getUV:()=>i});return ot(r.r)}else{const r=i.fwidth().mul(.5);return qe(ot(.7),ot(1),gc(ct(.7).sub(r.x),ct(.7).add(r.x),i.x))}});class K7 extends Cg{direct({lightDirection:t,lightColor:e,reflectedLight:n},i,r){const o=Z7({normal:a2,lightDirection:t,builder:r}).mul(e);n.directDiffuse.addAssign(o.mul(ph({diffuseColor:we.rgb})))}indirect({ambientOcclusion:t,irradiance:e,reflectedLight:n}){n.indirectDiffuse.addAssign(e.mul(ph({diffuseColor:we}))),n.indirectDiffuse.mulAssign(t)}}const Q7=new xN;class J7 extends Sn{static get type(){return"MeshToonNodeMaterial"}constructor(t){super(),this.isMeshToonNodeMaterial=!0,this.lights=!0,this.setDefaultValues(Q7),this.setValues(t)}setupLightingModel(){return new K7}}class tY extends Mn{static get type(){return"MatcapUVNode"}constructor(){super("vec2")}setup(){const t=ot(en.z,0,en.x.negate()).normalize(),e=en.cross(t);return At(t.dot(xn),e.dot(xn)).mul(.495).add(.5)}}const eY=vt(tY),nY=new SN;class iY extends Sn{static get type(){return"MeshMatcapNodeMaterial"}constructor(t){super(),this.lights=!1,this.isMeshMatcapNodeMaterial=!0,this.setDefaultValues(nY),this.setValues(t)}setupVariants(t){const e=eY;let n;t.material.matcap?n=Yo("matcap","texture").context({getUV:()=>e}):n=ot(qe(.2,.8,e.y)),we.rgb.mulAssign(n.rgb)}}const sY=new mN;class rY extends Sn{static get type(){return"PointsNodeMaterial"}constructor(t){super(),this.isPointsNodeMaterial=!0,this.lights=!1,this.transparent=!0,this.sizeNode=null,this.setDefaultValues(sY),this.setValues(t)}copy(t){return this.sizeNode=t.sizeNode,super.copy(t)}}class oY extends Mn{static get type(){return"RotateNode"}constructor(t,e){super(),this.positionNode=t,this.rotationNode=e}getNodeType(t){return this.positionNode.getNodeType(t)}setup(t){const{rotationNode:e,positionNode:n}=this;if(this.getNodeType(t)==="vec2"){const r=e.cos(),o=e.sin();return qb(r,o,o.negate(),r).mul(n)}else{const r=e,o=Wl(ee(1,0,0,0),ee(0,qo(r.x),Es(r.x).negate(),0),ee(0,Es(r.x),qo(r.x),0),ee(0,0,0,1)),a=Wl(ee(qo(r.y),0,Es(r.y),0),ee(0,1,0,0),ee(Es(r.y).negate(),0,qo(r.y),0),ee(0,0,0,1)),c=Wl(ee(qo(r.z),Es(r.z).negate(),0,0),ee(Es(r.z),qo(r.z),0,0),ee(0,0,1,0),ee(0,0,0,1));return o.mul(a).mul(c).mul(ee(n,1)).xyz}}}const aY=ut(oY),cY=new fN;class lY extends Sn{static get type(){return"SpriteNodeMaterial"}constructor(t){super(),this.isSpriteNodeMaterial=!0,this.lights=!1,this._useSizeAttenuation=!0,this.positionNode=null,this.rotationNode=null,this.scaleNode=null,this.setDefaultValues(cY),this.setValues(t)}setupPosition({object:t,camera:e,context:n}){const i=this.sizeAttenuation,{positionNode:r,rotationNode:o,scaleNode:a}=this,c=Hn;let l=wg.mul(ot(r||0)),h=At(_c[0].xyz.length(),_c[1].xyz.length());if(a!==null&&(h=h.mul(a)),!i)if(e.isPerspectiveCamera)h=h.mul(l.z.negate());else{const _=ct(2).div($m.element(1).element(1));h=h.mul(_.mul(2))}let u=c.xy;if(t.center&&t.center.isVector2===!0){const _=Y9("center","vec2");u=u.sub(_.sub(.5))}u=u.mul(h);const d=ct(o||eX),f=aY(u,d);l=ee(l.xy.add(f),l.zw);const p=$m.mul(l);return n.vertex=c,p}copy(t){return this.positionNode=t.positionNode,this.rotationNode=t.rotationNode,this.scaleNode=t.scaleNode,super.copy(t)}get sizeAttenuation(){return this._useSizeAttenuation}set sizeAttenuation(t){this._useSizeAttenuation!==t&&(this._useSizeAttenuation=t,this.needsUpdate=!0)}}class hY extends Cg{constructor(){super(),this.shadowNode=ct(1).toVar("shadowMask")}direct({shadowMask:t}){this.shadowNode.mulAssign(t)}finish(t){we.a.mulAssign(this.shadowNode.oneMinus()),t.outgoingLight.rgb.assign(we.rgb)}}const uY=new gN;class dY extends Sn{static get type(){return"ShadowNodeMaterial"}constructor(t){super(),this.isShadowNodeMaterial=!0,this.lights=!0,this.setDefaultValues(uY),this.setValues(t)}setupLightingModel(){return new hY}}bt(({texture:s,uv:t})=>{const n=ot().toVar();return Gn(t.x.lessThan(1e-4),()=>{n.assign(ot(1,0,0))}).ElseIf(t.y.lessThan(1e-4),()=>{n.assign(ot(0,1,0))}).ElseIf(t.z.lessThan(1e-4),()=>{n.assign(ot(0,0,1))}).ElseIf(t.x.greaterThan(1-1e-4),()=>{n.assign(ot(-1,0,0))}).ElseIf(t.y.greaterThan(1-1e-4),()=>{n.assign(ot(0,-1,0))}).ElseIf(t.z.greaterThan(1-1e-4),()=>{n.assign(ot(0,0,-1))}).Else(()=>{const r=s.uv(t.add(ot(-.01,0,0))).r.sub(s.uv(t.add(ot(.01,0,0))).r),o=s.uv(t.add(ot(0,-.01,0))).r.sub(s.uv(t.add(ot(0,.01,0))).r),a=s.uv(t.add(ot(0,0,-.01))).r.sub(s.uv(t.add(ot(0,0,.01))).r);n.assign(ot(r,o,a))}),n.normalize()});class fY{constructor(t,e){this.nodes=t,this.info=e,this.animationLoop=null,this.requestId=null,this._init()}_init(){const t=(e,n)=>{this.requestId=self.requestAnimationFrame(t),this.info.autoReset===!0&&this.info.reset(),this.nodes.nodeFrame.update(),this.info.frame=this.nodes.nodeFrame.frameId,this.animationLoop!==null&&this.animationLoop(e,n)};t()}dispose(){self.cancelAnimationFrame(this.requestId),this.requestId=null}setAnimationLoop(t){this.animationLoop=t}}class or{constructor(){this.weakMap=new WeakMap}get(t){let e=this.weakMap;for(let n=0;n<t.length;n++)if(e=e.get(t[n]),e===void 0)return;return e.get(t[t.length-1])}set(t,e){let n=this.weakMap;for(let i=0;i<t.length;i++){const r=t[i];n.has(r)===!1&&n.set(r,new WeakMap),n=n.get(r)}return n.set(t[t.length-1],e)}delete(t){let e=this.weakMap;for(let n=0;n<t.length;n++)if(e=e.get(t[n]),e===void 0)return!1;return e.delete(t[t.length-1])}}const R0=new Wo;class ev{constructor(){this.version=0,this.globalClippingCount=0,this.localClippingCount=0,this.localClippingEnabled=!1,this.localClipIntersection=!1,this.planes=[],this.parentVersion=0,this.viewNormalMatrix=new Ii,this.cacheKey=0}projectPlanes(t,e){const n=t.length,i=this.planes;for(let r=0;r<n;r++){R0.copy(t[r]).applyMatrix4(this.viewMatrix,this.viewNormalMatrix);const o=i[e+r],a=R0.normal;o.x=-a.x,o.y=-a.y,o.z=-a.z,o.w=R0.constant}}updateGlobal(t,e){const n=t.clippingPlanes;this.viewMatrix=e.matrixWorldInverse,this.viewNormalMatrix.getNormalMatrix(this.viewMatrix);let i=!1;if(Array.isArray(n)&&n.length!==0){const r=n.length;if(r!==this.globalClippingCount){const o=[];for(let a=0;a<r;a++)o.push(new Ne);this.globalClippingCount=r,this.planes=o,i=!0}this.projectPlanes(n,0)}else this.globalClippingCount!==0&&(this.globalClippingCount=0,this.planes=[],i=!0);t.localClippingEnabled!==this.localClippingEnabled&&(this.localClippingEnabled=t.localClippingEnabled,i=!0),i&&(this.version++,this.cacheKey=Lm(this.globalClippingCount,this.localClippingEnabled===!0?1:0))}update(t,e){let n=!1;if(this!==t&&t.version!==this.parentVersion&&(this.globalClippingCount=e.isShadowNodeMaterial?0:t.globalClippingCount,this.localClippingEnabled=t.localClippingEnabled,this.planes=Array.from(t.planes),this.parentVersion=t.version,this.viewMatrix=t.viewMatrix,this.viewNormalMatrix=t.viewNormalMatrix,n=!0),this.localClippingEnabled){const i=e.clippingPlanes;if(Array.isArray(i)&&i.length!==0){const r=i.length,o=this.planes,a=this.globalClippingCount;if(n||r!==this.localClippingCount){o.length=a+r;for(let c=0;c<r;c++)o[a+c]=new Ne;this.localClippingCount=r,n=!0}this.projectPlanes(i,a)}else this.localClippingCount!==0&&(this.localClippingCount=0,n=!0);this.localClipIntersection!==e.clipIntersection&&(this.localClipIntersection=e.clipIntersection,n=!0)}n&&(this.version+=t.version,this.cacheKey=Lm(t.cacheKey,this.localClippingCount,this.localClipIntersection===!0?1:0))}}let pY=0;function mY(s){const t=Object.keys(s);let e=Object.getPrototypeOf(s);for(;e;){const n=Object.getOwnPropertyDescriptors(e);for(const i in n)if(n[i]!==void 0){const r=n[i];r&&typeof r.get=="function"&&t.push(i)}e=Object.getPrototypeOf(e)}return t}class gY{constructor(t,e,n,i,r,o,a,c,l){this._nodes=t,this._geometries=e,this.id=pY++,this.renderer=n,this.object=i,this.material=r,this.scene=o,this.camera=a,this.lightsNode=c,this.context=l,this.geometry=i.geometry,this.version=r.version,this.drawRange=null,this.attributes=null,this.pipeline=null,this.vertexBuffers=null,this.drawParams=null,this.bundle=null,this.updateClipping(l.clippingContext),this.clippingContextVersion=this.clippingContext.version,this.initialNodesCacheKey=this.getDynamicCacheKey(),this.initialCacheKey=this.getCacheKey(),this._nodeBuilderState=null,this._bindings=null,this._monitor=null,this.onDispose=null,this.isRenderObject=!0,this.onMaterialDispose=()=>{this.dispose()},this.material.addEventListener("dispose",this.onMaterialDispose)}updateClipping(t){const e=this.material;let n=this.clippingContext;Array.isArray(e.clippingPlanes)?((n===t||!n)&&(n=new ev,this.clippingContext=n),n.update(t,e)):this.clippingContext!==t&&(this.clippingContext=t)}get clippingNeedsUpdate(){return this.clippingContext.version===this.clippingContextVersion?!1:(this.clippingContextVersion=this.clippingContext.version,!0)}getNodeBuilderState(){return this._nodeBuilderState||(this._nodeBuilderState=this._nodes.getForRender(this))}getMonitor(){return this._monitor||(this._monitor=this.getNodeBuilderState().monitor)}getBindings(){return this._bindings||(this._bindings=this.getNodeBuilderState().createBindings())}getIndex(){return this._geometries.getIndex(this)}getIndirect(){return this._geometries.getIndirect(this)}getChainArray(){return[this.object,this.material,this.context,this.lightsNode]}getAttributes(){if(this.attributes!==null)return this.attributes;const t=this.getNodeBuilderState().nodeAttributes,e=this.geometry,n=[],i=new Set;for(const r of t){const o=r.node&&r.node.attribute?r.node.attribute:e.getAttribute(r.name);if(o===void 0)continue;n.push(o);const a=o.isInterleavedBufferAttribute?o.data:o;i.add(a)}return this.attributes=n,this.vertexBuffers=Array.from(i.values()),n}getVertexBuffers(){return this.vertexBuffers===null&&this.getAttributes(),this.vertexBuffers}getDrawParameters(){const{object:t,material:e,geometry:n,group:i,drawRange:r}=this,o=this.drawParams||(this.drawParams={vertexCount:0,firstVertex:0,instanceCount:0,firstInstance:0}),a=this.getIndex(),c=a!==null,l=n.isInstancedBufferGeometry?n.instanceCount:t.count>1?t.count:1;if(l===0)return null;if(o.instanceCount=l,t.isBatchedMesh===!0)return o;let h=1;e.wireframe===!0&&!t.isPoints&&!t.isLineSegments&&!t.isLine&&!t.isLineLoop&&(h=2);let u=r.start*h,d=(r.start+r.count)*h;i!==null&&(u=Math.max(u,i.start*h),d=Math.min(d,(i.start+i.count)*h));const f=n.attributes.position;let p=1/0;c?p=a.count:f!=null&&(p=f.count),u=Math.max(u,0),d=Math.min(d,p);const _=d-u;return _<0||_===1/0?null:(o.vertexCount=_,o.firstVertex=u,o)}getGeometryCacheKey(){const{geometry:t}=this;let e="";for(const n of Object.keys(t.attributes).sort()){const i=t.attributes[n];e+=n+",",i.data&&(e+=i.data.stride+","),i.offset&&(e+=i.offset+","),i.itemSize&&(e+=i.itemSize+","),i.normalized&&(e+="n,")}return t.index&&(e+="index,"),e}getMaterialCacheKey(){const{object:t,material:e}=this;let n=e.customProgramCacheKey();for(const i of mY(e)){if(/^(is[A-Z]|_)|^(visible|version|uuid|name|opacity|userData)$/.test(i))continue;const r=e[i];let o;if(r!==null){const a=typeof r;a==="number"?o=r!==0?"1":"0":a==="object"?(o="{",r.isTexture&&(o+=r.mapping),o+="}"):o=String(r)}else o=String(r);n+=o+","}return n+=this.clippingContext.cacheKey+",",t.geometry&&(n+=this.getGeometryCacheKey()),t.skeleton&&(n+=t.skeleton.bones.length+","),t.morphTargetInfluences&&(n+=t.morphTargetInfluences.length+","),t.isBatchedMesh&&(n+=t._matricesTexture.uuid+",",t._colorsTexture!==null&&(n+=t._colorsTexture.uuid+",")),t.count>1&&(n+=t.uuid+","),tq(n)}get needsUpdate(){return this.initialNodesCacheKey!==this.getDynamicCacheKey()||this.clippingNeedsUpdate}getDynamicCacheKey(){let t=this._nodes.getCacheKey(this.scene,this.lightsNode);return this.object.receiveShadow&&(t+=1),t}getCacheKey(){return this.getMaterialCacheKey()+this.getDynamicCacheKey()}dispose(){this.material.removeEventListener("dispose",this.onMaterialDispose),this.onDispose()}}const ul=[];class _Y{constructor(t,e,n,i,r,o){this.renderer=t,this.nodes=e,this.geometries=n,this.pipelines=i,this.bindings=r,this.info=o,this.chainMaps={}}get(t,e,n,i,r,o,a){const c=this.getChainMap(a);ul[0]=t,ul[1]=e,ul[2]=o,ul[3]=r;let l=c.get(ul);return l===void 0?(l=this.createRenderObject(this.nodes,this.geometries,this.renderer,t,e,n,i,r,o,a),c.set(ul,l)):(l.updateClipping(o.clippingContext),(l.version!==e.version||l.needsUpdate)&&(l.initialCacheKey!==l.getCacheKey()?(l.dispose(),l=this.get(t,e,n,i,r,o,a)):l.version=e.version)),l}getChainMap(t="default"){return this.chainMaps[t]||(this.chainMaps[t]=new or)}dispose(){this.chainMaps={}}createRenderObject(t,e,n,i,r,o,a,c,l,h){const u=this.getChainMap(h),d=new gY(t,e,n,i,r,o,a,c,l);return d.onDispose=()=>{this.pipelines.delete(d),this.bindings.delete(d),this.nodes.delete(d),u.delete(d.getChainArray())},d}}class _a{constructor(){this.data=new WeakMap}get(t){let e=this.data.get(t);return e===void 0&&(e={},this.data.set(t,e)),e}delete(t){let e;return this.data.has(t)&&(e=this.data.get(t),this.data.delete(t)),e}has(t){return this.data.has(t)}dispose(){this.data=new WeakMap}}const Js={VERTEX:1,INDEX:2,STORAGE:3,INDIRECT:4},Zo=16,yY=211,xY=212;class vY extends _a{constructor(t){super(),this.backend=t}delete(t){const e=super.delete(t);return e!==void 0&&this.backend.destroyAttribute(t),e}update(t,e){const n=this.get(t);if(n.version===void 0)e===Js.VERTEX?this.backend.createAttribute(t):e===Js.INDEX?this.backend.createIndexAttribute(t):e===Js.STORAGE?this.backend.createStorageAttribute(t):e===Js.INDIRECT&&this.backend.createIndirectStorageAttribute(t),n.version=this._getBufferAttribute(t).version;else{const i=this._getBufferAttribute(t);(n.version<i.version||i.usage===El)&&(this.backend.updateAttribute(t),n.version=i.version)}}_getBufferAttribute(t){return t.isInterleavedBufferAttribute&&(t=t.data),t}}function bY(s){for(let t=s.length-1;t>=0;--t)if(s[t]>=65535)return!0;return!1}function L2(s){return s.index!==null?s.index.version:s.attributes.position.version}function N1(s){const t=[],e=s.index,n=s.attributes.position;if(e!==null){const r=e.array;for(let o=0,a=r.length;o<a;o+=3){const c=r[o+0],l=r[o+1],h=r[o+2];t.push(c,l,l,h,h,c)}}else{const r=n.array;for(let o=0,a=r.length/3-1;o<a;o+=3){const c=o+0,l=o+1,h=o+2;t.push(c,l,l,h,h,c)}}const i=new(bY(t)?oN:rN)(t,1);return i.version=L2(s),i}class SY extends _a{constructor(t,e){super(),this.attributes=t,this.info=e,this.wireframes=new WeakMap,this.attributeCall=new WeakMap}has(t){const e=t.geometry;return super.has(e)&&this.get(e).initialized===!0}updateForRender(t){this.has(t)===!1&&this.initGeometry(t),this.updateAttributes(t)}initGeometry(t){const e=t.geometry,n=this.get(e);n.initialized=!0,this.info.memory.geometries++;const i=()=>{this.info.memory.geometries--;const r=e.index,o=t.getAttributes();r!==null&&this.attributes.delete(r);for(const c of o)this.attributes.delete(c);const a=this.wireframes.get(e);a!==void 0&&this.attributes.delete(a),e.removeEventListener("dispose",i)};e.addEventListener("dispose",i)}updateAttributes(t){const e=t.getAttributes();for(const r of e)r.isStorageBufferAttribute||r.isStorageInstancedBufferAttribute?this.updateAttribute(r,Js.STORAGE):this.updateAttribute(r,Js.VERTEX);const n=this.getIndex(t);n!==null&&this.updateAttribute(n,Js.INDEX);const i=t.geometry.indirect;i!==null&&this.updateAttribute(i,Js.INDIRECT)}updateAttribute(t,e){const n=this.info.render.calls;t.isInterleavedBufferAttribute?this.attributeCall.get(t)===void 0?(this.attributes.update(t,e),this.attributeCall.set(t,n)):this.attributeCall.get(t.data)!==n&&(this.attributes.update(t,e),this.attributeCall.set(t.data,n),this.attributeCall.set(t,n)):this.attributeCall.get(t)!==n&&(this.attributes.update(t,e),this.attributeCall.set(t,n))}getIndirect(t){return t.geometry.indirect}getIndex(t){const{geometry:e,material:n}=t;let i=e.index;if(n.wireframe===!0){const r=this.wireframes;let o=r.get(e);o===void 0?(o=N1(e),r.set(e,o)):o.version!==L2(e)&&(this.attributes.delete(o),o=N1(e),r.set(e,o)),i=o}return i}}class MY{constructor(){this.autoReset=!0,this.frame=0,this.calls=0,this.render={calls:0,frameCalls:0,drawCalls:0,triangles:0,points:0,lines:0,timestamp:0,previousFrameCalls:0,timestampCalls:0},this.compute={calls:0,frameCalls:0,timestamp:0,previousFrameCalls:0,timestampCalls:0},this.memory={geometries:0,textures:0}}update(t,e,n){this.render.drawCalls++,t.isMesh||t.isSprite?this.render.triangles+=n*(e/3):t.isPoints?this.render.points+=n*e:t.isLineSegments?this.render.lines+=n*(e/2):t.isLine?this.render.lines+=n*(e-1):console.error("THREE.WebGPUInfo: Unknown object type.")}updateTimestamp(t,e){this[t].timestampCalls===0&&(this[t].timestamp=0),this[t].timestamp+=e,this[t].timestampCalls++,this[t].timestampCalls>=this[t].previousFrameCalls&&(this[t].timestampCalls=0)}reset(){const t=this.render.frameCalls;this.render.previousFrameCalls=t;const e=this.compute.frameCalls;this.compute.previousFrameCalls=e,this.render.drawCalls=0,this.render.frameCalls=0,this.compute.frameCalls=0,this.render.triangles=0,this.render.points=0,this.render.lines=0}dispose(){this.reset(),this.calls=0,this.render.calls=0,this.compute.calls=0,this.render.timestamp=0,this.compute.timestamp=0,this.memory.geometries=0,this.memory.textures=0}}class B2{constructor(t){this.cacheKey=t,this.usedTimes=0}}class TY extends B2{constructor(t,e,n){super(t),this.vertexProgram=e,this.fragmentProgram=n}}class wY extends B2{constructor(t,e){super(t),this.computeProgram=e,this.isComputePipeline=!0}}let AY=0;class N0{constructor(t,e,n=null,i=null){this.id=AY++,this.code=t,this.stage=e,this.transforms=n,this.attributes=i,this.usedTimes=0}}class EY extends _a{constructor(t,e){super(),this.backend=t,this.nodes=e,this.bindings=null,this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}getForCompute(t,e){const{backend:n}=this,i=this.get(t);if(this._needsComputeUpdate(t)){const r=i.pipeline;r&&(r.usedTimes--,r.computeProgram.usedTimes--);const o=this.nodes.getForCompute(t);let a=this.programs.compute.get(o.computeShader);a===void 0&&(r&&r.computeProgram.usedTimes===0&&this._releaseProgram(r.computeProgram),a=new N0(o.computeShader,"compute",o.transforms,o.nodeAttributes),this.programs.compute.set(o.computeShader,a),n.createProgram(a));const c=this._getComputeCacheKey(t,a);let l=this.caches.get(c);l===void 0&&(r&&r.usedTimes===0&&this._releasePipeline(r),l=this._getComputePipeline(t,a,c,e)),l.usedTimes++,a.usedTimes++,i.version=t.version,i.pipeline=l}return i.pipeline}getForRender(t,e=null){const{backend:n}=this,i=this.get(t);if(this._needsRenderUpdate(t)){const r=i.pipeline;r&&(r.usedTimes--,r.vertexProgram.usedTimes--,r.fragmentProgram.usedTimes--);const o=t.getNodeBuilderState();let a=this.programs.vertex.get(o.vertexShader);a===void 0&&(r&&r.vertexProgram.usedTimes===0&&this._releaseProgram(r.vertexProgram),a=new N0(o.vertexShader,"vertex"),this.programs.vertex.set(o.vertexShader,a),n.createProgram(a));let c=this.programs.fragment.get(o.fragmentShader);c===void 0&&(r&&r.fragmentProgram.usedTimes===0&&this._releaseProgram(r.fragmentProgram),c=new N0(o.fragmentShader,"fragment"),this.programs.fragment.set(o.fragmentShader,c),n.createProgram(c));const l=this._getRenderCacheKey(t,a,c);let h=this.caches.get(l);h===void 0?(r&&r.usedTimes===0&&this._releasePipeline(r),h=this._getRenderPipeline(t,a,c,l,e)):t.pipeline=h,h.usedTimes++,a.usedTimes++,c.usedTimes++,i.pipeline=h}return i.pipeline}delete(t){const e=this.get(t).pipeline;return e&&(e.usedTimes--,e.usedTimes===0&&this._releasePipeline(e),e.isComputePipeline?(e.computeProgram.usedTimes--,e.computeProgram.usedTimes===0&&this._releaseProgram(e.computeProgram)):(e.fragmentProgram.usedTimes--,e.vertexProgram.usedTimes--,e.vertexProgram.usedTimes===0&&this._releaseProgram(e.vertexProgram),e.fragmentProgram.usedTimes===0&&this._releaseProgram(e.fragmentProgram))),super.delete(t)}dispose(){super.dispose(),this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}updateForRender(t){this.getForRender(t)}_getComputePipeline(t,e,n,i){n=n||this._getComputeCacheKey(t,e);let r=this.caches.get(n);return r===void 0&&(r=new wY(n,e),this.caches.set(n,r),this.backend.createComputePipeline(r,i)),r}_getRenderPipeline(t,e,n,i,r){i=i||this._getRenderCacheKey(t,e,n);let o=this.caches.get(i);return o===void 0&&(o=new TY(i,e,n),this.caches.set(i,o),t.pipeline=o,this.backend.createRenderPipeline(t,r)),o}_getComputeCacheKey(t,e){return t.id+","+e.id}_getRenderCacheKey(t,e,n){return e.id+","+n.id+","+this.backend.getRenderCacheKey(t)}_releasePipeline(t){this.caches.delete(t.cacheKey)}_releaseProgram(t){const e=t.code,n=t.stage;this.programs[n].delete(e)}_needsComputeUpdate(t){const e=this.get(t);return e.pipeline===void 0||e.version!==t.version}_needsRenderUpdate(t){return this.get(t).pipeline===void 0||this.backend.needsRenderUpdate(t)}}class CY extends _a{constructor(t,e,n,i,r,o){super(),this.backend=t,this.textures=n,this.pipelines=r,this.attributes=i,this.nodes=e,this.info=o,this.pipelines.bindings=this}getForRender(t){const e=t.getBindings();for(const n of e){const i=this.get(n);i.bindGroup===void 0&&(this._init(n),this.backend.createBindings(n,e),i.bindGroup=n)}return e}getForCompute(t){const e=this.nodes.getForCompute(t).bindings;for(const n of e){const i=this.get(n);i.bindGroup===void 0&&(this._init(n),this.backend.createBindings(n,e),i.bindGroup=n)}return e}updateForCompute(t){this._updateBindings(this.getForCompute(t))}updateForRender(t){this._updateBindings(this.getForRender(t))}_updateBindings(t){for(const e of t)this._update(e,t)}_init(t){for(const e of t.bindings)if(e.isSampledTexture)this.textures.updateTexture(e.texture);else if(e.isStorageBuffer){const n=e.attribute,i=n.isIndirectStorageBufferAttribute?Js.INDIRECT:Js.STORAGE;this.attributes.update(n,i)}}_update(t,e){const{backend:n}=this;let i=!1;for(const r of t.bindings)if(!(r.isNodeUniformsGroup&&!this.nodes.updateGroup(r))){if(r.isUniformBuffer)r.update()&&n.updateBinding(r);else if(r.isSampler)r.update();else if(r.isSampledTexture){r.needsBindingsUpdate(this.textures.get(r.texture).generation)&&(i=!0);const o=r.update(),a=r.texture;o&&this.textures.updateTexture(a);const c=n.get(a);if(n.isWebGPUBackend===!0&&c.texture===void 0&&c.externalTexture===void 0&&(console.error("Bindings._update: binding should be available:",r,o,a,r.textureNode.value,i),this.textures.updateTexture(a),i=!0),a.isStorageTexture===!0){const l=this.get(a);r.store===!0?l.needsMipmap=!0:this.textures.needsMipmaps(a)&&l.needsMipmap===!0&&(this.backend.generateMipmaps(a),l.needsMipmap=!1)}}}i===!0&&this.backend.updateBindings(t,e)}}function RY(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.material.id!==t.material.id?s.material.id-t.material.id:s.z!==t.z?s.z-t.z:s.id-t.id}function P1(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.z!==t.z?t.z-s.z:s.id-t.id}function D1(s){return(s.transmission>0||s.transmissionNode)&&s.side===zl&&s.forceSinglePass===!1}class NY{constructor(t,e,n){this.renderItems=[],this.renderItemsIndex=0,this.opaque=[],this.transparentDoublePass=[],this.transparent=[],this.bundles=[],this.lightsNode=t.getNode(e,n),this.lightsArray=[],this.scene=e,this.camera=n,this.occlusionQueryCount=0}begin(){return this.renderItemsIndex=0,this.opaque.length=0,this.transparentDoublePass.length=0,this.transparent.length=0,this.bundles.length=0,this.lightsArray.length=0,this.occlusionQueryCount=0,this}getNextRenderItem(t,e,n,i,r,o){let a=this.renderItems[this.renderItemsIndex];return a===void 0?(a={id:t.id,object:t,geometry:e,material:n,groupOrder:i,renderOrder:t.renderOrder,z:r,group:o},this.renderItems[this.renderItemsIndex]=a):(a.id=t.id,a.object=t,a.geometry=e,a.material=n,a.groupOrder=i,a.renderOrder=t.renderOrder,a.z=r,a.group=o),this.renderItemsIndex++,a}push(t,e,n,i,r,o){const a=this.getNextRenderItem(t,e,n,i,r,o);t.occlusionTest===!0&&this.occlusionQueryCount++,n.transparent===!0||n.transmission>0?(D1(n)&&this.transparentDoublePass.push(a),this.transparent.push(a)):this.opaque.push(a)}unshift(t,e,n,i,r,o){const a=this.getNextRenderItem(t,e,n,i,r,o);n.transparent===!0||n.transmission>0?(D1(n)&&this.transparentDoublePass.unshift(a),this.transparent.unshift(a)):this.opaque.unshift(a)}pushBundle(t){this.bundles.push(t)}pushLight(t){this.lightsArray.push(t)}sort(t,e){this.opaque.length>1&&this.opaque.sort(t||RY),this.transparentDoublePass.length>1&&this.transparentDoublePass.sort(e||P1),this.transparent.length>1&&this.transparent.sort(e||P1)}finish(){this.lightsNode.setLights(this.lightsArray);for(let t=this.renderItemsIndex,e=this.renderItems.length;t<e;t++){const n=this.renderItems[t];if(n.id===null)break;n.id=null,n.object=null,n.geometry=null,n.material=null,n.groupOrder=null,n.renderOrder=null,n.z=null,n.group=null}}}class PY{constructor(t){this.lighting=t,this.lists=new or}get(t,e){const n=this.lists,i=[t,e];let r=n.get(i);return r===void 0&&(r=new NY(this.lighting,t,e),n.set(i,r)),r}dispose(){this.lists=new or}}let DY=0;class IY{constructor(){this.id=DY++,this.color=!0,this.clearColor=!0,this.clearColorValue={r:0,g:0,b:0,a:1},this.depth=!0,this.clearDepth=!0,this.clearDepthValue=1,this.stencil=!1,this.clearStencil=!0,this.clearStencilValue=1,this.viewport=!1,this.viewportValue=new Ne,this.scissor=!1,this.scissorValue=new Ne,this.textures=null,this.depthTexture=null,this.activeCubeFace=0,this.sampleCount=1,this.width=0,this.height=0,this.isRenderContext=!0}getCacheKey(){return U2(this)}}function U2(s){const{textures:t,activeCubeFace:e}=s,n=[e];for(const i of t)n.push(i.id);return wN(n)}class FY{constructor(){this.chainMaps={}}get(t,e,n=null){const i=[t,e];let r;if(n===null)r="default";else{const c=n.texture.format;r=`${n.textures.length}:${c}:${n.samples}:${n.depthBuffer}:${n.stencilBuffer}`}const o=this.getChainMap(r);let a=o.get(i);return a===void 0&&(a=new IY,o.set(i,a)),n!==null&&(a.sampleCount=n.samples===0?1:n.samples),a}getChainMap(t){return this.chainMaps[t]||(this.chainMaps[t]=new or)}dispose(){this.chainMaps={}}}const OY=new Z;class LY extends _a{constructor(t,e,n){super(),this.renderer=t,this.backend=e,this.info=n}updateRenderTarget(t,e=0){const n=this.get(t),i=t.samples===0?1:t.samples,r=n.depthTextureMips||(n.depthTextureMips={}),o=t.textures,a=this.getSize(o[0]),c=a.width>>e,l=a.height>>e;let h=t.depthTexture||r[e];const u=t.depthBuffer===!0||t.stencilBuffer===!0;let d=!1;h===void 0&&u&&(h=new Fh,h.format=t.stencilBuffer?dh:Ja,h.type=t.stencilBuffer?Od:Un,h.image.width=c,h.image.height=l,r[e]=h),(n.width!==a.width||a.height!==n.height)&&(d=!0,h&&(h.needsUpdate=!0,h.image.width=c,h.image.height=l)),n.width=a.width,n.height=a.height,n.textures=o,n.depthTexture=h||null,n.depth=t.depthBuffer,n.stencil=t.stencilBuffer,n.renderTarget=t,n.sampleCount!==i&&(d=!0,h&&(h.needsUpdate=!0),n.sampleCount=i);const f={sampleCount:i};for(let p=0;p<o.length;p++){const _=o[p];d&&(_.needsUpdate=!0),this.updateTexture(_,f)}if(h&&this.updateTexture(h,f),n.initialized!==!0){n.initialized=!0;const p=()=>{t.removeEventListener("dispose",p);for(let _=0;_<o.length;_++)this._destroyTexture(o[_]);h&&this._destroyTexture(h),this.delete(t)};t.addEventListener("dispose",p)}}updateTexture(t,e={}){const n=this.get(t);if(n.initialized===!0&&n.version===t.version)return;const i=t.isRenderTargetTexture||t.isDepthTexture||t.isFramebufferTexture,r=this.backend;if(i&&n.initialized===!0&&(r.destroySampler(t),r.destroyTexture(t)),t.isFramebufferTexture){const l=this.renderer.getRenderTarget();l?t.type=l.texture.type:t.type=na}const{width:o,height:a,depth:c}=this.getSize(t);if(e.width=o,e.height=a,e.depth=c,e.needsMipmaps=this.needsMipmaps(t),e.levels=e.needsMipmaps?this.getMipLevels(t,o,a):1,i||t.isStorageTexture===!0)r.createSampler(t),r.createTexture(t,e),n.generation=t.version;else if(n.initialized!==!0&&r.createSampler(t),t.version>0){const h=t.image;if(h===void 0)console.warn("THREE.Renderer: Texture marked for update but image is undefined.");else if(h.complete===!1)console.warn("THREE.Renderer: Texture marked for update but image is incomplete.");else{if(t.images){const u=[];for(const d of t.images)u.push(d);e.images=u}else e.image=h;(n.isDefaultTexture===void 0||n.isDefaultTexture===!0)&&(r.createTexture(t,e),n.isDefaultTexture=!1,n.generation=t.version),t.source.dataReady===!0&&r.updateTexture(t,e),e.needsMipmaps&&t.mipmaps.length===0&&r.generateMipmaps(t)}}else r.createDefaultTexture(t),n.isDefaultTexture=!0,n.generation=t.version;if(n.initialized!==!0){n.initialized=!0,n.generation=t.version,this.info.memory.textures++;const l=()=>{t.removeEventListener("dispose",l),this._destroyTexture(t),this.info.memory.textures--};t.addEventListener("dispose",l)}n.version=t.version}getSize(t,e=OY){let n=t.images?t.images[0]:t.image;return n?(n.image!==void 0&&(n=n.image),e.width=n.width,e.height=n.height,e.depth=t.isCubeTexture?6:n.depth||1):e.width=e.height=e.depth=1,e}getMipLevels(t,e,n){let i;return t.isCompressedTexture?i=t.mipmaps.length:i=Math.floor(Math.log2(Math.max(e,n)))+1,i}needsMipmaps(t){return this.isEnvironmentTexture(t)||t.isCompressedTexture===!0||t.generateMipmaps}isEnvironmentTexture(t){const e=t.mapping;return e===Id||e===Fd||e===dc||e===uh}_destroyTexture(t){this.backend.destroySampler(t),this.backend.destroyTexture(t),this.delete(t)}}class aS extends Pe{constructor(t,e,n,i=1){super(t,e,n),this.a=i}set(t,e,n,i=1){return this.a=i,super.set(t,e,n)}copy(t){return t.a!==void 0&&(this.a=t.a),super.copy(t)}clone(){return new this.constructor(this.r,this.g,this.b,this.a)}}class BY extends De{static get type(){return"ParameterNode"}constructor(t,e=null){super(t,e),this.isParameterNode=!0}getHash(){return this.uuid}generate(){return this.name}}class UY extends se{static get type(){return"StackNode"}constructor(t=null){super(),this.nodes=[],this.outputNode=null,this.parent=t,this._currentCond=null,this.isStackNode=!0}getNodeType(t){return this.outputNode?this.outputNode.getNodeType(t):"void"}add(t){return this.nodes.push(t),this}If(t,e){const n=new Wp(e);return this._currentCond=Ti(t,n),this.add(this._currentCond)}ElseIf(t,e){const n=new Wp(e),i=Ti(t,n);return this._currentCond.elseNode=i,this._currentCond=i,this}Else(t){return this._currentCond.elseNode=new Wp(t),this}build(t,...e){const n=DN();km(this);for(const i of this.nodes)i.build(t,"void");return km(n),this.outputNode?this.outputNode.build(t,...e):super.build(t,...e)}else(...t){return console.warn("TSL.StackNode: .else() has been renamed to .Else()."),this.Else(...t)}elseif(...t){return console.warn("TSL.StackNode: .elseif() has been renamed to .ElseIf()."),this.ElseIf(...t)}}const P0=ut(UY);new Wo;new Z;new Z;new Z;new Je;new Z(0,0,-1);new Ne;new Z;new Z;new Ne;new xe;const kY=new Ih;fd.flipX();kY.depthTexture=new Fh(1,1);const D0=new Vb(-1,1,1,-1,0,1);class zY extends Mc{constructor(t=!1){super();const e=t===!1?[0,-1,0,1,2,1]:[0,2,0,0,2,0];this.setAttribute("position",new io([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new io(e,2))}}const VY=new zY;class k2 extends mc{constructor(t=null){super(VY,t),this.camera=D0,this.isQuadMesh=!0}renderAsync(t){return t.renderAsync(this,D0)}render(t){t.render(this,D0)}}const du=new Gs,I0=new Je;class Ai extends se{static get type(){return"SceneNode"}constructor(t=Ai.BACKGROUND_BLURRINESS,e=null){super(),this.scope=t,this.scene=e}setup(t){const e=this.scope,n=this.scene!==null?this.scene:t.scene;let i;return e===Ai.BACKGROUND_BLURRINESS?i=nn("backgroundBlurriness","float",n):e===Ai.BACKGROUND_INTENSITY?i=nn("backgroundIntensity","float",n):e===Ai.BACKGROUND_ROTATION?i=ne("mat4").label("backgroundRotation").setGroup(_e).onRenderUpdate(()=>{const r=n.background;return r!==null&&r.isTexture&&r.mapping!==Ab?(du.copy(n.backgroundRotation),du.x*=-1,du.y*=-1,du.z*=-1,I0.makeRotationFromEuler(du)):I0.identity(),I0}):console.error("THREE.SceneNode: Unknown scope:",e),i}}Ai.BACKGROUND_BLURRINESS="backgroundBlurriness";Ai.BACKGROUND_INTENSITY="backgroundIntensity";Ai.BACKGROUND_ROTATION="backgroundRotation";const GY=vt(Ai,Ai.BACKGROUND_BLURRINESS),I1=vt(Ai,Ai.BACKGROUND_INTENSITY),HY=vt(Ai,Ai.BACKGROUND_ROTATION),Nl={PointList:"point-list",LineList:"line-list",LineStrip:"line-strip",TriangleList:"triangle-list",TriangleStrip:"triangle-strip"},Ln={Never:"never",Less:"less",Equal:"equal",LessEqual:"less-equal",Greater:"greater",NotEqual:"not-equal",GreaterEqual:"greater-equal",Always:"always"},Bn={Store:"store",Discard:"discard"},gn={Load:"load",Clear:"clear"},F0={CCW:"ccw",CW:"cw"},O0={None:"none",Front:"front",Back:"back"},mh={Uint16:"uint16",Uint32:"uint32"},L={R8Unorm:"r8unorm",R8Snorm:"r8snorm",R8Uint:"r8uint",R8Sint:"r8sint",R16Uint:"r16uint",R16Sint:"r16sint",R16Float:"r16float",RG8Unorm:"rg8unorm",RG8Snorm:"rg8snorm",RG8Uint:"rg8uint",RG8Sint:"rg8sint",R32Uint:"r32uint",R32Sint:"r32sint",R32Float:"r32float",RG16Uint:"rg16uint",RG16Sint:"rg16sint",RG16Float:"rg16float",RGBA8Unorm:"rgba8unorm",RGBA8UnormSRGB:"rgba8unorm-srgb",RGBA8Snorm:"rgba8snorm",RGBA8Uint:"rgba8uint",RGBA8Sint:"rgba8sint",BGRA8Unorm:"bgra8unorm",BGRA8UnormSRGB:"bgra8unorm-srgb",RGB9E5UFloat:"rgb9e5ufloat",RGB10A2Unorm:"rgb10a2unorm",RG11B10uFloat:"rgb10a2unorm",RG32Uint:"rg32uint",RG32Sint:"rg32sint",RG32Float:"rg32float",RGBA16Uint:"rgba16uint",RGBA16Sint:"rgba16sint",RGBA16Float:"rgba16float",RGBA32Uint:"rgba32uint",RGBA32Sint:"rgba32sint",RGBA32Float:"rgba32float",Stencil8:"stencil8",Depth16Unorm:"depth16unorm",Depth24Plus:"depth24plus",Depth24PlusStencil8:"depth24plus-stencil8",Depth32Float:"depth32float",Depth32FloatStencil8:"depth32float-stencil8",BC1RGBAUnorm:"bc1-rgba-unorm",BC1RGBAUnormSRGB:"bc1-rgba-unorm-srgb",BC2RGBAUnorm:"bc2-rgba-unorm",BC2RGBAUnormSRGB:"bc2-rgba-unorm-srgb",BC3RGBAUnorm:"bc3-rgba-unorm",BC3RGBAUnormSRGB:"bc3-rgba-unorm-srgb",BC4RUnorm:"bc4-r-unorm",BC4RSnorm:"bc4-r-snorm",BC5RGUnorm:"bc5-rg-unorm",BC5RGSnorm:"bc5-rg-snorm",BC6HRGBUFloat:"bc6h-rgb-ufloat",BC6HRGBFloat:"bc6h-rgb-float",BC7RGBAUnorm:"bc7-rgba-unorm",BC7RGBAUnormSRGB:"bc7-rgba-srgb",ETC2RGB8Unorm:"etc2-rgb8unorm",ETC2RGB8UnormSRGB:"etc2-rgb8unorm-srgb",ETC2RGB8A1Unorm:"etc2-rgb8a1unorm",ETC2RGB8A1UnormSRGB:"etc2-rgb8a1unorm-srgb",ETC2RGBA8Unorm:"etc2-rgba8unorm",ETC2RGBA8UnormSRGB:"etc2-rgba8unorm-srgb",EACR11Unorm:"eac-r11unorm",EACR11Snorm:"eac-r11snorm",EACRG11Unorm:"eac-rg11unorm",EACRG11Snorm:"eac-rg11snorm",ASTC4x4Unorm:"astc-4x4-unorm",ASTC4x4UnormSRGB:"astc-4x4-unorm-srgb",ASTC5x4Unorm:"astc-5x4-unorm",ASTC5x4UnormSRGB:"astc-5x4-unorm-srgb",ASTC5x5Unorm:"astc-5x5-unorm",ASTC5x5UnormSRGB:"astc-5x5-unorm-srgb",ASTC6x5Unorm:"astc-6x5-unorm",ASTC6x5UnormSRGB:"astc-6x5-unorm-srgb",ASTC6x6Unorm:"astc-6x6-unorm",ASTC6x6UnormSRGB:"astc-6x6-unorm-srgb",ASTC8x5Unorm:"astc-8x5-unorm",ASTC8x5UnormSRGB:"astc-8x5-unorm-srgb",ASTC8x6Unorm:"astc-8x6-unorm",ASTC8x6UnormSRGB:"astc-8x6-unorm-srgb",ASTC8x8Unorm:"astc-8x8-unorm",ASTC8x8UnormSRGB:"astc-8x8-unorm-srgb",ASTC10x5Unorm:"astc-10x5-unorm",ASTC10x5UnormSRGB:"astc-10x5-unorm-srgb",ASTC10x6Unorm:"astc-10x6-unorm",ASTC10x6UnormSRGB:"astc-10x6-unorm-srgb",ASTC10x8Unorm:"astc-10x8-unorm",ASTC10x8UnormSRGB:"astc-10x8-unorm-srgb",ASTC10x10Unorm:"astc-10x10-unorm",ASTC10x10UnormSRGB:"astc-10x10-unorm-srgb",ASTC12x10Unorm:"astc-12x10-unorm",ASTC12x10UnormSRGB:"astc-12x10-unorm-srgb",ASTC12x12Unorm:"astc-12x12-unorm",ASTC12x12UnormSRGB:"astc-12x12-unorm-srgb"},L0={ClampToEdge:"clamp-to-edge",Repeat:"repeat",MirrorRepeat:"mirror-repeat"},Wa={Linear:"linear",Nearest:"nearest"},Jt={Zero:"zero",One:"one",Src:"src",OneMinusSrc:"one-minus-src",SrcAlpha:"src-alpha",OneMinusSrcAlpha:"one-minus-src-alpha",Dst:"dst",OneMinusDstColor:"one-minus-dst",DstAlpha:"dst-alpha",OneMinusDstAlpha:"one-minus-dst-alpha",SrcAlphaSaturated:"src-alpha-saturated",Constant:"constant",OneMinusConstant:"one-minus-constant"},Fa={Add:"add",Subtract:"subtract",ReverseSubtract:"reverse-subtract",Min:"min",Max:"max"},F1={None:0,Red:1,Green:2,Blue:4,Alpha:8,All:15},Vo={Keep:"keep",Zero:"zero",Replace:"replace",Invert:"invert",IncrementClamp:"increment-clamp",DecrementClamp:"decrement-clamp",IncrementWrap:"increment-wrap",DecrementWrap:"decrement-wrap"},nv={Uniform:"uniform",Storage:"storage",ReadOnlyStorage:"read-only-storage"},O1={WriteOnly:"write-only",ReadOnly:"read-only",ReadWrite:"read-write"},fu={Float:"float",UnfilterableFloat:"unfilterable-float",Depth:"depth",SInt:"sint",UInt:"uint"},L1={OneD:"1d",TwoD:"2d",ThreeD:"3d"},es={OneD:"1d",TwoD:"2d",TwoDArray:"2d-array",Cube:"cube",CubeArray:"cube-array",ThreeD:"3d"},$Y={All:"all",StencilOnly:"stencil-only",DepthOnly:"depth-only"},up={Vertex:"vertex",Instance:"instance"},iv={DepthClipControl:"depth-clip-control",Depth32FloatStencil8:"depth32float-stencil8",TextureCompressionBC:"texture-compression-bc",TextureCompressionETC2:"texture-compression-etc2",TextureCompressionASTC:"texture-compression-astc",TimestampQuery:"timestamp-query",IndirectFirstInstance:"indirect-first-instance",ShaderF16:"shader-f16",RG11B10UFloat:"rg11b10ufloat-renderable",BGRA8UNormStorage:"bgra8unorm-storage",Float32Filterable:"float32-filterable",ClipDistances:"clip-distances",DualSourceBlending:"dual-source-blending",Subgroups:"subgroups"},WY=new xe;class qY extends Gd{static get type(){return"PassTextureNode"}constructor(t,e){super(e),this.passNode=t,this.setUpdateMatrix(!1)}setup(t){return t.object.isQuadMesh&&this.passNode.build(t),super.setup(t)}clone(){return new this.constructor(this.passNode,this.value)}}class B1 extends qY{static get type(){return"PassMultipleTextureNode"}constructor(t,e,n=!1){super(t,null),this.textureName=e,this.previousTexture=n}updateTexture(){this.value=this.previousTexture?this.passNode.getPreviousTexture(this.textureName):this.passNode.getTexture(this.textureName)}setup(t){return this.updateTexture(),super.setup(t)}clone(){return new this.constructor(this.passNode,this.textureName,this.previousTexture)}}class Ng extends Mn{static get type(){return"PassNode"}constructor(t,e,n,i={}){super("vec4"),this.scope=t,this.scene=e,this.camera=n,this.options=i,this._pixelRatio=1,this._width=1,this._height=1;const r=new Fh;r.isRenderTargetTexture=!0,r.name="depth";const o=new Ih(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:to,...i});o.texture.name="output",o.depthTexture=r,this.renderTarget=o,this.updateBeforeType=he.FRAME,this._textures={output:o.texture,depth:r},this._textureNodes={},this._linearDepthNodes={},this._viewZNodes={},this._previousTextures={},this._previousTextureNodes={},this._cameraNear=ne(0),this._cameraFar=ne(0),this._mrt=null,this.isPassNode=!0}setMRT(t){return this._mrt=t,this}getMRT(){return this._mrt}isGlobal(){return!0}getTexture(t){let e=this._textures[t];return e===void 0&&(e=this.renderTarget.texture.clone(),e.isRenderTargetTexture=!0,e.name=t,this._textures[t]=e,this.renderTarget.textures.push(e)),e}getPreviousTexture(t){let e=this._previousTextures[t];return e===void 0&&(e=this.getTexture(t).clone(),e.isRenderTargetTexture=!0,this._previousTextures[t]=e),e}toggleTexture(t){const e=this._previousTextures[t];if(e!==void 0){const n=this._textures[t],i=this.renderTarget.textures.indexOf(n);this.renderTarget.textures[i]=e,this._textures[t]=e,this._previousTextures[t]=n,this._textureNodes[t].updateTexture(),this._previousTextureNodes[t].updateTexture()}}getTextureNode(t="output"){let e=this._textureNodes[t];return e===void 0&&(e=_t(new B1(this,t)),e.updateTexture(),this._textureNodes[t]=e),e}getPreviousTextureNode(t="output"){let e=this._previousTextureNodes[t];return e===void 0&&(this._textureNodes[t]===void 0&&this.getTextureNode(t),e=_t(new B1(this,t,!0)),e.updateTexture(),this._previousTextureNodes[t]=e),e}getViewZNode(t="depth"){let e=this._viewZNodes[t];if(e===void 0){const n=this._cameraNear,i=this._cameraFar;this._viewZNodes[t]=e=y2(this.getTextureNode(t),n,i)}return e}getLinearDepthNode(t="depth"){let e=this._linearDepthNodes[t];if(e===void 0){const n=this._cameraNear,i=this._cameraFar,r=this.getViewZNode(t);this._linearDepthNodes[t]=e=Bu(r,n,i)}return e}setup({renderer:t}){return this.renderTarget.samples=this.options.samples===void 0?t.samples:this.options.samples,t.backend.isWebGLBackend===!0&&(this.renderTarget.samples=0),this.renderTarget.depthTexture.isMultisampleRenderTargetTexture=this.renderTarget.samples>1,this.scope===Ng.COLOR?this.getTextureNode():this.getLinearDepthNode()}updateBefore(t){const{renderer:e}=t,{scene:n,camera:i}=this;this._pixelRatio=e.getPixelRatio();const r=e.getSize(WY);this.setSize(r.width,r.height);const o=e.getRenderTarget(),a=e.getMRT();this._cameraNear.value=i.near,this._cameraFar.value=i.far;for(const c in this._previousTextures)this.toggleTexture(c);e.setRenderTarget(this.renderTarget),e.setMRT(this._mrt),e.render(n,i),e.setRenderTarget(o),e.setMRT(a)}setSize(t,e){this._width=t,this._height=e;const n=this._width*this._pixelRatio,i=this._height*this._pixelRatio;this.renderTarget.setSize(n,i)}setPixelRatio(t){this._pixelRatio=t,this.setSize(this._width,this._height)}dispose(){this.renderTarget.dispose()}}Ng.COLOR="color";Ng.DEPTH="depth";const jY=bt(([s,t])=>s.mul(t).clamp()).setLayout({name:"linearToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),XY=bt(([s,t])=>(s=s.mul(t),s.div(s.add(1)).clamp())).setLayout({name:"reinhardToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),YY=bt(([s,t])=>{s=s.mul(t),s=s.sub(.004).max(0);const e=s.mul(s.mul(6.2).add(.5)),n=s.mul(s.mul(6.2).add(1.7)).add(.06);return e.div(n).pow(2.2)}).setLayout({name:"cineonToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),ZY=bt(([s])=>{const t=s.mul(s.add(.0245786)).sub(90537e-9),e=s.mul(s.add(.432951).mul(.983729)).add(.238081);return t.div(e)}),KY=bt(([s,t])=>{const e=mi(.59719,.35458,.04823,.076,.90834,.01566,.0284,.13383,.83777),n=mi(1.60475,-.53108,-.07367,-.10208,1.10813,-.00605,-.00327,-.07276,1.07602);return s=s.mul(t).div(.6),s=e.mul(s),s=ZY(s),s=n.mul(s),s.clamp()}).setLayout({name:"acesFilmicToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),QY=mi(ot(1.6605,-.1246,-.0182),ot(-.5876,1.1329,-.1006),ot(-.0728,-.0083,1.1187)),JY=mi(ot(.6274,.0691,.0164),ot(.3293,.9195,.088),ot(.0433,.0113,.8956)),tZ=bt(([s])=>{const t=ot(s).toVar(),e=ot(t.mul(t)).toVar(),n=ot(e.mul(e)).toVar();return ct(15.5).mul(n.mul(e)).sub(de(40.14,n.mul(t))).add(de(31.96,n).sub(de(6.868,e.mul(t))).add(de(.4298,e).add(de(.1191,t).sub(.00232))))}),eZ=bt(([s,t])=>{const e=ot(s).toVar(),n=mi(ot(.856627153315983,.137318972929847,.11189821299995),ot(.0951212405381588,.761241990602591,.0767994186031903),ot(.0482516061458583,.101439036467562,.811302368396859)),i=mi(ot(1.1271005818144368,-.1413297634984383,-.14132976349843826),ot(-.11060664309660323,1.157823702216272,-.11060664309660294),ot(-.016493938717834573,-.016493938717834257,1.2519364065950405)),r=ct(-12.47393),o=ct(4.026069);return e.mulAssign(t),e.assign(JY.mul(e)),e.assign(n.mul(e)),e.assign(ls(e,1e-10)),e.assign(so(e)),e.assign(e.sub(r).div(o.sub(r))),e.assign(co(e,0,1)),e.assign(tZ(e)),e.assign(i.mul(e)),e.assign(Sg(ls(ot(0),e),ot(2.2))),e.assign(QY.mul(e)),e.assign(co(e,0,1)),e}).setLayout({name:"agxToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),nZ=bt(([s,t])=>{const e=ct(.76),n=ct(.15);s=s.mul(t);const i=ld(s.r,ld(s.g,s.b)),r=Ti(i.lessThan(.08),i.sub(de(6.25,i.mul(i))),.04);s.subAssign(r);const o=ls(s.r,ls(s.g,s.b));Gn(o.lessThan(e),()=>s);const a=qi(1,e),c=qi(1,a.mul(a).div(o.add(a.sub(e))));s.mulAssign(c.div(o));const l=qi(1,ha(1,n.mul(o.sub(c)).add(1)));return qe(s,ot(c),l)}).setLayout({name:"neutralToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]});class Qn extends se{static get type(){return"CodeNode"}constructor(t="",e=[],n=""){super("code"),this.isCodeNode=!0,this.code=t,this.language=n,this.includes=e}isGlobal(){return!0}setIncludes(t){return this.includes=t,this}getIncludes(){return this.includes}generate(t){const e=this.getIncludes(t);for(const i of e)i.build(t);const n=t.getCodeFromNode(this,this.getNodeType(t));return n.code=this.code,n.code}serialize(t){super.serialize(t),t.code=this.code,t.language=this.language}deserialize(t){super.deserialize(t),this.code=t.code,this.language=t.language}}class iZ extends Qn{static get type(){return"FunctionNode"}constructor(t="",e=[],n=""){super(t,e,n)}getNodeType(t){return this.getNodeFunction(t).type}getInputs(t){return this.getNodeFunction(t).inputs}getNodeFunction(t){const e=t.getDataFromNode(this);let n=e.nodeFunction;return n===void 0&&(n=t.parser.parseFunction(this.code),e.nodeFunction=n),n}generate(t,e){super.generate(t);const n=this.getNodeFunction(t),i=n.name,r=n.type,o=t.getCodeFromNode(this,r);i!==""&&(o.name=i);const a=t.getPropertyName(o),c=this.getNodeFunction(t).getCode(a);return o.code=c+`
`,e==="property"?a:t.format(`${a}()`,r,e)}}class sZ extends Map{get(t,e=null,...n){if(this.has(t))return super.get(t);if(e!==null){const i=e(...n);return this.set(t,i),i}}}new sZ;class z2 extends se{static get type(){return"FogNode"}constructor(t,e){super("float"),this.isFogNode=!0,this.colorNode=t,this.factorNode=e}getViewZNode(t){let e;const n=t.context.getViewZ;return n!==void 0&&(e=n(this)),(e||zn.z).negate()}setup(){return this.factorNode}}class rZ extends z2{static get type(){return"FogRangeNode"}constructor(t,e,n){super(t),this.isFogRangeNode=!0,this.nearNode=e,this.farNode=n}setup(t){const e=this.getViewZNode(t);return gc(this.nearNode,this.farNode,e)}}const oZ=ut(rZ);class aZ extends z2{static get type(){return"FogExp2Node"}constructor(t,e){super(t),this.isFogExp2Node=!0,this.densityNode=e}setup(t){const e=this.getViewZNode(t),n=this.densityNode;return n.mul(n,e,e).negate().exp().oneMinus()}}const cZ=ut(aZ);class lZ extends se{constructor(t){super(),this.scope=t}generate(t){const{scope:e}=this,{renderer:n}=t;n.backend.isWebGLBackend===!0?t.addFlowCode(`	// ${e}Barrier 
`):t.addLineFlowCode(`${e}Barrier()`,this)}}ut(lZ);class ur extends Mn{static get type(){return"AtomicFunctionNode"}constructor(t,e,n,i=null){super("uint"),this.method=t,this.pointerNode=e,this.valueNode=n,this.storeNode=i}getInputType(t){return this.pointerNode.getNodeType(t)}getNodeType(t){return this.getInputType(t)}generate(t){const e=this.method,n=this.getNodeType(t),i=this.getInputType(t),r=this.pointerNode,o=this.valueNode,a=[];a.push(`&${r.build(t,i)}`),a.push(o.build(t,i));const c=`${t.getMethod(e,n)}( ${a.join(", ")} )`;if(this.storeNode!==null){const l=this.storeNode.build(t,i);t.addLineFlowCode(`${l} = ${c}`,this)}else t.addLineFlowCode(c,this)}}ur.ATOMIC_LOAD="atomicLoad";ur.ATOMIC_STORE="atomicStore";ur.ATOMIC_ADD="atomicAdd";ur.ATOMIC_SUB="atomicSub";ur.ATOMIC_MAX="atomicMax";ur.ATOMIC_MIN="atomicMin";ur.ATOMIC_AND="atomicAnd";ur.ATOMIC_OR="atomicOr";ur.ATOMIC_XOR="atomicXor";ut(ur);let dp;function cS(s){dp=dp||new WeakMap;let t=dp.get(s);return t===void 0&&dp.set(s,t={}),t}function V2(s){const t=cS(s);return t.position||(t.position=ne(new Z).setGroup(_e).onRenderUpdate((e,n)=>n.value.setFromMatrixPosition(s.matrixWorld)))}function hZ(s){const t=cS(s);return t.targetPosition||(t.targetPosition=ne(new Z).setGroup(_e).onRenderUpdate((e,n)=>n.value.setFromMatrixPosition(s.target.matrixWorld)))}function lS(s){const t=cS(s);return t.viewPosition||(t.viewPosition=ne(new Z).setGroup(_e).onRenderUpdate(({camera:e},n)=>{n.value=n.value||new Z,n.value.setFromMatrixPosition(s.matrixWorld),n.value.applyMatrix4(e.matrixWorldInverse)}))}const G2=s=>xo.transformDirection(V2(s).sub(hZ(s))),uZ=s=>s.sort((t,e)=>t.id-e.id),dZ=(s,t)=>{for(const e of t)if(e.isAnalyticLightNode&&e.light.id===s)return e;return null},B0=new WeakMap;class H2 extends se{static get type(){return"LightsNode"}constructor(){super("vec3"),this.totalDiffuseNode=ot().toVar("totalDiffuse"),this.totalSpecularNode=ot().toVar("totalSpecular"),this.outgoingLightNode=ot().toVar("outgoingLight"),this._lights=[],this._lightNodes=null,this._lightNodesHash=null,this.global=!0}getHash(t){if(this._lightNodesHash===null){this._lightNodes===null&&this.setupLightsNode(t);const e=[];for(const n of this._lightNodes)e.push(n.getSelf().getHash());this._lightNodesHash="lights-"+e.join(",")}return this._lightNodesHash}analyze(t){const e=t.getDataFromNode(this);for(const n of e.nodes)n.build(t)}setupLightsNode(t){const e=[],n=this._lightNodes,i=uZ(this._lights),r=t.renderer.library;for(const o of i)if(o.isNode)e.push(_t(o));else{let a=null;if(n!==null&&(a=dZ(o.id,n)),a===null){const c=r.getLightNodeClass(o.constructor);if(c===null){console.warn(`LightsNode.setupNodeLights: Light node not found for ${o.constructor.name}`);continue}let l=null;B0.has(o)?l=B0.get(o):(l=_t(new c(o)),B0.set(o,l)),e.push(l)}}this._lightNodes=e}setupLights(t,e){for(const n of e)n.build(t)}setup(t){this._lightNodes===null&&this.setupLightsNode(t);const e=t.context,n=e.lightingModel;let i=this.outgoingLightNode;if(n){const{_lightNodes:r,totalDiffuseNode:o,totalSpecularNode:a}=this;e.outgoingLight=i;const c=t.addStack(),l=t.getDataFromNode(this);l.nodes=c.nodes,n.start(e,c,t),this.setupLights(t,r),n.indirect(e,c,t);const{backdrop:h,backdropAlpha:u}=e,{directDiffuse:d,directSpecular:f,indirectDiffuse:p,indirectSpecular:_}=e.reflectedLight;let g=d.add(p);h!==null&&(u!==null?g=ot(u.mix(g,h)):g=ot(h),e.material.transparent=!0),o.assign(g),a.assign(f.add(_)),i.assign(o.add(a)),n.finish(e,c,t),i=i.bypass(t.removeStack())}return i}setLights(t){return this._lights=t,this._lightNodes=null,this._lightNodesHash=null,this}getLights(){return this._lights}get hasLights(){return this._lights.length>0}}const fZ=bt(({depthTexture:s,shadowCoord:t})=>an(s,t.xy).compare(t.z)),pZ=bt(({depthTexture:s,shadowCoord:t,shadow:e})=>{const n=(_,g)=>an(s,_).compare(g),i=nn("mapSize","vec2",e).setGroup(_e),r=nn("radius","float",e).setGroup(_e),o=At(1).div(i),a=o.x.negate().mul(r),c=o.y.negate().mul(r),l=o.x.mul(r),h=o.y.mul(r),u=a.div(2),d=c.div(2),f=l.div(2),p=h.div(2);return gi(n(t.xy.add(At(a,c)),t.z),n(t.xy.add(At(0,c)),t.z),n(t.xy.add(At(l,c)),t.z),n(t.xy.add(At(u,d)),t.z),n(t.xy.add(At(0,d)),t.z),n(t.xy.add(At(f,d)),t.z),n(t.xy.add(At(a,0)),t.z),n(t.xy.add(At(u,0)),t.z),n(t.xy,t.z),n(t.xy.add(At(f,0)),t.z),n(t.xy.add(At(l,0)),t.z),n(t.xy.add(At(u,p)),t.z),n(t.xy.add(At(0,p)),t.z),n(t.xy.add(At(f,p)),t.z),n(t.xy.add(At(a,h)),t.z),n(t.xy.add(At(0,h)),t.z),n(t.xy.add(At(l,h)),t.z)).mul(1/17)}),mZ=bt(({depthTexture:s,shadowCoord:t,shadow:e})=>{const n=(h,u)=>an(s,h).compare(u),i=nn("mapSize","vec2",e).setGroup(_e),r=At(1).div(i),o=r.x,a=r.y,c=t.xy,l=ga(c.mul(i).add(.5));return c.subAssign(l.mul(r)),gi(n(c,t.z),n(c.add(At(o,0)),t.z),n(c.add(At(0,a)),t.z),n(c.add(r),t.z),qe(n(c.add(At(o.negate(),0)),t.z),n(c.add(At(o.mul(2),0)),t.z),l.x),qe(n(c.add(At(o.negate(),a)),t.z),n(c.add(At(o.mul(2),a)),t.z),l.x),qe(n(c.add(At(0,a.negate())),t.z),n(c.add(At(0,a.mul(2))),t.z),l.y),qe(n(c.add(At(o,a.negate())),t.z),n(c.add(At(o,a.mul(2))),t.z),l.y),qe(qe(n(c.add(At(o.negate(),a.negate())),t.z),n(c.add(At(o.mul(2),a.negate())),t.z),l.x),qe(n(c.add(At(o.negate(),a.mul(2))),t.z),n(c.add(At(o.mul(2),a.mul(2))),t.z),l.x),l.y)).mul(1/9)}),gZ=bt(({depthTexture:s,shadowCoord:t})=>{const e=ct(1).toVar(),n=an(s).uv(t.xy).rg,i=ZN(t.z,n.x);return Gn(i.notEqual(ct(1)),()=>{const r=t.z.sub(n.x),o=ls(0,n.y.mul(n.y));let a=o.div(o.add(r.mul(r)));a=co(qi(a,.3).div(.95-.3)),e.assign(co(ls(i,a)))}),e}),_Z=bt(({samples:s,radius:t,size:e,shadowPass:n})=>{const i=ct(0).toVar(),r=ct(0).toVar(),o=s.lessThanEqual(ct(1)).select(ct(0),ct(2).div(s.sub(1))),a=s.lessThanEqual(ct(1)).select(ct(0),ct(-1));Qs({start:on(0),end:on(s),type:"int",condition:"<"},({i:l})=>{const h=a.add(ct(l).mul(o)),u=n.uv(gi(Eg.xy,At(0,h).mul(t)).div(e)).x;i.addAssign(u),r.addAssign(u.mul(u))}),i.divAssign(s),r.divAssign(s);const c=Yb(r.sub(i.mul(i)));return At(i,c)}),yZ=bt(({samples:s,radius:t,size:e,shadowPass:n})=>{const i=ct(0).toVar(),r=ct(0).toVar(),o=s.lessThanEqual(ct(1)).select(ct(0),ct(2).div(s.sub(1))),a=s.lessThanEqual(ct(1)).select(ct(0),ct(-1));Qs({start:on(0),end:on(s),type:"int",condition:"<"},({i:l})=>{const h=a.add(ct(l).mul(o)),u=n.uv(gi(Eg.xy,At(h,0).mul(t)).div(e));i.addAssign(u.x),r.addAssign(gi(u.y.mul(u.y),u.x.mul(u.x)))}),i.divAssign(s),r.divAssign(s);const c=Yb(r.sub(i.mul(i)));return At(i,c)}),xZ=[fZ,pZ,mZ,gZ];let dl=null;const fp=new k2;class vZ extends se{static get type(){return"ShadowNode"}constructor(t,e=null){super(),this.light=t,this.shadow=e||t.shadow,this.shadowMap=null,this.vsmShadowMapVertical=null,this.vsmShadowMapHorizontal=null,this.vsmMaterialVertical=null,this.vsmMaterialHorizontal=null,this.updateBeforeType=he.RENDER,this._node=null,this.isShadowNode=!0}setupShadow(t){const{object:e,renderer:n}=t;dl===null&&(dl=new Sn,dl.fragmentNode=ee(0,0,0,1),dl.isShadowNodeMaterial=!0,dl.name="ShadowMaterial");const i=this.shadow,r=n.shadowMap.type,o=new Fh(i.mapSize.width,i.mapSize.height);o.compareFunction=Db;const a=t.createRenderTarget(i.mapSize.width,i.mapSize.height);if(a.depthTexture=o,i.camera.updateProjectionMatrix(),r===Gf){o.compareFunction=null,this.vsmShadowMapVertical=t.createRenderTarget(i.mapSize.width,i.mapSize.height,{format:id,type:to}),this.vsmShadowMapHorizontal=t.createRenderTarget(i.mapSize.width,i.mapSize.height,{format:id,type:to});const x=an(o),v=an(this.vsmShadowMapVertical.texture),y=nn("blurSamples","float",i).setGroup(_e),b=nn("radius","float",i).setGroup(_e),S=nn("mapSize","vec2",i).setGroup(_e);let M=this.vsmMaterialVertical||(this.vsmMaterialVertical=new Sn);M.fragmentNode=_Z({samples:y,radius:b,size:S,shadowPass:x}).context(t.getSharedContext()),M.name="VSMVertical",M=this.vsmMaterialHorizontal||(this.vsmMaterialHorizontal=new Sn),M.fragmentNode=yZ({samples:y,radius:b,size:S,shadowPass:v}).context(t.getSharedContext()),M.name="VSMHorizontal"}const c=nn("intensity","float",i).setGroup(_e),l=nn("bias","float",i).setGroup(_e),h=nn("normalBias","float",i).setGroup(_e),u=e.material.shadowPositionNode||Xx;let d=ne(i.matrix).setGroup(_e).mul(u.add(eS.mul(h))),f;if(i.camera.isOrthographicCamera||n.logarithmicDepthBuffer!==!0)d=d.xyz.div(d.w),f=d.z,n.coordinateSystem===pc&&(f=f.mul(2).sub(1));else{const x=d.w;d=d.xy.div(x);const v=ne("float").onRenderUpdate(()=>i.camera.near),y=ne("float").onRenderUpdate(()=>i.camera.far);f=x2(x,v,y)}d=ot(d.x,d.y.oneMinus(),f.add(l));const p=d.x.greaterThanEqual(0).and(d.x.lessThanEqual(1)).and(d.y.greaterThanEqual(0)).and(d.y.lessThanEqual(1)).and(d.z.lessThanEqual(1)),_=i.filterNode||xZ[n.shadowMap.type]||null;if(_===null)throw new Error("THREE.WebGPURenderer: Shadow map type not supported yet.");const g=an(a.texture,d),m=p.select(_({depthTexture:r===Gf?this.vsmShadowMapHorizontal.texture:o,shadowCoord:d,shadow:i}),ct(1));return this.shadowMap=a,this.shadow.map=a,qe(1,m.rgb.mix(g,1),c.mul(g.a))}setup(t){if(t.renderer.shadowMap.enabled!==!1)return this._node!==null?this._node:this._node=this.setupShadow(t)}updateShadow(t){const{shadowMap:e,light:n,shadow:i}=this,{renderer:r,scene:o,camera:a}=t,c=r.shadowMap.type,l=e.depthTexture.version;this._depthVersionCached=l;const h=o.overrideMaterial;o.overrideMaterial=dl,e.setSize(i.mapSize.width,i.mapSize.height),i.updateMatrices(n),i.camera.layers.mask=a.layers.mask;const u=r.getRenderTarget(),d=r.getRenderObjectFunction();r.setRenderObjectFunction((f,...p)=>{(f.castShadow===!0||f.receiveShadow&&c===Gf)&&r.renderObject(f,...p)}),r.setRenderTarget(e),r.render(o,i.camera),r.setRenderObjectFunction(d),n.isPointLight!==!0&&c===Gf&&this.vsmPass(r),r.setRenderTarget(u),o.overrideMaterial=h}vsmPass(t){const{shadow:e}=this;this.vsmShadowMapVertical.setSize(e.mapSize.width,e.mapSize.height),this.vsmShadowMapHorizontal.setSize(e.mapSize.width,e.mapSize.height),t.setRenderTarget(this.vsmShadowMapVertical),fp.material=this.vsmMaterialVertical,fp.render(t),t.setRenderTarget(this.vsmShadowMapHorizontal),fp.material=this.vsmMaterialHorizontal,fp.render(t)}dispose(){this.shadowMap.dispose(),this.shadowMap=null,this.vsmShadowMapVertical!==null&&(this.vsmShadowMapVertical.dispose(),this.vsmShadowMapVertical=null,this.vsmMaterialVertical.dispose(),this.vsmMaterialVertical=null),this.vsmShadowMapHorizontal!==null&&(this.vsmShadowMapHorizontal.dispose(),this.vsmShadowMapHorizontal=null,this.vsmMaterialHorizontal.dispose(),this.vsmMaterialHorizontal=null),this.updateBeforeType=he.NONE}updateBefore(t){const{shadow:e}=this;(e.needsUpdate||e.autoUpdate)&&(this.updateShadow(t),this.shadowMap.depthTexture.version===this._depthVersionCached&&(e.needsUpdate=!1))}}const bZ=(s,t)=>_t(new vZ(s,t));class wc extends Lh{static get type(){return"AnalyticLightNode"}constructor(t=null){super(),this.updateType=he.FRAME,this.light=t,this.color=new Pe,this.colorNode=ne(this.color).setGroup(_e),this.baseColorNode=null,this.shadowNode=null,this.shadowColorNode=null,this.isAnalyticLightNode=!0}getCacheKey(){return Lm(super.getCacheKey(),this.light.id,this.light.castShadow?1:0)}getHash(){return this.light.uuid}setupShadow(t){const{renderer:e}=t;if(e.shadowMap.enabled===!1)return;let n=this.shadowColorNode;if(n===null){const i=this.light.shadow.shadowNode;let r;i!==void 0?r=_t(i):r=bZ(this.light),this.shadowNode=r,this.shadowColorNode=n=this.colorNode.mul(r),this.baseColorNode=this.colorNode}this.colorNode=n}setup(t){this.colorNode=this.baseColorNode||this.colorNode,this.light.castShadow?t.object.receiveShadow&&this.setupShadow(t):this.shadowNode!==null&&this.shadowNode.dispose()}update(){const{light:t}=this;this.color.copy(t.color).multiplyScalar(t.intensity)}}const $2=bt(s=>{const{lightDistance:t,cutoffDistance:e,decayExponent:n}=s,i=t.pow(n).max(.01).reciprocal();return e.greaterThan(0).select(i.mul(t.div(e).pow4().oneMinus().clamp().pow2()),i)}),SZ=bt(({color:s,lightViewPosition:t,cutoffDistance:e,decayExponent:n},i)=>{const r=i.context.lightingModel,o=t.sub(zn),a=o.normalize(),c=o.length(),l=$2({lightDistance:c,cutoffDistance:e,decayExponent:n}),h=s.mul(l),u=i.context.reflectedLight;r.direct({lightDirection:a,lightColor:h,reflectedLight:u},i.stack,i)});class MZ extends wc{static get type(){return"PointLightNode"}constructor(t=null){super(t),this.cutoffDistanceNode=ne(0).setGroup(_e),this.decayExponentNode=ne(0).setGroup(_e)}update(t){const{light:e}=this;super.update(t),this.cutoffDistanceNode.value=e.distance,this.decayExponentNode.value=e.decay}setup(){SZ({color:this.colorNode,lightViewPosition:lS(this.light),cutoffDistance:this.cutoffDistanceNode,decayExponent:this.decayExponentNode}).append()}}const TZ=bt(([s,t])=>{const e=s.x,n=s.y,i=s.z;let r=t.element(0).mul(.886227);return r=r.add(t.element(1).mul(2*.511664).mul(n)),r=r.add(t.element(2).mul(2*.511664).mul(i)),r=r.add(t.element(3).mul(2*.511664).mul(e)),r=r.add(t.element(4).mul(2*.429043).mul(e).mul(n)),r=r.add(t.element(5).mul(2*.429043).mul(n).mul(i)),r=r.add(t.element(6).mul(i.mul(i).mul(.743125).sub(.247708))),r=r.add(t.element(7).mul(2*.429043).mul(e).mul(i)),r=r.add(t.element(8).mul(.429043).mul(de(e,e).sub(de(n,n)))),r}),Nr=new aS;class wZ extends _a{constructor(t,e){super(),this.renderer=t,this.nodes=e}update(t,e,n){const i=this.renderer,r=this.nodes.getBackgroundNode(t)||t.background;let o=!1;if(r===null)i._clearColor.getRGB(Nr,ia),Nr.a=i._clearColor.a;else if(r.isColor===!0)r.getRGB(Nr,ia),Nr.a=1,o=!0;else if(r.isNode===!0){const a=this.get(t),c=r;Nr.copy(i._clearColor);let l=a.backgroundMesh;if(l===void 0){const u=Qb(ee(c).mul(I1),{getUV:()=>HY.mul(c2),getTextureLevel:()=>GY});let d=Yx();d=d.setZ(d.w);const f=new Sn;f.name="Background.material",f.side=Vs,f.depthTest=!1,f.depthWrite=!1,f.fog=!1,f.lights=!1,f.vertexNode=d,f.colorNode=u,a.backgroundMeshNode=u,a.backgroundMesh=l=new mc(new Ub(1,32,32),f),l.frustumCulled=!1,l.name="Background.mesh",l.onBeforeRender=function(p,_,g){this.matrixWorld.copyPosition(g.matrixWorld)}}const h=c.getCacheKey();a.backgroundCacheKey!==h&&(a.backgroundMeshNode.node=ee(c).mul(I1),a.backgroundMeshNode.needsUpdate=!0,l.material.needsUpdate=!0,a.backgroundCacheKey=h),e.unshift(l,l.geometry,l.material,0,0,null)}else console.error("THREE.Renderer: Unsupported background configuration.",r);if(i.autoClear===!0||o===!0){const a=n.clearColorValue;a.r=Nr.r,a.g=Nr.g,a.b=Nr.b,a.a=Nr.a,(i.backend.isWebGLBackend===!0||i.alpha===!0)&&(a.r*=a.a,a.g*=a.a,a.b*=a.a),n.depthClearValue=i._clearDepth,n.stencilClearValue=i._clearStencil,n.clearColor=i.autoClearColor===!0,n.clearDepth=i.autoClearDepth===!0,n.clearStencil=i.autoClearStencil===!0}else n.clearColor=!1,n.clearDepth=!1,n.clearStencil=!1}}let AZ=0;class sv{constructor(t="",e=[],n=0,i=[]){this.name=t,this.bindings=e,this.index=n,this.bindingsReference=i,this.id=AZ++}}class EZ{constructor(t,e,n,i,r,o,a,c,l,h=[]){this.vertexShader=t,this.fragmentShader=e,this.computeShader=n,this.transforms=h,this.nodeAttributes=i,this.bindings=r,this.updateNodes=o,this.updateBeforeNodes=a,this.updateAfterNodes=c,this.monitor=l,this.usedTimes=0}createBindings(){const t=[];for(const e of this.bindings)if(e.bindings[0].groupNode.shared!==!0){const i=new sv(e.name,[],e.index,e);t.push(i);for(const r of e.bindings)i.bindings.push(r.clone())}else t.push(e);return t}}class U1{constructor(t,e,n=null){this.isNodeAttribute=!0,this.name=t,this.type=e,this.node=n}}class CZ{constructor(t,e,n){this.isNodeUniform=!0,this.name=t,this.type=e,this.node=n.getSelf()}get value(){return this.node.value}set value(t){this.node.value=t}get id(){return this.node.id}get groupNode(){return this.node.groupNode}}class W2{constructor(t,e){this.isNodeVar=!0,this.name=t,this.type=e}}class RZ extends W2{constructor(t,e){super(t,e),this.needsInterpolation=!1,this.isNodeVarying=!0}}class NZ{constructor(t,e,n=""){this.name=t,this.type=e,this.code=n,Object.defineProperty(this,"isNodeCode",{value:!0})}}let PZ=0;class U0{constructor(t=null){this.id=PZ++,this.nodesData=new WeakMap,this.parent=t}getData(t){let e=this.nodesData.get(t);return e===void 0&&this.parent!==null&&(e=this.parent.getData(t)),e}setData(t,e){this.nodesData.set(t,e)}}class Ac{constructor(t,e){this.name=t,this.value=e,this.boundary=0,this.itemSize=0,this.offset=0}setValue(t){this.value=t}getValue(){return this.value}}class DZ extends Ac{constructor(t,e=0){super(t,e),this.isNumberUniform=!0,this.boundary=4,this.itemSize=1}}class IZ extends Ac{constructor(t,e=new xe){super(t,e),this.isVector2Uniform=!0,this.boundary=8,this.itemSize=2}}class FZ extends Ac{constructor(t,e=new Z){super(t,e),this.isVector3Uniform=!0,this.boundary=16,this.itemSize=3}}class OZ extends Ac{constructor(t,e=new Ne){super(t,e),this.isVector4Uniform=!0,this.boundary=16,this.itemSize=4}}class LZ extends Ac{constructor(t,e=new Pe){super(t,e),this.isColorUniform=!0,this.boundary=16,this.itemSize=3}}class BZ extends Ac{constructor(t,e=new Ii){super(t,e),this.isMatrix3Uniform=!0,this.boundary=48,this.itemSize=12}}class UZ extends Ac{constructor(t,e=new Je){super(t,e),this.isMatrix4Uniform=!0,this.boundary=64,this.itemSize=16}}class kZ extends DZ{constructor(t){super(t.name,t.value),this.nodeUniform=t}getValue(){return this.nodeUniform.value}}class zZ extends IZ{constructor(t){super(t.name,t.value),this.nodeUniform=t}getValue(){return this.nodeUniform.value}}class VZ extends FZ{constructor(t){super(t.name,t.value),this.nodeUniform=t}getValue(){return this.nodeUniform.value}}class GZ extends OZ{constructor(t){super(t.name,t.value),this.nodeUniform=t}getValue(){return this.nodeUniform.value}}class HZ extends LZ{constructor(t){super(t.name,t.value),this.nodeUniform=t}getValue(){return this.nodeUniform.value}}class $Z extends BZ{constructor(t){super(t.name,t.value),this.nodeUniform=t}getValue(){return this.nodeUniform.value}}class WZ extends UZ{constructor(t){super(t.name,t.value),this.nodeUniform=t}getValue(){return this.nodeUniform.value}}const Pl=4,k1=[.125,.215,.35,.446,.526,.582],qa=20,k0=new Vb(-1,1,1,-1,0,1),qZ=new Br(90,1),z1=new Pe;let z0=null,V0=0,G0=0;const Ua=(1+Math.sqrt(5))/2,fl=1/Ua,V1=[new Z(-Ua,fl,0),new Z(Ua,fl,0),new Z(-fl,0,Ua),new Z(fl,0,Ua),new Z(0,Ua,-fl),new Z(0,Ua,fl),new Z(-1,1,-1),new Z(1,1,-1),new Z(-1,1,1),new Z(1,1,1)],jZ=[3,1,5,0,4,2],H0=B7(Tg(),lo("faceIndex")).normalize(),hS=ot(H0.x,H0.y.negate(),H0.z);class XZ{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._lodMeshes=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._backgroundBox=null}fromScene(t,e=0,n=.1,i=100){z0=this._renderer.getRenderTarget(),V0=this._renderer.getActiveCubeFace(),G0=this._renderer.getActiveMipmapLevel(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(t,n,i,r),e>0&&this._blur(r,0,0,e),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}async compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=H1(),await this._compileMaterial(this._cubemapMaterial))}async compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=$1(),await this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose(),this._backgroundBox!==null&&(this._backgroundBox.geometry.dispose(),this._backgroundBox.material.dispose())}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(z0,V0,G0),t.scissorTest=!1,pp(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===dc||t.mapping===uh?this._setSize(t.image.length===0?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),z0=this._renderer.getRenderTarget(),V0=this._renderer.getActiveCubeFace(),G0=this._renderer.getActiveMipmapLevel();const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:Yi,minFilter:Yi,generateMipmaps:!1,type:to,format:Ph,colorSpace:ia},i=G1(t,e,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=G1(t,e,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas,lodMeshes:this._lodMeshes}=YZ(r)),this._blurMaterial=ZZ(r,t,e)}return i}async _compileMaterial(t){const e=new mc(this._lodPlanes[0],t);await this._renderer.compile(e,k0)}_sceneToCubeUV(t,e,n,i){const r=qZ;r.near=e,r.far=n;const o=[-1,1,-1,-1,-1,-1],a=[1,1,1,-1,-1,-1],c=this._renderer,l=c.autoClear;c.getClearColor(z1),c.autoClear=!1;let h=this._backgroundBox;if(h===null){const f=new yg({name:"PMREM.Background",side:Vs,depthWrite:!1,depthTest:!1});h=new mc(new Ud,f)}let u=!1;const d=t.background;d?d.isColor&&(h.material.color.copy(d),t.background=null,u=!0):(h.material.color.copy(z1),u=!0),c.setRenderTarget(i),c.clear(),u&&c.render(h,r);for(let f=0;f<6;f++){const p=f%3;p===0?(r.up.set(0,o[f],0),r.lookAt(a[f],0,0)):p===1?(r.up.set(0,0,o[f]),r.lookAt(0,a[f],0)):(r.up.set(0,o[f],0),r.lookAt(0,0,a[f]));const _=this._cubeSize;pp(i,p*_,f>2?_:0,_,_),c.render(t,r)}c.autoClear=l,t.background=d}_textureToCubeUV(t,e){const n=this._renderer,i=t.mapping===dc||t.mapping===uh;i?this._cubemapMaterial===null&&(this._cubemapMaterial=H1(t)):this._equirectMaterial===null&&(this._equirectMaterial=$1(t));const r=i?this._cubemapMaterial:this._equirectMaterial;r.fragmentNode.value=t;const o=this._lodMeshes[0];o.material=r;const a=this._cubeSize;pp(e,0,0,3*a,2*a),n.setRenderTarget(e),n.render(o,k0)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;const i=this._lodPlanes.length;for(let r=1;r<i;r++){const o=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),a=V1[(i-r-1)%V1.length];this._blur(t,r-1,r,o,a)}e.autoClear=n}_blur(t,e,n,i,r){const o=this._pingPongRenderTarget;this._halfBlur(t,o,e,n,i,"latitudinal",r),this._halfBlur(o,t,n,n,i,"longitudinal",r)}_halfBlur(t,e,n,i,r,o,a){const c=this._renderer,l=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,u=this._lodMeshes[i];u.material=l;const d=l.uniforms,f=this._sizeLods[n]-1,p=isFinite(r)?Math.PI/(2*f):2*Math.PI/(2*qa-1),_=r/p,g=isFinite(r)?1+Math.floor(h*_):qa;g>qa&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${qa}`);const m=[];let x=0;for(let M=0;M<qa;++M){const T=M/_,A=Math.exp(-T*T/2);m.push(A),M===0?x+=A:M<g&&(x+=2*A)}for(let M=0;M<m.length;M++)m[M]=m[M]/x;t.texture.frame=(t.texture.frame||0)+1,d.envMap.value=t.texture,d.samples.value=g,d.weights.array=m,d.latitudinal.value=o==="latitudinal"?1:0,a&&(d.poleAxis.value=a);const{_lodMax:v}=this;d.dTheta.value=p,d.mipInt.value=v-n;const y=this._sizeLods[i],b=3*y*(i>v-Pl?i-v+Pl:0),S=4*(this._cubeSize-y);pp(e,b,S,3*y,2*y),c.setRenderTarget(e),c.render(u,k0)}}function YZ(s){const t=[],e=[],n=[],i=[];let r=s;const o=s-Pl+1+k1.length;for(let a=0;a<o;a++){const c=Math.pow(2,r);e.push(c);let l=1/c;a>s-Pl?l=k1[a-s+Pl-1]:a===0&&(l=0),n.push(l);const h=1/(c-2),u=-h,d=1+h,f=[u,u,d,u,d,d,u,u,d,d,u,d],p=6,_=6,g=3,m=2,x=1,v=new Float32Array(g*_*p),y=new Float32Array(m*_*p),b=new Float32Array(x*_*p);for(let M=0;M<p;M++){const T=M%3*2/3-1,A=M>2?0:-1,w=[T,A,0,T+2/3,A,0,T+2/3,A+1,0,T,A,0,T+2/3,A+1,0,T,A+1,0],E=jZ[M];v.set(w,g*_*E),y.set(f,m*_*E);const N=[E,E,E,E,E,E];b.set(N,x*_*E)}const S=new Mc;S.setAttribute("position",new as(v,g)),S.setAttribute("uv",new as(y,m)),S.setAttribute("faceIndex",new as(b,x)),t.push(S),i.push(new mc(S,null)),r>Pl&&r--}return{lodPlanes:t,sizeLods:e,sigmas:n,lodMeshes:i}}function G1(s,t,e){const n=new Ih(s,t,e);return n.texture.mapping=Sx,n.texture.name="PMREM.cubeUv",n.texture.isPMREMTexture=!0,n.scissorTest=!0,n}function pp(s,t,e,n,i){s.viewport.set(t,e,n,i),s.scissor.set(t,e,n,i)}function uS(s){const t=new Sn;return t.depthTest=!1,t.depthWrite=!1,t.blending=hh,t.name=`PMREM_${s}`,t}function ZZ(s,t,e){const n=dd(new Array(qa).fill(0)),i=ne(new Z(0,1,0)),r=ne(0),o=ct(qa),a=ne(0),c=ne(1),l=an(null),h=ne(0),u=ct(1/t),d=ct(1/e),f=ct(s),p={n:o,latitudinal:a,weights:n,poleAxis:i,outputDirection:hS,dTheta:r,samples:c,envMap:l,mipInt:h,CUBEUV_TEXEL_WIDTH:u,CUBEUV_TEXEL_HEIGHT:d,CUBEUV_MAX_MIP:f},_=uS("blur");return _.uniforms=p,_.fragmentNode=k7({...p,latitudinal:a.equal(1)}),_}function H1(s){const t=uS("cubemap");return t.fragmentNode=ud(s,hS),t}function $1(s){const t=uS("equirect");return t.fragmentNode=an(s,S2(hS),0),t}const W1=new WeakMap,KZ=new Map([[2,"vec2"],[3,"vec3"],[4,"vec4"],[9,"mat3"],[16,"mat4"]]),QZ=new Map([[Int8Array,"int"],[Int16Array,"int"],[Int32Array,"int"],[Uint8Array,"uint"],[Uint16Array,"uint"],[Uint32Array,"uint"],[Float32Array,"float"]]),mp=s=>/e/g.test(s)?String(s).replace(/\+/g,""):(s=Number(s),s+(s%1?"":".0"));class q2{constructor(t,e,n){this.object=t,this.material=t&&t.material||null,this.geometry=t&&t.geometry||null,this.renderer=e,this.parser=n,this.scene=null,this.camera=null,this.nodes=[],this.sequentialNodes=[],this.updateNodes=[],this.updateBeforeNodes=[],this.updateAfterNodes=[],this.hashNodes={},this.monitor=null,this.lightsNode=null,this.environmentNode=null,this.fogNode=null,this.clippingContext=null,this.vertexShader=null,this.fragmentShader=null,this.computeShader=null,this.flowNodes={vertex:[],fragment:[],compute:[]},this.flowCode={vertex:"",fragment:"",compute:""},this.uniforms={vertex:[],fragment:[],compute:[],index:0},this.structs={vertex:[],fragment:[],compute:[],index:0},this.bindings={vertex:{},fragment:{},compute:{}},this.bindingsIndexes={},this.bindGroups=null,this.attributes=[],this.bufferAttributes=[],this.varyings=[],this.codes={},this.vars={},this.flow={code:""},this.chaining=[],this.stack=P0(),this.stacks=[],this.tab="	",this.currentFunctionNode=null,this.context={material:this.material},this.cache=new U0,this.globalCache=this.cache,this.flowsData=new WeakMap,this.shaderStage=null,this.buildStage=null,this.useComparisonMethod=!1}getBindGroupsCache(){let t=W1.get(this.renderer);return t===void 0&&(t=new or,W1.set(this.renderer,t)),t}createRenderTarget(t,e,n){return new Ih(t,e,n)}createCubeRenderTarget(t,e){return new M2(t,e)}createPMREMGenerator(){return new XZ(this.renderer)}includes(t){return this.nodes.includes(t)}_getBindGroup(t,e){const n=this.getBindGroupsCache(),i=[];let r=!0;for(const a of e)i.push(a),r=r&&a.groupNode.shared!==!0;let o;return r?(o=n.get(i),o===void 0&&(o=new sv(t,i,this.bindingsIndexes[t].group,i),n.set(i,o))):o=new sv(t,i,this.bindingsIndexes[t].group,i),o}getBindGroupArray(t,e){const n=this.bindings[e];let i=n[t];return i===void 0&&(this.bindingsIndexes[t]===void 0&&(this.bindingsIndexes[t]={binding:0,group:Object.keys(this.bindingsIndexes).length}),n[t]=i=[]),i}getBindings(){let t=this.bindGroups;if(t===null){const e={},n=this.bindings;for(const i of jw)for(const r in n[i]){const o=n[i][r];(e[r]||(e[r]=[])).push(...o)}t=[];for(const i in e){const r=e[i],o=this._getBindGroup(i,r);t.push(o)}this.bindGroups=t}return t}sortBindingGroups(){const t=this.getBindings();t.sort((e,n)=>e.bindings[0].groupNode.order-n.bindings[0].groupNode.order);for(let e=0;e<t.length;e++){const n=t[e];this.bindingsIndexes[n.name].group=e,n.index=e}}setHashNode(t,e){this.hashNodes[e]=t}addNode(t){this.nodes.includes(t)===!1&&(this.nodes.push(t),this.setHashNode(t,t.getHash(this)))}addSequentialNode(t){this.sequentialNodes.includes(t)===!1&&this.sequentialNodes.push(t)}buildUpdateNodes(){for(const t of this.nodes)t.getUpdateType()!==he.NONE&&this.updateNodes.push(t.getSelf());for(const t of this.sequentialNodes){const e=t.getUpdateBeforeType(),n=t.getUpdateAfterType();e!==he.NONE&&this.updateBeforeNodes.push(t.getSelf()),n!==he.NONE&&this.updateAfterNodes.push(t.getSelf())}}get currentNode(){return this.chaining[this.chaining.length-1]}isFilteredTexture(t){return t.magFilter===Yi||t.magFilter===Tx||t.magFilter===Gl||t.magFilter===Jr||t.minFilter===Yi||t.minFilter===Tx||t.minFilter===Gl||t.minFilter===Jr}addChain(t){this.chaining.push(t)}removeChain(t){if(this.chaining.pop()!==t)throw new Error("NodeBuilder: Invalid node chaining!")}getMethod(t){return t}getNodeFromHash(t){return this.hashNodes[t]}addFlow(t,e){return this.flowNodes[t].push(e),e}setContext(t){this.context=t}getContext(){return this.context}getSharedContext(){return{...this.context},this.context}setCache(t){this.cache=t}getCache(){return this.cache}getCacheFromNode(t,e=!0){const n=this.getDataFromNode(t);return n.cache===void 0&&(n.cache=new U0(e?this.getCache():null)),n.cache}isAvailable(){return!1}getVertexIndex(){console.warn("Abstract function.")}getInstanceIndex(){console.warn("Abstract function.")}getDrawIndex(){console.warn("Abstract function.")}getFrontFacing(){console.warn("Abstract function.")}getFragCoord(){console.warn("Abstract function.")}isFlipY(){return!1}increaseUsage(t){const e=this.getDataFromNode(t);return e.usageCount=e.usageCount===void 0?1:e.usageCount+1,e.usageCount}generateTexture(){console.warn("Abstract function.")}generateTextureLod(){console.warn("Abstract function.")}generateConst(t,e=null){if(e===null&&(t==="float"||t==="int"||t==="uint"?e=0:t==="bool"?e=!1:t==="color"?e=new Pe:t==="vec2"?e=new xe:t==="vec3"?e=new Z:t==="vec4"&&(e=new Ne)),t==="float")return mp(e);if(t==="int")return`${Math.round(e)}`;if(t==="uint")return e>=0?`${Math.round(e)}u`:"0u";if(t==="bool")return e?"true":"false";if(t==="color")return`${this.getType("vec3")}( ${mp(e.r)}, ${mp(e.g)}, ${mp(e.b)} )`;const n=this.getTypeLength(t),i=this.getComponentType(t),r=o=>this.generateConst(i,o);if(n===2)return`${this.getType(t)}( ${r(e.x)}, ${r(e.y)} )`;if(n===3)return`${this.getType(t)}( ${r(e.x)}, ${r(e.y)}, ${r(e.z)} )`;if(n===4)return`${this.getType(t)}( ${r(e.x)}, ${r(e.y)}, ${r(e.z)}, ${r(e.w)} )`;if(n>4&&e&&(e.isMatrix3||e.isMatrix4))return`${this.getType(t)}( ${e.elements.map(r).join(", ")} )`;if(n>4)return`${this.getType(t)}()`;throw new Error(`NodeBuilder: Type '${t}' not found in generate constant attempt.`)}getType(t){return t==="color"?"vec3":t}hasGeometryAttribute(t){return this.geometry&&this.geometry.getAttribute(t)!==void 0}getAttribute(t,e){const n=this.attributes;for(const r of n)if(r.name===t)return r;const i=new U1(t,e);return n.push(i),i}getPropertyName(t){return t.name}isVector(t){return/vec\d/.test(t)}isMatrix(t){return/mat\d/.test(t)}isReference(t){return t==="void"||t==="property"||t==="sampler"||t==="texture"||t==="cubeTexture"||t==="storageTexture"||t==="depthTexture"||t==="texture3D"}needsToWorkingColorSpace(){return!1}getComponentTypeFromTexture(t){const e=t.type;if(t.isDataTexture){if(e===li)return"int";if(e===Un)return"uint"}return"float"}getElementType(t){return t==="mat2"?"vec2":t==="mat3"?"vec3":t==="mat4"?"vec4":this.getComponentType(t)}getComponentType(t){if(t=this.getVectorType(t),t==="float"||t==="bool"||t==="int"||t==="uint")return t;const e=/(b|i|u|)(vec|mat)([2-4])/.exec(t);return e===null?null:e[1]==="b"?"bool":e[1]==="i"?"int":e[1]==="u"?"uint":"float"}getVectorType(t){return t==="color"?"vec3":t==="texture"||t==="cubeTexture"||t==="storageTexture"||t==="texture3D"?"vec4":t}getTypeFromLength(t,e="float"){if(t===1)return e;const n=KZ.get(t);return(e==="float"?"":e[0])+n}getTypeFromArray(t){return QZ.get(t.constructor)}getTypeFromAttribute(t){let e=t;t.isInterleavedBufferAttribute&&(e=t.data);const n=e.array,i=t.itemSize,r=t.normalized;let o;return!(t instanceof aN)&&r!==!0&&(o=this.getTypeFromArray(n)),this.getTypeFromLength(i,o)}getTypeLength(t){const e=this.getVectorType(t),n=/vec([2-4])/.exec(e);return n!==null?Number(n[1]):e==="float"||e==="bool"||e==="int"||e==="uint"?1:/mat2/.test(t)===!0?4:/mat3/.test(t)===!0?9:/mat4/.test(t)===!0?16:0}getVectorFromMatrix(t){return t.replace("mat","vec")}changeComponentType(t,e){return this.getTypeFromLength(this.getTypeLength(t),e)}getIntegerType(t){const e=this.getComponentType(t);return e==="int"||e==="uint"?t:this.changeComponentType(t,"int")}addStack(){return this.stack=P0(this.stack),this.stacks.push(DN()||this.stack),km(this.stack),this.stack}removeStack(){const t=this.stack;return this.stack=t.parent,km(this.stacks.pop()),t}getDataFromNode(t,e=this.shaderStage,n=null){n=n===null?t.isGlobal(this)?this.globalCache:this.cache:n;let i=n.getData(t);return i===void 0&&(i={},n.setData(t,i)),i[e]===void 0&&(i[e]={}),i[e]}getNodeProperties(t,e="any"){const n=this.getDataFromNode(t,e);return n.properties||(n.properties={outputNode:null})}getBufferAttributeFromNode(t,e){const n=this.getDataFromNode(t);let i=n.bufferAttribute;if(i===void 0){const r=this.uniforms.index++;i=new U1("nodeAttribute"+r,e,t),this.bufferAttributes.push(i),n.bufferAttribute=i}return i}getStructTypeFromNode(t,e=this.shaderStage){const n=this.getDataFromNode(t,e);if(n.structType===void 0){const i=this.structs.index++;t.name=`StructType${i}`,this.structs[e].push(t),n.structType=t}return t}getUniformFromNode(t,e,n=this.shaderStage,i=null){const r=this.getDataFromNode(t,n,this.globalCache);let o=r.uniform;if(o===void 0){const a=this.uniforms.index++;o=new CZ(i||"nodeUniform"+a,e,t),this.uniforms[n].push(o),r.uniform=o}return o}getVarFromNode(t,e=null,n=t.getNodeType(this),i=this.shaderStage){const r=this.getDataFromNode(t,i);let o=r.variable;if(o===void 0){const a=this.vars[i]||(this.vars[i]=[]);e===null&&(e="nodeVar"+a.length),o=new W2(e,n),a.push(o),r.variable=o}return o}getVaryingFromNode(t,e=null,n=t.getNodeType(this)){const i=this.getDataFromNode(t,"any");let r=i.varying;if(r===void 0){const o=this.varyings,a=o.length;e===null&&(e="nodeVarying"+a),r=new RZ(e,n),o.push(r),i.varying=r}return r}getCodeFromNode(t,e,n=this.shaderStage){const i=this.getDataFromNode(t);let r=i.code;if(r===void 0){const o=this.codes[n]||(this.codes[n]=[]),a=o.length;r=new NZ("nodeCode"+a,e),o.push(r),i.code=r}return r}addFlowCodeHierarchy(t,e){const{flowCodes:n,flowCodeBlock:i}=this.getDataFromNode(t);let r=!0,o=e;for(;o;){if(i.get(o)===!0){r=!1;break}o=this.getDataFromNode(o).parentNodeBlock}if(r)for(const a of n)this.addLineFlowCode(a)}addLineFlowCodeBlock(t,e,n){const i=this.getDataFromNode(t),r=i.flowCodes||(i.flowCodes=[]),o=i.flowCodeBlock||(i.flowCodeBlock=new WeakMap);r.push(e),o.set(n,!0)}addLineFlowCode(t,e=null){return t===""?this:(e!==null&&this.context.nodeBlock&&this.addLineFlowCodeBlock(e,t,this.context.nodeBlock),t=this.tab+t,/;\s*$/.test(t)||(t=t+`;
`),this.flow.code+=t,this)}addFlowCode(t){return this.flow.code+=t,this}addFlowTab(){return this.tab+="	",this}removeFlowTab(){return this.tab=this.tab.slice(0,-1),this}getFlowData(t){return this.flowsData.get(t)}flowNode(t){const e=t.getNodeType(this),n=this.flowChildNode(t,e);return this.flowsData.set(t,n),n}buildFunctionNode(t){const e=new iZ,n=this.currentFunctionNode;return this.currentFunctionNode=e,e.code=this.buildFunctionCode(t),this.currentFunctionNode=n,e}flowShaderNode(t){const e=t.layout,n={[Symbol.iterator](){let o=0;const a=Object.values(this);return{next:()=>({value:a[o],done:o++>=a.length})}}};for(const o of e.inputs)n[o.name]=new BY(o.type,o.name);t.layout=null;const i=t.call(n),r=this.flowStagesNode(i,e.type);return t.layout=e,r}flowStagesNode(t,e=null){const n=this.flow,i=this.vars,r=this.cache,o=this.buildStage,a=this.stack,c={code:""};this.flow=c,this.vars={},this.cache=new U0,this.stack=P0();for(const l of qw)this.setBuildStage(l),c.result=t.build(this,e);return c.vars=this.getVars(this.shaderStage),this.flow=n,this.vars=i,this.cache=r,this.stack=a,this.setBuildStage(o),c}getFunctionOperator(){return null}flowChildNode(t,e=null){const n=this.flow,i={code:""};return this.flow=i,i.result=t.build(this,e),this.flow=n,i}flowNodeFromShaderStage(t,e,n=null,i=null){const r=this.shaderStage;this.setShaderStage(t);const o=this.flowChildNode(e,n);return i!==null&&(o.code+=`${this.tab+i} = ${o.result};
`),this.flowCode[t]=this.flowCode[t]+o.code,this.setShaderStage(r),o}getAttributesArray(){return this.attributes.concat(this.bufferAttributes)}getAttributes(){console.warn("Abstract function.")}getVaryings(){console.warn("Abstract function.")}getVar(t,e){return`${this.getType(t)} ${e}`}getVars(t){let e="";const n=this.vars[t];if(n!==void 0)for(const i of n)e+=`${this.getVar(i.type,i.name)}; `;return e}getUniforms(){console.warn("Abstract function.")}getCodes(t){const e=this.codes[t];let n="";if(e!==void 0)for(const i of e)n+=i.code+`
`;return n}getHash(){return this.vertexShader+this.fragmentShader+this.computeShader}setShaderStage(t){this.shaderStage=t}getShaderStage(){return this.shaderStage}setBuildStage(t){this.buildStage=t}getBuildStage(){return this.buildStage}buildCode(){console.warn("Abstract function.")}build(){const{object:t,material:e,renderer:n}=this;if(e!==null){let i=n.library.fromMaterial(e);i===null&&(console.error(`NodeMaterial: Material "${e.type}" is not compatible.`),i=new Sn),i.build(this)}else this.addFlow("compute",t);for(const i of qw){this.setBuildStage(i),this.context.vertex&&this.context.vertex.isNode&&this.flowNodeFromShaderStage("vertex",this.context.vertex);for(const r of jw){this.setShaderStage(r);const o=this.flowNodes[r];for(const a of o)i==="generate"?this.flowNode(a):a.build(this)}}return this.setBuildStage(null),this.setShaderStage(null),this.buildCode(),this.buildUpdateNodes(),this}getNodeUniform(t,e){if(e==="float"||e==="int"||e==="uint")return new kZ(t);if(e==="vec2"||e==="ivec2"||e==="uvec2")return new zZ(t);if(e==="vec3"||e==="ivec3"||e==="uvec3")return new VZ(t);if(e==="vec4"||e==="ivec4"||e==="uvec4")return new GZ(t);if(e==="color")return new HZ(t);if(e==="mat3")return new $Z(t);if(e==="mat4")return new WZ(t);throw new Error(`Uniform "${e}" not declared.`)}createNodeMaterial(t="NodeMaterial"){throw new Error(`THREE.NodeBuilder: createNodeMaterial() was deprecated. Use new ${t}() instead.`)}format(t,e,n){if(e=this.getVectorType(e),n=this.getVectorType(n),e===n||n===null||this.isReference(n))return t;const i=this.getTypeLength(e),r=this.getTypeLength(n);return i===16&&r===9?`${this.getType(n)}(${t}[0].xyz, ${t}[1].xyz, ${t}[2].xyz)`:i===9&&r===4?`${this.getType(n)}(${t}[0].xy, ${t}[1].xy)`:i>4||r>4||r===0?t:i===r?`${this.getType(n)}( ${t} )`:i>r?this.format(`${t}.${"xyz".slice(0,r)}`,this.getTypeFromLength(r,this.getComponentType(e)),n):r===4&&i>1?`${this.getType(n)}( ${this.format(t,e,"vec3")}, 1.0 )`:i===2?`${this.getType(n)}( ${this.format(t,e,"vec2")}, 0.0 )`:(i===1&&r>1&&e!==this.getComponentType(n)&&(t=`${this.getType(this.getComponentType(n))}( ${t} )`),`${this.getType(n)}( ${t} )`)}getSignature(){return`// Three.js r${gg} - Node System
`}}class q1{constructor(){this.time=0,this.deltaTime=0,this.frameId=0,this.renderId=0,this.startTime=null,this.updateMap=new WeakMap,this.updateBeforeMap=new WeakMap,this.updateAfterMap=new WeakMap,this.renderer=null,this.material=null,this.camera=null,this.object=null,this.scene=null}_getMaps(t,e){let n=t.get(e);return n===void 0&&(n={renderMap:new WeakMap,frameMap:new WeakMap},t.set(e,n)),n}updateBeforeNode(t){const e=t.getUpdateBeforeType(),n=t.updateReference(this);if(e===he.FRAME){const{frameMap:i}=this._getMaps(this.updateBeforeMap,n);i.get(n)!==this.frameId&&t.updateBefore(this)!==!1&&i.set(n,this.frameId)}else if(e===he.RENDER){const{renderMap:i}=this._getMaps(this.updateBeforeMap,n);i.get(n)!==this.renderId&&t.updateBefore(this)!==!1&&i.set(n,this.renderId)}else e===he.OBJECT&&t.updateBefore(this)}updateAfterNode(t){const e=t.getUpdateAfterType(),n=t.updateReference(this);if(e===he.FRAME){const{frameMap:i}=this._getMaps(this.updateAfterMap,n);i.get(n)!==this.frameId&&t.updateAfter(this)!==!1&&i.set(n,this.frameId)}else if(e===he.RENDER){const{renderMap:i}=this._getMaps(this.updateAfterMap,n);i.get(n)!==this.renderId&&t.updateAfter(this)!==!1&&i.set(n,this.renderId)}else e===he.OBJECT&&t.updateAfter(this)}updateNode(t){const e=t.getUpdateType(),n=t.updateReference(this);if(e===he.FRAME){const{frameMap:i}=this._getMaps(this.updateMap,n);i.get(n)!==this.frameId&&t.update(this)!==!1&&i.set(n,this.frameId)}else if(e===he.RENDER){const{renderMap:i}=this._getMaps(this.updateMap,n);i.get(n)!==this.renderId&&t.update(this)!==!1&&i.set(n,this.renderId)}else e===he.OBJECT&&t.update(this)}update(){this.frameId++,this.lastTime===void 0&&(this.lastTime=performance.now()),this.deltaTime=(performance.now()-this.lastTime)/1e3,this.lastTime=performance.now(),this.time+=this.deltaTime}}class dS{constructor(t,e,n=null,i="",r=!1){this.type=t,this.name=e,this.count=n,this.qualifier=i,this.isConst=r}}dS.isNodeFunctionInput=!0;class JZ extends wc{static get type(){return"DirectionalLightNode"}constructor(t=null){super(t)}setup(t){super.setup(t);const e=t.context.lightingModel,n=this.colorNode,i=G2(this.light),r=t.context.reflectedLight;e.direct({lightDirection:i,lightColor:n,reflectedLight:r},t.stack,t)}}const $0=new Je,gp=new Je;let pu=null;class tK extends wc{static get type(){return"RectAreaLightNode"}constructor(t=null){super(t),this.halfHeight=ne(new Z).setGroup(_e),this.halfWidth=ne(new Z).setGroup(_e),this.updateType=he.RENDER}update(t){super.update(t);const{light:e}=this,n=t.camera.matrixWorldInverse;gp.identity(),$0.copy(e.matrixWorld),$0.premultiply(n),gp.extractRotation($0),this.halfWidth.value.set(e.width*.5,0,0),this.halfHeight.value.set(0,e.height*.5,0),this.halfWidth.value.applyMatrix4(gp),this.halfHeight.value.applyMatrix4(gp)}setup(t){super.setup(t);let e,n;t.isAvailable("float32Filterable")?(e=an(pu.LTC_FLOAT_1),n=an(pu.LTC_FLOAT_2)):(e=an(pu.LTC_HALF_1),n=an(pu.LTC_HALF_2));const{colorNode:i,light:r}=this,o=t.context.lightingModel,a=lS(r),c=t.context.reflectedLight;o.directRectArea({lightColor:i,lightPosition:a,halfWidth:this.halfWidth,halfHeight:this.halfHeight,reflectedLight:c,ltc_1:e,ltc_2:n},t.stack,t)}static setLTC(t){pu=t}}class j2 extends wc{static get type(){return"SpotLightNode"}constructor(t=null){super(t),this.coneCosNode=ne(0).setGroup(_e),this.penumbraCosNode=ne(0).setGroup(_e),this.cutoffDistanceNode=ne(0).setGroup(_e),this.decayExponentNode=ne(0).setGroup(_e)}update(t){super.update(t);const{light:e}=this;this.coneCosNode.value=Math.cos(e.angle),this.penumbraCosNode.value=Math.cos(e.angle*(1-e.penumbra)),this.cutoffDistanceNode.value=e.distance,this.decayExponentNode.value=e.decay}getSpotAttenuation(t){const{coneCosNode:e,penumbraCosNode:n}=this;return gc(e,n,t)}setup(t){super.setup(t);const e=t.context.lightingModel,{colorNode:n,cutoffDistanceNode:i,decayExponentNode:r,light:o}=this,a=lS(o).sub(zn),c=a.normalize(),l=c.dot(G2(o)),h=this.getSpotAttenuation(l),u=a.length(),d=$2({lightDistance:u,cutoffDistance:i,decayExponent:r}),f=n.mul(h).mul(d),p=t.context.reflectedLight;e.direct({lightDirection:c,lightColor:f,reflectedLight:p},t.stack,t)}}class eK extends j2{static get type(){return"IESSpotLightNode"}getSpotAttenuation(t){const e=this.light.iesMap;let n=null;if(e&&e.isTexture===!0){const i=t.acos().mul(1/Math.PI);n=an(e,At(i,0),0).r}else n=super.getSpotAttenuation(t);return n}}class nK extends wc{static get type(){return"AmbientLightNode"}constructor(t=null){super(t)}setup({context:t}){t.irradiance.addAssign(this.colorNode)}}class iK extends wc{static get type(){return"HemisphereLightNode"}constructor(t=null){super(t),this.lightPositionNode=V2(t),this.lightDirectionNode=this.lightPositionNode.normalize(),this.groundColorNode=ne(new Pe).setGroup(_e)}update(t){const{light:e}=this;super.update(t),this.lightPositionNode.object3d=e,this.groundColorNode.value.copy(e.groundColor).multiplyScalar(e.intensity)}setup(t){const{colorNode:e,groundColorNode:n,lightDirectionNode:i}=this,o=Hs.dot(i).mul(.5).add(.5),a=qe(n,e,o);t.context.irradiance.addAssign(a)}}class sK extends wc{static get type(){return"LightProbeNode"}constructor(t=null){super(t);const e=[];for(let n=0;n<9;n++)e.push(new Z);this.lightProbe=dd(e)}update(t){const{light:e}=this;super.update(t);for(let n=0;n<9;n++)this.lightProbe.array[n].copy(e.sh.coefficients[n]).multiplyScalar(e.intensity)}setup(t){const e=TZ(c2,this.lightProbe);t.context.irradiance.addAssign(e)}}class X2{parseFunction(){console.warn("Abstract function.")}}class fS{constructor(t,e,n="",i=""){this.type=t,this.inputs=e,this.name=n,this.precision=i}getCode(){console.warn("Abstract function.")}}fS.isNodeFunction=!0;const rK=/^\s*(highp|mediump|lowp)?\s*([a-z_0-9]+)\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)/i,oK=/[a-z_0-9]+/ig,j1="#pragma main",aK=s=>{s=s.trim();const t=s.indexOf(j1),e=t!==-1?s.slice(t+j1.length):s,n=e.match(rK);if(n!==null&&n.length===5){const i=n[4],r=[];let o=null;for(;(o=oK.exec(i))!==null;)r.push(o);const a=[];let c=0;for(;c<r.length;){const p=r[c][0]==="const";p===!0&&c++;let _=r[c][0];_==="in"||_==="out"||_==="inout"?c++:_="";const g=r[c++][0];let m=Number.parseInt(r[c][0]);Number.isNaN(m)===!1?c++:m=null;const x=r[c++][0];a.push(new dS(g,x,m,_,p))}const l=e.substring(n[0].length),h=n[3]!==void 0?n[3]:"",u=n[2],d=n[1]!==void 0?n[1]:"",f=t!==-1?s.slice(0,t):"";return{type:u,inputs:a,name:h,precision:d,inputsCode:i,blockCode:l,headerCode:f}}else throw new Error("FunctionNode: Function is not a GLSL code.")};class cK extends fS{constructor(t){const{type:e,inputs:n,name:i,precision:r,inputsCode:o,blockCode:a,headerCode:c}=aK(t);super(e,n,i,r),this.inputsCode=o,this.blockCode=a,this.headerCode=c}getCode(t=this.name){let e;const n=this.blockCode;if(n!==""){const{type:i,inputsCode:r,headerCode:o,precision:a}=this;let c=`${i} ${t} ( ${r.trim()} )`;a!==""&&(c=`${a} ${c}`),e=o+c+n}else e="";return e}}class lK extends X2{parseFunction(t){return new cK(t)}}const X1=new WeakMap;class hK extends _a{constructor(t,e){super(),this.renderer=t,this.backend=e,this.nodeFrame=new q1,this.nodeBuilderCache=new Map,this.callHashCache=new or,this.groupsData=new or}updateGroup(t){const e=t.groupNode,n=e.name;if(n===ON.name)return!0;if(n===_e.name){const o=this.get(t),a=this.nodeFrame.renderId;return o.renderId!==a?(o.renderId=a,!0):!1}if(n===Lq.name){const o=this.get(t),a=this.nodeFrame.frameId;return o.frameId!==a?(o.frameId=a,!0):!1}const i=[e,t];let r=this.groupsData.get(i);return r===void 0&&this.groupsData.set(i,r={}),r.version!==e.version?(r.version=e.version,!0):!1}getForRenderCacheKey(t){return t.initialCacheKey}getForRender(t){const e=this.get(t);let n=e.nodeBuilderState;if(n===void 0){const{nodeBuilderCache:i}=this,r=this.getForRenderCacheKey(t);if(n=i.get(r),n===void 0){const o=this.backend.createNodeBuilder(t.object,this.renderer);o.scene=t.scene,o.material=t.material,o.camera=t.camera,o.context.material=t.material,o.lightsNode=t.lightsNode,o.environmentNode=this.getEnvironmentNode(t.scene),o.fogNode=this.getFogNode(t.scene),o.clippingContext=t.clippingContext,o.build(),n=this._createNodeBuilderState(o),i.set(r,n)}n.usedTimes++,e.nodeBuilderState=n}return n}delete(t){if(t.isRenderObject){const e=this.get(t).nodeBuilderState;e.usedTimes--,e.usedTimes===0&&this.nodeBuilderCache.delete(this.getForRenderCacheKey(t))}return super.delete(t)}getForCompute(t){const e=this.get(t);let n=e.nodeBuilderState;if(n===void 0){const i=this.backend.createNodeBuilder(t,this.renderer);i.build(),n=this._createNodeBuilderState(i),e.nodeBuilderState=n}return n}_createNodeBuilderState(t){return new EZ(t.vertexShader,t.fragmentShader,t.computeShader,t.getAttributesArray(),t.getBindings(),t.updateNodes,t.updateBeforeNodes,t.updateAfterNodes,t.monitor,t.transforms)}getEnvironmentNode(t){return t.environmentNode||this.get(t).environmentNode||null}getBackgroundNode(t){return t.backgroundNode||this.get(t).backgroundNode||null}getFogNode(t){return t.fogNode||this.get(t).fogNode||null}getCacheKey(t,e){const n=[t,e],i=this.renderer.info.calls;let r=this.callHashCache.get(n);if(r===void 0||r.callId!==i){const o=this.getEnvironmentNode(t),a=this.getFogNode(t),c=[];e&&c.push(e.getCacheKey(!0)),o&&c.push(o.getCacheKey()),a&&c.push(a.getCacheKey()),c.push(this.renderer.shadowMap.enabled?1:0),r={callId:i,cacheKey:wN(c)},this.callHashCache.set(n,r)}return r.cacheKey}updateScene(t){this.updateEnvironment(t),this.updateFog(t),this.updateBackground(t)}get isToneMappingState(){return!this.renderer.getRenderTarget()}updateBackground(t){const e=this.get(t),n=t.background;if(n){const i=t.backgroundBlurriness===0&&e.backgroundBlurriness>0||t.backgroundBlurriness>0&&e.backgroundBlurriness===0;if(e.background!==n||i){let r=null;if(n.isCubeTexture===!0||n.mapping===Id||n.mapping===Fd||n.mapping===Sx)if(t.backgroundBlurriness>0||n.mapping===Sx)r=F2(n);else{let o;n.isCubeTexture===!0?o=ud(n):o=an(n),r=w2(o)}else n.isTexture===!0?r=an(n,fd.flipY()).setUpdateMatrix(!0):n.isColor!==!0&&console.error("WebGPUNodes: Unsupported background configuration.",n);e.backgroundNode=r,e.background=n,e.backgroundBlurriness=t.backgroundBlurriness}}else e.backgroundNode&&(delete e.backgroundNode,delete e.background)}updateFog(t){const e=this.get(t),n=t.fog;if(n){if(e.fog!==n){let i=null;if(n.isFogExp2){const r=nn("color","color",n).setGroup(_e),o=nn("density","float",n).setGroup(_e);i=cZ(r,o)}else if(n.isFog){const r=nn("color","color",n).setGroup(_e),o=nn("near","float",n).setGroup(_e),a=nn("far","float",n).setGroup(_e);i=oZ(r,o,a)}else console.error("WebGPUNodes: Unsupported fog configuration.",n);e.fogNode=i,e.fog=n}}else delete e.fogNode,delete e.fog}updateEnvironment(t){const e=this.get(t),n=t.environment;if(n){if(e.environment!==n){let i=null;n.isCubeTexture===!0?i=ud(n):n.isTexture===!0?i=an(n):console.error("Nodes: Unsupported environment configuration.",n),e.environmentNode=i,e.environment=n}}else e.environmentNode&&(delete e.environmentNode,delete e.environment)}getNodeFrame(t=this.renderer,e=null,n=null,i=null,r=null){const o=this.nodeFrame;return o.renderer=t,o.scene=e,o.object=n,o.camera=i,o.material=r,o}getNodeFrameForRender(t){return this.getNodeFrame(t.renderer,t.scene,t.object,t.camera,t.material)}getOutputCacheKey(){const t=this.renderer;return t.toneMapping+","+t.currentColorSpace}hasOutputChange(t){return X1.get(t)!==this.getOutputCacheKey()}getOutputNode(t){const e=this.renderer,n=this.getOutputCacheKey(),i=an(t,fd).renderOutput(e.toneMapping,e.currentColorSpace);return X1.set(t,n),i}updateBefore(t){const e=t.getNodeBuilderState();for(const n of e.updateBeforeNodes)this.getNodeFrameForRender(t).updateBeforeNode(n)}updateAfter(t){const e=t.getNodeBuilderState();for(const n of e.updateAfterNodes)this.getNodeFrameForRender(t).updateAfterNode(n)}updateForCompute(t){const e=this.getNodeFrame(),n=this.getForCompute(t);for(const i of n.updateNodes)e.updateNode(i)}updateForRender(t){const e=this.getNodeFrameForRender(t),n=t.getNodeBuilderState();for(const i of n.updateNodes)e.updateNode(i)}needsRefresh(t){const e=this.getNodeFrameForRender(t);return t.getMonitor().needsRefresh(t,e)}dispose(){super.dispose(),this.nodeFrame=new q1,this.nodeBuilderCache=new Map}}class uK{constructor(t,e){this.scene=t,this.camera=e}clone(){return Object.assign(new this.constructor,this)}}class dK{constructor(){this.lists=new or}get(t,e){const n=this.lists,i=[t,e];let r=n.get(i);return r===void 0&&(r=new uK(t,e),n.set(i,r)),r}dispose(){this.lists=new or}}class Y2{constructor(){this.lightNodes=new WeakMap,this.materialNodes=new Map,this.toneMappingNodes=new Map}fromMaterial(t){if(t.isNodeMaterial)return t;let e=null;const n=this.getMaterialNodeClass(t.type);if(n!==null){e=new n;for(const i in t)e[i]=t[i]}return e}addToneMapping(t,e){this.addType(t,e,this.toneMappingNodes)}getToneMappingFunction(t){return this.toneMappingNodes.get(t)||null}getMaterialNodeClass(t){return this.materialNodes.get(t)||null}addMaterial(t,e){this.addType(t,e.type,this.materialNodes)}getLightNodeClass(t){return this.lightNodes.get(t)||null}addLight(t,e){this.addClass(t,e,this.lightNodes)}addType(t,e,n){if(n.has(e)){console.warn(`Redefinition of node ${e}`);return}if(typeof t!="function")throw new Error(`Node class ${t.name} is not a class.`);if(typeof e=="function"||typeof e=="object")throw new Error(`Base class ${e} is not a class.`);n.set(e,t)}addClass(t,e,n){if(n.has(e)){console.warn(`Redefinition of node ${e.name}`);return}if(typeof t!="function")throw new Error(`Node class ${t.name} is not a class.`);if(typeof e!="function")throw new Error(`Base class ${e.name} is not a class.`);n.set(e,t)}}const fK=new H2;class pK extends or{constructor(){super()}createNode(t=[]){return new H2().setLights(t)}getNode(t,e){if(t.isQuadMesh)return fK;const n=[t,e];let i=this.get(n);return i===void 0&&(i=this.createNode(),this.set(n,i)),i}}const Y1=new uN,_p=new xe,W0=new Ne,q0=new pN,yp=new Je,Go=new Ne;class mK{constructor(t,e={}){this.isRenderer=!0;const{logarithmicDepthBuffer:n=!1,alpha:i=!0,depth:r=!0,stencil:o=!1,antialias:a=!1,samples:c=0,getFallback:l=null}=e;this.domElement=t.getDomElement(),this.backend=t,this.samples=c||a===!0?4:0,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.alpha=i,this.logarithmicDepthBuffer=n,this.outputColorSpace=Yt,this.toneMapping=Vl,this.toneMappingExposure=1,this.sortObjects=!0,this.depth=r,this.stencil=o,this.clippingPlanes=[],this.info=new MY,this.nodes={modelViewMatrix:null,modelNormalViewMatrix:null},this.library=new Y2,this.lighting=new pK,this._getFallback=l,this._pixelRatio=1,this._width=this.domElement.width,this._height=this.domElement.height,this._viewport=new Ne(0,0,this._width,this._height),this._scissor=new Ne(0,0,this._width,this._height),this._scissorTest=!1,this._attributes=null,this._geometries=null,this._nodes=null,this._animation=null,this._bindings=null,this._objects=null,this._pipelines=null,this._bundles=null,this._renderLists=null,this._renderContexts=null,this._textures=null,this._background=null,this._quad=new k2(new Sn),this._quad.material.type="Renderer_output",this._currentRenderContext=null,this._opaqueSort=null,this._transparentSort=null,this._frameBufferTarget=null;const h=this.alpha===!0?0:1;this._clearColor=new aS(0,0,0,h),this._clearDepth=1,this._clearStencil=0,this._renderTarget=null,this._activeCubeFace=0,this._activeMipmapLevel=0,this._mrt=null,this._renderObjectFunction=null,this._currentRenderObjectFunction=null,this._currentRenderBundle=null,this._handleObjectFunction=this._renderObjectDirect,this._isDeviceLost=!1,this.onDeviceLost=this._onDeviceLost,this._initialized=!1,this._initPromise=null,this._compilationPromises=null,this.transparent=!0,this.opaque=!0,this.shadowMap={enabled:!1,type:p8},this.xr={enabled:!1},this.debug={checkShaderErrors:!0,onShaderError:null,getShaderAsync:async(u,d,f)=>{await this.compileAsync(u,d);const p=this._renderLists.get(u,d),_=this._renderContexts.get(u,d,this._renderTarget),g=u.overrideMaterial||f.material,m=this._objects.get(f,g,u,d,p.lightsNode,_),{fragmentShader:x,vertexShader:v}=m.getNodeBuilderState();return{fragmentShader:x,vertexShader:v}}}}async init(){if(this._initialized)throw new Error("Renderer: Backend has already been initialized.");return this._initPromise!==null?this._initPromise:(this._initPromise=new Promise(async(t,e)=>{let n=this.backend;try{await n.init(this)}catch(i){if(this._getFallback!==null)try{this.backend=n=this._getFallback(i),await n.init(this)}catch(r){e(r);return}else{e(i);return}}this._nodes=new hK(this,n),this._animation=new fY(this._nodes,this.info),this._attributes=new vY(n),this._background=new wZ(this,this._nodes),this._geometries=new SY(this._attributes,this.info),this._textures=new LY(this,n,this.info),this._pipelines=new EY(n,this._nodes),this._bindings=new CY(n,this._nodes,this._textures,this._attributes,this._pipelines,this.info),this._objects=new _Y(this,this._nodes,this._geometries,this._pipelines,this._bindings,this.info),this._renderLists=new PY(this.lighting),this._bundles=new dK,this._renderContexts=new FY,this._initialized=!0,t()}),this._initPromise)}get coordinateSystem(){return this.backend.coordinateSystem}async compileAsync(t,e,n=null){if(this._isDeviceLost===!0)return;this._initialized===!1&&await this.init();const i=this._nodes.nodeFrame,r=i.renderId,o=this._currentRenderContext,a=this._currentRenderObjectFunction,c=this._compilationPromises,l=t.isScene===!0?t:Y1;n===null&&(n=t);const h=this._renderTarget,u=this._renderContexts.get(n,e,h),d=this._activeMipmapLevel,f=[];this._currentRenderContext=u,this._currentRenderObjectFunction=this.renderObject,this._handleObjectFunction=this._createObjectPipeline,this._compilationPromises=f,i.renderId++,i.update(),u.depth=this.depth,u.stencil=this.stencil,u.clippingContext||(u.clippingContext=new ev),u.clippingContext.updateGlobal(this,e),l.onBeforeRender(this,t,e,h);const p=this._renderLists.get(t,e);if(p.begin(),this._projectObject(t,e,0,p),n!==t&&n.traverseVisible(function(x){x.isLight&&x.layers.test(e.layers)&&p.pushLight(x)}),p.finish(),h!==null){this._textures.updateRenderTarget(h,d);const x=this._textures.get(h);u.textures=x.textures,u.depthTexture=x.depthTexture}else u.textures=null,u.depthTexture=null;this._nodes.updateScene(l),this._background.update(l,p,u);const _=p.opaque,g=p.transparent,m=p.lightsNode;this.opaque===!0&&_.length>0&&this._renderObjects(_,e,l,m),this.transparent===!0&&g.length>0&&this._renderTransparents(g,e,l,m),i.renderId=r,this._currentRenderContext=o,this._currentRenderObjectFunction=a,this._compilationPromises=c,this._handleObjectFunction=this._renderObjectDirect,await Promise.all(f)}async renderAsync(t,e){this._initialized===!1&&await this.init();const n=this._renderScene(t,e);await this.backend.resolveTimestampAsync(n,"render")}async waitForGPU(){await this.backend.waitForGPU()}setMRT(t){return this._mrt=t,this}getMRT(){return this._mrt}_onDeviceLost(t){let e=`THREE.WebGPURenderer: ${t.api} Device Lost:

Message: ${t.message}`;t.reason&&(e+=`
Reason: ${t.reason}`),console.error(e),this._isDeviceLost=!0}_renderBundle(t,e,n){const{bundleGroup:i,camera:r,renderList:o}=t,a=this._currentRenderContext,c=this._bundles.get(i,r),l=this.backend.get(c);l.renderContexts===void 0&&(l.renderContexts=new Set);const h=i.version!==l.version,u=l.renderContexts.has(a)===!1||h;if(l.renderContexts.add(a),u){this.backend.beginBundle(a),(l.renderObjects===void 0||h)&&(l.renderObjects=[]),this._currentRenderBundle=c;const d=o.opaque;this.opaque===!0&&d.length>0&&this._renderObjects(d,r,e,n),this._currentRenderBundle=null,this.backend.finishBundle(a,c),l.version=i.version}else{const{renderObjects:d}=l;for(let f=0,p=d.length;f<p;f++){const _=d[f];this._nodes.needsRefresh(_)&&(this._nodes.updateBefore(_),this._nodes.updateForRender(_),this._bindings.updateForRender(_),this._nodes.updateAfter(_))}}this.backend.addBundle(a,c)}render(t,e){if(this._initialized===!1)return console.warn("THREE.Renderer: .render() called before the backend is initialized. Try using .renderAsync() instead."),this.renderAsync(t,e);this._renderScene(t,e)}_getFrameBufferTarget(){const{currentToneMapping:t,currentColorSpace:e}=this;if(t!==Vl===!1&&e!==ia===!1)return null;const{width:r,height:o}=this.getDrawingBufferSize(_p),{depth:a,stencil:c}=this;let l=this._frameBufferTarget;return l===null&&(l=new Ih(r,o,{depthBuffer:a,stencilBuffer:c,type:to,format:Ph,colorSpace:ia,generateMipmaps:!1,minFilter:Yi,magFilter:Yi,samples:this.samples}),l.isPostProcessingRenderTarget=!0,this._frameBufferTarget=l),l.depthBuffer=a,l.stencilBuffer=c,l.setSize(r,o),l.viewport.copy(this._viewport),l.scissor.copy(this._scissor),l.viewport.multiplyScalar(this._pixelRatio),l.scissor.multiplyScalar(this._pixelRatio),l.scissorTest=this._scissorTest,l}_renderScene(t,e,n=!0){if(this._isDeviceLost===!0)return;const i=n?this._getFrameBufferTarget():null,r=this._nodes.nodeFrame,o=r.renderId,a=this._currentRenderContext,c=this._currentRenderObjectFunction,l=t.isScene===!0?t:Y1,h=this._renderTarget,u=this._activeCubeFace,d=this._activeMipmapLevel;let f;i!==null?(f=i,this.setRenderTarget(f)):f=h;const p=this._renderContexts.get(t,e,f);this._currentRenderContext=p,this._currentRenderObjectFunction=this._renderObjectFunction||this.renderObject,this.info.calls++,this.info.render.calls++,this.info.render.frameCalls++,r.renderId=this.info.calls;const _=this.coordinateSystem;e.coordinateSystem!==_&&(e.coordinateSystem=_,e.updateProjectionMatrix()),t.matrixWorldAutoUpdate===!0&&t.updateMatrixWorld(),e.parent===null&&e.matrixWorldAutoUpdate===!0&&e.updateMatrixWorld();let g=this._viewport,m=this._scissor,x=this._pixelRatio;f!==null&&(g=f.viewport,m=f.scissor,x=1),this.getDrawingBufferSize(_p),W0.set(0,0,_p.width,_p.height);const v=g.minDepth===void 0?0:g.minDepth,y=g.maxDepth===void 0?1:g.maxDepth;p.viewportValue.copy(g).multiplyScalar(x).floor(),p.viewportValue.width>>=d,p.viewportValue.height>>=d,p.viewportValue.minDepth=v,p.viewportValue.maxDepth=y,p.viewport=p.viewportValue.equals(W0)===!1,p.scissorValue.copy(m).multiplyScalar(x).floor(),p.scissor=this._scissorTest&&p.scissorValue.equals(W0)===!1,p.scissorValue.width>>=d,p.scissorValue.height>>=d,p.clippingContext||(p.clippingContext=new ev),p.clippingContext.updateGlobal(this,e),l.onBeforeRender(this,t,e,f),yp.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),q0.setFromProjectionMatrix(yp,_);const b=this._renderLists.get(t,e);if(b.begin(),this._projectObject(t,e,0,b),b.finish(),this.sortObjects===!0&&b.sort(this._opaqueSort,this._transparentSort),f!==null){this._textures.updateRenderTarget(f,d);const E=this._textures.get(f);p.textures=E.textures,p.depthTexture=E.depthTexture,p.width=E.width,p.height=E.height,p.renderTarget=f,p.depth=f.depthBuffer,p.stencil=f.stencilBuffer}else p.textures=null,p.depthTexture=null,p.width=this.domElement.width,p.height=this.domElement.height,p.depth=this.depth,p.stencil=this.stencil;p.width>>=d,p.height>>=d,p.activeCubeFace=u,p.activeMipmapLevel=d,p.occlusionQueryCount=b.occlusionQueryCount,this._nodes.updateScene(l),this._background.update(l,b,p),this.backend.beginRender(p);const{bundles:S,lightsNode:M,transparentDoublePass:T,transparent:A,opaque:w}=b;if(S.length>0&&this._renderBundles(S,l,M),this.opaque===!0&&w.length>0&&this._renderObjects(w,e,l,M),this.transparent===!0&&A.length>0&&this._renderTransparents(A,T,e,l,M),this.backend.finishRender(p),r.renderId=o,this._currentRenderContext=a,this._currentRenderObjectFunction=c,i!==null){this.setRenderTarget(h,u,d);const E=this._quad;this._nodes.hasOutputChange(f.texture)&&(E.material.fragmentNode=this._nodes.getOutputNode(f.texture),E.material.needsUpdate=!0),this._renderScene(E,E.camera,!1)}return l.onAfterRender(this,t,e,f),p}getMaxAnisotropy(){return this.backend.getMaxAnisotropy()}getActiveCubeFace(){return this._activeCubeFace}getActiveMipmapLevel(){return this._activeMipmapLevel}async setAnimationLoop(t){this._initialized===!1&&await this.init(),this._animation.setAnimationLoop(t)}async getArrayBufferAsync(t){return await this.backend.getArrayBufferAsync(t)}getContext(){return this.backend.getContext()}getPixelRatio(){return this._pixelRatio}getDrawingBufferSize(t){return t.set(this._width*this._pixelRatio,this._height*this._pixelRatio).floor()}getSize(t){return t.set(this._width,this._height)}setPixelRatio(t=1){this._pixelRatio!==t&&(this._pixelRatio=t,this.setSize(this._width,this._height,!1))}setDrawingBufferSize(t,e,n){this._width=t,this._height=e,this._pixelRatio=n,this.domElement.width=Math.floor(t*n),this.domElement.height=Math.floor(e*n),this.setViewport(0,0,t,e),this._initialized&&this.backend.updateSize()}setSize(t,e,n=!0){this._width=t,this._height=e,this.domElement.width=Math.floor(t*this._pixelRatio),this.domElement.height=Math.floor(e*this._pixelRatio),n===!0&&(this.domElement.style.width=t+"px",this.domElement.style.height=e+"px"),this.setViewport(0,0,t,e),this._initialized&&this.backend.updateSize()}setOpaqueSort(t){this._opaqueSort=t}setTransparentSort(t){this._transparentSort=t}getScissor(t){const e=this._scissor;return t.x=e.x,t.y=e.y,t.width=e.width,t.height=e.height,t}setScissor(t,e,n,i){const r=this._scissor;t.isVector4?r.copy(t):r.set(t,e,n,i)}getScissorTest(){return this._scissorTest}setScissorTest(t){this._scissorTest=t,this.backend.setScissorTest(t)}getViewport(t){return t.copy(this._viewport)}setViewport(t,e,n,i,r=0,o=1){const a=this._viewport;t.isVector4?a.copy(t):a.set(t,e,n,i),a.minDepth=r,a.maxDepth=o}getClearColor(t){return t.copy(this._clearColor)}setClearColor(t,e=1){this._clearColor.set(t),this._clearColor.a=e}getClearAlpha(){return this._clearColor.a}setClearAlpha(t){this._clearColor.a=t}getClearDepth(){return this._clearDepth}setClearDepth(t){this._clearDepth=t}getClearStencil(){return this._clearStencil}setClearStencil(t){this._clearStencil=t}isOccluded(t){const e=this._currentRenderContext;return e&&this.backend.isOccluded(e,t)}clear(t=!0,e=!0,n=!0){if(this._initialized===!1)return console.warn("THREE.Renderer: .clear() called before the backend is initialized. Try using .clearAsync() instead."),this.clearAsync(t,e,n);const i=this._renderTarget||this._getFrameBufferTarget();let r=null;if(i!==null&&(this._textures.updateRenderTarget(i),r=this._textures.get(i)),this.backend.clear(t,e,n,r),i!==null&&this._renderTarget===null){const o=this._quad;this._nodes.hasOutputChange(i.texture)&&(o.material.fragmentNode=this._nodes.getOutputNode(i.texture),o.material.needsUpdate=!0),this._renderScene(o,o.camera,!1)}}clearColor(){return this.clear(!0,!1,!1)}clearDepth(){return this.clear(!1,!0,!1)}clearStencil(){return this.clear(!1,!1,!0)}async clearAsync(t=!0,e=!0,n=!0){this._initialized===!1&&await this.init(),this.clear(t,e,n)}clearColorAsync(){return this.clearAsync(!0,!1,!1)}clearDepthAsync(){return this.clearAsync(!1,!0,!1)}clearStencilAsync(){return this.clearAsync(!1,!1,!0)}get currentToneMapping(){return this._renderTarget!==null?Vl:this.toneMapping}get currentColorSpace(){return this._renderTarget!==null?ia:this.outputColorSpace}dispose(){this.info.dispose(),this.backend.dispose(),this._animation.dispose(),this._objects.dispose(),this._pipelines.dispose(),this._nodes.dispose(),this._bindings.dispose(),this._renderLists.dispose(),this._renderContexts.dispose(),this._textures.dispose(),this.setRenderTarget(null),this.setAnimationLoop(null)}setRenderTarget(t,e=0,n=0){this._renderTarget=t,this._activeCubeFace=e,this._activeMipmapLevel=n}getRenderTarget(){return this._renderTarget}setRenderObjectFunction(t){this._renderObjectFunction=t}getRenderObjectFunction(){return this._renderObjectFunction}compute(t){if(this.isDeviceLost===!0)return;if(this._initialized===!1)return console.warn("THREE.Renderer: .compute() called before the backend is initialized. Try using .computeAsync() instead."),this.computeAsync(t);const e=this._nodes.nodeFrame,n=e.renderId;this.info.calls++,this.info.compute.calls++,this.info.compute.frameCalls++,e.renderId=this.info.calls;const i=this.backend,r=this._pipelines,o=this._bindings,a=this._nodes,c=Array.isArray(t)?t:[t];if(c[0]===void 0||c[0].isComputeNode!==!0)throw new Error("THREE.Renderer: .compute() expects a ComputeNode.");i.beginCompute(t);for(const l of c){if(r.has(l)===!1){const d=()=>{l.removeEventListener("dispose",d),r.delete(l),o.delete(l),a.delete(l)};l.addEventListener("dispose",d);const f=l.onInitFunction;f!==null&&f.call(l,{renderer:this})}a.updateForCompute(l),o.updateForCompute(l);const h=o.getForCompute(l),u=r.getForCompute(l,h);i.compute(t,l,h,u)}i.finishCompute(t),e.renderId=n}async computeAsync(t){this._initialized===!1&&await this.init(),this.compute(t),await this.backend.resolveTimestampAsync(t,"compute")}async hasFeatureAsync(t){return this._initialized===!1&&await this.init(),this.backend.hasFeature(t)}hasFeature(t){return this._initialized===!1?(console.warn("THREE.Renderer: .hasFeature() called before the backend is initialized. Try using .hasFeatureAsync() instead."),!1):this.backend.hasFeature(t)}copyFramebufferToTexture(t,e=null){if(e!==null)if(e.isVector2)e=Go.set(e.x,e.y,t.image.width,t.image.height).floor();else if(e.isVector4)e=Go.copy(e).floor();else{console.error("THREE.Renderer.copyFramebufferToTexture: Invalid rectangle.");return}else e=Go.set(0,0,t.image.width,t.image.height);let n=this._currentRenderContext,i;n!==null?i=n.renderTarget:(i=this._renderTarget||this._getFrameBufferTarget(),i!==null&&(this._textures.updateRenderTarget(i),n=this._textures.get(i))),this._textures.updateTexture(t,{renderTarget:i}),this.backend.copyFramebufferToTexture(t,n,e)}copyTextureToTexture(t,e,n=null,i=null,r=0){this._textures.updateTexture(t),this._textures.updateTexture(e),this.backend.copyTextureToTexture(t,e,n,i,r)}readRenderTargetPixelsAsync(t,e,n,i,r,o=0,a=0){return this.backend.copyTextureToBuffer(t.textures[o],e,n,i,r,a)}_projectObject(t,e,n,i){if(t.visible===!1)return;if(t.layers.test(e.layers)){if(t.isGroup)n=t.renderOrder;else if(t.isLOD)t.autoUpdate===!0&&t.update(e);else if(t.isLight)i.pushLight(t);else if(t.isSprite){if(!t.frustumCulled||q0.intersectsSprite(t)){this.sortObjects===!0&&Go.setFromMatrixPosition(t.matrixWorld).applyMatrix4(yp);const{geometry:a,material:c}=t;c.visible&&i.push(t,a,c,n,Go.z,null)}}else if(t.isLineLoop)console.error("THREE.Renderer: Objects of type THREE.LineLoop are not supported. Please use THREE.Line or THREE.LineSegments.");else if((t.isMesh||t.isLine||t.isPoints)&&(!t.frustumCulled||q0.intersectsObject(t))){const{geometry:a,material:c}=t;if(this.sortObjects===!0&&(a.boundingSphere===null&&a.computeBoundingSphere(),Go.copy(a.boundingSphere.center).applyMatrix4(t.matrixWorld).applyMatrix4(yp)),Array.isArray(c)){const l=a.groups;for(let h=0,u=l.length;h<u;h++){const d=l[h],f=c[d.materialIndex];f&&f.visible&&i.push(t,a,f,n,Go.z,d)}}else c.visible&&i.push(t,a,c,n,Go.z,null)}}if(t.isBundleGroup===!0&&this.backend.beginBundle!==void 0){const a=i;i=this._renderLists.get(t,e),i.begin(),a.pushBundle({bundleGroup:t,camera:e,renderList:i}),i.finish()}const o=t.children;for(let a=0,c=o.length;a<c;a++)this._projectObject(o[a],e,n,i)}_renderBundles(t,e,n){for(const i of t)this._renderBundle(i,e,n)}_renderTransparents(t,e,n,i,r){if(e.length>0){for(const{material:o}of e)o.side=Vs;this._renderObjects(e,n,i,r,"backSide");for(const{material:o}of e)o.side=lh;this._renderObjects(t,n,i,r);for(const{material:o}of e)o.side=zl}else this._renderObjects(t,n,i,r)}_renderObjects(t,e,n,i,r=null){for(let o=0,a=t.length;o<a;o++){const c=t[o],{object:l,geometry:h,material:u,group:d}=c;if(e.isArrayCamera){const f=e.cameras;for(let p=0,_=f.length;p<_;p++){const g=f[p];if(l.layers.test(g.layers)){const m=g.viewport,x=m.minDepth===void 0?0:m.minDepth,v=m.maxDepth===void 0?1:m.maxDepth,y=this._currentRenderContext.viewportValue;y.copy(m).multiplyScalar(this._pixelRatio).floor(),y.minDepth=x,y.maxDepth=v,this.backend.updateViewport(this._currentRenderContext),this._currentRenderObjectFunction(l,n,g,h,u,d,i,r)}}}else this._currentRenderObjectFunction(l,n,e,h,u,d,i,r)}}renderObject(t,e,n,i,r,o,a,c=null){let l,h,u;if(t.onBeforeRender(this,e,n,i,r,o),e.overrideMaterial!==null){const d=e.overrideMaterial;r.positionNode&&r.positionNode.isNode&&(l=d.positionNode,d.positionNode=r.positionNode),d.isShadowNodeMaterial&&(d.side=r.shadowSide===null?r.side:r.shadowSide,r.depthNode&&r.depthNode.isNode&&(u=d.depthNode,d.depthNode=r.depthNode),r.shadowNode&&r.shadowNode.isNode&&(h=d.fragmentNode,d.fragmentNode=r.shadowNode),this.localClippingEnabled&&(r.clipShadows?(d.clippingPlanes!==r.clippingPlanes&&(d.clippingPlanes=r.clippingPlanes,d.needsUpdate=!0),d.clipIntersection!==r.clipIntersection&&(d.clipIntersection=r.clipIntersection)):Array.isArray(d.clippingPlanes)&&(d.clippingPlanes=null,d.needsUpdate=!0))),r=d}r.transparent===!0&&r.side===zl&&r.forceSinglePass===!1?(r.side=Vs,this._handleObjectFunction(t,r,e,n,a,o,"backSide"),r.side=lh,this._handleObjectFunction(t,r,e,n,a,o,c),r.side=zl):this._handleObjectFunction(t,r,e,n,a,o,c),l!==void 0&&(e.overrideMaterial.positionNode=l),u!==void 0&&(e.overrideMaterial.depthNode=u),h!==void 0&&(e.overrideMaterial.fragmentNode=h),t.onAfterRender(this,e,n,i,r,o)}_renderObjectDirect(t,e,n,i,r,o,a){const c=this._objects.get(t,e,n,i,r,this._currentRenderContext,a);c.drawRange=t.geometry.drawRange,c.group=o;const l=this._nodes.needsRefresh(c);l&&(this._nodes.updateBefore(c),this._geometries.updateForRender(c),this._nodes.updateForRender(c),this._bindings.updateForRender(c)),this._pipelines.updateForRender(c),this._currentRenderBundle!==null&&(this.backend.get(this._currentRenderBundle).renderObjects.push(c),c.bundle=this._currentRenderBundle.scene),this.backend.draw(c,this.info),l&&this._nodes.updateAfter(c)}_createObjectPipeline(t,e,n,i,r,o){const a=this._objects.get(t,e,n,i,r,this._currentRenderContext,o);this._nodes.updateBefore(a),this._geometries.updateForRender(a),this._nodes.updateForRender(a),this._bindings.updateForRender(a),this._pipelines.getForRender(a,this._compilationPromises),this._nodes.updateAfter(a)}get compile(){return this.compileAsync}}class pS{constructor(t=""){this.name=t,this.visibility=0}setVisibility(t){this.visibility|=t}clone(){return Object.assign(new this.constructor,this)}}function gK(s){return s+(Zo-s%Zo)%Zo}class Z2 extends pS{constructor(t,e=null){super(t),this.isBuffer=!0,this.bytesPerElement=Float32Array.BYTES_PER_ELEMENT,this._buffer=e}get byteLength(){return gK(this._buffer.byteLength)}get buffer(){return this._buffer}update(){return!0}}class K2 extends Z2{constructor(t,e=null){super(t,e),this.isUniformBuffer=!0}}let _K=0;class Q2 extends K2{constructor(t,e){super("UniformBuffer_"+_K++,t?t.value:null),this.nodeUniform=t,this.groupNode=e}get buffer(){return this.nodeUniform.value}}class yK extends K2{constructor(t){super(t),this.isUniformsGroup=!0,this._values=null,this.uniforms=[]}addUniform(t){return this.uniforms.push(t),this}removeUniform(t){const e=this.uniforms.indexOf(t);return e!==-1&&this.uniforms.splice(e,1),this}get values(){return this._values===null&&(this._values=Array.from(this.buffer)),this._values}get buffer(){let t=this._buffer;if(t===null){const e=this.byteLength;t=new Float32Array(new ArrayBuffer(e)),this._buffer=t}return t}get byteLength(){let t=0;for(let e=0,n=this.uniforms.length;e<n;e++){const i=this.uniforms[e],{boundary:r,itemSize:o}=i,a=t%Zo,c=Zo-a;a!==0&&c-r<0?t+=Zo-a:a%r!==0&&(t+=a%r),i.offset=t/this.bytesPerElement,t+=o*this.bytesPerElement}return Math.ceil(t/Zo)*Zo}update(){let t=!1;for(const e of this.uniforms)this.updateByType(e)===!0&&(t=!0);return t}updateByType(t){if(t.isNumberUniform)return this.updateNumber(t);if(t.isVector2Uniform)return this.updateVector2(t);if(t.isVector3Uniform)return this.updateVector3(t);if(t.isVector4Uniform)return this.updateVector4(t);if(t.isColorUniform)return this.updateColor(t);if(t.isMatrix3Uniform)return this.updateMatrix3(t);if(t.isMatrix4Uniform)return this.updateMatrix4(t);console.error("THREE.WebGPUUniformsGroup: Unsupported uniform type.",t)}updateNumber(t){let e=!1;const n=this.values,i=t.getValue(),r=t.offset;if(n[r]!==i){const o=this.buffer;o[r]=n[r]=i,e=!0}return e}updateVector2(t){let e=!1;const n=this.values,i=t.getValue(),r=t.offset;if(n[r+0]!==i.x||n[r+1]!==i.y){const o=this.buffer;o[r+0]=n[r+0]=i.x,o[r+1]=n[r+1]=i.y,e=!0}return e}updateVector3(t){let e=!1;const n=this.values,i=t.getValue(),r=t.offset;if(n[r+0]!==i.x||n[r+1]!==i.y||n[r+2]!==i.z){const o=this.buffer;o[r+0]=n[r+0]=i.x,o[r+1]=n[r+1]=i.y,o[r+2]=n[r+2]=i.z,e=!0}return e}updateVector4(t){let e=!1;const n=this.values,i=t.getValue(),r=t.offset;if(n[r+0]!==i.x||n[r+1]!==i.y||n[r+2]!==i.z||n[r+4]!==i.w){const o=this.buffer;o[r+0]=n[r+0]=i.x,o[r+1]=n[r+1]=i.y,o[r+2]=n[r+2]=i.z,o[r+3]=n[r+3]=i.w,e=!0}return e}updateColor(t){let e=!1;const n=this.values,i=t.getValue(),r=t.offset;if(n[r+0]!==i.r||n[r+1]!==i.g||n[r+2]!==i.b){const o=this.buffer;o[r+0]=n[r+0]=i.r,o[r+1]=n[r+1]=i.g,o[r+2]=n[r+2]=i.b,e=!0}return e}updateMatrix3(t){let e=!1;const n=this.values,i=t.getValue().elements,r=t.offset;if(n[r+0]!==i[0]||n[r+1]!==i[1]||n[r+2]!==i[2]||n[r+4]!==i[3]||n[r+5]!==i[4]||n[r+6]!==i[5]||n[r+8]!==i[6]||n[r+9]!==i[7]||n[r+10]!==i[8]){const o=this.buffer;o[r+0]=n[r+0]=i[0],o[r+1]=n[r+1]=i[1],o[r+2]=n[r+2]=i[2],o[r+4]=n[r+4]=i[3],o[r+5]=n[r+5]=i[4],o[r+6]=n[r+6]=i[5],o[r+8]=n[r+8]=i[6],o[r+9]=n[r+9]=i[7],o[r+10]=n[r+10]=i[8],e=!0}return e}updateMatrix4(t){let e=!1;const n=this.values,i=t.getValue().elements,r=t.offset;return vK(n,i,r)===!1&&(this.buffer.set(i,r),xK(n,i,r),e=!0),e}}function xK(s,t,e){for(let n=0,i=t.length;n<i;n++)s[e+n]=t[n]}function vK(s,t,e){for(let n=0,i=t.length;n<i;n++)if(s[e+n]!==t[n])return!1;return!0}let bK=0;class J2 extends yK{constructor(t,e){super(t),this.id=bK++,this.groupNode=e,this.isNodeUniformsGroup=!0}getNodes(){const t=[];for(const e of this.uniforms){const n=e.nodeUniform.node;if(!n)throw new Error("NodeUniformsGroup: Uniform has no node.");t.push(n)}return t}}let SK=0;class MK extends pS{constructor(t,e){super(t),this.id=SK++,this.texture=e,this.version=e?e.version:0,this.store=!1,this.generation=null,this.isSampledTexture=!0}needsBindingsUpdate(t){const{texture:e}=this;return t!==this.generation?(this.generation=t,!0):e.isVideoTexture}update(){const{texture:t,version:e}=this;return e!==t.version?(this.version=t.version,!0):!1}}class Pg extends MK{constructor(t,e,n,i=null){super(t,e?e.value:null),this.textureNode=e,this.groupNode=n,this.access=i}needsBindingsUpdate(t){return this.textureNode.value!==this.texture||super.needsBindingsUpdate(t)}update(){const{textureNode:t}=this;return this.texture!==t.value?(this.texture=t.value,!0):super.update()}}class tP extends Pg{constructor(t,e,n,i){super(t,e,n,i),this.isSampledCubeTexture=!0}}class eP extends Pg{constructor(t,e,n,i){super(t,e,n,i),this.isSampledTexture3D=!0}}const TK={atan2:"atan",textureDimensions:"textureSize",equals:"equal"},wK={low:"lowp",medium:"mediump",high:"highp"},Z1={swizzleAssign:!0,storageBuffer:!1},K1=`
precision highp float;
precision highp int;
precision highp sampler2D;
precision highp sampler3D;
precision highp samplerCube;
precision highp sampler2DArray;

precision highp usampler2D;
precision highp usampler3D;
precision highp usamplerCube;
precision highp usampler2DArray;

precision highp isampler2D;
precision highp isampler3D;
precision highp isamplerCube;
precision highp isampler2DArray;

precision lowp sampler2DShadow;
`;class AK extends q2{constructor(t,e){super(t,e,new lK),this.uniformGroups={},this.transforms=[],this.extensions={},this.useComparisonMethod=!0}needsColorSpaceToLinearSRGB(t){return t.isVideoTexture===!0&&t.colorSpace!==fc}getMethod(t){return TK[t]||t}getOutputStructName(){return""}buildFunctionCode(t){const e=t.layout,n=this.flowShaderNode(t),i=[];for(const o of e.inputs)i.push(this.getType(o.type)+" "+o.name);return`${this.getType(e.type)} ${e.name}( ${i.join(", ")} ) {

	${n.vars}

${n.code}
	return ${n.result};

}`}setupPBO(t){const e=t.value;if(e.pbo===void 0){const n=e.array,i=e.count*e.itemSize,{itemSize:r}=e,o=e.array.constructor.name.toLowerCase().includes("int");let a=o?Rb:Cb;r===2?a=o?Nb:id:r===3?a=o?N8:Eb:r===4&&(a=o?Pb:Ph);const c={Float32Array:ji,Uint8Array:na,Uint16Array:Al,Uint32Array:Un,Int8Array:Du,Int16Array:Iu,Int32Array:li,Uint8ClampedArray:na},l=Math.pow(2,Math.ceil(Math.log2(Math.sqrt(i/r))));let h=Math.ceil(i/r/l);l*h*r<i&&h++;const u=l*h*r,d=new n.constructor(u);d.set(n,0),e.array=d;const f=new L6(e.array,l,h,a,c[e.array.constructor.name]||ji);f.needsUpdate=!0,f.isPBOTexture=!0;const p=new Gd(f,null,null);p.setPrecision("high"),e.pboNode=p,e.pbo=p.value,this.getUniformFromNode(e.pboNode,"texture",this.shaderStage,this.context.label)}}getPropertyName(t,e=this.shaderStage){return t.isNodeUniform&&t.node.isTextureNode!==!0&&t.node.isBufferNode!==!0?e.charAt(0)+"_"+t.name:super.getPropertyName(t,e)}generatePBO(t){const{node:e,indexNode:n}=t,i=e.value;if(this.renderer.backend.has(i)){const h=this.renderer.backend.get(i);h.pbo=i.pbo}const r=this.getUniformFromNode(i.pboNode,"texture",this.shaderStage,this.context.label),o=this.getPropertyName(r);this.increaseUsage(n);const a=n.build(this,"uint"),c=this.getDataFromNode(t);let l=c.propertyName;if(l===void 0){const h=this.getVarFromNode(t);l=this.getPropertyName(h);const u=this.getDataFromNode(e);let d=u.propertySizeName;d===void 0&&(d=l+"Size",this.getVarFromNode(e,d,"uint"),this.addLineFlowCode(`${d} = uint( textureSize( ${o}, 0 ).x )`,t),u.propertySizeName=d);const{itemSize:f}=i,p="."+Oh.join("").slice(0,f),_=`ivec2(${a} % ${d}, ${a} / ${d})`,g=this.generateTextureLoad(null,o,_,null,"0");let m="vec4";i.pbo.type===Un?m="uvec4":i.pbo.type===li&&(m="ivec4"),this.addLineFlowCode(`${l} = ${m}(${g})${p}`,t),c.propertyName=l}return l}generateTextureLoad(t,e,n,i,r="0"){return i?`texelFetch( ${e}, ivec3( ${n}, ${i} ), ${r} )`:`texelFetch( ${e}, ${n}, ${r} )`}generateTexture(t,e,n,i){return t.isDepthTexture?`texture( ${e}, ${n} ).x`:(i&&(n=`vec3( ${n}, ${i} )`),`texture( ${e}, ${n} )`)}generateTextureLevel(t,e,n,i){return`textureLod( ${e}, ${n}, ${i} )`}generateTextureBias(t,e,n,i){return`texture( ${e}, ${n}, ${i} )`}generateTextureGrad(t,e,n,i){return`textureGrad( ${e}, ${n}, ${i[0]}, ${i[1]} )`}generateTextureCompare(t,e,n,i,r,o=this.shaderStage){if(o==="fragment")return`texture( ${e}, vec3( ${n}, ${i} ) )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${o} shader.`)}getVars(t){const e=[],n=this.vars[t];if(n!==void 0)for(const i of n)e.push(`${this.getVar(i.type,i.name)};`);return e.join(`
	`)}getUniforms(t){const e=this.uniforms[t],n=[],i={};for(const o of e){let a=null,c=!1;if(o.type==="texture"){const h=o.node.value;let u="";h.isDataTexture===!0&&(h.type===Un?u="u":h.type===li&&(u="i")),h.compareFunction?a=`sampler2DShadow ${o.name};`:h.isDataArrayTexture===!0||h.isCompressedArrayTexture===!0?a=`${u}sampler2DArray ${o.name};`:a=`${u}sampler2D ${o.name};`}else if(o.type==="cubeTexture")a=`samplerCube ${o.name};`;else if(o.type==="texture3D")a=`sampler3D ${o.name};`;else if(o.type==="buffer"){const h=o.node,u=this.getType(h.bufferType),d=h.bufferCount,f=d>0?d:"";a=`${h.name} {
	${u} ${o.name}[${f}];
};
`}else a=`${this.getVectorType(o.type)} ${this.getPropertyName(o,t)};`,c=!0;const l=o.node.precision;if(l!==null&&(a=wK[l]+" "+a),c){a="	"+a;const h=o.groupNode.name;(i[h]||(i[h]=[])).push(a)}else a="uniform "+a,n.push(a)}let r="";for(const o in i){const a=i[o];r+=this._getGLSLUniformStruct(t+"_"+o,a.join(`
`))+`
`}return r+=n.join(`
`),r}getTypeFromAttribute(t){let e=super.getTypeFromAttribute(t);if(/^[iu]/.test(e)&&t.gpuType!==li){let n=t;t.isInterleavedBufferAttribute&&(n=t.data);const i=n.array;i instanceof Uint32Array||i instanceof Int32Array||(e=e.slice(1))}return e}getAttributes(t){let e="";if(t==="vertex"||t==="compute"){const n=this.getAttributesArray();let i=0;for(const r of n)e+=`layout( location = ${i++} ) in ${r.type} ${r.name};
`}return e}getStructMembers(t){const e=[],n=t.getMemberTypes();for(let i=0;i<n.length;i++){const r=n[i];e.push(`layout( location = ${i} ) out ${r} m${i};`)}return e.join(`
`)}getStructs(t){const e=[],n=this.structs[t];if(n.length===0)return`layout( location = 0 ) out vec4 fragColor;
`;for(let i=0,r=n.length;i<r;i++){const o=n[i];let a=`
`;a+=this.getStructMembers(o),a+=`
`,e.push(a)}return e.join(`

`)}getVaryings(t){let e="";const n=this.varyings;if(t==="vertex"||t==="compute")for(const i of n){t==="compute"&&(i.needsInterpolation=!0);const r=i.type,o=r.includes("int")||r.includes("uv")||r.includes("iv")?"flat ":"";e+=`${o}${i.needsInterpolation?"out":"/*out*/"} ${r} ${i.name};
`}else if(t==="fragment"){for(const i of n)if(i.needsInterpolation){const r=i.type,o=r.includes("int")||r.includes("uv")||r.includes("iv")?"flat ":"";e+=`${o}in ${r} ${i.name};
`}}return e}getVertexIndex(){return"uint( gl_VertexID )"}getInstanceIndex(){return"uint( gl_InstanceID )"}getInvocationLocalIndex(){return`uint( gl_InstanceID ) % ${this.object.workgroupSize.reduce((n,i)=>n*i,1)}u`}getDrawIndex(){return this.renderer.backend.extensions.has("WEBGL_multi_draw")?"uint( gl_DrawID )":null}getFrontFacing(){return"gl_FrontFacing"}getFragCoord(){return"gl_FragCoord.xy"}getFragDepth(){return"gl_FragDepth"}enableExtension(t,e,n=this.shaderStage){const i=this.extensions[n]||(this.extensions[n]=new Map);i.has(t)===!1&&i.set(t,{name:t,behavior:e})}getExtensions(t){const e=[];if(t==="vertex"){const i=this.renderer.backend.extensions;this.object.isBatchedMesh&&i.has("WEBGL_multi_draw")&&this.enableExtension("GL_ANGLE_multi_draw","require",t)}const n=this.extensions[t];if(n!==void 0)for(const{name:i,behavior:r}of n.values())e.push(`#extension ${i} : ${r}`);return e.join(`
`)}isAvailable(t){let e=Z1[t];if(e===void 0){if(t==="float32Filterable"){const n=this.renderer.backend.extensions;n.has("OES_texture_float_linear")?(n.get("OES_texture_float_linear"),e=!0):e=!1}Z1[t]=e}return e}isFlipY(){return!0}registerTransform(t,e){this.transforms.push({varyingName:t,attributeNode:e})}getTransforms(){const t=this.transforms;let e="";for(let n=0;n<t.length;n++){const i=t[n],r=this.getPropertyName(i.attributeNode);e+=`${i.varyingName} = ${r};
	`}return e}_getGLSLUniformStruct(t,e){return`
layout( std140 ) uniform ${t} {
${e}
};`}_getGLSLVertexCode(t){return`#version 300 es

${this.getSignature()}

// extensions 
${t.extensions}

// precision
${K1}

// uniforms
${t.uniforms}

// varyings
${t.varyings}

// attributes
${t.attributes}

// codes
${t.codes}

void main() {

	// vars
	${t.vars}

	// transforms
	${t.transforms}

	// flow
	${t.flow}

	gl_PointSize = 1.0;

}
`}_getGLSLFragmentCode(t){return`#version 300 es

${this.getSignature()}

// precision
${K1}

// uniforms
${t.uniforms}

// varyings
${t.varyings}

// codes
${t.codes}

${t.structs}

void main() {

	// vars
	${t.vars}

	// flow
	${t.flow}

}
`}buildCode(){const t=this.material!==null?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const e in t){let n=`// code

`;n+=this.flowCode[e];const i=this.flowNodes[e],r=i[i.length-1];for(const a of i){const c=this.getFlowData(a),l=a.name;l&&(n.length>0&&(n+=`
`),n+=`	// flow -> ${l}
	`),n+=`${c.code}
	`,a===r&&e!=="compute"&&(n+=`// result
	`,e==="vertex"?(n+="gl_Position = ",n+=`${c.result};`):e==="fragment"&&(a.outputNode.isOutputStructNode||(n+="fragColor = ",n+=`${c.result};`)))}const o=t[e];o.extensions=this.getExtensions(e),o.uniforms=this.getUniforms(e),o.attributes=this.getAttributes(e),o.varyings=this.getVaryings(e),o.vars=this.getVars(e),o.structs=this.getStructs(e),o.codes=this.getCodes(e),o.transforms=this.getTransforms(e),o.flow=n}this.material!==null?(this.vertexShader=this._getGLSLVertexCode(t.vertex),this.fragmentShader=this._getGLSLFragmentCode(t.fragment)):this.computeShader=this._getGLSLVertexCode(t.compute)}getUniformFromNode(t,e,n,i=null){const r=super.getUniformFromNode(t,e,n,i),o=this.getDataFromNode(t,n,this.globalCache);let a=o.uniformGPU;if(a===void 0){const c=t.groupNode,l=c.name,h=this.getBindGroupArray(l,n);if(e==="texture")a=new Pg(r.name,r.node,c),h.push(a);else if(e==="cubeTexture")a=new tP(r.name,r.node,c),h.push(a);else if(e==="texture3D")a=new eP(r.name,r.node,c),h.push(a);else if(e==="buffer"){t.name=`NodeBuffer_${t.id}`,r.name=`buffer${t.id}`;const u=new Q2(t,c);u.name=t.name,h.push(u),a=u}else{const u=this.uniformGroups[n]||(this.uniformGroups[n]={});let d=u[l];d===void 0&&(d=new J2(n+"_"+l,c),u[l]=d,h.push(d)),a=this.getNodeUniform(r,e),d.addUniform(a)}o.uniformGPU=a}return r}}let j0=null,X0=null,pl=null;class nP{constructor(t={}){this.parameters=Object.assign({},t),this.data=new WeakMap,this.renderer=null,this.domElement=null}async init(t){this.renderer=t}begin(){}finish(){}draw(){}createProgram(){}destroyProgram(){}createBindings(){}updateBindings(){}createRenderPipeline(){}createComputePipeline(){}destroyPipeline(){}needsRenderUpdate(){}getRenderCacheKey(){}createNodeBuilder(){}createSampler(){}createDefaultTexture(){}createTexture(){}copyTextureToBuffer(){}createAttribute(){}createIndexAttribute(){}updateAttribute(){}destroyAttribute(){}getContext(){}updateSize(){}resolveTimestampAsync(){}hasFeatureAsync(){}hasFeature(){}getInstanceCount(t){const{object:e,geometry:n}=t;return n.isInstancedBufferGeometry?n.instanceCount:e.count>1?e.count:1}getDrawingBufferSize(){return j0=j0||new xe,this.renderer.getDrawingBufferSize(j0)}getScissor(){return X0=X0||new Ne,this.renderer.getScissor(X0)}setScissorTest(){}getClearColor(){const t=this.renderer;return pl=pl||new aS,t.getClearColor(pl),pl.getRGB(pl,this.renderer.currentColorSpace),pl}getDomElement(){let t=this.domElement;return t===null&&(t=this.parameters.canvas!==void 0?this.parameters.canvas:u6(),"setAttribute"in t&&t.setAttribute("data-engine",`three.js r${gg} webgpu`),this.domElement=t),t}set(t,e){this.data.set(t,e)}get(t){let e=this.data.get(t);return e===void 0&&(e={},this.data.set(t,e)),e}has(t){return this.data.has(t)}delete(t){this.data.delete(t)}dispose(){}}let EK=0;class CK{constructor(t,e){this.buffers=[t.bufferGPU,e],this.type=t.type,this.bufferType=t.bufferType,this.pbo=t.pbo,this.byteLength=t.byteLength,this.bytesPerElement=t.BYTES_PER_ELEMENT,this.version=t.version,this.isInteger=t.isInteger,this.activeBufferIndex=0,this.baseId=t.id}get id(){return`${this.baseId}|${this.activeBufferIndex}`}get bufferGPU(){return this.buffers[this.activeBufferIndex]}get transformBuffer(){return this.buffers[this.activeBufferIndex^1]}switchBuffers(){this.activeBufferIndex^=1}}class RK{constructor(t){this.backend=t}createAttribute(t,e){const n=this.backend,{gl:i}=n,r=t.array,o=t.usage||i.STATIC_DRAW,a=t.isInterleavedBufferAttribute?t.data:t,c=n.get(a);let l=c.bufferGPU;l===void 0&&(l=this._createBuffer(i,e,r,o),c.bufferGPU=l,c.bufferType=e,c.version=a.version);let h;if(r instanceof Float32Array)h=i.FLOAT;else if(r instanceof Uint16Array)t.isFloat16BufferAttribute?h=i.HALF_FLOAT:h=i.UNSIGNED_SHORT;else if(r instanceof Int16Array)h=i.SHORT;else if(r instanceof Uint32Array)h=i.UNSIGNED_INT;else if(r instanceof Int32Array)h=i.INT;else if(r instanceof Int8Array)h=i.BYTE;else if(r instanceof Uint8Array)h=i.UNSIGNED_BYTE;else if(r instanceof Uint8ClampedArray)h=i.UNSIGNED_BYTE;else throw new Error("THREE.WebGLBackend: Unsupported buffer data format: "+r);let u={bufferGPU:l,bufferType:e,type:h,byteLength:r.byteLength,bytesPerElement:r.BYTES_PER_ELEMENT,version:t.version,pbo:t.pbo,isInteger:h===i.INT||h===i.UNSIGNED_INT||t.gpuType===li,id:EK++};if(t.isStorageBufferAttribute||t.isStorageInstancedBufferAttribute){const d=this._createBuffer(i,e,r,o);u=new CK(u,d)}n.set(t,u)}updateAttribute(t){const e=this.backend,{gl:n}=e,i=t.array,r=t.isInterleavedBufferAttribute?t.data:t,o=e.get(r),a=o.bufferType,c=t.isInterleavedBufferAttribute?t.data.updateRanges:t.updateRanges;if(n.bindBuffer(a,o.bufferGPU),c.length===0)n.bufferSubData(a,0,i);else{for(let l=0,h=c.length;l<h;l++){const u=c[l];n.bufferSubData(a,u.start*i.BYTES_PER_ELEMENT,i,u.start,u.count)}r.clearUpdateRanges()}n.bindBuffer(a,null),o.version=r.version}destroyAttribute(t){const e=this.backend,{gl:n}=e;t.isInterleavedBufferAttribute&&e.delete(t.data);const i=e.get(t);n.deleteBuffer(i.bufferGPU),e.delete(t)}async getArrayBufferAsync(t){const e=this.backend,{gl:n}=e,i=t.isInterleavedBufferAttribute?t.data:t,{bufferGPU:r}=e.get(i),o=t.array,a=o.byteLength;n.bindBuffer(n.COPY_READ_BUFFER,r);const c=n.createBuffer();n.bindBuffer(n.COPY_WRITE_BUFFER,c),n.bufferData(n.COPY_WRITE_BUFFER,a,n.STREAM_READ),n.copyBufferSubData(n.COPY_READ_BUFFER,n.COPY_WRITE_BUFFER,0,0,a),await e.utils._clientWaitAsync();const l=new t.array.constructor(o.length);return n.bindBuffer(n.COPY_WRITE_BUFFER,c),n.getBufferSubData(n.COPY_WRITE_BUFFER,0,l),n.deleteBuffer(c),n.bindBuffer(n.COPY_READ_BUFFER,null),n.bindBuffer(n.COPY_WRITE_BUFFER,null),l.buffer}_createBuffer(t,e,n,i){const r=t.createBuffer();return t.bindBuffer(e,r),t.bufferData(e,n,i),t.bindBuffer(e,null),r}}let Q1=!1,Y0,mu;class NK{constructor(t){this.backend=t,this.gl=this.backend.gl,this.enabled={},this.currentFlipSided=null,this.currentCullFace=null,this.currentProgram=null,this.currentBlendingEnabled=!1,this.currentBlending=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentPremultipledAlpha=null,this.currentPolygonOffsetFactor=null,this.currentPolygonOffsetUnits=null,this.currentColorMask=null,this.currentDepthFunc=null,this.currentDepthMask=null,this.currentStencilFunc=null,this.currentStencilRef=null,this.currentStencilFuncMask=null,this.currentStencilFail=null,this.currentStencilZFail=null,this.currentStencilZPass=null,this.currentStencilMask=null,this.currentLineWidth=null,this.currentBoundFramebuffers={},this.currentDrawbuffers=new WeakMap,this.maxTextures=this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS),this.currentTextureSlot=null,this.currentBoundTextures={},this.currentBoundBufferBases={},Q1===!1&&(this._init(this.gl),Q1=!0)}_init(t){Y0={[Xo]:t.FUNC_ADD,[NR]:t.FUNC_SUBTRACT,[PR]:t.FUNC_REVERSE_SUBTRACT},mu={[DR]:t.ZERO,[IR]:t.ONE,[FR]:t.SRC_COLOR,[Nm]:t.SRC_ALPHA,[zR]:t.SRC_ALPHA_SATURATE,[UR]:t.DST_COLOR,[LR]:t.DST_ALPHA,[OR]:t.ONE_MINUS_SRC_COLOR,[Pm]:t.ONE_MINUS_SRC_ALPHA,[kR]:t.ONE_MINUS_DST_COLOR,[BR]:t.ONE_MINUS_DST_ALPHA}}enable(t){const{enabled:e}=this;e[t]!==!0&&(this.gl.enable(t),e[t]=!0)}disable(t){const{enabled:e}=this;e[t]!==!1&&(this.gl.disable(t),e[t]=!1)}setFlipSided(t){if(this.currentFlipSided!==t){const{gl:e}=this;t?e.frontFace(e.CW):e.frontFace(e.CCW),this.currentFlipSided=t}}setCullFace(t){const{gl:e}=this;t!==u8?(this.enable(e.CULL_FACE),t!==this.currentCullFace&&(t===d8?e.cullFace(e.BACK):t===f8?e.cullFace(e.FRONT):e.cullFace(e.FRONT_AND_BACK))):this.disable(e.CULL_FACE),this.currentCullFace=t}setLineWidth(t){const{currentLineWidth:e,gl:n}=this;t!==e&&(n.lineWidth(t),this.currentLineWidth=t)}setBlending(t,e,n,i,r,o,a,c){const{gl:l}=this;if(t===hh){this.currentBlendingEnabled===!0&&(this.disable(l.BLEND),this.currentBlendingEnabled=!1);return}if(this.currentBlendingEnabled===!1&&(this.enable(l.BLEND),this.currentBlendingEnabled=!0),t!==RR){if(t!==this.currentBlending||c!==this.currentPremultipledAlpha){if((this.currentBlendEquation!==Xo||this.currentBlendEquationAlpha!==Xo)&&(l.blendEquation(l.FUNC_ADD),this.currentBlendEquation=Xo,this.currentBlendEquationAlpha=Xo),c)switch(t){case ea:l.blendFuncSeparate(l.ONE,l.ONE_MINUS_SRC_ALPHA,l.ONE,l.ONE_MINUS_SRC_ALPHA);break;case Em:l.blendFunc(l.ONE,l.ONE);break;case Cm:l.blendFuncSeparate(l.ZERO,l.ONE_MINUS_SRC_COLOR,l.ZERO,l.ONE);break;case Rm:l.blendFuncSeparate(l.ZERO,l.SRC_COLOR,l.ZERO,l.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",t);break}else switch(t){case ea:l.blendFuncSeparate(l.SRC_ALPHA,l.ONE_MINUS_SRC_ALPHA,l.ONE,l.ONE_MINUS_SRC_ALPHA);break;case Em:l.blendFunc(l.SRC_ALPHA,l.ONE);break;case Cm:l.blendFuncSeparate(l.ZERO,l.ONE_MINUS_SRC_COLOR,l.ZERO,l.ONE);break;case Rm:l.blendFunc(l.ZERO,l.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",t);break}this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentBlending=t,this.currentPremultipledAlpha=c}return}r=r||e,o=o||n,a=a||i,(e!==this.currentBlendEquation||r!==this.currentBlendEquationAlpha)&&(l.blendEquationSeparate(Y0[e],Y0[r]),this.currentBlendEquation=e,this.currentBlendEquationAlpha=r),(n!==this.currentBlendSrc||i!==this.currentBlendDst||o!==this.currentBlendSrcAlpha||a!==this.currentBlendDstAlpha)&&(l.blendFuncSeparate(mu[n],mu[i],mu[o],mu[a]),this.currentBlendSrc=n,this.currentBlendDst=i,this.currentBlendSrcAlpha=o,this.currentBlendDstAlpha=a),this.currentBlending=t,this.currentPremultipledAlpha=!1}setColorMask(t){this.currentColorMask!==t&&(this.gl.colorMask(t,t,t,t),this.currentColorMask=t)}setDepthTest(t){const{gl:e}=this;t?this.enable(e.DEPTH_TEST):this.disable(e.DEPTH_TEST)}setDepthMask(t){this.currentDepthMask!==t&&(this.gl.depthMask(t),this.currentDepthMask=t)}setDepthFunc(t){if(this.currentDepthFunc!==t){const{gl:e}=this;switch(t){case VR:e.depthFunc(e.NEVER);break;case GR:e.depthFunc(e.ALWAYS);break;case HR:e.depthFunc(e.LESS);break;case Dm:e.depthFunc(e.LEQUAL);break;case $R:e.depthFunc(e.EQUAL);break;case WR:e.depthFunc(e.GEQUAL);break;case qR:e.depthFunc(e.GREATER);break;case jR:e.depthFunc(e.NOTEQUAL);break;default:e.depthFunc(e.LEQUAL)}this.currentDepthFunc=t}}setStencilTest(t){const{gl:e}=this;t?this.enable(e.STENCIL_TEST):this.disable(e.STENCIL_TEST)}setStencilMask(t){this.currentStencilMask!==t&&(this.gl.stencilMask(t),this.currentStencilMask=t)}setStencilFunc(t,e,n){(this.currentStencilFunc!==t||this.currentStencilRef!==e||this.currentStencilFuncMask!==n)&&(this.gl.stencilFunc(t,e,n),this.currentStencilFunc=t,this.currentStencilRef=e,this.currentStencilFuncMask=n)}setStencilOp(t,e,n){(this.currentStencilFail!==t||this.currentStencilZFail!==e||this.currentStencilZPass!==n)&&(this.gl.stencilOp(t,e,n),this.currentStencilFail=t,this.currentStencilZFail=e,this.currentStencilZPass=n)}setMaterial(t,e){const{gl:n}=this;t.side===zl?this.disable(n.CULL_FACE):this.enable(n.CULL_FACE);let i=t.side===Vs;e&&(i=!i),this.setFlipSided(i),t.blending===ea&&t.transparent===!1?this.setBlending(hh):this.setBlending(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),this.setDepthFunc(t.depthFunc),this.setDepthTest(t.depthTest),this.setDepthMask(t.depthWrite),this.setColorMask(t.colorWrite);const r=t.stencilWrite;this.setStencilTest(r),r&&(this.setStencilMask(t.stencilWriteMask),this.setStencilFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),this.setStencilOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),this.setPolygonOffset(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits),t.alphaToCoverage===!0&&this.backend.renderer.samples>1?this.enable(n.SAMPLE_ALPHA_TO_COVERAGE):this.disable(n.SAMPLE_ALPHA_TO_COVERAGE)}setPolygonOffset(t,e,n){const{gl:i}=this;t?(this.enable(i.POLYGON_OFFSET_FILL),(this.currentPolygonOffsetFactor!==e||this.currentPolygonOffsetUnits!==n)&&(i.polygonOffset(e,n),this.currentPolygonOffsetFactor=e,this.currentPolygonOffsetUnits=n)):this.disable(i.POLYGON_OFFSET_FILL)}useProgram(t){return this.currentProgram!==t?(this.gl.useProgram(t),this.currentProgram=t,!0):!1}bindFramebuffer(t,e){const{gl:n,currentBoundFramebuffers:i}=this;return i[t]!==e?(n.bindFramebuffer(t,e),i[t]=e,t===n.DRAW_FRAMEBUFFER&&(i[n.FRAMEBUFFER]=e),t===n.FRAMEBUFFER&&(i[n.DRAW_FRAMEBUFFER]=e),!0):!1}drawBuffers(t,e){const{gl:n}=this;let i=[],r=!1;if(t.textures!==null){i=this.currentDrawbuffers.get(e),i===void 0&&(i=[],this.currentDrawbuffers.set(e,i));const o=t.textures;if(i.length!==o.length||i[0]!==n.COLOR_ATTACHMENT0){for(let a=0,c=o.length;a<c;a++)i[a]=n.COLOR_ATTACHMENT0+a;i.length=o.length,r=!0}}else i[0]!==n.BACK&&(i[0]=n.BACK,r=!0);r&&n.drawBuffers(i)}activeTexture(t){const{gl:e,currentTextureSlot:n,maxTextures:i}=this;t===void 0&&(t=e.TEXTURE0+i-1),n!==t&&(e.activeTexture(t),this.currentTextureSlot=t)}bindTexture(t,e,n){const{gl:i,currentTextureSlot:r,currentBoundTextures:o,maxTextures:a}=this;n===void 0&&(r===null?n=i.TEXTURE0+a-1:n=r);let c=o[n];c===void 0&&(c={type:void 0,texture:void 0},o[n]=c),(c.type!==t||c.texture!==e)&&(r!==n&&(i.activeTexture(n),this.currentTextureSlot=n),i.bindTexture(t,e),c.type=t,c.texture=e)}bindBufferBase(t,e,n){const{gl:i}=this,r=`${t}-${e}`;return this.currentBoundBufferBases[r]!==n?(i.bindBufferBase(t,e,n),this.currentBoundBufferBases[r]=n,!0):!1}unbindTexture(){const{gl:t,currentTextureSlot:e,currentBoundTextures:n}=this,i=n[e];i!==void 0&&i.type!==void 0&&(t.bindTexture(i.type,null),i.type=void 0,i.texture=void 0)}}class PK{constructor(t){this.backend=t,this.gl=this.backend.gl,this.extensions=t.extensions}convert(t,e=fc){const{gl:n,extensions:i}=this;let r;if(t===na)return n.UNSIGNED_BYTE;if(t===w8)return n.UNSIGNED_SHORT_4_4_4_4;if(t===A8)return n.UNSIGNED_SHORT_5_5_5_1;if(t===XR)return n.UNSIGNED_INT_5_9_9_9_REV;if(t===Du)return n.BYTE;if(t===Iu)return n.SHORT;if(t===Al)return n.UNSIGNED_SHORT;if(t===li)return n.INT;if(t===Un)return n.UNSIGNED_INT;if(t===ji)return n.FLOAT;if(t===to)return n.HALF_FLOAT;if(t===E8)return n.ALPHA;if(t===Eb)return n.RGB;if(t===Ph)return n.RGBA;if(t===C8)return n.LUMINANCE;if(t===R8)return n.LUMINANCE_ALPHA;if(t===Ja)return n.DEPTH_COMPONENT;if(t===dh)return n.DEPTH_STENCIL;if(t===Cb)return n.RED;if(t===Rb)return n.RED_INTEGER;if(t===id)return n.RG;if(t===Nb)return n.RG_INTEGER;if(t===Pb)return n.RGBA_INTEGER;if(t===X_||t===Gp||t===Hp||t===$p)if(e===Yt)if(r=i.get("WEBGL_compressed_texture_s3tc_srgb"),r!==null){if(t===X_)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(t===Gp)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(t===Hp)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(t===$p)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(r=i.get("WEBGL_compressed_texture_s3tc"),r!==null){if(t===X_)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(t===Gp)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(t===Hp)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(t===$p)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(t===fw||t===pw||t===mw||t===gw)if(r=i.get("WEBGL_compressed_texture_pvrtc"),r!==null){if(t===fw)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(t===pw)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(t===mw)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(t===gw)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(t===_w||t===wx||t===Ax)if(r=i.get("WEBGL_compressed_texture_etc"),r!==null){if(t===_w||t===wx)return e===Yt?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(t===Ax)return e===Yt?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(t===Ex||t===Cx||t===Rx||t===Nx||t===Px||t===Dx||t===Ix||t===Fx||t===Ox||t===Lx||t===Bx||t===Ux||t===kx||t===zx)if(r=i.get("WEBGL_compressed_texture_astc"),r!==null){if(t===Ex)return e===Yt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(t===Cx)return e===Yt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(t===Rx)return e===Yt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(t===Nx)return e===Yt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(t===Px)return e===Yt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(t===Dx)return e===Yt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(t===Ix)return e===Yt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(t===Fx)return e===Yt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(t===Ox)return e===Yt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(t===Lx)return e===Yt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(t===Bx)return e===Yt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(t===Ux)return e===Yt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(t===kx)return e===Yt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(t===zx)return e===Yt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(t===Y_)if(r=i.get("EXT_texture_compression_bptc"),r!==null){if(t===Y_)return e===Yt?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(t===P8||t===yw||t===xw||t===vw)if(r=i.get("EXT_texture_compression_rgtc"),r!==null){if(t===Y_)return r.COMPRESSED_RED_RGTC1_EXT;if(t===yw)return r.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(t===xw)return r.COMPRESSED_RED_GREEN_RGTC2_EXT;if(t===vw)return r.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return t===Od?n.UNSIGNED_INT_24_8:n[t]!==void 0?n[t]:null}_clientWaitAsync(){const{gl:t}=this,e=t.fenceSync(t.SYNC_GPU_COMMANDS_COMPLETE,0);return t.flush(),new Promise((n,i)=>{function r(){const o=t.clientWaitSync(e,t.SYNC_FLUSH_COMMANDS_BIT,0);if(o===t.WAIT_FAILED){t.deleteSync(e),i();return}if(o===t.TIMEOUT_EXPIRED){requestAnimationFrame(r);return}t.deleteSync(e),n()}r()})}}let J1=!1,xp,Z0,tA;class DK{constructor(t){this.backend=t,this.gl=t.gl,this.extensions=t.extensions,this.defaultTextures={},J1===!1&&(this._init(this.gl),J1=!0)}_init(t){xp={[Im]:t.REPEAT,[wl]:t.CLAMP_TO_EDGE,[Fm]:t.MIRRORED_REPEAT},Z0={[ti]:t.NEAREST,[Mx]:t.NEAREST_MIPMAP_NEAREST,[Gl]:t.NEAREST_MIPMAP_LINEAR,[Yi]:t.LINEAR,[Tx]:t.LINEAR_MIPMAP_NEAREST,[Jr]:t.LINEAR_MIPMAP_LINEAR},tA={[ZR]:t.NEVER,[nN]:t.ALWAYS,[Db]:t.LESS,[QR]:t.LEQUAL,[KR]:t.EQUAL,[eN]:t.GEQUAL,[JR]:t.GREATER,[tN]:t.NOTEQUAL}}filterFallback(t){const{gl:e}=this;return t===ti||t===Mx||t===Gl?e.NEAREST:e.LINEAR}getGLTextureType(t){const{gl:e}=this;let n;return t.isCubeTexture===!0?n=e.TEXTURE_CUBE_MAP:t.isDataArrayTexture===!0||t.isCompressedArrayTexture===!0?n=e.TEXTURE_2D_ARRAY:t.isData3DTexture===!0?n=e.TEXTURE_3D:n=e.TEXTURE_2D,n}getInternalFormat(t,e,n,i,r=!1){const{gl:o,extensions:a}=this;if(t!==null){if(o[t]!==void 0)return o[t];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+t+"'")}let c=e;return e===o.RED&&(n===o.FLOAT&&(c=o.R32F),n===o.HALF_FLOAT&&(c=o.R16F),n===o.UNSIGNED_BYTE&&(c=o.R8),n===o.UNSIGNED_SHORT&&(c=o.R16),n===o.UNSIGNED_INT&&(c=o.R32UI),n===o.BYTE&&(c=o.R8I),n===o.SHORT&&(c=o.R16I),n===o.INT&&(c=o.R32I)),e===o.RED_INTEGER&&(n===o.UNSIGNED_BYTE&&(c=o.R8UI),n===o.UNSIGNED_SHORT&&(c=o.R16UI),n===o.UNSIGNED_INT&&(c=o.R32UI),n===o.BYTE&&(c=o.R8I),n===o.SHORT&&(c=o.R16I),n===o.INT&&(c=o.R32I)),e===o.RG&&(n===o.FLOAT&&(c=o.RG32F),n===o.HALF_FLOAT&&(c=o.RG16F),n===o.UNSIGNED_BYTE&&(c=o.RG8),n===o.UNSIGNED_SHORT&&(c=o.RG16),n===o.UNSIGNED_INT&&(c=o.RG32UI),n===o.BYTE&&(c=o.RG8I),n===o.SHORT&&(c=o.RG16I),n===o.INT&&(c=o.RG32I)),e===o.RG_INTEGER&&(n===o.UNSIGNED_BYTE&&(c=o.RG8UI),n===o.UNSIGNED_SHORT&&(c=o.RG16UI),n===o.UNSIGNED_INT&&(c=o.RG32UI),n===o.BYTE&&(c=o.RG8I),n===o.SHORT&&(c=o.RG16I),n===o.INT&&(c=o.RG32I)),e===o.RGB&&(n===o.FLOAT&&(c=o.RGB32F),n===o.HALF_FLOAT&&(c=o.RGB16F),n===o.UNSIGNED_BYTE&&(c=o.RGB8),n===o.UNSIGNED_SHORT&&(c=o.RGB16),n===o.UNSIGNED_INT&&(c=o.RGB32UI),n===o.BYTE&&(c=o.RGB8I),n===o.SHORT&&(c=o.RGB16I),n===o.INT&&(c=o.RGB32I),n===o.UNSIGNED_BYTE&&(c=i===Yt&&r===!1?o.SRGB8:o.RGB8),n===o.UNSIGNED_SHORT_5_6_5&&(c=o.RGB565),n===o.UNSIGNED_SHORT_5_5_5_1&&(c=o.RGB5_A1),n===o.UNSIGNED_SHORT_4_4_4_4&&(c=o.RGB4),n===o.UNSIGNED_INT_5_9_9_9_REV&&(c=o.RGB9_E5)),e===o.RGB_INTEGER&&(n===o.UNSIGNED_BYTE&&(c=o.RGB8UI),n===o.UNSIGNED_SHORT&&(c=o.RGB16UI),n===o.UNSIGNED_INT&&(c=o.RGB32UI),n===o.BYTE&&(c=o.RGB8I),n===o.SHORT&&(c=o.RGB16I),n===o.INT&&(c=o.RGB32I)),e===o.RGBA&&(n===o.FLOAT&&(c=o.RGBA32F),n===o.HALF_FLOAT&&(c=o.RGBA16F),n===o.UNSIGNED_BYTE&&(c=o.RGBA8),n===o.UNSIGNED_SHORT&&(c=o.RGBA16),n===o.UNSIGNED_INT&&(c=o.RGBA32UI),n===o.BYTE&&(c=o.RGBA8I),n===o.SHORT&&(c=o.RGBA16I),n===o.INT&&(c=o.RGBA32I),n===o.UNSIGNED_BYTE&&(c=i===Yt&&r===!1?o.SRGB8_ALPHA8:o.RGBA8),n===o.UNSIGNED_SHORT_4_4_4_4&&(c=o.RGBA4),n===o.UNSIGNED_SHORT_5_5_5_1&&(c=o.RGB5_A1)),e===o.RGBA_INTEGER&&(n===o.UNSIGNED_BYTE&&(c=o.RGBA8UI),n===o.UNSIGNED_SHORT&&(c=o.RGBA16UI),n===o.UNSIGNED_INT&&(c=o.RGBA32UI),n===o.BYTE&&(c=o.RGBA8I),n===o.SHORT&&(c=o.RGBA16I),n===o.INT&&(c=o.RGBA32I)),e===o.DEPTH_COMPONENT&&(n===o.UNSIGNED_INT&&(c=o.DEPTH24_STENCIL8),n===o.FLOAT&&(c=o.DEPTH_COMPONENT32F)),e===o.DEPTH_STENCIL&&n===o.UNSIGNED_INT_24_8&&(c=o.DEPTH24_STENCIL8),(c===o.R16F||c===o.R32F||c===o.RG16F||c===o.RG32F||c===o.RGBA16F||c===o.RGBA32F)&&a.get("EXT_color_buffer_float"),c}setTextureParameters(t,e){const{gl:n,extensions:i,backend:r}=this;n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,e.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,e.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,n.NONE),n.texParameteri(t,n.TEXTURE_WRAP_S,xp[e.wrapS]),n.texParameteri(t,n.TEXTURE_WRAP_T,xp[e.wrapT]),(t===n.TEXTURE_3D||t===n.TEXTURE_2D_ARRAY)&&n.texParameteri(t,n.TEXTURE_WRAP_R,xp[e.wrapR]),n.texParameteri(t,n.TEXTURE_MAG_FILTER,Z0[e.magFilter]);const o=e.mipmaps!==void 0&&e.mipmaps.length>0,a=e.minFilter===Yi&&o?Jr:e.minFilter;if(n.texParameteri(t,n.TEXTURE_MIN_FILTER,Z0[a]),e.compareFunction&&(n.texParameteri(t,n.TEXTURE_COMPARE_MODE,n.COMPARE_REF_TO_TEXTURE),n.texParameteri(t,n.TEXTURE_COMPARE_FUNC,tA[e.compareFunction])),i.has("EXT_texture_filter_anisotropic")===!0){if(e.magFilter===ti||e.minFilter!==Gl&&e.minFilter!==Jr||e.type===ji&&i.has("OES_texture_float_linear")===!1)return;if(e.anisotropy>1){const c=i.get("EXT_texture_filter_anisotropic");n.texParameterf(t,c.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(e.anisotropy,r.getMaxAnisotropy()))}}}createDefaultTexture(t){const{gl:e,backend:n,defaultTextures:i}=this,r=this.getGLTextureType(t);let o=i[r];o===void 0&&(o=e.createTexture(),n.state.bindTexture(r,o),e.texParameteri(r,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(r,e.TEXTURE_MAG_FILTER,e.NEAREST),i[r]=o),n.set(t,{textureGPU:o,glTextureType:r,isDefault:!0})}createTexture(t,e){const{gl:n,backend:i}=this,{levels:r,width:o,height:a,depth:c}=e,l=i.utils.convert(t.format,t.colorSpace),h=i.utils.convert(t.type),u=this.getInternalFormat(t.internalFormat,l,h,t.colorSpace,t.isVideoTexture),d=n.createTexture(),f=this.getGLTextureType(t);i.state.bindTexture(f,d),this.setTextureParameters(f,t),t.isDataArrayTexture||t.isCompressedArrayTexture?n.texStorage3D(n.TEXTURE_2D_ARRAY,r,u,o,a,c):t.isData3DTexture?n.texStorage3D(n.TEXTURE_3D,r,u,o,a,c):t.isVideoTexture||n.texStorage2D(f,r,u,o,a),i.set(t,{textureGPU:d,glTextureType:f,glFormat:l,glType:h,glInternalFormat:u})}copyBufferToTexture(t,e){const{gl:n,backend:i}=this,{textureGPU:r,glTextureType:o,glFormat:a,glType:c}=i.get(e),{width:l,height:h}=e.source.data;n.bindBuffer(n.PIXEL_UNPACK_BUFFER,t),i.state.bindTexture(o,r),n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,!1),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),n.texSubImage2D(o,0,0,0,l,h,a,c,0),n.bindBuffer(n.PIXEL_UNPACK_BUFFER,null),i.state.unbindTexture()}updateTexture(t,e){const{gl:n}=this,{width:i,height:r}=e,{textureGPU:o,glTextureType:a,glFormat:c,glType:l,glInternalFormat:h}=this.backend.get(t);if(t.isRenderTargetTexture||o===void 0)return;const u=d=>d.isDataTexture?d.image.data:d instanceof ImageBitmap||d instanceof OffscreenCanvas||d instanceof HTMLImageElement||d instanceof HTMLCanvasElement?d:d.data;if(this.backend.state.bindTexture(a,o),this.setTextureParameters(a,t),t.isCompressedTexture){const d=t.mipmaps,f=e.image;for(let p=0;p<d.length;p++){const _=d[p];t.isCompressedArrayTexture?t.format!==n.RGBA?c!==null?n.compressedTexSubImage3D(n.TEXTURE_2D_ARRAY,p,0,0,0,_.width,_.height,f.depth,c,_.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texSubImage3D(n.TEXTURE_2D_ARRAY,p,0,0,0,_.width,_.height,f.depth,c,l,_.data):c!==null?n.compressedTexSubImage2D(n.TEXTURE_2D,p,0,0,_.width,_.height,c,_.data):console.warn("Unsupported compressed texture format")}}else if(t.isCubeTexture){const d=e.images;for(let f=0;f<6;f++){const p=u(d[f]);n.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,0,0,i,r,c,l,p)}}else if(t.isDataArrayTexture){const d=e.image;n.texSubImage3D(n.TEXTURE_2D_ARRAY,0,0,0,0,d.width,d.height,d.depth,c,l,d.data)}else if(t.isData3DTexture){const d=e.image;n.texSubImage3D(n.TEXTURE_3D,0,0,0,0,d.width,d.height,d.depth,c,l,d.data)}else if(t.isVideoTexture)t.update(),n.texImage2D(a,0,h,c,l,e.image);else{const d=u(e.image);n.texSubImage2D(a,0,0,0,i,r,c,l,d)}}generateMipmaps(t){const{gl:e,backend:n}=this,{textureGPU:i,glTextureType:r}=n.get(t);n.state.bindTexture(r,i),e.generateMipmap(r)}deallocateRenderBuffers(t){const{gl:e,backend:n}=this;if(t){const i=n.get(t);if(i.renderBufferStorageSetup=void 0,i.framebuffers){for(const r in i.framebuffers)e.deleteFramebuffer(i.framebuffers[r]);delete i.framebuffers}if(i.depthRenderbuffer&&(e.deleteRenderbuffer(i.depthRenderbuffer),delete i.depthRenderbuffer),i.stencilRenderbuffer&&(e.deleteRenderbuffer(i.stencilRenderbuffer),delete i.stencilRenderbuffer),i.msaaFrameBuffer&&(e.deleteFramebuffer(i.msaaFrameBuffer),delete i.msaaFrameBuffer),i.msaaRenderbuffers){for(let r=0;r<i.msaaRenderbuffers.length;r++)e.deleteRenderbuffer(i.msaaRenderbuffers[r]);delete i.msaaRenderbuffers}}}destroyTexture(t){const{gl:e,backend:n}=this,{textureGPU:i,renderTarget:r}=n.get(t);this.deallocateRenderBuffers(r),e.deleteTexture(i),n.delete(t)}copyTextureToTexture(t,e,n=null,i=null,r=0){const{gl:o,backend:a}=this,{state:c}=this.backend,{textureGPU:l,glTextureType:h,glType:u,glFormat:d}=a.get(e);let f,p,_,g,m,x;n!==null?(f=n.max.x-n.min.x,p=n.max.y-n.min.y,_=n.min.x,g=n.min.y):(f=t.image.width,p=t.image.height,_=0,g=0),i!==null?(m=i.x,x=i.y):(m=0,x=0),c.bindTexture(h,l),o.pixelStorei(o.UNPACK_ALIGNMENT,e.unpackAlignment),o.pixelStorei(o.UNPACK_FLIP_Y_WEBGL,e.flipY),o.pixelStorei(o.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),o.pixelStorei(o.UNPACK_ALIGNMENT,e.unpackAlignment);const v=o.getParameter(o.UNPACK_ROW_LENGTH),y=o.getParameter(o.UNPACK_IMAGE_HEIGHT),b=o.getParameter(o.UNPACK_SKIP_PIXELS),S=o.getParameter(o.UNPACK_SKIP_ROWS),M=o.getParameter(o.UNPACK_SKIP_IMAGES),T=t.isCompressedTexture?t.mipmaps[r]:t.image;if(o.pixelStorei(o.UNPACK_ROW_LENGTH,T.width),o.pixelStorei(o.UNPACK_IMAGE_HEIGHT,T.height),o.pixelStorei(o.UNPACK_SKIP_PIXELS,_),o.pixelStorei(o.UNPACK_SKIP_ROWS,g),t.isRenderTargetTexture||t.isDepthTexture){const A=a.get(t),w=a.get(e),E=a.get(A.renderTarget),N=a.get(w.renderTarget),I=E.framebuffers[A.cacheKey],P=N.framebuffers[w.cacheKey];c.bindFramebuffer(o.READ_FRAMEBUFFER,I),c.bindFramebuffer(o.DRAW_FRAMEBUFFER,P);let D=o.COLOR_BUFFER_BIT;t.isDepthTexture&&(D=o.DEPTH_BUFFER_BIT),o.blitFramebuffer(_,g,f,p,m,x,f,p,D,o.NEAREST),c.bindFramebuffer(o.READ_FRAMEBUFFER,null),c.bindFramebuffer(o.DRAW_FRAMEBUFFER,null)}else t.isDataTexture?o.texSubImage2D(o.TEXTURE_2D,r,m,x,f,p,d,u,T.data):t.isCompressedTexture?o.compressedTexSubImage2D(o.TEXTURE_2D,r,m,x,T.width,T.height,d,T.data):o.texSubImage2D(o.TEXTURE_2D,r,m,x,f,p,d,u,T);o.pixelStorei(o.UNPACK_ROW_LENGTH,v),o.pixelStorei(o.UNPACK_IMAGE_HEIGHT,y),o.pixelStorei(o.UNPACK_SKIP_PIXELS,b),o.pixelStorei(o.UNPACK_SKIP_ROWS,S),o.pixelStorei(o.UNPACK_SKIP_IMAGES,M),r===0&&e.generateMipmaps&&o.generateMipmap(o.TEXTURE_2D),c.unbindTexture()}copyFramebufferToTexture(t,e,n){const{gl:i}=this,{state:r}=this.backend,{textureGPU:o}=this.backend.get(t),{x:a,y:c,z:l,w:h}=n,u=t.isDepthTexture===!0||e.renderTarget&&e.renderTarget.samples>0,d=e.renderTarget?e.renderTarget.height:this.backend.gerDrawingBufferSize().y;if(u){const f=a!==0||c!==0;let p,_;if(t.isDepthTexture===!0?(p=i.DEPTH_BUFFER_BIT,_=i.DEPTH_ATTACHMENT,e.stencil&&(p|=i.STENCIL_BUFFER_BIT)):(p=i.COLOR_BUFFER_BIT,_=i.COLOR_ATTACHMENT0),f){const g=this.backend.get(e.renderTarget),m=g.framebuffers[e.getCacheKey()],x=g.msaaFrameBuffer;r.bindFramebuffer(i.DRAW_FRAMEBUFFER,m),r.bindFramebuffer(i.READ_FRAMEBUFFER,x);const v=d-c-h;i.blitFramebuffer(a,v,a+l,v+h,a,v,a+l,v+h,p,i.NEAREST),r.bindFramebuffer(i.READ_FRAMEBUFFER,m),r.bindTexture(i.TEXTURE_2D,o),i.copyTexSubImage2D(i.TEXTURE_2D,0,0,0,a,v,l,h),r.unbindTexture()}else{const g=i.createFramebuffer();r.bindFramebuffer(i.DRAW_FRAMEBUFFER,g),i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,_,i.TEXTURE_2D,o,0),i.blitFramebuffer(0,0,l,h,0,0,l,h,p,i.NEAREST),i.deleteFramebuffer(g)}}else r.bindTexture(i.TEXTURE_2D,o),i.copyTexSubImage2D(i.TEXTURE_2D,0,0,0,a,d-h-c,l,h),r.unbindTexture();t.generateMipmaps&&this.generateMipmaps(t),this.backend._setFramebuffer(e)}setupRenderBufferStorage(t,e){const{gl:n}=this,i=e.renderTarget,{samples:r,depthTexture:o,depthBuffer:a,stencilBuffer:c,width:l,height:h}=i;if(n.bindRenderbuffer(n.RENDERBUFFER,t),a&&!c){let u=n.DEPTH_COMPONENT24;r>0?(o&&o.isDepthTexture&&o.type===n.FLOAT&&(u=n.DEPTH_COMPONENT32F),n.renderbufferStorageMultisample(n.RENDERBUFFER,r,u,l,h)):n.renderbufferStorage(n.RENDERBUFFER,u,l,h),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.RENDERBUFFER,t)}else a&&c&&(r>0?n.renderbufferStorageMultisample(n.RENDERBUFFER,r,n.DEPTH24_STENCIL8,l,h):n.renderbufferStorage(n.RENDERBUFFER,n.DEPTH_STENCIL,l,h),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.RENDERBUFFER,t))}async copyTextureToBuffer(t,e,n,i,r,o){const{backend:a,gl:c}=this,{textureGPU:l,glFormat:h,glType:u}=this.backend.get(t),d=c.createFramebuffer();c.bindFramebuffer(c.READ_FRAMEBUFFER,d);const f=t.isCubeTexture?c.TEXTURE_CUBE_MAP_POSITIVE_X+o:c.TEXTURE_2D;c.framebufferTexture2D(c.READ_FRAMEBUFFER,c.COLOR_ATTACHMENT0,f,l,0);const p=this._getTypedArrayType(u),_=this._getBytesPerTexel(u,h),m=i*r*_,x=c.createBuffer();c.bindBuffer(c.PIXEL_PACK_BUFFER,x),c.bufferData(c.PIXEL_PACK_BUFFER,m,c.STREAM_READ),c.readPixels(e,n,i,r,h,u,0),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),await a.utils._clientWaitAsync();const v=new p(m/p.BYTES_PER_ELEMENT);return c.bindBuffer(c.PIXEL_PACK_BUFFER,x),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,v),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),c.deleteFramebuffer(d),v}_getTypedArrayType(t){const{gl:e}=this;if(t===e.UNSIGNED_BYTE)return Uint8Array;if(t===e.UNSIGNED_SHORT_4_4_4_4||t===e.UNSIGNED_SHORT_5_5_5_1||t===e.UNSIGNED_SHORT_5_6_5||t===e.UNSIGNED_SHORT)return Uint16Array;if(t===e.UNSIGNED_INT)return Uint32Array;if(t===e.HALF_FLOAT)return Uint16Array;if(t===e.FLOAT)return Float32Array;throw new Error(`Unsupported WebGL type: ${t}`)}_getBytesPerTexel(t,e){const{gl:n}=this;let i=0;if(t===n.UNSIGNED_BYTE&&(i=1),(t===n.UNSIGNED_SHORT_4_4_4_4||t===n.UNSIGNED_SHORT_5_5_5_1||t===n.UNSIGNED_SHORT_5_6_5||t===n.UNSIGNED_SHORT||t===n.HALF_FLOAT)&&(i=2),(t===n.UNSIGNED_INT||t===n.FLOAT)&&(i=4),e===n.RGBA)return i*4;if(e===n.RGB)return i*3;if(e===n.ALPHA)return i}}class IK{constructor(t){this.backend=t,this.gl=this.backend.gl,this.availableExtensions=this.gl.getSupportedExtensions(),this.extensions={}}get(t){let e=this.extensions[t];return e===void 0&&(e=this.gl.getExtension(t),this.extensions[t]=e),e}has(t){return this.availableExtensions.includes(t)}}class FK{constructor(t){this.backend=t,this.maxAnisotropy=null}getMaxAnisotropy(){if(this.maxAnisotropy!==null)return this.maxAnisotropy;const t=this.backend.gl,e=this.backend.extensions;if(e.has("EXT_texture_filter_anisotropic")===!0){const n=e.get("EXT_texture_filter_anisotropic");this.maxAnisotropy=t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else this.maxAnisotropy=0;return this.maxAnisotropy}}const eA={WEBGL_multi_draw:"WEBGL_multi_draw",WEBGL_compressed_texture_astc:"texture-compression-astc",WEBGL_compressed_texture_etc:"texture-compression-etc2",WEBGL_compressed_texture_etc1:"texture-compression-etc1",WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBKIT_WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBGL_compressed_texture_s3tc:"texture-compression-bc",EXT_texture_compression_bptc:"texture-compression-bptc",EXT_disjoint_timer_query_webgl2:"timestamp-query"};class OK{constructor(t){this.gl=t.gl,this.extensions=t.extensions,this.info=t.renderer.info,this.mode=null,this.index=0,this.type=null,this.object=null}render(t,e){const{gl:n,mode:i,object:r,type:o,info:a,index:c}=this;c!==0?n.drawElements(i,e,o,t):n.drawArrays(i,t,e),a.update(r,e,i,1)}renderInstances(t,e,n){const{gl:i,mode:r,type:o,index:a,object:c,info:l}=this;n!==0&&(a!==0?i.drawElementsInstanced(r,e,o,t,n):i.drawArraysInstanced(r,t,e,n),l.update(c,e,r,n))}renderMultiDraw(t,e,n){const{extensions:i,mode:r,object:o,info:a}=this;if(n===0)return;const c=i.get("WEBGL_multi_draw");if(c===null)for(let l=0;l<n;l++)this.render(t[l],e[l]);else{this.index!==0?c.multiDrawElementsWEBGL(r,e,0,this.type,t,0,n):c.multiDrawArraysWEBGL(r,t,0,e,0,n);let l=0;for(let h=0;h<n;h++)l+=e[h];a.update(o,l,r,1)}}renderMultiDrawInstances(t,e,n,i){const{extensions:r,mode:o,object:a,info:c}=this;if(n===0)return;const l=r.get("WEBGL_multi_draw");if(l===null)for(let h=0;h<n;h++)this.renderInstances(t[h],e[h],i[h]);else{this.index!==0?l.multiDrawElementsInstancedWEBGL(o,e,0,this.type,t,0,i,0,n):l.multiDrawArraysInstancedWEBGL(o,t,0,e,0,i,0,n);let h=0;for(let u=0;u<n;u++)h+=e[u]*i[u];c.update(a,h,o,1)}}}class nA extends nP{constructor(t={}){super(t),this.isWebGLBackend=!0}init(t){super.init(t);const e=this.parameters,n=e.context!==void 0?e.context:t.domElement.getContext("webgl2");function i(r){r.preventDefault();const o={api:"WebGL",message:r.statusMessage||"Unknown reason",reason:null,originalEvent:r};t.onDeviceLost(o)}this._onContextLost=i,t.domElement.addEventListener("webglcontextlost",i,!1),this.gl=n,this.extensions=new IK(this),this.capabilities=new FK(this),this.attributeUtils=new RK(this),this.textureUtils=new DK(this),this.bufferRenderer=new OK(this),this.state=new NK(this),this.utils=new PK(this),this.vaoCache={},this.transformFeedbackCache={},this.discard=!1,this.trackTimestamp=e.trackTimestamp===!0,this.extensions.get("EXT_color_buffer_float"),this.extensions.get("WEBGL_clip_cull_distance"),this.extensions.get("OES_texture_float_linear"),this.extensions.get("EXT_color_buffer_half_float"),this.extensions.get("WEBGL_multisampled_render_to_texture"),this.extensions.get("WEBGL_render_shared_exponent"),this.extensions.get("WEBGL_multi_draw"),this.disjoint=this.extensions.get("EXT_disjoint_timer_query_webgl2"),this.parallel=this.extensions.get("KHR_parallel_shader_compile"),this._knownBindings=new WeakSet,this._currentContext=null}get coordinateSystem(){return Os}async getArrayBufferAsync(t){return await this.attributeUtils.getArrayBufferAsync(t)}async waitForGPU(){await this.utils._clientWaitAsync()}initTimestampQuery(t){if(!this.disjoint||!this.trackTimestamp)return;const e=this.get(t);if(this.queryRunning){e.queryQueue||(e.queryQueue=[]),e.queryQueue.push(t);return}e.activeQuery&&(this.gl.endQuery(this.disjoint.TIME_ELAPSED_EXT),e.activeQuery=null),e.activeQuery=this.gl.createQuery(),e.activeQuery!==null&&(this.gl.beginQuery(this.disjoint.TIME_ELAPSED_EXT,e.activeQuery),this.queryRunning=!0)}prepareTimestampBuffer(t){if(!this.disjoint||!this.trackTimestamp)return;const e=this.get(t);if(e.activeQuery&&(this.gl.endQuery(this.disjoint.TIME_ELAPSED_EXT),e.gpuQueries||(e.gpuQueries=[]),e.gpuQueries.push({query:e.activeQuery}),e.activeQuery=null,this.queryRunning=!1,e.queryQueue&&e.queryQueue.length>0)){const n=e.queryQueue.shift();this.initTimestampQuery(n)}}async resolveTimestampAsync(t,e="render"){if(!this.disjoint||!this.trackTimestamp)return;const n=this.get(t);n.gpuQueries||(n.gpuQueries=[]);for(let i=0;i<n.gpuQueries.length;i++){const r=n.gpuQueries[i],o=this.gl.getQueryParameter(r.query,this.gl.QUERY_RESULT_AVAILABLE),a=this.gl.getParameter(this.disjoint.GPU_DISJOINT_EXT);if(o&&!a){const c=this.gl.getQueryParameter(r.query,this.gl.QUERY_RESULT),l=Number(c)/1e6;this.gl.deleteQuery(r.query),n.gpuQueries.splice(i,1),i--,this.renderer.info.updateTimestamp(e,l)}}}getContext(){return this.gl}beginRender(t){const{gl:e}=this,n=this.get(t);if(this.initTimestampQuery(t),n.previousContext=this._currentContext,this._currentContext=t,this._setFramebuffer(t),this.clear(t.clearColor,t.clearDepth,t.clearStencil,t,!1),t.viewport?this.updateViewport(t):e.viewport(0,0,e.drawingBufferWidth,e.drawingBufferHeight),t.scissor){const{x:r,y:o,width:a,height:c}=t.scissorValue;e.scissor(r,t.height-c-o,a,c)}const i=t.occlusionQueryCount;i>0&&(n.currentOcclusionQueries=n.occlusionQueries,n.currentOcclusionQueryObjects=n.occlusionQueryObjects,n.lastOcclusionObject=null,n.occlusionQueries=new Array(i),n.occlusionQueryObjects=new Array(i),n.occlusionQueryIndex=0)}finishRender(t){const{gl:e,state:n}=this,i=this.get(t),r=i.previousContext,o=t.occlusionQueryCount;o>0&&(o>i.occlusionQueryIndex&&e.endQuery(e.ANY_SAMPLES_PASSED),this.resolveOccludedAsync(t));const a=t.textures;if(a!==null)for(let c=0;c<a.length;c++){const l=a[c];l.generateMipmaps&&this.generateMipmaps(l)}if(this._currentContext=r,t.textures!==null&&t.renderTarget){const c=this.get(t.renderTarget),{samples:l}=t.renderTarget;if(l>0){const h=c.framebuffers[t.getCacheKey()],u=e.COLOR_BUFFER_BIT,d=c.msaaFrameBuffer,f=t.textures;n.bindFramebuffer(e.READ_FRAMEBUFFER,d),n.bindFramebuffer(e.DRAW_FRAMEBUFFER,h);for(let p=0;p<f.length;p++)if(t.scissor){const{x:_,y:g,width:m,height:x}=t.scissorValue,v=t.height-x-g;e.blitFramebuffer(_,v,_+m,v+x,_,v,_+m,v+x,u,e.NEAREST),e.invalidateSubFramebuffer(e.READ_FRAMEBUFFER,c.invalidationArray,_,v,m,x)}else e.blitFramebuffer(0,0,t.width,t.height,0,0,t.width,t.height,u,e.NEAREST),e.invalidateFramebuffer(e.READ_FRAMEBUFFER,c.invalidationArray)}}r!==null&&(this._setFramebuffer(r),r.viewport?this.updateViewport(r):e.viewport(0,0,e.drawingBufferWidth,e.drawingBufferHeight)),this.prepareTimestampBuffer(t)}resolveOccludedAsync(t){const e=this.get(t),{currentOcclusionQueries:n,currentOcclusionQueryObjects:i}=e;if(n&&i){const r=new WeakSet,{gl:o}=this;e.currentOcclusionQueryObjects=null,e.currentOcclusionQueries=null;const a=()=>{let c=0;for(let l=0;l<n.length;l++){const h=n[l];h!==null&&o.getQueryParameter(h,o.QUERY_RESULT_AVAILABLE)&&(o.getQueryParameter(h,o.QUERY_RESULT)>0&&r.add(i[l]),n[l]=null,o.deleteQuery(h),c++)}c<n.length?requestAnimationFrame(a):e.occluded=r};a()}}isOccluded(t,e){const n=this.get(t);return n.occluded&&n.occluded.has(e)}updateViewport(t){const e=this.gl,{x:n,y:i,width:r,height:o}=t.viewportValue;e.viewport(n,t.height-o-i,r,o)}setScissorTest(t){const e=this.gl;t?e.enable(e.SCISSOR_TEST):e.disable(e.SCISSOR_TEST)}clear(t,e,n,i=null,r=!0){const{gl:o}=this;if(i===null){const c=this.getClearColor();c.r*=c.a,c.g*=c.a,c.b*=c.a,i={textures:null,clearColorValue:c}}let a=0;if(t&&(a|=o.COLOR_BUFFER_BIT),e&&(a|=o.DEPTH_BUFFER_BIT),n&&(a|=o.STENCIL_BUFFER_BIT),a!==0){let c;if(i.clearColorValue?c=i.clearColorValue:(c=this.getClearColor(),c.r*=c.a,c.g*=c.a,c.b*=c.a),e&&this.state.setDepthMask(!0),i.textures===null)o.clearColor(c.r,c.g,c.b,c.a),o.clear(a);else{if(r&&this._setFramebuffer(i),t)for(let l=0;l<i.textures.length;l++)o.clearBufferfv(o.COLOR,l,[c.r,c.g,c.b,c.a]);e&&n?o.clearBufferfi(o.DEPTH_STENCIL,0,1,0):e?o.clearBufferfv(o.DEPTH,0,[1]):n&&o.clearBufferiv(o.STENCIL,0,[0])}}}beginCompute(t){const{state:e,gl:n}=this;e.bindFramebuffer(n.FRAMEBUFFER,null),this.initTimestampQuery(t)}compute(t,e,n,i){const{state:r,gl:o}=this;this.discard||(o.enable(o.RASTERIZER_DISCARD),this.discard=!0);const{programGPU:a,transformBuffers:c,attributes:l}=this.get(i),h=this._getVaoKey(null,l),u=this.vaoCache[h];u===void 0?this._createVao(null,l):o.bindVertexArray(u),r.useProgram(a),this._bindUniforms(n);const d=this._getTransformFeedback(c);o.bindTransformFeedback(o.TRANSFORM_FEEDBACK,d),o.beginTransformFeedback(o.POINTS),l[0].isStorageInstancedBufferAttribute?o.drawArraysInstanced(o.POINTS,0,1,e.count):o.drawArrays(o.POINTS,0,e.count),o.endTransformFeedback(),o.bindTransformFeedback(o.TRANSFORM_FEEDBACK,null);for(let f=0;f<c.length;f++){const p=c[f];p.pbo&&this.textureUtils.copyBufferToTexture(p.transformBuffer,p.pbo),p.switchBuffers()}}finishCompute(t){const e=this.gl;this.discard=!1,e.disable(e.RASTERIZER_DISCARD),this.prepareTimestampBuffer(t),this._currentContext&&this._setFramebuffer(this._currentContext)}draw(t){const{object:e,pipeline:n,material:i,context:r}=t,{programGPU:o}=this.get(n),{gl:a,state:c}=this,l=this.get(r),h=t.getDrawParameters();if(h===null)return;this._bindUniforms(t.getBindings());const u=e.isMesh&&e.matrixWorld.determinant()<0;c.setMaterial(i,u),c.useProgram(o);let d=t.staticVao;if(d===void 0){const v=this._getVaoKey(t.getIndex(),t.getAttributes());if(d=this.vaoCache[v],d===void 0){let y;({vaoGPU:d,staticVao:y}=this._createVao(t.getIndex(),t.getAttributes())),y&&(t.staticVao=d)}}a.bindVertexArray(d);const f=t.getIndex(),p=l.lastOcclusionObject;if(p!==e&&p!==void 0){if(p!==null&&p.occlusionTest===!0&&(a.endQuery(a.ANY_SAMPLES_PASSED),l.occlusionQueryIndex++),e.occlusionTest===!0){const v=a.createQuery();a.beginQuery(a.ANY_SAMPLES_PASSED,v),l.occlusionQueries[l.occlusionQueryIndex]=v,l.occlusionQueryObjects[l.occlusionQueryIndex]=e}l.lastOcclusionObject=e}const _=this.bufferRenderer;e.isPoints?_.mode=a.POINTS:e.isLineSegments?_.mode=a.LINES:e.isLine?_.mode=a.LINE_STRIP:e.isLineLoop?_.mode=a.LINE_LOOP:i.wireframe===!0?(c.setLineWidth(i.wireframeLinewidth*this.renderer.getPixelRatio()),_.mode=a.LINES):_.mode=a.TRIANGLES;const{vertexCount:g,instanceCount:m}=h;let{firstVertex:x}=h;if(_.object=e,f!==null){x*=f.array.BYTES_PER_ELEMENT;const v=this.get(f);_.index=f.count,_.type=v.type}else _.index=0;e.isBatchedMesh?e._multiDrawInstances!==null?_.renderMultiDrawInstances(e._multiDrawStarts,e._multiDrawCounts,e._multiDrawCount,e._multiDrawInstances):this.hasFeature("WEBGL_multi_draw")?_.renderMultiDraw(e._multiDrawStarts,e._multiDrawCounts,e._multiDrawCount):d6("THREE.WebGLRenderer: WEBGL_multi_draw not supported."):m>1?_.renderInstances(x,g,m):_.render(x,g),a.bindVertexArray(null)}needsRenderUpdate(){return!1}getRenderCacheKey(){return""}createDefaultTexture(t){this.textureUtils.createDefaultTexture(t)}createTexture(t,e){this.textureUtils.createTexture(t,e)}updateTexture(t,e){this.textureUtils.updateTexture(t,e)}generateMipmaps(t){this.textureUtils.generateMipmaps(t)}destroyTexture(t){this.textureUtils.destroyTexture(t)}copyTextureToBuffer(t,e,n,i,r,o){return this.textureUtils.copyTextureToBuffer(t,e,n,i,r,o)}createSampler(){}destroySampler(){}createNodeBuilder(t,e){return new AK(t,e)}createProgram(t){const e=this.gl,{stage:n,code:i}=t,r=n==="fragment"?e.createShader(e.FRAGMENT_SHADER):e.createShader(e.VERTEX_SHADER);e.shaderSource(r,i),e.compileShader(r),this.set(t,{shaderGPU:r})}destroyProgram(){console.warn("Abstract class.")}createRenderPipeline(t,e){const n=this.gl,i=t.pipeline,{fragmentProgram:r,vertexProgram:o}=i,a=n.createProgram(),c=this.get(r).shaderGPU,l=this.get(o).shaderGPU;if(n.attachShader(a,c),n.attachShader(a,l),n.linkProgram(a),this.set(i,{programGPU:a,fragmentShader:c,vertexShader:l}),e!==null&&this.parallel){const h=new Promise(u=>{const d=this.parallel,f=()=>{n.getProgramParameter(a,d.COMPLETION_STATUS_KHR)?(this._completeCompile(t,i),u()):requestAnimationFrame(f)};f()});e.push(h);return}this._completeCompile(t,i)}_handleSource(t,e){const n=t.split(`
`),i=[],r=Math.max(e-6,0),o=Math.min(e+6,n.length);for(let a=r;a<o;a++){const c=a+1;i.push(`${c===e?">":" "} ${c}: ${n[a]}`)}return i.join(`
`)}_getShaderErrors(t,e,n){const i=t.getShaderParameter(e,t.COMPILE_STATUS),r=t.getShaderInfoLog(e).trim();if(i&&r==="")return"";const o=/ERROR: 0:(\d+)/.exec(r);if(o){const a=parseInt(o[1]);return n.toUpperCase()+`

`+r+`

`+this._handleSource(t.getShaderSource(e),a)}else return r}_logProgramError(t,e,n){if(this.renderer.debug.checkShaderErrors){const i=this.gl,r=i.getProgramInfoLog(t).trim();if(i.getProgramParameter(t,i.LINK_STATUS)===!1)if(typeof this.renderer.debug.onShaderError=="function")this.renderer.debug.onShaderError(i,t,n,e);else{const o=this._getShaderErrors(i,n,"vertex"),a=this._getShaderErrors(i,e,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(t,i.VALIDATE_STATUS)+`

Program Info Log: `+r+`
`+o+`
`+a)}else r!==""&&console.warn("THREE.WebGLProgram: Program Info Log:",r)}}_completeCompile(t,e){const{state:n,gl:i}=this,r=this.get(e),{programGPU:o,fragmentShader:a,vertexShader:c}=r;i.getProgramParameter(o,i.LINK_STATUS)===!1&&this._logProgramError(o,a,c),n.useProgram(o);const l=t.getBindings();this._setupBindings(l,o),this.set(e,{programGPU:o})}createComputePipeline(t,e){const{state:n,gl:i}=this,r={stage:"fragment",code:`#version 300 es
precision highp float;
void main() {}`};this.createProgram(r);const{computeProgram:o}=t,a=i.createProgram(),c=this.get(r).shaderGPU,l=this.get(o).shaderGPU,h=o.transforms,u=[],d=[];for(let g=0;g<h.length;g++){const m=h[g];u.push(m.varyingName),d.push(m.attributeNode)}i.attachShader(a,c),i.attachShader(a,l),i.transformFeedbackVaryings(a,u,i.SEPARATE_ATTRIBS),i.linkProgram(a),i.getProgramParameter(a,i.LINK_STATUS)===!1&&this._logProgramError(a,c,l),n.useProgram(a),this._setupBindings(e,a);const f=o.attributes,p=[],_=[];for(let g=0;g<f.length;g++){const m=f[g].node.attribute;p.push(m),this.has(m)||this.attributeUtils.createAttribute(m,i.ARRAY_BUFFER)}for(let g=0;g<d.length;g++){const m=d[g].attribute;this.has(m)||this.attributeUtils.createAttribute(m,i.ARRAY_BUFFER);const x=this.get(m);_.push(x)}this.set(t,{programGPU:a,transformBuffers:_,attributes:p})}createBindings(t,e){if(this._knownBindings.has(e)===!1){this._knownBindings.add(e);let n=0,i=0;for(const r of e){this.set(r,{textures:i,uniformBuffers:n});for(const o of r.bindings)o.isUniformBuffer&&n++,o.isSampledTexture&&i++}}this.updateBindings(t,e)}updateBindings(t){const{gl:e}=this,n=this.get(t);let i=n.uniformBuffers,r=n.textures;for(const o of t.bindings)if(o.isUniformsGroup||o.isUniformBuffer){const a=o.buffer,c=e.createBuffer();e.bindBuffer(e.UNIFORM_BUFFER,c),e.bufferData(e.UNIFORM_BUFFER,a,e.DYNAMIC_DRAW),this.set(o,{index:i++,bufferGPU:c})}else if(o.isSampledTexture){const{textureGPU:a,glTextureType:c}=this.get(o.texture);this.set(o,{index:r++,textureGPU:a,glTextureType:c})}}updateBinding(t){const e=this.gl;if(t.isUniformsGroup||t.isUniformBuffer){const i=this.get(t).bufferGPU,r=t.buffer;e.bindBuffer(e.UNIFORM_BUFFER,i),e.bufferData(e.UNIFORM_BUFFER,r,e.DYNAMIC_DRAW)}}createIndexAttribute(t){const e=this.gl;this.attributeUtils.createAttribute(t,e.ELEMENT_ARRAY_BUFFER)}createAttribute(t){if(this.has(t))return;const e=this.gl;this.attributeUtils.createAttribute(t,e.ARRAY_BUFFER)}createStorageAttribute(t){if(this.has(t))return;const e=this.gl;this.attributeUtils.createAttribute(t,e.ARRAY_BUFFER)}updateAttribute(t){this.attributeUtils.updateAttribute(t)}destroyAttribute(t){this.attributeUtils.destroyAttribute(t)}updateSize(){}hasFeature(t){const e=Object.keys(eA).filter(i=>eA[i]===t),n=this.extensions;for(let i=0;i<e.length;i++)if(n.has(e[i]))return!0;return!1}getMaxAnisotropy(){return this.capabilities.getMaxAnisotropy()}copyTextureToTexture(t,e,n,i,r){this.textureUtils.copyTextureToTexture(t,e,n,i,r)}copyFramebufferToTexture(t,e,n){this.textureUtils.copyFramebufferToTexture(t,e,n)}_setFramebuffer(t){const{gl:e,state:n}=this;let i=null;if(t.textures!==null){const r=t.renderTarget,o=this.get(r),{samples:a,depthBuffer:c,stencilBuffer:l}=r,h=r.isWebGLCubeRenderTarget===!0;let u=o.msaaFrameBuffer,d=o.depthRenderbuffer;const f=U2(t);let p;if(h?(o.cubeFramebuffers||(o.cubeFramebuffers={}),p=o.cubeFramebuffers[f]):(o.framebuffers||(o.framebuffers={}),p=o.framebuffers[f]),p===void 0){p=e.createFramebuffer(),n.bindFramebuffer(e.FRAMEBUFFER,p);const _=t.textures;if(h){o.cubeFramebuffers[f]=p;const{textureGPU:g}=this.get(_[0]),m=this.renderer._activeCubeFace;e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+m,g,0)}else{o.framebuffers[f]=p;for(let g=0;g<_.length;g++){const m=_[g],x=this.get(m);x.renderTarget=t.renderTarget,x.cacheKey=f;const v=e.COLOR_ATTACHMENT0+g;e.framebufferTexture2D(e.FRAMEBUFFER,v,e.TEXTURE_2D,x.textureGPU,0)}n.drawBuffers(t,p)}if(t.depthTexture!==null){const g=this.get(t.depthTexture),m=l?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT;g.renderTarget=t.renderTarget,g.cacheKey=f,e.framebufferTexture2D(e.FRAMEBUFFER,m,e.TEXTURE_2D,g.textureGPU,0)}}if(a>0){if(u===void 0){const _=[];u=e.createFramebuffer(),n.bindFramebuffer(e.FRAMEBUFFER,u);const g=[],m=t.textures;for(let x=0;x<m.length;x++){if(g[x]=e.createRenderbuffer(),e.bindRenderbuffer(e.RENDERBUFFER,g[x]),_.push(e.COLOR_ATTACHMENT0+x),c){const b=l?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT;_.push(b)}const v=t.textures[x],y=this.get(v);e.renderbufferStorageMultisample(e.RENDERBUFFER,a,y.glInternalFormat,t.width,t.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+x,e.RENDERBUFFER,g[x])}if(o.msaaFrameBuffer=u,o.msaaRenderbuffers=g,d===void 0){d=e.createRenderbuffer(),this.textureUtils.setupRenderBufferStorage(d,t),o.depthRenderbuffer=d;const x=l?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT;_.push(x)}o.invalidationArray=_}i=o.msaaFrameBuffer}else i=p}n.bindFramebuffer(e.FRAMEBUFFER,i)}_getVaoKey(t,e){let n=[];if(t!==null){const i=this.get(t);n+=":"+i.id}for(let i=0;i<e.length;i++){const r=this.get(e[i]);n+=":"+r.id}return n}_createVao(t,e){const{gl:n}=this,i=n.createVertexArray();let r="",o=!0;if(n.bindVertexArray(i),t!==null){const a=this.get(t);n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,a.bufferGPU),r+=":"+a.id}for(let a=0;a<e.length;a++){const c=e[a],l=this.get(c);r+=":"+l.id,n.bindBuffer(n.ARRAY_BUFFER,l.bufferGPU),n.enableVertexAttribArray(a),(c.isStorageBufferAttribute||c.isStorageInstancedBufferAttribute)&&(o=!1);let h,u;c.isInterleavedBufferAttribute===!0?(h=c.data.stride*l.bytesPerElement,u=c.offset*l.bytesPerElement):(h=0,u=0),l.isInteger?n.vertexAttribIPointer(a,c.itemSize,l.type,h,u):n.vertexAttribPointer(a,c.itemSize,l.type,c.normalized,h,u),c.isInstancedBufferAttribute&&!c.isInterleavedBufferAttribute?n.vertexAttribDivisor(a,c.meshPerAttribute):c.isInterleavedBufferAttribute&&c.data.isInstancedInterleavedBuffer&&n.vertexAttribDivisor(a,c.data.meshPerAttribute)}return n.bindBuffer(n.ARRAY_BUFFER,null),this.vaoCache[r]=i,{vaoGPU:i,staticVao:o}}_getTransformFeedback(t){let e="";for(let r=0;r<t.length;r++)e+=":"+t[r].id;let n=this.transformFeedbackCache[e];if(n!==void 0)return n;const{gl:i}=this;n=i.createTransformFeedback(),i.bindTransformFeedback(i.TRANSFORM_FEEDBACK,n);for(let r=0;r<t.length;r++){const o=t[r];i.bindBufferBase(i.TRANSFORM_FEEDBACK_BUFFER,r,o.transformBuffer)}return i.bindTransformFeedback(i.TRANSFORM_FEEDBACK,null),this.transformFeedbackCache[e]=n,n}_setupBindings(t,e){const n=this.gl;for(const i of t)for(const r of i.bindings){const a=this.get(r).index;if(r.isUniformsGroup||r.isUniformBuffer){const c=n.getUniformBlockIndex(e,r.name);n.uniformBlockBinding(e,c,a)}else if(r.isSampledTexture){const c=n.getUniformLocation(e,r.name);n.uniform1i(c,a)}}}_bindUniforms(t){const{gl:e,state:n}=this;for(const i of t)for(const r of i.bindings){const o=this.get(r),a=o.index;r.isUniformsGroup||r.isUniformBuffer?n.bindBufferBase(e.UNIFORM_BUFFER,a,o.bufferGPU):r.isSampledTexture&&n.bindTexture(o.glTextureType,o.textureGPU,e.TEXTURE0+a)}}dispose(){this.renderer.domElement.removeEventListener("webglcontextlost",this._onContextLost)}}class LK extends pS{constructor(t,e){super(t),this.texture=e,this.version=e?e.version:0,this.isSampler=!0}}class BK extends LK{constructor(t,e,n){super(t,e?e.value:null),this.textureNode=e,this.groupNode=n}update(){this.texture=this.textureNode.value}}class UK extends Z2{constructor(t,e){super(t,e?e.array:null),this.attribute=e,this.isStorageBuffer=!0}}let kK=0;class zK extends UK{constructor(t,e){super("StorageBuffer_"+kK++,t?t.value:null),this.nodeUniform=t,this.access=t?t.access:nv.Storage,this.groupNode=e}get buffer(){return this.nodeUniform.value}}class VK extends _a{constructor(t){super(),this.device=t;const e=`
struct VarysStruct {
	@builtin( position ) Position: vec4<f32>,
	@location( 0 ) vTex : vec2<f32>
};

@vertex
fn main( @builtin( vertex_index ) vertexIndex : u32 ) -> VarysStruct {

	var Varys : VarysStruct;

	var pos = array< vec2<f32>, 4 >(
		vec2<f32>( -1.0,  1.0 ),
		vec2<f32>(  1.0,  1.0 ),
		vec2<f32>( -1.0, -1.0 ),
		vec2<f32>(  1.0, -1.0 )
	);

	var tex = array< vec2<f32>, 4 >(
		vec2<f32>( 0.0, 0.0 ),
		vec2<f32>( 1.0, 0.0 ),
		vec2<f32>( 0.0, 1.0 ),
		vec2<f32>( 1.0, 1.0 )
	);

	Varys.vTex = tex[ vertexIndex ];
	Varys.Position = vec4<f32>( pos[ vertexIndex ], 0.0, 1.0 );

	return Varys;

}
`,n=`
@group( 0 ) @binding( 0 )
var imgSampler : sampler;

@group( 0 ) @binding( 1 )
var img : texture_2d<f32>;

@fragment
fn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {

	return textureSample( img, imgSampler, vTex );

}
`,i=`
@group( 0 ) @binding( 0 )
var imgSampler : sampler;

@group( 0 ) @binding( 1 )
var img : texture_2d<f32>;

@fragment
fn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {

	return textureSample( img, imgSampler, vec2( vTex.x, 1.0 - vTex.y ) );

}
`;this.mipmapSampler=t.createSampler({minFilter:Wa.Linear}),this.flipYSampler=t.createSampler({minFilter:Wa.Nearest}),this.transferPipelines={},this.flipYPipelines={},this.mipmapVertexShaderModule=t.createShaderModule({label:"mipmapVertex",code:e}),this.mipmapFragmentShaderModule=t.createShaderModule({label:"mipmapFragment",code:n}),this.flipYFragmentShaderModule=t.createShaderModule({label:"flipYFragment",code:i})}getTransferPipeline(t){let e=this.transferPipelines[t];return e===void 0&&(e=this.device.createRenderPipeline({label:`mipmap-${t}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.mipmapFragmentShaderModule,entryPoint:"main",targets:[{format:t}]},primitive:{topology:Nl.TriangleStrip,stripIndexFormat:mh.Uint32},layout:"auto"}),this.transferPipelines[t]=e),e}getFlipYPipeline(t){let e=this.flipYPipelines[t];return e===void 0&&(e=this.device.createRenderPipeline({label:`flipY-${t}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.flipYFragmentShaderModule,entryPoint:"main",targets:[{format:t}]},primitive:{topology:Nl.TriangleStrip,stripIndexFormat:mh.Uint32},layout:"auto"}),this.flipYPipelines[t]=e),e}flipY(t,e,n=0){const i=e.format,{width:r,height:o}=e.size,a=this.getTransferPipeline(i),c=this.getFlipYPipeline(i),l=this.device.createTexture({size:{width:r,height:o,depthOrArrayLayers:1},format:i,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),h=t.createView({baseMipLevel:0,mipLevelCount:1,dimension:es.TwoD,baseArrayLayer:n}),u=l.createView({baseMipLevel:0,mipLevelCount:1,dimension:es.TwoD,baseArrayLayer:0}),d=this.device.createCommandEncoder({}),f=(p,_,g)=>{const m=p.getBindGroupLayout(0),x=this.device.createBindGroup({layout:m,entries:[{binding:0,resource:this.flipYSampler},{binding:1,resource:_}]}),v=d.beginRenderPass({colorAttachments:[{view:g,loadOp:gn.Clear,storeOp:Bn.Store,clearValue:[0,0,0,0]}]});v.setPipeline(p),v.setBindGroup(0,x),v.draw(4,1,0,0),v.end()};f(a,h,u),f(c,u,h),this.device.queue.submit([d.finish()]),l.destroy()}generateMipmaps(t,e,n=0){const i=this.get(t);i.useCount===void 0&&(i.useCount=0,i.layers=[]);const r=i.layers[n]||this._mipmapCreateBundles(t,e,n),o=this.device.createCommandEncoder({});this._mipmapRunBundles(o,r),this.device.queue.submit([o.finish()]),i.useCount!==0&&(i.layers[n]=r),i.useCount++}_mipmapCreateBundles(t,e,n){const i=this.getTransferPipeline(e.format),r=i.getBindGroupLayout(0);let o=t.createView({baseMipLevel:0,mipLevelCount:1,dimension:es.TwoD,baseArrayLayer:n});const a=[];for(let c=1;c<e.mipLevelCount;c++){const l=this.device.createBindGroup({layout:r,entries:[{binding:0,resource:this.mipmapSampler},{binding:1,resource:o}]}),h=t.createView({baseMipLevel:c,mipLevelCount:1,dimension:es.TwoD,baseArrayLayer:n}),u={colorAttachments:[{view:h,loadOp:gn.Clear,storeOp:Bn.Store,clearValue:[0,0,0,0]}]},d=this.device.createRenderBundleEncoder({colorFormats:[e.format]});d.setPipeline(i),d.setBindGroup(0,l),d.draw(4,1,0,0),a.push({renderBundles:[d.finish()],passDescriptor:u}),o=h}return a}_mipmapRunBundles(t,e){const n=e.length;for(let i=0;i<n;i++){const r=e[i],o=t.beginRenderPass(r.passDescriptor);o.executeBundles(r.renderBundles),o.end()}}}const GK={[ZR]:"never",[Db]:"less",[KR]:"equal",[QR]:"less-equal",[JR]:"greater",[eN]:"greater-equal",[nN]:"always",[tN]:"not-equal"},HK=[0,1,3,2,4,5];class $K{constructor(t){this.backend=t,this._passUtils=null,this.defaultTexture={},this.defaultCubeTexture={},this.defaultVideoFrame=null,this.colorBuffer=null,this.depthTexture=new Fh,this.depthTexture.name="depthBuffer"}createSampler(t){const e=this.backend,n=e.device,i=e.get(t),r={addressModeU:this._convertAddressMode(t.wrapS),addressModeV:this._convertAddressMode(t.wrapT),addressModeW:this._convertAddressMode(t.wrapR),magFilter:this._convertFilterMode(t.magFilter),minFilter:this._convertFilterMode(t.minFilter),mipmapFilter:this._convertFilterMode(t.minFilter),maxAnisotropy:1};r.magFilter===Wa.Linear&&r.minFilter===Wa.Linear&&r.mipmapFilter===Wa.Linear&&(r.maxAnisotropy=t.anisotropy),t.isDepthTexture&&t.compareFunction!==null&&(r.compare=GK[t.compareFunction]),i.sampler=n.createSampler(r)}createDefaultTexture(t){let e;const n=rv(t);t.isCubeTexture?e=this._getDefaultCubeTextureGPU(n):t.isVideoTexture?this.backend.get(t).externalTexture=this._getDefaultVideoFrame():e=this._getDefaultTextureGPU(n),this.backend.get(t).texture=e}createTexture(t,e={}){const n=this.backend,i=n.get(t);if(i.initialized)throw new Error("WebGPUTextureUtils: Texture already initialized.");e.needsMipmaps===void 0&&(e.needsMipmaps=!1),e.levels===void 0&&(e.levels=1),e.depth===void 0&&(e.depth=1);const{width:r,height:o,depth:a,levels:c}=e;t.isFramebufferTexture&&(e.renderTarget?e.format=this.backend.utils.getCurrentColorFormat(e.renderTarget):e.format=this.backend.utils.getPreferredCanvasFormat());const l=this._getDimension(t),h=t.internalFormat||e.format||rv(t,n.device);i.format=h;let u=e.sampleCount!==void 0?e.sampleCount:1;u=n.utils.getSampleCount(u);const d=t.isRenderTargetTexture&&!t.isMultisampleRenderTargetTexture?1:u;let f=GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.COPY_SRC;t.isStorageTexture===!0&&(f|=GPUTextureUsage.STORAGE_BINDING),t.isCompressedTexture!==!0&&t.isCompressedArrayTexture!==!0&&(f|=GPUTextureUsage.RENDER_ATTACHMENT);const p={label:t.name,size:{width:r,height:o,depthOrArrayLayers:a},mipLevelCount:c,sampleCount:d,dimension:l,format:h,usage:f};if(t.isVideoTexture){const _=t.source.data,g=new VideoFrame(_);p.size.width=g.displayWidth,p.size.height=g.displayHeight,g.close(),i.externalTexture=_}else{if(h===void 0)return console.warn("WebGPURenderer: Texture format not supported."),this.createDefaultTexture(t);i.texture=n.device.createTexture(p)}if(t.isRenderTargetTexture&&u>1&&!t.isMultisampleRenderTargetTexture){const _=Object.assign({},p);_.label=_.label+"-msaa",_.sampleCount=u,i.msaaTexture=n.device.createTexture(_)}i.initialized=!0,i.textureDescriptorGPU=p}destroyTexture(t){const e=this.backend,n=e.get(t);n.texture.destroy(),n.msaaTexture!==void 0&&n.msaaTexture.destroy(),e.delete(t)}destroySampler(t){const n=this.backend.get(t);delete n.sampler}generateMipmaps(t){const e=this.backend.get(t);if(t.isCubeTexture)for(let n=0;n<6;n++)this._generateMipmaps(e.texture,e.textureDescriptorGPU,n);else{const n=t.image.depth||1;for(let i=0;i<n;i++)this._generateMipmaps(e.texture,e.textureDescriptorGPU,i)}}getColorBuffer(){this.colorBuffer&&this.colorBuffer.destroy();const t=this.backend,{width:e,height:n}=t.getDrawingBufferSize();return this.colorBuffer=t.device.createTexture({label:"colorBuffer",size:{width:e,height:n,depthOrArrayLayers:1},sampleCount:t.utils.getSampleCount(t.renderer.samples),format:t.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC}),this.colorBuffer}getDepthBuffer(t=!0,e=!1){const n=this.backend,{width:i,height:r}=n.getDrawingBufferSize(),o=this.depthTexture,a=n.get(o).texture;let c,l;if(e?(c=dh,l=Od):t&&(c=Ja,l=Un),a!==void 0){if(o.image.width===i&&o.image.height===r&&o.format===c&&o.type===l)return a;this.destroyTexture(o)}return o.name="depthBuffer",o.format=c,o.type=l,o.image.width=i,o.image.height=r,this.createTexture(o,{sampleCount:n.utils.getSampleCount(n.renderer.samples),width:i,height:r}),n.get(o).texture}updateTexture(t,e){const n=this.backend.get(t),{textureDescriptorGPU:i}=n;if(!(t.isRenderTargetTexture||i===void 0)){if(t.isDataTexture)this._copyBufferToTexture(e.image,n.texture,i,0,t.flipY);else if(t.isDataArrayTexture||t.isData3DTexture)for(let r=0;r<e.image.depth;r++)this._copyBufferToTexture(e.image,n.texture,i,r,t.flipY,r);else if(t.isCompressedTexture||t.isCompressedArrayTexture)this._copyCompressedBufferToTexture(t.mipmaps,n.texture,i);else if(t.isCubeTexture)this._copyCubeMapToTexture(e.images,n.texture,i,t.flipY);else if(t.isVideoTexture){const r=t.source.data;n.externalTexture=r}else this._copyImageToTexture(e.image,n.texture,i,0,t.flipY);n.version=t.version,t.onUpdate&&t.onUpdate(t)}}async copyTextureToBuffer(t,e,n,i,r,o){const a=this.backend.device,c=this.backend.get(t),l=c.texture,h=c.textureDescriptorGPU.format,u=this._getBytesPerTexel(h);let d=i*u;d=Math.ceil(d/256)*256;const f=a.createBuffer({size:i*r*u,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),p=a.createCommandEncoder();p.copyTextureToBuffer({texture:l,origin:{x:e,y:n,z:o}},{buffer:f,bytesPerRow:d},{width:i,height:r});const _=this._getTypedArrayType(h);a.queue.submit([p.finish()]),await f.mapAsync(GPUMapMode.READ);const g=f.getMappedRange();return new _(g)}_isEnvironmentTexture(t){const e=t.mapping;return e===Id||e===Fd||e===dc||e===uh}_getDefaultTextureGPU(t){let e=this.defaultTexture[t];if(e===void 0){const n=new pi;n.minFilter=ti,n.magFilter=ti,this.createTexture(n,{width:1,height:1,format:t}),this.defaultTexture[t]=e=n}return this.backend.get(e).texture}_getDefaultCubeTextureGPU(t){let e=this.defaultTexture[t];if(e===void 0){const n=new Ob;n.minFilter=ti,n.magFilter=ti,this.createTexture(n,{width:1,height:1,depth:6}),this.defaultCubeTexture[t]=e=n}return this.backend.get(e).texture}_getDefaultVideoFrame(){let t=this.defaultVideoFrame;if(t===null){const e={timestamp:0,codedWidth:1,codedHeight:1,format:"RGBA"};this.defaultVideoFrame=t=new VideoFrame(new Uint8Array([0,0,0,255]),e)}return t}_copyCubeMapToTexture(t,e,n,i){for(let r=0;r<6;r++){const o=t[r],a=i===!0?HK[r]:r;o.isDataTexture?this._copyBufferToTexture(o.image,e,n,a,i):this._copyImageToTexture(o,e,n,a,i)}}_copyImageToTexture(t,e,n,i,r){this.backend.device.queue.copyExternalImageToTexture({source:t},{texture:e,mipLevel:0,origin:{x:0,y:0,z:i}},{width:t.width,height:t.height,depthOrArrayLayers:1}),r===!0&&this._flipY(e,n,i)}_getPassUtils(){let t=this._passUtils;return t===null&&(this._passUtils=t=new VK(this.backend.device)),t}_generateMipmaps(t,e,n=0){this._getPassUtils().generateMipmaps(t,e,n)}_flipY(t,e,n=0){this._getPassUtils().flipY(t,e,n)}_copyBufferToTexture(t,e,n,i,r,o=0){const a=this.backend.device,c=t.data,l=this._getBytesPerTexel(n.format),h=t.width*l;a.queue.writeTexture({texture:e,mipLevel:0,origin:{x:0,y:0,z:i}},c,{offset:t.width*t.height*l*o,bytesPerRow:h},{width:t.width,height:t.height,depthOrArrayLayers:1}),r===!0&&this._flipY(e,n,i)}_copyCompressedBufferToTexture(t,e,n){const i=this.backend.device,r=this._getBlockData(n.format),o=n.size.depthOrArrayLayers>1;for(let a=0;a<t.length;a++){const c=t[a],l=c.width,h=c.height,u=o?n.size.depthOrArrayLayers:1,d=Math.ceil(l/r.width)*r.byteLength,f=d*Math.ceil(h/r.height);for(let p=0;p<u;p++)i.queue.writeTexture({texture:e,mipLevel:a,origin:{x:0,y:0,z:p}},c.data,{offset:p*f,bytesPerRow:d,rowsPerImage:Math.ceil(h/r.height)},{width:Math.ceil(l/r.width)*r.width,height:Math.ceil(h/r.height)*r.height,depthOrArrayLayers:1})}}_getBlockData(t){if(t===L.BC1RGBAUnorm||t===L.BC1RGBAUnormSRGB)return{byteLength:8,width:4,height:4};if(t===L.BC2RGBAUnorm||t===L.BC2RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(t===L.BC3RGBAUnorm||t===L.BC3RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(t===L.BC4RUnorm||t===L.BC4RSNorm)return{byteLength:8,width:4,height:4};if(t===L.BC5RGUnorm||t===L.BC5RGSnorm)return{byteLength:16,width:4,height:4};if(t===L.BC6HRGBUFloat||t===L.BC6HRGBFloat)return{byteLength:16,width:4,height:4};if(t===L.BC7RGBAUnorm||t===L.BC7RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(t===L.ETC2RGB8Unorm||t===L.ETC2RGB8UnormSRGB)return{byteLength:8,width:4,height:4};if(t===L.ETC2RGB8A1Unorm||t===L.ETC2RGB8A1UnormSRGB)return{byteLength:8,width:4,height:4};if(t===L.ETC2RGBA8Unorm||t===L.ETC2RGBA8UnormSRGB)return{byteLength:16,width:4,height:4};if(t===L.EACR11Unorm)return{byteLength:8,width:4,height:4};if(t===L.EACR11Snorm)return{byteLength:8,width:4,height:4};if(t===L.EACRG11Unorm)return{byteLength:16,width:4,height:4};if(t===L.EACRG11Snorm)return{byteLength:16,width:4,height:4};if(t===L.ASTC4x4Unorm||t===L.ASTC4x4UnormSRGB)return{byteLength:16,width:4,height:4};if(t===L.ASTC5x4Unorm||t===L.ASTC5x4UnormSRGB)return{byteLength:16,width:5,height:4};if(t===L.ASTC5x5Unorm||t===L.ASTC5x5UnormSRGB)return{byteLength:16,width:5,height:5};if(t===L.ASTC6x5Unorm||t===L.ASTC6x5UnormSRGB)return{byteLength:16,width:6,height:5};if(t===L.ASTC6x6Unorm||t===L.ASTC6x6UnormSRGB)return{byteLength:16,width:6,height:6};if(t===L.ASTC8x5Unorm||t===L.ASTC8x5UnormSRGB)return{byteLength:16,width:8,height:5};if(t===L.ASTC8x6Unorm||t===L.ASTC8x6UnormSRGB)return{byteLength:16,width:8,height:6};if(t===L.ASTC8x8Unorm||t===L.ASTC8x8UnormSRGB)return{byteLength:16,width:8,height:8};if(t===L.ASTC10x5Unorm||t===L.ASTC10x5UnormSRGB)return{byteLength:16,width:10,height:5};if(t===L.ASTC10x6Unorm||t===L.ASTC10x6UnormSRGB)return{byteLength:16,width:10,height:6};if(t===L.ASTC10x8Unorm||t===L.ASTC10x8UnormSRGB)return{byteLength:16,width:10,height:8};if(t===L.ASTC10x10Unorm||t===L.ASTC10x10UnormSRGB)return{byteLength:16,width:10,height:10};if(t===L.ASTC12x10Unorm||t===L.ASTC12x10UnormSRGB)return{byteLength:16,width:12,height:10};if(t===L.ASTC12x12Unorm||t===L.ASTC12x12UnormSRGB)return{byteLength:16,width:12,height:12}}_convertAddressMode(t){let e=L0.ClampToEdge;return t===Im?e=L0.Repeat:t===Fm&&(e=L0.MirrorRepeat),e}_convertFilterMode(t){let e=Wa.Linear;return(t===ti||t===Mx||t===Gl)&&(e=Wa.Nearest),e}_getBytesPerTexel(t){if(t===L.R8Unorm||t===L.R8Snorm||t===L.R8Uint||t===L.R8Sint)return 1;if(t===L.R16Uint||t===L.R16Sint||t===L.R16Float||t===L.RG8Unorm||t===L.RG8Snorm||t===L.RG8Uint||t===L.RG8Sint)return 2;if(t===L.R32Uint||t===L.R32Sint||t===L.R32Float||t===L.RG16Uint||t===L.RG16Sint||t===L.RG16Float||t===L.RGBA8Unorm||t===L.RGBA8UnormSRGB||t===L.RGBA8Snorm||t===L.RGBA8Uint||t===L.RGBA8Sint||t===L.BGRA8Unorm||t===L.BGRA8UnormSRGB||t===L.RGB9E5UFloat||t===L.RGB10A2Unorm||t===L.RG11B10UFloat||t===L.Depth32Float||t===L.Depth24Plus||t===L.Depth24PlusStencil8||t===L.Depth32FloatStencil8)return 4;if(t===L.RG32Uint||t===L.RG32Sint||t===L.RG32Float||t===L.RGBA16Uint||t===L.RGBA16Sint||t===L.RGBA16Float)return 8;if(t===L.RGBA32Uint||t===L.RGBA32Sint||t===L.RGBA32Float)return 16}_getTypedArrayType(t){if(t===L.R8Uint)return Uint8Array;if(t===L.R8Sint)return Int8Array;if(t===L.R8Unorm)return Uint8Array;if(t===L.R8Snorm)return Int8Array;if(t===L.RG8Uint)return Uint8Array;if(t===L.RG8Sint)return Int8Array;if(t===L.RG8Unorm)return Uint8Array;if(t===L.RG8Snorm)return Int8Array;if(t===L.RGBA8Uint)return Uint8Array;if(t===L.RGBA8Sint)return Int8Array;if(t===L.RGBA8Unorm)return Uint8Array;if(t===L.RGBA8Snorm)return Int8Array;if(t===L.R16Uint)return Uint16Array;if(t===L.R16Sint)return Int16Array;if(t===L.RG16Uint)return Uint16Array;if(t===L.RG16Sint)return Int16Array;if(t===L.RGBA16Uint)return Uint16Array;if(t===L.RGBA16Sint)return Int16Array;if(t===L.R16Float||t===L.RG16Float||t===L.RGBA16Float)return Uint16Array;if(t===L.R32Uint)return Uint32Array;if(t===L.R32Sint)return Int32Array;if(t===L.R32Float)return Float32Array;if(t===L.RG32Uint)return Uint32Array;if(t===L.RG32Sint)return Int32Array;if(t===L.RG32Float)return Float32Array;if(t===L.RGBA32Uint)return Uint32Array;if(t===L.RGBA32Sint)return Int32Array;if(t===L.RGBA32Float)return Float32Array;if(t===L.BGRA8Unorm||t===L.BGRA8UnormSRGB)return Uint8Array;if(t===L.RGB10A2Unorm||t===L.RGB9E5UFloat||t===L.RG11B10UFloat)return Uint32Array;if(t===L.Depth32Float)return Float32Array;if(t===L.Depth24Plus||t===L.Depth24PlusStencil8)return Uint32Array;if(t===L.Depth32FloatStencil8)return Float32Array}_getDimension(t){let e;return t.isData3DTexture?e=L1.ThreeD:e=L1.TwoD,e}}function rv(s,t=null){const e=s.format,n=s.type,i=s.colorSpace;let r;if(s.isCompressedTexture===!0||s.isCompressedArrayTexture===!0)switch(e){case Gp:r=i===Yt?L.BC1RGBAUnormSRGB:L.BC1RGBAUnorm;break;case Hp:r=i===Yt?L.BC2RGBAUnormSRGB:L.BC2RGBAUnorm;break;case $p:r=i===Yt?L.BC3RGBAUnormSRGB:L.BC3RGBAUnorm;break;case wx:r=i===Yt?L.ETC2RGB8UnormSRGB:L.ETC2RGB8Unorm;break;case Ax:r=i===Yt?L.ETC2RGBA8UnormSRGB:L.ETC2RGBA8Unorm;break;case Ex:r=i===Yt?L.ASTC4x4UnormSRGB:L.ASTC4x4Unorm;break;case Cx:r=i===Yt?L.ASTC5x4UnormSRGB:L.ASTC5x4Unorm;break;case Rx:r=i===Yt?L.ASTC5x5UnormSRGB:L.ASTC5x5Unorm;break;case Nx:r=i===Yt?L.ASTC6x5UnormSRGB:L.ASTC6x5Unorm;break;case Px:r=i===Yt?L.ASTC6x6UnormSRGB:L.ASTC6x6Unorm;break;case Dx:r=i===Yt?L.ASTC8x5UnormSRGB:L.ASTC8x5Unorm;break;case Ix:r=i===Yt?L.ASTC8x6UnormSRGB:L.ASTC8x6Unorm;break;case Fx:r=i===Yt?L.ASTC8x8UnormSRGB:L.ASTC8x8Unorm;break;case Ox:r=i===Yt?L.ASTC10x5UnormSRGB:L.ASTC10x5Unorm;break;case Lx:r=i===Yt?L.ASTC10x6UnormSRGB:L.ASTC10x6Unorm;break;case Bx:r=i===Yt?L.ASTC10x8UnormSRGB:L.ASTC10x8Unorm;break;case Ux:r=i===Yt?L.ASTC10x10UnormSRGB:L.ASTC10x10Unorm;break;case kx:r=i===Yt?L.ASTC12x10UnormSRGB:L.ASTC12x10Unorm;break;case zx:r=i===Yt?L.ASTC12x12UnormSRGB:L.ASTC12x12Unorm;break;default:console.error("WebGPURenderer: Unsupported texture format.",e)}else switch(e){case Ph:switch(n){case Du:r=L.RGBA8Snorm;break;case Iu:r=L.RGBA16Sint;break;case Al:r=L.RGBA16Uint;break;case Un:r=L.RGBA32Uint;break;case li:r=L.RGBA32Sint;break;case na:r=i===Yt?L.RGBA8UnormSRGB:L.RGBA8Unorm;break;case to:r=L.RGBA16Float;break;case ji:r=L.RGBA32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAFormat.",n)}break;case Eb:switch(n){case XR:r=L.RGB9E5UFloat;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBFormat.",n)}break;case Cb:switch(n){case Du:r=L.R8Snorm;break;case Iu:r=L.R16Sint;break;case Al:r=L.R16Uint;break;case Un:r=L.R32Uint;break;case li:r=L.R32Sint;break;case na:r=L.R8Unorm;break;case to:r=L.R16Float;break;case ji:r=L.R32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RedFormat.",n)}break;case id:switch(n){case Du:r=L.RG8Snorm;break;case Iu:r=L.RG16Sint;break;case Al:r=L.RG16Uint;break;case Un:r=L.RG32Uint;break;case li:r=L.RG32Sint;break;case na:r=L.RG8Unorm;break;case to:r=L.RG16Float;break;case ji:r=L.RG32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGFormat.",n)}break;case Ja:switch(n){case Al:r=L.Depth16Unorm;break;case Un:r=L.Depth24Plus;break;case ji:r=L.Depth32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthFormat.",n)}break;case dh:switch(n){case Od:r=L.Depth24PlusStencil8;break;case ji:t&&t.features.has(iv.Depth32FloatStencil8)===!1&&console.error('WebGPURenderer: Depth textures with DepthStencilFormat + FloatType can only be used with the "depth32float-stencil8" GPU feature.'),r=L.Depth32FloatStencil8;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthStencilFormat.",n)}break;case Rb:switch(n){case li:r=L.R32Sint;break;case Un:r=L.R32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RedIntegerFormat.",n)}break;case Nb:switch(n){case li:r=L.RG32Sint;break;case Un:r=L.RG32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGIntegerFormat.",n)}break;case Pb:switch(n){case li:r=L.RGBA32Sint;break;case Un:r=L.RGBA32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAIntegerFormat.",n)}break;default:console.error("WebGPURenderer: Unsupported texture format.",e)}return r}const WK=/^[fn]*\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)\s*[\-\>]*\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/i,qK=/([a-z_0-9]+)\s*:\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/ig,iA={f32:"float",i32:"int",u32:"uint",bool:"bool","vec2<f32>":"vec2","vec2<i32>":"ivec2","vec2<u32>":"uvec2","vec2<bool>":"bvec2",vec2f:"vec2",vec2i:"ivec2",vec2u:"uvec2",vec2b:"bvec2","vec3<f32>":"vec3","vec3<i32>":"ivec3","vec3<u32>":"uvec3","vec3<bool>":"bvec3",vec3f:"vec3",vec3i:"ivec3",vec3u:"uvec3",vec3b:"bvec3","vec4<f32>":"vec4","vec4<i32>":"ivec4","vec4<u32>":"uvec4","vec4<bool>":"bvec4",vec4f:"vec4",vec4i:"ivec4",vec4u:"uvec4",vec4b:"bvec4","mat2x2<f32>":"mat2",mat2x2f:"mat2","mat3x3<f32>":"mat3",mat3x3f:"mat3","mat4x4<f32>":"mat4",mat4x4f:"mat4",sampler:"sampler",texture_1d:"texture",texture_2d:"texture",texture_2d_array:"texture",texture_multisampled_2d:"cubeTexture",texture_depth_2d:"depthTexture",texture_3d:"texture3D",texture_cube:"cubeTexture",texture_cube_array:"cubeTexture",texture_storage_1d:"storageTexture",texture_storage_2d:"storageTexture",texture_storage_2d_array:"storageTexture",texture_storage_3d:"storageTexture"},jK=s=>{s=s.trim();const t=s.match(WK);if(t!==null&&t.length===4){const e=t[2],n=[];let i=null;for(;(i=qK.exec(e))!==null;)n.push({name:i[1],type:i[2]});const r=[];for(let h=0;h<n.length;h++){const{name:u,type:d}=n[h];let f=d;f.startsWith("ptr")?f="pointer":(f.startsWith("texture")&&(f=d.split("<")[0]),f=iA[f]),r.push(new dS(f,u))}const o=s.substring(t[0].length),a=t[3]||"void",c=t[1]!==void 0?t[1]:"";return{type:iA[a]||a,inputs:r,name:c,inputsCode:e,blockCode:o,outputType:a}}else throw new Error("FunctionNode: Function is not a WGSL code.")};class XK extends fS{constructor(t){const{type:e,inputs:n,name:i,inputsCode:r,blockCode:o,outputType:a}=jK(t);super(e,n,i),this.inputsCode=r,this.blockCode=o,this.outputType=a}getCode(t=this.name){const e=this.outputType!=="void"?"-> "+this.outputType:"";return`fn ${t} ( ${this.inputsCode.trim()} ) ${e}`+this.blockCode}}class YK extends X2{parseFunction(t){return new XK(t)}}const ml=self.GPUShaderStage,vp={vertex:ml?ml.VERTEX:1,fragment:ml?ml.FRAGMENT:2,compute:ml?ml.COMPUTE:4},sA={instance:!0,swizzleAssign:!1,storageBuffer:!0},ZK={"^^":"tsl_xor"},KK={float:"f32",int:"i32",uint:"u32",bool:"bool",color:"vec3<f32>",vec2:"vec2<f32>",ivec2:"vec2<i32>",uvec2:"vec2<u32>",bvec2:"vec2<bool>",vec3:"vec3<f32>",ivec3:"vec3<i32>",uvec3:"vec3<u32>",bvec3:"vec3<bool>",vec4:"vec4<f32>",ivec4:"vec4<i32>",uvec4:"vec4<u32>",bvec4:"vec4<bool>",mat2:"mat2x2<f32>",mat3:"mat3x3<f32>",mat4:"mat4x4<f32>"},Fr={tsl_xor:new Qn("fn tsl_xor( a : bool, b : bool ) -> bool { return ( a || b ) && !( a && b ); }"),mod_float:new Qn("fn tsl_mod_float( x : f32, y : f32 ) -> f32 { return x - y * floor( x / y ); }"),mod_vec2:new Qn("fn tsl_mod_vec2( x : vec2f, y : vec2f ) -> vec2f { return x - y * floor( x / y ); }"),mod_vec3:new Qn("fn tsl_mod_vec3( x : vec3f, y : vec3f ) -> vec3f { return x - y * floor( x / y ); }"),mod_vec4:new Qn("fn tsl_mod_vec4( x : vec4f, y : vec4f ) -> vec4f { return x - y * floor( x / y ); }"),equals_bool:new Qn("fn tsl_equals_bool( a : bool, b : bool ) -> bool { return a == b; }"),equals_bvec2:new Qn("fn tsl_equals_bvec2( a : vec2f, b : vec2f ) -> vec2<bool> { return vec2<bool>( a.x == b.x, a.y == b.y ); }"),equals_bvec3:new Qn("fn tsl_equals_bvec3( a : vec3f, b : vec3f ) -> vec3<bool> { return vec3<bool>( a.x == b.x, a.y == b.y, a.z == b.z ); }"),equals_bvec4:new Qn("fn tsl_equals_bvec4( a : vec4f, b : vec4f ) -> vec4<bool> { return vec4<bool>( a.x == b.x, a.y == b.y, a.z == b.z, a.w == b.w ); }"),repeatWrapping:new Qn(`
fn tsl_repeatWrapping( uv : vec2<f32>, dimension : vec2<u32> ) -> vec2<u32> {

	let uvScaled = vec2<u32>( uv * vec2<f32>( dimension ) );

	return ( ( uvScaled % dimension ) + dimension ) % dimension;

}
`),biquadraticTexture:new Qn(`
fn tsl_biquadraticTexture( map : texture_2d<f32>, coord : vec2f, level : i32 ) -> vec4f {

	let iRes = vec2i( textureDimensions( map, level ) );
	let res = vec2f( iRes );

	let uvScaled = coord * res;
	let uvWrapping = ( ( uvScaled % res ) + res ) % res;

	// https://www.shadertoy.com/view/WtyXRy

	let uv = uvWrapping - 0.5;
	let iuv = floor( uv );
	let f = fract( uv );

	let rg1 = textureLoad( map, vec2i( iuv + vec2( 0.5, 0.5 ) ) % iRes, level );
	let rg2 = textureLoad( map, vec2i( iuv + vec2( 1.5, 0.5 ) ) % iRes, level );
	let rg3 = textureLoad( map, vec2i( iuv + vec2( 0.5, 1.5 ) ) % iRes, level );
	let rg4 = textureLoad( map, vec2i( iuv + vec2( 1.5, 1.5 ) ) % iRes, level );

	return mix( mix( rg1, rg2, f.x ), mix( rg3, rg4, f.x ), f.y );

}
`)},wu={dFdx:"dpdx",dFdy:"- dpdy",mod_float:"tsl_mod_float",mod_vec2:"tsl_mod_vec2",mod_vec3:"tsl_mod_vec3",mod_vec4:"tsl_mod_vec4",equals_bool:"tsl_equals_bool",equals_bvec2:"tsl_equals_bvec2",equals_bvec3:"tsl_equals_bvec3",equals_bvec4:"tsl_equals_bvec4",inversesqrt:"inverseSqrt",bitcast:"bitcast<f32>"};/Windows/g.test(navigator.userAgent)&&(Fr.pow_float=new Qn("fn tsl_pow_float( a : f32, b : f32 ) -> f32 { return select( -pow( -a, b ), pow( a, b ), a > 0.0 ); }"),Fr.pow_vec2=new Qn("fn tsl_pow_vec2( a : vec2f, b : vec2f ) -> vec2f { return vec2f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ) ); }",[Fr.pow_float]),Fr.pow_vec3=new Qn("fn tsl_pow_vec3( a : vec3f, b : vec3f ) -> vec3f { return vec3f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ) ); }",[Fr.pow_float]),Fr.pow_vec4=new Qn("fn tsl_pow_vec4( a : vec4f, b : vec4f ) -> vec4f { return vec4f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ), tsl_pow_float( a.w, b.w ) ); }",[Fr.pow_float]),wu.pow_float="tsl_pow_float",wu.pow_vec2="tsl_pow_vec2",wu.pow_vec3="tsl_pow_vec3",wu.pow_vec4="tsl_pow_vec4");let iP="";/Firefox|Deno/g.test(navigator.userAgent)!==!0&&(iP+=`diagnostic( off, derivative_uniformity );
`);class QK extends q2{constructor(t,e){super(t,e,new YK),this.uniformGroups={},this.builtins={},this.directives={},this.scopedArrays=new Map}needsToWorkingColorSpace(t){return t.isVideoTexture===!0&&t.colorSpace!==fc}_generateTextureSample(t,e,n,i,r=this.shaderStage){return r==="fragment"?i?`textureSample( ${e}, ${e}_sampler, ${n}, ${i} )`:`textureSample( ${e}, ${e}_sampler, ${n} )`:this.isFilteredTexture(t)?this.generateFilteredTexture(t,e,n):this.generateTextureLod(t,e,n,"0")}_generateVideoSample(t,e,n=this.shaderStage){if(n==="fragment")return`textureSampleBaseClampToEdge( ${t}, ${t}_sampler, vec2<f32>( ${e}.x, 1.0 - ${e}.y ) )`;console.error(`WebGPURenderer: THREE.VideoTexture does not support ${n} shader.`)}_generateTextureSampleLevel(t,e,n,i,r,o=this.shaderStage){return o==="fragment"&&this.isUnfilterable(t)===!1?`textureSampleLevel( ${e}, ${e}_sampler, ${n}, ${i} )`:this.isFilteredTexture(t)?this.generateFilteredTexture(t,e,n,i):this.generateTextureLod(t,e,n,i)}generateFilteredTexture(t,e,n,i="0"){return this._include("biquadraticTexture"),`tsl_biquadraticTexture( ${e}, ${n}, i32( ${i} ) )`}generateTextureLod(t,e,n,i="0"){this._include("repeatWrapping");const r=t.isMultisampleRenderTargetTexture===!0?`textureDimensions( ${e} )`:`textureDimensions( ${e}, 0 )`;return`textureLoad( ${e}, tsl_repeatWrapping( ${n}, ${r} ), i32( ${i} ) )`}generateTextureLoad(t,e,n,i,r="0u"){return i?`textureLoad( ${e}, ${n}, ${i}, ${r} )`:`textureLoad( ${e}, ${n}, ${r} )`}generateTextureStore(t,e,n,i){return`textureStore( ${e}, ${n}, ${i} )`}isUnfilterable(t){return this.getComponentTypeFromTexture(t)!=="float"||!this.isAvailable("float32Filterable")&&t.isDataTexture===!0&&t.type===ji||t.isMultisampleRenderTargetTexture===!0}generateTexture(t,e,n,i,r=this.shaderStage){let o=null;return t.isVideoTexture===!0?o=this._generateVideoSample(e,n,r):this.isUnfilterable(t)?o=this.generateTextureLod(t,e,n,"0",i,r):o=this._generateTextureSample(t,e,n,i,r),o}generateTextureGrad(t,e,n,i,r,o=this.shaderStage){if(o==="fragment")return`textureSampleGrad( ${e}, ${e}_sampler, ${n},  ${i[0]}, ${i[1]} )`;console.error(`WebGPURenderer: THREE.TextureNode.gradient() does not support ${o} shader.`)}generateTextureCompare(t,e,n,i,r,o=this.shaderStage){if(o==="fragment")return`textureSampleCompare( ${e}, ${e}_sampler, ${n}, ${i} )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${o} shader.`)}generateTextureLevel(t,e,n,i,r,o=this.shaderStage){let a=null;return t.isVideoTexture===!0?a=this._generateVideoSample(e,n,o):a=this._generateTextureSampleLevel(t,e,n,i,r,o),a}generateTextureBias(t,e,n,i,r,o=this.shaderStage){if(o==="fragment")return`textureSampleBias( ${e}, ${e}_sampler, ${n}, ${i} )`;console.error(`WebGPURenderer: THREE.TextureNode.biasNode does not support ${o} shader.`)}getPropertyName(t,e=this.shaderStage){if(t.isNodeVarying===!0&&t.needsInterpolation===!0){if(e==="vertex")return`varyings.${t.name}`}else if(t.isNodeUniform===!0){const n=t.name,i=t.type;return i==="texture"||i==="cubeTexture"||i==="storageTexture"||i==="texture3D"?n:i==="buffer"||i==="storageBuffer"||i==="indirectStorageBuffer"?`NodeBuffer_${t.id}.${n}`:t.groupNode.name+"."+n}return super.getPropertyName(t)}getOutputStructName(){return"output"}_getUniformGroupCount(t){return Object.keys(this.uniforms[t]).length}getFunctionOperator(t){const e=ZK[t];return e!==void 0?(this._include(e),e):null}getStorageAccess(t){if(t.isStorageTextureNode)switch(t.access){case O1.ReadOnly:return"read";case O1.WriteOnly:return"write";default:return"read_write"}else switch(t.access){case nv.Storage:return"read_write";case nv.ReadOnlyStorage:return"read";default:return"write"}}getUniformFromNode(t,e,n,i=null){const r=super.getUniformFromNode(t,e,n,i),o=this.getDataFromNode(t,n,this.globalCache);if(o.uniformGPU===void 0){let a;const c=t.groupNode,l=c.name,h=this.getBindGroupArray(l,n);if(e==="texture"||e==="cubeTexture"||e==="storageTexture"||e==="texture3D"){let u=null;if(e==="texture"||e==="storageTexture"?u=new Pg(r.name,r.node,c,t.access?t.access:null):e==="cubeTexture"?u=new tP(r.name,r.node,c,t.access?t.access:null):e==="texture3D"&&(u=new eP(r.name,r.node,c,t.access?t.access:null)),u.store=t.isStorageTextureNode===!0,u.setVisibility(vp[n]),n==="fragment"&&this.isUnfilterable(t.value)===!1&&u.store===!1){const d=new BK(`${r.name}_sampler`,r.node,c);d.setVisibility(vp[n]),h.push(d,u),a=[d,u]}else h.push(u),a=[u]}else if(e==="buffer"||e==="storageBuffer"||e==="indirectStorageBuffer"){const u=e==="buffer"?Q2:zK,d=new u(t,c);d.setVisibility(vp[n]),h.push(d),a=d}else{const u=this.uniformGroups[n]||(this.uniformGroups[n]={});let d=u[l];d===void 0&&(d=new J2(l,c),d.setVisibility(vp[n]),u[l]=d,h.push(d)),a=this.getNodeUniform(r,e),d.addUniform(a)}o.uniformGPU=a}return r}getBuiltin(t,e,n,i=this.shaderStage){const r=this.builtins[i]||(this.builtins[i]=new Map);return r.has(t)===!1&&r.set(t,{name:t,property:e,type:n}),e}hasBuiltin(t,e=this.shaderStage){return this.builtins[e]!==void 0&&this.builtins[e].has(t)}getVertexIndex(){return this.shaderStage==="vertex"?this.getBuiltin("vertex_index","vertexIndex","u32","attribute"):"vertexIndex"}buildFunctionCode(t){const e=t.layout,n=this.flowShaderNode(t),i=[];for(const o of e.inputs)i.push(o.name+" : "+this.getType(o.type));let r=`fn ${e.name}( ${i.join(", ")} ) -> ${this.getType(e.type)} {
${n.vars}
${n.code}
`;return n.result&&(r+=`	return ${n.result};
`),r+=`
}
`,r}getInstanceIndex(){return this.shaderStage==="vertex"?this.getBuiltin("instance_index","instanceIndex","u32","attribute"):"instanceIndex"}getInvocationLocalIndex(){return this.getBuiltin("local_invocation_index","invocationLocalIndex","u32","attribute")}getSubgroupSize(){return this.enableSubGroups(),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute")}getInvocationSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_invocation_id","invocationSubgroupIndex","u32","attribute")}getSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_id","subgroupIndex","u32","attribute")}getDrawIndex(){return null}getFrontFacing(){return this.getBuiltin("front_facing","isFront","bool")}getFragCoord(){return this.getBuiltin("position","fragCoord","vec4<f32>")+".xy"}getFragDepth(){return"output."+this.getBuiltin("frag_depth","depth","f32","output")}isFlipY(){return!1}enableDirective(t,e=this.shaderStage){(this.directives[e]||(this.directives[e]=new Set)).add(t)}getDirectives(t){const e=[],n=this.directives[t];if(n!==void 0)for(const i of n)e.push(`enable ${i};`);return e.join(`
`)}enableSubGroups(){this.enableDirective("subgroups")}enableSubgroupsF16(){this.enableDirective("subgroups-f16")}enableClipDistances(){this.enableDirective("clip_distances")}enableShaderF16(){this.enableDirective("f16")}enableDualSourceBlending(){this.enableDirective("dual_source_blending")}getBuiltins(t){const e=[],n=this.builtins[t];if(n!==void 0)for(const{name:i,property:r,type:o}of n.values())e.push(`@builtin( ${i} ) ${r} : ${o}`);return e.join(`,
	`)}getScopedArray(t,e,n,i){return this.scopedArrays.has(t)===!1&&this.scopedArrays.set(t,{name:t,scope:e,bufferType:n,bufferCount:i}),t}getScopedArrays(t){if(t!=="compute")return;const e=[];for(const{name:n,scope:i,bufferType:r,bufferCount:o}of this.scopedArrays.values()){const a=this.getType(r);e.push(`var<${i}> ${n}: array< ${a}, ${o} >;`)}return e.join(`
`)}getAttributes(t){const e=[];if(t==="compute"&&(this.getBuiltin("global_invocation_id","id","vec3<u32>","attribute"),this.getBuiltin("workgroup_id","workgroupId","vec3<u32>","attribute"),this.getBuiltin("local_invocation_id","localId","vec3<u32>","attribute"),this.getBuiltin("num_workgroups","numWorkgroups","vec3<u32>","attribute"),this.renderer.hasFeature("subgroups")&&(this.enableDirective("subgroups",t),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute"))),t==="vertex"||t==="compute"){const n=this.getBuiltins("attribute");n&&e.push(n);const i=this.getAttributesArray();for(let r=0,o=i.length;r<o;r++){const a=i[r],c=a.name,l=this.getType(a.type);e.push(`@location( ${r} ) ${c} : ${l}`)}}return e.join(`,
	`)}getStructMembers(t){const e=[],n=t.getMemberTypes();for(let r=0;r<n.length;r++){const o=n[r];e.push(`	@location( ${r} ) m${r} : ${o}<f32>`)}const i=this.getBuiltins("output");return i&&e.push("	"+i),e.join(`,
`)}getStructs(t){const e=[],n=this.structs[t];for(let i=0,r=n.length;i<r;i++){const o=n[i],a=o.name;let c=`struct ${a} {
`;c+=this.getStructMembers(o),c+=`
}`,e.push(c),e.push(`
var<private> output : ${a};

`)}return e.join(`

`)}getVar(t,e){return`var ${e} : ${this.getType(t)}`}getVars(t){const e=[],n=this.vars[t];if(n!==void 0)for(const i of n)e.push(`	${this.getVar(i.type,i.name)};`);return`
${e.join(`
`)}
`}getVaryings(t){const e=[];if(t==="vertex"&&this.getBuiltin("position","Vertex","vec4<f32>","vertex"),t==="vertex"||t==="fragment"){const r=this.varyings,o=this.vars[t];for(let a=0;a<r.length;a++){const c=r[a];if(c.needsInterpolation){let l=`@location( ${a} )`;/^(int|uint|ivec|uvec)/.test(c.type)&&(l+=" @interpolate( flat )"),e.push(`${l} ${c.name} : ${this.getType(c.type)}`)}else t==="vertex"&&o.includes(c)===!1&&o.push(c)}}const n=this.getBuiltins(t);n&&e.push(n);const i=e.join(`,
	`);return t==="vertex"?this._getWGSLStruct("VaryingsStruct","	"+i):i}getUniforms(t){const e=this.uniforms[t],n=[],i=[],r=[],o={};for(const c of e){const l=c.groupNode.name,h=this.bindingsIndexes[l];if(c.type==="texture"||c.type==="cubeTexture"||c.type==="storageTexture"||c.type==="texture3D"){const u=c.node.value;t==="fragment"&&this.isUnfilterable(u)===!1&&c.node.isStorageTextureNode!==!0&&(u.isDepthTexture===!0&&u.compareFunction!==null?n.push(`@binding( ${h.binding++} ) @group( ${h.group} ) var ${c.name}_sampler : sampler_comparison;`):n.push(`@binding( ${h.binding++} ) @group( ${h.group} ) var ${c.name}_sampler : sampler;`));let d,f="";if(u.isMultisampleRenderTargetTexture===!0&&(f="_multisampled"),u.isCubeTexture===!0)d="texture_cube<f32>";else if(u.isDataArrayTexture===!0||u.isCompressedArrayTexture===!0)d="texture_2d_array<f32>";else if(u.isDepthTexture===!0)d=`texture_depth${f}_2d`;else if(u.isVideoTexture===!0)d="texture_external";else if(u.isData3DTexture===!0)d="texture_3d<f32>";else if(c.node.isStorageTextureNode===!0){const p=rv(u),_=this.getStorageAccess(c.node);d=`texture_storage_2d<${p}, ${_}>`}else{const p=this.getComponentTypeFromTexture(u).charAt(0);d=`texture${f}_2d<${p}32>`}n.push(`@binding( ${h.binding++} ) @group( ${h.group} ) var ${c.name} : ${d};`)}else if(c.type==="buffer"||c.type==="storageBuffer"||c.type==="indirectStorageBuffer"){const u=c.node,d=this.getType(u.bufferType),f=u.bufferCount,p=f>0&&c.type==="buffer"?", "+f:"",_=u.isAtomic?`atomic<${d}>`:`${d}`,g=`	${c.name} : array< ${_}${p} >
`,m=u.isStorageBufferNode?`storage, ${this.getStorageAccess(u)}`:"uniform";i.push(this._getWGSLStructBinding("NodeBuffer_"+u.id,g,m,h.binding++,h.group))}else{const u=this.getType(this.getVectorType(c.type)),d=c.groupNode.name;(o[d]||(o[d]={index:h.binding++,id:h.group,snippets:[]})).snippets.push(`	${c.name} : ${u}`)}}for(const c in o){const l=o[c];r.push(this._getWGSLStructBinding(c,l.snippets.join(`,
`),"uniform",l.index,l.id))}let a=n.join(`
`);return a+=i.join(`
`),a+=r.join(`
`),a}buildCode(){const t=this.material!==null?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const e in t){const n=t[e];n.uniforms=this.getUniforms(e),n.attributes=this.getAttributes(e),n.varyings=this.getVaryings(e),n.structs=this.getStructs(e),n.vars=this.getVars(e),n.codes=this.getCodes(e),n.directives=this.getDirectives(e),n.scopedArrays=this.getScopedArrays(e);let i=`// code

`;i+=this.flowCode[e];const r=this.flowNodes[e],o=r[r.length-1],a=o.outputNode,c=a!==void 0&&a.isOutputStructNode===!0;for(const l of r){const h=this.getFlowData(l),u=l.name;if(u&&(i.length>0&&(i+=`
`),i+=`	// flow -> ${u}
	`),i+=`${h.code}
	`,l===o&&e!=="compute"){if(i+=`// result

	`,e==="vertex")i+=`varyings.Vertex = ${h.result};`;else if(e==="fragment")if(c)n.returnType=a.nodeType,i+=`return ${h.result};`;else{let d="	@location(0) color: vec4<f32>";const f=this.getBuiltins("output");f&&(d+=`,
	`+f),n.returnType="OutputStruct",n.structs+=this._getWGSLStruct("OutputStruct",d),n.structs+=`
var<private> output : OutputStruct;

`,i+=`output.color = ${h.result};

	return output;`}}}n.flow=i}this.material!==null?(this.vertexShader=this._getWGSLVertexCode(t.vertex),this.fragmentShader=this._getWGSLFragmentCode(t.fragment)):this.computeShader=this._getWGSLComputeCode(t.compute,(this.object.workgroupSize||[64]).join(", "))}getMethod(t,e=null){let n;return e!==null&&(n=this._getWGSLMethod(t+"_"+e)),n===void 0&&(n=this._getWGSLMethod(t)),n||t}getType(t){return KK[t]||t}isAvailable(t){let e=sA[t];return e===void 0&&(t==="float32Filterable"&&(e=this.renderer.hasFeature("float32-filterable")),sA[t]=e),e}_getWGSLMethod(t){return Fr[t]!==void 0&&this._include(t),wu[t]}_include(t){const e=Fr[t];return e.build(this),this.currentFunctionNode!==null&&this.currentFunctionNode.includes.push(e),e}_getWGSLVertexCode(t){return`${this.getSignature()}
// directives
${t.directives}

// uniforms
${t.uniforms}

// varyings
${t.varyings}
var<private> varyings : VaryingsStruct;

// codes
${t.codes}

@vertex
fn main( ${t.attributes} ) -> VaryingsStruct {

	// vars
	${t.vars}

	// flow
	${t.flow}

	return varyings;

}
`}_getWGSLFragmentCode(t){return`${this.getSignature()}
// global
${iP}

// uniforms
${t.uniforms}

// structs
${t.structs}

// codes
${t.codes}

@fragment
fn main( ${t.varyings} ) -> ${t.returnType} {

	// vars
	${t.vars}

	// flow
	${t.flow}

}
`}_getWGSLComputeCode(t,e){return`${this.getSignature()}
// directives
${t.directives}

// system
var<private> instanceIndex : u32;

// locals
${t.scopedArrays}

// uniforms
${t.uniforms}

// codes
${t.codes}

@compute @workgroup_size( ${e} )
fn main( ${t.attributes} ) {

	// system
	instanceIndex = id.x + id.y * numWorkgroups.x * u32(${e}) + id.z * numWorkgroups.x * numWorkgroups.y * u32(${e});

	// vars
	${t.vars}

	// flow
	${t.flow}

}
`}_getWGSLStruct(t,e){return`
struct ${t} {
${e}
};`}_getWGSLStructBinding(t,e,n,i=0,r=0){const o=t+"Struct";return`${this._getWGSLStruct(o,e)}
@binding( ${i} ) @group( ${r} )
var<${n}> ${t} : ${o};`}}class JK{constructor(t){this.backend=t}getCurrentDepthStencilFormat(t){let e;return t.depthTexture!==null?e=this.getTextureFormatGPU(t.depthTexture):t.depth&&t.stencil?e=L.Depth24PlusStencil8:t.depth&&(e=L.Depth24Plus),e}getTextureFormatGPU(t){return this.backend.get(t).format}getCurrentColorFormat(t){let e;return t.textures!==null?e=this.getTextureFormatGPU(t.textures[0]):e=this.getPreferredCanvasFormat(),e}getCurrentColorSpace(t){return t.textures!==null?t.textures[0].colorSpace:this.backend.renderer.outputColorSpace}getPrimitiveTopology(t,e){if(t.isPoints)return Nl.PointList;if(t.isLineSegments||t.isMesh&&e.wireframe===!0)return Nl.LineList;if(t.isLine)return Nl.LineStrip;if(t.isMesh)return Nl.TriangleList}getSampleCount(t){let e=1;return t>1&&(e=Math.pow(2,Math.floor(Math.log2(t))),e===2&&(e=4)),e}getSampleCountRenderContext(t){return t.textures!==null?this.getSampleCount(t.sampleCount):this.getSampleCount(this.backend.renderer.samples)}getPreferredCanvasFormat(){return navigator.userAgent.includes("Quest")?L.BGRA8Unorm:navigator.gpu.getPreferredCanvasFormat()}}const tQ=new Map([[Int8Array,["sint8","snorm8"]],[Uint8Array,["uint8","unorm8"]],[Int16Array,["sint16","snorm16"]],[Uint16Array,["uint16","unorm16"]],[Int32Array,["sint32","snorm32"]],[Uint32Array,["uint32","unorm32"]],[Float32Array,["float32"]]]),eQ=new Map([[aN,["float16"]]]),nQ=new Map([[Int32Array,"sint32"],[Int16Array,"sint32"],[Uint32Array,"uint32"],[Uint16Array,"uint32"],[Float32Array,"float32"]]);class iQ{constructor(t){this.backend=t}createAttribute(t,e){const n=this._getBufferAttribute(t),i=this.backend,r=i.get(n);let o=r.buffer;if(o===void 0){const a=i.device;let c=n.array;if(t.normalized===!1&&(c.constructor===Int16Array||c.constructor===Uint16Array)){const h=new Uint32Array(c.length);for(let u=0;u<c.length;u++)h[u]=c[u];c=h}if(n.array=c,(n.isStorageBufferAttribute||n.isStorageInstancedBufferAttribute)&&n.itemSize===3){c=new c.constructor(n.count*4);for(let h=0;h<n.count;h++)c.set(n.array.subarray(h*3,h*3+3),h*4);n.itemSize=4,n.array=c}const l=c.byteLength+(4-c.byteLength%4)%4;o=a.createBuffer({label:n.name,size:l,usage:e,mappedAtCreation:!0}),new c.constructor(o.getMappedRange()).set(c),o.unmap(),r.buffer=o}}updateAttribute(t){const e=this._getBufferAttribute(t),n=this.backend,i=n.device,r=n.get(e).buffer,o=e.array,a=e.updateRanges;if(a.length===0)i.queue.writeBuffer(r,0,o,0);else{for(let c=0,l=a.length;c<l;c++){const h=a[c];i.queue.writeBuffer(r,0,o,h.start*o.BYTES_PER_ELEMENT,h.count*o.BYTES_PER_ELEMENT)}e.clearUpdateRanges()}}createShaderVertexBuffers(t){const e=t.getAttributes(),n=new Map;for(let i=0;i<e.length;i++){const r=e[i],o=r.array.BYTES_PER_ELEMENT,a=this._getBufferAttribute(r);let c=n.get(a);if(c===void 0){let u,d;r.isInterleavedBufferAttribute===!0?(u=r.data.stride*o,d=r.data.isInstancedInterleavedBuffer?up.Instance:up.Vertex):(u=r.itemSize*o,d=r.isInstancedBufferAttribute?up.Instance:up.Vertex),r.normalized===!1&&(r.array.constructor===Int16Array||r.array.constructor===Uint16Array)&&(u=4),c={arrayStride:u,attributes:[],stepMode:d},n.set(a,c)}const l=this._getVertexFormat(r),h=r.isInterleavedBufferAttribute===!0?r.offset*o:0;c.attributes.push({shaderLocation:i,offset:h,format:l})}return Array.from(n.values())}destroyAttribute(t){const e=this.backend;e.get(this._getBufferAttribute(t)).buffer.destroy(),e.delete(t)}async getArrayBufferAsync(t){const e=this.backend,n=e.device,r=e.get(this._getBufferAttribute(t)).buffer,o=r.size,a=n.createBuffer({label:t.name,size:o,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),c=n.createCommandEncoder({});c.copyBufferToBuffer(r,0,a,0,o),a.unmap();const l=c.finish();return n.queue.submit([l]),await a.mapAsync(GPUMapMode.READ),a.getMappedRange()}_getVertexFormat(t){const{itemSize:e,normalized:n}=t,i=t.array.constructor,r=t.constructor;let o;if(e==1)o=nQ.get(i);else{const c=(eQ.get(r)||tQ.get(i))[n?1:0];if(c){const l=i.BYTES_PER_ELEMENT*e,u=Math.floor((l+3)/4)*4/i.BYTES_PER_ELEMENT;if(u%1)throw new Error("THREE.WebGPUAttributeUtils: Bad vertex format item size.");o=`${c}x${u}`}}return o||console.error("THREE.WebGPUAttributeUtils: Vertex format not supported yet."),o}_getBufferAttribute(t){return t.isInterleavedBufferAttribute&&(t=t.data),t}}class sQ{constructor(t){this.backend=t,this.bindGroupLayoutCache=new WeakMap}createBindingsLayout(t){const n=this.backend.device,i=[];let r=0;for(const o of t.bindings){const a={binding:r++,visibility:o.visibility};if(o.isUniformBuffer||o.isStorageBuffer){const c={};o.isStorageBuffer&&(c.type=o.access),a.buffer=c}else if(o.isSampler){const c={};o.texture.isDepthTexture&&o.texture.compareFunction!==null&&(c.type="comparison"),a.sampler=c}else if(o.isSampledTexture&&o.texture.isVideoTexture)a.externalTexture={};else if(o.isSampledTexture&&o.store){const c=this.backend.get(o.texture).texture.format,l=o.access;a.storageTexture={format:c,access:l}}else if(o.isSampledTexture){const c={};if(o.texture.isMultisampleRenderTargetTexture===!0&&(c.multisampled=!0),o.texture.isDepthTexture)c.sampleType=fu.Depth;else if(o.texture.isDataTexture||o.texture.isDataArrayTexture||o.texture.isData3DTexture){const l=o.texture.type;l===li?c.sampleType=fu.SInt:l===Un?c.sampleType=fu.UInt:l===ji&&(this.backend.hasFeature("float32-filterable")?c.sampleType=fu.Float:c.sampleType=fu.UnfilterableFloat)}o.isSampledCubeTexture?c.viewDimension=es.Cube:o.texture.isDataArrayTexture||o.texture.isCompressedArrayTexture?c.viewDimension=es.TwoDArray:o.isSampledTexture3D&&(c.viewDimension=es.ThreeD),a.texture=c}else console.error(`WebGPUBindingUtils: Unsupported binding "${o}".`);i.push(a)}return n.createBindGroupLayout({entries:i})}createBindings(t){const{backend:e,bindGroupLayoutCache:n}=this,i=e.get(t);let r=n.get(t.bindingsReference);r===void 0&&(r=this.createBindingsLayout(t),n.set(t.bindingsReference,r));const o=this.createBindGroup(t,r);i.layout=r,i.group=o}updateBinding(t){const e=this.backend,n=e.device,i=t.buffer,r=e.get(t).buffer;n.queue.writeBuffer(r,0,i,0)}createBindGroup(t,e){const n=this.backend,i=n.device;let r=0;const o=[];for(const a of t.bindings){if(a.isUniformBuffer){const c=n.get(a);if(c.buffer===void 0){const l=a.byteLength,h=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,u=i.createBuffer({label:"bindingBuffer_"+a.name,size:l,usage:h});c.buffer=u}o.push({binding:r,resource:{buffer:c.buffer}})}else if(a.isStorageBuffer){const c=n.get(a);if(c.buffer===void 0){const l=a.attribute;c.buffer=n.get(l).buffer}o.push({binding:r,resource:{buffer:c.buffer}})}else if(a.isSampler){const c=n.get(a.texture);o.push({binding:r,resource:c.sampler})}else if(a.isSampledTexture){const c=n.get(a.texture);let l;if(c.externalTexture!==void 0)l=i.importExternalTexture({source:c.externalTexture});else{const h=a.store?1:c.texture.mipLevelCount,u=`view-${c.texture.width}-${c.texture.height}-${h}`;if(l=c[u],l===void 0){const d=$Y.All;let f;a.isSampledCubeTexture?f=es.Cube:a.isSampledTexture3D?f=es.ThreeD:a.texture.isDataArrayTexture||a.texture.isCompressedArrayTexture?f=es.TwoDArray:f=es.TwoD,l=c[u]=c.texture.createView({aspect:d,dimension:f,mipLevelCount:h})}}o.push({binding:r,resource:l})}r++}return i.createBindGroup({label:"bindGroup_"+t.name,layout:e,entries:o})}}class rQ{constructor(t){this.backend=t}_getSampleCount(t){return this.backend.utils.getSampleCountRenderContext(t)}createRenderPipeline(t,e){const{object:n,material:i,geometry:r,pipeline:o}=t,{vertexProgram:a,fragmentProgram:c}=o,l=this.backend,h=l.device,u=l.utils,d=l.get(o),f=[];for(const I of t.getBindings()){const P=l.get(I);f.push(P.layout)}const p=l.attributeUtils.createShaderVertexBuffers(t);let _;i.transparent===!0&&i.blending!==hh&&(_=this._getBlending(i));let g={};i.stencilWrite===!0&&(g={compare:this._getStencilCompare(i),failOp:this._getStencilOperation(i.stencilFail),depthFailOp:this._getStencilOperation(i.stencilZFail),passOp:this._getStencilOperation(i.stencilZPass)});const m=this._getColorWriteMask(i),x=[];if(t.context.textures!==null){const I=t.context.textures;for(let P=0;P<I.length;P++){const D=u.getTextureFormatGPU(I[P]);x.push({format:D,blend:_,writeMask:m})}}else{const I=u.getCurrentColorFormat(t.context);x.push({format:I,blend:_,writeMask:m})}const v=l.get(a).module,y=l.get(c).module,b=this._getPrimitiveState(n,r,i),S=this._getDepthCompare(i),M=u.getCurrentDepthStencilFormat(t.context),T=this._getSampleCount(t.context),A={label:`renderPipeline_${i.name||i.type}_${i.id}`,vertex:Object.assign({},v,{buffers:p}),fragment:Object.assign({},y,{targets:x}),primitive:b,multisample:{count:T,alphaToCoverageEnabled:i.alphaToCoverage&&T>1},layout:h.createPipelineLayout({bindGroupLayouts:f})},w={},E=t.context.depth,N=t.context.stencil;if((E===!0||N===!0)&&(E===!0&&(w.format=M,w.depthWriteEnabled=i.depthWrite,w.depthCompare=S),N===!0&&(w.stencilFront=g,w.stencilBack={},w.stencilReadMask=i.stencilFuncMask,w.stencilWriteMask=i.stencilWriteMask),A.depthStencil=w),e===null)d.pipeline=h.createRenderPipeline(A);else{const I=new Promise(P=>{h.createRenderPipelineAsync(A).then(D=>{d.pipeline=D,P()})});e.push(I)}}createBundleEncoder(t){const e=this.backend,{utils:n,device:i}=e,r=n.getCurrentDepthStencilFormat(t),o=n.getCurrentColorFormat(t),a=this._getSampleCount(t),c={label:"renderBundleEncoder",colorFormats:[o],depthStencilFormat:r,sampleCount:a};return i.createRenderBundleEncoder(c)}createComputePipeline(t,e){const n=this.backend,i=n.device,r=n.get(t.computeProgram).module,o=n.get(t),a=[];for(const c of e){const l=n.get(c);a.push(l.layout)}o.pipeline=i.createComputePipeline({compute:r,layout:i.createPipelineLayout({bindGroupLayouts:a})})}_getBlending(t){let e,n;const i=t.blending,r=t.blendSrc,o=t.blendDst,a=t.blendEquation;if(i===RR){const c=t.blendSrcAlpha!==null?t.blendSrcAlpha:r,l=t.blendDstAlpha!==null?t.blendDstAlpha:o,h=t.blendEquationAlpha!==null?t.blendEquationAlpha:a;e={srcFactor:this._getBlendFactor(r),dstFactor:this._getBlendFactor(o),operation:this._getBlendOperation(a)},n={srcFactor:this._getBlendFactor(c),dstFactor:this._getBlendFactor(l),operation:this._getBlendOperation(h)}}else{const c=t.premultipliedAlpha,l=(h,u,d,f)=>{e={srcFactor:h,dstFactor:u,operation:Fa.Add},n={srcFactor:d,dstFactor:f,operation:Fa.Add}};if(c)switch(i){case ea:l(Jt.One,Jt.OneMinusSrcAlpha,Jt.One,Jt.OneMinusSrcAlpha);break;case Em:l(Jt.One,Jt.One,Jt.One,Jt.One);break;case Cm:l(Jt.Zero,Jt.OneMinusSrc,Jt.Zero,Jt.One);break;case Rm:l(Jt.Zero,Jt.Src,Jt.Zero,Jt.SrcAlpha);break}else switch(i){case ea:l(Jt.SrcAlpha,Jt.OneMinusSrcAlpha,Jt.One,Jt.OneMinusSrcAlpha);break;case Em:l(Jt.SrcAlpha,Jt.One,Jt.SrcAlpha,Jt.One);break;case Cm:l(Jt.Zero,Jt.OneMinusSrc,Jt.Zero,Jt.One);break;case Rm:l(Jt.Zero,Jt.Src,Jt.Zero,Jt.Src);break}}if(e!==void 0&&n!==void 0)return{color:e,alpha:n};console.error("THREE.WebGPURenderer: Invalid blending: ",i)}_getBlendFactor(t){let e;switch(t){case DR:e=Jt.Zero;break;case IR:e=Jt.One;break;case FR:e=Jt.Src;break;case OR:e=Jt.OneMinusSrc;break;case Nm:e=Jt.SrcAlpha;break;case Pm:e=Jt.OneMinusSrcAlpha;break;case UR:e=Jt.Dst;break;case kR:e=Jt.OneMinusDstColor;break;case LR:e=Jt.DstAlpha;break;case BR:e=Jt.OneMinusDstAlpha;break;case zR:e=Jt.SrcAlphaSaturated;break;case yY:e=Jt.Constant;break;case xY:e=Jt.OneMinusConstant;break;default:console.error("THREE.WebGPURenderer: Blend factor not supported.",t)}return e}_getStencilCompare(t){let e;const n=t.stencilFunc;switch(n){case z8:e=Ln.Never;break;case Vx:e=Ln.Always;break;case V8:e=Ln.Less;break;case H8:e=Ln.LessEqual;break;case G8:e=Ln.Equal;break;case q8:e=Ln.GreaterEqual;break;case $8:e=Ln.Greater;break;case W8:e=Ln.NotEqual;break;default:console.error("THREE.WebGPURenderer: Invalid stencil function.",n)}return e}_getStencilOperation(t){let e;switch(t){case La:e=Vo.Keep;break;case I8:e=Vo.Zero;break;case F8:e=Vo.Replace;break;case k8:e=Vo.Invert;break;case O8:e=Vo.IncrementClamp;break;case L8:e=Vo.DecrementClamp;break;case B8:e=Vo.IncrementWrap;break;case U8:e=Vo.DecrementWrap;break;default:console.error("THREE.WebGPURenderer: Invalid stencil operation.",e)}return e}_getBlendOperation(t){let e;switch(t){case Xo:e=Fa.Add;break;case NR:e=Fa.Subtract;break;case PR:e=Fa.ReverseSubtract;break;case m8:e=Fa.Min;break;case g8:e=Fa.Max;break;default:console.error("THREE.WebGPUPipelineUtils: Blend equation not supported.",t)}return e}_getPrimitiveState(t,e,n){const i={},r=this.backend.utils;switch(i.topology=r.getPrimitiveTopology(t,n),e.index!==null&&t.isLine===!0&&t.isLineSegments!==!0&&(i.stripIndexFormat=e.index.array instanceof Uint16Array?mh.Uint16:mh.Uint32),n.side){case lh:i.frontFace=F0.CCW,i.cullMode=O0.Back;break;case Vs:i.frontFace=F0.CCW,i.cullMode=O0.Front;break;case zl:i.frontFace=F0.CCW,i.cullMode=O0.None;break;default:console.error("THREE.WebGPUPipelineUtils: Unknown material.side value.",n.side);break}return i}_getColorWriteMask(t){return t.colorWrite===!0?F1.All:F1.None}_getDepthCompare(t){let e;if(t.depthTest===!1)e=Ln.Always;else{const n=t.depthFunc;switch(n){case VR:e=Ln.Never;break;case GR:e=Ln.Always;break;case HR:e=Ln.Less;break;case Dm:e=Ln.LessEqual;break;case $R:e=Ln.Equal;break;case WR:e=Ln.GreaterEqual;break;case qR:e=Ln.Greater;break;case jR:e=Ln.NotEqual;break;default:console.error("THREE.WebGPUPipelineUtils: Invalid depth function.",n)}}return e}}class oQ extends nP{constructor(t={}){super(t),this.isWebGPUBackend=!0,this.parameters.alpha=t.alpha===void 0?!0:t.alpha,this.parameters.requiredLimits=t.requiredLimits===void 0?{}:t.requiredLimits,this.trackTimestamp=t.trackTimestamp===!0,this.device=null,this.context=null,this.colorBuffer=null,this.defaultRenderPassdescriptor=null,this.utils=new JK(this),this.attributeUtils=new iQ(this),this.bindingUtils=new sQ(this),this.pipelineUtils=new rQ(this),this.textureUtils=new $K(this),this.occludedResolveCache=new Map}async init(t){await super.init(t);const e=this.parameters;let n;if(e.device===void 0){const o={powerPreference:e.powerPreference},a=await navigator.gpu.requestAdapter(o);if(a===null)throw new Error("WebGPUBackend: Unable to create WebGPU adapter.");const c=Object.values(iv),l=[];for(const u of c)a.features.has(u)&&l.push(u);const h={requiredFeatures:l,requiredLimits:e.requiredLimits};n=await a.requestDevice(h)}else n=e.device;n.lost.then(o=>{const a={api:"WebGPU",message:o.message||"Unknown reason",reason:o.reason||null,originalEvent:o};t.onDeviceLost(a)});const i=e.context!==void 0?e.context:t.domElement.getContext("webgpu");this.device=n,this.context=i;const r=e.alpha?"premultiplied":"opaque";this.trackTimestamp=this.trackTimestamp&&this.hasFeature(iv.TimestampQuery),this.context.configure({device:this.device,format:this.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC,alphaMode:r}),this.updateSize()}get coordinateSystem(){return pc}async getArrayBufferAsync(t){return await this.attributeUtils.getArrayBufferAsync(t)}getContext(){return this.context}_getDefaultRenderPassDescriptor(){let t=this.defaultRenderPassdescriptor;if(t===null){const n=this.renderer;t={colorAttachments:[{view:null}]},(this.renderer.depth===!0||this.renderer.stencil===!0)&&(t.depthStencilAttachment={view:this.textureUtils.getDepthBuffer(n.depth,n.stencil).createView()});const i=t.colorAttachments[0];this.renderer.samples>0?i.view=this.colorBuffer.createView():i.resolveTarget=void 0,this.defaultRenderPassdescriptor=t}const e=t.colorAttachments[0];return this.renderer.samples>0?e.resolveTarget=this.context.getCurrentTexture().createView():e.view=this.context.getCurrentTexture().createView(),t}_getRenderPassDescriptor(t){const e=t.renderTarget,n=this.get(e);let i=n.descriptors;if(i===void 0||n.width!==e.width||n.height!==e.height||n.activeMipmapLevel!==e.activeMipmapLevel||n.samples!==e.samples){i={},n.descriptors=i;const a=()=>{e.removeEventListener("dispose",a),this.delete(e)};e.addEventListener("dispose",a)}const r=t.getCacheKey();let o=i[r];if(o===void 0){const a=t.textures,c=[];for(let l=0;l<a.length;l++){const h=this.get(a[l]),u=h.texture.createView({baseMipLevel:t.activeMipmapLevel,mipLevelCount:1,baseArrayLayer:t.activeCubeFace,dimension:es.TwoD});let d,f;h.msaaTexture!==void 0?(d=h.msaaTexture.createView(),f=u):(d=u,f=void 0),c.push({view:d,resolveTarget:f,loadOp:gn.Load,storeOp:Bn.Store})}if(o={colorAttachments:c},t.depth){const h={view:this.get(t.depthTexture).texture.createView()};o.depthStencilAttachment=h}i[r]=o,n.width=e.width,n.height=e.height,n.samples=e.samples,n.activeMipmapLevel=e.activeMipmapLevel}return o}beginRender(t){const e=this.get(t),n=this.device,i=t.occlusionQueryCount;let r;i>0&&(e.currentOcclusionQuerySet&&e.currentOcclusionQuerySet.destroy(),e.currentOcclusionQueryBuffer&&e.currentOcclusionQueryBuffer.destroy(),e.currentOcclusionQuerySet=e.occlusionQuerySet,e.currentOcclusionQueryBuffer=e.occlusionQueryBuffer,e.currentOcclusionQueryObjects=e.occlusionQueryObjects,r=n.createQuerySet({type:"occlusion",count:i}),e.occlusionQuerySet=r,e.occlusionQueryIndex=0,e.occlusionQueryObjects=new Array(i),e.lastOcclusionObject=null);let o;t.textures===null?o=this._getDefaultRenderPassDescriptor():o=this._getRenderPassDescriptor(t),this.initTimestampQuery(t,o),o.occlusionQuerySet=r;const a=o.depthStencilAttachment;if(t.textures!==null){const h=o.colorAttachments;for(let u=0;u<h.length;u++){const d=h[u];t.clearColor?(d.clearValue=u===0?t.clearColorValue:{r:0,g:0,b:0,a:1},d.loadOp=gn.Clear,d.storeOp=Bn.Store):(d.loadOp=gn.Load,d.storeOp=Bn.Store)}}else{const h=o.colorAttachments[0];t.clearColor?(h.clearValue=t.clearColorValue,h.loadOp=gn.Clear,h.storeOp=Bn.Store):(h.loadOp=gn.Load,h.storeOp=Bn.Store)}t.depth&&(t.clearDepth?(a.depthClearValue=t.clearDepthValue,a.depthLoadOp=gn.Clear,a.depthStoreOp=Bn.Store):(a.depthLoadOp=gn.Load,a.depthStoreOp=Bn.Store)),t.stencil&&(t.clearStencil?(a.stencilClearValue=t.clearStencilValue,a.stencilLoadOp=gn.Clear,a.stencilStoreOp=Bn.Store):(a.stencilLoadOp=gn.Load,a.stencilStoreOp=Bn.Store));const c=n.createCommandEncoder({label:"renderContext_"+t.id}),l=c.beginRenderPass(o);if(e.descriptor=o,e.encoder=c,e.currentPass=l,e.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},e.renderBundles=[],t.viewport&&this.updateViewport(t),t.scissor){const{x:h,y:u,width:d,height:f}=t.scissorValue;l.setScissorRect(h,u,d,f)}}finishRender(t){const e=this.get(t),n=t.occlusionQueryCount;if(e.renderBundles.length>0&&e.currentPass.executeBundles(e.renderBundles),n>e.occlusionQueryIndex&&e.currentPass.endOcclusionQuery(),e.currentPass.end(),n>0){const i=n*8;let r=this.occludedResolveCache.get(i);r===void 0&&(r=this.device.createBuffer({size:i,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.occludedResolveCache.set(i,r));const o=this.device.createBuffer({size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});e.encoder.resolveQuerySet(e.occlusionQuerySet,0,n,r,0),e.encoder.copyBufferToBuffer(r,0,o,0,i),e.occlusionQueryBuffer=o,this.resolveOccludedAsync(t)}if(this.prepareTimestampBuffer(t,e.encoder),this.device.queue.submit([e.encoder.finish()]),t.textures!==null){const i=t.textures;for(let r=0;r<i.length;r++){const o=i[r];o.generateMipmaps===!0&&this.textureUtils.generateMipmaps(o)}}}isOccluded(t,e){const n=this.get(t);return n.occluded&&n.occluded.has(e)}async resolveOccludedAsync(t){const e=this.get(t),{currentOcclusionQueryBuffer:n,currentOcclusionQueryObjects:i}=e;if(n&&i){const r=new WeakSet;e.currentOcclusionQueryObjects=null,e.currentOcclusionQueryBuffer=null,await n.mapAsync(GPUMapMode.READ);const o=n.getMappedRange(),a=new BigUint64Array(o);for(let c=0;c<i.length;c++)a[c]!==BigInt(0)&&r.add(i[c]);n.destroy(),e.occluded=r}}updateViewport(t){const{currentPass:e}=this.get(t),{x:n,y:i,width:r,height:o,minDepth:a,maxDepth:c}=t.viewportValue;e.setViewport(n,i,r,o,a,c)}clear(t,e,n,i=null){const r=this.device,o=this.renderer;let a=[],c,l,h,u;if(t){const p=this.getClearColor();if(this.renderer.alpha===!0){const _=p.a;l={r:p.r*_,g:p.g*_,b:p.b*_,a:_}}else l={r:p.r,g:p.g,b:p.b,a:p.a}}if(i===null){h=o.depth,u=o.stencil;const p=this._getDefaultRenderPassDescriptor();if(t){a=p.colorAttachments;const _=a[0];_.clearValue=l,_.loadOp=gn.Clear,_.storeOp=Bn.Store}(h||u)&&(c=p.depthStencilAttachment)}else{if(h=i.depth,u=i.stencil,t)for(const p of i.textures){const _=this.get(p),g=_.texture.createView();let m,x;_.msaaTexture!==void 0?(m=_.msaaTexture.createView(),x=g):(m=g,x=void 0),a.push({view:m,resolveTarget:x,clearValue:l,loadOp:gn.Clear,storeOp:Bn.Store})}(h||u)&&(c={view:this.get(i.depthTexture).texture.createView()})}h&&(e?(c.depthLoadOp=gn.Clear,c.depthClearValue=o.getClearDepth(),c.depthStoreOp=Bn.Store):(c.depthLoadOp=gn.Load,c.depthStoreOp=Bn.Store)),u&&(n?(c.stencilLoadOp=gn.Clear,c.stencilClearValue=o.getClearStencil(),c.stencilStoreOp=Bn.Store):(c.stencilLoadOp=gn.Load,c.stencilStoreOp=Bn.Store));const d=r.createCommandEncoder({});d.beginRenderPass({colorAttachments:a,depthStencilAttachment:c}).end(),r.queue.submit([d.finish()])}beginCompute(t){const e=this.get(t),n={};this.initTimestampQuery(t,n),e.cmdEncoderGPU=this.device.createCommandEncoder(),e.passEncoderGPU=e.cmdEncoderGPU.beginComputePass(n)}compute(t,e,n,i){const{passEncoderGPU:r}=this.get(t),o=this.get(i).pipeline;r.setPipeline(o);for(let h=0,u=n.length;h<u;h++){const d=n[h],f=this.get(d);r.setBindGroup(h,f.group)}const a=this.device.limits.maxComputeWorkgroupsPerDimension,c=this.get(e);c.dispatchSize===void 0&&(c.dispatchSize={x:0,y:1,z:1});const{dispatchSize:l}=c;e.dispatchCount>a?(l.x=Math.min(e.dispatchCount,a),l.y=Math.ceil(e.dispatchCount/a)):l.x=e.dispatchCount,r.dispatchWorkgroups(l.x,l.y,l.z)}finishCompute(t){const e=this.get(t);e.passEncoderGPU.end(),this.prepareTimestampBuffer(t,e.cmdEncoderGPU),this.device.queue.submit([e.cmdEncoderGPU.finish()])}async waitForGPU(){await this.device.queue.onSubmittedWorkDone()}draw(t,e){const{object:n,context:i,pipeline:r}=t,o=t.getBindings(),a=this.get(i),c=this.get(r).pipeline,l=a.currentSets,h=a.currentPass,u=t.getDrawParameters();if(u===null)return;l.pipeline!==c&&(h.setPipeline(c),l.pipeline=c);const d=l.bindingGroups;for(let g=0,m=o.length;g<m;g++){const x=o[g],v=this.get(x);d[x.index]!==x.id&&(h.setBindGroup(x.index,v.group),d[x.index]=x.id)}const f=t.getIndex(),p=f!==null;if(p===!0&&l.index!==f){const g=this.get(f).buffer,m=f.array instanceof Uint16Array?mh.Uint16:mh.Uint32;h.setIndexBuffer(g,m),l.index=f}const _=t.getVertexBuffers();for(let g=0,m=_.length;g<m;g++){const x=_[g];if(l.attributes[g]!==x){const v=this.get(x).buffer;h.setVertexBuffer(g,v),l.attributes[g]=x}}if(a.occlusionQuerySet!==void 0){const g=a.lastOcclusionObject;g!==n&&(g!==null&&g.occlusionTest===!0&&(h.endOcclusionQuery(),a.occlusionQueryIndex++),n.occlusionTest===!0&&(h.beginOcclusionQuery(a.occlusionQueryIndex),a.occlusionQueryObjects[a.occlusionQueryIndex]=n),a.lastOcclusionObject=n)}if(n.isBatchedMesh===!0){const g=n._multiDrawStarts,m=n._multiDrawCounts,x=n._multiDrawCount,v=n._multiDrawInstances,y=p?f.array.BYTES_PER_ELEMENT:1;for(let b=0;b<x;b++){const S=v?v[b]:1,M=S>1?0:b;h.drawIndexed(m[b],S,g[b]/y,0,M)}}else if(p===!0){const{vertexCount:g,instanceCount:m,firstVertex:x}=u,v=t.getIndirect();if(v!==null){const y=this.get(v).buffer;h.drawIndexedIndirect(y,0)}else h.drawIndexed(g,m,x,0,0);e.update(n,g,m)}else{const{vertexCount:g,instanceCount:m,firstVertex:x}=u,v=t.getIndirect();if(v!==null){const y=this.get(v).buffer;h.drawIndirect(y,0)}else h.draw(g,m,x,0);e.update(n,g,m)}}needsRenderUpdate(t){const e=this.get(t),{object:n,material:i}=t,r=this.utils,o=r.getSampleCountRenderContext(t.context),a=r.getCurrentColorSpace(t.context),c=r.getCurrentColorFormat(t.context),l=r.getCurrentDepthStencilFormat(t.context),h=r.getPrimitiveTopology(n,i);let u=!1;return(e.material!==i||e.materialVersion!==i.version||e.transparent!==i.transparent||e.blending!==i.blending||e.premultipliedAlpha!==i.premultipliedAlpha||e.blendSrc!==i.blendSrc||e.blendDst!==i.blendDst||e.blendEquation!==i.blendEquation||e.blendSrcAlpha!==i.blendSrcAlpha||e.blendDstAlpha!==i.blendDstAlpha||e.blendEquationAlpha!==i.blendEquationAlpha||e.colorWrite!==i.colorWrite||e.depthWrite!==i.depthWrite||e.depthTest!==i.depthTest||e.depthFunc!==i.depthFunc||e.stencilWrite!==i.stencilWrite||e.stencilFunc!==i.stencilFunc||e.stencilFail!==i.stencilFail||e.stencilZFail!==i.stencilZFail||e.stencilZPass!==i.stencilZPass||e.stencilFuncMask!==i.stencilFuncMask||e.stencilWriteMask!==i.stencilWriteMask||e.side!==i.side||e.alphaToCoverage!==i.alphaToCoverage||e.sampleCount!==o||e.colorSpace!==a||e.colorFormat!==c||e.depthStencilFormat!==l||e.primitiveTopology!==h||e.clippingContextCacheKey!==t.clippingContext.cacheKey)&&(e.material=i,e.materialVersion=i.version,e.transparent=i.transparent,e.blending=i.blending,e.premultipliedAlpha=i.premultipliedAlpha,e.blendSrc=i.blendSrc,e.blendDst=i.blendDst,e.blendEquation=i.blendEquation,e.blendSrcAlpha=i.blendSrcAlpha,e.blendDstAlpha=i.blendDstAlpha,e.blendEquationAlpha=i.blendEquationAlpha,e.colorWrite=i.colorWrite,e.depthWrite=i.depthWrite,e.depthTest=i.depthTest,e.depthFunc=i.depthFunc,e.stencilWrite=i.stencilWrite,e.stencilFunc=i.stencilFunc,e.stencilFail=i.stencilFail,e.stencilZFail=i.stencilZFail,e.stencilZPass=i.stencilZPass,e.stencilFuncMask=i.stencilFuncMask,e.stencilWriteMask=i.stencilWriteMask,e.side=i.side,e.alphaToCoverage=i.alphaToCoverage,e.sampleCount=o,e.colorSpace=a,e.colorFormat=c,e.depthStencilFormat=l,e.primitiveTopology=h,e.clippingContextCacheKey=t.clippingContext.cacheKey,u=!0),u}getRenderCacheKey(t){const{object:e,material:n}=t,i=this.utils,r=t.context;return[n.transparent,n.blending,n.premultipliedAlpha,n.blendSrc,n.blendDst,n.blendEquation,n.blendSrcAlpha,n.blendDstAlpha,n.blendEquationAlpha,n.colorWrite,n.depthWrite,n.depthTest,n.depthFunc,n.stencilWrite,n.stencilFunc,n.stencilFail,n.stencilZFail,n.stencilZPass,n.stencilFuncMask,n.stencilWriteMask,n.side,i.getSampleCountRenderContext(r),i.getCurrentColorSpace(r),i.getCurrentColorFormat(r),i.getCurrentDepthStencilFormat(r),i.getPrimitiveTopology(e,n),t.getGeometryCacheKey(),t.clippingContext.cacheKey].join()}createSampler(t){this.textureUtils.createSampler(t)}destroySampler(t){this.textureUtils.destroySampler(t)}createDefaultTexture(t){this.textureUtils.createDefaultTexture(t)}createTexture(t,e){this.textureUtils.createTexture(t,e)}updateTexture(t,e){this.textureUtils.updateTexture(t,e)}generateMipmaps(t){this.textureUtils.generateMipmaps(t)}destroyTexture(t){this.textureUtils.destroyTexture(t)}copyTextureToBuffer(t,e,n,i,r,o){return this.textureUtils.copyTextureToBuffer(t,e,n,i,r,o)}initTimestampQuery(t,e){if(!this.trackTimestamp)return;const n=this.get(t);if(!n.timeStampQuerySet){const i=this.device.createQuerySet({type:"timestamp",count:2});Object.assign(e,{timestampWrites:{querySet:i,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1}}),n.timeStampQuerySet=i}}prepareTimestampBuffer(t,e){if(!this.trackTimestamp)return;const n=this.get(t),i=2*BigInt64Array.BYTES_PER_ELEMENT;n.currentTimestampQueryBuffers===void 0&&(n.currentTimestampQueryBuffers={resolveBuffer:this.device.createBuffer({label:"timestamp resolve buffer",size:i,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),resultBuffer:this.device.createBuffer({label:"timestamp result buffer",size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),isMappingPending:!1});const{resolveBuffer:r,resultBuffer:o,isMappingPending:a}=n.currentTimestampQueryBuffers;a!==!0&&(e.resolveQuerySet(n.timeStampQuerySet,0,2,r,0),e.copyBufferToBuffer(r,0,o,0,i))}async resolveTimestampAsync(t,e="render"){if(!this.trackTimestamp)return;const n=this.get(t);if(n.currentTimestampQueryBuffers===void 0)return;const{resultBuffer:i,isMappingPending:r}=n.currentTimestampQueryBuffers;r!==!0&&(n.currentTimestampQueryBuffers.isMappingPending=!0,i.mapAsync(GPUMapMode.READ).then(()=>{const o=new BigUint64Array(i.getMappedRange()),a=Number(o[1]-o[0])/1e6;this.renderer.info.updateTimestamp(e,a),i.unmap(),n.currentTimestampQueryBuffers.isMappingPending=!1}))}createNodeBuilder(t,e){return new QK(t,e)}createProgram(t){const e=this.get(t);e.module={module:this.device.createShaderModule({code:t.code,label:t.stage}),entryPoint:"main"}}destroyProgram(t){this.delete(t)}createRenderPipeline(t,e){this.pipelineUtils.createRenderPipeline(t,e)}createComputePipeline(t,e){this.pipelineUtils.createComputePipeline(t,e)}beginBundle(t){const e=this.get(t);e._currentPass=e.currentPass,e._currentSets=e.currentSets,e.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},e.currentPass=this.pipelineUtils.createBundleEncoder(t)}finishBundle(t,e){const n=this.get(t),r=n.currentPass.finish();this.get(e).bundleGPU=r,n.currentSets=n._currentSets,n.currentPass=n._currentPass}addBundle(t,e){this.get(t).renderBundles.push(this.get(e).bundleGPU)}createBindings(t){this.bindingUtils.createBindings(t)}updateBindings(t){this.bindingUtils.createBindings(t)}updateBinding(t){this.bindingUtils.updateBinding(t)}createIndexAttribute(t){this.attributeUtils.createAttribute(t,GPUBufferUsage.INDEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createAttribute(t){this.attributeUtils.createAttribute(t,GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createStorageAttribute(t){this.attributeUtils.createAttribute(t,GPUBufferUsage.STORAGE|GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createIndirectStorageAttribute(t){this.attributeUtils.createAttribute(t,GPUBufferUsage.STORAGE|GPUBufferUsage.INDIRECT|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}updateAttribute(t){this.attributeUtils.updateAttribute(t)}destroyAttribute(t){this.attributeUtils.destroyAttribute(t)}updateSize(){this.colorBuffer=this.textureUtils.getColorBuffer(),this.defaultRenderPassdescriptor=null}getMaxAnisotropy(){return 16}hasFeature(t){return this.device.features.has(t)}copyTextureToTexture(t,e,n=null,i=null,r=0){let o=0,a=0,c=0,l=0,h=0,u=0,d=t.image.width,f=t.image.height;n!==null&&(l=n.x,h=n.y,u=n.z||0,d=n.width,f=n.height),i!==null&&(o=i.x,a=i.y,c=i.z||0);const p=this.device.createCommandEncoder({label:"copyTextureToTexture_"+t.id+"_"+e.id}),_=this.get(t).texture,g=this.get(e).texture;p.copyTextureToTexture({texture:_,mipLevel:r,origin:{x:l,y:h,z:u}},{texture:g,mipLevel:r,origin:{x:o,y:a,z:c}},[d,f,1]),this.device.queue.submit([p.finish()])}copyFramebufferToTexture(t,e,n){const i=this.get(e);let r=null;e.renderTarget?t.isDepthTexture?r=this.get(e.depthTexture).texture:r=this.get(e.textures[0]).texture:t.isDepthTexture?r=this.textureUtils.getDepthBuffer(e.depth,e.stencil):r=this.context.getCurrentTexture();const o=this.get(t).texture;if(r.format!==o.format){console.error("WebGPUBackend: copyFramebufferToTexture: Source and destination formats do not match.",r.format,o.format);return}let a;if(i.currentPass?(i.currentPass.end(),a=i.encoder):a=this.device.createCommandEncoder({label:"copyFramebufferToTexture_"+t.id}),a.copyTextureToTexture({texture:r,origin:{x:n.x,y:n.y,z:0}},{texture:o},[n.z,n.w]),t.generateMipmaps&&this.textureUtils.generateMipmaps(t),i.currentPass){const{descriptor:c}=i;for(let l=0;l<c.colorAttachments.length;l++)c.colorAttachments[l].loadOp=gn.Load;e.depth&&(c.depthStencilAttachment.depthLoadOp=gn.Load),e.stencil&&(c.depthStencilAttachment.stencilLoadOp=gn.Load),i.currentPass=a.beginRenderPass(c),i.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null}}else this.device.queue.submit([a.finish()])}}class aQ extends TN{constructor(t,e,n,i,r,o){super(t,e,n,i,r,o),this.iesMap=null}copy(t,e){return super.copy(t,e),this.iesMap=t.iesMap,this}}class cQ extends Y2{constructor(){super(),this.addMaterial(l7,yN),this.addMaterial(O2,kb),this.addMaterial(Y7,_N),this.addMaterial(J7,xN),this.addMaterial(n7,yg),this.addMaterial(a7,bN),this.addMaterial(ZX,vN),this.addMaterial(iY,SN),this.addMaterial(WX,Bb),this.addMaterial(jX,MN),this.addMaterial(rY,mN),this.addMaterial(lY,fN),this.addMaterial(dY,gN),this.addLight(MZ,$6),this.addLight(JZ,q6),this.addLight(tK,X6),this.addLight(j2,TN),this.addLight(nK,j6),this.addLight(iK,V6),this.addLight(sK,Z6),this.addLight(eK,aQ),this.addToneMapping(jY,x8),this.addToneMapping(XY,v8),this.addToneMapping(YY,b8),this.addToneMapping(KY,S8),this.addToneMapping(eZ,M8),this.addToneMapping(nZ,T8)}}class lQ extends mK{constructor(t={}){let e;t.forceWebGL?e=nA:(e=oQ,t.getFallback=()=>(console.warn("THREE.WebGPURenderer: WebGPU is not available, running under WebGL2 backend."),new nA(t)));const n=new e(t);super(n,t),this.library=new cQ,this.isWebGPURenderer=!0}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:gg}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=gg);const K0={type:"change"},mS={type:"start"},gS={type:"end"},rA=1e-6,Ae={NONE:-1,ROTATE:0,ZOOM:1,PAN:2,TOUCH_ROTATE:3,TOUCH_ZOOM_PAN:4},bp=new qt,Ho=new qt,hQ=new X,Sp=new X,Q0=new X,gl=new zs,oA=new X,Mp=new X,J0=new X,Tp=new X;class uQ extends fg{constructor(t,e=null){super(t,e),this.enabled=!0,this.screen={left:0,top:0,width:0,height:0},this.rotateSpeed=1,this.zoomSpeed=1.2,this.panSpeed=.3,this.noRotate=!1,this.noZoom=!1,this.noPan=!1,this.staticMoving=!1,this.dynamicDampingFactor=.2,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.keys=["KeyA","KeyS","KeyD"],this.mouseButtons={LEFT:In.ROTATE,MIDDLE:In.DOLLY,RIGHT:In.PAN},this.state=Ae.NONE,this.keyState=Ae.NONE,this.target=new X,this._lastPosition=new X,this._lastZoom=1,this._touchZoomDistanceStart=0,this._touchZoomDistanceEnd=0,this._lastAngle=0,this._eye=new X,this._movePrev=new qt,this._moveCurr=new qt,this._lastAxis=new X,this._zoomStart=new qt,this._zoomEnd=new qt,this._panStart=new qt,this._panEnd=new qt,this._pointers=[],this._pointerPositions={},this._onPointerMove=fQ.bind(this),this._onPointerDown=dQ.bind(this),this._onPointerUp=pQ.bind(this),this._onPointerCancel=mQ.bind(this),this._onContextMenu=SQ.bind(this),this._onMouseWheel=bQ.bind(this),this._onKeyDown=_Q.bind(this),this._onKeyUp=gQ.bind(this),this._onTouchStart=MQ.bind(this),this._onTouchMove=TQ.bind(this),this._onTouchEnd=wQ.bind(this),this._onMouseDown=yQ.bind(this),this._onMouseMove=xQ.bind(this),this._onMouseUp=vQ.bind(this),this._target0=this.target.clone(),this._position0=this.object.position.clone(),this._up0=this.object.up.clone(),this._zoom0=this.object.zoom,e!==null&&(this.connect(),this.handleResize()),this.update()}connect(){window.addEventListener("keydown",this._onKeyDown),window.addEventListener("keyup",this._onKeyUp),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerCancel),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="none"}disconnect(){window.removeEventListener("keydown",this._onKeyDown),window.removeEventListener("keyup",this._onKeyUp),this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerCancel),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}handleResize(){const t=this.domElement.getBoundingClientRect(),e=this.domElement.ownerDocument.documentElement;this.screen.left=t.left+window.pageXOffset-e.clientLeft,this.screen.top=t.top+window.pageYOffset-e.clientTop,this.screen.width=t.width,this.screen.height=t.height}update(){this._eye.subVectors(this.object.position,this.target),this.noRotate||this._rotateCamera(),this.noZoom||this._zoomCamera(),this.noPan||this._panCamera(),this.object.position.addVectors(this.target,this._eye),this.object.isPerspectiveCamera?(this._checkDistances(),this.object.lookAt(this.target),this._lastPosition.distanceToSquared(this.object.position)>rA&&(this.dispatchEvent(K0),this._lastPosition.copy(this.object.position))):this.object.isOrthographicCamera?(this.object.lookAt(this.target),(this._lastPosition.distanceToSquared(this.object.position)>rA||this._lastZoom!==this.object.zoom)&&(this.dispatchEvent(K0),this._lastPosition.copy(this.object.position),this._lastZoom=this.object.zoom)):console.warn("THREE.TrackballControls: Unsupported camera type.")}reset(){this.state=Ae.NONE,this.keyState=Ae.NONE,this.target.copy(this._target0),this.object.position.copy(this._position0),this.object.up.copy(this._up0),this.object.zoom=this._zoom0,this.object.updateProjectionMatrix(),this._eye.subVectors(this.object.position,this.target),this.object.lookAt(this.target),this.dispatchEvent(K0),this._lastPosition.copy(this.object.position),this._lastZoom=this.object.zoom}_panCamera(){if(Ho.copy(this._panEnd).sub(this._panStart),Ho.lengthSq()){if(this.object.isOrthographicCamera){const t=(this.object.right-this.object.left)/this.object.zoom/this.domElement.clientWidth,e=(this.object.top-this.object.bottom)/this.object.zoom/this.domElement.clientWidth;Ho.x*=t,Ho.y*=e}Ho.multiplyScalar(this._eye.length()*this.panSpeed),Sp.copy(this._eye).cross(this.object.up).setLength(Ho.x),Sp.add(hQ.copy(this.object.up).setLength(Ho.y)),this.object.position.add(Sp),this.target.add(Sp),this.staticMoving?this._panStart.copy(this._panEnd):this._panStart.add(Ho.subVectors(this._panEnd,this._panStart).multiplyScalar(this.dynamicDampingFactor))}}_rotateCamera(){Tp.set(this._moveCurr.x-this._movePrev.x,this._moveCurr.y-this._movePrev.y,0);let t=Tp.length();t?(this._eye.copy(this.object.position).sub(this.target),oA.copy(this._eye).normalize(),Mp.copy(this.object.up).normalize(),J0.crossVectors(Mp,oA).normalize(),Mp.setLength(this._moveCurr.y-this._movePrev.y),J0.setLength(this._moveCurr.x-this._movePrev.x),Tp.copy(Mp.add(J0)),Q0.crossVectors(Tp,this._eye).normalize(),t*=this.rotateSpeed,gl.setFromAxisAngle(Q0,t),this._eye.applyQuaternion(gl),this.object.up.applyQuaternion(gl),this._lastAxis.copy(Q0),this._lastAngle=t):!this.staticMoving&&this._lastAngle&&(this._lastAngle*=Math.sqrt(1-this.dynamicDampingFactor),this._eye.copy(this.object.position).sub(this.target),gl.setFromAxisAngle(this._lastAxis,this._lastAngle),this._eye.applyQuaternion(gl),this.object.up.applyQuaternion(gl)),this._movePrev.copy(this._moveCurr)}_zoomCamera(){let t;this.state===Ae.TOUCH_ZOOM_PAN?(t=this._touchZoomDistanceStart/this._touchZoomDistanceEnd,this._touchZoomDistanceStart=this._touchZoomDistanceEnd,this.object.isPerspectiveCamera?this._eye.multiplyScalar(t):this.object.isOrthographicCamera?(this.object.zoom=ox.clamp(this.object.zoom/t,this.minZoom,this.maxZoom),this._lastZoom!==this.object.zoom&&this.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")):(t=1+(this._zoomEnd.y-this._zoomStart.y)*this.zoomSpeed,t!==1&&t>0&&(this.object.isPerspectiveCamera?this._eye.multiplyScalar(t):this.object.isOrthographicCamera?(this.object.zoom=ox.clamp(this.object.zoom/t,this.minZoom,this.maxZoom),this._lastZoom!==this.object.zoom&&this.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")),this.staticMoving?this._zoomStart.copy(this._zoomEnd):this._zoomStart.y+=(this._zoomEnd.y-this._zoomStart.y)*this.dynamicDampingFactor)}_getMouseOnScreen(t,e){return bp.set((t-this.screen.left)/this.screen.width,(e-this.screen.top)/this.screen.height),bp}_getMouseOnCircle(t,e){return bp.set((t-this.screen.width*.5-this.screen.left)/(this.screen.width*.5),(this.screen.height+2*(this.screen.top-e))/this.screen.width),bp}_addPointer(t){this._pointers.push(t)}_removePointer(t){delete this._pointerPositions[t.pointerId];for(let e=0;e<this._pointers.length;e++)if(this._pointers[e].pointerId==t.pointerId){this._pointers.splice(e,1);return}}_trackPointer(t){let e=this._pointerPositions[t.pointerId];e===void 0&&(e=new qt,this._pointerPositions[t.pointerId]=e),e.set(t.pageX,t.pageY)}_getSecondPointerPosition(t){const e=t.pointerId===this._pointers[0].pointerId?this._pointers[1]:this._pointers[0];return this._pointerPositions[e.pointerId]}_checkDistances(){(!this.noZoom||!this.noPan)&&(this._eye.lengthSq()>this.maxDistance*this.maxDistance&&(this.object.position.addVectors(this.target,this._eye.setLength(this.maxDistance)),this._zoomStart.copy(this._zoomEnd)),this._eye.lengthSq()<this.minDistance*this.minDistance&&(this.object.position.addVectors(this.target,this._eye.setLength(this.minDistance)),this._zoomStart.copy(this._zoomEnd)))}}function dQ(s){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(s.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),this._addPointer(s),s.pointerType==="touch"?this._onTouchStart(s):this._onMouseDown(s))}function fQ(s){this.enabled!==!1&&(s.pointerType==="touch"?this._onTouchMove(s):this._onMouseMove(s))}function pQ(s){this.enabled!==!1&&(s.pointerType==="touch"?this._onTouchEnd(s):this._onMouseUp(),this._removePointer(s),this._pointers.length===0&&(this.domElement.releasePointerCapture(s.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp)))}function mQ(s){this._removePointer(s)}function gQ(){this.enabled!==!1&&(this.keyState=Ae.NONE,window.addEventListener("keydown",this._onKeyDown))}function _Q(s){this.enabled!==!1&&(window.removeEventListener("keydown",this._onKeyDown),this.keyState===Ae.NONE&&(s.code===this.keys[Ae.ROTATE]&&!this.noRotate?this.keyState=Ae.ROTATE:s.code===this.keys[Ae.ZOOM]&&!this.noZoom?this.keyState=Ae.ZOOM:s.code===this.keys[Ae.PAN]&&!this.noPan&&(this.keyState=Ae.PAN)))}function yQ(s){let t;switch(s.button){case 0:t=this.mouseButtons.LEFT;break;case 1:t=this.mouseButtons.MIDDLE;break;case 2:t=this.mouseButtons.RIGHT;break;default:t=-1}switch(t){case In.DOLLY:this.state=Ae.ZOOM;break;case In.ROTATE:this.state=Ae.ROTATE;break;case In.PAN:this.state=Ae.PAN;break;default:this.state=Ae.NONE}const e=this.keyState!==Ae.NONE?this.keyState:this.state;e===Ae.ROTATE&&!this.noRotate?(this._moveCurr.copy(this._getMouseOnCircle(s.pageX,s.pageY)),this._movePrev.copy(this._moveCurr)):e===Ae.ZOOM&&!this.noZoom?(this._zoomStart.copy(this._getMouseOnScreen(s.pageX,s.pageY)),this._zoomEnd.copy(this._zoomStart)):e===Ae.PAN&&!this.noPan&&(this._panStart.copy(this._getMouseOnScreen(s.pageX,s.pageY)),this._panEnd.copy(this._panStart)),this.dispatchEvent(mS)}function xQ(s){const t=this.keyState!==Ae.NONE?this.keyState:this.state;t===Ae.ROTATE&&!this.noRotate?(this._movePrev.copy(this._moveCurr),this._moveCurr.copy(this._getMouseOnCircle(s.pageX,s.pageY))):t===Ae.ZOOM&&!this.noZoom?this._zoomEnd.copy(this._getMouseOnScreen(s.pageX,s.pageY)):t===Ae.PAN&&!this.noPan&&this._panEnd.copy(this._getMouseOnScreen(s.pageX,s.pageY))}function vQ(){this.state=Ae.NONE,this.dispatchEvent(gS)}function bQ(s){if(this.enabled!==!1&&this.noZoom!==!0){switch(s.preventDefault(),s.deltaMode){case 2:this._zoomStart.y-=s.deltaY*.025;break;case 1:this._zoomStart.y-=s.deltaY*.01;break;default:this._zoomStart.y-=s.deltaY*25e-5;break}this.dispatchEvent(mS),this.dispatchEvent(gS)}}function SQ(s){this.enabled!==!1&&s.preventDefault()}function MQ(s){switch(this._trackPointer(s),this._pointers.length){case 1:this.state=Ae.TOUCH_ROTATE,this._moveCurr.copy(this._getMouseOnCircle(this._pointers[0].pageX,this._pointers[0].pageY)),this._movePrev.copy(this._moveCurr);break;default:this.state=Ae.TOUCH_ZOOM_PAN;const t=this._pointers[0].pageX-this._pointers[1].pageX,e=this._pointers[0].pageY-this._pointers[1].pageY;this._touchZoomDistanceEnd=this._touchZoomDistanceStart=Math.sqrt(t*t+e*e);const n=(this._pointers[0].pageX+this._pointers[1].pageX)/2,i=(this._pointers[0].pageY+this._pointers[1].pageY)/2;this._panStart.copy(this._getMouseOnScreen(n,i)),this._panEnd.copy(this._panStart);break}this.dispatchEvent(mS)}function TQ(s){switch(this._trackPointer(s),this._pointers.length){case 1:this._movePrev.copy(this._moveCurr),this._moveCurr.copy(this._getMouseOnCircle(s.pageX,s.pageY));break;default:const t=this._getSecondPointerPosition(s),e=s.pageX-t.x,n=s.pageY-t.y;this._touchZoomDistanceEnd=Math.sqrt(e*e+n*n);const i=(s.pageX+t.x)/2,r=(s.pageY+t.y)/2;this._panEnd.copy(this._getMouseOnScreen(i,r));break}}function wQ(s){switch(this._pointers.length){case 0:this.state=Ae.NONE;break;case 1:this.state=Ae.TOUCH_ROTATE,this._moveCurr.copy(this._getMouseOnCircle(s.pageX,s.pageY)),this._movePrev.copy(this._moveCurr);break;case 2:this.state=Ae.TOUCH_ZOOM_PAN;for(let t=0;t<this._pointers.length;t++)if(this._pointers[t].pointerId!==s.pointerId){const e=this._pointerPositions[this._pointers[t].pointerId];this._moveCurr.copy(this._getMouseOnCircle(e.x,e.y)),this._movePrev.copy(this._moveCurr);break}break}this.dispatchEvent(gS)}const aA={type:"change"},_S={type:"start"},sP={type:"end"},wp=new rb,cA=new Or,AQ=Math.cos(70*ox.DEG2RAD),wn=new X,bi=2*Math.PI,Le={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},ty=1e-6;class EQ extends fg{constructor(t,e=null){super(t,e),this.state=Le.NONE,this.enabled=!0,this.target=new X,this.cursor=new X,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:In.ROTATE,MIDDLE:In.DOLLY,RIGHT:In.PAN},this.touches={ONE:$r.ROTATE,TWO:$r.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this._lastPosition=new X,this._lastQuaternion=new zs,this._lastTargetPosition=new X,this._quat=new zs().setFromUnitVectors(t.up,new X(0,1,0)),this._quatInverse=this._quat.clone().invert(),this._spherical=new hx,this._sphericalDelta=new hx,this._scale=1,this._panOffset=new X,this._rotateStart=new qt,this._rotateEnd=new qt,this._rotateDelta=new qt,this._panStart=new qt,this._panEnd=new qt,this._panDelta=new qt,this._dollyStart=new qt,this._dollyEnd=new qt,this._dollyDelta=new qt,this._dollyDirection=new X,this._mouse=new qt,this._performCursorZoom=!1,this._pointers=[],this._pointerPositions={},this._controlActive=!1,this._onPointerMove=RQ.bind(this),this._onPointerDown=CQ.bind(this),this._onPointerUp=NQ.bind(this),this._onContextMenu=BQ.bind(this),this._onMouseWheel=IQ.bind(this),this._onKeyDown=FQ.bind(this),this._onTouchStart=OQ.bind(this),this._onTouchMove=LQ.bind(this),this._onMouseDown=PQ.bind(this),this._onMouseMove=DQ.bind(this),this._interceptControlDown=UQ.bind(this),this._interceptControlUp=kQ.bind(this),this.domElement!==null&&this.connect(),this.update()}connect(){this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerUp),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.getRootNode().addEventListener("keydown",this._interceptControlDown,{passive:!0,capture:!0}),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerUp),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.stopListenToKeyEvents(),this.domElement.getRootNode().removeEventListener("keydown",this._interceptControlDown,{capture:!0}),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}getPolarAngle(){return this._spherical.phi}getAzimuthalAngle(){return this._spherical.theta}getDistance(){return this.object.position.distanceTo(this.target)}listenToKeyEvents(t){t.addEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=t}stopListenToKeyEvents(){this._domElementKeyEvents!==null&&(this._domElementKeyEvents.removeEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=null)}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(aA),this.update(),this.state=Le.NONE}update(t=null){const e=this.object.position;wn.copy(e).sub(this.target),wn.applyQuaternion(this._quat),this._spherical.setFromVector3(wn),this.autoRotate&&this.state===Le.NONE&&this._rotateLeft(this._getAutoRotationAngle(t)),this.enableDamping?(this._spherical.theta+=this._sphericalDelta.theta*this.dampingFactor,this._spherical.phi+=this._sphericalDelta.phi*this.dampingFactor):(this._spherical.theta+=this._sphericalDelta.theta,this._spherical.phi+=this._sphericalDelta.phi);let n=this.minAzimuthAngle,i=this.maxAzimuthAngle;isFinite(n)&&isFinite(i)&&(n<-Math.PI?n+=bi:n>Math.PI&&(n-=bi),i<-Math.PI?i+=bi:i>Math.PI&&(i-=bi),n<=i?this._spherical.theta=Math.max(n,Math.min(i,this._spherical.theta)):this._spherical.theta=this._spherical.theta>(n+i)/2?Math.max(n,this._spherical.theta):Math.min(i,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi)),this._spherical.makeSafe(),this.enableDamping===!0?this.target.addScaledVector(this._panOffset,this.dampingFactor):this.target.add(this._panOffset),this.target.sub(this.cursor),this.target.clampLength(this.minTargetRadius,this.maxTargetRadius),this.target.add(this.cursor);let r=!1;if(this.zoomToCursor&&this._performCursorZoom||this.object.isOrthographicCamera)this._spherical.radius=this._clampDistance(this._spherical.radius);else{const o=this._spherical.radius;this._spherical.radius=this._clampDistance(this._spherical.radius*this._scale),r=o!=this._spherical.radius}if(wn.setFromSpherical(this._spherical),wn.applyQuaternion(this._quatInverse),e.copy(this.target).add(wn),this.object.lookAt(this.target),this.enableDamping===!0?(this._sphericalDelta.theta*=1-this.dampingFactor,this._sphericalDelta.phi*=1-this.dampingFactor,this._panOffset.multiplyScalar(1-this.dampingFactor)):(this._sphericalDelta.set(0,0,0),this._panOffset.set(0,0,0)),this.zoomToCursor&&this._performCursorZoom){let o=null;if(this.object.isPerspectiveCamera){const a=wn.length();o=this._clampDistance(a*this._scale);const c=a-o;this.object.position.addScaledVector(this._dollyDirection,c),this.object.updateMatrixWorld(),r=!!c}else if(this.object.isOrthographicCamera){const a=new X(this._mouse.x,this._mouse.y,0);a.unproject(this.object);const c=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),this.object.updateProjectionMatrix(),r=c!==this.object.zoom;const l=new X(this._mouse.x,this._mouse.y,0);l.unproject(this.object),this.object.position.sub(l).add(a),this.object.updateMatrixWorld(),o=wn.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),this.zoomToCursor=!1;o!==null&&(this.screenSpacePanning?this.target.set(0,0,-1).transformDirection(this.object.matrix).multiplyScalar(o).add(this.object.position):(wp.origin.copy(this.object.position),wp.direction.set(0,0,-1).transformDirection(this.object.matrix),Math.abs(this.object.up.dot(wp.direction))<AQ?this.object.lookAt(this.target):(cA.setFromNormalAndCoplanarPoint(this.object.up,this.target),wp.intersectPlane(cA,this.target))))}else if(this.object.isOrthographicCamera){const o=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),o!==this.object.zoom&&(this.object.updateProjectionMatrix(),r=!0)}return this._scale=1,this._performCursorZoom=!1,r||this._lastPosition.distanceToSquared(this.object.position)>ty||8*(1-this._lastQuaternion.dot(this.object.quaternion))>ty||this._lastTargetPosition.distanceToSquared(this.target)>ty?(this.dispatchEvent(aA),this._lastPosition.copy(this.object.position),this._lastQuaternion.copy(this.object.quaternion),this._lastTargetPosition.copy(this.target),!0):!1}_getAutoRotationAngle(t){return t!==null?bi/60*this.autoRotateSpeed*t:bi/60/60*this.autoRotateSpeed}_getZoomScale(t){const e=Math.abs(t*.01);return Math.pow(.95,this.zoomSpeed*e)}_rotateLeft(t){this._sphericalDelta.theta-=t}_rotateUp(t){this._sphericalDelta.phi-=t}_panLeft(t,e){wn.setFromMatrixColumn(e,0),wn.multiplyScalar(-t),this._panOffset.add(wn)}_panUp(t,e){this.screenSpacePanning===!0?wn.setFromMatrixColumn(e,1):(wn.setFromMatrixColumn(e,0),wn.crossVectors(this.object.up,wn)),wn.multiplyScalar(t),this._panOffset.add(wn)}_pan(t,e){const n=this.domElement;if(this.object.isPerspectiveCamera){const i=this.object.position;wn.copy(i).sub(this.target);let r=wn.length();r*=Math.tan(this.object.fov/2*Math.PI/180),this._panLeft(2*t*r/n.clientHeight,this.object.matrix),this._panUp(2*e*r/n.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this._panLeft(t*(this.object.right-this.object.left)/this.object.zoom/n.clientWidth,this.object.matrix),this._panUp(e*(this.object.top-this.object.bottom)/this.object.zoom/n.clientHeight,this.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),this.enablePan=!1)}_dollyOut(t){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale/=t:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_dollyIn(t){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale*=t:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_updateZoomParameters(t,e){if(!this.zoomToCursor)return;this._performCursorZoom=!0;const n=this.domElement.getBoundingClientRect(),i=t-n.left,r=e-n.top,o=n.width,a=n.height;this._mouse.x=i/o*2-1,this._mouse.y=-(r/a)*2+1,this._dollyDirection.set(this._mouse.x,this._mouse.y,1).unproject(this.object).sub(this.object.position).normalize()}_clampDistance(t){return Math.max(this.minDistance,Math.min(this.maxDistance,t))}_handleMouseDownRotate(t){this._rotateStart.set(t.clientX,t.clientY)}_handleMouseDownDolly(t){this._updateZoomParameters(t.clientX,t.clientX),this._dollyStart.set(t.clientX,t.clientY)}_handleMouseDownPan(t){this._panStart.set(t.clientX,t.clientY)}_handleMouseMoveRotate(t){this._rotateEnd.set(t.clientX,t.clientY),this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const e=this.domElement;this._rotateLeft(bi*this._rotateDelta.x/e.clientHeight),this._rotateUp(bi*this._rotateDelta.y/e.clientHeight),this._rotateStart.copy(this._rotateEnd),this.update()}_handleMouseMoveDolly(t){this._dollyEnd.set(t.clientX,t.clientY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale(this._dollyDelta.y)):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale(this._dollyDelta.y)),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(t){this._panEnd.set(t.clientX,t.clientY),this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseWheel(t){this._updateZoomParameters(t.clientX,t.clientY),t.deltaY<0?this._dollyIn(this._getZoomScale(t.deltaY)):t.deltaY>0&&this._dollyOut(this._getZoomScale(t.deltaY)),this.update()}_handleKeyDown(t){let e=!1;switch(t.code){case this.keys.UP:t.ctrlKey||t.metaKey||t.shiftKey?this._rotateUp(bi*this.rotateSpeed/this.domElement.clientHeight):this._pan(0,this.keyPanSpeed),e=!0;break;case this.keys.BOTTOM:t.ctrlKey||t.metaKey||t.shiftKey?this._rotateUp(-bi*this.rotateSpeed/this.domElement.clientHeight):this._pan(0,-this.keyPanSpeed),e=!0;break;case this.keys.LEFT:t.ctrlKey||t.metaKey||t.shiftKey?this._rotateLeft(bi*this.rotateSpeed/this.domElement.clientHeight):this._pan(this.keyPanSpeed,0),e=!0;break;case this.keys.RIGHT:t.ctrlKey||t.metaKey||t.shiftKey?this._rotateLeft(-bi*this.rotateSpeed/this.domElement.clientHeight):this._pan(-this.keyPanSpeed,0),e=!0;break}e&&(t.preventDefault(),this.update())}_handleTouchStartRotate(t){if(this._pointers.length===1)this._rotateStart.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),n=.5*(t.pageX+e.x),i=.5*(t.pageY+e.y);this._rotateStart.set(n,i)}}_handleTouchStartPan(t){if(this._pointers.length===1)this._panStart.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),n=.5*(t.pageX+e.x),i=.5*(t.pageY+e.y);this._panStart.set(n,i)}}_handleTouchStartDolly(t){const e=this._getSecondPointerPosition(t),n=t.pageX-e.x,i=t.pageY-e.y,r=Math.sqrt(n*n+i*i);this._dollyStart.set(0,r)}_handleTouchStartDollyPan(t){this.enableZoom&&this._handleTouchStartDolly(t),this.enablePan&&this._handleTouchStartPan(t)}_handleTouchStartDollyRotate(t){this.enableZoom&&this._handleTouchStartDolly(t),this.enableRotate&&this._handleTouchStartRotate(t)}_handleTouchMoveRotate(t){if(this._pointers.length==1)this._rotateEnd.set(t.pageX,t.pageY);else{const n=this._getSecondPointerPosition(t),i=.5*(t.pageX+n.x),r=.5*(t.pageY+n.y);this._rotateEnd.set(i,r)}this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const e=this.domElement;this._rotateLeft(bi*this._rotateDelta.x/e.clientHeight),this._rotateUp(bi*this._rotateDelta.y/e.clientHeight),this._rotateStart.copy(this._rotateEnd)}_handleTouchMovePan(t){if(this._pointers.length===1)this._panEnd.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),n=.5*(t.pageX+e.x),i=.5*(t.pageY+e.y);this._panEnd.set(n,i)}this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd)}_handleTouchMoveDolly(t){const e=this._getSecondPointerPosition(t),n=t.pageX-e.x,i=t.pageY-e.y,r=Math.sqrt(n*n+i*i);this._dollyEnd.set(0,r),this._dollyDelta.set(0,Math.pow(this._dollyEnd.y/this._dollyStart.y,this.zoomSpeed)),this._dollyOut(this._dollyDelta.y),this._dollyStart.copy(this._dollyEnd);const o=(t.pageX+e.x)*.5,a=(t.pageY+e.y)*.5;this._updateZoomParameters(o,a)}_handleTouchMoveDollyPan(t){this.enableZoom&&this._handleTouchMoveDolly(t),this.enablePan&&this._handleTouchMovePan(t)}_handleTouchMoveDollyRotate(t){this.enableZoom&&this._handleTouchMoveDolly(t),this.enableRotate&&this._handleTouchMoveRotate(t)}_addPointer(t){this._pointers.push(t.pointerId)}_removePointer(t){delete this._pointerPositions[t.pointerId];for(let e=0;e<this._pointers.length;e++)if(this._pointers[e]==t.pointerId){this._pointers.splice(e,1);return}}_isTrackingPointer(t){for(let e=0;e<this._pointers.length;e++)if(this._pointers[e]==t.pointerId)return!0;return!1}_trackPointer(t){let e=this._pointerPositions[t.pointerId];e===void 0&&(e=new qt,this._pointerPositions[t.pointerId]=e),e.set(t.pageX,t.pageY)}_getSecondPointerPosition(t){const e=t.pointerId===this._pointers[0]?this._pointers[1]:this._pointers[0];return this._pointerPositions[e]}_customWheelEvent(t){const e=t.deltaMode,n={clientX:t.clientX,clientY:t.clientY,deltaY:t.deltaY};switch(e){case 1:n.deltaY*=16;break;case 2:n.deltaY*=100;break}return t.ctrlKey&&!this._controlActive&&(n.deltaY*=10),n}}function CQ(s){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(s.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),!this._isTrackingPointer(s)&&(this._addPointer(s),s.pointerType==="touch"?this._onTouchStart(s):this._onMouseDown(s)))}function RQ(s){this.enabled!==!1&&(s.pointerType==="touch"?this._onTouchMove(s):this._onMouseMove(s))}function NQ(s){switch(this._removePointer(s),this._pointers.length){case 0:this.domElement.releasePointerCapture(s.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.dispatchEvent(sP),this.state=Le.NONE;break;case 1:const t=this._pointers[0],e=this._pointerPositions[t];this._onTouchStart({pointerId:t,pageX:e.x,pageY:e.y});break}}function PQ(s){let t;switch(s.button){case 0:t=this.mouseButtons.LEFT;break;case 1:t=this.mouseButtons.MIDDLE;break;case 2:t=this.mouseButtons.RIGHT;break;default:t=-1}switch(t){case In.DOLLY:if(this.enableZoom===!1)return;this._handleMouseDownDolly(s),this.state=Le.DOLLY;break;case In.ROTATE:if(s.ctrlKey||s.metaKey||s.shiftKey){if(this.enablePan===!1)return;this._handleMouseDownPan(s),this.state=Le.PAN}else{if(this.enableRotate===!1)return;this._handleMouseDownRotate(s),this.state=Le.ROTATE}break;case In.PAN:if(s.ctrlKey||s.metaKey||s.shiftKey){if(this.enableRotate===!1)return;this._handleMouseDownRotate(s),this.state=Le.ROTATE}else{if(this.enablePan===!1)return;this._handleMouseDownPan(s),this.state=Le.PAN}break;default:this.state=Le.NONE}this.state!==Le.NONE&&this.dispatchEvent(_S)}function DQ(s){switch(this.state){case Le.ROTATE:if(this.enableRotate===!1)return;this._handleMouseMoveRotate(s);break;case Le.DOLLY:if(this.enableZoom===!1)return;this._handleMouseMoveDolly(s);break;case Le.PAN:if(this.enablePan===!1)return;this._handleMouseMovePan(s);break}}function IQ(s){this.enabled===!1||this.enableZoom===!1||this.state!==Le.NONE||(s.preventDefault(),this.dispatchEvent(_S),this._handleMouseWheel(this._customWheelEvent(s)),this.dispatchEvent(sP))}function FQ(s){this.enabled===!1||this.enablePan===!1||this._handleKeyDown(s)}function OQ(s){switch(this._trackPointer(s),this._pointers.length){case 1:switch(this.touches.ONE){case $r.ROTATE:if(this.enableRotate===!1)return;this._handleTouchStartRotate(s),this.state=Le.TOUCH_ROTATE;break;case $r.PAN:if(this.enablePan===!1)return;this._handleTouchStartPan(s),this.state=Le.TOUCH_PAN;break;default:this.state=Le.NONE}break;case 2:switch(this.touches.TWO){case $r.DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchStartDollyPan(s),this.state=Le.TOUCH_DOLLY_PAN;break;case $r.DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchStartDollyRotate(s),this.state=Le.TOUCH_DOLLY_ROTATE;break;default:this.state=Le.NONE}break;default:this.state=Le.NONE}this.state!==Le.NONE&&this.dispatchEvent(_S)}function LQ(s){switch(this._trackPointer(s),this.state){case Le.TOUCH_ROTATE:if(this.enableRotate===!1)return;this._handleTouchMoveRotate(s),this.update();break;case Le.TOUCH_PAN:if(this.enablePan===!1)return;this._handleTouchMovePan(s),this.update();break;case Le.TOUCH_DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchMoveDollyPan(s),this.update();break;case Le.TOUCH_DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchMoveDollyRotate(s),this.update();break;default:this.state=Le.NONE}}function BQ(s){this.enabled!==!1&&s.preventDefault()}function UQ(s){s.key==="Control"&&(this._controlActive=!0,this.domElement.getRootNode().addEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}function kQ(s){s.key==="Control"&&(this._controlActive=!1,this.domElement.getRootNode().removeEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}const zQ={type:"change"},lA=1e-6,hA=new zs;class VQ extends fg{constructor(t,e=null){super(t,e),this.movementSpeed=1,this.rollSpeed=.005,this.dragToLook=!1,this.autoForward=!1,this._moveState={up:0,down:0,left:0,right:0,forward:0,back:0,pitchUp:0,pitchDown:0,yawLeft:0,yawRight:0,rollLeft:0,rollRight:0},this._moveVector=new X(0,0,0),this._rotationVector=new X(0,0,0),this._lastQuaternion=new zs,this._lastPosition=new X,this._status=0,this._onKeyDown=GQ.bind(this),this._onKeyUp=HQ.bind(this),this._onPointerMove=WQ.bind(this),this._onPointerDown=$Q.bind(this),this._onPointerUp=qQ.bind(this),this._onPointerCancel=jQ.bind(this),this._onContextMenu=XQ.bind(this),e!==null&&this.connect()}connect(){window.addEventListener("keydown",this._onKeyDown),window.addEventListener("keyup",this._onKeyUp),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointerup",this._onPointerUp),this.domElement.addEventListener("pointercancel",this._onPointerCancel),this.domElement.addEventListener("contextmenu",this._onContextMenu)}disconnect(){window.removeEventListener("keydown",this._onKeyDown),window.removeEventListener("keyup",this._onKeyUp),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerCancel),this.domElement.removeEventListener("contextmenu",this._onContextMenu)}dispose(){this.disconnect()}update(t){if(this.enabled===!1)return;const e=this.object,n=t*this.movementSpeed,i=t*this.rollSpeed;e.translateX(this._moveVector.x*n),e.translateY(this._moveVector.y*n),e.translateZ(this._moveVector.z*n),hA.set(this._rotationVector.x*i,this._rotationVector.y*i,this._rotationVector.z*i,1).normalize(),e.quaternion.multiply(hA),(this._lastPosition.distanceToSquared(e.position)>lA||8*(1-this._lastQuaternion.dot(e.quaternion))>lA)&&(this.dispatchEvent(zQ),this._lastQuaternion.copy(e.quaternion),this._lastPosition.copy(e.position))}_updateMovementVector(){const t=this._moveState.forward||this.autoForward&&!this._moveState.back?1:0;this._moveVector.x=-this._moveState.left+this._moveState.right,this._moveVector.y=-this._moveState.down+this._moveState.up,this._moveVector.z=-t+this._moveState.back}_updateRotationVector(){this._rotationVector.x=-this._moveState.pitchDown+this._moveState.pitchUp,this._rotationVector.y=-this._moveState.yawRight+this._moveState.yawLeft,this._rotationVector.z=-this._moveState.rollRight+this._moveState.rollLeft}_getContainerDimensions(){return this.domElement!=document?{size:[this.domElement.offsetWidth,this.domElement.offsetHeight],offset:[this.domElement.offsetLeft,this.domElement.offsetTop]}:{size:[window.innerWidth,window.innerHeight],offset:[0,0]}}}function GQ(s){if(!(s.altKey||this.enabled===!1)){switch(s.code){case"ShiftLeft":case"ShiftRight":this.movementSpeedMultiplier=.1;break;case"KeyW":this._moveState.forward=1;break;case"KeyS":this._moveState.back=1;break;case"KeyA":this._moveState.left=1;break;case"KeyD":this._moveState.right=1;break;case"KeyR":this._moveState.up=1;break;case"KeyF":this._moveState.down=1;break;case"ArrowUp":this._moveState.pitchUp=1;break;case"ArrowDown":this._moveState.pitchDown=1;break;case"ArrowLeft":this._moveState.yawLeft=1;break;case"ArrowRight":this._moveState.yawRight=1;break;case"KeyQ":this._moveState.rollLeft=1;break;case"KeyE":this._moveState.rollRight=1;break}this._updateMovementVector(),this._updateRotationVector()}}function HQ(s){if(this.enabled!==!1){switch(s.code){case"ShiftLeft":case"ShiftRight":this.movementSpeedMultiplier=1;break;case"KeyW":this._moveState.forward=0;break;case"KeyS":this._moveState.back=0;break;case"KeyA":this._moveState.left=0;break;case"KeyD":this._moveState.right=0;break;case"KeyR":this._moveState.up=0;break;case"KeyF":this._moveState.down=0;break;case"ArrowUp":this._moveState.pitchUp=0;break;case"ArrowDown":this._moveState.pitchDown=0;break;case"ArrowLeft":this._moveState.yawLeft=0;break;case"ArrowRight":this._moveState.yawRight=0;break;case"KeyQ":this._moveState.rollLeft=0;break;case"KeyE":this._moveState.rollRight=0;break}this._updateMovementVector(),this._updateRotationVector()}}function $Q(s){if(this.enabled!==!1)if(this.dragToLook)this._status++;else{switch(s.button){case 0:this._moveState.forward=1;break;case 2:this._moveState.back=1;break}this._updateMovementVector()}}function WQ(s){if(this.enabled!==!1&&(!this.dragToLook||this._status>0)){const t=this._getContainerDimensions(),e=t.size[0]/2,n=t.size[1]/2;this._moveState.yawLeft=-(s.pageX-t.offset[0]-e)/e,this._moveState.pitchDown=(s.pageY-t.offset[1]-n)/n,this._updateRotationVector()}}function qQ(s){if(this.enabled!==!1){if(this.dragToLook)this._status--,this._moveState.yawLeft=this._moveState.pitchDown=0;else{switch(s.button){case 0:this._moveState.forward=0;break;case 2:this._moveState.back=0;break}this._updateMovementVector()}this._updateRotationVector()}}function jQ(){this.enabled!==!1&&(this.dragToLook?(this._status=0,this._moveState.yawLeft=this._moveState.pitchDown=0):(this._moveState.forward=0,this._moveState.back=0,this._updateMovementVector()),this._updateRotationVector())}function XQ(s){this.enabled!==!1&&s.preventDefault()}const YQ={name:"CopyShader",uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform float opacity;

		uniform sampler2D tDiffuse;

		varying vec2 vUv;

		void main() {

			vec4 texel = texture2D( tDiffuse, vUv );
			gl_FragColor = opacity * texel;


		}`};class Dg{constructor(){this.isPass=!0,this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}dispose(){}}const ZQ=new hb(-1,1,1,-1,0,1);class KQ extends Sc{constructor(){super(),this.setAttribute("position",new os([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new os([0,2,0,0,2,0],2))}}const QQ=new KQ;class JQ{constructor(t){this._mesh=new Is(QQ,t)}dispose(){this._mesh.geometry.dispose()}render(t){t.render(this._mesh,ZQ)}get material(){return this._mesh.material}set material(t){this._mesh.material=t}}class tJ extends Dg{constructor(t,e){super(),this.textureID=e!==void 0?e:"tDiffuse",t instanceof ir?(this.uniforms=t.uniforms,this.material=t):t&&(this.uniforms=SC.clone(t.uniforms),this.material=new ir({name:t.name!==void 0?t.name:"unspecified",defines:Object.assign({},t.defines),uniforms:this.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader})),this.fsQuad=new JQ(this.material)}render(t,e,n){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=n.texture),this.fsQuad.material=this.material,this.renderToScreen?(t.setRenderTarget(null),this.fsQuad.render(t)):(t.setRenderTarget(e),this.clear&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),this.fsQuad.render(t))}dispose(){this.material.dispose(),this.fsQuad.dispose()}}class uA extends Dg{constructor(t,e){super(),this.scene=t,this.camera=e,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(t,e,n){const i=t.getContext(),r=t.state;r.buffers.color.setMask(!1),r.buffers.depth.setMask(!1),r.buffers.color.setLocked(!0),r.buffers.depth.setLocked(!0);let o,a;this.inverse?(o=0,a=1):(o=1,a=0),r.buffers.stencil.setTest(!0),r.buffers.stencil.setOp(i.REPLACE,i.REPLACE,i.REPLACE),r.buffers.stencil.setFunc(i.ALWAYS,o,4294967295),r.buffers.stencil.setClear(a),r.buffers.stencil.setLocked(!0),t.setRenderTarget(n),this.clear&&t.clear(),t.render(this.scene,this.camera),t.setRenderTarget(e),this.clear&&t.clear(),t.render(this.scene,this.camera),r.buffers.color.setLocked(!1),r.buffers.depth.setLocked(!1),r.buffers.color.setMask(!0),r.buffers.depth.setMask(!0),r.buffers.stencil.setLocked(!1),r.buffers.stencil.setFunc(i.EQUAL,1,4294967295),r.buffers.stencil.setOp(i.KEEP,i.KEEP,i.KEEP),r.buffers.stencil.setLocked(!0)}}class eJ extends Dg{constructor(){super(),this.needsSwap=!1}render(t){t.state.buffers.stencil.setLocked(!1),t.state.buffers.stencil.setTest(!1)}}class nJ{constructor(t,e){if(this.renderer=t,this._pixelRatio=t.getPixelRatio(),e===void 0){const n=t.getSize(new qt);this._width=n.width,this._height=n.height,e=new ca(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:wh}),e.texture.name="EffectComposer.rt1"}else this._width=e.width,this._height=e.height;this.renderTarget1=e,this.renderTarget2=e.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],this.copyPass=new tJ(YQ),this.copyPass.material.blending=Zr,this.clock=new IC}swapBuffers(){const t=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=t}addPass(t){this.passes.push(t),t.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(t,e){this.passes.splice(e,0,t),t.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(t){const e=this.passes.indexOf(t);e!==-1&&this.passes.splice(e,1)}isLastEnabledPass(t){for(let e=t+1;e<this.passes.length;e++)if(this.passes[e].enabled)return!1;return!0}render(t){t===void 0&&(t=this.clock.getDelta());const e=this.renderer.getRenderTarget();let n=!1;for(let i=0,r=this.passes.length;i<r;i++){const o=this.passes[i];if(o.enabled!==!1){if(o.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(i),o.render(this.renderer,this.writeBuffer,this.readBuffer,t,n),o.needsSwap){if(n){const a=this.renderer.getContext(),c=this.renderer.state.buffers.stencil;c.setFunc(a.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,t),c.setFunc(a.EQUAL,1,4294967295)}this.swapBuffers()}uA!==void 0&&(o instanceof uA?n=!0:o instanceof eJ&&(n=!1))}}this.renderer.setRenderTarget(e)}reset(t){if(t===void 0){const e=this.renderer.getSize(new qt);this._pixelRatio=this.renderer.getPixelRatio(),this._width=e.width,this._height=e.height,t=this.renderTarget1.clone(),t.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=t,this.renderTarget2=t.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(t,e){this._width=t,this._height=e;const n=this._width*this._pixelRatio,i=this._height*this._pixelRatio;this.renderTarget1.setSize(n,i),this.renderTarget2.setSize(n,i);for(let r=0;r<this.passes.length;r++)this.passes[r].setSize(n,i)}setPixelRatio(t){this._pixelRatio=t,this.setSize(this._width,this._height)}dispose(){this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.copyPass.dispose()}}class iJ extends Dg{constructor(t,e,n=null,i=null,r=null){super(),this.scene=t,this.camera=e,this.overrideMaterial=n,this.clearColor=i,this.clearAlpha=r,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new Ee}render(t,e,n){const i=t.autoClear;t.autoClear=!1;let r,o;this.overrideMaterial!==null&&(o=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor!==null&&(t.getClearColor(this._oldClearColor),t.setClearColor(this.clearColor,t.getClearAlpha())),this.clearAlpha!==null&&(r=t.getClearAlpha(),t.setClearAlpha(this.clearAlpha)),this.clearDepth==!0&&t.clearDepth(),t.setRenderTarget(this.renderToScreen?null:n),this.clear===!0&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),t.render(this.scene,this.camera),this.clearColor!==null&&t.setClearColor(this._oldClearColor),this.clearAlpha!==null&&t.setClearAlpha(r),this.overrideMaterial!==null&&(this.scene.overrideMaterial=o),t.autoClear=i}}function Pi(){return Pi=Object.assign?Object.assign.bind():function(s){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var n in e)({}).hasOwnProperty.call(e,n)&&(s[n]=e[n])}return s},Pi.apply(null,arguments)}function sJ(s){if(s===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return s}function md(s,t){return md=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,n){return e.__proto__=n,e},md(s,t)}function rJ(s,t){s.prototype=Object.create(t.prototype),s.prototype.constructor=s,md(s,t)}function ov(s){return ov=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},ov(s)}function oJ(s){try{return Function.toString.call(s).indexOf("[native code]")!==-1}catch{return typeof s=="function"}}function rP(){try{var s=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch{}return(rP=function(){return!!s})()}function aJ(s,t,e){if(rP())return Reflect.construct.apply(null,arguments);var n=[null];n.push.apply(n,t);var i=new(s.bind.apply(s,n));return e&&md(i,e.prototype),i}function av(s){var t=typeof Map=="function"?new Map:void 0;return av=function(n){if(n===null||!oJ(n))return n;if(typeof n!="function")throw new TypeError("Super expression must either be null or a function");if(t!==void 0){if(t.has(n))return t.get(n);t.set(n,i)}function i(){return aJ(n,arguments,ov(this).constructor)}return i.prototype=Object.create(n.prototype,{constructor:{value:i,enumerable:!1,writable:!0,configurable:!0}}),md(i,n)},av(s)}var tr=function(s){rJ(t,s);function t(e){var n;return n=s.call(this,"An error occurred. See https://github.com/styled-components/polished/blob/main/src/internalHelpers/errors.md#"+e+" for more information.")||this,sJ(n)}return t}(av(Error));function ey(s){return Math.round(s*255)}function cJ(s,t,e){return ey(s)+","+ey(t)+","+ey(e)}function gd(s,t,e,n){if(n===void 0&&(n=cJ),t===0)return n(e,e,e);var i=(s%360+360)%360/60,r=(1-Math.abs(2*e-1))*t,o=r*(1-Math.abs(i%2-1)),a=0,c=0,l=0;i>=0&&i<1?(a=r,c=o):i>=1&&i<2?(a=o,c=r):i>=2&&i<3?(c=r,l=o):i>=3&&i<4?(c=o,l=r):i>=4&&i<5?(a=o,l=r):i>=5&&i<6&&(a=r,l=o);var h=e-r/2,u=a+h,d=c+h,f=l+h;return n(u,d,f)}var dA={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"00ffff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"0000ff",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"00ffff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"ff00ff",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",rebeccapurple:"639",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"};function lJ(s){if(typeof s!="string")return s;var t=s.toLowerCase();return dA[t]?"#"+dA[t]:s}var hJ=/^#[a-fA-F0-9]{6}$/,uJ=/^#[a-fA-F0-9]{8}$/,dJ=/^#[a-fA-F0-9]{3}$/,fJ=/^#[a-fA-F0-9]{4}$/,ny=/^rgb\(\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*\)$/i,pJ=/^rgb(?:a)?\(\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*(?:,|\/)\s*([-+]?\d*[.]?\d+[%]?)\s*\)$/i,mJ=/^hsl\(\s*(\d{0,3}[.]?[0-9]+(?:deg)?)\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*\)$/i,gJ=/^hsl(?:a)?\(\s*(\d{0,3}[.]?[0-9]+(?:deg)?)\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*(?:,|\/)\s*([-+]?\d*[.]?\d+[%]?)\s*\)$/i;function yc(s){if(typeof s!="string")throw new tr(3);var t=lJ(s);if(t.match(hJ))return{red:parseInt(""+t[1]+t[2],16),green:parseInt(""+t[3]+t[4],16),blue:parseInt(""+t[5]+t[6],16)};if(t.match(uJ)){var e=parseFloat((parseInt(""+t[7]+t[8],16)/255).toFixed(2));return{red:parseInt(""+t[1]+t[2],16),green:parseInt(""+t[3]+t[4],16),blue:parseInt(""+t[5]+t[6],16),alpha:e}}if(t.match(dJ))return{red:parseInt(""+t[1]+t[1],16),green:parseInt(""+t[2]+t[2],16),blue:parseInt(""+t[3]+t[3],16)};if(t.match(fJ)){var n=parseFloat((parseInt(""+t[4]+t[4],16)/255).toFixed(2));return{red:parseInt(""+t[1]+t[1],16),green:parseInt(""+t[2]+t[2],16),blue:parseInt(""+t[3]+t[3],16),alpha:n}}var i=ny.exec(t);if(i)return{red:parseInt(""+i[1],10),green:parseInt(""+i[2],10),blue:parseInt(""+i[3],10)};var r=pJ.exec(t.substring(0,50));if(r)return{red:parseInt(""+r[1],10),green:parseInt(""+r[2],10),blue:parseInt(""+r[3],10),alpha:parseFloat(""+r[4])>1?parseFloat(""+r[4])/100:parseFloat(""+r[4])};var o=mJ.exec(t);if(o){var a=parseInt(""+o[1],10),c=parseInt(""+o[2],10)/100,l=parseInt(""+o[3],10)/100,h="rgb("+gd(a,c,l)+")",u=ny.exec(h);if(!u)throw new tr(4,t,h);return{red:parseInt(""+u[1],10),green:parseInt(""+u[2],10),blue:parseInt(""+u[3],10)}}var d=gJ.exec(t.substring(0,50));if(d){var f=parseInt(""+d[1],10),p=parseInt(""+d[2],10)/100,_=parseInt(""+d[3],10)/100,g="rgb("+gd(f,p,_)+")",m=ny.exec(g);if(!m)throw new tr(4,t,g);return{red:parseInt(""+m[1],10),green:parseInt(""+m[2],10),blue:parseInt(""+m[3],10),alpha:parseFloat(""+d[4])>1?parseFloat(""+d[4])/100:parseFloat(""+d[4])}}throw new tr(5)}function _J(s){var t=s.red/255,e=s.green/255,n=s.blue/255,i=Math.max(t,e,n),r=Math.min(t,e,n),o=(i+r)/2;if(i===r)return s.alpha!==void 0?{hue:0,saturation:0,lightness:o,alpha:s.alpha}:{hue:0,saturation:0,lightness:o};var a,c=i-r,l=o>.5?c/(2-i-r):c/(i+r);switch(i){case t:a=(e-n)/c+(e<n?6:0);break;case e:a=(n-t)/c+2;break;default:a=(t-e)/c+4;break}return a*=60,s.alpha!==void 0?{hue:a,saturation:l,lightness:o,alpha:s.alpha}:{hue:a,saturation:l,lightness:o}}function ya(s){return _J(yc(s))}var yJ=function(t){return t.length===7&&t[1]===t[2]&&t[3]===t[4]&&t[5]===t[6]?"#"+t[1]+t[3]+t[5]:t},cv=yJ;function ka(s){var t=s.toString(16);return t.length===1?"0"+t:t}function iy(s){return ka(Math.round(s*255))}function xJ(s,t,e){return cv("#"+iy(s)+iy(t)+iy(e))}function qm(s,t,e){return gd(s,t,e,xJ)}function vJ(s,t,e){if(typeof s=="number"&&typeof t=="number"&&typeof e=="number")return qm(s,t,e);if(typeof s=="object"&&t===void 0&&e===void 0)return qm(s.hue,s.saturation,s.lightness);throw new tr(1)}function bJ(s,t,e,n){if(typeof s=="number"&&typeof t=="number"&&typeof e=="number"&&typeof n=="number")return n>=1?qm(s,t,e):"rgba("+gd(s,t,e)+","+n+")";if(typeof s=="object"&&t===void 0&&e===void 0&&n===void 0)return s.alpha>=1?qm(s.hue,s.saturation,s.lightness):"rgba("+gd(s.hue,s.saturation,s.lightness)+","+s.alpha+")";throw new tr(2)}function lv(s,t,e){if(typeof s=="number"&&typeof t=="number"&&typeof e=="number")return cv("#"+ka(s)+ka(t)+ka(e));if(typeof s=="object"&&t===void 0&&e===void 0)return cv("#"+ka(s.red)+ka(s.green)+ka(s.blue));throw new tr(6)}function Ig(s,t,e,n){if(typeof s=="string"&&typeof t=="number"){var i=yc(s);return"rgba("+i.red+","+i.green+","+i.blue+","+t+")"}else{if(typeof s=="number"&&typeof t=="number"&&typeof e=="number"&&typeof n=="number")return n>=1?lv(s,t,e):"rgba("+s+","+t+","+e+","+n+")";if(typeof s=="object"&&t===void 0&&e===void 0&&n===void 0)return s.alpha>=1?lv(s.red,s.green,s.blue):"rgba("+s.red+","+s.green+","+s.blue+","+s.alpha+")"}throw new tr(7)}var SJ=function(t){return typeof t.red=="number"&&typeof t.green=="number"&&typeof t.blue=="number"&&(typeof t.alpha!="number"||typeof t.alpha>"u")},MJ=function(t){return typeof t.red=="number"&&typeof t.green=="number"&&typeof t.blue=="number"&&typeof t.alpha=="number"},TJ=function(t){return typeof t.hue=="number"&&typeof t.saturation=="number"&&typeof t.lightness=="number"&&(typeof t.alpha!="number"||typeof t.alpha>"u")},wJ=function(t){return typeof t.hue=="number"&&typeof t.saturation=="number"&&typeof t.lightness=="number"&&typeof t.alpha=="number"};function xa(s){if(typeof s!="object")throw new tr(8);if(MJ(s))return Ig(s);if(SJ(s))return lv(s);if(wJ(s))return bJ(s);if(TJ(s))return vJ(s);throw new tr(8)}function oP(s,t,e){return function(){var i=e.concat(Array.prototype.slice.call(arguments));return i.length>=t?s.apply(this,i):oP(s,t,i)}}function Zi(s){return oP(s,s.length,[])}function AJ(s,t){if(t==="transparent")return t;var e=ya(t);return xa(Pi({},e,{hue:e.hue+parseFloat(s)}))}Zi(AJ);function Bh(s,t,e){return Math.max(s,Math.min(t,e))}function EJ(s,t){if(t==="transparent")return t;var e=ya(t);return xa(Pi({},e,{lightness:Bh(0,1,e.lightness-parseFloat(s))}))}Zi(EJ);function CJ(s,t){if(t==="transparent")return t;var e=ya(t);return xa(Pi({},e,{saturation:Bh(0,1,e.saturation-parseFloat(s))}))}Zi(CJ);function RJ(s,t){if(t==="transparent")return t;var e=ya(t);return xa(Pi({},e,{lightness:Bh(0,1,e.lightness+parseFloat(s))}))}Zi(RJ);function NJ(s,t,e){if(t==="transparent")return e;if(e==="transparent")return t;if(s===0)return e;var n=yc(t),i=Pi({},n,{alpha:typeof n.alpha=="number"?n.alpha:1}),r=yc(e),o=Pi({},r,{alpha:typeof r.alpha=="number"?r.alpha:1}),a=i.alpha-o.alpha,c=parseFloat(s)*2-1,l=c*a===-1?c:c+a,h=1+c*a,u=(l/h+1)/2,d=1-u,f={red:Math.floor(i.red*u+o.red*d),green:Math.floor(i.green*u+o.green*d),blue:Math.floor(i.blue*u+o.blue*d),alpha:i.alpha*parseFloat(s)+o.alpha*(1-parseFloat(s))};return Ig(f)}var PJ=Zi(NJ),aP=PJ;function DJ(s,t){if(t==="transparent")return t;var e=yc(t),n=typeof e.alpha=="number"?e.alpha:1,i=Pi({},e,{alpha:Bh(0,1,(n*100+parseFloat(s)*100)/100)});return Ig(i)}var IJ=Zi(DJ),FJ=IJ;function OJ(s,t){if(t==="transparent")return t;var e=ya(t);return xa(Pi({},e,{saturation:Bh(0,1,e.saturation+parseFloat(s))}))}Zi(OJ);function LJ(s,t){return t==="transparent"?t:xa(Pi({},ya(t),{hue:parseFloat(s)}))}Zi(LJ);function BJ(s,t){return t==="transparent"?t:xa(Pi({},ya(t),{lightness:parseFloat(s)}))}Zi(BJ);function UJ(s,t){return t==="transparent"?t:xa(Pi({},ya(t),{saturation:parseFloat(s)}))}Zi(UJ);function kJ(s,t){return t==="transparent"?t:aP(parseFloat(s),"rgb(0, 0, 0)",t)}Zi(kJ);function zJ(s,t){return t==="transparent"?t:aP(parseFloat(s),"rgb(255, 255, 255)",t)}Zi(zJ);function VJ(s,t){if(t==="transparent")return t;var e=yc(t),n=typeof e.alpha=="number"?e.alpha:1,i=Pi({},e,{alpha:Bh(0,1,+(n*100-parseFloat(s)*100).toFixed(2)/100)});return Ig(i)}Zi(VJ);var ec=Object.freeze({Linear:Object.freeze({None:function(s){return s},In:function(s){return s},Out:function(s){return s},InOut:function(s){return s}}),Quadratic:Object.freeze({In:function(s){return s*s},Out:function(s){return s*(2-s)},InOut:function(s){return(s*=2)<1?.5*s*s:-.5*(--s*(s-2)-1)}}),Cubic:Object.freeze({In:function(s){return s*s*s},Out:function(s){return--s*s*s+1},InOut:function(s){return(s*=2)<1?.5*s*s*s:.5*((s-=2)*s*s+2)}}),Quartic:Object.freeze({In:function(s){return s*s*s*s},Out:function(s){return 1- --s*s*s*s},InOut:function(s){return(s*=2)<1?.5*s*s*s*s:-.5*((s-=2)*s*s*s-2)}}),Quintic:Object.freeze({In:function(s){return s*s*s*s*s},Out:function(s){return--s*s*s*s*s+1},InOut:function(s){return(s*=2)<1?.5*s*s*s*s*s:.5*((s-=2)*s*s*s*s+2)}}),Sinusoidal:Object.freeze({In:function(s){return 1-Math.sin((1-s)*Math.PI/2)},Out:function(s){return Math.sin(s*Math.PI/2)},InOut:function(s){return .5*(1-Math.sin(Math.PI*(.5-s)))}}),Exponential:Object.freeze({In:function(s){return s===0?0:Math.pow(1024,s-1)},Out:function(s){return s===1?1:1-Math.pow(2,-10*s)},InOut:function(s){return s===0?0:s===1?1:(s*=2)<1?.5*Math.pow(1024,s-1):.5*(-Math.pow(2,-10*(s-1))+2)}}),Circular:Object.freeze({In:function(s){return 1-Math.sqrt(1-s*s)},Out:function(s){return Math.sqrt(1- --s*s)},InOut:function(s){return(s*=2)<1?-.5*(Math.sqrt(1-s*s)-1):.5*(Math.sqrt(1-(s-=2)*s)+1)}}),Elastic:Object.freeze({In:function(s){return s===0?0:s===1?1:-Math.pow(2,10*(s-1))*Math.sin((s-1.1)*5*Math.PI)},Out:function(s){return s===0?0:s===1?1:Math.pow(2,-10*s)*Math.sin((s-.1)*5*Math.PI)+1},InOut:function(s){return s===0?0:s===1?1:(s*=2,s<1?-.5*Math.pow(2,10*(s-1))*Math.sin((s-1.1)*5*Math.PI):.5*Math.pow(2,-10*(s-1))*Math.sin((s-1.1)*5*Math.PI)+1)}}),Back:Object.freeze({In:function(s){var t=1.70158;return s===1?1:s*s*((t+1)*s-t)},Out:function(s){var t=1.70158;return s===0?0:--s*s*((t+1)*s+t)+1},InOut:function(s){var t=2.5949095;return(s*=2)<1?.5*(s*s*((t+1)*s-t)):.5*((s-=2)*s*((t+1)*s+t)+2)}}),Bounce:Object.freeze({In:function(s){return 1-ec.Bounce.Out(1-s)},Out:function(s){return s<1/2.75?7.5625*s*s:s<2/2.75?7.5625*(s-=1.5/2.75)*s+.75:s<2.5/2.75?7.5625*(s-=2.25/2.75)*s+.9375:7.5625*(s-=2.625/2.75)*s+.984375},InOut:function(s){return s<.5?ec.Bounce.In(s*2)*.5:ec.Bounce.Out(s*2-1)*.5+.5}}),generatePow:function(s){return s===void 0&&(s=4),s=s<Number.EPSILON?Number.EPSILON:s,s=s>1e4?1e4:s,{In:function(t){return Math.pow(t,s)},Out:function(t){return 1-Math.pow(1-t,s)},InOut:function(t){return t<.5?Math.pow(t*2,s)/2:(1-Math.pow(2-t*2,s))/2+.5}}}}),Au=function(){return performance.now()},cP=function(){function s(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this._tweens={},this._tweensAddedDuringUpdate={},this.add.apply(this,t)}return s.prototype.getAll=function(){var t=this;return Object.keys(this._tweens).map(function(e){return t._tweens[e]})},s.prototype.removeAll=function(){this._tweens={}},s.prototype.add=function(){for(var t,e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];for(var i=0,r=e;i<r.length;i++){var o=r[i];(t=o._group)===null||t===void 0||t.remove(o),o._group=this,this._tweens[o.getId()]=o,this._tweensAddedDuringUpdate[o.getId()]=o}},s.prototype.remove=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];for(var n=0,i=t;n<i.length;n++){var r=i[n];r._group=void 0,delete this._tweens[r.getId()],delete this._tweensAddedDuringUpdate[r.getId()]}},s.prototype.allStopped=function(){return this.getAll().every(function(t){return!t.isPlaying()})},s.prototype.update=function(t,e){t===void 0&&(t=Au()),e===void 0&&(e=!0);var n=Object.keys(this._tweens);if(n.length!==0)for(;n.length>0;){this._tweensAddedDuringUpdate={};for(var i=0;i<n.length;i++){var r=this._tweens[n[i]],o=!e;r&&r.update(t,o)===!1&&!e&&this.remove(r)}n=Object.keys(this._tweensAddedDuringUpdate)}},s}(),Dl={Linear:function(s,t){var e=s.length-1,n=e*t,i=Math.floor(n),r=Dl.Utils.Linear;return t<0?r(s[0],s[1],n):t>1?r(s[e],s[e-1],e-n):r(s[i],s[i+1>e?e:i+1],n-i)},Bezier:function(s,t){for(var e=0,n=s.length-1,i=Math.pow,r=Dl.Utils.Bernstein,o=0;o<=n;o++)e+=i(1-t,n-o)*i(t,o)*s[o]*r(n,o);return e},CatmullRom:function(s,t){var e=s.length-1,n=e*t,i=Math.floor(n),r=Dl.Utils.CatmullRom;return s[0]===s[e]?(t<0&&(i=Math.floor(n=e*(1+t))),r(s[(i-1+e)%e],s[i],s[(i+1)%e],s[(i+2)%e],n-i)):t<0?s[0]-(r(s[0],s[0],s[1],s[1],-n)-s[0]):t>1?s[e]-(r(s[e],s[e],s[e-1],s[e-1],n-e)-s[e]):r(s[i?i-1:0],s[i],s[e<i+1?e:i+1],s[e<i+2?e:i+2],n-i)},Utils:{Linear:function(s,t,e){return(t-s)*e+s},Bernstein:function(s,t){var e=Dl.Utils.Factorial;return e(s)/e(t)/e(s-t)},Factorial:function(){var s=[1];return function(t){var e=1;if(s[t])return s[t];for(var n=t;n>1;n--)e*=n;return s[t]=e,e}}(),CatmullRom:function(s,t,e,n,i){var r=(e-s)*.5,o=(n-t)*.5,a=i*i,c=i*a;return(2*t-2*e+r+o)*c+(-3*t+3*e-2*r-o)*a+r*i+t}}},GJ=function(){function s(){}return s.nextId=function(){return s._nextId++},s._nextId=0,s}(),hv=new cP,fA=function(){function s(t,e){this._isPaused=!1,this._pauseStart=0,this._valuesStart={},this._valuesEnd={},this._valuesStartRepeat={},this._duration=1e3,this._isDynamic=!1,this._initialRepeat=0,this._repeat=0,this._yoyo=!1,this._isPlaying=!1,this._reversed=!1,this._delayTime=0,this._startTime=0,this._easingFunction=ec.Linear.None,this._interpolationFunction=Dl.Linear,this._chainedTweens=[],this._onStartCallbackFired=!1,this._onEveryStartCallbackFired=!1,this._id=GJ.nextId(),this._isChainStopped=!1,this._propertiesAreSetUp=!1,this._goToEnd=!1,this._object=t,typeof e=="object"?(this._group=e,e.add(this)):e===!0&&(this._group=hv,hv.add(this))}return s.prototype.getId=function(){return this._id},s.prototype.isPlaying=function(){return this._isPlaying},s.prototype.isPaused=function(){return this._isPaused},s.prototype.getDuration=function(){return this._duration},s.prototype.to=function(t,e){if(e===void 0&&(e=1e3),this._isPlaying)throw new Error("Can not call Tween.to() while Tween is already started or paused. Stop the Tween first.");return this._valuesEnd=t,this._propertiesAreSetUp=!1,this._duration=e<0?0:e,this},s.prototype.duration=function(t){return t===void 0&&(t=1e3),this._duration=t<0?0:t,this},s.prototype.dynamic=function(t){return t===void 0&&(t=!1),this._isDynamic=t,this},s.prototype.start=function(t,e){if(t===void 0&&(t=Au()),e===void 0&&(e=!1),this._isPlaying)return this;if(this._repeat=this._initialRepeat,this._reversed){this._reversed=!1;for(var n in this._valuesStartRepeat)this._swapEndStartRepeatValues(n),this._valuesStart[n]=this._valuesStartRepeat[n]}if(this._isPlaying=!0,this._isPaused=!1,this._onStartCallbackFired=!1,this._onEveryStartCallbackFired=!1,this._isChainStopped=!1,this._startTime=t,this._startTime+=this._delayTime,!this._propertiesAreSetUp||e){if(this._propertiesAreSetUp=!0,!this._isDynamic){var i={};for(var r in this._valuesEnd)i[r]=this._valuesEnd[r];this._valuesEnd=i}this._setupProperties(this._object,this._valuesStart,this._valuesEnd,this._valuesStartRepeat,e)}return this},s.prototype.startFromCurrentValues=function(t){return this.start(t,!0)},s.prototype._setupProperties=function(t,e,n,i,r){for(var o in n){var a=t[o],c=Array.isArray(a),l=c?"array":typeof a,h=!c&&Array.isArray(n[o]);if(!(l==="undefined"||l==="function")){if(h){var u=n[o];if(u.length===0)continue;for(var d=[a],f=0,p=u.length;f<p;f+=1){var _=this._handleRelativeValue(a,u[f]);if(isNaN(_)){h=!1,console.warn("Found invalid interpolation list. Skipping.");break}d.push(_)}h&&(n[o]=d)}if((l==="object"||c)&&a&&!h){e[o]=c?[]:{};var g=a;for(var m in g)e[o][m]=g[m];i[o]=c?[]:{};var u=n[o];if(!this._isDynamic){var x={};for(var m in u)x[m]=u[m];n[o]=u=x}this._setupProperties(g,e[o],u,i[o],r)}else(typeof e[o]>"u"||r)&&(e[o]=a),c||(e[o]*=1),h?i[o]=n[o].slice().reverse():i[o]=e[o]||0}}},s.prototype.stop=function(){return this._isChainStopped||(this._isChainStopped=!0,this.stopChainedTweens()),this._isPlaying?(this._isPlaying=!1,this._isPaused=!1,this._onStopCallback&&this._onStopCallback(this._object),this):this},s.prototype.end=function(){return this._goToEnd=!0,this.update(this._startTime+this._duration),this},s.prototype.pause=function(t){return t===void 0&&(t=Au()),this._isPaused||!this._isPlaying?this:(this._isPaused=!0,this._pauseStart=t,this)},s.prototype.resume=function(t){return t===void 0&&(t=Au()),!this._isPaused||!this._isPlaying?this:(this._isPaused=!1,this._startTime+=t-this._pauseStart,this._pauseStart=0,this)},s.prototype.stopChainedTweens=function(){for(var t=0,e=this._chainedTweens.length;t<e;t++)this._chainedTweens[t].stop();return this},s.prototype.group=function(t){return t?(t.add(this),this):(console.warn("tween.group() without args has been removed, use group.add(tween) instead."),this)},s.prototype.remove=function(){var t;return(t=this._group)===null||t===void 0||t.remove(this),this},s.prototype.delay=function(t){return t===void 0&&(t=0),this._delayTime=t,this},s.prototype.repeat=function(t){return t===void 0&&(t=0),this._initialRepeat=t,this._repeat=t,this},s.prototype.repeatDelay=function(t){return this._repeatDelayTime=t,this},s.prototype.yoyo=function(t){return t===void 0&&(t=!1),this._yoyo=t,this},s.prototype.easing=function(t){return t===void 0&&(t=ec.Linear.None),this._easingFunction=t,this},s.prototype.interpolation=function(t){return t===void 0&&(t=Dl.Linear),this._interpolationFunction=t,this},s.prototype.chain=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return this._chainedTweens=t,this},s.prototype.onStart=function(t){return this._onStartCallback=t,this},s.prototype.onEveryStart=function(t){return this._onEveryStartCallback=t,this},s.prototype.onUpdate=function(t){return this._onUpdateCallback=t,this},s.prototype.onRepeat=function(t){return this._onRepeatCallback=t,this},s.prototype.onComplete=function(t){return this._onCompleteCallback=t,this},s.prototype.onStop=function(t){return this._onStopCallback=t,this},s.prototype.update=function(t,e){var n=this,i;if(t===void 0&&(t=Au()),e===void 0&&(e=s.autoStartOnUpdate),this._isPaused)return!0;var r;if(!this._goToEnd&&!this._isPlaying)if(e)this.start(t,!0);else return!1;if(this._goToEnd=!1,t<this._startTime)return!0;this._onStartCallbackFired===!1&&(this._onStartCallback&&this._onStartCallback(this._object),this._onStartCallbackFired=!0),this._onEveryStartCallbackFired===!1&&(this._onEveryStartCallback&&this._onEveryStartCallback(this._object),this._onEveryStartCallbackFired=!0);var o=t-this._startTime,a=this._duration+((i=this._repeatDelayTime)!==null&&i!==void 0?i:this._delayTime),c=this._duration+this._repeat*a,l=function(){if(n._duration===0||o>c)return 1;var _=Math.trunc(o/a),g=o-_*a,m=Math.min(g/n._duration,1);return m===0&&o===n._duration?1:m},h=l(),u=this._easingFunction(h);if(this._updateProperties(this._object,this._valuesStart,this._valuesEnd,u),this._onUpdateCallback&&this._onUpdateCallback(this._object,h),this._duration===0||o>=this._duration)if(this._repeat>0){var d=Math.min(Math.trunc((o-this._duration)/a)+1,this._repeat);isFinite(this._repeat)&&(this._repeat-=d);for(r in this._valuesStartRepeat)!this._yoyo&&typeof this._valuesEnd[r]=="string"&&(this._valuesStartRepeat[r]=this._valuesStartRepeat[r]+parseFloat(this._valuesEnd[r])),this._yoyo&&this._swapEndStartRepeatValues(r),this._valuesStart[r]=this._valuesStartRepeat[r];return this._yoyo&&(this._reversed=!this._reversed),this._startTime+=a*d,this._onRepeatCallback&&this._onRepeatCallback(this._object),this._onEveryStartCallbackFired=!1,!0}else{this._onCompleteCallback&&this._onCompleteCallback(this._object);for(var f=0,p=this._chainedTweens.length;f<p;f++)this._chainedTweens[f].start(this._startTime+this._duration,!1);return this._isPlaying=!1,!1}return!0},s.prototype._updateProperties=function(t,e,n,i){for(var r in n)if(e[r]!==void 0){var o=e[r]||0,a=n[r],c=Array.isArray(t[r]),l=Array.isArray(a),h=!c&&l;h?t[r]=this._interpolationFunction(a,i):typeof a=="object"&&a?this._updateProperties(t[r],o,a,i):(a=this._handleRelativeValue(o,a),typeof a=="number"&&(t[r]=o+(a-o)*i))}},s.prototype._handleRelativeValue=function(t,e){return typeof e!="string"?e:e.charAt(0)==="+"||e.charAt(0)==="-"?t+parseFloat(e):parseFloat(e)},s.prototype._swapEndStartRepeatValues=function(t){var e=this._valuesStartRepeat[t],n=this._valuesEnd[t];typeof n=="string"?this._valuesStartRepeat[t]=this._valuesStartRepeat[t]+parseFloat(n):this._valuesStartRepeat[t]=this._valuesEnd[t],this._valuesEnd[t]=e},s.autoStartOnUpdate=!1,s}(),ar=hv;ar.getAll.bind(ar);ar.removeAll.bind(ar);ar.add.bind(ar);ar.remove.bind(ar);ar.update.bind(ar);function HJ(s,t){t===void 0&&(t={});var e=t.insertAt;if(!(typeof document>"u")){var n=document.head||document.getElementsByTagName("head")[0],i=document.createElement("style");i.type="text/css",e==="top"&&n.firstChild?n.insertBefore(i,n.firstChild):n.appendChild(i),i.styleSheet?i.styleSheet.cssText=s:i.appendChild(document.createTextNode(s))}}var $J=`.scene-nav-info {
  bottom: 5px;
  width: 100%;
  text-align: center;
  color: slategrey;
  opacity: 0.7;
  font-size: 10px;
}

.scene-tooltip {
  top: 0;
  color: lavender;
  font-size: 15px;
}

.scene-nav-info, .scene-tooltip {
  position: absolute;
  font-family: sans-serif;
  pointer-events: none;
  user-select: none;
}

.scene-container canvas:focus {
  outline: none;
}`;HJ($J);function uv(s,t){(t==null||t>s.length)&&(t=s.length);for(var e=0,n=Array(t);e<t;e++)n[e]=s[e];return n}function WJ(s){if(Array.isArray(s))return s}function qJ(s){if(Array.isArray(s))return uv(s)}function jJ(s,t,e){return(t=ttt(t))in s?Object.defineProperty(s,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):s[t]=e,s}function XJ(s){if(typeof Symbol<"u"&&s[Symbol.iterator]!=null||s["@@iterator"]!=null)return Array.from(s)}function YJ(s,t){var e=s==null?null:typeof Symbol<"u"&&s[Symbol.iterator]||s["@@iterator"];if(e!=null){var n,i,r,o,a=[],c=!0,l=!1;try{if(r=(e=e.call(s)).next,t!==0)for(;!(c=(n=r.call(e)).done)&&(a.push(n.value),a.length!==t);c=!0);}catch(h){l=!0,i=h}finally{try{if(!c&&e.return!=null&&(o=e.return(),Object(o)!==o))return}finally{if(l)throw i}}return a}}function ZJ(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function KJ(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function QJ(s,t){return WJ(s)||YJ(s,t)||lP(s,t)||ZJ()}function gu(s){return qJ(s)||XJ(s)||lP(s)||KJ()}function JJ(s,t){if(typeof s!="object"||!s)return s;var e=s[Symbol.toPrimitive];if(e!==void 0){var n=e.call(s,t||"default");if(typeof n!="object")return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return(t==="string"?String:Number)(s)}function ttt(s){var t=JJ(s,"string");return typeof t=="symbol"?t:t+""}function lP(s,t){if(s){if(typeof s=="string")return uv(s,t);var e={}.toString.call(s).slice(8,-1);return e==="Object"&&s.constructor&&(e=s.constructor.name),e==="Map"||e==="Set"?Array.from(s):e==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?uv(s,t):void 0}}var Ye=window.THREE?window.THREE:{WebGLRenderer:LG,Scene:BG,PerspectiveCamera:ns,Raycaster:FC,SRGBColorSpace:Wi,TextureLoader:GG,Vector2:qt,Vector3:X,Box3:Ch,Color:Ee,Mesh:Is,SphereGeometry:UG,MeshBasicMaterial:ab,BackSide:fi,EventDispatcher:pa,MOUSE:In,Quaternion:zs,Spherical:hx,Clock:IC},hP=Mb({props:{width:{default:window.innerWidth,onChange:function(t,e,n){isNaN(t)&&(e.width=n)}},height:{default:window.innerHeight,onChange:function(t,e,n){isNaN(t)&&(e.height=n)}},backgroundColor:{default:"#000011"},backgroundImageUrl:{},onBackgroundImageLoaded:{},showNavInfo:{default:!0},skyRadius:{default:5e4},objects:{default:[]},lights:{default:[]},enablePointerInteraction:{default:!0,onChange:function(t,e){e.hoverObj=null,e.toolTipElem&&(e.toolTipElem.innerHTML="")},triggerUpdate:!1},lineHoverPrecision:{default:1,triggerUpdate:!1},hoverOrderComparator:{default:function(){return-1},triggerUpdate:!1},hoverFilter:{default:function(){return!0},triggerUpdate:!1},tooltipContent:{triggerUpdate:!1},hoverDuringDrag:{default:!1,triggerUpdate:!1},clickAfterDrag:{default:!1,triggerUpdate:!1},onHover:{default:function(){},triggerUpdate:!1},onClick:{default:function(){},triggerUpdate:!1},onRightClick:{triggerUpdate:!1}},methods:{tick:function(t){if(t.initialised){if(t.controls.update&&t.controls.update(Math.min(1,t.clock.getDelta())),t.postProcessingComposer?t.postProcessingComposer.render():t.renderer.render(t.scene,t.camera),t.extraRenderers.forEach(function(r){return r.render(t.scene,t.camera)}),t.enablePointerInteraction){var e=null;if(t.hoverDuringDrag||!t.isPointerDragging){var n=this.intersectingObjects(t.pointerPos.x,t.pointerPos.y).filter(function(r){return t.hoverFilter(r.object)}).sort(function(r,o){return t.hoverOrderComparator(r.object,o.object)}),i=n.length?n[0]:null;e=i?i.object:null,t.intersectionPoint=i?i.point:null}e!==t.hoverObj&&(t.onHover(e,t.hoverObj),t.toolTipElem.innerHTML=e&&Me(t.tooltipContent)(e)||"",t.hoverObj=e)}t.tweenGroup.update()}return this},getPointerPos:function(t){var e=t.pointerPos,n=e.x,i=e.y;return{x:n,y:i}},cameraPosition:function(t,e,n,i){var r=t.camera;if(e&&t.initialised){var o=e,a=n||{x:0,y:0,z:0};if(!i)h(o),u(a);else{var c=Object.assign({},r.position),l=d();t.tweenGroup.add(new fA(c).to(o,i).easing(ec.Quadratic.Out).onUpdate(h).start()),t.tweenGroup.add(new fA(l).to(a,i/3).easing(ec.Quadratic.Out).onUpdate(u).start())}return this}return Object.assign({},r.position,{lookAt:d()});function h(f){var p=f.x,_=f.y,g=f.z;p!==void 0&&(r.position.x=p),_!==void 0&&(r.position.y=_),g!==void 0&&(r.position.z=g)}function u(f){var p=new Ye.Vector3(f.x,f.y,f.z);t.controls.target?t.controls.target=p:r.lookAt(p)}function d(){return Object.assign(new Ye.Vector3(0,0,-1e3).applyQuaternion(r.quaternion).add(r.position))}},zoomToFit:function(t){for(var e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0,n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:10,i=arguments.length,r=new Array(i>3?i-3:0),o=3;o<i;o++)r[o-3]=arguments[o];return this.fitToBbox(this.getBbox.apply(this,r),e,n)},fitToBbox:function(t,e){var n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:0,i=arguments.length>3&&arguments[3]!==void 0?arguments[3]:10,r=t.camera;if(e){var o=new Ye.Vector3(0,0,0),a=Math.max.apply(Math,gu(Object.entries(e).map(function(f){var p=QJ(f,2),_=p[0],g=p[1];return Math.max.apply(Math,gu(g.map(function(m){return Math.abs(o[_]-m)})))})))*2,c=(1-i*2/t.height)*r.fov,l=a/Math.atan(c*Math.PI/180),h=l/r.aspect,u=Math.max(l,h);if(u>0){var d=o.clone().sub(r.position).normalize().multiplyScalar(-u);this.cameraPosition(d,o,n)}}return this},getBbox:function(t){var e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:function(){return!0},n=new Ye.Box3(new Ye.Vector3(0,0,0),new Ye.Vector3(0,0,0)),i=t.objects.filter(e);return i.length?(i.forEach(function(r){return n.expandByObject(r)}),Object.assign.apply(Object,gu(["x","y","z"].map(function(r){return jJ({},r,[n.min[r],n.max[r]])})))):null},getScreenCoords:function(t,e,n,i){var r=new Ye.Vector3(e,n,i);return r.project(this.camera()),{x:(r.x+1)*t.width/2,y:-(r.y-1)*t.height/2}},getSceneCoords:function(t,e,n){var i=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,r=new Ye.Vector2(e/t.width*2-1,-(n/t.height)*2+1),o=new Ye.Raycaster;return o.setFromCamera(r,t.camera),Object.assign({},o.ray.at(i,new Ye.Vector3))},intersectingObjects:function(t,e,n){var i=new Ye.Vector2(e/t.width*2-1,-(n/t.height)*2+1),r=new Ye.Raycaster;return r.params.Line.threshold=t.lineHoverPrecision,r.setFromCamera(i,t.camera),r.intersectObjects(t.objects,!0)},renderer:function(t){return t.renderer},scene:function(t){return t.scene},camera:function(t){return t.camera},postProcessingComposer:function(t){return t.postProcessingComposer},controls:function(t){return t.controls},tbControls:function(t){return t.controls}},stateInit:function(){return{scene:new Ye.Scene,camera:new Ye.PerspectiveCamera,clock:new Ye.Clock,tweenGroup:new cP}},init:function(t,e){var n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},i=n.controlType,r=i===void 0?"trackball":i,o=n.useWebGPU,a=o===void 0?!1:o,c=n.rendererConfig,l=c===void 0?{}:c,h=n.extraRenderers,u=h===void 0?[]:h,d=n.waitForLoadComplete,f=d===void 0?!0:d;t.innerHTML="",t.appendChild(e.container=document.createElement("div")),e.container.className="scene-container",e.container.style.position="relative",e.container.appendChild(e.navInfo=document.createElement("div")),e.navInfo.className="scene-nav-info",e.navInfo.textContent={orbit:"Left-click: rotate, Mouse-wheel/middle-click: zoom, Right-click: pan",trackball:"Left-click: rotate, Mouse-wheel/middle-click: zoom, Right-click: pan",fly:"WASD: move, R|F: up | down, Q|E: roll, up|down: pitch, left|right: yaw"}[r]||"",e.navInfo.style.display=e.showNavInfo?null:"none",e.toolTipElem=document.createElement("div"),e.toolTipElem.classList.add("scene-tooltip"),e.container.appendChild(e.toolTipElem),e.pointerPos=new Ye.Vector2,e.pointerPos.x=-2,e.pointerPos.y=-2,["pointermove","pointerdown"].forEach(function(p){return e.container.addEventListener(p,function(_){if(p==="pointerdown"&&(e.isPointerPressed=!0),!e.isPointerDragging&&_.type==="pointermove"&&(_.pressure>0||e.isPointerPressed)&&(_.pointerType!=="touch"||_.movementX===void 0||[_.movementX,_.movementY].some(function(x){return Math.abs(x)>1}))&&(e.isPointerDragging=!0),e.enablePointerInteraction){var g=m(e.container);e.pointerPos.x=_.pageX-g.left,e.pointerPos.y=_.pageY-g.top,e.toolTipElem.style.top="".concat(e.pointerPos.y,"px"),e.toolTipElem.style.left="".concat(e.pointerPos.x,"px"),e.toolTipElem.style.transform="translate(-".concat(e.pointerPos.x/e.width*100,"%, ").concat(e.height-e.pointerPos.y<100?"calc(-100% - 8px)":"21px",")")}function m(x){var v=x.getBoundingClientRect(),y=window.pageXOffset||document.documentElement.scrollLeft,b=window.pageYOffset||document.documentElement.scrollTop;return{top:v.top+b,left:v.left+y}}},{passive:!0})}),e.container.addEventListener("pointerup",function(p){e.isPointerPressed=!1,!(e.isPointerDragging&&(e.isPointerDragging=!1,!e.clickAfterDrag))&&requestAnimationFrame(function(){p.button===0&&e.onClick(e.hoverObj||null,p,e.intersectionPoint),p.button===2&&e.onRightClick&&e.onRightClick(e.hoverObj||null,p,e.intersectionPoint)})},{passive:!0,capture:!0}),e.container.addEventListener("contextmenu",function(p){e.onRightClick&&p.preventDefault()}),e.renderer=new(a?lQ:Ye.WebGLRenderer)(Object.assign({antialias:!0,alpha:!0},l)),e.renderer.setPixelRatio(Math.min(2,window.devicePixelRatio)),e.container.appendChild(e.renderer.domElement),e.extraRenderers=u,e.extraRenderers.forEach(function(p){p.domElement.style.position="absolute",p.domElement.style.top="0px",p.domElement.style.pointerEvents="none",e.container.appendChild(p.domElement)}),e.postProcessingComposer=new nJ(e.renderer),e.postProcessingComposer.addPass(new iJ(e.scene,e.camera)),e.controls=new{trackball:uQ,orbit:EQ,fly:VQ}[r](e.camera,e.renderer.domElement),r==="fly"&&(e.controls.movementSpeed=300,e.controls.rollSpeed=Math.PI/6,e.controls.dragToLook=!0),(r==="trackball"||r==="orbit")&&(e.controls.minDistance=.1,e.controls.maxDistance=e.skyRadius,e.controls.addEventListener("start",function(){e.controlsEngaged=!0}),e.controls.addEventListener("change",function(){e.controlsEngaged&&(e.controlsDragging=!0)}),e.controls.addEventListener("end",function(){e.controlsEngaged=!1,e.controlsDragging=!1})),[e.renderer,e.postProcessingComposer].concat(gu(e.extraRenderers)).forEach(function(p){return p.setSize(e.width,e.height)}),e.camera.aspect=e.width/e.height,e.camera.updateProjectionMatrix(),e.camera.position.z=1e3,e.scene.add(e.skysphere=new Ye.Mesh),e.skysphere.visible=!1,e.loadComplete=e.scene.visible=!f,window.scene=e.scene},update:function(t,e){if(t.width&&t.height&&(e.hasOwnProperty("width")||e.hasOwnProperty("height"))&&(t.container.style.width="".concat(t.width,"px"),t.container.style.height="".concat(t.height,"px"),[t.renderer,t.postProcessingComposer].concat(gu(t.extraRenderers)).forEach(function(r){return r.setSize(t.width,t.height)}),t.camera.aspect=t.width/t.height,t.camera.updateProjectionMatrix()),e.hasOwnProperty("skyRadius")&&t.skyRadius&&(t.controls.hasOwnProperty("maxDistance")&&e.skyRadius&&(t.controls.maxDistance=Math.min(t.controls.maxDistance,t.skyRadius)),t.camera.far=t.skyRadius*2.5,t.camera.updateProjectionMatrix(),t.skysphere.geometry=new Ye.SphereGeometry(t.skyRadius)),e.hasOwnProperty("backgroundColor")){var n=yc(t.backgroundColor).alpha;n===void 0&&(n=1),t.renderer.setClearColor(new Ye.Color(FJ(1,t.backgroundColor)),n)}e.hasOwnProperty("backgroundImageUrl")&&(t.backgroundImageUrl?new Ye.TextureLoader().load(t.backgroundImageUrl,function(r){r.colorSpace=Ye.SRGBColorSpace,t.skysphere.material=new Ye.MeshBasicMaterial({map:r,side:Ye.BackSide}),t.skysphere.visible=!0,t.onBackgroundImageLoaded&&setTimeout(t.onBackgroundImageLoaded),!t.loadComplete&&i()}):(t.skysphere.visible=!1,t.skysphere.material.map=null,!t.loadComplete&&i())),e.hasOwnProperty("showNavInfo")&&(t.navInfo.style.display=t.showNavInfo?null:"none"),e.hasOwnProperty("lights")&&((e.lights||[]).forEach(function(r){return t.scene.remove(r)}),t.lights.forEach(function(r){return t.scene.add(r)})),e.hasOwnProperty("objects")&&((e.objects||[]).forEach(function(r){return t.scene.remove(r)}),t.objects.forEach(function(r){return t.scene.add(r)}));function i(){t.loadComplete=t.scene.visible=!0}}});function ett(s,t){t===void 0&&(t={});var e=t.insertAt;if(!(typeof document>"u")){var n=document.head||document.getElementsByTagName("head")[0],i=document.createElement("style");i.type="text/css",e==="top"&&n.firstChild?n.insertBefore(i,n.firstChild):n.appendChild(i),i.styleSheet?i.styleSheet.cssText=s:i.appendChild(document.createTextNode(s))}}var ntt=`.graph-info-msg {
  top: 50%;
  width: 100%;
  text-align: center;
  color: lavender;
  opacity: 0.7;
  font-size: 22px;
  position: absolute;
  font-family: Sans-serif;
}

.scene-container .clickable {
  cursor: pointer;
}

.scene-container .grabbable {
  cursor: move;
  cursor: grab;
  cursor: -moz-grab;
  cursor: -webkit-grab;
}

.scene-container .grabbable:active {
  cursor: grabbing;
  cursor: -moz-grabbing;
  cursor: -webkit-grabbing;
}`;ett(ntt);function dv(s,t){(t==null||t>s.length)&&(t=s.length);for(var e=0,n=Array(t);e<t;e++)n[e]=s[e];return n}function itt(s){if(Array.isArray(s))return dv(s)}function Hd(s,t,e){return(t=att(t))in s?Object.defineProperty(s,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):s[t]=e,s}function stt(s){if(typeof Symbol<"u"&&s[Symbol.iterator]!=null||s["@@iterator"]!=null)return Array.from(s)}function rtt(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function pA(s,t){var e=Object.keys(s);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(s);t&&(n=n.filter(function(i){return Object.getOwnPropertyDescriptor(s,i).enumerable})),e.push.apply(e,n)}return e}function Ap(s){for(var t=1;t<arguments.length;t++){var e=arguments[t]!=null?arguments[t]:{};t%2?pA(Object(e),!0).forEach(function(n){Hd(s,n,e[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(s,Object.getOwnPropertyDescriptors(e)):pA(Object(e)).forEach(function(n){Object.defineProperty(s,n,Object.getOwnPropertyDescriptor(e,n))})}return s}function Fg(s){return itt(s)||stt(s)||ctt(s)||rtt()}function ott(s,t){if(typeof s!="object"||!s)return s;var e=s[Symbol.toPrimitive];if(e!==void 0){var n=e.call(s,t||"default");if(typeof n!="object")return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return(t==="string"?String:Number)(s)}function att(s){var t=ott(s,"string");return typeof t=="symbol"?t:t+""}function ctt(s,t){if(s){if(typeof s=="string")return dv(s,t);var e={}.toString.call(s).slice(8,-1);return e==="Object"&&s.constructor&&(e=s.constructor.name),e==="Map"||e==="Set"?Array.from(s):e==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?dv(s,t):void 0}}function uP(s,t){var e=new t;return e._destructor&&e._destructor(),{linkProp:function(i){return{default:e[i](),onChange:function(o,a){a[s][i](o)},triggerUpdate:!1}},linkMethod:function(i){return function(r){for(var o=r[s],a=arguments.length,c=new Array(a>1?a-1:0),l=1;l<a;l++)c[l-1]=arguments[l];var h=o[i].apply(o,c);return h===o?this:h}}}}var sy=window.THREE?window.THREE:{AmbientLight:qG,DirectionalLight:WG,Vector3:X,REVISION:ag},ltt=170,dP=uP("forceGraph",CR),htt=Object.assign.apply(Object,Fg(["jsonUrl","graphData","numDimensions","dagMode","dagLevelDistance","dagNodeFilter","onDagError","nodeRelSize","nodeId","nodeVal","nodeResolution","nodeColor","nodeAutoColorBy","nodeOpacity","nodeVisibility","nodeThreeObject","nodeThreeObjectExtend","linkSource","linkTarget","linkVisibility","linkColor","linkAutoColorBy","linkOpacity","linkWidth","linkResolution","linkCurvature","linkCurveRotation","linkMaterial","linkThreeObject","linkThreeObjectExtend","linkPositionUpdate","linkDirectionalArrowLength","linkDirectionalArrowColor","linkDirectionalArrowRelPos","linkDirectionalArrowResolution","linkDirectionalParticles","linkDirectionalParticleSpeed","linkDirectionalParticleWidth","linkDirectionalParticleColor","linkDirectionalParticleResolution","forceEngine","d3AlphaDecay","d3VelocityDecay","d3AlphaMin","ngraphPhysics","warmupTicks","cooldownTicks","cooldownTime","onEngineTick","onEngineStop"].map(function(s){return Hd({},s,dP.linkProp(s))}))),utt=Object.assign.apply(Object,Fg(["refresh","getGraphBbox","d3Force","d3ReheatSimulation","emitParticle"].map(function(s){return Hd({},s,dP.linkMethod(s))}))),Zp=uP("renderObjs",hP),dtt=Object.assign.apply(Object,Fg(["width","height","backgroundColor","showNavInfo","enablePointerInteraction"].map(function(s){return Hd({},s,Zp.linkProp(s))}))),ftt=Object.assign.apply(Object,Fg(["lights","cameraPosition","postProcessingComposer"].map(function(s){return Hd({},s,Zp.linkMethod(s))})).concat([{graph2ScreenCoords:Zp.linkMethod("getScreenCoords"),screen2GraphCoords:Zp.linkMethod("getSceneCoords")}])),ptt=Mb({props:Ap(Ap({nodeLabel:{default:"name",triggerUpdate:!1},linkLabel:{default:"name",triggerUpdate:!1},linkHoverPrecision:{default:1,onChange:function(t,e){return e.renderObjs.lineHoverPrecision(t)},triggerUpdate:!1},enableNavigationControls:{default:!0,onChange:function(t,e){var n=e.renderObjs.controls();n&&(n.enabled=t,t&&n.domElement&&n.domElement.dispatchEvent(new PointerEvent("pointerup")))},triggerUpdate:!1},enableNodeDrag:{default:!0,triggerUpdate:!1},onNodeDrag:{default:function(){},triggerUpdate:!1},onNodeDragEnd:{default:function(){},triggerUpdate:!1},onNodeClick:{triggerUpdate:!1},onNodeRightClick:{triggerUpdate:!1},onNodeHover:{triggerUpdate:!1},onLinkClick:{triggerUpdate:!1},onLinkRightClick:{triggerUpdate:!1},onLinkHover:{triggerUpdate:!1},onBackgroundClick:{triggerUpdate:!1},onBackgroundRightClick:{triggerUpdate:!1}},htt),dtt),methods:Ap(Ap({zoomToFit:function(t,e,n){for(var i,r=arguments.length,o=new Array(r>3?r-3:0),a=3;a<r;a++)o[a-3]=arguments[a];return t.renderObjs.fitToBbox((i=t.forceGraph).getGraphBbox.apply(i,o),e,n),this},pauseAnimation:function(t){return t.animationFrameRequestId!==null&&(cancelAnimationFrame(t.animationFrameRequestId),t.animationFrameRequestId=null),this},resumeAnimation:function(t){return t.animationFrameRequestId===null&&this._animationCycle(),this},_animationCycle:function(t){t.enablePointerInteraction&&(this.renderer().domElement.style.cursor=null),t.forceGraph.tickFrame(),t.renderObjs.tick(),t.animationFrameRequestId=requestAnimationFrame(this._animationCycle)},scene:function(t){return t.renderObjs.scene()},camera:function(t){return t.renderObjs.camera()},renderer:function(t){return t.renderObjs.renderer()},controls:function(t){return t.renderObjs.controls()},tbControls:function(t){return t.renderObjs.tbControls()},_destructor:function(){this.pauseAnimation(),this.graphData({nodes:[],links:[]})}},utt),ftt),stateInit:function(t){var e=t.controlType,n=t.rendererConfig,i=t.extraRenderers,r=new CR;return{forceGraph:r,renderObjs:hP({controlType:e,rendererConfig:n,extraRenderers:i}).objects([r]).lights([new sy.AmbientLight(13421772,Math.PI),new sy.DirectionalLight(16777215,.6*Math.PI)])}},init:function(t,e){t.innerHTML="",t.appendChild(e.container=document.createElement("div")),e.container.style.position="relative";var n=document.createElement("div");e.container.appendChild(n),e.renderObjs(n);var i=e.renderObjs.camera(),r=e.renderObjs.renderer(),o=e.renderObjs.controls();o.enabled=!!e.enableNavigationControls,e.lastSetCameraZ=i.position.z;var a;e.container.appendChild(a=document.createElement("div")),a.className="graph-info-msg",a.textContent="",e.forceGraph.onLoading(function(){a.textContent="Loading..."}).onFinishLoading(function(){a.textContent=""}).onUpdate(function(){e.graphData=e.forceGraph.graphData(),i.position.x===0&&i.position.y===0&&i.position.z===e.lastSetCameraZ&&e.graphData.nodes.length&&(i.lookAt(e.forceGraph.position),e.lastSetCameraZ=i.position.z=Math.cbrt(e.graphData.nodes.length)*ltt)}).onFinishUpdate(function(){if(e._dragControls){var c=e.graphData.nodes.find(function(h){return h.__initialFixedPos&&!h.__disposeControlsAfterDrag});c?c.__disposeControlsAfterDrag=!0:e._dragControls.dispose(),e._dragControls=void 0}if(e.enableNodeDrag&&e.enablePointerInteraction&&e.forceEngine==="d3"){var l=e._dragControls=new jG(e.graphData.nodes.map(function(h){return h.__threeObj}).filter(function(h){return h}),i,r.domElement);l.addEventListener("dragstart",function(h){o.enabled=!1,h.object.__initialPos=h.object.position.clone(),h.object.__prevPos=h.object.position.clone();var u=Pr(h.object).__data;!u.__initialFixedPos&&(u.__initialFixedPos={fx:u.fx,fy:u.fy,fz:u.fz}),!u.__initialPos&&(u.__initialPos={x:u.x,y:u.y,z:u.z}),["x","y","z"].forEach(function(d){return u["f".concat(d)]=u[d]}),r.domElement.classList.add("grabbable")}),l.addEventListener("drag",function(h){var u=Pr(h.object);if(!h.object.hasOwnProperty("__graphObjType")){var d=h.object.__initialPos,f=h.object.__prevPos,p=h.object.position;u.position.add(p.clone().sub(f)),f.copy(p),p.copy(d)}var _=u.__data,g=u.position,m={x:g.x-_.x,y:g.y-_.y,z:g.z-_.z};["x","y","z"].forEach(function(x){return _["f".concat(x)]=_[x]=g[x]}),e.forceGraph.d3AlphaTarget(.3).resetCountdown(),_.__dragged=!0,e.onNodeDrag(_,m)}),l.addEventListener("dragend",function(h){delete h.object.__initialPos,delete h.object.__prevPos;var u=Pr(h.object).__data;u.__disposeControlsAfterDrag&&(l.dispose(),delete u.__disposeControlsAfterDrag);var d=u.__initialFixedPos,f=u.__initialPos,p={x:f.x-u.x,y:f.y-u.y,z:f.z-u.z};d&&(["x","y","z"].forEach(function(_){var g="f".concat(_);d[g]===void 0&&delete u[g]}),delete u.__initialFixedPos,delete u.__initialPos,u.__dragged&&(delete u.__dragged,e.onNodeDragEnd(u,p))),e.forceGraph.d3AlphaTarget(0).resetCountdown(),e.enableNavigationControls&&(o.enabled=!0,o.domElement&&o.domElement.ownerDocument&&o.domElement.ownerDocument.dispatchEvent(new PointerEvent("pointerup",{pointerType:"touch"}))),r.domElement.classList.remove("grabbable")})}}),sy.REVISION<155&&(e.renderObjs.renderer().useLegacyLights=!1),e.renderObjs.hoverOrderComparator(function(c,l){var h=Pr(c);if(!h)return 1;var u=Pr(l);if(!u)return-1;var d=function(p){return p.__graphObjType==="node"};return d(u)-d(h)}).tooltipContent(function(c){var l=Pr(c);return l&&Me(e["".concat(l.__graphObjType,"Label")])(l.__data)||""}).hoverDuringDrag(!1).onHover(function(c){var l=Pr(c);if(l!==e.hoverObj){var h=e.hoverObj?e.hoverObj.__graphObjType:null,u=e.hoverObj?e.hoverObj.__data:null,d=l?l.__graphObjType:null,f=l?l.__data:null;if(h&&h!==d){var p=e["on".concat(h==="node"?"Node":"Link","Hover")];p&&p(null,u)}if(d){var _=e["on".concat(d==="node"?"Node":"Link","Hover")];_&&_(f,h===d?u:null)}r.domElement.classList[l&&e["on".concat(d==="node"?"Node":"Link","Click")]||!l&&e.onBackgroundClick?"add":"remove"]("clickable"),e.hoverObj=l}}).clickAfterDrag(!1).onClick(function(c,l){var h=Pr(c);if(h){var u=e["on".concat(h.__graphObjType==="node"?"Node":"Link","Click")];u&&u(h.__data,l)}else e.onBackgroundClick&&e.onBackgroundClick(l)}).onRightClick(function(c,l){var h=Pr(c);if(h){var u=e["on".concat(h.__graphObjType==="node"?"Node":"Link","RightClick")];u&&u(h.__data,l)}else e.onBackgroundRightClick&&e.onBackgroundRightClick(l)}),this._animationCycle()}});function Pr(s){for(var t=s;t&&!t.hasOwnProperty("__graphObjType");)t=t.parent;return t}const mtt=new Zv({urls:{A2:"A2.ogg",B2:"B2.ogg","C#3":"Cs3.ogg",E3:"E3.ogg","F#3":"Fs3.ogg",A3:"A3.ogg",B3:"B3.ogg","C#4":"Cs4.ogg",E4:"E4.ogg","F#4":"Fs4.ogg"},attack:.5,release:1,baseUrl:"./cello/"}).toDestination(),mA=["F#1","A2","B2","C#3","E3","F#3","A3","C#4","E4"];let gA=["sounds of a heartbeat","too many letters","too many characters","too many memories","tug at this red string","see where it leads","a web is a trap","the web is a trap","so then why is this so lovely?","dusty lights","old journals","old flames","magpie bridge","heavenly river","two hearts united","jade rabbit","elixir for you","flashlight under the covers","do I remember","do you remember","backyard nights","rabbit ears","rabbit years","who didn't cry","who sheds tears","a story about a girl","born of plum flowers","resentment also blooms","flowers bloom","a muse is temporary","this isn't temporary","goodbye"],fv=150,Ko={nodes:[...Array(fv).keys()].map(s=>({id:s,x:jl(-450,450),y:jl(-450,450),z:jl(-450,450)})),links:[]};for(let s=fv;s<fv+50;s++)Ko.nodes.push({id:s,x:jl(-1e3,1e3),y:jl(-1e3,1e3),z:jl(-1e3,1e3)});let Og=!1,jm=450,ni=ptt()(document.getElementById("3d-graph")).enableNodeDrag(!1).enableNavigationControls(!0).showNavInfo(!1).cameraPosition({z:jm}).graphData(Ko).nodeThreeObject(s=>{let t=new UA(3),e=new vd({color:"#fffee6"}),n=new bd(t,e);return n.visible=!1,n.position.set(s.x,s.y,s.z),n}).d3Force("charge",null).d3Force("center",null).d3Force("link",null).linkThreeObject(s=>{let t=new ho,e=Ko.nodes[s.source],n=Ko.nodes[s.target],i=new Q(e.x,e.y,e.z),r=new Q(n.x,n.y,n.z),o=new uo().setFromPoints([i,r]),a=new _v({color:"#9cc0ff",transparent:!0,opacity:.8}),c=new PA(o,a);t.add(c);let l=fP(s.text,"white"),h=new Q().addVectors(i,r).multiplyScalar(.5);l.position.copy(h);let u=new Q().subVectors(r,i).normalize(),d=new Q(0,1,0),f=new _h().setFromUnitVectors(d,u);return l.setRotationFromQuaternion(f),t.add(l),t}).linkPositionUpdate((s,{start:t,end:e})=>{let n=new Q().addVectors(new Q(t.x,t.y,t.z),new Q(e.x,e.y,e.z)).multiplyScalar(.5);s.position.copy(n)});ni.controls().maxDistance=700;function jl(s,t){return Math.random()*(t-s+1)+s}function fP(s,t){let e=document.createElement("canvas"),n=e.getContext("2d"),i=420,r=900;e.width=i,e.height=r;let o=35,a="Cormorant Infant",c=400,l=o*1.2;n.font=`${o}px ${a}`,n.fillStyle=t,n.textAlign="center";let u=ED.wrap(s,{width:c/(o/2),break:!0}).split(`
`);for(let g=0;g<u.length;g++)n.fillText(u[g],i/2,r/2-(u.length/2-g)*l);let d=new IA(e),f=new vd({map:d,transparent:!0,side:wP,depthTest:!1}),p=new LA(150,350);return new bd(p,f)}let Kp=0,_A=.05,Xm=setInterval(pP,50);yS();function pP(){if(!Og){let s=ni.cameraPosition(),t={x:jm*Math.sin(Kp),z:jm*Math.cos(Kp)},e={x:s.x+(t.x-s.x)*_A,z:s.z+(t.z-s.z)*_A};ni.cameraPosition(e),Kp+=Math.PI/2e3}}function mP(){let s=ni.cameraPosition();Kp=Math.atan2(s.x,s.z)}function yS(){Xm||(mP(),Xm=setInterval(pP,50))}function gP(){clearInterval(Xm),Xm=null}function xS(){Og=!0,gP(),jE.state!=="running"&&JB()}function vS(){setTimeout(()=>{Og=!1,_P(),mP(),yS()},50)}function _P(){let s=ni.cameraPosition();jm=Math.sqrt(s.x*s.x+s.z*s.z)}document.getElementById("3d-graph").addEventListener("wheel",_P);document.getElementById("3d-graph").addEventListener("mousedown",xS);document.getElementById("3d-graph").addEventListener("touchmove",xS);document.getElementById("3d-graph").addEventListener("touchstart",xS);document.getElementById("3d-graph").addEventListener("mouseup",vS);document.getElementById("3d-graph").addEventListener("touchend",vS);document.getElementById("3d-graph").addEventListener("mouseout",vS);ni.onEngineTick(()=>{Og?gP():yS()});function gtt(s,t){let e=ni.graphData().nodes.find(i=>i.id===s),n=ni.graphData().nodes.find(i=>i.id===t);e&&e.__threeObj&&(e.__threeObj.visible=!0),n&&n.__threeObj&&(n.__threeObj.visible=!0)}setInterval(_tt,1500);function _tt(){let s=Ko.nodes.map(i=>i.id),t=s[Math.floor(Math.random()*s.length)],e=s[Math.floor(Math.random()*s.length)];if(Ko.links.some(i=>i.source===t&&i.target===e||i.source===e&&i.target===t)||(Ko.links.push({source:t,target:e,text:gA[Math.floor(Math.random()*gA.length)]}),ni.graphData(Ko),gtt(t,e)),jE.state=="running"){let i=mA[Math.floor(Math.random()*mA.length)];mtt.triggerAttackRelease([i],4)}}let yP=fP("a whispered story...","white");yP.position.set(0,0,0);ni.scene().add(yP);let Lg=new Xl;Lg.strength=1.5;Lg.radius=1;Lg.threshold=.8;ni.postProcessingComposer().addPass(Lg);function ytt(){let s=2,t=document.createElement("canvas");t.width=s,t.height=s;let e=t.getContext("2d"),n=e.createLinearGradient(0,0,0,s);n.addColorStop(0,"#01013b"),n.addColorStop(1,"#2779cc"),e.fillStyle=n,e.fillRect(0,0,s,s);let i=new IA(t);return i.minFilter=i.magFilter=pv,i}let xP=ytt(),xtt=new vd({map:xP,depthTest:!1,depthWrite:!1}),vtt=new LA(2,2),btt=new bd(vtt,xtt);btt.frustumCulled=!1;let Stt=ni.scene();Stt.background=xP;const vP=ni.controls();vP.enableDamping=!1;vP.staticMoving=!0;function Mtt(){ni.camera().aspect=window.innerWidth/window.innerHeight,ni.camera().updateProjectionMatrix(),ni.renderer().setSize(window.innerWidth,window.innerHeight)}window.addEventListener("resize",Mtt,!1);
