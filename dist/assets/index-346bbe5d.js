(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))n(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function t(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerPolicy&&(r.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?r.credentials="include":s.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(s){if(s.ep)return;s.ep=!0;const r=t(s);fetch(s.href,r)}})();/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const IS="152",HL=0,qM=1,WL=2,MC=1,$L=2,mo=3,za=0,ji=1,Ar=2,Da=0,Cu=1,_x=2,XM=3,jM=4,qL=5,hu=100,XL=101,jL=102,YM=103,ZM=104,YL=200,ZL=201,KL=202,QL=203,TC=204,EC=205,JL=206,eI=207,tI=208,nI=209,iI=210,sI=0,rI=1,oI=2,vx=3,aI=4,cI=5,lI=6,uI=7,FS=0,hI=1,dI=2,Lo=0,fI=1,pI=2,mI=3,gI=4,_I=5,wC=300,qu=301,Xu=302,xx=303,yx=304,Jg=306,Sx=1e3,Js=1001,bx=1002,Ci=1003,KM=1004,V_=1005,ws=1006,vI=1007,Gd=1008,$c=1009,xI=1010,yI=1011,AC=1012,SI=1013,Lc=1014,Ic=1015,Vd=1016,bI=1017,MI=1018,Ru=1020,TI=1021,er=1023,EI=1024,wI=1025,Oc=1026,ju=1027,AI=1028,CI=1029,RI=1030,NI=1031,PI=1033,H_=33776,W_=33777,$_=33778,q_=33779,QM=35840,JM=35841,eT=35842,tT=35843,DI=36196,nT=37492,iT=37496,sT=37808,rT=37809,oT=37810,aT=37811,cT=37812,lT=37813,uT=37814,hT=37815,dT=37816,fT=37817,pT=37818,mT=37819,gT=37820,_T=37821,X_=36492,LI=36283,vT=36284,xT=36285,yT=36286,CC=3e3,Bc=3001,II=3200,FI=3201,RC=0,UI=1,kc="",Et="srgb",Lr="srgb-linear",NC="display-p3",j_=7680,OI=519,ST=35044,bT="300 es",Mx=1035;let gh=class{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const s=this._listeners[e];if(s!==void 0){const r=s.indexOf(t);r!==-1&&s.splice(r,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const s=n.slice(0);for(let r=0,o=s.length;r<o;r++)s[r].call(this,e);e.target=null}}};const di=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],Y_=Math.PI/180,Tx=180/Math.PI;function bf(){const i=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(di[i&255]+di[i>>8&255]+di[i>>16&255]+di[i>>24&255]+"-"+di[e&255]+di[e>>8&255]+"-"+di[e>>16&15|64]+di[e>>24&255]+"-"+di[t&63|128]+di[t>>8&255]+"-"+di[t>>16&255]+di[t>>24&255]+di[n&255]+di[n>>8&255]+di[n>>16&255]+di[n>>24&255]).toLowerCase()}function xi(i,e,t){return Math.max(e,Math.min(t,i))}function BI(i,e){return(i%e+e)%e}function Z_(i,e,t){return(1-t)*i+t*e}function MT(i){return(i&i-1)===0&&i!==0}function kI(i){return Math.pow(2,Math.floor(Math.log(i)/Math.LN2))}function jf(i,e){switch(e.constructor){case Float32Array:return i;case Uint16Array:return i/65535;case Uint8Array:return i/255;case Int16Array:return Math.max(i/32767,-1);case Int8Array:return Math.max(i/127,-1);default:throw new Error("Invalid component type.")}}function is(i,e){switch(e.constructor){case Float32Array:return i;case Uint16Array:return Math.round(i*65535);case Uint8Array:return Math.round(i*255);case Int16Array:return Math.round(i*32767);case Int8Array:return Math.round(i*127);default:throw new Error("Invalid component type.")}}let ut=class PC{constructor(e=0,t=0){PC.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6],this.y=s[1]*t+s[4]*n+s[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(xi(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),s=Math.sin(t),r=this.x-e.x,o=this.y-e.y;return this.x=r*n-o*s+e.x,this.y=r*s+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}},kt=class DC{constructor(){DC.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(e,t,n,s,r,o,a,c,l){const u=this.elements;return u[0]=e,u[1]=s,u[2]=a,u[3]=t,u[4]=r,u[5]=c,u[6]=n,u[7]=o,u[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,s=t.elements,r=this.elements,o=n[0],a=n[3],c=n[6],l=n[1],u=n[4],h=n[7],d=n[2],f=n[5],m=n[8],_=s[0],g=s[3],p=s[6],y=s[1],x=s[4],v=s[7],S=s[2],M=s[5],E=s[8];return r[0]=o*_+a*y+c*S,r[3]=o*g+a*x+c*M,r[6]=o*p+a*v+c*E,r[1]=l*_+u*y+h*S,r[4]=l*g+u*x+h*M,r[7]=l*p+u*v+h*E,r[2]=d*_+f*y+m*S,r[5]=d*g+f*x+m*M,r[8]=d*p+f*v+m*E,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],s=e[2],r=e[3],o=e[4],a=e[5],c=e[6],l=e[7],u=e[8];return t*o*u-t*a*l-n*r*u+n*a*c+s*r*l-s*o*c}invert(){const e=this.elements,t=e[0],n=e[1],s=e[2],r=e[3],o=e[4],a=e[5],c=e[6],l=e[7],u=e[8],h=u*o-a*l,d=a*c-u*r,f=l*r-o*c,m=t*h+n*d+s*f;if(m===0)return this.set(0,0,0,0,0,0,0,0,0);const _=1/m;return e[0]=h*_,e[1]=(s*l-u*n)*_,e[2]=(a*n-s*o)*_,e[3]=d*_,e[4]=(u*t-s*c)*_,e[5]=(s*r-a*t)*_,e[6]=f*_,e[7]=(n*c-l*t)*_,e[8]=(o*t-n*r)*_,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,s,r,o,a){const c=Math.cos(r),l=Math.sin(r);return this.set(n*c,n*l,-n*(c*o+l*a)+o+e,-s*l,s*c,-s*(-l*o+c*a)+a+t,0,0,1),this}scale(e,t){return this.premultiply(K_.makeScale(e,t)),this}rotate(e){return this.premultiply(K_.makeRotation(-e)),this}translate(e,t){return this.premultiply(K_.makeTranslation(e,t)),this}makeTranslation(e,t){return this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let s=0;s<9;s++)if(t[s]!==n[s])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}};const K_=new kt;function LC(i){for(let e=i.length-1;e>=0;--e)if(i[e]>=65535)return!0;return!1}function ig(i){return document.createElementNS("http://www.w3.org/1999/xhtml",i)}const TT={};function Cd(i){i in TT||(TT[i]=!0,console.warn(i))}function Nu(i){return i<.04045?i*.0773993808:Math.pow(i*.9478672986+.0521327014,2.4)}function Q_(i){return i<.0031308?i*12.92:1.055*Math.pow(i,.41666)-.055}const zI=new kt().fromArray([.8224621,.0331941,.0170827,.177538,.9668058,.0723974,-1e-7,1e-7,.9105199]),GI=new kt().fromArray([1.2249401,-.0420569,-.0196376,-.2249404,1.0420571,-.0786361,1e-7,0,1.0982735]);function VI(i){return i.convertSRGBToLinear().applyMatrix3(GI)}function HI(i){return i.applyMatrix3(zI).convertLinearToSRGB()}const WI={[Lr]:i=>i,[Et]:i=>i.convertSRGBToLinear(),[NC]:VI},$I={[Lr]:i=>i,[Et]:i=>i.convertLinearToSRGB(),[NC]:HI},Os={enabled:!0,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(i){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!i},get workingColorSpace(){return Lr},set workingColorSpace(i){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(i,e,t){if(this.enabled===!1||e===t||!e||!t)return i;const n=WI[e],s=$I[t];if(n===void 0||s===void 0)throw new Error(`Unsupported color space conversion, "${e}" to "${t}".`);return s(n(i))},fromWorkingColorSpace:function(i,e){return this.convert(i,this.workingColorSpace,e)},toWorkingColorSpace:function(i,e){return this.convert(i,e,this.workingColorSpace)}};let _l,IC=class{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{_l===void 0&&(_l=ig("canvas")),_l.width=e.width,_l.height=e.height;const n=_l.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=_l}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=ig("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const s=n.getImageData(0,0,e.width,e.height),r=s.data;for(let o=0;o<r.length;o++)r[o]=Nu(r[o]/255)*255;return n.putImageData(s,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(Nu(t[n]/255)*255):t[n]=Nu(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}},FC=class{constructor(e=null){this.isSource=!0,this.uuid=bf(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},s=this.data;if(s!==null){let r;if(Array.isArray(s)){r=[];for(let o=0,a=s.length;o<a;o++)s[o].isDataTexture?r.push(J_(s[o].image)):r.push(J_(s[o]))}else r=J_(s);n.url=r}return t||(e.images[this.uuid]=n),n}};function J_(i){return typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&i instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&i instanceof ImageBitmap?IC.getDataURL(i):i.data?{data:Array.from(i.data),width:i.width,height:i.height,type:i.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let qI=0,Gr=class Pm extends gh{constructor(e=Pm.DEFAULT_IMAGE,t=Pm.DEFAULT_MAPPING,n=Js,s=Js,r=ws,o=Gd,a=er,c=$c,l=Pm.DEFAULT_ANISOTROPY,u=kc){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:qI++}),this.uuid=bf(),this.name="",this.source=new FC(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=s,this.magFilter=r,this.minFilter=o,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=c,this.offset=new ut(0,0),this.repeat=new ut(1,1),this.center=new ut(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new kt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,typeof u=="string"?this.colorSpace=u:(Cd("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=u===Bc?Et:kc),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==wC)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Sx:e.x=e.x-Math.floor(e.x);break;case Js:e.x=e.x<0?0:1;break;case bx:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Sx:e.y=e.y-Math.floor(e.y);break;case Js:e.y=e.y<0?0:1;break;case bx:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return Cd("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===Et?Bc:CC}set encoding(e){Cd("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=e===Bc?Et:kc}};Gr.DEFAULT_IMAGE=null;Gr.DEFAULT_MAPPING=wC;Gr.DEFAULT_ANISOTROPY=1;let Li=class UC{constructor(e=0,t=0,n=0,s=1){UC.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=s}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,s){return this.x=e,this.y=t,this.z=n,this.w=s,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,s=this.z,r=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*s+o[12]*r,this.y=o[1]*t+o[5]*n+o[9]*s+o[13]*r,this.z=o[2]*t+o[6]*n+o[10]*s+o[14]*r,this.w=o[3]*t+o[7]*n+o[11]*s+o[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,s,r;const c=e.elements,l=c[0],u=c[4],h=c[8],d=c[1],f=c[5],m=c[9],_=c[2],g=c[6],p=c[10];if(Math.abs(u-d)<.01&&Math.abs(h-_)<.01&&Math.abs(m-g)<.01){if(Math.abs(u+d)<.1&&Math.abs(h+_)<.1&&Math.abs(m+g)<.1&&Math.abs(l+f+p-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const x=(l+1)/2,v=(f+1)/2,S=(p+1)/2,M=(u+d)/4,E=(h+_)/4,w=(m+g)/4;return x>v&&x>S?x<.01?(n=0,s=.707106781,r=.707106781):(n=Math.sqrt(x),s=M/n,r=E/n):v>S?v<.01?(n=.707106781,s=0,r=.707106781):(s=Math.sqrt(v),n=M/s,r=w/s):S<.01?(n=.707106781,s=.707106781,r=0):(r=Math.sqrt(S),n=E/r,s=w/r),this.set(n,s,r,t),this}let y=Math.sqrt((g-m)*(g-m)+(h-_)*(h-_)+(d-u)*(d-u));return Math.abs(y)<.001&&(y=1),this.x=(g-m)/y,this.y=(h-_)/y,this.z=(d-u)/y,this.w=Math.acos((l+f+p-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}},cr=class extends gh{constructor(e=1,t=1,n={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Li(0,0,e,t),this.scissorTest=!1,this.viewport=new Li(0,0,e,t);const s={width:e,height:t,depth:1};n.encoding!==void 0&&(Cd("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),n.colorSpace=n.encoding===Bc?Et:kc),this.texture=new Gr(s,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:ws,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new FC(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}},OC=class extends Gr{constructor(e=null,t=1,n=1,s=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:s},this.magFilter=Ci,this.minFilter=Ci,this.wrapR=Js,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}},XI=class extends Gr{constructor(e=null,t=1,n=1,s=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:s},this.magFilter=Ci,this.minFilter=Ci,this.wrapR=Js,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}},_h=class{constructor(e=0,t=0,n=0,s=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=s}static slerpFlat(e,t,n,s,r,o,a){let c=n[s+0],l=n[s+1],u=n[s+2],h=n[s+3];const d=r[o+0],f=r[o+1],m=r[o+2],_=r[o+3];if(a===0){e[t+0]=c,e[t+1]=l,e[t+2]=u,e[t+3]=h;return}if(a===1){e[t+0]=d,e[t+1]=f,e[t+2]=m,e[t+3]=_;return}if(h!==_||c!==d||l!==f||u!==m){let g=1-a;const p=c*d+l*f+u*m+h*_,y=p>=0?1:-1,x=1-p*p;if(x>Number.EPSILON){const S=Math.sqrt(x),M=Math.atan2(S,p*y);g=Math.sin(g*M)/S,a=Math.sin(a*M)/S}const v=a*y;if(c=c*g+d*v,l=l*g+f*v,u=u*g+m*v,h=h*g+_*v,g===1-a){const S=1/Math.sqrt(c*c+l*l+u*u+h*h);c*=S,l*=S,u*=S,h*=S}}e[t]=c,e[t+1]=l,e[t+2]=u,e[t+3]=h}static multiplyQuaternionsFlat(e,t,n,s,r,o){const a=n[s],c=n[s+1],l=n[s+2],u=n[s+3],h=r[o],d=r[o+1],f=r[o+2],m=r[o+3];return e[t]=a*m+u*h+c*f-l*d,e[t+1]=c*m+u*d+l*h-a*f,e[t+2]=l*m+u*f+a*d-c*h,e[t+3]=u*m-a*h-c*d-l*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,s){return this._x=e,this._y=t,this._z=n,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const n=e._x,s=e._y,r=e._z,o=e._order,a=Math.cos,c=Math.sin,l=a(n/2),u=a(s/2),h=a(r/2),d=c(n/2),f=c(s/2),m=c(r/2);switch(o){case"XYZ":this._x=d*u*h+l*f*m,this._y=l*f*h-d*u*m,this._z=l*u*m+d*f*h,this._w=l*u*h-d*f*m;break;case"YXZ":this._x=d*u*h+l*f*m,this._y=l*f*h-d*u*m,this._z=l*u*m-d*f*h,this._w=l*u*h+d*f*m;break;case"ZXY":this._x=d*u*h-l*f*m,this._y=l*f*h+d*u*m,this._z=l*u*m+d*f*h,this._w=l*u*h-d*f*m;break;case"ZYX":this._x=d*u*h-l*f*m,this._y=l*f*h+d*u*m,this._z=l*u*m-d*f*h,this._w=l*u*h+d*f*m;break;case"YZX":this._x=d*u*h+l*f*m,this._y=l*f*h+d*u*m,this._z=l*u*m-d*f*h,this._w=l*u*h-d*f*m;break;case"XZY":this._x=d*u*h-l*f*m,this._y=l*f*h-d*u*m,this._z=l*u*m+d*f*h,this._w=l*u*h+d*f*m;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,s=Math.sin(n);return this._x=e.x*s,this._y=e.y*s,this._z=e.z*s,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],s=t[4],r=t[8],o=t[1],a=t[5],c=t[9],l=t[2],u=t[6],h=t[10],d=n+a+h;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(u-c)*f,this._y=(r-l)*f,this._z=(o-s)*f}else if(n>a&&n>h){const f=2*Math.sqrt(1+n-a-h);this._w=(u-c)/f,this._x=.25*f,this._y=(s+o)/f,this._z=(r+l)/f}else if(a>h){const f=2*Math.sqrt(1+a-n-h);this._w=(r-l)/f,this._x=(s+o)/f,this._y=.25*f,this._z=(c+u)/f}else{const f=2*Math.sqrt(1+h-n-a);this._w=(o-s)/f,this._x=(r+l)/f,this._y=(c+u)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(xi(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const s=Math.min(1,t/n);return this.slerp(e,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,s=e._y,r=e._z,o=e._w,a=t._x,c=t._y,l=t._z,u=t._w;return this._x=n*u+o*a+s*l-r*c,this._y=s*u+o*c+r*a-n*l,this._z=r*u+o*l+n*c-s*a,this._w=o*u-n*a-s*c-r*l,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,s=this._y,r=this._z,o=this._w;let a=o*e._w+n*e._x+s*e._y+r*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=n,this._y=s,this._z=r,this;const c=1-a*a;if(c<=Number.EPSILON){const f=1-t;return this._w=f*o+t*this._w,this._x=f*n+t*this._x,this._y=f*s+t*this._y,this._z=f*r+t*this._z,this.normalize(),this._onChangeCallback(),this}const l=Math.sqrt(c),u=Math.atan2(l,a),h=Math.sin((1-t)*u)/l,d=Math.sin(t*u)/l;return this._w=o*h+this._w*d,this._x=n*h+this._x*d,this._y=s*h+this._y*d,this._z=r*h+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),s=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(t*Math.cos(s),n*Math.sin(r),n*Math.cos(r),t*Math.sin(s))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}},re=class BC{constructor(e=0,t=0,n=0){BC.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(ET.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(ET.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,s=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*s,this.y=r[1]*t+r[4]*n+r[7]*s,this.z=r[2]*t+r[5]*n+r[8]*s,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,s=this.z,r=e.elements,o=1/(r[3]*t+r[7]*n+r[11]*s+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*s+r[12])*o,this.y=(r[1]*t+r[5]*n+r[9]*s+r[13])*o,this.z=(r[2]*t+r[6]*n+r[10]*s+r[14])*o,this}applyQuaternion(e){const t=this.x,n=this.y,s=this.z,r=e.x,o=e.y,a=e.z,c=e.w,l=c*t+o*s-a*n,u=c*n+a*t-r*s,h=c*s+r*n-o*t,d=-r*t-o*n-a*s;return this.x=l*c+d*-r+u*-a-h*-o,this.y=u*c+d*-o+h*-r-l*-a,this.z=h*c+d*-a+l*-o-u*-r,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,s=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*s,this.y=r[1]*t+r[5]*n+r[9]*s,this.z=r[2]*t+r[6]*n+r[10]*s,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,s=e.y,r=e.z,o=t.x,a=t.y,c=t.z;return this.x=s*c-r*a,this.y=r*o-n*c,this.z=n*a-s*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return e0.copy(this).projectOnVector(e),this.sub(e0)}reflect(e){return this.sub(e0.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(xi(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,s=this.z-e.z;return t*t+n*n+s*s}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const s=Math.sin(t)*e;return this.x=s*Math.sin(n),this.y=Math.cos(t)*e,this.z=s*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),s=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=s,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}};const e0=new re,ET=new _h;let vh=class{constructor(e=new re(1/0,1/0,1/0),t=new re(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(Zr.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(Zr.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Zr.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){if(e.updateWorldMatrix(!1,!1),e.boundingBox!==void 0)e.boundingBox===null&&e.computeBoundingBox(),vl.copy(e.boundingBox),vl.applyMatrix4(e.matrixWorld),this.union(vl);else{const s=e.geometry;if(s!==void 0)if(t&&s.attributes!==void 0&&s.attributes.position!==void 0){const r=s.attributes.position;for(let o=0,a=r.count;o<a;o++)Zr.fromBufferAttribute(r,o).applyMatrix4(e.matrixWorld),this.expandByPoint(Zr)}else s.boundingBox===null&&s.computeBoundingBox(),vl.copy(s.boundingBox),vl.applyMatrix4(e.matrixWorld),this.union(vl)}const n=e.children;for(let s=0,r=n.length;s<r;s++)this.expandByObject(n[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Zr),Zr.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Wh),Yf.subVectors(this.max,Wh),xl.subVectors(e.a,Wh),yl.subVectors(e.b,Wh),Sl.subVectors(e.c,Wh),ia.subVectors(yl,xl),sa.subVectors(Sl,yl),ic.subVectors(xl,Sl);let t=[0,-ia.z,ia.y,0,-sa.z,sa.y,0,-ic.z,ic.y,ia.z,0,-ia.x,sa.z,0,-sa.x,ic.z,0,-ic.x,-ia.y,ia.x,0,-sa.y,sa.x,0,-ic.y,ic.x,0];return!t0(t,xl,yl,Sl,Yf)||(t=[1,0,0,0,1,0,0,0,1],!t0(t,xl,yl,Sl,Yf))?!1:(Zf.crossVectors(ia,sa),t=[Zf.x,Zf.y,Zf.z],t0(t,xl,yl,Sl,Yf))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Zr).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Zr).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Yr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Yr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Yr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Yr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Yr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Yr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Yr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Yr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Yr),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}};const Yr=[new re,new re,new re,new re,new re,new re,new re,new re],Zr=new re,vl=new vh,xl=new re,yl=new re,Sl=new re,ia=new re,sa=new re,ic=new re,Wh=new re,Yf=new re,Zf=new re,sc=new re;function t0(i,e,t,n,s){for(let r=0,o=i.length-3;r<=o;r+=3){sc.fromArray(i,r);const a=s.x*Math.abs(sc.x)+s.y*Math.abs(sc.y)+s.z*Math.abs(sc.z),c=e.dot(sc),l=t.dot(sc),u=n.dot(sc);if(Math.max(-Math.max(c,l,u),Math.min(c,l,u))>a)return!1}return!0}const jI=new vh,$h=new re,n0=new re;let e_=class{constructor(e=new re,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):jI.setFromPoints(e).getCenter(n);let s=0;for(let r=0,o=e.length;r<o;r++)s=Math.max(s,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(s),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;$h.subVectors(e,this.center);const t=$h.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),s=(n-this.radius)*.5;this.center.addScaledVector($h,s/n),this.radius+=s}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(n0.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint($h.copy(e.center).add(n0)),this.expandByPoint($h.copy(e.center).sub(n0))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}};const Kr=new re,i0=new re,Kf=new re,ra=new re,s0=new re,Qf=new re,r0=new re;let kC=class{constructor(e=new re,t=new re(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Kr)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Kr.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Kr.copy(this.origin).addScaledVector(this.direction,t),Kr.distanceToSquared(e))}distanceSqToSegment(e,t,n,s){i0.copy(e).add(t).multiplyScalar(.5),Kf.copy(t).sub(e).normalize(),ra.copy(this.origin).sub(i0);const r=e.distanceTo(t)*.5,o=-this.direction.dot(Kf),a=ra.dot(this.direction),c=-ra.dot(Kf),l=ra.lengthSq(),u=Math.abs(1-o*o);let h,d,f,m;if(u>0)if(h=o*c-a,d=o*a-c,m=r*u,h>=0)if(d>=-m)if(d<=m){const _=1/u;h*=_,d*=_,f=h*(h+o*d+2*a)+d*(o*h+d+2*c)+l}else d=r,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*c)+l;else d=-r,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*c)+l;else d<=-m?(h=Math.max(0,-(-o*r+a)),d=h>0?-r:Math.min(Math.max(-r,-c),r),f=-h*h+d*(d+2*c)+l):d<=m?(h=0,d=Math.min(Math.max(-r,-c),r),f=d*(d+2*c)+l):(h=Math.max(0,-(o*r+a)),d=h>0?r:Math.min(Math.max(-r,-c),r),f=-h*h+d*(d+2*c)+l);else d=o>0?-r:r,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*c)+l;return n&&n.copy(this.origin).addScaledVector(this.direction,h),s&&s.copy(i0).addScaledVector(Kf,d),f}intersectSphere(e,t){Kr.subVectors(e.center,this.origin);const n=Kr.dot(this.direction),s=Kr.dot(Kr)-n*n,r=e.radius*e.radius;if(s>r)return null;const o=Math.sqrt(r-s),a=n-o,c=n+o;return c<0?null:a<0?this.at(c,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,s,r,o,a,c;const l=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,d=this.origin;return l>=0?(n=(e.min.x-d.x)*l,s=(e.max.x-d.x)*l):(n=(e.max.x-d.x)*l,s=(e.min.x-d.x)*l),u>=0?(r=(e.min.y-d.y)*u,o=(e.max.y-d.y)*u):(r=(e.max.y-d.y)*u,o=(e.min.y-d.y)*u),n>o||r>s||((r>n||isNaN(n))&&(n=r),(o<s||isNaN(s))&&(s=o),h>=0?(a=(e.min.z-d.z)*h,c=(e.max.z-d.z)*h):(a=(e.max.z-d.z)*h,c=(e.min.z-d.z)*h),n>c||a>s)||((a>n||n!==n)&&(n=a),(c<s||s!==s)&&(s=c),s<0)?null:this.at(n>=0?n:s,t)}intersectsBox(e){return this.intersectBox(e,Kr)!==null}intersectTriangle(e,t,n,s,r){s0.subVectors(t,e),Qf.subVectors(n,e),r0.crossVectors(s0,Qf);let o=this.direction.dot(r0),a;if(o>0){if(s)return null;a=1}else if(o<0)a=-1,o=-o;else return null;ra.subVectors(this.origin,e);const c=a*this.direction.dot(Qf.crossVectors(ra,Qf));if(c<0)return null;const l=a*this.direction.dot(s0.cross(ra));if(l<0||c+l>o)return null;const u=-a*ra.dot(r0);return u<0?null:this.at(u/o,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}},ci=class Ex{constructor(){Ex.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(e,t,n,s,r,o,a,c,l,u,h,d,f,m,_,g){const p=this.elements;return p[0]=e,p[4]=t,p[8]=n,p[12]=s,p[1]=r,p[5]=o,p[9]=a,p[13]=c,p[2]=l,p[6]=u,p[10]=h,p[14]=d,p[3]=f,p[7]=m,p[11]=_,p[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Ex().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,s=1/bl.setFromMatrixColumn(e,0).length(),r=1/bl.setFromMatrixColumn(e,1).length(),o=1/bl.setFromMatrixColumn(e,2).length();return t[0]=n[0]*s,t[1]=n[1]*s,t[2]=n[2]*s,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,s=e.y,r=e.z,o=Math.cos(n),a=Math.sin(n),c=Math.cos(s),l=Math.sin(s),u=Math.cos(r),h=Math.sin(r);if(e.order==="XYZ"){const d=o*u,f=o*h,m=a*u,_=a*h;t[0]=c*u,t[4]=-c*h,t[8]=l,t[1]=f+m*l,t[5]=d-_*l,t[9]=-a*c,t[2]=_-d*l,t[6]=m+f*l,t[10]=o*c}else if(e.order==="YXZ"){const d=c*u,f=c*h,m=l*u,_=l*h;t[0]=d+_*a,t[4]=m*a-f,t[8]=o*l,t[1]=o*h,t[5]=o*u,t[9]=-a,t[2]=f*a-m,t[6]=_+d*a,t[10]=o*c}else if(e.order==="ZXY"){const d=c*u,f=c*h,m=l*u,_=l*h;t[0]=d-_*a,t[4]=-o*h,t[8]=m+f*a,t[1]=f+m*a,t[5]=o*u,t[9]=_-d*a,t[2]=-o*l,t[6]=a,t[10]=o*c}else if(e.order==="ZYX"){const d=o*u,f=o*h,m=a*u,_=a*h;t[0]=c*u,t[4]=m*l-f,t[8]=d*l+_,t[1]=c*h,t[5]=_*l+d,t[9]=f*l-m,t[2]=-l,t[6]=a*c,t[10]=o*c}else if(e.order==="YZX"){const d=o*c,f=o*l,m=a*c,_=a*l;t[0]=c*u,t[4]=_-d*h,t[8]=m*h+f,t[1]=h,t[5]=o*u,t[9]=-a*u,t[2]=-l*u,t[6]=f*h+m,t[10]=d-_*h}else if(e.order==="XZY"){const d=o*c,f=o*l,m=a*c,_=a*l;t[0]=c*u,t[4]=-h,t[8]=l*u,t[1]=d*h+_,t[5]=o*u,t[9]=f*h-m,t[2]=m*h-f,t[6]=a*u,t[10]=_*h+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(YI,e,ZI)}lookAt(e,t,n){const s=this.elements;return ss.subVectors(e,t),ss.lengthSq()===0&&(ss.z=1),ss.normalize(),oa.crossVectors(n,ss),oa.lengthSq()===0&&(Math.abs(n.z)===1?ss.x+=1e-4:ss.z+=1e-4,ss.normalize(),oa.crossVectors(n,ss)),oa.normalize(),Jf.crossVectors(ss,oa),s[0]=oa.x,s[4]=Jf.x,s[8]=ss.x,s[1]=oa.y,s[5]=Jf.y,s[9]=ss.y,s[2]=oa.z,s[6]=Jf.z,s[10]=ss.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,s=t.elements,r=this.elements,o=n[0],a=n[4],c=n[8],l=n[12],u=n[1],h=n[5],d=n[9],f=n[13],m=n[2],_=n[6],g=n[10],p=n[14],y=n[3],x=n[7],v=n[11],S=n[15],M=s[0],E=s[4],w=s[8],b=s[12],T=s[1],C=s[5],D=s[9],P=s[13],N=s[2],L=s[6],U=s[10],B=s[14],k=s[3],$=s[7],z=s[11],Y=s[15];return r[0]=o*M+a*T+c*N+l*k,r[4]=o*E+a*C+c*L+l*$,r[8]=o*w+a*D+c*U+l*z,r[12]=o*b+a*P+c*B+l*Y,r[1]=u*M+h*T+d*N+f*k,r[5]=u*E+h*C+d*L+f*$,r[9]=u*w+h*D+d*U+f*z,r[13]=u*b+h*P+d*B+f*Y,r[2]=m*M+_*T+g*N+p*k,r[6]=m*E+_*C+g*L+p*$,r[10]=m*w+_*D+g*U+p*z,r[14]=m*b+_*P+g*B+p*Y,r[3]=y*M+x*T+v*N+S*k,r[7]=y*E+x*C+v*L+S*$,r[11]=y*w+x*D+v*U+S*z,r[15]=y*b+x*P+v*B+S*Y,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],s=e[8],r=e[12],o=e[1],a=e[5],c=e[9],l=e[13],u=e[2],h=e[6],d=e[10],f=e[14],m=e[3],_=e[7],g=e[11],p=e[15];return m*(+r*c*h-s*l*h-r*a*d+n*l*d+s*a*f-n*c*f)+_*(+t*c*f-t*l*d+r*o*d-s*o*f+s*l*u-r*c*u)+g*(+t*l*h-t*a*f-r*o*h+n*o*f+r*a*u-n*l*u)+p*(-s*a*u-t*c*h+t*a*d+s*o*h-n*o*d+n*c*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const s=this.elements;return e.isVector3?(s[12]=e.x,s[13]=e.y,s[14]=e.z):(s[12]=e,s[13]=t,s[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],s=e[2],r=e[3],o=e[4],a=e[5],c=e[6],l=e[7],u=e[8],h=e[9],d=e[10],f=e[11],m=e[12],_=e[13],g=e[14],p=e[15],y=h*g*l-_*d*l+_*c*f-a*g*f-h*c*p+a*d*p,x=m*d*l-u*g*l-m*c*f+o*g*f+u*c*p-o*d*p,v=u*_*l-m*h*l+m*a*f-o*_*f-u*a*p+o*h*p,S=m*h*c-u*_*c-m*a*d+o*_*d+u*a*g-o*h*g,M=t*y+n*x+s*v+r*S;if(M===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const E=1/M;return e[0]=y*E,e[1]=(_*d*r-h*g*r-_*s*f+n*g*f+h*s*p-n*d*p)*E,e[2]=(a*g*r-_*c*r+_*s*l-n*g*l-a*s*p+n*c*p)*E,e[3]=(h*c*r-a*d*r-h*s*l+n*d*l+a*s*f-n*c*f)*E,e[4]=x*E,e[5]=(u*g*r-m*d*r+m*s*f-t*g*f-u*s*p+t*d*p)*E,e[6]=(m*c*r-o*g*r-m*s*l+t*g*l+o*s*p-t*c*p)*E,e[7]=(o*d*r-u*c*r+u*s*l-t*d*l-o*s*f+t*c*f)*E,e[8]=v*E,e[9]=(m*h*r-u*_*r-m*n*f+t*_*f+u*n*p-t*h*p)*E,e[10]=(o*_*r-m*a*r+m*n*l-t*_*l-o*n*p+t*a*p)*E,e[11]=(u*a*r-o*h*r-u*n*l+t*h*l+o*n*f-t*a*f)*E,e[12]=S*E,e[13]=(u*_*s-m*h*s+m*n*d-t*_*d-u*n*g+t*h*g)*E,e[14]=(m*a*s-o*_*s-m*n*c+t*_*c+o*n*g-t*a*g)*E,e[15]=(o*h*s-u*a*s+u*n*c-t*h*c-o*n*d+t*a*d)*E,this}scale(e){const t=this.elements,n=e.x,s=e.y,r=e.z;return t[0]*=n,t[4]*=s,t[8]*=r,t[1]*=n,t[5]*=s,t[9]*=r,t[2]*=n,t[6]*=s,t[10]*=r,t[3]*=n,t[7]*=s,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],s=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,s))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),s=Math.sin(t),r=1-n,o=e.x,a=e.y,c=e.z,l=r*o,u=r*a;return this.set(l*o+n,l*a-s*c,l*c+s*a,0,l*a+s*c,u*a+n,u*c-s*o,0,l*c-s*a,u*c+s*o,r*c*c+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,s,r,o){return this.set(1,n,r,0,e,1,o,0,t,s,1,0,0,0,0,1),this}compose(e,t,n){const s=this.elements,r=t._x,o=t._y,a=t._z,c=t._w,l=r+r,u=o+o,h=a+a,d=r*l,f=r*u,m=r*h,_=o*u,g=o*h,p=a*h,y=c*l,x=c*u,v=c*h,S=n.x,M=n.y,E=n.z;return s[0]=(1-(_+p))*S,s[1]=(f+v)*S,s[2]=(m-x)*S,s[3]=0,s[4]=(f-v)*M,s[5]=(1-(d+p))*M,s[6]=(g+y)*M,s[7]=0,s[8]=(m+x)*E,s[9]=(g-y)*E,s[10]=(1-(d+_))*E,s[11]=0,s[12]=e.x,s[13]=e.y,s[14]=e.z,s[15]=1,this}decompose(e,t,n){const s=this.elements;let r=bl.set(s[0],s[1],s[2]).length();const o=bl.set(s[4],s[5],s[6]).length(),a=bl.set(s[8],s[9],s[10]).length();this.determinant()<0&&(r=-r),e.x=s[12],e.y=s[13],e.z=s[14],Bs.copy(this);const l=1/r,u=1/o,h=1/a;return Bs.elements[0]*=l,Bs.elements[1]*=l,Bs.elements[2]*=l,Bs.elements[4]*=u,Bs.elements[5]*=u,Bs.elements[6]*=u,Bs.elements[8]*=h,Bs.elements[9]*=h,Bs.elements[10]*=h,t.setFromRotationMatrix(Bs),n.x=r,n.y=o,n.z=a,this}makePerspective(e,t,n,s,r,o){const a=this.elements,c=2*r/(t-e),l=2*r/(n-s),u=(t+e)/(t-e),h=(n+s)/(n-s),d=-(o+r)/(o-r),f=-2*o*r/(o-r);return a[0]=c,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=l,a[9]=h,a[13]=0,a[2]=0,a[6]=0,a[10]=d,a[14]=f,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(e,t,n,s,r,o){const a=this.elements,c=1/(t-e),l=1/(n-s),u=1/(o-r),h=(t+e)*c,d=(n+s)*l,f=(o+r)*u;return a[0]=2*c,a[4]=0,a[8]=0,a[12]=-h,a[1]=0,a[5]=2*l,a[9]=0,a[13]=-d,a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-f,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let s=0;s<16;s++)if(t[s]!==n[s])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}};const bl=new re,Bs=new ci,YI=new re(0,0,0),ZI=new re(1,1,1),oa=new re,Jf=new re,ss=new re,wT=new ci,AT=new _h;let zC=class GC{constructor(e=0,t=0,n=0,s=GC.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=s}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,s=this._order){return this._x=e,this._y=t,this._z=n,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const s=e.elements,r=s[0],o=s[4],a=s[8],c=s[1],l=s[5],u=s[9],h=s[2],d=s[6],f=s[10];switch(t){case"XYZ":this._y=Math.asin(xi(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,f),this._z=Math.atan2(-o,r)):(this._x=Math.atan2(d,l),this._z=0);break;case"YXZ":this._x=Math.asin(-xi(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-h,r),this._z=0);break;case"ZXY":this._x=Math.asin(xi(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-h,f),this._z=Math.atan2(-o,l)):(this._y=0,this._z=Math.atan2(c,r));break;case"ZYX":this._y=Math.asin(-xi(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(c,r)):(this._x=0,this._z=Math.atan2(-o,l));break;case"YZX":this._z=Math.asin(xi(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-u,l),this._y=Math.atan2(-h,r)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-xi(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,l),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-u,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return wT.makeRotationFromQuaternion(e),this.setFromRotationMatrix(wT,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return AT.setFromEuler(this),this.setFromQuaternion(AT,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}};zC.DEFAULT_ORDER="XYZ";let VC=class{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}},KI=0;const CT=new re,Ml=new _h,Qr=new ci,ep=new re,qh=new re,QI=new re,JI=new _h,RT=new re(1,0,0),NT=new re(0,1,0),PT=new re(0,0,1),eF={type:"added"},DT={type:"removed"};let _r=class Dm extends gh{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:KI++}),this.uuid=bf(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Dm.DEFAULT_UP.clone();const e=new re,t=new zC,n=new _h,s=new re(1,1,1);function r(){n.setFromEuler(t,!1)}function o(){t.setFromQuaternion(n,void 0,!1)}t._onChange(r),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new ci},normalMatrix:{value:new kt}}),this.matrix=new ci,this.matrixWorld=new ci,this.matrixAutoUpdate=Dm.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=Dm.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new VC,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Ml.setFromAxisAngle(e,t),this.quaternion.multiply(Ml),this}rotateOnWorldAxis(e,t){return Ml.setFromAxisAngle(e,t),this.quaternion.premultiply(Ml),this}rotateX(e){return this.rotateOnAxis(RT,e)}rotateY(e){return this.rotateOnAxis(NT,e)}rotateZ(e){return this.rotateOnAxis(PT,e)}translateOnAxis(e,t){return CT.copy(e).applyQuaternion(this.quaternion),this.position.add(CT.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(RT,e)}translateY(e){return this.translateOnAxis(NT,e)}translateZ(e){return this.translateOnAxis(PT,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Qr.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?ep.copy(e):ep.set(e,t,n);const s=this.parent;this.updateWorldMatrix(!0,!1),qh.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Qr.lookAt(qh,ep,this.up):Qr.lookAt(ep,qh,this.up),this.quaternion.setFromRotationMatrix(Qr),s&&(Qr.extractRotation(s.matrixWorld),Ml.setFromRotationMatrix(Qr),this.quaternion.premultiply(Ml.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(eF)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(DT)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(DT)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),Qr.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Qr.multiply(e.parent.matrixWorld)),e.applyMatrix4(Qr),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,s=this.children.length;n<s;n++){const o=this.children[n].getObjectByProperty(e,t);if(o!==void 0)return o}}getObjectsByProperty(e,t){let n=[];this[e]===t&&n.push(this);for(let s=0,r=this.children.length;s<r;s++){const o=this.children[s].getObjectsByProperty(e,t);o.length>0&&(n=n.concat(o))}return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(qh,e,QI),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(qh,JI,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,s=t.length;n<s;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,s=t.length;n<s;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,s=t.length;n<s;n++){const r=t[n];(r.matrixWorldAutoUpdate===!0||e===!0)&&r.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const s=this.children;for(let r=0,o=s.length;r<o;r++){const a=s[r];a.matrixWorldAutoUpdate===!0&&a.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),s.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON()));function r(a,c){return a[c.uuid]===void 0&&(a[c.uuid]=c.toJSON(e)),c.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=r(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const c=a.shapes;if(Array.isArray(c))for(let l=0,u=c.length;l<u;l++){const h=c[l];r(e.shapes,h)}else r(e.shapes,c)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let c=0,l=this.material.length;c<l;c++)a.push(r(e.materials,this.material[c]));s.material=a}else s.material=r(e.materials,this.material);if(this.children.length>0){s.children=[];for(let a=0;a<this.children.length;a++)s.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){s.animations=[];for(let a=0;a<this.animations.length;a++){const c=this.animations[a];s.animations.push(r(e.animations,c))}}if(t){const a=o(e.geometries),c=o(e.materials),l=o(e.textures),u=o(e.images),h=o(e.shapes),d=o(e.skeletons),f=o(e.animations),m=o(e.nodes);a.length>0&&(n.geometries=a),c.length>0&&(n.materials=c),l.length>0&&(n.textures=l),u.length>0&&(n.images=u),h.length>0&&(n.shapes=h),d.length>0&&(n.skeletons=d),f.length>0&&(n.animations=f),m.length>0&&(n.nodes=m)}return n.object=s,n;function o(a){const c=[];for(const l in a){const u=a[l];delete u.metadata,c.push(u)}return c}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const s=e.children[n];this.add(s.clone())}return this}};_r.DEFAULT_UP=new re(0,1,0);_r.DEFAULT_MATRIX_AUTO_UPDATE=!0;_r.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const ks=new re,Jr=new re,o0=new re,eo=new re,Tl=new re,El=new re,LT=new re,a0=new re,c0=new re,l0=new re;let tp=!1,np=class _c{constructor(e=new re,t=new re,n=new re){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,s){s.subVectors(n,t),ks.subVectors(e,t),s.cross(ks);const r=s.lengthSq();return r>0?s.multiplyScalar(1/Math.sqrt(r)):s.set(0,0,0)}static getBarycoord(e,t,n,s,r){ks.subVectors(s,t),Jr.subVectors(n,t),o0.subVectors(e,t);const o=ks.dot(ks),a=ks.dot(Jr),c=ks.dot(o0),l=Jr.dot(Jr),u=Jr.dot(o0),h=o*l-a*a;if(h===0)return r.set(-2,-1,-1);const d=1/h,f=(l*c-a*u)*d,m=(o*u-a*c)*d;return r.set(1-f-m,m,f)}static containsPoint(e,t,n,s){return this.getBarycoord(e,t,n,s,eo),eo.x>=0&&eo.y>=0&&eo.x+eo.y<=1}static getUV(e,t,n,s,r,o,a,c){return tp===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),tp=!0),this.getInterpolation(e,t,n,s,r,o,a,c)}static getInterpolation(e,t,n,s,r,o,a,c){return this.getBarycoord(e,t,n,s,eo),c.setScalar(0),c.addScaledVector(r,eo.x),c.addScaledVector(o,eo.y),c.addScaledVector(a,eo.z),c}static isFrontFacing(e,t,n,s){return ks.subVectors(n,t),Jr.subVectors(e,t),ks.cross(Jr).dot(s)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,s){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[s]),this}setFromAttributeAndIndices(e,t,n,s){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,s),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return ks.subVectors(this.c,this.b),Jr.subVectors(this.a,this.b),ks.cross(Jr).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return _c.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return _c.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,s,r){return tp===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),tp=!0),_c.getInterpolation(e,this.a,this.b,this.c,t,n,s,r)}getInterpolation(e,t,n,s,r){return _c.getInterpolation(e,this.a,this.b,this.c,t,n,s,r)}containsPoint(e){return _c.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return _c.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,s=this.b,r=this.c;let o,a;Tl.subVectors(s,n),El.subVectors(r,n),a0.subVectors(e,n);const c=Tl.dot(a0),l=El.dot(a0);if(c<=0&&l<=0)return t.copy(n);c0.subVectors(e,s);const u=Tl.dot(c0),h=El.dot(c0);if(u>=0&&h<=u)return t.copy(s);const d=c*h-u*l;if(d<=0&&c>=0&&u<=0)return o=c/(c-u),t.copy(n).addScaledVector(Tl,o);l0.subVectors(e,r);const f=Tl.dot(l0),m=El.dot(l0);if(m>=0&&f<=m)return t.copy(r);const _=f*l-c*m;if(_<=0&&l>=0&&m<=0)return a=l/(l-m),t.copy(n).addScaledVector(El,a);const g=u*m-f*h;if(g<=0&&h-u>=0&&f-m>=0)return LT.subVectors(r,s),a=(h-u)/(h-u+(f-m)),t.copy(s).addScaledVector(LT,a);const p=1/(g+_+d);return o=_*p,a=d*p,t.copy(n).addScaledVector(Tl,o).addScaledVector(El,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}},tF=0,xh=class extends gh{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:tF++}),this.uuid=bf(),this.name="",this.type="Material",this.blending=Cu,this.side=za,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=TC,this.blendDst=EC,this.blendEquation=hu,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=vx,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=OI,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=j_,this.stencilZFail=j_,this.stencilZPass=j_,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const s=this[t];if(s===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}s&&s.isColor?s.set(n):s&&s.isVector3&&n&&n.isVector3?s.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Cu&&(n.blending=this.blending),this.side!==za&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.forceSinglePass===!0&&(n.forceSinglePass=this.forceSinglePass),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function s(r){const o=[];for(const a in r){const c=r[a];delete c.metadata,o.push(c)}return o}if(t){const r=s(e.textures),o=s(e.images);r.length>0&&(n.textures=r),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const s=t.length;n=new Array(s);for(let r=0;r!==s;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}};const HC={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},zs={h:0,s:0,l:0},ip={h:0,s:0,l:0};function u0(i,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?i+(e-i)*6*t:t<1/2?e:t<2/3?i+(e-i)*6*(2/3-t):i}let Wt=class{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,t===void 0&&n===void 0?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Et){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Os.toWorkingColorSpace(this,t),this}setRGB(e,t,n,s=Os.workingColorSpace){return this.r=e,this.g=t,this.b=n,Os.toWorkingColorSpace(this,s),this}setHSL(e,t,n,s=Os.workingColorSpace){if(e=BI(e,1),t=xi(t,0,1),n=xi(n,0,1),t===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+t):n+t-n*t,o=2*n-r;this.r=u0(o,r,e+1/3),this.g=u0(o,r,e),this.b=u0(o,r,e-1/3)}return Os.toWorkingColorSpace(this,s),this}setStyle(e,t=Et){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let s;if(s=/^(\w+)\(([^\)]*)\)/.exec(e)){let r;const o=s[1],a=s[2];switch(o){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,t);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,t);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=s[1],o=r.length;if(o===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,t);if(o===6)return this.setHex(parseInt(r,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=Et){const n=HC[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Nu(e.r),this.g=Nu(e.g),this.b=Nu(e.b),this}copyLinearToSRGB(e){return this.r=Q_(e.r),this.g=Q_(e.g),this.b=Q_(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Et){return Os.fromWorkingColorSpace(fi.copy(this),e),Math.round(xi(fi.r*255,0,255))*65536+Math.round(xi(fi.g*255,0,255))*256+Math.round(xi(fi.b*255,0,255))}getHexString(e=Et){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Os.workingColorSpace){Os.fromWorkingColorSpace(fi.copy(this),t);const n=fi.r,s=fi.g,r=fi.b,o=Math.max(n,s,r),a=Math.min(n,s,r);let c,l;const u=(a+o)/2;if(a===o)c=0,l=0;else{const h=o-a;switch(l=u<=.5?h/(o+a):h/(2-o-a),o){case n:c=(s-r)/h+(s<r?6:0);break;case s:c=(r-n)/h+2;break;case r:c=(n-s)/h+4;break}c/=6}return e.h=c,e.s=l,e.l=u,e}getRGB(e,t=Os.workingColorSpace){return Os.fromWorkingColorSpace(fi.copy(this),t),e.r=fi.r,e.g=fi.g,e.b=fi.b,e}getStyle(e=Et){Os.fromWorkingColorSpace(fi.copy(this),e);const t=fi.r,n=fi.g,s=fi.b;return e!==Et?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${s.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(s*255)})`}offsetHSL(e,t,n){return this.getHSL(zs),zs.h+=e,zs.s+=t,zs.l+=n,this.setHSL(zs.h,zs.s,zs.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(zs),e.getHSL(ip);const n=Z_(zs.h,ip.h,t),s=Z_(zs.s,ip.s,t),r=Z_(zs.l,ip.l,t);return this.setHSL(n,s,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,s=this.b,r=e.elements;return this.r=r[0]*t+r[3]*n+r[6]*s,this.g=r[1]*t+r[4]*n+r[7]*s,this.b=r[2]*t+r[5]*n+r[8]*s,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}};const fi=new Wt;Wt.NAMES=HC;let Mf=class extends xh{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Wt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=FS,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}};const Pn=new re,sp=new ut;let lr=class{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=ST,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let s=0,r=this.itemSize;s<r;s++)this.array[e+s]=t.array[n+s];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)sp.fromBufferAttribute(this,t),sp.applyMatrix3(e),this.setXY(t,sp.x,sp.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)Pn.fromBufferAttribute(this,t),Pn.applyMatrix3(e),this.setXYZ(t,Pn.x,Pn.y,Pn.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)Pn.fromBufferAttribute(this,t),Pn.applyMatrix4(e),this.setXYZ(t,Pn.x,Pn.y,Pn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Pn.fromBufferAttribute(this,t),Pn.applyNormalMatrix(e),this.setXYZ(t,Pn.x,Pn.y,Pn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Pn.fromBufferAttribute(this,t),Pn.transformDirection(e),this.setXYZ(t,Pn.x,Pn.y,Pn.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=jf(t,this.array)),t}setX(e,t){return this.normalized&&(t=is(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=jf(t,this.array)),t}setY(e,t){return this.normalized&&(t=is(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=jf(t,this.array)),t}setZ(e,t){return this.normalized&&(t=is(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=jf(t,this.array)),t}setW(e,t){return this.normalized&&(t=is(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=is(t,this.array),n=is(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,s){return e*=this.itemSize,this.normalized&&(t=is(t,this.array),n=is(n,this.array),s=is(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=s,this}setXYZW(e,t,n,s,r){return e*=this.itemSize,this.normalized&&(t=is(t,this.array),n=is(n,this.array),s=is(s,this.array),r=is(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=s,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==ST&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}},WC=class extends lr{constructor(e,t,n){super(new Uint16Array(e),t,n)}},$C=class extends lr{constructor(e,t,n){super(new Uint32Array(e),t,n)}},Wn=class extends lr{constructor(e,t,n){super(new Float32Array(e),t,n)}},nF=0;const bs=new ci,h0=new _r,wl=new re,rs=new vh,Xh=new vh,Kn=new re;let Us=class qC extends gh{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:nF++}),this.uuid=bf(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(LC(e)?$C:WC)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new kt().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}const s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(e),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return bs.makeRotationFromQuaternion(e),this.applyMatrix4(bs),this}rotateX(e){return bs.makeRotationX(e),this.applyMatrix4(bs),this}rotateY(e){return bs.makeRotationY(e),this.applyMatrix4(bs),this}rotateZ(e){return bs.makeRotationZ(e),this.applyMatrix4(bs),this}translate(e,t,n){return bs.makeTranslation(e,t,n),this.applyMatrix4(bs),this}scale(e,t,n){return bs.makeScale(e,t,n),this.applyMatrix4(bs),this}lookAt(e){return h0.lookAt(e),h0.updateMatrix(),this.applyMatrix4(h0.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(wl).negate(),this.translate(wl.x,wl.y,wl.z),this}setFromPoints(e){const t=[];for(let n=0,s=e.length;n<s;n++){const r=e[n];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new Wn(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new vh);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new re(-1/0,-1/0,-1/0),new re(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,s=t.length;n<s;n++){const r=t[n];rs.setFromBufferAttribute(r),this.morphTargetsRelative?(Kn.addVectors(this.boundingBox.min,rs.min),this.boundingBox.expandByPoint(Kn),Kn.addVectors(this.boundingBox.max,rs.max),this.boundingBox.expandByPoint(Kn)):(this.boundingBox.expandByPoint(rs.min),this.boundingBox.expandByPoint(rs.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new e_);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new re,1/0);return}if(e){const n=this.boundingSphere.center;if(rs.setFromBufferAttribute(e),t)for(let r=0,o=t.length;r<o;r++){const a=t[r];Xh.setFromBufferAttribute(a),this.morphTargetsRelative?(Kn.addVectors(rs.min,Xh.min),rs.expandByPoint(Kn),Kn.addVectors(rs.max,Xh.max),rs.expandByPoint(Kn)):(rs.expandByPoint(Xh.min),rs.expandByPoint(Xh.max))}rs.getCenter(n);let s=0;for(let r=0,o=e.count;r<o;r++)Kn.fromBufferAttribute(e,r),s=Math.max(s,n.distanceToSquared(Kn));if(t)for(let r=0,o=t.length;r<o;r++){const a=t[r],c=this.morphTargetsRelative;for(let l=0,u=a.count;l<u;l++)Kn.fromBufferAttribute(a,l),c&&(wl.fromBufferAttribute(e,l),Kn.add(wl)),s=Math.max(s,n.distanceToSquared(Kn))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,s=t.position.array,r=t.normal.array,o=t.uv.array,a=s.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new lr(new Float32Array(4*a),4));const c=this.getAttribute("tangent").array,l=[],u=[];for(let T=0;T<a;T++)l[T]=new re,u[T]=new re;const h=new re,d=new re,f=new re,m=new ut,_=new ut,g=new ut,p=new re,y=new re;function x(T,C,D){h.fromArray(s,T*3),d.fromArray(s,C*3),f.fromArray(s,D*3),m.fromArray(o,T*2),_.fromArray(o,C*2),g.fromArray(o,D*2),d.sub(h),f.sub(h),_.sub(m),g.sub(m);const P=1/(_.x*g.y-g.x*_.y);isFinite(P)&&(p.copy(d).multiplyScalar(g.y).addScaledVector(f,-_.y).multiplyScalar(P),y.copy(f).multiplyScalar(_.x).addScaledVector(d,-g.x).multiplyScalar(P),l[T].add(p),l[C].add(p),l[D].add(p),u[T].add(y),u[C].add(y),u[D].add(y))}let v=this.groups;v.length===0&&(v=[{start:0,count:n.length}]);for(let T=0,C=v.length;T<C;++T){const D=v[T],P=D.start,N=D.count;for(let L=P,U=P+N;L<U;L+=3)x(n[L+0],n[L+1],n[L+2])}const S=new re,M=new re,E=new re,w=new re;function b(T){E.fromArray(r,T*3),w.copy(E);const C=l[T];S.copy(C),S.sub(E.multiplyScalar(E.dot(C))).normalize(),M.crossVectors(w,C);const P=M.dot(u[T])<0?-1:1;c[T*4]=S.x,c[T*4+1]=S.y,c[T*4+2]=S.z,c[T*4+3]=P}for(let T=0,C=v.length;T<C;++T){const D=v[T],P=D.start,N=D.count;for(let L=P,U=P+N;L<U;L+=3)b(n[L+0]),b(n[L+1]),b(n[L+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new lr(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let d=0,f=n.count;d<f;d++)n.setXYZ(d,0,0,0);const s=new re,r=new re,o=new re,a=new re,c=new re,l=new re,u=new re,h=new re;if(e)for(let d=0,f=e.count;d<f;d+=3){const m=e.getX(d+0),_=e.getX(d+1),g=e.getX(d+2);s.fromBufferAttribute(t,m),r.fromBufferAttribute(t,_),o.fromBufferAttribute(t,g),u.subVectors(o,r),h.subVectors(s,r),u.cross(h),a.fromBufferAttribute(n,m),c.fromBufferAttribute(n,_),l.fromBufferAttribute(n,g),a.add(u),c.add(u),l.add(u),n.setXYZ(m,a.x,a.y,a.z),n.setXYZ(_,c.x,c.y,c.z),n.setXYZ(g,l.x,l.y,l.z)}else for(let d=0,f=t.count;d<f;d+=3)s.fromBufferAttribute(t,d+0),r.fromBufferAttribute(t,d+1),o.fromBufferAttribute(t,d+2),u.subVectors(o,r),h.subVectors(s,r),u.cross(h),n.setXYZ(d+0,u.x,u.y,u.z),n.setXYZ(d+1,u.x,u.y,u.z),n.setXYZ(d+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeGeometries() instead."),this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Kn.fromBufferAttribute(e,t),Kn.normalize(),e.setXYZ(t,Kn.x,Kn.y,Kn.z)}toNonIndexed(){function e(a,c){const l=a.array,u=a.itemSize,h=a.normalized,d=new l.constructor(c.length*u);let f=0,m=0;for(let _=0,g=c.length;_<g;_++){a.isInterleavedBufferAttribute?f=c[_]*a.data.stride+a.offset:f=c[_]*u;for(let p=0;p<u;p++)d[m++]=l[f++]}return new lr(d,u,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new qC,n=this.index.array,s=this.attributes;for(const a in s){const c=s[a],l=e(c,n);t.setAttribute(a,l)}const r=this.morphAttributes;for(const a in r){const c=[],l=r[a];for(let u=0,h=l.length;u<h;u++){const d=l[u],f=e(d,n);c.push(f)}t.morphAttributes[a]=c}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,c=o.length;a<c;a++){const l=o[a];t.addGroup(l.start,l.count,l.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const c=this.parameters;for(const l in c)c[l]!==void 0&&(e[l]=c[l]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const c in n){const l=n[c];e.data.attributes[c]=l.toJSON(e.data)}const s={};let r=!1;for(const c in this.morphAttributes){const l=this.morphAttributes[c],u=[];for(let h=0,d=l.length;h<d;h++){const f=l[h];u.push(f.toJSON(e.data))}u.length>0&&(s[c]=u,r=!0)}r&&(e.data.morphAttributes=s,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const s=e.attributes;for(const l in s){const u=s[l];this.setAttribute(l,u.clone(t))}const r=e.morphAttributes;for(const l in r){const u=[],h=r[l];for(let d=0,f=h.length;d<f;d++)u.push(h[d].clone(t));this.morphAttributes[l]=u}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let l=0,u=o.length;l<u;l++){const h=o[l];this.addGroup(h.start,h.count,h.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const c=e.boundingSphere;return c!==null&&(this.boundingSphere=c.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}};const IT=new ci,Mr=new kC,rp=new e_,FT=new re,Al=new re,Cl=new re,Rl=new re,d0=new re,op=new re,ap=new ut,cp=new ut,lp=new ut,UT=new re,OT=new re,BT=new re,up=new re,hp=new re;let Rs=class extends _r{constructor(e=new Us,t=new Mf){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const s=t[n[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=s.length;r<o;r++){const a=s[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}getVertexPosition(e,t){const n=this.geometry,s=n.attributes.position,r=n.morphAttributes.position,o=n.morphTargetsRelative;t.fromBufferAttribute(s,e);const a=this.morphTargetInfluences;if(r&&a){op.set(0,0,0);for(let c=0,l=r.length;c<l;c++){const u=a[c],h=r[c];u!==0&&(d0.fromBufferAttribute(h,e),o?op.addScaledVector(d0,u):op.addScaledVector(d0.sub(t),u))}t.add(op)}return t}raycast(e,t){const n=this.geometry,s=this.material,r=this.matrixWorld;s!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),rp.copy(n.boundingSphere),rp.applyMatrix4(r),Mr.copy(e.ray).recast(e.near),!(rp.containsPoint(Mr.origin)===!1&&(Mr.intersectSphere(rp,FT)===null||Mr.origin.distanceToSquared(FT)>(e.far-e.near)**2))&&(IT.copy(r).invert(),Mr.copy(e.ray).applyMatrix4(IT),!(n.boundingBox!==null&&Mr.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t)))}_computeIntersections(e,t){let n;const s=this.geometry,r=this.material,o=s.index,a=s.attributes.position,c=s.attributes.uv,l=s.attributes.uv1,u=s.attributes.normal,h=s.groups,d=s.drawRange;if(o!==null)if(Array.isArray(r))for(let f=0,m=h.length;f<m;f++){const _=h[f],g=r[_.materialIndex],p=Math.max(_.start,d.start),y=Math.min(o.count,Math.min(_.start+_.count,d.start+d.count));for(let x=p,v=y;x<v;x+=3){const S=o.getX(x),M=o.getX(x+1),E=o.getX(x+2);n=dp(this,g,e,Mr,c,l,u,S,M,E),n&&(n.faceIndex=Math.floor(x/3),n.face.materialIndex=_.materialIndex,t.push(n))}}else{const f=Math.max(0,d.start),m=Math.min(o.count,d.start+d.count);for(let _=f,g=m;_<g;_+=3){const p=o.getX(_),y=o.getX(_+1),x=o.getX(_+2);n=dp(this,r,e,Mr,c,l,u,p,y,x),n&&(n.faceIndex=Math.floor(_/3),t.push(n))}}else if(a!==void 0)if(Array.isArray(r))for(let f=0,m=h.length;f<m;f++){const _=h[f],g=r[_.materialIndex],p=Math.max(_.start,d.start),y=Math.min(a.count,Math.min(_.start+_.count,d.start+d.count));for(let x=p,v=y;x<v;x+=3){const S=x,M=x+1,E=x+2;n=dp(this,g,e,Mr,c,l,u,S,M,E),n&&(n.faceIndex=Math.floor(x/3),n.face.materialIndex=_.materialIndex,t.push(n))}}else{const f=Math.max(0,d.start),m=Math.min(a.count,d.start+d.count);for(let _=f,g=m;_<g;_+=3){const p=_,y=_+1,x=_+2;n=dp(this,r,e,Mr,c,l,u,p,y,x),n&&(n.faceIndex=Math.floor(_/3),t.push(n))}}}};function iF(i,e,t,n,s,r,o,a){let c;if(e.side===ji?c=n.intersectTriangle(o,r,s,!0,a):c=n.intersectTriangle(s,r,o,e.side===za,a),c===null)return null;hp.copy(a),hp.applyMatrix4(i.matrixWorld);const l=t.ray.origin.distanceTo(hp);return l<t.near||l>t.far?null:{distance:l,point:hp.clone(),object:i}}function dp(i,e,t,n,s,r,o,a,c,l){i.getVertexPosition(a,Al),i.getVertexPosition(c,Cl),i.getVertexPosition(l,Rl);const u=iF(i,e,t,n,Al,Cl,Rl,up);if(u){s&&(ap.fromBufferAttribute(s,a),cp.fromBufferAttribute(s,c),lp.fromBufferAttribute(s,l),u.uv=np.getInterpolation(up,Al,Cl,Rl,ap,cp,lp,new ut)),r&&(ap.fromBufferAttribute(r,a),cp.fromBufferAttribute(r,c),lp.fromBufferAttribute(r,l),u.uv1=np.getInterpolation(up,Al,Cl,Rl,ap,cp,lp,new ut),u.uv2=u.uv1),o&&(UT.fromBufferAttribute(o,a),OT.fromBufferAttribute(o,c),BT.fromBufferAttribute(o,l),u.normal=np.getInterpolation(up,Al,Cl,Rl,UT,OT,BT,new re),u.normal.dot(n.direction)>0&&u.normal.multiplyScalar(-1));const h={a,b:c,c:l,normal:new re,materialIndex:0};np.getNormal(Al,Cl,Rl,h.normal),u.face=h}return u}let US=class XC extends Us{constructor(e=1,t=1,n=1,s=1,r=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:s,heightSegments:r,depthSegments:o};const a=this;s=Math.floor(s),r=Math.floor(r),o=Math.floor(o);const c=[],l=[],u=[],h=[];let d=0,f=0;m("z","y","x",-1,-1,n,t,e,o,r,0),m("z","y","x",1,-1,n,t,-e,o,r,1),m("x","z","y",1,1,e,n,t,s,o,2),m("x","z","y",1,-1,e,n,-t,s,o,3),m("x","y","z",1,-1,e,t,n,s,r,4),m("x","y","z",-1,-1,e,t,-n,s,r,5),this.setIndex(c),this.setAttribute("position",new Wn(l,3)),this.setAttribute("normal",new Wn(u,3)),this.setAttribute("uv",new Wn(h,2));function m(_,g,p,y,x,v,S,M,E,w,b){const T=v/E,C=S/w,D=v/2,P=S/2,N=M/2,L=E+1,U=w+1;let B=0,k=0;const $=new re;for(let z=0;z<U;z++){const Y=z*C-P;for(let ne=0;ne<L;ne++){const te=ne*T-D;$[_]=te*y,$[g]=Y*x,$[p]=N,l.push($.x,$.y,$.z),$[_]=0,$[g]=0,$[p]=M>0?1:-1,u.push($.x,$.y,$.z),h.push(ne/E),h.push(1-z/w),B+=1}}for(let z=0;z<w;z++)for(let Y=0;Y<E;Y++){const ne=d+Y+L*z,te=d+Y+L*(z+1),V=d+(Y+1)+L*(z+1),H=d+(Y+1)+L*z;c.push(ne,te,H),c.push(te,V,H),k+=6}a.addGroup(f,k,b),f+=k,d+=B}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new XC(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}};function Yu(i){const e={};for(const t in i){e[t]={};for(const n in i[t]){const s=i[t][n];s&&(s.isColor||s.isMatrix3||s.isMatrix4||s.isVector2||s.isVector3||s.isVector4||s.isTexture||s.isQuaternion)?s.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=s.clone():Array.isArray(s)?e[t][n]=s.slice():e[t][n]=s}}return e}function wi(i){const e={};for(let t=0;t<i.length;t++){const n=Yu(i[t]);for(const s in n)e[s]=n[s]}return e}function sF(i){const e=[];for(let t=0;t<i.length;t++)e.push(i[t].clone());return e}function jC(i){return i.getRenderTarget()===null?i.outputColorSpace:Lr}const sg={clone:Yu,merge:wi};var rF=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,oF=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;let _s=class extends xh{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=rF,this.fragmentShader=oF,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Yu(e.uniforms),this.uniformsGroups=sF(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const s in this.uniforms){const o=this.uniforms[s].value;o&&o.isTexture?t.uniforms[s]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[s]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[s]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[s]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[s]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[s]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[s]={type:"m4",value:o.toArray()}:t.uniforms[s]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const s in this.extensions)this.extensions[s]===!0&&(n[s]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}},YC=class extends _r{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new ci,this.projectionMatrix=new ci,this.projectionMatrixInverse=new ci}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}},As=class extends YC{constructor(e=50,t=1,n=.1,s=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=s,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Tx*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Y_*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Tx*2*Math.atan(Math.tan(Y_*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,s,r,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=s,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Y_*.5*this.fov)/this.zoom,n=2*t,s=this.aspect*n,r=-.5*s;const o=this.view;if(this.view!==null&&this.view.enabled){const c=o.fullWidth,l=o.fullHeight;r+=o.offsetX*s/c,t-=o.offsetY*n/l,s*=o.width/c,n*=o.height/l}const a=this.filmOffset;a!==0&&(r+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+s,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}};const Nl=-90,Pl=1;let aF=class extends _r{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n;const s=new As(Nl,Pl,e,t);s.layers=this.layers,s.up.set(0,1,0),s.lookAt(1,0,0),this.add(s);const r=new As(Nl,Pl,e,t);r.layers=this.layers,r.up.set(0,1,0),r.lookAt(-1,0,0),this.add(r);const o=new As(Nl,Pl,e,t);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(0,1,0),this.add(o);const a=new As(Nl,Pl,e,t);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(0,-1,0),this.add(a);const c=new As(Nl,Pl,e,t);c.layers=this.layers,c.up.set(0,1,0),c.lookAt(0,0,1),this.add(c);const l=new As(Nl,Pl,e,t);l.layers=this.layers,l.up.set(0,1,0),l.lookAt(0,0,-1),this.add(l)}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[s,r,o,a,c,l]=this.children,u=e.getRenderTarget(),h=e.toneMapping,d=e.xr.enabled;e.toneMapping=Lo,e.xr.enabled=!1;const f=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,s),e.setRenderTarget(n,1),e.render(t,r),e.setRenderTarget(n,2),e.render(t,o),e.setRenderTarget(n,3),e.render(t,a),e.setRenderTarget(n,4),e.render(t,c),n.texture.generateMipmaps=f,e.setRenderTarget(n,5),e.render(t,l),e.setRenderTarget(u),e.toneMapping=h,e.xr.enabled=d,n.texture.needsPMREMUpdate=!0}},ZC=class extends Gr{constructor(e,t,n,s,r,o,a,c,l,u){e=e!==void 0?e:[],t=t!==void 0?t:qu,super(e,t,n,s,r,o,a,c,l,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}},cF=class extends cr{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},s=[n,n,n,n,n,n];t.encoding!==void 0&&(Cd("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),t.colorSpace=t.encoding===Bc?Et:kc),this.texture=new ZC(s,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:ws}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},s=new US(5,5,5),r=new _s({name:"CubemapFromEquirect",uniforms:Yu(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:ji,blending:Da});r.uniforms.tEquirect.value=t;const o=new Rs(s,r),a=t.minFilter;return t.minFilter===Gd&&(t.minFilter=ws),new aF(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,n,s){const r=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,s);e.setRenderTarget(r)}};const f0=new re,lF=new re,uF=new kt;let vc=class{constructor(e=new re(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,s){return this.normal.set(e,t,n),this.constant=s,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const s=f0.subVectors(n,t).cross(lF.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(s,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(f0),s=this.normal.dot(n);if(s===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/s;return r<0||r>1?null:t.copy(e.start).addScaledVector(n,r)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||uF.getNormalMatrix(e),s=this.coplanarPoint(f0).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-s.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}};const rc=new e_,fp=new re;let KC=class{constructor(e=new vc,t=new vc,n=new vc,s=new vc,r=new vc,o=new vc){this.planes=[e,t,n,s,r,o]}set(e,t,n,s,r,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(s),a[4].copy(r),a[5].copy(o),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,s=n[0],r=n[1],o=n[2],a=n[3],c=n[4],l=n[5],u=n[6],h=n[7],d=n[8],f=n[9],m=n[10],_=n[11],g=n[12],p=n[13],y=n[14],x=n[15];return t[0].setComponents(a-s,h-c,_-d,x-g).normalize(),t[1].setComponents(a+s,h+c,_+d,x+g).normalize(),t[2].setComponents(a+r,h+l,_+f,x+p).normalize(),t[3].setComponents(a-r,h-l,_-f,x-p).normalize(),t[4].setComponents(a-o,h-u,_-m,x-y).normalize(),t[5].setComponents(a+o,h+u,_+m,x+y).normalize(),this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),rc.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),rc.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(rc)}intersectsSprite(e){return rc.center.set(0,0,0),rc.radius=.7071067811865476,rc.applyMatrix4(e.matrixWorld),this.intersectsSphere(rc)}intersectsSphere(e){const t=this.planes,n=e.center,s=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(n)<s)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const s=t[n];if(fp.x=s.normal.x>0?e.max.x:e.min.x,fp.y=s.normal.y>0?e.max.y:e.min.y,fp.z=s.normal.z>0?e.max.z:e.min.z,s.distanceToPoint(fp)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}};function QC(){let i=null,e=!1,t=null,n=null;function s(r,o){t(r,o),n=i.requestAnimationFrame(s)}return{start:function(){e!==!0&&t!==null&&(n=i.requestAnimationFrame(s),e=!0)},stop:function(){i.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){i=r}}}function hF(i,e){const t=e.isWebGL2,n=new WeakMap;function s(l,u){const h=l.array,d=l.usage,f=i.createBuffer();i.bindBuffer(u,f),i.bufferData(u,h,d),l.onUploadCallback();let m;if(h instanceof Float32Array)m=i.FLOAT;else if(h instanceof Uint16Array)if(l.isFloat16BufferAttribute)if(t)m=i.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else m=i.UNSIGNED_SHORT;else if(h instanceof Int16Array)m=i.SHORT;else if(h instanceof Uint32Array)m=i.UNSIGNED_INT;else if(h instanceof Int32Array)m=i.INT;else if(h instanceof Int8Array)m=i.BYTE;else if(h instanceof Uint8Array)m=i.UNSIGNED_BYTE;else if(h instanceof Uint8ClampedArray)m=i.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+h);return{buffer:f,type:m,bytesPerElement:h.BYTES_PER_ELEMENT,version:l.version}}function r(l,u,h){const d=u.array,f=u.updateRange;i.bindBuffer(h,l),f.count===-1?i.bufferSubData(h,0,d):(t?i.bufferSubData(h,f.offset*d.BYTES_PER_ELEMENT,d,f.offset,f.count):i.bufferSubData(h,f.offset*d.BYTES_PER_ELEMENT,d.subarray(f.offset,f.offset+f.count)),f.count=-1),u.onUploadCallback()}function o(l){return l.isInterleavedBufferAttribute&&(l=l.data),n.get(l)}function a(l){l.isInterleavedBufferAttribute&&(l=l.data);const u=n.get(l);u&&(i.deleteBuffer(u.buffer),n.delete(l))}function c(l,u){if(l.isGLBufferAttribute){const d=n.get(l);(!d||d.version<l.version)&&n.set(l,{buffer:l.buffer,type:l.type,bytesPerElement:l.elementSize,version:l.version});return}l.isInterleavedBufferAttribute&&(l=l.data);const h=n.get(l);h===void 0?n.set(l,s(l,u)):h.version<l.version&&(r(h.buffer,l,u),h.version=l.version)}return{get:o,remove:a,update:c}}let JC=class eR extends Us{constructor(e=1,t=1,n=1,s=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:s};const r=e/2,o=t/2,a=Math.floor(n),c=Math.floor(s),l=a+1,u=c+1,h=e/a,d=t/c,f=[],m=[],_=[],g=[];for(let p=0;p<u;p++){const y=p*d-o;for(let x=0;x<l;x++){const v=x*h-r;m.push(v,-y,0),_.push(0,0,1),g.push(x/a),g.push(1-p/c)}}for(let p=0;p<c;p++)for(let y=0;y<a;y++){const x=y+l*p,v=y+l*(p+1),S=y+1+l*(p+1),M=y+1+l*p;f.push(x,v,M),f.push(v,S,M)}this.setIndex(f),this.setAttribute("position",new Wn(m,3)),this.setAttribute("normal",new Wn(_,3)),this.setAttribute("uv",new Wn(g,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new eR(e.width,e.height,e.widthSegments,e.heightSegments)}};var dF=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,fF=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,pF=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,mF=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,gF=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,_F=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,vF="vec3 transformed = vec3( position );",xF=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,yF=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,SF=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,bF=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,MF=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,TF=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,EF=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,wF=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,AF=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,CF=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,RF=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,NF=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,PF=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,DF=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,LF=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,IF=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,FF=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,UF=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,OF=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,BF="gl_FragColor = linearToOutputTexel( gl_FragColor );",kF=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,zF=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,GF=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,VF=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,HF=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,WF=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,$F=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,qF=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,XF=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,jF=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,YF=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,ZF=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,KF=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,QF=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,JF=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,eU=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,tU=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,nU=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,iU=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,sU=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,rU=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,oU=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif`,aU=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,cU=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,lU=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,uU=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,hU=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,dU=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,fU=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,pU=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,mU=`#ifdef USE_MAP
	diffuseColor *= texture2D( map, vMapUv );
#endif`,gU=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,_U=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,vU=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,xU=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,yU=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,SU=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,bU=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,MU=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,TU=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,EU=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#ifdef USE_NORMALMAP_TANGENTSPACE
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal, vNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 geometryNormal = normal;`,wU=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,AU=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,CU=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,RU=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,NU=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,PU=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,DU=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,LU=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,IU=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,FU=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,UU=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,OU=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,BU=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,kU=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,zU=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,GU=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,VU=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,HU=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,WU=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,$U=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,qU=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,XU=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,jU=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,YU=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,ZU=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,KU=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,QU=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,JU=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,eO=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,tO=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );
#endif`,nO=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,iO=`#ifdef USE_UV
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,sO=`#ifdef USE_UV
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,rO=`#ifdef USE_UV
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,oO=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const aO=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,cO=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,lO=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,uO=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,hO=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,dO=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,fO=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,pO=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,mO=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,gO=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,_O=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,vO=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,xO=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,yO=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,SO=`#include <common>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,bO=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,MO=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,TO=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,EO=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,wO=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,AO=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,CO=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,RO=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,NO=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,PO=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,DO=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,LO=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,IO=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,FO=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,UO=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,OO=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,BO=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,kO=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,zO=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Rt={alphamap_fragment:dF,alphamap_pars_fragment:fF,alphatest_fragment:pF,alphatest_pars_fragment:mF,aomap_fragment:gF,aomap_pars_fragment:_F,begin_vertex:vF,beginnormal_vertex:xF,bsdfs:yF,iridescence_fragment:SF,bumpmap_pars_fragment:bF,clipping_planes_fragment:MF,clipping_planes_pars_fragment:TF,clipping_planes_pars_vertex:EF,clipping_planes_vertex:wF,color_fragment:AF,color_pars_fragment:CF,color_pars_vertex:RF,color_vertex:NF,common:PF,cube_uv_reflection_fragment:DF,defaultnormal_vertex:LF,displacementmap_pars_vertex:IF,displacementmap_vertex:FF,emissivemap_fragment:UF,emissivemap_pars_fragment:OF,encodings_fragment:BF,encodings_pars_fragment:kF,envmap_fragment:zF,envmap_common_pars_fragment:GF,envmap_pars_fragment:VF,envmap_pars_vertex:HF,envmap_physical_pars_fragment:tU,envmap_vertex:WF,fog_vertex:$F,fog_pars_vertex:qF,fog_fragment:XF,fog_pars_fragment:jF,gradientmap_pars_fragment:YF,lightmap_fragment:ZF,lightmap_pars_fragment:KF,lights_lambert_fragment:QF,lights_lambert_pars_fragment:JF,lights_pars_begin:eU,lights_toon_fragment:nU,lights_toon_pars_fragment:iU,lights_phong_fragment:sU,lights_phong_pars_fragment:rU,lights_physical_fragment:oU,lights_physical_pars_fragment:aU,lights_fragment_begin:cU,lights_fragment_maps:lU,lights_fragment_end:uU,logdepthbuf_fragment:hU,logdepthbuf_pars_fragment:dU,logdepthbuf_pars_vertex:fU,logdepthbuf_vertex:pU,map_fragment:mU,map_pars_fragment:gU,map_particle_fragment:_U,map_particle_pars_fragment:vU,metalnessmap_fragment:xU,metalnessmap_pars_fragment:yU,morphcolor_vertex:SU,morphnormal_vertex:bU,morphtarget_pars_vertex:MU,morphtarget_vertex:TU,normal_fragment_begin:EU,normal_fragment_maps:wU,normal_pars_fragment:AU,normal_pars_vertex:CU,normal_vertex:RU,normalmap_pars_fragment:NU,clearcoat_normal_fragment_begin:PU,clearcoat_normal_fragment_maps:DU,clearcoat_pars_fragment:LU,iridescence_pars_fragment:IU,output_fragment:FU,packing:UU,premultiplied_alpha_fragment:OU,project_vertex:BU,dithering_fragment:kU,dithering_pars_fragment:zU,roughnessmap_fragment:GU,roughnessmap_pars_fragment:VU,shadowmap_pars_fragment:HU,shadowmap_pars_vertex:WU,shadowmap_vertex:$U,shadowmask_pars_fragment:qU,skinbase_vertex:XU,skinning_pars_vertex:jU,skinning_vertex:YU,skinnormal_vertex:ZU,specularmap_fragment:KU,specularmap_pars_fragment:QU,tonemapping_fragment:JU,tonemapping_pars_fragment:eO,transmission_fragment:tO,transmission_pars_fragment:nO,uv_pars_fragment:iO,uv_pars_vertex:sO,uv_vertex:rO,worldpos_vertex:oO,background_vert:aO,background_frag:cO,backgroundCube_vert:lO,backgroundCube_frag:uO,cube_vert:hO,cube_frag:dO,depth_vert:fO,depth_frag:pO,distanceRGBA_vert:mO,distanceRGBA_frag:gO,equirect_vert:_O,equirect_frag:vO,linedashed_vert:xO,linedashed_frag:yO,meshbasic_vert:SO,meshbasic_frag:bO,meshlambert_vert:MO,meshlambert_frag:TO,meshmatcap_vert:EO,meshmatcap_frag:wO,meshnormal_vert:AO,meshnormal_frag:CO,meshphong_vert:RO,meshphong_frag:NO,meshphysical_vert:PO,meshphysical_frag:DO,meshtoon_vert:LO,meshtoon_frag:IO,points_vert:FO,points_frag:UO,shadow_vert:OO,shadow_frag:BO,sprite_vert:kO,sprite_frag:zO},Ke={common:{diffuse:{value:new Wt(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new kt},alphaMap:{value:null},alphaMapTransform:{value:new kt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new kt}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new kt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new kt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new kt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new kt},normalScale:{value:new ut(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new kt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new kt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new kt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new kt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Wt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Wt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new kt}},sprite:{diffuse:{value:new Wt(16777215)},opacity:{value:1},center:{value:new ut(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new kt},alphaMap:{value:null},alphaTest:{value:0}}},Er={basic:{uniforms:wi([Ke.common,Ke.specularmap,Ke.envmap,Ke.aomap,Ke.lightmap,Ke.fog]),vertexShader:Rt.meshbasic_vert,fragmentShader:Rt.meshbasic_frag},lambert:{uniforms:wi([Ke.common,Ke.specularmap,Ke.envmap,Ke.aomap,Ke.lightmap,Ke.emissivemap,Ke.bumpmap,Ke.normalmap,Ke.displacementmap,Ke.fog,Ke.lights,{emissive:{value:new Wt(0)}}]),vertexShader:Rt.meshlambert_vert,fragmentShader:Rt.meshlambert_frag},phong:{uniforms:wi([Ke.common,Ke.specularmap,Ke.envmap,Ke.aomap,Ke.lightmap,Ke.emissivemap,Ke.bumpmap,Ke.normalmap,Ke.displacementmap,Ke.fog,Ke.lights,{emissive:{value:new Wt(0)},specular:{value:new Wt(1118481)},shininess:{value:30}}]),vertexShader:Rt.meshphong_vert,fragmentShader:Rt.meshphong_frag},standard:{uniforms:wi([Ke.common,Ke.envmap,Ke.aomap,Ke.lightmap,Ke.emissivemap,Ke.bumpmap,Ke.normalmap,Ke.displacementmap,Ke.roughnessmap,Ke.metalnessmap,Ke.fog,Ke.lights,{emissive:{value:new Wt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Rt.meshphysical_vert,fragmentShader:Rt.meshphysical_frag},toon:{uniforms:wi([Ke.common,Ke.aomap,Ke.lightmap,Ke.emissivemap,Ke.bumpmap,Ke.normalmap,Ke.displacementmap,Ke.gradientmap,Ke.fog,Ke.lights,{emissive:{value:new Wt(0)}}]),vertexShader:Rt.meshtoon_vert,fragmentShader:Rt.meshtoon_frag},matcap:{uniforms:wi([Ke.common,Ke.bumpmap,Ke.normalmap,Ke.displacementmap,Ke.fog,{matcap:{value:null}}]),vertexShader:Rt.meshmatcap_vert,fragmentShader:Rt.meshmatcap_frag},points:{uniforms:wi([Ke.points,Ke.fog]),vertexShader:Rt.points_vert,fragmentShader:Rt.points_frag},dashed:{uniforms:wi([Ke.common,Ke.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Rt.linedashed_vert,fragmentShader:Rt.linedashed_frag},depth:{uniforms:wi([Ke.common,Ke.displacementmap]),vertexShader:Rt.depth_vert,fragmentShader:Rt.depth_frag},normal:{uniforms:wi([Ke.common,Ke.bumpmap,Ke.normalmap,Ke.displacementmap,{opacity:{value:1}}]),vertexShader:Rt.meshnormal_vert,fragmentShader:Rt.meshnormal_frag},sprite:{uniforms:wi([Ke.sprite,Ke.fog]),vertexShader:Rt.sprite_vert,fragmentShader:Rt.sprite_frag},background:{uniforms:{uvTransform:{value:new kt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Rt.background_vert,fragmentShader:Rt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:Rt.backgroundCube_vert,fragmentShader:Rt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Rt.cube_vert,fragmentShader:Rt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Rt.equirect_vert,fragmentShader:Rt.equirect_frag},distanceRGBA:{uniforms:wi([Ke.common,Ke.displacementmap,{referencePosition:{value:new re},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Rt.distanceRGBA_vert,fragmentShader:Rt.distanceRGBA_frag},shadow:{uniforms:wi([Ke.lights,Ke.fog,{color:{value:new Wt(0)},opacity:{value:1}}]),vertexShader:Rt.shadow_vert,fragmentShader:Rt.shadow_frag}};Er.physical={uniforms:wi([Er.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new kt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new kt},clearcoatNormalScale:{value:new ut(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new kt},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new kt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new kt},sheen:{value:0},sheenColor:{value:new Wt(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new kt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new kt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new kt},transmissionSamplerSize:{value:new ut},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new kt},attenuationDistance:{value:0},attenuationColor:{value:new Wt(0)},specularColor:{value:new Wt(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new kt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new kt}}]),vertexShader:Rt.meshphysical_vert,fragmentShader:Rt.meshphysical_frag};const pp={r:0,b:0,g:0};function GO(i,e,t,n,s,r,o){const a=new Wt(0);let c=r===!0?0:1,l,u,h=null,d=0,f=null;function m(g,p){let y=!1,x=p.isScene===!0?p.background:null;switch(x&&x.isTexture&&(x=(p.backgroundBlurriness>0?t:e).get(x)),x===null?_(a,c):x&&x.isColor&&(_(x,1),y=!0),i.xr.getEnvironmentBlendMode()){case"opaque":y=!0;break;case"additive":n.buffers.color.setClear(0,0,0,1,o),y=!0;break;case"alpha-blend":n.buffers.color.setClear(0,0,0,0,o),y=!0;break}(i.autoClear||y)&&i.clear(i.autoClearColor,i.autoClearDepth,i.autoClearStencil),x&&(x.isCubeTexture||x.mapping===Jg)?(u===void 0&&(u=new Rs(new US(1,1,1),new _s({name:"BackgroundCubeMaterial",uniforms:Yu(Er.backgroundCube.uniforms),vertexShader:Er.backgroundCube.vertexShader,fragmentShader:Er.backgroundCube.fragmentShader,side:ji,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(M,E,w){this.matrixWorld.copyPosition(w.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),s.update(u)),u.material.uniforms.envMap.value=x,u.material.uniforms.flipEnvMap.value=x.isCubeTexture&&x.isRenderTargetTexture===!1?-1:1,u.material.uniforms.backgroundBlurriness.value=p.backgroundBlurriness,u.material.uniforms.backgroundIntensity.value=p.backgroundIntensity,u.material.toneMapped=x.colorSpace!==Et,(h!==x||d!==x.version||f!==i.toneMapping)&&(u.material.needsUpdate=!0,h=x,d=x.version,f=i.toneMapping),u.layers.enableAll(),g.unshift(u,u.geometry,u.material,0,0,null)):x&&x.isTexture&&(l===void 0&&(l=new Rs(new JC(2,2),new _s({name:"BackgroundMaterial",uniforms:Yu(Er.background.uniforms),vertexShader:Er.background.vertexShader,fragmentShader:Er.background.fragmentShader,side:za,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),s.update(l)),l.material.uniforms.t2D.value=x,l.material.uniforms.backgroundIntensity.value=p.backgroundIntensity,l.material.toneMapped=x.colorSpace!==Et,x.matrixAutoUpdate===!0&&x.updateMatrix(),l.material.uniforms.uvTransform.value.copy(x.matrix),(h!==x||d!==x.version||f!==i.toneMapping)&&(l.material.needsUpdate=!0,h=x,d=x.version,f=i.toneMapping),l.layers.enableAll(),g.unshift(l,l.geometry,l.material,0,0,null))}function _(g,p){g.getRGB(pp,jC(i)),n.buffers.color.setClear(pp.r,pp.g,pp.b,p,o)}return{getClearColor:function(){return a},setClearColor:function(g,p=1){a.set(g),c=p,_(a,c)},getClearAlpha:function(){return c},setClearAlpha:function(g){c=g,_(a,c)},render:m}}function VO(i,e,t,n){const s=i.getParameter(i.MAX_VERTEX_ATTRIBS),r=n.isWebGL2?null:e.get("OES_vertex_array_object"),o=n.isWebGL2||r!==null,a={},c=g(null);let l=c,u=!1;function h(N,L,U,B,k){let $=!1;if(o){const z=_(B,U,L);l!==z&&(l=z,f(l.object)),$=p(N,B,U,k),$&&y(N,B,U,k)}else{const z=L.wireframe===!0;(l.geometry!==B.id||l.program!==U.id||l.wireframe!==z)&&(l.geometry=B.id,l.program=U.id,l.wireframe=z,$=!0)}k!==null&&t.update(k,i.ELEMENT_ARRAY_BUFFER),($||u)&&(u=!1,w(N,L,U,B),k!==null&&i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,t.get(k).buffer))}function d(){return n.isWebGL2?i.createVertexArray():r.createVertexArrayOES()}function f(N){return n.isWebGL2?i.bindVertexArray(N):r.bindVertexArrayOES(N)}function m(N){return n.isWebGL2?i.deleteVertexArray(N):r.deleteVertexArrayOES(N)}function _(N,L,U){const B=U.wireframe===!0;let k=a[N.id];k===void 0&&(k={},a[N.id]=k);let $=k[L.id];$===void 0&&($={},k[L.id]=$);let z=$[B];return z===void 0&&(z=g(d()),$[B]=z),z}function g(N){const L=[],U=[],B=[];for(let k=0;k<s;k++)L[k]=0,U[k]=0,B[k]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:L,enabledAttributes:U,attributeDivisors:B,object:N,attributes:{},index:null}}function p(N,L,U,B){const k=l.attributes,$=L.attributes;let z=0;const Y=U.getAttributes();for(const ne in Y)if(Y[ne].location>=0){const V=k[ne];let H=$[ne];if(H===void 0&&(ne==="instanceMatrix"&&N.instanceMatrix&&(H=N.instanceMatrix),ne==="instanceColor"&&N.instanceColor&&(H=N.instanceColor)),V===void 0||V.attribute!==H||H&&V.data!==H.data)return!0;z++}return l.attributesNum!==z||l.index!==B}function y(N,L,U,B){const k={},$=L.attributes;let z=0;const Y=U.getAttributes();for(const ne in Y)if(Y[ne].location>=0){let V=$[ne];V===void 0&&(ne==="instanceMatrix"&&N.instanceMatrix&&(V=N.instanceMatrix),ne==="instanceColor"&&N.instanceColor&&(V=N.instanceColor));const H={};H.attribute=V,V&&V.data&&(H.data=V.data),k[ne]=H,z++}l.attributes=k,l.attributesNum=z,l.index=B}function x(){const N=l.newAttributes;for(let L=0,U=N.length;L<U;L++)N[L]=0}function v(N){S(N,0)}function S(N,L){const U=l.newAttributes,B=l.enabledAttributes,k=l.attributeDivisors;U[N]=1,B[N]===0&&(i.enableVertexAttribArray(N),B[N]=1),k[N]!==L&&((n.isWebGL2?i:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](N,L),k[N]=L)}function M(){const N=l.newAttributes,L=l.enabledAttributes;for(let U=0,B=L.length;U<B;U++)L[U]!==N[U]&&(i.disableVertexAttribArray(U),L[U]=0)}function E(N,L,U,B,k,$){n.isWebGL2===!0&&(U===i.INT||U===i.UNSIGNED_INT)?i.vertexAttribIPointer(N,L,U,k,$):i.vertexAttribPointer(N,L,U,B,k,$)}function w(N,L,U,B){if(n.isWebGL2===!1&&(N.isInstancedMesh||B.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;x();const k=B.attributes,$=U.getAttributes(),z=L.defaultAttributeValues;for(const Y in $){const ne=$[Y];if(ne.location>=0){let te=k[Y];if(te===void 0&&(Y==="instanceMatrix"&&N.instanceMatrix&&(te=N.instanceMatrix),Y==="instanceColor"&&N.instanceColor&&(te=N.instanceColor)),te!==void 0){const V=te.normalized,H=te.itemSize,Q=t.get(te);if(Q===void 0)continue;const O=Q.buffer,oe=Q.type,Ne=Q.bytesPerElement;if(te.isInterleavedBufferAttribute){const _e=te.data,Fe=_e.stride,Xe=te.offset;if(_e.isInstancedInterleavedBuffer){for(let $e=0;$e<ne.locationSize;$e++)S(ne.location+$e,_e.meshPerAttribute);N.isInstancedMesh!==!0&&B._maxInstanceCount===void 0&&(B._maxInstanceCount=_e.meshPerAttribute*_e.count)}else for(let $e=0;$e<ne.locationSize;$e++)v(ne.location+$e);i.bindBuffer(i.ARRAY_BUFFER,O);for(let $e=0;$e<ne.locationSize;$e++)E(ne.location+$e,H/ne.locationSize,oe,V,Fe*Ne,(Xe+H/ne.locationSize*$e)*Ne)}else{if(te.isInstancedBufferAttribute){for(let _e=0;_e<ne.locationSize;_e++)S(ne.location+_e,te.meshPerAttribute);N.isInstancedMesh!==!0&&B._maxInstanceCount===void 0&&(B._maxInstanceCount=te.meshPerAttribute*te.count)}else for(let _e=0;_e<ne.locationSize;_e++)v(ne.location+_e);i.bindBuffer(i.ARRAY_BUFFER,O);for(let _e=0;_e<ne.locationSize;_e++)E(ne.location+_e,H/ne.locationSize,oe,V,H*Ne,H/ne.locationSize*_e*Ne)}}else if(z!==void 0){const V=z[Y];if(V!==void 0)switch(V.length){case 2:i.vertexAttrib2fv(ne.location,V);break;case 3:i.vertexAttrib3fv(ne.location,V);break;case 4:i.vertexAttrib4fv(ne.location,V);break;default:i.vertexAttrib1fv(ne.location,V)}}}}M()}function b(){D();for(const N in a){const L=a[N];for(const U in L){const B=L[U];for(const k in B)m(B[k].object),delete B[k];delete L[U]}delete a[N]}}function T(N){if(a[N.id]===void 0)return;const L=a[N.id];for(const U in L){const B=L[U];for(const k in B)m(B[k].object),delete B[k];delete L[U]}delete a[N.id]}function C(N){for(const L in a){const U=a[L];if(U[N.id]===void 0)continue;const B=U[N.id];for(const k in B)m(B[k].object),delete B[k];delete U[N.id]}}function D(){P(),u=!0,l!==c&&(l=c,f(l.object))}function P(){c.geometry=null,c.program=null,c.wireframe=!1}return{setup:h,reset:D,resetDefaultState:P,dispose:b,releaseStatesOfGeometry:T,releaseStatesOfProgram:C,initAttributes:x,enableAttribute:v,disableUnusedAttributes:M}}function HO(i,e,t,n){const s=n.isWebGL2;let r;function o(l){r=l}function a(l,u){i.drawArrays(r,l,u),t.update(u,r,1)}function c(l,u,h){if(h===0)return;let d,f;if(s)d=i,f="drawArraysInstanced";else if(d=e.get("ANGLE_instanced_arrays"),f="drawArraysInstancedANGLE",d===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}d[f](r,l,u,h),t.update(u,r,h)}this.setMode=o,this.render=a,this.renderInstances=c}function WO(i,e,t){let n;function s(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const E=e.get("EXT_texture_filter_anisotropic");n=i.getParameter(E.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function r(E){if(E==="highp"){if(i.getShaderPrecisionFormat(i.VERTEX_SHADER,i.HIGH_FLOAT).precision>0&&i.getShaderPrecisionFormat(i.FRAGMENT_SHADER,i.HIGH_FLOAT).precision>0)return"highp";E="mediump"}return E==="mediump"&&i.getShaderPrecisionFormat(i.VERTEX_SHADER,i.MEDIUM_FLOAT).precision>0&&i.getShaderPrecisionFormat(i.FRAGMENT_SHADER,i.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&i.constructor.name==="WebGL2RenderingContext";let a=t.precision!==void 0?t.precision:"highp";const c=r(a);c!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",c,"instead."),a=c);const l=o||e.has("WEBGL_draw_buffers"),u=t.logarithmicDepthBuffer===!0,h=i.getParameter(i.MAX_TEXTURE_IMAGE_UNITS),d=i.getParameter(i.MAX_VERTEX_TEXTURE_IMAGE_UNITS),f=i.getParameter(i.MAX_TEXTURE_SIZE),m=i.getParameter(i.MAX_CUBE_MAP_TEXTURE_SIZE),_=i.getParameter(i.MAX_VERTEX_ATTRIBS),g=i.getParameter(i.MAX_VERTEX_UNIFORM_VECTORS),p=i.getParameter(i.MAX_VARYING_VECTORS),y=i.getParameter(i.MAX_FRAGMENT_UNIFORM_VECTORS),x=d>0,v=o||e.has("OES_texture_float"),S=x&&v,M=o?i.getParameter(i.MAX_SAMPLES):0;return{isWebGL2:o,drawBuffers:l,getMaxAnisotropy:s,getMaxPrecision:r,precision:a,logarithmicDepthBuffer:u,maxTextures:h,maxVertexTextures:d,maxTextureSize:f,maxCubemapSize:m,maxAttributes:_,maxVertexUniforms:g,maxVaryings:p,maxFragmentUniforms:y,vertexTextures:x,floatFragmentTextures:v,floatVertexTextures:S,maxSamples:M}}function $O(i){const e=this;let t=null,n=0,s=!1,r=!1;const o=new vc,a=new kt,c={value:null,needsUpdate:!1};this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(h,d){const f=h.length!==0||d||n!==0||s;return s=d,n=h.length,f},this.beginShadows=function(){r=!0,u(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(h,d){t=u(h,d,0)},this.setState=function(h,d,f){const m=h.clippingPlanes,_=h.clipIntersection,g=h.clipShadows,p=i.get(h);if(!s||m===null||m.length===0||r&&!g)r?u(null):l();else{const y=r?0:n,x=y*4;let v=p.clippingState||null;c.value=v,v=u(m,d,x,f);for(let S=0;S!==x;++S)v[S]=t[S];p.clippingState=v,this.numIntersection=_?this.numPlanes:0,this.numPlanes+=y}};function l(){c.value!==t&&(c.value=t,c.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function u(h,d,f,m){const _=h!==null?h.length:0;let g=null;if(_!==0){if(g=c.value,m!==!0||g===null){const p=f+_*4,y=d.matrixWorldInverse;a.getNormalMatrix(y),(g===null||g.length<p)&&(g=new Float32Array(p));for(let x=0,v=f;x!==_;++x,v+=4)o.copy(h[x]).applyMatrix4(y,a),o.normal.toArray(g,v),g[v+3]=o.constant}c.value=g,c.needsUpdate=!0}return e.numPlanes=_,e.numIntersection=0,g}}function qO(i){let e=new WeakMap;function t(o,a){return a===xx?o.mapping=qu:a===yx&&(o.mapping=Xu),o}function n(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const a=o.mapping;if(a===xx||a===yx)if(e.has(o)){const c=e.get(o).texture;return t(c,o.mapping)}else{const c=o.image;if(c&&c.height>0){const l=new cF(c.height/2);return l.fromEquirectangularTexture(i,o),e.set(o,l),o.addEventListener("dispose",s),t(l.texture,o.mapping)}else return null}}return o}function s(o){const a=o.target;a.removeEventListener("dispose",s);const c=e.get(a);c!==void 0&&(e.delete(a),c.dispose())}function r(){e=new WeakMap}return{get:n,dispose:r}}let tR=class extends YC{constructor(e=-1,t=1,n=1,s=-1,r=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=s,this.near=r,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,s,r,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=s,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,s=(this.top+this.bottom)/2;let r=n-e,o=n+e,a=s+t,c=s-t;if(this.view!==null&&this.view.enabled){const l=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=l*this.view.offsetX,o=r+l*this.view.width,a-=u*this.view.offsetY,c=a-u*this.view.height}this.projectionMatrix.makeOrthographic(r,o,a,c,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}};const gu=4,kT=[.125,.215,.35,.446,.526,.582],Ec=20,p0=new tR,zT=new Wt;let m0=null;const xc=(1+Math.sqrt(5))/2,Dl=1/xc,GT=[new re(1,1,1),new re(-1,1,1),new re(1,1,-1),new re(-1,1,-1),new re(0,xc,Dl),new re(0,xc,-Dl),new re(Dl,0,xc),new re(-Dl,0,xc),new re(xc,Dl,0),new re(-xc,Dl,0)];let VT=class{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,s=100){m0=this._renderer.getRenderTarget(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(e,n,s,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=$T(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=WT(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(m0),e.scissorTest=!1,mp(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===qu||e.mapping===Xu?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),m0=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:ws,minFilter:ws,generateMipmaps:!1,type:Vd,format:er,colorSpace:Lr,depthBuffer:!1},s=HT(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=HT(e,t,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=XO(r)),this._blurMaterial=jO(r,e,t)}return s}_compileMaterial(e){const t=new Rs(this._lodPlanes[0],e);this._renderer.compile(t,p0)}_sceneToCubeUV(e,t,n,s){const a=new As(90,1,t,n),c=[1,-1,1,1,1,1],l=[1,1,1,-1,-1,-1],u=this._renderer,h=u.autoClear,d=u.toneMapping;u.getClearColor(zT),u.toneMapping=Lo,u.autoClear=!1;const f=new Mf({name:"PMREM.Background",side:ji,depthWrite:!1,depthTest:!1}),m=new Rs(new US,f);let _=!1;const g=e.background;g?g.isColor&&(f.color.copy(g),e.background=null,_=!0):(f.color.copy(zT),_=!0);for(let p=0;p<6;p++){const y=p%3;y===0?(a.up.set(0,c[p],0),a.lookAt(l[p],0,0)):y===1?(a.up.set(0,0,c[p]),a.lookAt(0,l[p],0)):(a.up.set(0,c[p],0),a.lookAt(0,0,l[p]));const x=this._cubeSize;mp(s,y*x,p>2?x:0,x,x),u.setRenderTarget(s),_&&u.render(m,a),u.render(e,a)}m.geometry.dispose(),m.material.dispose(),u.toneMapping=d,u.autoClear=h,e.background=g}_textureToCubeUV(e,t){const n=this._renderer,s=e.mapping===qu||e.mapping===Xu;s?(this._cubemapMaterial===null&&(this._cubemapMaterial=$T()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=WT());const r=s?this._cubemapMaterial:this._equirectMaterial,o=new Rs(this._lodPlanes[0],r),a=r.uniforms;a.envMap.value=e;const c=this._cubeSize;mp(t,0,0,3*c,2*c),n.setRenderTarget(t),n.render(o,p0)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let s=1;s<this._lodPlanes.length;s++){const r=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),o=GT[(s-1)%GT.length];this._blur(e,s-1,s,r,o)}t.autoClear=n}_blur(e,t,n,s,r){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,s,"latitudinal",r),this._halfBlur(o,e,n,n,s,"longitudinal",r)}_halfBlur(e,t,n,s,r,o,a){const c=this._renderer,l=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,h=new Rs(this._lodPlanes[s],l),d=l.uniforms,f=this._sizeLods[n]-1,m=isFinite(r)?Math.PI/(2*f):2*Math.PI/(2*Ec-1),_=r/m,g=isFinite(r)?1+Math.floor(u*_):Ec;g>Ec&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${Ec}`);const p=[];let y=0;for(let E=0;E<Ec;++E){const w=E/_,b=Math.exp(-w*w/2);p.push(b),E===0?y+=b:E<g&&(y+=2*b)}for(let E=0;E<p.length;E++)p[E]=p[E]/y;d.envMap.value=e.texture,d.samples.value=g,d.weights.value=p,d.latitudinal.value=o==="latitudinal",a&&(d.poleAxis.value=a);const{_lodMax:x}=this;d.dTheta.value=m,d.mipInt.value=x-n;const v=this._sizeLods[s],S=3*v*(s>x-gu?s-x+gu:0),M=4*(this._cubeSize-v);mp(t,S,M,3*v,2*v),c.setRenderTarget(t),c.render(h,p0)}};function XO(i){const e=[],t=[],n=[];let s=i;const r=i-gu+1+kT.length;for(let o=0;o<r;o++){const a=Math.pow(2,s);t.push(a);let c=1/a;o>i-gu?c=kT[o-i+gu-1]:o===0&&(c=0),n.push(c);const l=1/(a-2),u=-l,h=1+l,d=[u,u,h,u,h,h,u,u,h,h,u,h],f=6,m=6,_=3,g=2,p=1,y=new Float32Array(_*m*f),x=new Float32Array(g*m*f),v=new Float32Array(p*m*f);for(let M=0;M<f;M++){const E=M%3*2/3-1,w=M>2?0:-1,b=[E,w,0,E+2/3,w,0,E+2/3,w+1,0,E,w,0,E+2/3,w+1,0,E,w+1,0];y.set(b,_*m*M),x.set(d,g*m*M);const T=[M,M,M,M,M,M];v.set(T,p*m*M)}const S=new Us;S.setAttribute("position",new lr(y,_)),S.setAttribute("uv",new lr(x,g)),S.setAttribute("faceIndex",new lr(v,p)),e.push(S),s>gu&&s--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function HT(i,e,t){const n=new cr(i,e,t);return n.texture.mapping=Jg,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function mp(i,e,t,n,s){i.viewport.set(e,t,n,s),i.scissor.set(e,t,n,s)}function jO(i,e,t){const n=new Float32Array(Ec),s=new re(0,1,0);return new _s({name:"SphericalGaussianBlur",defines:{n:Ec,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${i}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:s}},vertexShader:OS(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Da,depthTest:!1,depthWrite:!1})}function WT(){return new _s({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:OS(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Da,depthTest:!1,depthWrite:!1})}function $T(){return new _s({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:OS(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Da,depthTest:!1,depthWrite:!1})}function OS(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function YO(i){let e=new WeakMap,t=null;function n(a){if(a&&a.isTexture){const c=a.mapping,l=c===xx||c===yx,u=c===qu||c===Xu;if(l||u)if(a.isRenderTargetTexture&&a.needsPMREMUpdate===!0){a.needsPMREMUpdate=!1;let h=e.get(a);return t===null&&(t=new VT(i)),h=l?t.fromEquirectangular(a,h):t.fromCubemap(a,h),e.set(a,h),h.texture}else{if(e.has(a))return e.get(a).texture;{const h=a.image;if(l&&h&&h.height>0||u&&h&&s(h)){t===null&&(t=new VT(i));const d=l?t.fromEquirectangular(a):t.fromCubemap(a);return e.set(a,d),a.addEventListener("dispose",r),d.texture}else return null}}}return a}function s(a){let c=0;const l=6;for(let u=0;u<l;u++)a[u]!==void 0&&c++;return c===l}function r(a){const c=a.target;c.removeEventListener("dispose",r);const l=e.get(c);l!==void 0&&(e.delete(c),l.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:o}}function ZO(i){const e={};function t(n){if(e[n]!==void 0)return e[n];let s;switch(n){case"WEBGL_depth_texture":s=i.getExtension("WEBGL_depth_texture")||i.getExtension("MOZ_WEBGL_depth_texture")||i.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":s=i.getExtension("EXT_texture_filter_anisotropic")||i.getExtension("MOZ_EXT_texture_filter_anisotropic")||i.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":s=i.getExtension("WEBGL_compressed_texture_s3tc")||i.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":s=i.getExtension("WEBGL_compressed_texture_pvrtc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:s=i.getExtension(n)}return e[n]=s,s}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const s=t(n);return s===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),s}}}function KO(i,e,t,n){const s={},r=new WeakMap;function o(h){const d=h.target;d.index!==null&&e.remove(d.index);for(const m in d.attributes)e.remove(d.attributes[m]);d.removeEventListener("dispose",o),delete s[d.id];const f=r.get(d);f&&(e.remove(f),r.delete(d)),n.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,t.memory.geometries--}function a(h,d){return s[d.id]===!0||(d.addEventListener("dispose",o),s[d.id]=!0,t.memory.geometries++),d}function c(h){const d=h.attributes;for(const m in d)e.update(d[m],i.ARRAY_BUFFER);const f=h.morphAttributes;for(const m in f){const _=f[m];for(let g=0,p=_.length;g<p;g++)e.update(_[g],i.ARRAY_BUFFER)}}function l(h){const d=[],f=h.index,m=h.attributes.position;let _=0;if(f!==null){const y=f.array;_=f.version;for(let x=0,v=y.length;x<v;x+=3){const S=y[x+0],M=y[x+1],E=y[x+2];d.push(S,M,M,E,E,S)}}else{const y=m.array;_=m.version;for(let x=0,v=y.length/3-1;x<v;x+=3){const S=x+0,M=x+1,E=x+2;d.push(S,M,M,E,E,S)}}const g=new(LC(d)?$C:WC)(d,1);g.version=_;const p=r.get(h);p&&e.remove(p),r.set(h,g)}function u(h){const d=r.get(h);if(d){const f=h.index;f!==null&&d.version<f.version&&l(h)}else l(h);return r.get(h)}return{get:a,update:c,getWireframeAttribute:u}}function QO(i,e,t,n){const s=n.isWebGL2;let r;function o(d){r=d}let a,c;function l(d){a=d.type,c=d.bytesPerElement}function u(d,f){i.drawElements(r,f,a,d*c),t.update(f,r,1)}function h(d,f,m){if(m===0)return;let _,g;if(s)_=i,g="drawElementsInstanced";else if(_=e.get("ANGLE_instanced_arrays"),g="drawElementsInstancedANGLE",_===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}_[g](r,f,a,d*c,m),t.update(f,r,m)}this.setMode=o,this.setIndex=l,this.render=u,this.renderInstances=h}function JO(i){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,o,a){switch(t.calls++,o){case i.TRIANGLES:t.triangles+=a*(r/3);break;case i.LINES:t.lines+=a*(r/2);break;case i.LINE_STRIP:t.lines+=a*(r-1);break;case i.LINE_LOOP:t.lines+=a*r;break;case i.POINTS:t.points+=a*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function s(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:s,update:n}}function e3(i,e){return i[0]-e[0]}function t3(i,e){return Math.abs(e[1])-Math.abs(i[1])}function n3(i,e,t){const n={},s=new Float32Array(8),r=new WeakMap,o=new Li,a=[];for(let l=0;l<8;l++)a[l]=[l,0];function c(l,u,h){const d=l.morphTargetInfluences;if(e.isWebGL2===!0){const m=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,_=m!==void 0?m.length:0;let g=r.get(u);if(g===void 0||g.count!==_){let L=function(){P.dispose(),r.delete(u),u.removeEventListener("dispose",L)};var f=L;g!==void 0&&g.texture.dispose();const x=u.morphAttributes.position!==void 0,v=u.morphAttributes.normal!==void 0,S=u.morphAttributes.color!==void 0,M=u.morphAttributes.position||[],E=u.morphAttributes.normal||[],w=u.morphAttributes.color||[];let b=0;x===!0&&(b=1),v===!0&&(b=2),S===!0&&(b=3);let T=u.attributes.position.count*b,C=1;T>e.maxTextureSize&&(C=Math.ceil(T/e.maxTextureSize),T=e.maxTextureSize);const D=new Float32Array(T*C*4*_),P=new OC(D,T,C,_);P.type=Ic,P.needsUpdate=!0;const N=b*4;for(let U=0;U<_;U++){const B=M[U],k=E[U],$=w[U],z=T*C*4*U;for(let Y=0;Y<B.count;Y++){const ne=Y*N;x===!0&&(o.fromBufferAttribute(B,Y),D[z+ne+0]=o.x,D[z+ne+1]=o.y,D[z+ne+2]=o.z,D[z+ne+3]=0),v===!0&&(o.fromBufferAttribute(k,Y),D[z+ne+4]=o.x,D[z+ne+5]=o.y,D[z+ne+6]=o.z,D[z+ne+7]=0),S===!0&&(o.fromBufferAttribute($,Y),D[z+ne+8]=o.x,D[z+ne+9]=o.y,D[z+ne+10]=o.z,D[z+ne+11]=$.itemSize===4?o.w:1)}}g={count:_,texture:P,size:new ut(T,C)},r.set(u,g),u.addEventListener("dispose",L)}let p=0;for(let x=0;x<d.length;x++)p+=d[x];const y=u.morphTargetsRelative?1:1-p;h.getUniforms().setValue(i,"morphTargetBaseInfluence",y),h.getUniforms().setValue(i,"morphTargetInfluences",d),h.getUniforms().setValue(i,"morphTargetsTexture",g.texture,t),h.getUniforms().setValue(i,"morphTargetsTextureSize",g.size)}else{const m=d===void 0?0:d.length;let _=n[u.id];if(_===void 0||_.length!==m){_=[];for(let v=0;v<m;v++)_[v]=[v,0];n[u.id]=_}for(let v=0;v<m;v++){const S=_[v];S[0]=v,S[1]=d[v]}_.sort(t3);for(let v=0;v<8;v++)v<m&&_[v][1]?(a[v][0]=_[v][0],a[v][1]=_[v][1]):(a[v][0]=Number.MAX_SAFE_INTEGER,a[v][1]=0);a.sort(e3);const g=u.morphAttributes.position,p=u.morphAttributes.normal;let y=0;for(let v=0;v<8;v++){const S=a[v],M=S[0],E=S[1];M!==Number.MAX_SAFE_INTEGER&&E?(g&&u.getAttribute("morphTarget"+v)!==g[M]&&u.setAttribute("morphTarget"+v,g[M]),p&&u.getAttribute("morphNormal"+v)!==p[M]&&u.setAttribute("morphNormal"+v,p[M]),s[v]=E,y+=E):(g&&u.hasAttribute("morphTarget"+v)===!0&&u.deleteAttribute("morphTarget"+v),p&&u.hasAttribute("morphNormal"+v)===!0&&u.deleteAttribute("morphNormal"+v),s[v]=0)}const x=u.morphTargetsRelative?1:1-y;h.getUniforms().setValue(i,"morphTargetBaseInfluence",x),h.getUniforms().setValue(i,"morphTargetInfluences",s)}}return{update:c}}function i3(i,e,t,n){let s=new WeakMap;function r(c){const l=n.render.frame,u=c.geometry,h=e.get(c,u);return s.get(h)!==l&&(e.update(h),s.set(h,l)),c.isInstancedMesh&&(c.hasEventListener("dispose",a)===!1&&c.addEventListener("dispose",a),t.update(c.instanceMatrix,i.ARRAY_BUFFER),c.instanceColor!==null&&t.update(c.instanceColor,i.ARRAY_BUFFER)),h}function o(){s=new WeakMap}function a(c){const l=c.target;l.removeEventListener("dispose",a),t.remove(l.instanceMatrix),l.instanceColor!==null&&t.remove(l.instanceColor)}return{update:r,dispose:o}}const nR=new Gr,iR=new OC,sR=new XI,rR=new ZC,qT=[],XT=[],jT=new Float32Array(16),YT=new Float32Array(9),ZT=new Float32Array(4);function yh(i,e,t){const n=i[0];if(n<=0||n>0)return i;const s=e*t;let r=qT[s];if(r===void 0&&(r=new Float32Array(s),qT[s]=r),e!==0){n.toArray(r,0);for(let o=1,a=0;o!==e;++o)a+=t,i[o].toArray(r,a)}return r}function $n(i,e){if(i.length!==e.length)return!1;for(let t=0,n=i.length;t<n;t++)if(i[t]!==e[t])return!1;return!0}function qn(i,e){for(let t=0,n=e.length;t<n;t++)i[t]=e[t]}function t_(i,e){let t=XT[e];t===void 0&&(t=new Int32Array(e),XT[e]=t);for(let n=0;n!==e;++n)t[n]=i.allocateTextureUnit();return t}function s3(i,e){const t=this.cache;t[0]!==e&&(i.uniform1f(this.addr,e),t[0]=e)}function r3(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if($n(t,e))return;i.uniform2fv(this.addr,e),qn(t,e)}}function o3(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(i.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if($n(t,e))return;i.uniform3fv(this.addr,e),qn(t,e)}}function a3(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if($n(t,e))return;i.uniform4fv(this.addr,e),qn(t,e)}}function c3(i,e){const t=this.cache,n=e.elements;if(n===void 0){if($n(t,e))return;i.uniformMatrix2fv(this.addr,!1,e),qn(t,e)}else{if($n(t,n))return;ZT.set(n),i.uniformMatrix2fv(this.addr,!1,ZT),qn(t,n)}}function l3(i,e){const t=this.cache,n=e.elements;if(n===void 0){if($n(t,e))return;i.uniformMatrix3fv(this.addr,!1,e),qn(t,e)}else{if($n(t,n))return;YT.set(n),i.uniformMatrix3fv(this.addr,!1,YT),qn(t,n)}}function u3(i,e){const t=this.cache,n=e.elements;if(n===void 0){if($n(t,e))return;i.uniformMatrix4fv(this.addr,!1,e),qn(t,e)}else{if($n(t,n))return;jT.set(n),i.uniformMatrix4fv(this.addr,!1,jT),qn(t,n)}}function h3(i,e){const t=this.cache;t[0]!==e&&(i.uniform1i(this.addr,e),t[0]=e)}function d3(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if($n(t,e))return;i.uniform2iv(this.addr,e),qn(t,e)}}function f3(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if($n(t,e))return;i.uniform3iv(this.addr,e),qn(t,e)}}function p3(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if($n(t,e))return;i.uniform4iv(this.addr,e),qn(t,e)}}function m3(i,e){const t=this.cache;t[0]!==e&&(i.uniform1ui(this.addr,e),t[0]=e)}function g3(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if($n(t,e))return;i.uniform2uiv(this.addr,e),qn(t,e)}}function _3(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if($n(t,e))return;i.uniform3uiv(this.addr,e),qn(t,e)}}function v3(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if($n(t,e))return;i.uniform4uiv(this.addr,e),qn(t,e)}}function x3(i,e,t){const n=this.cache,s=t.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s),t.setTexture2D(e||nR,s)}function y3(i,e,t){const n=this.cache,s=t.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s),t.setTexture3D(e||sR,s)}function S3(i,e,t){const n=this.cache,s=t.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s),t.setTextureCube(e||rR,s)}function b3(i,e,t){const n=this.cache,s=t.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s),t.setTexture2DArray(e||iR,s)}function M3(i){switch(i){case 5126:return s3;case 35664:return r3;case 35665:return o3;case 35666:return a3;case 35674:return c3;case 35675:return l3;case 35676:return u3;case 5124:case 35670:return h3;case 35667:case 35671:return d3;case 35668:case 35672:return f3;case 35669:case 35673:return p3;case 5125:return m3;case 36294:return g3;case 36295:return _3;case 36296:return v3;case 35678:case 36198:case 36298:case 36306:case 35682:return x3;case 35679:case 36299:case 36307:return y3;case 35680:case 36300:case 36308:case 36293:return S3;case 36289:case 36303:case 36311:case 36292:return b3}}function T3(i,e){i.uniform1fv(this.addr,e)}function E3(i,e){const t=yh(e,this.size,2);i.uniform2fv(this.addr,t)}function w3(i,e){const t=yh(e,this.size,3);i.uniform3fv(this.addr,t)}function A3(i,e){const t=yh(e,this.size,4);i.uniform4fv(this.addr,t)}function C3(i,e){const t=yh(e,this.size,4);i.uniformMatrix2fv(this.addr,!1,t)}function R3(i,e){const t=yh(e,this.size,9);i.uniformMatrix3fv(this.addr,!1,t)}function N3(i,e){const t=yh(e,this.size,16);i.uniformMatrix4fv(this.addr,!1,t)}function P3(i,e){i.uniform1iv(this.addr,e)}function D3(i,e){i.uniform2iv(this.addr,e)}function L3(i,e){i.uniform3iv(this.addr,e)}function I3(i,e){i.uniform4iv(this.addr,e)}function F3(i,e){i.uniform1uiv(this.addr,e)}function U3(i,e){i.uniform2uiv(this.addr,e)}function O3(i,e){i.uniform3uiv(this.addr,e)}function B3(i,e){i.uniform4uiv(this.addr,e)}function k3(i,e,t){const n=this.cache,s=e.length,r=t_(t,s);$n(n,r)||(i.uniform1iv(this.addr,r),qn(n,r));for(let o=0;o!==s;++o)t.setTexture2D(e[o]||nR,r[o])}function z3(i,e,t){const n=this.cache,s=e.length,r=t_(t,s);$n(n,r)||(i.uniform1iv(this.addr,r),qn(n,r));for(let o=0;o!==s;++o)t.setTexture3D(e[o]||sR,r[o])}function G3(i,e,t){const n=this.cache,s=e.length,r=t_(t,s);$n(n,r)||(i.uniform1iv(this.addr,r),qn(n,r));for(let o=0;o!==s;++o)t.setTextureCube(e[o]||rR,r[o])}function V3(i,e,t){const n=this.cache,s=e.length,r=t_(t,s);$n(n,r)||(i.uniform1iv(this.addr,r),qn(n,r));for(let o=0;o!==s;++o)t.setTexture2DArray(e[o]||iR,r[o])}function H3(i){switch(i){case 5126:return T3;case 35664:return E3;case 35665:return w3;case 35666:return A3;case 35674:return C3;case 35675:return R3;case 35676:return N3;case 5124:case 35670:return P3;case 35667:case 35671:return D3;case 35668:case 35672:return L3;case 35669:case 35673:return I3;case 5125:return F3;case 36294:return U3;case 36295:return O3;case 36296:return B3;case 35678:case 36198:case 36298:case 36306:case 35682:return k3;case 35679:case 36299:case 36307:return z3;case 35680:case 36300:case 36308:case 36293:return G3;case 36289:case 36303:case 36311:case 36292:return V3}}let W3=class{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=M3(t.type)}},$3=class{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=H3(t.type)}},q3=class{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const s=this.seq;for(let r=0,o=s.length;r!==o;++r){const a=s[r];a.setValue(e,t[a.id],n)}}};const g0=/(\w+)(\])?(\[|\.)?/g;function KT(i,e){i.seq.push(e),i.map[e.id]=e}function X3(i,e,t){const n=i.name,s=n.length;for(g0.lastIndex=0;;){const r=g0.exec(n),o=g0.lastIndex;let a=r[1];const c=r[2]==="]",l=r[3];if(c&&(a=a|0),l===void 0||l==="["&&o+2===s){KT(t,l===void 0?new W3(a,i,e):new $3(a,i,e));break}else{let h=t.map[a];h===void 0&&(h=new q3(a),KT(t,h)),t=h}}}let Lm=class{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let s=0;s<n;++s){const r=e.getActiveUniform(t,s),o=e.getUniformLocation(t,r.name);X3(r,o,this)}}setValue(e,t,n,s){const r=this.map[t];r!==void 0&&r.setValue(e,n,s)}setOptional(e,t,n){const s=t[n];s!==void 0&&this.setValue(e,n,s)}static upload(e,t,n,s){for(let r=0,o=t.length;r!==o;++r){const a=t[r],c=n[a.id];c.needsUpdate!==!1&&a.setValue(e,c.value,s)}}static seqWithValue(e,t){const n=[];for(let s=0,r=e.length;s!==r;++s){const o=e[s];o.id in t&&n.push(o)}return n}};function QT(i,e,t){const n=i.createShader(e);return i.shaderSource(n,t),i.compileShader(n),n}let j3=0;function Y3(i,e){const t=i.split(`
`),n=[],s=Math.max(e-6,0),r=Math.min(e+6,t.length);for(let o=s;o<r;o++){const a=o+1;n.push(`${a===e?">":" "} ${a}: ${t[o]}`)}return n.join(`
`)}function Z3(i){switch(i){case Lr:return["Linear","( value )"];case Et:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",i),["Linear","( value )"]}}function JT(i,e,t){const n=i.getShaderParameter(e,i.COMPILE_STATUS),s=i.getShaderInfoLog(e).trim();if(n&&s==="")return"";const r=/ERROR: 0:(\d+)/.exec(s);if(r){const o=parseInt(r[1]);return t.toUpperCase()+`

`+s+`

`+Y3(i.getShaderSource(e),o)}else return s}function K3(i,e){const t=Z3(e);return"vec4 "+i+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function Q3(i,e){let t;switch(e){case fI:t="Linear";break;case pI:t="Reinhard";break;case mI:t="OptimizedCineon";break;case gI:t="ACESFilmic";break;case _I:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+i+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function J3(i){return[i.extensionDerivatives||i.envMapCubeUVHeight||i.bumpMap||i.normalMapTangentSpace||i.clearcoatNormalMap||i.flatShading||i.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(i.extensionFragDepth||i.logarithmicDepthBuffer)&&i.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",i.extensionDrawBuffers&&i.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(i.extensionShaderTextureLOD||i.envMap||i.transmission)&&i.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(vd).join(`
`)}function eB(i){const e=[];for(const t in i){const n=i[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function tB(i,e){const t={},n=i.getProgramParameter(e,i.ACTIVE_ATTRIBUTES);for(let s=0;s<n;s++){const r=i.getActiveAttrib(e,s),o=r.name;let a=1;r.type===i.FLOAT_MAT2&&(a=2),r.type===i.FLOAT_MAT3&&(a=3),r.type===i.FLOAT_MAT4&&(a=4),t[o]={type:r.type,location:i.getAttribLocation(e,o),locationSize:a}}return t}function vd(i){return i!==""}function eE(i,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return i.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function tE(i,e){return i.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const nB=/^[ \t]*#include +<([\w\d./]+)>/gm;function wx(i){return i.replace(nB,iB)}function iB(i,e){const t=Rt[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return wx(t)}const sB=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function nE(i){return i.replace(sB,rB)}function rB(i,e,t,n){let s="";for(let r=parseInt(e);r<parseInt(t);r++)s+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return s}function iE(i){let e="precision "+i.precision+` float;
precision `+i.precision+" int;";return i.precision==="highp"?e+=`
#define HIGH_PRECISION`:i.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:i.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function oB(i){let e="SHADOWMAP_TYPE_BASIC";return i.shadowMapType===MC?e="SHADOWMAP_TYPE_PCF":i.shadowMapType===$L?e="SHADOWMAP_TYPE_PCF_SOFT":i.shadowMapType===mo&&(e="SHADOWMAP_TYPE_VSM"),e}function aB(i){let e="ENVMAP_TYPE_CUBE";if(i.envMap)switch(i.envMapMode){case qu:case Xu:e="ENVMAP_TYPE_CUBE";break;case Jg:e="ENVMAP_TYPE_CUBE_UV";break}return e}function cB(i){let e="ENVMAP_MODE_REFLECTION";if(i.envMap)switch(i.envMapMode){case Xu:e="ENVMAP_MODE_REFRACTION";break}return e}function lB(i){let e="ENVMAP_BLENDING_NONE";if(i.envMap)switch(i.combine){case FS:e="ENVMAP_BLENDING_MULTIPLY";break;case hI:e="ENVMAP_BLENDING_MIX";break;case dI:e="ENVMAP_BLENDING_ADD";break}return e}function uB(i){const e=i.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function hB(i,e,t,n){const s=i.getContext(),r=t.defines;let o=t.vertexShader,a=t.fragmentShader;const c=oB(t),l=aB(t),u=cB(t),h=lB(t),d=uB(t),f=t.isWebGL2?"":J3(t),m=eB(r),_=s.createProgram();let g,p,y=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(g=[m].filter(vd).join(`
`),g.length>0&&(g+=`
`),p=[f,m].filter(vd).join(`
`),p.length>0&&(p+=`
`)):(g=[iE(t),"#define SHADER_NAME "+t.shaderName,m,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(vd).join(`
`),p=[f,iE(t),"#define SHADER_NAME "+t.shaderName,m,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+l:"",t.envMap?"#define "+u:"",t.envMap?"#define "+h:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Lo?"#define TONE_MAPPING":"",t.toneMapping!==Lo?Rt.tonemapping_pars_fragment:"",t.toneMapping!==Lo?Q3("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",Rt.encodings_pars_fragment,K3("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(vd).join(`
`)),o=wx(o),o=eE(o,t),o=tE(o,t),a=wx(a),a=eE(a,t),a=tE(a,t),o=nE(o),a=nE(a),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(y=`#version 300 es
`,g=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+g,p=["#define varying in",t.glslVersion===bT?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===bT?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+p);const x=y+g+o,v=y+p+a,S=QT(s,s.VERTEX_SHADER,x),M=QT(s,s.FRAGMENT_SHADER,v);if(s.attachShader(_,S),s.attachShader(_,M),t.index0AttributeName!==void 0?s.bindAttribLocation(_,0,t.index0AttributeName):t.morphTargets===!0&&s.bindAttribLocation(_,0,"position"),s.linkProgram(_),i.debug.checkShaderErrors){const b=s.getProgramInfoLog(_).trim(),T=s.getShaderInfoLog(S).trim(),C=s.getShaderInfoLog(M).trim();let D=!0,P=!0;if(s.getProgramParameter(_,s.LINK_STATUS)===!1)if(D=!1,typeof i.debug.onShaderError=="function")i.debug.onShaderError(s,_,S,M);else{const N=JT(s,S,"vertex"),L=JT(s,M,"fragment");console.error("THREE.WebGLProgram: Shader Error "+s.getError()+" - VALIDATE_STATUS "+s.getProgramParameter(_,s.VALIDATE_STATUS)+`

Program Info Log: `+b+`
`+N+`
`+L)}else b!==""?console.warn("THREE.WebGLProgram: Program Info Log:",b):(T===""||C==="")&&(P=!1);P&&(this.diagnostics={runnable:D,programLog:b,vertexShader:{log:T,prefix:g},fragmentShader:{log:C,prefix:p}})}s.deleteShader(S),s.deleteShader(M);let E;this.getUniforms=function(){return E===void 0&&(E=new Lm(s,_)),E};let w;return this.getAttributes=function(){return w===void 0&&(w=tB(s,_)),w},this.destroy=function(){n.releaseStatesOfProgram(this),s.deleteProgram(_),this.program=void 0},this.name=t.shaderName,this.id=j3++,this.cacheKey=e,this.usedTimes=1,this.program=_,this.vertexShader=S,this.fragmentShader=M,this}let dB=0,fB=class{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,s=this._getShaderStage(t),r=this._getShaderStage(n),o=this._getShaderCacheForMaterial(e);return o.has(s)===!1&&(o.add(s),s.usedTimes++),o.has(r)===!1&&(o.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new pB(e),t.set(e,n)),n}},pB=class{constructor(e){this.id=dB++,this.code=e,this.usedTimes=0}};function mB(i,e,t,n,s,r,o){const a=new VC,c=new fB,l=[],u=s.isWebGL2,h=s.logarithmicDepthBuffer,d=s.vertexTextures;let f=s.precision;const m={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function _(b){return b===1?"uv1":b===2?"uv2":b===3?"uv3":"uv"}function g(b,T,C,D,P){const N=D.fog,L=P.geometry,U=b.isMeshStandardMaterial?D.environment:null,B=(b.isMeshStandardMaterial?t:e).get(b.envMap||U),k=B&&B.mapping===Jg?B.image.height:null,$=m[b.type];b.precision!==null&&(f=s.getMaxPrecision(b.precision),f!==b.precision&&console.warn("THREE.WebGLProgram.getParameters:",b.precision,"not supported, using",f,"instead."));const z=L.morphAttributes.position||L.morphAttributes.normal||L.morphAttributes.color,Y=z!==void 0?z.length:0;let ne=0;L.morphAttributes.position!==void 0&&(ne=1),L.morphAttributes.normal!==void 0&&(ne=2),L.morphAttributes.color!==void 0&&(ne=3);let te,V,H,Q;if($){const Oe=Er[$];te=Oe.vertexShader,V=Oe.fragmentShader}else te=b.vertexShader,V=b.fragmentShader,c.update(b),H=c.getVertexShaderID(b),Q=c.getFragmentShaderID(b);const O=i.getRenderTarget(),oe=P.isInstancedMesh===!0,Ne=!!b.map,_e=!!b.matcap,Fe=!!B,Xe=!!b.aoMap,$e=!!b.lightMap,j=!!b.bumpMap,Ie=!!b.normalMap,De=!!b.displacementMap,qe=!!b.emissiveMap,Be=!!b.metalnessMap,He=!!b.roughnessMap,ze=b.clearcoat>0,G=b.iridescence>0,A=b.sheen>0,R=b.transmission>0,q=ze&&!!b.clearcoatMap,ie=ze&&!!b.clearcoatNormalMap,J=ze&&!!b.clearcoatRoughnessMap,xe=G&&!!b.iridescenceMap,Ce=G&&!!b.iridescenceThicknessMap,ye=A&&!!b.sheenColorMap,me=A&&!!b.sheenRoughnessMap,ge=!!b.specularMap,Re=!!b.specularColorMap,Ue=!!b.specularIntensityMap,Le=R&&!!b.transmissionMap,Ee=R&&!!b.thicknessMap,tt=!!b.gradientMap,nt=!!b.alphaMap,mt=b.alphaTest>0,I=!!b.extensions,ee=!!L.attributes.uv1,X=!!L.attributes.uv2,le=!!L.attributes.uv3;return{isWebGL2:u,shaderID:$,shaderName:b.type,vertexShader:te,fragmentShader:V,defines:b.defines,customVertexShaderID:H,customFragmentShaderID:Q,isRawShaderMaterial:b.isRawShaderMaterial===!0,glslVersion:b.glslVersion,precision:f,instancing:oe,instancingColor:oe&&P.instanceColor!==null,supportsVertexTextures:d,outputColorSpace:O===null?i.outputColorSpace:O.isXRRenderTarget===!0?O.texture.colorSpace:Lr,map:Ne,matcap:_e,envMap:Fe,envMapMode:Fe&&B.mapping,envMapCubeUVHeight:k,aoMap:Xe,lightMap:$e,bumpMap:j,normalMap:Ie,displacementMap:d&&De,emissiveMap:qe,normalMapObjectSpace:Ie&&b.normalMapType===UI,normalMapTangentSpace:Ie&&b.normalMapType===RC,metalnessMap:Be,roughnessMap:He,clearcoat:ze,clearcoatMap:q,clearcoatNormalMap:ie,clearcoatRoughnessMap:J,iridescence:G,iridescenceMap:xe,iridescenceThicknessMap:Ce,sheen:A,sheenColorMap:ye,sheenRoughnessMap:me,specularMap:ge,specularColorMap:Re,specularIntensityMap:Ue,transmission:R,transmissionMap:Le,thicknessMap:Ee,gradientMap:tt,opaque:b.transparent===!1&&b.blending===Cu,alphaMap:nt,alphaTest:mt,combine:b.combine,mapUv:Ne&&_(b.map.channel),aoMapUv:Xe&&_(b.aoMap.channel),lightMapUv:$e&&_(b.lightMap.channel),bumpMapUv:j&&_(b.bumpMap.channel),normalMapUv:Ie&&_(b.normalMap.channel),displacementMapUv:De&&_(b.displacementMap.channel),emissiveMapUv:qe&&_(b.emissiveMap.channel),metalnessMapUv:Be&&_(b.metalnessMap.channel),roughnessMapUv:He&&_(b.roughnessMap.channel),clearcoatMapUv:q&&_(b.clearcoatMap.channel),clearcoatNormalMapUv:ie&&_(b.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:J&&_(b.clearcoatRoughnessMap.channel),iridescenceMapUv:xe&&_(b.iridescenceMap.channel),iridescenceThicknessMapUv:Ce&&_(b.iridescenceThicknessMap.channel),sheenColorMapUv:ye&&_(b.sheenColorMap.channel),sheenRoughnessMapUv:me&&_(b.sheenRoughnessMap.channel),specularMapUv:ge&&_(b.specularMap.channel),specularColorMapUv:Re&&_(b.specularColorMap.channel),specularIntensityMapUv:Ue&&_(b.specularIntensityMap.channel),transmissionMapUv:Le&&_(b.transmissionMap.channel),thicknessMapUv:Ee&&_(b.thicknessMap.channel),alphaMapUv:nt&&_(b.alphaMap.channel),vertexTangents:Ie&&!!L.attributes.tangent,vertexColors:b.vertexColors,vertexAlphas:b.vertexColors===!0&&!!L.attributes.color&&L.attributes.color.itemSize===4,vertexUv1s:ee,vertexUv2s:X,vertexUv3s:le,pointsUvs:P.isPoints===!0&&!!L.attributes.uv&&(Ne||nt),fog:!!N,useFog:b.fog===!0,fogExp2:N&&N.isFogExp2,flatShading:b.flatShading===!0,sizeAttenuation:b.sizeAttenuation===!0,logarithmicDepthBuffer:h,skinning:P.isSkinnedMesh===!0,morphTargets:L.morphAttributes.position!==void 0,morphNormals:L.morphAttributes.normal!==void 0,morphColors:L.morphAttributes.color!==void 0,morphTargetsCount:Y,morphTextureStride:ne,numDirLights:T.directional.length,numPointLights:T.point.length,numSpotLights:T.spot.length,numSpotLightMaps:T.spotLightMap.length,numRectAreaLights:T.rectArea.length,numHemiLights:T.hemi.length,numDirLightShadows:T.directionalShadowMap.length,numPointLightShadows:T.pointShadowMap.length,numSpotLightShadows:T.spotShadowMap.length,numSpotLightShadowsWithMaps:T.numSpotLightShadowsWithMaps,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:b.dithering,shadowMapEnabled:i.shadowMap.enabled&&C.length>0,shadowMapType:i.shadowMap.type,toneMapping:b.toneMapped?i.toneMapping:Lo,useLegacyLights:i.useLegacyLights,premultipliedAlpha:b.premultipliedAlpha,doubleSided:b.side===Ar,flipSided:b.side===ji,useDepthPacking:b.depthPacking>=0,depthPacking:b.depthPacking||0,index0AttributeName:b.index0AttributeName,extensionDerivatives:I&&b.extensions.derivatives===!0,extensionFragDepth:I&&b.extensions.fragDepth===!0,extensionDrawBuffers:I&&b.extensions.drawBuffers===!0,extensionShaderTextureLOD:I&&b.extensions.shaderTextureLOD===!0,rendererExtensionFragDepth:u||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||n.has("EXT_shader_texture_lod"),customProgramCacheKey:b.customProgramCacheKey()}}function p(b){const T=[];if(b.shaderID?T.push(b.shaderID):(T.push(b.customVertexShaderID),T.push(b.customFragmentShaderID)),b.defines!==void 0)for(const C in b.defines)T.push(C),T.push(b.defines[C]);return b.isRawShaderMaterial===!1&&(y(T,b),x(T,b),T.push(i.outputColorSpace)),T.push(b.customProgramCacheKey),T.join()}function y(b,T){b.push(T.precision),b.push(T.outputColorSpace),b.push(T.envMapMode),b.push(T.envMapCubeUVHeight),b.push(T.mapUv),b.push(T.alphaMapUv),b.push(T.lightMapUv),b.push(T.aoMapUv),b.push(T.bumpMapUv),b.push(T.normalMapUv),b.push(T.displacementMapUv),b.push(T.emissiveMapUv),b.push(T.metalnessMapUv),b.push(T.roughnessMapUv),b.push(T.clearcoatMapUv),b.push(T.clearcoatNormalMapUv),b.push(T.clearcoatRoughnessMapUv),b.push(T.iridescenceMapUv),b.push(T.iridescenceThicknessMapUv),b.push(T.sheenColorMapUv),b.push(T.sheenRoughnessMapUv),b.push(T.specularMapUv),b.push(T.specularColorMapUv),b.push(T.specularIntensityMapUv),b.push(T.transmissionMapUv),b.push(T.thicknessMapUv),b.push(T.combine),b.push(T.fogExp2),b.push(T.sizeAttenuation),b.push(T.morphTargetsCount),b.push(T.morphAttributeCount),b.push(T.numDirLights),b.push(T.numPointLights),b.push(T.numSpotLights),b.push(T.numSpotLightMaps),b.push(T.numHemiLights),b.push(T.numRectAreaLights),b.push(T.numDirLightShadows),b.push(T.numPointLightShadows),b.push(T.numSpotLightShadows),b.push(T.numSpotLightShadowsWithMaps),b.push(T.shadowMapType),b.push(T.toneMapping),b.push(T.numClippingPlanes),b.push(T.numClipIntersection),b.push(T.depthPacking)}function x(b,T){a.disableAll(),T.isWebGL2&&a.enable(0),T.supportsVertexTextures&&a.enable(1),T.instancing&&a.enable(2),T.instancingColor&&a.enable(3),T.matcap&&a.enable(4),T.envMap&&a.enable(5),T.normalMapObjectSpace&&a.enable(6),T.normalMapTangentSpace&&a.enable(7),T.clearcoat&&a.enable(8),T.iridescence&&a.enable(9),T.alphaTest&&a.enable(10),T.vertexColors&&a.enable(11),T.vertexAlphas&&a.enable(12),T.vertexUv1s&&a.enable(13),T.vertexUv2s&&a.enable(14),T.vertexUv3s&&a.enable(15),T.vertexTangents&&a.enable(16),b.push(a.mask),a.disableAll(),T.fog&&a.enable(0),T.useFog&&a.enable(1),T.flatShading&&a.enable(2),T.logarithmicDepthBuffer&&a.enable(3),T.skinning&&a.enable(4),T.morphTargets&&a.enable(5),T.morphNormals&&a.enable(6),T.morphColors&&a.enable(7),T.premultipliedAlpha&&a.enable(8),T.shadowMapEnabled&&a.enable(9),T.useLegacyLights&&a.enable(10),T.doubleSided&&a.enable(11),T.flipSided&&a.enable(12),T.useDepthPacking&&a.enable(13),T.dithering&&a.enable(14),T.transmission&&a.enable(15),T.sheen&&a.enable(16),T.opaque&&a.enable(17),T.pointsUvs&&a.enable(18),b.push(a.mask)}function v(b){const T=m[b.type];let C;if(T){const D=Er[T];C=sg.clone(D.uniforms)}else C=b.uniforms;return C}function S(b,T){let C;for(let D=0,P=l.length;D<P;D++){const N=l[D];if(N.cacheKey===T){C=N,++C.usedTimes;break}}return C===void 0&&(C=new hB(i,T,b,r),l.push(C)),C}function M(b){if(--b.usedTimes===0){const T=l.indexOf(b);l[T]=l[l.length-1],l.pop(),b.destroy()}}function E(b){c.remove(b)}function w(){c.dispose()}return{getParameters:g,getProgramCacheKey:p,getUniforms:v,acquireProgram:S,releaseProgram:M,releaseShaderCache:E,programs:l,dispose:w}}function gB(){let i=new WeakMap;function e(r){let o=i.get(r);return o===void 0&&(o={},i.set(r,o)),o}function t(r){i.delete(r)}function n(r,o,a){i.get(r)[o]=a}function s(){i=new WeakMap}return{get:e,remove:t,update:n,dispose:s}}function _B(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.material.id!==e.material.id?i.material.id-e.material.id:i.z!==e.z?i.z-e.z:i.id-e.id}function sE(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.z!==e.z?e.z-i.z:i.id-e.id}function rE(){const i=[];let e=0;const t=[],n=[],s=[];function r(){e=0,t.length=0,n.length=0,s.length=0}function o(h,d,f,m,_,g){let p=i[e];return p===void 0?(p={id:h.id,object:h,geometry:d,material:f,groupOrder:m,renderOrder:h.renderOrder,z:_,group:g},i[e]=p):(p.id=h.id,p.object=h,p.geometry=d,p.material=f,p.groupOrder=m,p.renderOrder=h.renderOrder,p.z=_,p.group=g),e++,p}function a(h,d,f,m,_,g){const p=o(h,d,f,m,_,g);f.transmission>0?n.push(p):f.transparent===!0?s.push(p):t.push(p)}function c(h,d,f,m,_,g){const p=o(h,d,f,m,_,g);f.transmission>0?n.unshift(p):f.transparent===!0?s.unshift(p):t.unshift(p)}function l(h,d){t.length>1&&t.sort(h||_B),n.length>1&&n.sort(d||sE),s.length>1&&s.sort(d||sE)}function u(){for(let h=e,d=i.length;h<d;h++){const f=i[h];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:t,transmissive:n,transparent:s,init:r,push:a,unshift:c,finish:u,sort:l}}function vB(){let i=new WeakMap;function e(n,s){const r=i.get(n);let o;return r===void 0?(o=new rE,i.set(n,[o])):s>=r.length?(o=new rE,r.push(o)):o=r[s],o}function t(){i=new WeakMap}return{get:e,dispose:t}}function xB(){const i={};return{get:function(e){if(i[e.id]!==void 0)return i[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new re,color:new Wt};break;case"SpotLight":t={position:new re,direction:new re,color:new Wt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new re,color:new Wt,distance:0,decay:0};break;case"HemisphereLight":t={direction:new re,skyColor:new Wt,groundColor:new Wt};break;case"RectAreaLight":t={color:new Wt,position:new re,halfWidth:new re,halfHeight:new re};break}return i[e.id]=t,t}}}function yB(){const i={};return{get:function(e){if(i[e.id]!==void 0)return i[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ut};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ut};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ut,shadowCameraNear:1,shadowCameraFar:1e3};break}return i[e.id]=t,t}}}let SB=0;function bB(i,e){return(e.castShadow?2:0)-(i.castShadow?2:0)+(e.map?1:0)-(i.map?1:0)}function MB(i,e){const t=new xB,n=yB(),s={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let u=0;u<9;u++)s.probe.push(new re);const r=new re,o=new ci,a=new ci;function c(u,h){let d=0,f=0,m=0;for(let C=0;C<9;C++)s.probe[C].set(0,0,0);let _=0,g=0,p=0,y=0,x=0,v=0,S=0,M=0,E=0,w=0;u.sort(bB);const b=h===!0?Math.PI:1;for(let C=0,D=u.length;C<D;C++){const P=u[C],N=P.color,L=P.intensity,U=P.distance,B=P.shadow&&P.shadow.map?P.shadow.map.texture:null;if(P.isAmbientLight)d+=N.r*L*b,f+=N.g*L*b,m+=N.b*L*b;else if(P.isLightProbe)for(let k=0;k<9;k++)s.probe[k].addScaledVector(P.sh.coefficients[k],L);else if(P.isDirectionalLight){const k=t.get(P);if(k.color.copy(P.color).multiplyScalar(P.intensity*b),P.castShadow){const $=P.shadow,z=n.get(P);z.shadowBias=$.bias,z.shadowNormalBias=$.normalBias,z.shadowRadius=$.radius,z.shadowMapSize=$.mapSize,s.directionalShadow[_]=z,s.directionalShadowMap[_]=B,s.directionalShadowMatrix[_]=P.shadow.matrix,v++}s.directional[_]=k,_++}else if(P.isSpotLight){const k=t.get(P);k.position.setFromMatrixPosition(P.matrixWorld),k.color.copy(N).multiplyScalar(L*b),k.distance=U,k.coneCos=Math.cos(P.angle),k.penumbraCos=Math.cos(P.angle*(1-P.penumbra)),k.decay=P.decay,s.spot[p]=k;const $=P.shadow;if(P.map&&(s.spotLightMap[E]=P.map,E++,$.updateMatrices(P),P.castShadow&&w++),s.spotLightMatrix[p]=$.matrix,P.castShadow){const z=n.get(P);z.shadowBias=$.bias,z.shadowNormalBias=$.normalBias,z.shadowRadius=$.radius,z.shadowMapSize=$.mapSize,s.spotShadow[p]=z,s.spotShadowMap[p]=B,M++}p++}else if(P.isRectAreaLight){const k=t.get(P);k.color.copy(N).multiplyScalar(L),k.halfWidth.set(P.width*.5,0,0),k.halfHeight.set(0,P.height*.5,0),s.rectArea[y]=k,y++}else if(P.isPointLight){const k=t.get(P);if(k.color.copy(P.color).multiplyScalar(P.intensity*b),k.distance=P.distance,k.decay=P.decay,P.castShadow){const $=P.shadow,z=n.get(P);z.shadowBias=$.bias,z.shadowNormalBias=$.normalBias,z.shadowRadius=$.radius,z.shadowMapSize=$.mapSize,z.shadowCameraNear=$.camera.near,z.shadowCameraFar=$.camera.far,s.pointShadow[g]=z,s.pointShadowMap[g]=B,s.pointShadowMatrix[g]=P.shadow.matrix,S++}s.point[g]=k,g++}else if(P.isHemisphereLight){const k=t.get(P);k.skyColor.copy(P.color).multiplyScalar(L*b),k.groundColor.copy(P.groundColor).multiplyScalar(L*b),s.hemi[x]=k,x++}}y>0&&(e.isWebGL2||i.has("OES_texture_float_linear")===!0?(s.rectAreaLTC1=Ke.LTC_FLOAT_1,s.rectAreaLTC2=Ke.LTC_FLOAT_2):i.has("OES_texture_half_float_linear")===!0?(s.rectAreaLTC1=Ke.LTC_HALF_1,s.rectAreaLTC2=Ke.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),s.ambient[0]=d,s.ambient[1]=f,s.ambient[2]=m;const T=s.hash;(T.directionalLength!==_||T.pointLength!==g||T.spotLength!==p||T.rectAreaLength!==y||T.hemiLength!==x||T.numDirectionalShadows!==v||T.numPointShadows!==S||T.numSpotShadows!==M||T.numSpotMaps!==E)&&(s.directional.length=_,s.spot.length=p,s.rectArea.length=y,s.point.length=g,s.hemi.length=x,s.directionalShadow.length=v,s.directionalShadowMap.length=v,s.pointShadow.length=S,s.pointShadowMap.length=S,s.spotShadow.length=M,s.spotShadowMap.length=M,s.directionalShadowMatrix.length=v,s.pointShadowMatrix.length=S,s.spotLightMatrix.length=M+E-w,s.spotLightMap.length=E,s.numSpotLightShadowsWithMaps=w,T.directionalLength=_,T.pointLength=g,T.spotLength=p,T.rectAreaLength=y,T.hemiLength=x,T.numDirectionalShadows=v,T.numPointShadows=S,T.numSpotShadows=M,T.numSpotMaps=E,s.version=SB++)}function l(u,h){let d=0,f=0,m=0,_=0,g=0;const p=h.matrixWorldInverse;for(let y=0,x=u.length;y<x;y++){const v=u[y];if(v.isDirectionalLight){const S=s.directional[d];S.direction.setFromMatrixPosition(v.matrixWorld),r.setFromMatrixPosition(v.target.matrixWorld),S.direction.sub(r),S.direction.transformDirection(p),d++}else if(v.isSpotLight){const S=s.spot[m];S.position.setFromMatrixPosition(v.matrixWorld),S.position.applyMatrix4(p),S.direction.setFromMatrixPosition(v.matrixWorld),r.setFromMatrixPosition(v.target.matrixWorld),S.direction.sub(r),S.direction.transformDirection(p),m++}else if(v.isRectAreaLight){const S=s.rectArea[_];S.position.setFromMatrixPosition(v.matrixWorld),S.position.applyMatrix4(p),a.identity(),o.copy(v.matrixWorld),o.premultiply(p),a.extractRotation(o),S.halfWidth.set(v.width*.5,0,0),S.halfHeight.set(0,v.height*.5,0),S.halfWidth.applyMatrix4(a),S.halfHeight.applyMatrix4(a),_++}else if(v.isPointLight){const S=s.point[f];S.position.setFromMatrixPosition(v.matrixWorld),S.position.applyMatrix4(p),f++}else if(v.isHemisphereLight){const S=s.hemi[g];S.direction.setFromMatrixPosition(v.matrixWorld),S.direction.transformDirection(p),g++}}}return{setup:c,setupView:l,state:s}}function oE(i,e){const t=new MB(i,e),n=[],s=[];function r(){n.length=0,s.length=0}function o(h){n.push(h)}function a(h){s.push(h)}function c(h){t.setup(n,h)}function l(h){t.setupView(n,h)}return{init:r,state:{lightsArray:n,shadowsArray:s,lights:t},setupLights:c,setupLightsView:l,pushLight:o,pushShadow:a}}function TB(i,e){let t=new WeakMap;function n(r,o=0){const a=t.get(r);let c;return a===void 0?(c=new oE(i,e),t.set(r,[c])):o>=a.length?(c=new oE(i,e),a.push(c)):c=a[o],c}function s(){t=new WeakMap}return{get:n,dispose:s}}let EB=class extends xh{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=II,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}},wB=class extends xh{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}};const AB=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,CB=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function RB(i,e,t){let n=new KC;const s=new ut,r=new ut,o=new Li,a=new EB({depthPacking:FI}),c=new wB,l={},u=t.maxTextureSize,h={[za]:ji,[ji]:za,[Ar]:Ar},d=new _s({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ut},radius:{value:4}},vertexShader:AB,fragmentShader:CB}),f=d.clone();f.defines.HORIZONTAL_PASS=1;const m=new Us;m.setAttribute("position",new lr(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const _=new Rs(m,d),g=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=MC;let p=this.type;this.render=function(S,M,E){if(g.enabled===!1||g.autoUpdate===!1&&g.needsUpdate===!1||S.length===0)return;const w=i.getRenderTarget(),b=i.getActiveCubeFace(),T=i.getActiveMipmapLevel(),C=i.state;C.setBlending(Da),C.buffers.color.setClear(1,1,1,1),C.buffers.depth.setTest(!0),C.setScissorTest(!1);const D=p!==mo&&this.type===mo,P=p===mo&&this.type!==mo;for(let N=0,L=S.length;N<L;N++){const U=S[N],B=U.shadow;if(B===void 0){console.warn("THREE.WebGLShadowMap:",U,"has no shadow.");continue}if(B.autoUpdate===!1&&B.needsUpdate===!1)continue;s.copy(B.mapSize);const k=B.getFrameExtents();if(s.multiply(k),r.copy(B.mapSize),(s.x>u||s.y>u)&&(s.x>u&&(r.x=Math.floor(u/k.x),s.x=r.x*k.x,B.mapSize.x=r.x),s.y>u&&(r.y=Math.floor(u/k.y),s.y=r.y*k.y,B.mapSize.y=r.y)),B.map===null||D===!0||P===!0){const z=this.type!==mo?{minFilter:Ci,magFilter:Ci}:{};B.map!==null&&B.map.dispose(),B.map=new cr(s.x,s.y,z),B.map.texture.name=U.name+".shadowMap",B.camera.updateProjectionMatrix()}i.setRenderTarget(B.map),i.clear();const $=B.getViewportCount();for(let z=0;z<$;z++){const Y=B.getViewport(z);o.set(r.x*Y.x,r.y*Y.y,r.x*Y.z,r.y*Y.w),C.viewport(o),B.updateMatrices(U,z),n=B.getFrustum(),v(M,E,B.camera,U,this.type)}B.isPointLightShadow!==!0&&this.type===mo&&y(B,E),B.needsUpdate=!1}p=this.type,g.needsUpdate=!1,i.setRenderTarget(w,b,T)};function y(S,M){const E=e.update(_);d.defines.VSM_SAMPLES!==S.blurSamples&&(d.defines.VSM_SAMPLES=S.blurSamples,f.defines.VSM_SAMPLES=S.blurSamples,d.needsUpdate=!0,f.needsUpdate=!0),S.mapPass===null&&(S.mapPass=new cr(s.x,s.y)),d.uniforms.shadow_pass.value=S.map.texture,d.uniforms.resolution.value=S.mapSize,d.uniforms.radius.value=S.radius,i.setRenderTarget(S.mapPass),i.clear(),i.renderBufferDirect(M,null,E,d,_,null),f.uniforms.shadow_pass.value=S.mapPass.texture,f.uniforms.resolution.value=S.mapSize,f.uniforms.radius.value=S.radius,i.setRenderTarget(S.map),i.clear(),i.renderBufferDirect(M,null,E,f,_,null)}function x(S,M,E,w){let b=null;const T=E.isPointLight===!0?S.customDistanceMaterial:S.customDepthMaterial;if(T!==void 0)b=T;else if(b=E.isPointLight===!0?c:a,i.localClippingEnabled&&M.clipShadows===!0&&Array.isArray(M.clippingPlanes)&&M.clippingPlanes.length!==0||M.displacementMap&&M.displacementScale!==0||M.alphaMap&&M.alphaTest>0||M.map&&M.alphaTest>0){const C=b.uuid,D=M.uuid;let P=l[C];P===void 0&&(P={},l[C]=P);let N=P[D];N===void 0&&(N=b.clone(),P[D]=N),b=N}if(b.visible=M.visible,b.wireframe=M.wireframe,w===mo?b.side=M.shadowSide!==null?M.shadowSide:M.side:b.side=M.shadowSide!==null?M.shadowSide:h[M.side],b.alphaMap=M.alphaMap,b.alphaTest=M.alphaTest,b.map=M.map,b.clipShadows=M.clipShadows,b.clippingPlanes=M.clippingPlanes,b.clipIntersection=M.clipIntersection,b.displacementMap=M.displacementMap,b.displacementScale=M.displacementScale,b.displacementBias=M.displacementBias,b.wireframeLinewidth=M.wireframeLinewidth,b.linewidth=M.linewidth,E.isPointLight===!0&&b.isMeshDistanceMaterial===!0){const C=i.properties.get(b);C.light=E}return b}function v(S,M,E,w,b){if(S.visible===!1)return;if(S.layers.test(M.layers)&&(S.isMesh||S.isLine||S.isPoints)&&(S.castShadow||S.receiveShadow&&b===mo)&&(!S.frustumCulled||n.intersectsObject(S))){S.modelViewMatrix.multiplyMatrices(E.matrixWorldInverse,S.matrixWorld);const D=e.update(S),P=S.material;if(Array.isArray(P)){const N=D.groups;for(let L=0,U=N.length;L<U;L++){const B=N[L],k=P[B.materialIndex];if(k&&k.visible){const $=x(S,k,w,b);i.renderBufferDirect(E,null,D,$,S,B)}}}else if(P.visible){const N=x(S,P,w,b);i.renderBufferDirect(E,null,D,N,S,null)}}const C=S.children;for(let D=0,P=C.length;D<P;D++)v(C[D],M,E,w,b)}}function NB(i,e,t){const n=t.isWebGL2;function s(){let I=!1;const ee=new Li;let X=null;const le=new Li(0,0,0,0);return{setMask:function(Se){X!==Se&&!I&&(i.colorMask(Se,Se,Se,Se),X=Se)},setLocked:function(Se){I=Se},setClear:function(Se,Oe,it,Ct,an){an===!0&&(Se*=Ct,Oe*=Ct,it*=Ct),ee.set(Se,Oe,it,Ct),le.equals(ee)===!1&&(i.clearColor(Se,Oe,it,Ct),le.copy(ee))},reset:function(){I=!1,X=null,le.set(-1,0,0,0)}}}function r(){let I=!1,ee=null,X=null,le=null;return{setTest:function(Se){Se?O(i.DEPTH_TEST):oe(i.DEPTH_TEST)},setMask:function(Se){ee!==Se&&!I&&(i.depthMask(Se),ee=Se)},setFunc:function(Se){if(X!==Se){switch(Se){case sI:i.depthFunc(i.NEVER);break;case rI:i.depthFunc(i.ALWAYS);break;case oI:i.depthFunc(i.LESS);break;case vx:i.depthFunc(i.LEQUAL);break;case aI:i.depthFunc(i.EQUAL);break;case cI:i.depthFunc(i.GEQUAL);break;case lI:i.depthFunc(i.GREATER);break;case uI:i.depthFunc(i.NOTEQUAL);break;default:i.depthFunc(i.LEQUAL)}X=Se}},setLocked:function(Se){I=Se},setClear:function(Se){le!==Se&&(i.clearDepth(Se),le=Se)},reset:function(){I=!1,ee=null,X=null,le=null}}}function o(){let I=!1,ee=null,X=null,le=null,Se=null,Oe=null,it=null,Ct=null,an=null;return{setTest:function(dt){I||(dt?O(i.STENCIL_TEST):oe(i.STENCIL_TEST))},setMask:function(dt){ee!==dt&&!I&&(i.stencilMask(dt),ee=dt)},setFunc:function(dt,dn,Nn){(X!==dt||le!==dn||Se!==Nn)&&(i.stencilFunc(dt,dn,Nn),X=dt,le=dn,Se=Nn)},setOp:function(dt,dn,Nn){(Oe!==dt||it!==dn||Ct!==Nn)&&(i.stencilOp(dt,dn,Nn),Oe=dt,it=dn,Ct=Nn)},setLocked:function(dt){I=dt},setClear:function(dt){an!==dt&&(i.clearStencil(dt),an=dt)},reset:function(){I=!1,ee=null,X=null,le=null,Se=null,Oe=null,it=null,Ct=null,an=null}}}const a=new s,c=new r,l=new o,u=new WeakMap,h=new WeakMap;let d={},f={},m=new WeakMap,_=[],g=null,p=!1,y=null,x=null,v=null,S=null,M=null,E=null,w=null,b=!1,T=null,C=null,D=null,P=null,N=null;const L=i.getParameter(i.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let U=!1,B=0;const k=i.getParameter(i.VERSION);k.indexOf("WebGL")!==-1?(B=parseFloat(/^WebGL (\d)/.exec(k)[1]),U=B>=1):k.indexOf("OpenGL ES")!==-1&&(B=parseFloat(/^OpenGL ES (\d)/.exec(k)[1]),U=B>=2);let $=null,z={};const Y=i.getParameter(i.SCISSOR_BOX),ne=i.getParameter(i.VIEWPORT),te=new Li().fromArray(Y),V=new Li().fromArray(ne);function H(I,ee,X,le){const Se=new Uint8Array(4),Oe=i.createTexture();i.bindTexture(I,Oe),i.texParameteri(I,i.TEXTURE_MIN_FILTER,i.NEAREST),i.texParameteri(I,i.TEXTURE_MAG_FILTER,i.NEAREST);for(let it=0;it<X;it++)n&&(I===i.TEXTURE_3D||I===i.TEXTURE_2D_ARRAY)?i.texImage3D(ee,0,i.RGBA,1,1,le,0,i.RGBA,i.UNSIGNED_BYTE,Se):i.texImage2D(ee+it,0,i.RGBA,1,1,0,i.RGBA,i.UNSIGNED_BYTE,Se);return Oe}const Q={};Q[i.TEXTURE_2D]=H(i.TEXTURE_2D,i.TEXTURE_2D,1),Q[i.TEXTURE_CUBE_MAP]=H(i.TEXTURE_CUBE_MAP,i.TEXTURE_CUBE_MAP_POSITIVE_X,6),n&&(Q[i.TEXTURE_2D_ARRAY]=H(i.TEXTURE_2D_ARRAY,i.TEXTURE_2D_ARRAY,1,1),Q[i.TEXTURE_3D]=H(i.TEXTURE_3D,i.TEXTURE_3D,1,1)),a.setClear(0,0,0,1),c.setClear(1),l.setClear(0),O(i.DEPTH_TEST),c.setFunc(vx),De(!1),qe(qM),O(i.CULL_FACE),j(Da);function O(I){d[I]!==!0&&(i.enable(I),d[I]=!0)}function oe(I){d[I]!==!1&&(i.disable(I),d[I]=!1)}function Ne(I,ee){return f[I]!==ee?(i.bindFramebuffer(I,ee),f[I]=ee,n&&(I===i.DRAW_FRAMEBUFFER&&(f[i.FRAMEBUFFER]=ee),I===i.FRAMEBUFFER&&(f[i.DRAW_FRAMEBUFFER]=ee)),!0):!1}function _e(I,ee){let X=_,le=!1;if(I)if(X=m.get(ee),X===void 0&&(X=[],m.set(ee,X)),I.isWebGLMultipleRenderTargets){const Se=I.texture;if(X.length!==Se.length||X[0]!==i.COLOR_ATTACHMENT0){for(let Oe=0,it=Se.length;Oe<it;Oe++)X[Oe]=i.COLOR_ATTACHMENT0+Oe;X.length=Se.length,le=!0}}else X[0]!==i.COLOR_ATTACHMENT0&&(X[0]=i.COLOR_ATTACHMENT0,le=!0);else X[0]!==i.BACK&&(X[0]=i.BACK,le=!0);le&&(t.isWebGL2?i.drawBuffers(X):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(X))}function Fe(I){return g!==I?(i.useProgram(I),g=I,!0):!1}const Xe={[hu]:i.FUNC_ADD,[XL]:i.FUNC_SUBTRACT,[jL]:i.FUNC_REVERSE_SUBTRACT};if(n)Xe[YM]=i.MIN,Xe[ZM]=i.MAX;else{const I=e.get("EXT_blend_minmax");I!==null&&(Xe[YM]=I.MIN_EXT,Xe[ZM]=I.MAX_EXT)}const $e={[YL]:i.ZERO,[ZL]:i.ONE,[KL]:i.SRC_COLOR,[TC]:i.SRC_ALPHA,[iI]:i.SRC_ALPHA_SATURATE,[tI]:i.DST_COLOR,[JL]:i.DST_ALPHA,[QL]:i.ONE_MINUS_SRC_COLOR,[EC]:i.ONE_MINUS_SRC_ALPHA,[nI]:i.ONE_MINUS_DST_COLOR,[eI]:i.ONE_MINUS_DST_ALPHA};function j(I,ee,X,le,Se,Oe,it,Ct){if(I===Da){p===!0&&(oe(i.BLEND),p=!1);return}if(p===!1&&(O(i.BLEND),p=!0),I!==qL){if(I!==y||Ct!==b){if((x!==hu||M!==hu)&&(i.blendEquation(i.FUNC_ADD),x=hu,M=hu),Ct)switch(I){case Cu:i.blendFuncSeparate(i.ONE,i.ONE_MINUS_SRC_ALPHA,i.ONE,i.ONE_MINUS_SRC_ALPHA);break;case _x:i.blendFunc(i.ONE,i.ONE);break;case XM:i.blendFuncSeparate(i.ZERO,i.ONE_MINUS_SRC_COLOR,i.ZERO,i.ONE);break;case jM:i.blendFuncSeparate(i.ZERO,i.SRC_COLOR,i.ZERO,i.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",I);break}else switch(I){case Cu:i.blendFuncSeparate(i.SRC_ALPHA,i.ONE_MINUS_SRC_ALPHA,i.ONE,i.ONE_MINUS_SRC_ALPHA);break;case _x:i.blendFunc(i.SRC_ALPHA,i.ONE);break;case XM:i.blendFuncSeparate(i.ZERO,i.ONE_MINUS_SRC_COLOR,i.ZERO,i.ONE);break;case jM:i.blendFunc(i.ZERO,i.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",I);break}v=null,S=null,E=null,w=null,y=I,b=Ct}return}Se=Se||ee,Oe=Oe||X,it=it||le,(ee!==x||Se!==M)&&(i.blendEquationSeparate(Xe[ee],Xe[Se]),x=ee,M=Se),(X!==v||le!==S||Oe!==E||it!==w)&&(i.blendFuncSeparate($e[X],$e[le],$e[Oe],$e[it]),v=X,S=le,E=Oe,w=it),y=I,b=!1}function Ie(I,ee){I.side===Ar?oe(i.CULL_FACE):O(i.CULL_FACE);let X=I.side===ji;ee&&(X=!X),De(X),I.blending===Cu&&I.transparent===!1?j(Da):j(I.blending,I.blendEquation,I.blendSrc,I.blendDst,I.blendEquationAlpha,I.blendSrcAlpha,I.blendDstAlpha,I.premultipliedAlpha),c.setFunc(I.depthFunc),c.setTest(I.depthTest),c.setMask(I.depthWrite),a.setMask(I.colorWrite);const le=I.stencilWrite;l.setTest(le),le&&(l.setMask(I.stencilWriteMask),l.setFunc(I.stencilFunc,I.stencilRef,I.stencilFuncMask),l.setOp(I.stencilFail,I.stencilZFail,I.stencilZPass)),He(I.polygonOffset,I.polygonOffsetFactor,I.polygonOffsetUnits),I.alphaToCoverage===!0?O(i.SAMPLE_ALPHA_TO_COVERAGE):oe(i.SAMPLE_ALPHA_TO_COVERAGE)}function De(I){T!==I&&(I?i.frontFace(i.CW):i.frontFace(i.CCW),T=I)}function qe(I){I!==HL?(O(i.CULL_FACE),I!==C&&(I===qM?i.cullFace(i.BACK):I===WL?i.cullFace(i.FRONT):i.cullFace(i.FRONT_AND_BACK))):oe(i.CULL_FACE),C=I}function Be(I){I!==D&&(U&&i.lineWidth(I),D=I)}function He(I,ee,X){I?(O(i.POLYGON_OFFSET_FILL),(P!==ee||N!==X)&&(i.polygonOffset(ee,X),P=ee,N=X)):oe(i.POLYGON_OFFSET_FILL)}function ze(I){I?O(i.SCISSOR_TEST):oe(i.SCISSOR_TEST)}function G(I){I===void 0&&(I=i.TEXTURE0+L-1),$!==I&&(i.activeTexture(I),$=I)}function A(I,ee,X){X===void 0&&($===null?X=i.TEXTURE0+L-1:X=$);let le=z[X];le===void 0&&(le={type:void 0,texture:void 0},z[X]=le),(le.type!==I||le.texture!==ee)&&($!==X&&(i.activeTexture(X),$=X),i.bindTexture(I,ee||Q[I]),le.type=I,le.texture=ee)}function R(){const I=z[$];I!==void 0&&I.type!==void 0&&(i.bindTexture(I.type,null),I.type=void 0,I.texture=void 0)}function q(){try{i.compressedTexImage2D.apply(i,arguments)}catch(I){console.error("THREE.WebGLState:",I)}}function ie(){try{i.compressedTexImage3D.apply(i,arguments)}catch(I){console.error("THREE.WebGLState:",I)}}function J(){try{i.texSubImage2D.apply(i,arguments)}catch(I){console.error("THREE.WebGLState:",I)}}function xe(){try{i.texSubImage3D.apply(i,arguments)}catch(I){console.error("THREE.WebGLState:",I)}}function Ce(){try{i.compressedTexSubImage2D.apply(i,arguments)}catch(I){console.error("THREE.WebGLState:",I)}}function ye(){try{i.compressedTexSubImage3D.apply(i,arguments)}catch(I){console.error("THREE.WebGLState:",I)}}function me(){try{i.texStorage2D.apply(i,arguments)}catch(I){console.error("THREE.WebGLState:",I)}}function ge(){try{i.texStorage3D.apply(i,arguments)}catch(I){console.error("THREE.WebGLState:",I)}}function Re(){try{i.texImage2D.apply(i,arguments)}catch(I){console.error("THREE.WebGLState:",I)}}function Ue(){try{i.texImage3D.apply(i,arguments)}catch(I){console.error("THREE.WebGLState:",I)}}function Le(I){te.equals(I)===!1&&(i.scissor(I.x,I.y,I.z,I.w),te.copy(I))}function Ee(I){V.equals(I)===!1&&(i.viewport(I.x,I.y,I.z,I.w),V.copy(I))}function tt(I,ee){let X=h.get(ee);X===void 0&&(X=new WeakMap,h.set(ee,X));let le=X.get(I);le===void 0&&(le=i.getUniformBlockIndex(ee,I.name),X.set(I,le))}function nt(I,ee){const le=h.get(ee).get(I);u.get(ee)!==le&&(i.uniformBlockBinding(ee,le,I.__bindingPointIndex),u.set(ee,le))}function mt(){i.disable(i.BLEND),i.disable(i.CULL_FACE),i.disable(i.DEPTH_TEST),i.disable(i.POLYGON_OFFSET_FILL),i.disable(i.SCISSOR_TEST),i.disable(i.STENCIL_TEST),i.disable(i.SAMPLE_ALPHA_TO_COVERAGE),i.blendEquation(i.FUNC_ADD),i.blendFunc(i.ONE,i.ZERO),i.blendFuncSeparate(i.ONE,i.ZERO,i.ONE,i.ZERO),i.colorMask(!0,!0,!0,!0),i.clearColor(0,0,0,0),i.depthMask(!0),i.depthFunc(i.LESS),i.clearDepth(1),i.stencilMask(4294967295),i.stencilFunc(i.ALWAYS,0,4294967295),i.stencilOp(i.KEEP,i.KEEP,i.KEEP),i.clearStencil(0),i.cullFace(i.BACK),i.frontFace(i.CCW),i.polygonOffset(0,0),i.activeTexture(i.TEXTURE0),i.bindFramebuffer(i.FRAMEBUFFER,null),n===!0&&(i.bindFramebuffer(i.DRAW_FRAMEBUFFER,null),i.bindFramebuffer(i.READ_FRAMEBUFFER,null)),i.useProgram(null),i.lineWidth(1),i.scissor(0,0,i.canvas.width,i.canvas.height),i.viewport(0,0,i.canvas.width,i.canvas.height),d={},$=null,z={},f={},m=new WeakMap,_=[],g=null,p=!1,y=null,x=null,v=null,S=null,M=null,E=null,w=null,b=!1,T=null,C=null,D=null,P=null,N=null,te.set(0,0,i.canvas.width,i.canvas.height),V.set(0,0,i.canvas.width,i.canvas.height),a.reset(),c.reset(),l.reset()}return{buffers:{color:a,depth:c,stencil:l},enable:O,disable:oe,bindFramebuffer:Ne,drawBuffers:_e,useProgram:Fe,setBlending:j,setMaterial:Ie,setFlipSided:De,setCullFace:qe,setLineWidth:Be,setPolygonOffset:He,setScissorTest:ze,activeTexture:G,bindTexture:A,unbindTexture:R,compressedTexImage2D:q,compressedTexImage3D:ie,texImage2D:Re,texImage3D:Ue,updateUBOMapping:tt,uniformBlockBinding:nt,texStorage2D:me,texStorage3D:ge,texSubImage2D:J,texSubImage3D:xe,compressedTexSubImage2D:Ce,compressedTexSubImage3D:ye,scissor:Le,viewport:Ee,reset:mt}}function PB(i,e,t,n,s,r,o){const a=s.isWebGL2,c=s.maxTextures,l=s.maxCubemapSize,u=s.maxTextureSize,h=s.maxSamples,d=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,f=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),m=new WeakMap;let _;const g=new WeakMap;let p=!1;try{p=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function y(A,R){return p?new OffscreenCanvas(A,R):ig("canvas")}function x(A,R,q,ie){let J=1;if((A.width>ie||A.height>ie)&&(J=ie/Math.max(A.width,A.height)),J<1||R===!0)if(typeof HTMLImageElement<"u"&&A instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&A instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&A instanceof ImageBitmap){const xe=R?kI:Math.floor,Ce=xe(J*A.width),ye=xe(J*A.height);_===void 0&&(_=y(Ce,ye));const me=q?y(Ce,ye):_;return me.width=Ce,me.height=ye,me.getContext("2d").drawImage(A,0,0,Ce,ye),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+A.width+"x"+A.height+") to ("+Ce+"x"+ye+")."),me}else return"data"in A&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+A.width+"x"+A.height+")."),A;return A}function v(A){return MT(A.width)&&MT(A.height)}function S(A){return a?!1:A.wrapS!==Js||A.wrapT!==Js||A.minFilter!==Ci&&A.minFilter!==ws}function M(A,R){return A.generateMipmaps&&R&&A.minFilter!==Ci&&A.minFilter!==ws}function E(A){i.generateMipmap(A)}function w(A,R,q,ie,J=!1){if(a===!1)return R;if(A!==null){if(i[A]!==void 0)return i[A];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+A+"'")}let xe=R;return R===i.RED&&(q===i.FLOAT&&(xe=i.R32F),q===i.HALF_FLOAT&&(xe=i.R16F),q===i.UNSIGNED_BYTE&&(xe=i.R8)),R===i.RG&&(q===i.FLOAT&&(xe=i.RG32F),q===i.HALF_FLOAT&&(xe=i.RG16F),q===i.UNSIGNED_BYTE&&(xe=i.RG8)),R===i.RGBA&&(q===i.FLOAT&&(xe=i.RGBA32F),q===i.HALF_FLOAT&&(xe=i.RGBA16F),q===i.UNSIGNED_BYTE&&(xe=ie===Et&&J===!1?i.SRGB8_ALPHA8:i.RGBA8),q===i.UNSIGNED_SHORT_4_4_4_4&&(xe=i.RGBA4),q===i.UNSIGNED_SHORT_5_5_5_1&&(xe=i.RGB5_A1)),(xe===i.R16F||xe===i.R32F||xe===i.RG16F||xe===i.RG32F||xe===i.RGBA16F||xe===i.RGBA32F)&&e.get("EXT_color_buffer_float"),xe}function b(A,R,q){return M(A,q)===!0||A.isFramebufferTexture&&A.minFilter!==Ci&&A.minFilter!==ws?Math.log2(Math.max(R.width,R.height))+1:A.mipmaps!==void 0&&A.mipmaps.length>0?A.mipmaps.length:A.isCompressedTexture&&Array.isArray(A.image)?R.mipmaps.length:1}function T(A){return A===Ci||A===KM||A===V_?i.NEAREST:i.LINEAR}function C(A){const R=A.target;R.removeEventListener("dispose",C),P(R),R.isVideoTexture&&m.delete(R)}function D(A){const R=A.target;R.removeEventListener("dispose",D),L(R)}function P(A){const R=n.get(A);if(R.__webglInit===void 0)return;const q=A.source,ie=g.get(q);if(ie){const J=ie[R.__cacheKey];J.usedTimes--,J.usedTimes===0&&N(A),Object.keys(ie).length===0&&g.delete(q)}n.remove(A)}function N(A){const R=n.get(A);i.deleteTexture(R.__webglTexture);const q=A.source,ie=g.get(q);delete ie[R.__cacheKey],o.memory.textures--}function L(A){const R=A.texture,q=n.get(A),ie=n.get(R);if(ie.__webglTexture!==void 0&&(i.deleteTexture(ie.__webglTexture),o.memory.textures--),A.depthTexture&&A.depthTexture.dispose(),A.isWebGLCubeRenderTarget)for(let J=0;J<6;J++)i.deleteFramebuffer(q.__webglFramebuffer[J]),q.__webglDepthbuffer&&i.deleteRenderbuffer(q.__webglDepthbuffer[J]);else{if(i.deleteFramebuffer(q.__webglFramebuffer),q.__webglDepthbuffer&&i.deleteRenderbuffer(q.__webglDepthbuffer),q.__webglMultisampledFramebuffer&&i.deleteFramebuffer(q.__webglMultisampledFramebuffer),q.__webglColorRenderbuffer)for(let J=0;J<q.__webglColorRenderbuffer.length;J++)q.__webglColorRenderbuffer[J]&&i.deleteRenderbuffer(q.__webglColorRenderbuffer[J]);q.__webglDepthRenderbuffer&&i.deleteRenderbuffer(q.__webglDepthRenderbuffer)}if(A.isWebGLMultipleRenderTargets)for(let J=0,xe=R.length;J<xe;J++){const Ce=n.get(R[J]);Ce.__webglTexture&&(i.deleteTexture(Ce.__webglTexture),o.memory.textures--),n.remove(R[J])}n.remove(R),n.remove(A)}let U=0;function B(){U=0}function k(){const A=U;return A>=c&&console.warn("THREE.WebGLTextures: Trying to use "+A+" texture units while this GPU supports only "+c),U+=1,A}function $(A){const R=[];return R.push(A.wrapS),R.push(A.wrapT),R.push(A.wrapR||0),R.push(A.magFilter),R.push(A.minFilter),R.push(A.anisotropy),R.push(A.internalFormat),R.push(A.format),R.push(A.type),R.push(A.generateMipmaps),R.push(A.premultiplyAlpha),R.push(A.flipY),R.push(A.unpackAlignment),R.push(A.colorSpace),R.join()}function z(A,R){const q=n.get(A);if(A.isVideoTexture&&ze(A),A.isRenderTargetTexture===!1&&A.version>0&&q.__version!==A.version){const ie=A.image;if(ie===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ie.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{oe(q,A,R);return}}t.bindTexture(i.TEXTURE_2D,q.__webglTexture,i.TEXTURE0+R)}function Y(A,R){const q=n.get(A);if(A.version>0&&q.__version!==A.version){oe(q,A,R);return}t.bindTexture(i.TEXTURE_2D_ARRAY,q.__webglTexture,i.TEXTURE0+R)}function ne(A,R){const q=n.get(A);if(A.version>0&&q.__version!==A.version){oe(q,A,R);return}t.bindTexture(i.TEXTURE_3D,q.__webglTexture,i.TEXTURE0+R)}function te(A,R){const q=n.get(A);if(A.version>0&&q.__version!==A.version){Ne(q,A,R);return}t.bindTexture(i.TEXTURE_CUBE_MAP,q.__webglTexture,i.TEXTURE0+R)}const V={[Sx]:i.REPEAT,[Js]:i.CLAMP_TO_EDGE,[bx]:i.MIRRORED_REPEAT},H={[Ci]:i.NEAREST,[KM]:i.NEAREST_MIPMAP_NEAREST,[V_]:i.NEAREST_MIPMAP_LINEAR,[ws]:i.LINEAR,[vI]:i.LINEAR_MIPMAP_NEAREST,[Gd]:i.LINEAR_MIPMAP_LINEAR};function Q(A,R,q){if(q?(i.texParameteri(A,i.TEXTURE_WRAP_S,V[R.wrapS]),i.texParameteri(A,i.TEXTURE_WRAP_T,V[R.wrapT]),(A===i.TEXTURE_3D||A===i.TEXTURE_2D_ARRAY)&&i.texParameteri(A,i.TEXTURE_WRAP_R,V[R.wrapR]),i.texParameteri(A,i.TEXTURE_MAG_FILTER,H[R.magFilter]),i.texParameteri(A,i.TEXTURE_MIN_FILTER,H[R.minFilter])):(i.texParameteri(A,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(A,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE),(A===i.TEXTURE_3D||A===i.TEXTURE_2D_ARRAY)&&i.texParameteri(A,i.TEXTURE_WRAP_R,i.CLAMP_TO_EDGE),(R.wrapS!==Js||R.wrapT!==Js)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),i.texParameteri(A,i.TEXTURE_MAG_FILTER,T(R.magFilter)),i.texParameteri(A,i.TEXTURE_MIN_FILTER,T(R.minFilter)),R.minFilter!==Ci&&R.minFilter!==ws&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const ie=e.get("EXT_texture_filter_anisotropic");if(R.magFilter===Ci||R.minFilter!==V_&&R.minFilter!==Gd||R.type===Ic&&e.has("OES_texture_float_linear")===!1||a===!1&&R.type===Vd&&e.has("OES_texture_half_float_linear")===!1)return;(R.anisotropy>1||n.get(R).__currentAnisotropy)&&(i.texParameterf(A,ie.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(R.anisotropy,s.getMaxAnisotropy())),n.get(R).__currentAnisotropy=R.anisotropy)}}function O(A,R){let q=!1;A.__webglInit===void 0&&(A.__webglInit=!0,R.addEventListener("dispose",C));const ie=R.source;let J=g.get(ie);J===void 0&&(J={},g.set(ie,J));const xe=$(R);if(xe!==A.__cacheKey){J[xe]===void 0&&(J[xe]={texture:i.createTexture(),usedTimes:0},o.memory.textures++,q=!0),J[xe].usedTimes++;const Ce=J[A.__cacheKey];Ce!==void 0&&(J[A.__cacheKey].usedTimes--,Ce.usedTimes===0&&N(R)),A.__cacheKey=xe,A.__webglTexture=J[xe].texture}return q}function oe(A,R,q){let ie=i.TEXTURE_2D;(R.isDataArrayTexture||R.isCompressedArrayTexture)&&(ie=i.TEXTURE_2D_ARRAY),R.isData3DTexture&&(ie=i.TEXTURE_3D);const J=O(A,R),xe=R.source;t.bindTexture(ie,A.__webglTexture,i.TEXTURE0+q);const Ce=n.get(xe);if(xe.version!==Ce.__version||J===!0){t.activeTexture(i.TEXTURE0+q),i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,R.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,R.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,R.unpackAlignment),i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,i.NONE);const ye=S(R)&&v(R.image)===!1;let me=x(R.image,ye,!1,u);me=G(R,me);const ge=v(me)||a,Re=r.convert(R.format,R.colorSpace);let Ue=r.convert(R.type),Le=w(R.internalFormat,Re,Ue,R.colorSpace);Q(ie,R,ge);let Ee;const tt=R.mipmaps,nt=a&&R.isVideoTexture!==!0,mt=Ce.__version===void 0||J===!0,I=b(R,me,ge);if(R.isDepthTexture)Le=i.DEPTH_COMPONENT,a?R.type===Ic?Le=i.DEPTH_COMPONENT32F:R.type===Lc?Le=i.DEPTH_COMPONENT24:R.type===Ru?Le=i.DEPTH24_STENCIL8:Le=i.DEPTH_COMPONENT16:R.type===Ic&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),R.format===Oc&&Le===i.DEPTH_COMPONENT&&R.type!==AC&&R.type!==Lc&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),R.type=Lc,Ue=r.convert(R.type)),R.format===ju&&Le===i.DEPTH_COMPONENT&&(Le=i.DEPTH_STENCIL,R.type!==Ru&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),R.type=Ru,Ue=r.convert(R.type))),mt&&(nt?t.texStorage2D(i.TEXTURE_2D,1,Le,me.width,me.height):t.texImage2D(i.TEXTURE_2D,0,Le,me.width,me.height,0,Re,Ue,null));else if(R.isDataTexture)if(tt.length>0&&ge){nt&&mt&&t.texStorage2D(i.TEXTURE_2D,I,Le,tt[0].width,tt[0].height);for(let ee=0,X=tt.length;ee<X;ee++)Ee=tt[ee],nt?t.texSubImage2D(i.TEXTURE_2D,ee,0,0,Ee.width,Ee.height,Re,Ue,Ee.data):t.texImage2D(i.TEXTURE_2D,ee,Le,Ee.width,Ee.height,0,Re,Ue,Ee.data);R.generateMipmaps=!1}else nt?(mt&&t.texStorage2D(i.TEXTURE_2D,I,Le,me.width,me.height),t.texSubImage2D(i.TEXTURE_2D,0,0,0,me.width,me.height,Re,Ue,me.data)):t.texImage2D(i.TEXTURE_2D,0,Le,me.width,me.height,0,Re,Ue,me.data);else if(R.isCompressedTexture)if(R.isCompressedArrayTexture){nt&&mt&&t.texStorage3D(i.TEXTURE_2D_ARRAY,I,Le,tt[0].width,tt[0].height,me.depth);for(let ee=0,X=tt.length;ee<X;ee++)Ee=tt[ee],R.format!==er?Re!==null?nt?t.compressedTexSubImage3D(i.TEXTURE_2D_ARRAY,ee,0,0,0,Ee.width,Ee.height,me.depth,Re,Ee.data,0,0):t.compressedTexImage3D(i.TEXTURE_2D_ARRAY,ee,Le,Ee.width,Ee.height,me.depth,0,Ee.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):nt?t.texSubImage3D(i.TEXTURE_2D_ARRAY,ee,0,0,0,Ee.width,Ee.height,me.depth,Re,Ue,Ee.data):t.texImage3D(i.TEXTURE_2D_ARRAY,ee,Le,Ee.width,Ee.height,me.depth,0,Re,Ue,Ee.data)}else{nt&&mt&&t.texStorage2D(i.TEXTURE_2D,I,Le,tt[0].width,tt[0].height);for(let ee=0,X=tt.length;ee<X;ee++)Ee=tt[ee],R.format!==er?Re!==null?nt?t.compressedTexSubImage2D(i.TEXTURE_2D,ee,0,0,Ee.width,Ee.height,Re,Ee.data):t.compressedTexImage2D(i.TEXTURE_2D,ee,Le,Ee.width,Ee.height,0,Ee.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):nt?t.texSubImage2D(i.TEXTURE_2D,ee,0,0,Ee.width,Ee.height,Re,Ue,Ee.data):t.texImage2D(i.TEXTURE_2D,ee,Le,Ee.width,Ee.height,0,Re,Ue,Ee.data)}else if(R.isDataArrayTexture)nt?(mt&&t.texStorage3D(i.TEXTURE_2D_ARRAY,I,Le,me.width,me.height,me.depth),t.texSubImage3D(i.TEXTURE_2D_ARRAY,0,0,0,0,me.width,me.height,me.depth,Re,Ue,me.data)):t.texImage3D(i.TEXTURE_2D_ARRAY,0,Le,me.width,me.height,me.depth,0,Re,Ue,me.data);else if(R.isData3DTexture)nt?(mt&&t.texStorage3D(i.TEXTURE_3D,I,Le,me.width,me.height,me.depth),t.texSubImage3D(i.TEXTURE_3D,0,0,0,0,me.width,me.height,me.depth,Re,Ue,me.data)):t.texImage3D(i.TEXTURE_3D,0,Le,me.width,me.height,me.depth,0,Re,Ue,me.data);else if(R.isFramebufferTexture){if(mt)if(nt)t.texStorage2D(i.TEXTURE_2D,I,Le,me.width,me.height);else{let ee=me.width,X=me.height;for(let le=0;le<I;le++)t.texImage2D(i.TEXTURE_2D,le,Le,ee,X,0,Re,Ue,null),ee>>=1,X>>=1}}else if(tt.length>0&&ge){nt&&mt&&t.texStorage2D(i.TEXTURE_2D,I,Le,tt[0].width,tt[0].height);for(let ee=0,X=tt.length;ee<X;ee++)Ee=tt[ee],nt?t.texSubImage2D(i.TEXTURE_2D,ee,0,0,Re,Ue,Ee):t.texImage2D(i.TEXTURE_2D,ee,Le,Re,Ue,Ee);R.generateMipmaps=!1}else nt?(mt&&t.texStorage2D(i.TEXTURE_2D,I,Le,me.width,me.height),t.texSubImage2D(i.TEXTURE_2D,0,0,0,Re,Ue,me)):t.texImage2D(i.TEXTURE_2D,0,Le,Re,Ue,me);M(R,ge)&&E(ie),Ce.__version=xe.version,R.onUpdate&&R.onUpdate(R)}A.__version=R.version}function Ne(A,R,q){if(R.image.length!==6)return;const ie=O(A,R),J=R.source;t.bindTexture(i.TEXTURE_CUBE_MAP,A.__webglTexture,i.TEXTURE0+q);const xe=n.get(J);if(J.version!==xe.__version||ie===!0){t.activeTexture(i.TEXTURE0+q),i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,R.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,R.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,R.unpackAlignment),i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,i.NONE);const Ce=R.isCompressedTexture||R.image[0].isCompressedTexture,ye=R.image[0]&&R.image[0].isDataTexture,me=[];for(let ee=0;ee<6;ee++)!Ce&&!ye?me[ee]=x(R.image[ee],!1,!0,l):me[ee]=ye?R.image[ee].image:R.image[ee],me[ee]=G(R,me[ee]);const ge=me[0],Re=v(ge)||a,Ue=r.convert(R.format,R.colorSpace),Le=r.convert(R.type),Ee=w(R.internalFormat,Ue,Le,R.colorSpace),tt=a&&R.isVideoTexture!==!0,nt=xe.__version===void 0||ie===!0;let mt=b(R,ge,Re);Q(i.TEXTURE_CUBE_MAP,R,Re);let I;if(Ce){tt&&nt&&t.texStorage2D(i.TEXTURE_CUBE_MAP,mt,Ee,ge.width,ge.height);for(let ee=0;ee<6;ee++){I=me[ee].mipmaps;for(let X=0;X<I.length;X++){const le=I[X];R.format!==er?Ue!==null?tt?t.compressedTexSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+ee,X,0,0,le.width,le.height,Ue,le.data):t.compressedTexImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+ee,X,Ee,le.width,le.height,0,le.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):tt?t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+ee,X,0,0,le.width,le.height,Ue,Le,le.data):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+ee,X,Ee,le.width,le.height,0,Ue,Le,le.data)}}}else{I=R.mipmaps,tt&&nt&&(I.length>0&&mt++,t.texStorage2D(i.TEXTURE_CUBE_MAP,mt,Ee,me[0].width,me[0].height));for(let ee=0;ee<6;ee++)if(ye){tt?t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+ee,0,0,0,me[ee].width,me[ee].height,Ue,Le,me[ee].data):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+ee,0,Ee,me[ee].width,me[ee].height,0,Ue,Le,me[ee].data);for(let X=0;X<I.length;X++){const Se=I[X].image[ee].image;tt?t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+ee,X+1,0,0,Se.width,Se.height,Ue,Le,Se.data):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+ee,X+1,Ee,Se.width,Se.height,0,Ue,Le,Se.data)}}else{tt?t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+ee,0,0,0,Ue,Le,me[ee]):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+ee,0,Ee,Ue,Le,me[ee]);for(let X=0;X<I.length;X++){const le=I[X];tt?t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+ee,X+1,0,0,Ue,Le,le.image[ee]):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+ee,X+1,Ee,Ue,Le,le.image[ee])}}}M(R,Re)&&E(i.TEXTURE_CUBE_MAP),xe.__version=J.version,R.onUpdate&&R.onUpdate(R)}A.__version=R.version}function _e(A,R,q,ie,J){const xe=r.convert(q.format,q.colorSpace),Ce=r.convert(q.type),ye=w(q.internalFormat,xe,Ce,q.colorSpace);n.get(R).__hasExternalTextures||(J===i.TEXTURE_3D||J===i.TEXTURE_2D_ARRAY?t.texImage3D(J,0,ye,R.width,R.height,R.depth,0,xe,Ce,null):t.texImage2D(J,0,ye,R.width,R.height,0,xe,Ce,null)),t.bindFramebuffer(i.FRAMEBUFFER,A),He(R)?d.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,ie,J,n.get(q).__webglTexture,0,Be(R)):(J===i.TEXTURE_2D||J>=i.TEXTURE_CUBE_MAP_POSITIVE_X&&J<=i.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&i.framebufferTexture2D(i.FRAMEBUFFER,ie,J,n.get(q).__webglTexture,0),t.bindFramebuffer(i.FRAMEBUFFER,null)}function Fe(A,R,q){if(i.bindRenderbuffer(i.RENDERBUFFER,A),R.depthBuffer&&!R.stencilBuffer){let ie=i.DEPTH_COMPONENT16;if(q||He(R)){const J=R.depthTexture;J&&J.isDepthTexture&&(J.type===Ic?ie=i.DEPTH_COMPONENT32F:J.type===Lc&&(ie=i.DEPTH_COMPONENT24));const xe=Be(R);He(R)?d.renderbufferStorageMultisampleEXT(i.RENDERBUFFER,xe,ie,R.width,R.height):i.renderbufferStorageMultisample(i.RENDERBUFFER,xe,ie,R.width,R.height)}else i.renderbufferStorage(i.RENDERBUFFER,ie,R.width,R.height);i.framebufferRenderbuffer(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.RENDERBUFFER,A)}else if(R.depthBuffer&&R.stencilBuffer){const ie=Be(R);q&&He(R)===!1?i.renderbufferStorageMultisample(i.RENDERBUFFER,ie,i.DEPTH24_STENCIL8,R.width,R.height):He(R)?d.renderbufferStorageMultisampleEXT(i.RENDERBUFFER,ie,i.DEPTH24_STENCIL8,R.width,R.height):i.renderbufferStorage(i.RENDERBUFFER,i.DEPTH_STENCIL,R.width,R.height),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.RENDERBUFFER,A)}else{const ie=R.isWebGLMultipleRenderTargets===!0?R.texture:[R.texture];for(let J=0;J<ie.length;J++){const xe=ie[J],Ce=r.convert(xe.format,xe.colorSpace),ye=r.convert(xe.type),me=w(xe.internalFormat,Ce,ye,xe.colorSpace),ge=Be(R);q&&He(R)===!1?i.renderbufferStorageMultisample(i.RENDERBUFFER,ge,me,R.width,R.height):He(R)?d.renderbufferStorageMultisampleEXT(i.RENDERBUFFER,ge,me,R.width,R.height):i.renderbufferStorage(i.RENDERBUFFER,me,R.width,R.height)}}i.bindRenderbuffer(i.RENDERBUFFER,null)}function Xe(A,R){if(R&&R.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(i.FRAMEBUFFER,A),!(R.depthTexture&&R.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(R.depthTexture).__webglTexture||R.depthTexture.image.width!==R.width||R.depthTexture.image.height!==R.height)&&(R.depthTexture.image.width=R.width,R.depthTexture.image.height=R.height,R.depthTexture.needsUpdate=!0),z(R.depthTexture,0);const ie=n.get(R.depthTexture).__webglTexture,J=Be(R);if(R.depthTexture.format===Oc)He(R)?d.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.TEXTURE_2D,ie,0,J):i.framebufferTexture2D(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.TEXTURE_2D,ie,0);else if(R.depthTexture.format===ju)He(R)?d.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.TEXTURE_2D,ie,0,J):i.framebufferTexture2D(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.TEXTURE_2D,ie,0);else throw new Error("Unknown depthTexture format")}function $e(A){const R=n.get(A),q=A.isWebGLCubeRenderTarget===!0;if(A.depthTexture&&!R.__autoAllocateDepthBuffer){if(q)throw new Error("target.depthTexture not supported in Cube render targets");Xe(R.__webglFramebuffer,A)}else if(q){R.__webglDepthbuffer=[];for(let ie=0;ie<6;ie++)t.bindFramebuffer(i.FRAMEBUFFER,R.__webglFramebuffer[ie]),R.__webglDepthbuffer[ie]=i.createRenderbuffer(),Fe(R.__webglDepthbuffer[ie],A,!1)}else t.bindFramebuffer(i.FRAMEBUFFER,R.__webglFramebuffer),R.__webglDepthbuffer=i.createRenderbuffer(),Fe(R.__webglDepthbuffer,A,!1);t.bindFramebuffer(i.FRAMEBUFFER,null)}function j(A,R,q){const ie=n.get(A);R!==void 0&&_e(ie.__webglFramebuffer,A,A.texture,i.COLOR_ATTACHMENT0,i.TEXTURE_2D),q!==void 0&&$e(A)}function Ie(A){const R=A.texture,q=n.get(A),ie=n.get(R);A.addEventListener("dispose",D),A.isWebGLMultipleRenderTargets!==!0&&(ie.__webglTexture===void 0&&(ie.__webglTexture=i.createTexture()),ie.__version=R.version,o.memory.textures++);const J=A.isWebGLCubeRenderTarget===!0,xe=A.isWebGLMultipleRenderTargets===!0,Ce=v(A)||a;if(J){q.__webglFramebuffer=[];for(let ye=0;ye<6;ye++)q.__webglFramebuffer[ye]=i.createFramebuffer()}else{if(q.__webglFramebuffer=i.createFramebuffer(),xe)if(s.drawBuffers){const ye=A.texture;for(let me=0,ge=ye.length;me<ge;me++){const Re=n.get(ye[me]);Re.__webglTexture===void 0&&(Re.__webglTexture=i.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(a&&A.samples>0&&He(A)===!1){const ye=xe?R:[R];q.__webglMultisampledFramebuffer=i.createFramebuffer(),q.__webglColorRenderbuffer=[],t.bindFramebuffer(i.FRAMEBUFFER,q.__webglMultisampledFramebuffer);for(let me=0;me<ye.length;me++){const ge=ye[me];q.__webglColorRenderbuffer[me]=i.createRenderbuffer(),i.bindRenderbuffer(i.RENDERBUFFER,q.__webglColorRenderbuffer[me]);const Re=r.convert(ge.format,ge.colorSpace),Ue=r.convert(ge.type),Le=w(ge.internalFormat,Re,Ue,ge.colorSpace,A.isXRRenderTarget===!0),Ee=Be(A);i.renderbufferStorageMultisample(i.RENDERBUFFER,Ee,Le,A.width,A.height),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+me,i.RENDERBUFFER,q.__webglColorRenderbuffer[me])}i.bindRenderbuffer(i.RENDERBUFFER,null),A.depthBuffer&&(q.__webglDepthRenderbuffer=i.createRenderbuffer(),Fe(q.__webglDepthRenderbuffer,A,!0)),t.bindFramebuffer(i.FRAMEBUFFER,null)}}if(J){t.bindTexture(i.TEXTURE_CUBE_MAP,ie.__webglTexture),Q(i.TEXTURE_CUBE_MAP,R,Ce);for(let ye=0;ye<6;ye++)_e(q.__webglFramebuffer[ye],A,R,i.COLOR_ATTACHMENT0,i.TEXTURE_CUBE_MAP_POSITIVE_X+ye);M(R,Ce)&&E(i.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(xe){const ye=A.texture;for(let me=0,ge=ye.length;me<ge;me++){const Re=ye[me],Ue=n.get(Re);t.bindTexture(i.TEXTURE_2D,Ue.__webglTexture),Q(i.TEXTURE_2D,Re,Ce),_e(q.__webglFramebuffer,A,Re,i.COLOR_ATTACHMENT0+me,i.TEXTURE_2D),M(Re,Ce)&&E(i.TEXTURE_2D)}t.unbindTexture()}else{let ye=i.TEXTURE_2D;(A.isWebGL3DRenderTarget||A.isWebGLArrayRenderTarget)&&(a?ye=A.isWebGL3DRenderTarget?i.TEXTURE_3D:i.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(ye,ie.__webglTexture),Q(ye,R,Ce),_e(q.__webglFramebuffer,A,R,i.COLOR_ATTACHMENT0,ye),M(R,Ce)&&E(ye),t.unbindTexture()}A.depthBuffer&&$e(A)}function De(A){const R=v(A)||a,q=A.isWebGLMultipleRenderTargets===!0?A.texture:[A.texture];for(let ie=0,J=q.length;ie<J;ie++){const xe=q[ie];if(M(xe,R)){const Ce=A.isWebGLCubeRenderTarget?i.TEXTURE_CUBE_MAP:i.TEXTURE_2D,ye=n.get(xe).__webglTexture;t.bindTexture(Ce,ye),E(Ce),t.unbindTexture()}}}function qe(A){if(a&&A.samples>0&&He(A)===!1){const R=A.isWebGLMultipleRenderTargets?A.texture:[A.texture],q=A.width,ie=A.height;let J=i.COLOR_BUFFER_BIT;const xe=[],Ce=A.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,ye=n.get(A),me=A.isWebGLMultipleRenderTargets===!0;if(me)for(let ge=0;ge<R.length;ge++)t.bindFramebuffer(i.FRAMEBUFFER,ye.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+ge,i.RENDERBUFFER,null),t.bindFramebuffer(i.FRAMEBUFFER,ye.__webglFramebuffer),i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0+ge,i.TEXTURE_2D,null,0);t.bindFramebuffer(i.READ_FRAMEBUFFER,ye.__webglMultisampledFramebuffer),t.bindFramebuffer(i.DRAW_FRAMEBUFFER,ye.__webglFramebuffer);for(let ge=0;ge<R.length;ge++){xe.push(i.COLOR_ATTACHMENT0+ge),A.depthBuffer&&xe.push(Ce);const Re=ye.__ignoreDepthValues!==void 0?ye.__ignoreDepthValues:!1;if(Re===!1&&(A.depthBuffer&&(J|=i.DEPTH_BUFFER_BIT),A.stencilBuffer&&(J|=i.STENCIL_BUFFER_BIT)),me&&i.framebufferRenderbuffer(i.READ_FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.RENDERBUFFER,ye.__webglColorRenderbuffer[ge]),Re===!0&&(i.invalidateFramebuffer(i.READ_FRAMEBUFFER,[Ce]),i.invalidateFramebuffer(i.DRAW_FRAMEBUFFER,[Ce])),me){const Ue=n.get(R[ge]).__webglTexture;i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,Ue,0)}i.blitFramebuffer(0,0,q,ie,0,0,q,ie,J,i.NEAREST),f&&i.invalidateFramebuffer(i.READ_FRAMEBUFFER,xe)}if(t.bindFramebuffer(i.READ_FRAMEBUFFER,null),t.bindFramebuffer(i.DRAW_FRAMEBUFFER,null),me)for(let ge=0;ge<R.length;ge++){t.bindFramebuffer(i.FRAMEBUFFER,ye.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+ge,i.RENDERBUFFER,ye.__webglColorRenderbuffer[ge]);const Re=n.get(R[ge]).__webglTexture;t.bindFramebuffer(i.FRAMEBUFFER,ye.__webglFramebuffer),i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0+ge,i.TEXTURE_2D,Re,0)}t.bindFramebuffer(i.DRAW_FRAMEBUFFER,ye.__webglMultisampledFramebuffer)}}function Be(A){return Math.min(h,A.samples)}function He(A){const R=n.get(A);return a&&A.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&R.__useRenderToTexture!==!1}function ze(A){const R=o.render.frame;m.get(A)!==R&&(m.set(A,R),A.update())}function G(A,R){const q=A.colorSpace,ie=A.format,J=A.type;return A.isCompressedTexture===!0||A.format===Mx||q!==Lr&&q!==kc&&(q===Et?a===!1?e.has("EXT_sRGB")===!0&&ie===er?(A.format=Mx,A.minFilter=ws,A.generateMipmaps=!1):R=IC.sRGBToLinear(R):(ie!==er||J!==$c)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",q)),R}this.allocateTextureUnit=k,this.resetTextureUnits=B,this.setTexture2D=z,this.setTexture2DArray=Y,this.setTexture3D=ne,this.setTextureCube=te,this.rebindTextures=j,this.setupRenderTarget=Ie,this.updateRenderTargetMipmap=De,this.updateMultisampleRenderTarget=qe,this.setupDepthRenderbuffer=$e,this.setupFrameBufferTexture=_e,this.useMultisampledRTT=He}function DB(i,e,t){const n=t.isWebGL2;function s(r,o=kc){let a;if(r===$c)return i.UNSIGNED_BYTE;if(r===bI)return i.UNSIGNED_SHORT_4_4_4_4;if(r===MI)return i.UNSIGNED_SHORT_5_5_5_1;if(r===xI)return i.BYTE;if(r===yI)return i.SHORT;if(r===AC)return i.UNSIGNED_SHORT;if(r===SI)return i.INT;if(r===Lc)return i.UNSIGNED_INT;if(r===Ic)return i.FLOAT;if(r===Vd)return n?i.HALF_FLOAT:(a=e.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(r===TI)return i.ALPHA;if(r===er)return i.RGBA;if(r===EI)return i.LUMINANCE;if(r===wI)return i.LUMINANCE_ALPHA;if(r===Oc)return i.DEPTH_COMPONENT;if(r===ju)return i.DEPTH_STENCIL;if(r===Mx)return a=e.get("EXT_sRGB"),a!==null?a.SRGB_ALPHA_EXT:null;if(r===AI)return i.RED;if(r===CI)return i.RED_INTEGER;if(r===RI)return i.RG;if(r===NI)return i.RG_INTEGER;if(r===PI)return i.RGBA_INTEGER;if(r===H_||r===W_||r===$_||r===q_)if(o===Et)if(a=e.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(r===H_)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(r===W_)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(r===$_)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(r===q_)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=e.get("WEBGL_compressed_texture_s3tc"),a!==null){if(r===H_)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===W_)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===$_)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===q_)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(r===QM||r===JM||r===eT||r===tT)if(a=e.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(r===QM)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===JM)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===eT)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===tT)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(r===DI)return a=e.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(r===nT||r===iT)if(a=e.get("WEBGL_compressed_texture_etc"),a!==null){if(r===nT)return o===Et?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(r===iT)return o===Et?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(r===sT||r===rT||r===oT||r===aT||r===cT||r===lT||r===uT||r===hT||r===dT||r===fT||r===pT||r===mT||r===gT||r===_T)if(a=e.get("WEBGL_compressed_texture_astc"),a!==null){if(r===sT)return o===Et?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(r===rT)return o===Et?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(r===oT)return o===Et?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(r===aT)return o===Et?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(r===cT)return o===Et?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(r===lT)return o===Et?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(r===uT)return o===Et?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(r===hT)return o===Et?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(r===dT)return o===Et?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(r===fT)return o===Et?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(r===pT)return o===Et?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(r===mT)return o===Et?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(r===gT)return o===Et?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(r===_T)return o===Et?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(r===X_)if(a=e.get("EXT_texture_compression_bptc"),a!==null){if(r===X_)return o===Et?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(r===LI||r===vT||r===xT||r===yT)if(a=e.get("EXT_texture_compression_rgtc"),a!==null){if(r===X_)return a.COMPRESSED_RED_RGTC1_EXT;if(r===vT)return a.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(r===xT)return a.COMPRESSED_RED_GREEN_RGTC2_EXT;if(r===yT)return a.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return r===Ru?n?i.UNSIGNED_INT_24_8:(a=e.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null):i[r]!==void 0?i[r]:null}return{convert:s}}let LB=class extends As{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}},_u=class extends _r{constructor(){super(),this.isGroup=!0,this.type="Group"}};const IB={type:"move"};let _0=class{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new _u,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new _u,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new re,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new re),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new _u,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new re,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new re),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let s=null,r=null,o=null;const a=this._targetRay,c=this._grip,l=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(l&&e.hand){o=!0;for(const _ of e.hand.values()){const g=t.getJointPose(_,n),p=this._getHandJoint(l,_);g!==null&&(p.matrix.fromArray(g.transform.matrix),p.matrix.decompose(p.position,p.rotation,p.scale),p.matrixWorldNeedsUpdate=!0,p.jointRadius=g.radius),p.visible=g!==null}const u=l.joints["index-finger-tip"],h=l.joints["thumb-tip"],d=u.position.distanceTo(h.position),f=.02,m=.005;l.inputState.pinching&&d>f+m?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&d<=f-m&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else c!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),r!==null&&(c.matrix.fromArray(r.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,r.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(r.linearVelocity)):c.hasLinearVelocity=!1,r.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(r.angularVelocity)):c.hasAngularVelocity=!1));a!==null&&(s=t.getPose(e.targetRaySpace,n),s===null&&r!==null&&(s=r),s!==null&&(a.matrix.fromArray(s.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,s.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(s.linearVelocity)):a.hasLinearVelocity=!1,s.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(s.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(IB)))}return a!==null&&(a.visible=s!==null),c!==null&&(c.visible=r!==null),l!==null&&(l.visible=o!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new _u;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}},FB=class extends Gr{constructor(e,t,n,s,r,o,a,c,l,u){if(u=u!==void 0?u:Oc,u!==Oc&&u!==ju)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&u===Oc&&(n=Lc),n===void 0&&u===ju&&(n=Ru),super(null,s,r,o,a,c,u,n,l),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=a!==void 0?a:Ci,this.minFilter=c!==void 0?c:Ci,this.flipY=!1,this.generateMipmaps=!1}},UB=class extends gh{constructor(e,t){super();const n=this;let s=null,r=1,o=null,a="local-floor",c=1,l=null,u=null,h=null,d=null,f=null,m=null;const _=t.getContextAttributes();let g=null,p=null;const y=[],x=[],v=new Set,S=new Map,M=new As;M.layers.enable(1),M.viewport=new Li;const E=new As;E.layers.enable(2),E.viewport=new Li;const w=[M,E],b=new LB;b.layers.enable(1),b.layers.enable(2);let T=null,C=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(te){let V=y[te];return V===void 0&&(V=new _0,y[te]=V),V.getTargetRaySpace()},this.getControllerGrip=function(te){let V=y[te];return V===void 0&&(V=new _0,y[te]=V),V.getGripSpace()},this.getHand=function(te){let V=y[te];return V===void 0&&(V=new _0,y[te]=V),V.getHandSpace()};function D(te){const V=x.indexOf(te.inputSource);if(V===-1)return;const H=y[V];H!==void 0&&(H.update(te.inputSource,te.frame,l||o),H.dispatchEvent({type:te.type,data:te.inputSource}))}function P(){s.removeEventListener("select",D),s.removeEventListener("selectstart",D),s.removeEventListener("selectend",D),s.removeEventListener("squeeze",D),s.removeEventListener("squeezestart",D),s.removeEventListener("squeezeend",D),s.removeEventListener("end",P),s.removeEventListener("inputsourceschange",N);for(let te=0;te<y.length;te++){const V=x[te];V!==null&&(x[te]=null,y[te].disconnect(V))}T=null,C=null,e.setRenderTarget(g),f=null,d=null,h=null,s=null,p=null,ne.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(te){r=te,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(te){a=te,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||o},this.setReferenceSpace=function(te){l=te},this.getBaseLayer=function(){return d!==null?d:f},this.getBinding=function(){return h},this.getFrame=function(){return m},this.getSession=function(){return s},this.setSession=async function(te){if(s=te,s!==null){if(g=e.getRenderTarget(),s.addEventListener("select",D),s.addEventListener("selectstart",D),s.addEventListener("selectend",D),s.addEventListener("squeeze",D),s.addEventListener("squeezestart",D),s.addEventListener("squeezeend",D),s.addEventListener("end",P),s.addEventListener("inputsourceschange",N),_.xrCompatible!==!0&&await t.makeXRCompatible(),s.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const V={antialias:s.renderState.layers===void 0?_.antialias:!0,alpha:!0,depth:_.depth,stencil:_.stencil,framebufferScaleFactor:r};f=new XRWebGLLayer(s,t,V),s.updateRenderState({baseLayer:f}),p=new cr(f.framebufferWidth,f.framebufferHeight,{format:er,type:$c,colorSpace:e.outputColorSpace,stencilBuffer:_.stencil})}else{let V=null,H=null,Q=null;_.depth&&(Q=_.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,V=_.stencil?ju:Oc,H=_.stencil?Ru:Lc);const O={colorFormat:t.RGBA8,depthFormat:Q,scaleFactor:r};h=new XRWebGLBinding(s,t),d=h.createProjectionLayer(O),s.updateRenderState({layers:[d]}),p=new cr(d.textureWidth,d.textureHeight,{format:er,type:$c,depthTexture:new FB(d.textureWidth,d.textureHeight,H,void 0,void 0,void 0,void 0,void 0,void 0,V),stencilBuffer:_.stencil,colorSpace:e.outputColorSpace,samples:_.antialias?4:0});const oe=e.properties.get(p);oe.__ignoreDepthValues=d.ignoreDepthValues}p.isXRRenderTarget=!0,this.setFoveation(c),l=null,o=await s.requestReferenceSpace(a),ne.setContext(s),ne.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(s!==null)return s.environmentBlendMode};function N(te){for(let V=0;V<te.removed.length;V++){const H=te.removed[V],Q=x.indexOf(H);Q>=0&&(x[Q]=null,y[Q].disconnect(H))}for(let V=0;V<te.added.length;V++){const H=te.added[V];let Q=x.indexOf(H);if(Q===-1){for(let oe=0;oe<y.length;oe++)if(oe>=x.length){x.push(H),Q=oe;break}else if(x[oe]===null){x[oe]=H,Q=oe;break}if(Q===-1)break}const O=y[Q];O&&O.connect(H)}}const L=new re,U=new re;function B(te,V,H){L.setFromMatrixPosition(V.matrixWorld),U.setFromMatrixPosition(H.matrixWorld);const Q=L.distanceTo(U),O=V.projectionMatrix.elements,oe=H.projectionMatrix.elements,Ne=O[14]/(O[10]-1),_e=O[14]/(O[10]+1),Fe=(O[9]+1)/O[5],Xe=(O[9]-1)/O[5],$e=(O[8]-1)/O[0],j=(oe[8]+1)/oe[0],Ie=Ne*$e,De=Ne*j,qe=Q/(-$e+j),Be=qe*-$e;V.matrixWorld.decompose(te.position,te.quaternion,te.scale),te.translateX(Be),te.translateZ(qe),te.matrixWorld.compose(te.position,te.quaternion,te.scale),te.matrixWorldInverse.copy(te.matrixWorld).invert();const He=Ne+qe,ze=_e+qe,G=Ie-Be,A=De+(Q-Be),R=Fe*_e/ze*He,q=Xe*_e/ze*He;te.projectionMatrix.makePerspective(G,A,R,q,He,ze),te.projectionMatrixInverse.copy(te.projectionMatrix).invert()}function k(te,V){V===null?te.matrixWorld.copy(te.matrix):te.matrixWorld.multiplyMatrices(V.matrixWorld,te.matrix),te.matrixWorldInverse.copy(te.matrixWorld).invert()}this.updateCamera=function(te){if(s===null)return;b.near=E.near=M.near=te.near,b.far=E.far=M.far=te.far,(T!==b.near||C!==b.far)&&(s.updateRenderState({depthNear:b.near,depthFar:b.far}),T=b.near,C=b.far);const V=te.parent,H=b.cameras;k(b,V);for(let Q=0;Q<H.length;Q++)k(H[Q],V);H.length===2?B(b,M,E):b.projectionMatrix.copy(M.projectionMatrix),$(te,b,V)};function $(te,V,H){H===null?te.matrix.copy(V.matrixWorld):(te.matrix.copy(H.matrixWorld),te.matrix.invert(),te.matrix.multiply(V.matrixWorld)),te.matrix.decompose(te.position,te.quaternion,te.scale),te.updateMatrixWorld(!0);const Q=te.children;for(let O=0,oe=Q.length;O<oe;O++)Q[O].updateMatrixWorld(!0);te.projectionMatrix.copy(V.projectionMatrix),te.projectionMatrixInverse.copy(V.projectionMatrixInverse),te.isPerspectiveCamera&&(te.fov=Tx*2*Math.atan(1/te.projectionMatrix.elements[5]),te.zoom=1)}this.getCamera=function(){return b},this.getFoveation=function(){if(!(d===null&&f===null))return c},this.setFoveation=function(te){c=te,d!==null&&(d.fixedFoveation=te),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=te)},this.getPlanes=function(){return v};let z=null;function Y(te,V){if(u=V.getViewerPose(l||o),m=V,u!==null){const H=u.views;f!==null&&(e.setRenderTargetFramebuffer(p,f.framebuffer),e.setRenderTarget(p));let Q=!1;H.length!==b.cameras.length&&(b.cameras.length=0,Q=!0);for(let O=0;O<H.length;O++){const oe=H[O];let Ne=null;if(f!==null)Ne=f.getViewport(oe);else{const Fe=h.getViewSubImage(d,oe);Ne=Fe.viewport,O===0&&(e.setRenderTargetTextures(p,Fe.colorTexture,d.ignoreDepthValues?void 0:Fe.depthStencilTexture),e.setRenderTarget(p))}let _e=w[O];_e===void 0&&(_e=new As,_e.layers.enable(O),_e.viewport=new Li,w[O]=_e),_e.matrix.fromArray(oe.transform.matrix),_e.matrix.decompose(_e.position,_e.quaternion,_e.scale),_e.projectionMatrix.fromArray(oe.projectionMatrix),_e.projectionMatrixInverse.copy(_e.projectionMatrix).invert(),_e.viewport.set(Ne.x,Ne.y,Ne.width,Ne.height),O===0&&(b.matrix.copy(_e.matrix),b.matrix.decompose(b.position,b.quaternion,b.scale)),Q===!0&&b.cameras.push(_e)}}for(let H=0;H<y.length;H++){const Q=x[H],O=y[H];Q!==null&&O!==void 0&&O.update(Q,V,l||o)}if(z&&z(te,V),V.detectedPlanes){n.dispatchEvent({type:"planesdetected",data:V.detectedPlanes});let H=null;for(const Q of v)V.detectedPlanes.has(Q)||(H===null&&(H=[]),H.push(Q));if(H!==null)for(const Q of H)v.delete(Q),S.delete(Q),n.dispatchEvent({type:"planeremoved",data:Q});for(const Q of V.detectedPlanes)if(!v.has(Q))v.add(Q),S.set(Q,V.lastChangedTime),n.dispatchEvent({type:"planeadded",data:Q});else{const O=S.get(Q);Q.lastChangedTime>O&&(S.set(Q,Q.lastChangedTime),n.dispatchEvent({type:"planechanged",data:Q}))}}m=null}const ne=new QC;ne.setAnimationLoop(Y),this.setAnimationLoop=function(te){z=te},this.dispose=function(){}}};function OB(i,e){function t(g,p){g.matrixAutoUpdate===!0&&g.updateMatrix(),p.value.copy(g.matrix)}function n(g,p){p.color.getRGB(g.fogColor.value,jC(i)),p.isFog?(g.fogNear.value=p.near,g.fogFar.value=p.far):p.isFogExp2&&(g.fogDensity.value=p.density)}function s(g,p,y,x,v){p.isMeshBasicMaterial||p.isMeshLambertMaterial?r(g,p):p.isMeshToonMaterial?(r(g,p),h(g,p)):p.isMeshPhongMaterial?(r(g,p),u(g,p)):p.isMeshStandardMaterial?(r(g,p),d(g,p),p.isMeshPhysicalMaterial&&f(g,p,v)):p.isMeshMatcapMaterial?(r(g,p),m(g,p)):p.isMeshDepthMaterial?r(g,p):p.isMeshDistanceMaterial?(r(g,p),_(g,p)):p.isMeshNormalMaterial?r(g,p):p.isLineBasicMaterial?(o(g,p),p.isLineDashedMaterial&&a(g,p)):p.isPointsMaterial?c(g,p,y,x):p.isSpriteMaterial?l(g,p):p.isShadowMaterial?(g.color.value.copy(p.color),g.opacity.value=p.opacity):p.isShaderMaterial&&(p.uniformsNeedUpdate=!1)}function r(g,p){g.opacity.value=p.opacity,p.color&&g.diffuse.value.copy(p.color),p.emissive&&g.emissive.value.copy(p.emissive).multiplyScalar(p.emissiveIntensity),p.map&&(g.map.value=p.map,t(p.map,g.mapTransform)),p.alphaMap&&(g.alphaMap.value=p.alphaMap,t(p.alphaMap,g.alphaMapTransform)),p.bumpMap&&(g.bumpMap.value=p.bumpMap,t(p.bumpMap,g.bumpMapTransform),g.bumpScale.value=p.bumpScale,p.side===ji&&(g.bumpScale.value*=-1)),p.normalMap&&(g.normalMap.value=p.normalMap,t(p.normalMap,g.normalMapTransform),g.normalScale.value.copy(p.normalScale),p.side===ji&&g.normalScale.value.negate()),p.displacementMap&&(g.displacementMap.value=p.displacementMap,t(p.displacementMap,g.displacementMapTransform),g.displacementScale.value=p.displacementScale,g.displacementBias.value=p.displacementBias),p.emissiveMap&&(g.emissiveMap.value=p.emissiveMap,t(p.emissiveMap,g.emissiveMapTransform)),p.specularMap&&(g.specularMap.value=p.specularMap,t(p.specularMap,g.specularMapTransform)),p.alphaTest>0&&(g.alphaTest.value=p.alphaTest);const y=e.get(p).envMap;if(y&&(g.envMap.value=y,g.flipEnvMap.value=y.isCubeTexture&&y.isRenderTargetTexture===!1?-1:1,g.reflectivity.value=p.reflectivity,g.ior.value=p.ior,g.refractionRatio.value=p.refractionRatio),p.lightMap){g.lightMap.value=p.lightMap;const x=i.useLegacyLights===!0?Math.PI:1;g.lightMapIntensity.value=p.lightMapIntensity*x,t(p.lightMap,g.lightMapTransform)}p.aoMap&&(g.aoMap.value=p.aoMap,g.aoMapIntensity.value=p.aoMapIntensity,t(p.aoMap,g.aoMapTransform))}function o(g,p){g.diffuse.value.copy(p.color),g.opacity.value=p.opacity,p.map&&(g.map.value=p.map,t(p.map,g.mapTransform))}function a(g,p){g.dashSize.value=p.dashSize,g.totalSize.value=p.dashSize+p.gapSize,g.scale.value=p.scale}function c(g,p,y,x){g.diffuse.value.copy(p.color),g.opacity.value=p.opacity,g.size.value=p.size*y,g.scale.value=x*.5,p.map&&(g.map.value=p.map,t(p.map,g.uvTransform)),p.alphaMap&&(g.alphaMap.value=p.alphaMap),p.alphaTest>0&&(g.alphaTest.value=p.alphaTest)}function l(g,p){g.diffuse.value.copy(p.color),g.opacity.value=p.opacity,g.rotation.value=p.rotation,p.map&&(g.map.value=p.map,t(p.map,g.mapTransform)),p.alphaMap&&(g.alphaMap.value=p.alphaMap),p.alphaTest>0&&(g.alphaTest.value=p.alphaTest)}function u(g,p){g.specular.value.copy(p.specular),g.shininess.value=Math.max(p.shininess,1e-4)}function h(g,p){p.gradientMap&&(g.gradientMap.value=p.gradientMap)}function d(g,p){g.metalness.value=p.metalness,p.metalnessMap&&(g.metalnessMap.value=p.metalnessMap,t(p.metalnessMap,g.metalnessMapTransform)),g.roughness.value=p.roughness,p.roughnessMap&&(g.roughnessMap.value=p.roughnessMap,t(p.roughnessMap,g.roughnessMapTransform)),e.get(p).envMap&&(g.envMapIntensity.value=p.envMapIntensity)}function f(g,p,y){g.ior.value=p.ior,p.sheen>0&&(g.sheenColor.value.copy(p.sheenColor).multiplyScalar(p.sheen),g.sheenRoughness.value=p.sheenRoughness,p.sheenColorMap&&(g.sheenColorMap.value=p.sheenColorMap,t(p.sheenColorMap,g.sheenColorMapTransform)),p.sheenRoughnessMap&&(g.sheenRoughnessMap.value=p.sheenRoughnessMap,t(p.sheenRoughnessMap,g.sheenRoughnessMapTransform))),p.clearcoat>0&&(g.clearcoat.value=p.clearcoat,g.clearcoatRoughness.value=p.clearcoatRoughness,p.clearcoatMap&&(g.clearcoatMap.value=p.clearcoatMap,t(p.clearcoatMap,g.clearcoatMapTransform)),p.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=p.clearcoatRoughnessMap,t(p.clearcoatRoughnessMap,g.clearcoatRoughnessMapTransform)),p.clearcoatNormalMap&&(g.clearcoatNormalMap.value=p.clearcoatNormalMap,t(p.clearcoatNormalMap,g.clearcoatNormalMapTransform),g.clearcoatNormalScale.value.copy(p.clearcoatNormalScale),p.side===ji&&g.clearcoatNormalScale.value.negate())),p.iridescence>0&&(g.iridescence.value=p.iridescence,g.iridescenceIOR.value=p.iridescenceIOR,g.iridescenceThicknessMinimum.value=p.iridescenceThicknessRange[0],g.iridescenceThicknessMaximum.value=p.iridescenceThicknessRange[1],p.iridescenceMap&&(g.iridescenceMap.value=p.iridescenceMap,t(p.iridescenceMap,g.iridescenceMapTransform)),p.iridescenceThicknessMap&&(g.iridescenceThicknessMap.value=p.iridescenceThicknessMap,t(p.iridescenceThicknessMap,g.iridescenceThicknessMapTransform))),p.transmission>0&&(g.transmission.value=p.transmission,g.transmissionSamplerMap.value=y.texture,g.transmissionSamplerSize.value.set(y.width,y.height),p.transmissionMap&&(g.transmissionMap.value=p.transmissionMap,t(p.transmissionMap,g.transmissionMapTransform)),g.thickness.value=p.thickness,p.thicknessMap&&(g.thicknessMap.value=p.thicknessMap,t(p.thicknessMap,g.thicknessMapTransform)),g.attenuationDistance.value=p.attenuationDistance,g.attenuationColor.value.copy(p.attenuationColor)),g.specularIntensity.value=p.specularIntensity,g.specularColor.value.copy(p.specularColor),p.specularColorMap&&(g.specularColorMap.value=p.specularColorMap,t(p.specularColorMap,g.specularColorMapTransform)),p.specularIntensityMap&&(g.specularIntensityMap.value=p.specularIntensityMap,t(p.specularIntensityMap,g.specularIntensityMapTransform))}function m(g,p){p.matcap&&(g.matcap.value=p.matcap)}function _(g,p){const y=e.get(p).light;g.referencePosition.value.setFromMatrixPosition(y.matrixWorld),g.nearDistance.value=y.shadow.camera.near,g.farDistance.value=y.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:s}}function BB(i,e,t,n){let s={},r={},o=[];const a=t.isWebGL2?i.getParameter(i.MAX_UNIFORM_BUFFER_BINDINGS):0;function c(y,x){const v=x.program;n.uniformBlockBinding(y,v)}function l(y,x){let v=s[y.id];v===void 0&&(m(y),v=u(y),s[y.id]=v,y.addEventListener("dispose",g));const S=x.program;n.updateUBOMapping(y,S);const M=e.render.frame;r[y.id]!==M&&(d(y),r[y.id]=M)}function u(y){const x=h();y.__bindingPointIndex=x;const v=i.createBuffer(),S=y.__size,M=y.usage;return i.bindBuffer(i.UNIFORM_BUFFER,v),i.bufferData(i.UNIFORM_BUFFER,S,M),i.bindBuffer(i.UNIFORM_BUFFER,null),i.bindBufferBase(i.UNIFORM_BUFFER,x,v),v}function h(){for(let y=0;y<a;y++)if(o.indexOf(y)===-1)return o.push(y),y;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(y){const x=s[y.id],v=y.uniforms,S=y.__cache;i.bindBuffer(i.UNIFORM_BUFFER,x);for(let M=0,E=v.length;M<E;M++){const w=v[M];if(f(w,M,S)===!0){const b=w.__offset,T=Array.isArray(w.value)?w.value:[w.value];let C=0;for(let D=0;D<T.length;D++){const P=T[D],N=_(P);typeof P=="number"?(w.__data[0]=P,i.bufferSubData(i.UNIFORM_BUFFER,b+C,w.__data)):P.isMatrix3?(w.__data[0]=P.elements[0],w.__data[1]=P.elements[1],w.__data[2]=P.elements[2],w.__data[3]=P.elements[0],w.__data[4]=P.elements[3],w.__data[5]=P.elements[4],w.__data[6]=P.elements[5],w.__data[7]=P.elements[0],w.__data[8]=P.elements[6],w.__data[9]=P.elements[7],w.__data[10]=P.elements[8],w.__data[11]=P.elements[0]):(P.toArray(w.__data,C),C+=N.storage/Float32Array.BYTES_PER_ELEMENT)}i.bufferSubData(i.UNIFORM_BUFFER,b,w.__data)}}i.bindBuffer(i.UNIFORM_BUFFER,null)}function f(y,x,v){const S=y.value;if(v[x]===void 0){if(typeof S=="number")v[x]=S;else{const M=Array.isArray(S)?S:[S],E=[];for(let w=0;w<M.length;w++)E.push(M[w].clone());v[x]=E}return!0}else if(typeof S=="number"){if(v[x]!==S)return v[x]=S,!0}else{const M=Array.isArray(v[x])?v[x]:[v[x]],E=Array.isArray(S)?S:[S];for(let w=0;w<M.length;w++){const b=M[w];if(b.equals(E[w])===!1)return b.copy(E[w]),!0}}return!1}function m(y){const x=y.uniforms;let v=0;const S=16;let M=0;for(let E=0,w=x.length;E<w;E++){const b=x[E],T={boundary:0,storage:0},C=Array.isArray(b.value)?b.value:[b.value];for(let D=0,P=C.length;D<P;D++){const N=C[D],L=_(N);T.boundary+=L.boundary,T.storage+=L.storage}if(b.__data=new Float32Array(T.storage/Float32Array.BYTES_PER_ELEMENT),b.__offset=v,E>0){M=v%S;const D=S-M;M!==0&&D-T.boundary<0&&(v+=S-M,b.__offset=v)}v+=T.storage}return M=v%S,M>0&&(v+=S-M),y.__size=v,y.__cache={},this}function _(y){const x={boundary:0,storage:0};return typeof y=="number"?(x.boundary=4,x.storage=4):y.isVector2?(x.boundary=8,x.storage=8):y.isVector3||y.isColor?(x.boundary=16,x.storage=12):y.isVector4?(x.boundary=16,x.storage=16):y.isMatrix3?(x.boundary=48,x.storage=48):y.isMatrix4?(x.boundary=64,x.storage=64):y.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",y),x}function g(y){const x=y.target;x.removeEventListener("dispose",g);const v=o.indexOf(x.__bindingPointIndex);o.splice(v,1),i.deleteBuffer(s[x.id]),delete s[x.id],delete r[x.id]}function p(){for(const y in s)i.deleteBuffer(s[y]);o=[],s={},r={}}return{bind:c,update:l,dispose:p}}function kB(){const i=ig("canvas");return i.style.display="block",i}let oR=class{constructor(e={}){const{canvas:t=kB(),context:n=null,depth:s=!0,stencil:r=!0,alpha:o=!1,antialias:a=!1,premultipliedAlpha:c=!0,preserveDrawingBuffer:l=!1,powerPreference:u="default",failIfMajorPerformanceCaveat:h=!1}=e;this.isWebGLRenderer=!0;let d;n!==null?d=n.getContextAttributes().alpha:d=o;let f=null,m=null;const _=[],g=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputColorSpace=Et,this.useLegacyLights=!0,this.toneMapping=Lo,this.toneMappingExposure=1;const p=this;let y=!1,x=0,v=0,S=null,M=-1,E=null;const w=new Li,b=new Li;let T=null,C=t.width,D=t.height,P=1,N=null,L=null;const U=new Li(0,0,C,D),B=new Li(0,0,C,D);let k=!1;const $=new KC;let z=!1,Y=!1,ne=null;const te=new ci,V=new re,H={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Q(){return S===null?P:1}let O=n;function oe(W,pe){for(let be=0;be<W.length;be++){const de=W[be],we=t.getContext(de,pe);if(we!==null)return we}return null}try{const W={alpha:!0,depth:s,stencil:r,antialias:a,premultipliedAlpha:c,preserveDrawingBuffer:l,powerPreference:u,failIfMajorPerformanceCaveat:h};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${IS}`),t.addEventListener("webglcontextlost",Ee,!1),t.addEventListener("webglcontextrestored",tt,!1),t.addEventListener("webglcontextcreationerror",nt,!1),O===null){const pe=["webgl2","webgl","experimental-webgl"];if(p.isWebGL1Renderer===!0&&pe.shift(),O=oe(pe,W),O===null)throw oe(pe)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}O.getShaderPrecisionFormat===void 0&&(O.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(W){throw console.error("THREE.WebGLRenderer: "+W.message),W}let Ne,_e,Fe,Xe,$e,j,Ie,De,qe,Be,He,ze,G,A,R,q,ie,J,xe,Ce,ye,me,ge,Re;function Ue(){Ne=new ZO(O),_e=new WO(O,Ne,e),Ne.init(_e),me=new DB(O,Ne,_e),Fe=new NB(O,Ne,_e),Xe=new JO(O),$e=new gB,j=new PB(O,Ne,Fe,$e,_e,me,Xe),Ie=new qO(p),De=new YO(p),qe=new hF(O,_e),ge=new VO(O,Ne,qe,_e),Be=new KO(O,qe,Xe,ge),He=new i3(O,Be,qe,Xe),xe=new n3(O,_e,j),q=new $O($e),ze=new mB(p,Ie,De,Ne,_e,ge,q),G=new OB(p,$e),A=new vB,R=new TB(Ne,_e),J=new GO(p,Ie,De,Fe,He,d,c),ie=new RB(p,He,_e),Re=new BB(O,Xe,_e,Fe),Ce=new HO(O,Ne,Xe,_e),ye=new QO(O,Ne,Xe,_e),Xe.programs=ze.programs,p.capabilities=_e,p.extensions=Ne,p.properties=$e,p.renderLists=A,p.shadowMap=ie,p.state=Fe,p.info=Xe}Ue();const Le=new UB(p,O);this.xr=Le,this.getContext=function(){return O},this.getContextAttributes=function(){return O.getContextAttributes()},this.forceContextLoss=function(){const W=Ne.get("WEBGL_lose_context");W&&W.loseContext()},this.forceContextRestore=function(){const W=Ne.get("WEBGL_lose_context");W&&W.restoreContext()},this.getPixelRatio=function(){return P},this.setPixelRatio=function(W){W!==void 0&&(P=W,this.setSize(C,D,!1))},this.getSize=function(W){return W.set(C,D)},this.setSize=function(W,pe,be=!0){if(Le.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}C=W,D=pe,t.width=Math.floor(W*P),t.height=Math.floor(pe*P),be===!0&&(t.style.width=W+"px",t.style.height=pe+"px"),this.setViewport(0,0,W,pe)},this.getDrawingBufferSize=function(W){return W.set(C*P,D*P).floor()},this.setDrawingBufferSize=function(W,pe,be){C=W,D=pe,P=be,t.width=Math.floor(W*be),t.height=Math.floor(pe*be),this.setViewport(0,0,W,pe)},this.getCurrentViewport=function(W){return W.copy(w)},this.getViewport=function(W){return W.copy(U)},this.setViewport=function(W,pe,be,de){W.isVector4?U.set(W.x,W.y,W.z,W.w):U.set(W,pe,be,de),Fe.viewport(w.copy(U).multiplyScalar(P).floor())},this.getScissor=function(W){return W.copy(B)},this.setScissor=function(W,pe,be,de){W.isVector4?B.set(W.x,W.y,W.z,W.w):B.set(W,pe,be,de),Fe.scissor(b.copy(B).multiplyScalar(P).floor())},this.getScissorTest=function(){return k},this.setScissorTest=function(W){Fe.setScissorTest(k=W)},this.setOpaqueSort=function(W){N=W},this.setTransparentSort=function(W){L=W},this.getClearColor=function(W){return W.copy(J.getClearColor())},this.setClearColor=function(){J.setClearColor.apply(J,arguments)},this.getClearAlpha=function(){return J.getClearAlpha()},this.setClearAlpha=function(){J.setClearAlpha.apply(J,arguments)},this.clear=function(W=!0,pe=!0,be=!0){let de=0;W&&(de|=O.COLOR_BUFFER_BIT),pe&&(de|=O.DEPTH_BUFFER_BIT),be&&(de|=O.STENCIL_BUFFER_BIT),O.clear(de)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Ee,!1),t.removeEventListener("webglcontextrestored",tt,!1),t.removeEventListener("webglcontextcreationerror",nt,!1),A.dispose(),R.dispose(),$e.dispose(),Ie.dispose(),De.dispose(),He.dispose(),ge.dispose(),Re.dispose(),ze.dispose(),Le.dispose(),Le.removeEventListener("sessionstart",Se),Le.removeEventListener("sessionend",Oe),ne&&(ne.dispose(),ne=null),it.stop()};function Ee(W){W.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),y=!0}function tt(){console.log("THREE.WebGLRenderer: Context Restored."),y=!1;const W=Xe.autoReset,pe=ie.enabled,be=ie.autoUpdate,de=ie.needsUpdate,we=ie.type;Ue(),Xe.autoReset=W,ie.enabled=pe,ie.autoUpdate=be,ie.needsUpdate=de,ie.type=we}function nt(W){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",W.statusMessage)}function mt(W){const pe=W.target;pe.removeEventListener("dispose",mt),I(pe)}function I(W){ee(W),$e.remove(W)}function ee(W){const pe=$e.get(W).programs;pe!==void 0&&(pe.forEach(function(be){ze.releaseProgram(be)}),W.isShaderMaterial&&ze.releaseShaderCache(W))}this.renderBufferDirect=function(W,pe,be,de,we,ct){pe===null&&(pe=H);const ft=we.isMesh&&we.matrixWorld.determinant()<0,_t=Xr(W,pe,be,de,we);Fe.setMaterial(de,ft);let Mt=be.index,F=1;de.wireframe===!0&&(Mt=Be.getWireframeAttribute(be),F=2);const Z=be.drawRange,ce=be.attributes.position;let ue=Z.start*F,se=(Z.start+Z.count)*F;ct!==null&&(ue=Math.max(ue,ct.start*F),se=Math.min(se,(ct.start+ct.count)*F)),Mt!==null?(ue=Math.max(ue,0),se=Math.min(se,Mt.count)):ce!=null&&(ue=Math.max(ue,0),se=Math.min(se,ce.count));const ke=se-ue;if(ke<0||ke===1/0)return;ge.setup(we,de,_t,be,Mt);let Ye,je=Ce;if(Mt!==null&&(Ye=qe.get(Mt),je=ye,je.setIndex(Ye)),we.isMesh)de.wireframe===!0?(Fe.setLineWidth(de.wireframeLinewidth*Q()),je.setMode(O.LINES)):je.setMode(O.TRIANGLES);else if(we.isLine){let Ge=de.linewidth;Ge===void 0&&(Ge=1),Fe.setLineWidth(Ge*Q()),we.isLineSegments?je.setMode(O.LINES):we.isLineLoop?je.setMode(O.LINE_LOOP):je.setMode(O.LINE_STRIP)}else we.isPoints?je.setMode(O.POINTS):we.isSprite&&je.setMode(O.TRIANGLES);if(we.isInstancedMesh)je.renderInstances(ue,ke,we.count);else if(be.isInstancedBufferGeometry){const Ge=be._maxInstanceCount!==void 0?be._maxInstanceCount:1/0,gt=Math.min(be.instanceCount,Ge);je.renderInstances(ue,ke,gt)}else je.render(ue,ke)},this.compile=function(W,pe){function be(de,we,ct){de.transparent===!0&&de.side===Ar&&de.forceSinglePass===!1?(de.side=ji,de.needsUpdate=!0,nc(de,we,ct),de.side=za,de.needsUpdate=!0,nc(de,we,ct),de.side=Ar):nc(de,we,ct)}m=R.get(W),m.init(),g.push(m),W.traverseVisible(function(de){de.isLight&&de.layers.test(pe.layers)&&(m.pushLight(de),de.castShadow&&m.pushShadow(de))}),m.setupLights(p.useLegacyLights),W.traverse(function(de){const we=de.material;if(we)if(Array.isArray(we))for(let ct=0;ct<we.length;ct++){const ft=we[ct];be(ft,W,de)}else be(we,W,de)}),g.pop(),m=null};let X=null;function le(W){X&&X(W)}function Se(){it.stop()}function Oe(){it.start()}const it=new QC;it.setAnimationLoop(le),typeof self<"u"&&it.setContext(self),this.setAnimationLoop=function(W){X=W,Le.setAnimationLoop(W),W===null?it.stop():it.start()},Le.addEventListener("sessionstart",Se),Le.addEventListener("sessionend",Oe),this.render=function(W,pe){if(pe!==void 0&&pe.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(y===!0)return;W.matrixWorldAutoUpdate===!0&&W.updateMatrixWorld(),pe.parent===null&&pe.matrixWorldAutoUpdate===!0&&pe.updateMatrixWorld(),Le.enabled===!0&&Le.isPresenting===!0&&(Le.cameraAutoUpdate===!0&&Le.updateCamera(pe),pe=Le.getCamera()),W.isScene===!0&&W.onBeforeRender(p,W,pe,S),m=R.get(W,g.length),m.init(),g.push(m),te.multiplyMatrices(pe.projectionMatrix,pe.matrixWorldInverse),$.setFromProjectionMatrix(te),Y=this.localClippingEnabled,z=q.init(this.clippingPlanes,Y),f=A.get(W,_.length),f.init(),_.push(f),Ct(W,pe,0,p.sortObjects),f.finish(),p.sortObjects===!0&&f.sort(N,L),z===!0&&q.beginShadows();const be=m.state.shadowsArray;if(ie.render(be,W,pe),z===!0&&q.endShadows(),this.info.autoReset===!0&&this.info.reset(),J.render(f,W),m.setupLights(p.useLegacyLights),pe.isArrayCamera){const de=pe.cameras;for(let we=0,ct=de.length;we<ct;we++){const ft=de[we];an(f,W,ft,ft.viewport)}}else an(f,W,pe);S!==null&&(j.updateMultisampleRenderTarget(S),j.updateRenderTargetMipmap(S)),W.isScene===!0&&W.onAfterRender(p,W,pe),ge.resetDefaultState(),M=-1,E=null,g.pop(),g.length>0?m=g[g.length-1]:m=null,_.pop(),_.length>0?f=_[_.length-1]:f=null};function Ct(W,pe,be,de){if(W.visible===!1)return;if(W.layers.test(pe.layers)){if(W.isGroup)be=W.renderOrder;else if(W.isLOD)W.autoUpdate===!0&&W.update(pe);else if(W.isLight)m.pushLight(W),W.castShadow&&m.pushShadow(W);else if(W.isSprite){if(!W.frustumCulled||$.intersectsSprite(W)){de&&V.setFromMatrixPosition(W.matrixWorld).applyMatrix4(te);const ft=He.update(W),_t=W.material;_t.visible&&f.push(W,ft,_t,be,V.z,null)}}else if((W.isMesh||W.isLine||W.isPoints)&&(!W.frustumCulled||$.intersectsObject(W))){W.isSkinnedMesh&&W.skeleton.frame!==Xe.render.frame&&(W.skeleton.update(),W.skeleton.frame=Xe.render.frame);const ft=He.update(W),_t=W.material;if(de&&(ft.boundingSphere===null&&ft.computeBoundingSphere(),V.copy(ft.boundingSphere.center).applyMatrix4(W.matrixWorld).applyMatrix4(te)),Array.isArray(_t)){const Mt=ft.groups;for(let F=0,Z=Mt.length;F<Z;F++){const ce=Mt[F],ue=_t[ce.materialIndex];ue&&ue.visible&&f.push(W,ft,ue,be,V.z,ce)}}else _t.visible&&f.push(W,ft,_t,be,V.z,null)}}const ct=W.children;for(let ft=0,_t=ct.length;ft<_t;ft++)Ct(ct[ft],pe,be,de)}function an(W,pe,be,de){const we=W.opaque,ct=W.transmissive,ft=W.transparent;m.setupLightsView(be),z===!0&&q.setGlobalState(p.clippingPlanes,be),ct.length>0&&dt(we,ct,pe,be),de&&Fe.viewport(w.copy(de)),we.length>0&&dn(we,pe,be),ct.length>0&&dn(ct,pe,be),ft.length>0&&dn(ft,pe,be),Fe.buffers.depth.setTest(!0),Fe.buffers.depth.setMask(!0),Fe.buffers.color.setMask(!0),Fe.setPolygonOffset(!1)}function dt(W,pe,be,de){if(ne===null){const _t=_e.isWebGL2;ne=new cr(1024,1024,{generateMipmaps:!0,type:Ne.has("EXT_color_buffer_half_float")?Vd:$c,minFilter:Gd,samples:_t&&a===!0?4:0})}const we=p.getRenderTarget();p.setRenderTarget(ne),p.clear();const ct=p.toneMapping;p.toneMapping=Lo,dn(W,be,de),j.updateMultisampleRenderTarget(ne),j.updateRenderTargetMipmap(ne);let ft=!1;for(let _t=0,Mt=pe.length;_t<Mt;_t++){const F=pe[_t],Z=F.object,ce=F.geometry,ue=F.material,se=F.group;if(ue.side===Ar&&Z.layers.test(de.layers)){const ke=ue.side;ue.side=ji,ue.needsUpdate=!0,Nn(Z,be,de,ce,ue,se),ue.side=ke,ue.needsUpdate=!0,ft=!0}}ft===!0&&(j.updateMultisampleRenderTarget(ne),j.updateRenderTargetMipmap(ne)),p.setRenderTarget(we),p.toneMapping=ct}function dn(W,pe,be){const de=pe.isScene===!0?pe.overrideMaterial:null;for(let we=0,ct=W.length;we<ct;we++){const ft=W[we],_t=ft.object,Mt=ft.geometry,F=de===null?ft.material:de,Z=ft.group;_t.layers.test(be.layers)&&Nn(_t,pe,be,Mt,F,Z)}}function Nn(W,pe,be,de,we,ct){W.onBeforeRender(p,pe,be,de,we,ct),W.modelViewMatrix.multiplyMatrices(be.matrixWorldInverse,W.matrixWorld),W.normalMatrix.getNormalMatrix(W.modelViewMatrix),we.onBeforeRender(p,pe,be,de,W,ct),we.transparent===!0&&we.side===Ar&&we.forceSinglePass===!1?(we.side=ji,we.needsUpdate=!0,p.renderBufferDirect(be,pe,de,we,W,ct),we.side=za,we.needsUpdate=!0,p.renderBufferDirect(be,pe,de,we,W,ct),we.side=Ar):p.renderBufferDirect(be,pe,de,we,W,ct),W.onAfterRender(p,pe,be,de,we,ct)}function nc(W,pe,be){pe.isScene!==!0&&(pe=H);const de=$e.get(W),we=m.state.lights,ct=m.state.shadowsArray,ft=we.state.version,_t=ze.getParameters(W,we.state,ct,pe,be),Mt=ze.getProgramCacheKey(_t);let F=de.programs;de.environment=W.isMeshStandardMaterial?pe.environment:null,de.fog=pe.fog,de.envMap=(W.isMeshStandardMaterial?De:Ie).get(W.envMap||de.environment),F===void 0&&(W.addEventListener("dispose",mt),F=new Map,de.programs=F);let Z=F.get(Mt);if(Z!==void 0){if(de.currentProgram===Z&&de.lightsStateVersion===ft)return zh(W,_t),Z}else _t.uniforms=ze.getUniforms(W),W.onBuild(be,_t,p),W.onBeforeCompile(_t,p),Z=ze.acquireProgram(_t,Mt),F.set(Mt,Z),de.uniforms=_t.uniforms;const ce=de.uniforms;(!W.isShaderMaterial&&!W.isRawShaderMaterial||W.clipping===!0)&&(ce.clippingPlanes=q.uniform),zh(W,_t),de.needsLights=Xf(W),de.lightsStateVersion=ft,de.needsLights&&(ce.ambientLightColor.value=we.state.ambient,ce.lightProbe.value=we.state.probe,ce.directionalLights.value=we.state.directional,ce.directionalLightShadows.value=we.state.directionalShadow,ce.spotLights.value=we.state.spot,ce.spotLightShadows.value=we.state.spotShadow,ce.rectAreaLights.value=we.state.rectArea,ce.ltc_1.value=we.state.rectAreaLTC1,ce.ltc_2.value=we.state.rectAreaLTC2,ce.pointLights.value=we.state.point,ce.pointLightShadows.value=we.state.pointShadow,ce.hemisphereLights.value=we.state.hemi,ce.directionalShadowMap.value=we.state.directionalShadowMap,ce.directionalShadowMatrix.value=we.state.directionalShadowMatrix,ce.spotShadowMap.value=we.state.spotShadowMap,ce.spotLightMatrix.value=we.state.spotLightMatrix,ce.spotLightMap.value=we.state.spotLightMap,ce.pointShadowMap.value=we.state.pointShadowMap,ce.pointShadowMatrix.value=we.state.pointShadowMatrix);const ue=Z.getUniforms(),se=Lm.seqWithValue(ue.seq,ce);return de.currentProgram=Z,de.uniformsList=se,Z}function zh(W,pe){const be=$e.get(W);be.outputColorSpace=pe.outputColorSpace,be.instancing=pe.instancing,be.skinning=pe.skinning,be.morphTargets=pe.morphTargets,be.morphNormals=pe.morphNormals,be.morphColors=pe.morphColors,be.morphTargetsCount=pe.morphTargetsCount,be.numClippingPlanes=pe.numClippingPlanes,be.numIntersection=pe.numClipIntersection,be.vertexAlphas=pe.vertexAlphas,be.vertexTangents=pe.vertexTangents,be.toneMapping=pe.toneMapping}function Xr(W,pe,be,de,we){pe.isScene!==!0&&(pe=H),j.resetTextureUnits();const ct=pe.fog,ft=de.isMeshStandardMaterial?pe.environment:null,_t=S===null?p.outputColorSpace:S.isXRRenderTarget===!0?S.texture.colorSpace:Lr,Mt=(de.isMeshStandardMaterial?De:Ie).get(de.envMap||ft),F=de.vertexColors===!0&&!!be.attributes.color&&be.attributes.color.itemSize===4,Z=!!de.normalMap&&!!be.attributes.tangent,ce=!!be.morphAttributes.position,ue=!!be.morphAttributes.normal,se=!!be.morphAttributes.color,ke=de.toneMapped?p.toneMapping:Lo,Ye=be.morphAttributes.position||be.morphAttributes.normal||be.morphAttributes.color,je=Ye!==void 0?Ye.length:0,Ge=$e.get(de),gt=m.state.lights;if(z===!0&&(Y===!0||W!==E)){const xn=W===E&&de.id===M;q.setState(de,W,xn)}let rt=!1;de.version===Ge.__version?(Ge.needsLights&&Ge.lightsStateVersion!==gt.state.version||Ge.outputColorSpace!==_t||we.isInstancedMesh&&Ge.instancing===!1||!we.isInstancedMesh&&Ge.instancing===!0||we.isSkinnedMesh&&Ge.skinning===!1||!we.isSkinnedMesh&&Ge.skinning===!0||Ge.envMap!==Mt||de.fog===!0&&Ge.fog!==ct||Ge.numClippingPlanes!==void 0&&(Ge.numClippingPlanes!==q.numPlanes||Ge.numIntersection!==q.numIntersection)||Ge.vertexAlphas!==F||Ge.vertexTangents!==Z||Ge.morphTargets!==ce||Ge.morphNormals!==ue||Ge.morphColors!==se||Ge.toneMapping!==ke||_e.isWebGL2===!0&&Ge.morphTargetsCount!==je)&&(rt=!0):(rt=!0,Ge.__version=de.version);let st=Ge.currentProgram;rt===!0&&(st=nc(de,pe,we));let Ut=!1,Gt=!1,Qt=!1;const jt=st.getUniforms(),Pt=Ge.uniforms;if(Fe.useProgram(st.program)&&(Ut=!0,Gt=!0,Qt=!0),de.id!==M&&(M=de.id,Gt=!0),Ut||E!==W){if(jt.setValue(O,"projectionMatrix",W.projectionMatrix),_e.logarithmicDepthBuffer&&jt.setValue(O,"logDepthBufFC",2/(Math.log(W.far+1)/Math.LN2)),E!==W&&(E=W,Gt=!0,Qt=!0),de.isShaderMaterial||de.isMeshPhongMaterial||de.isMeshToonMaterial||de.isMeshStandardMaterial||de.envMap){const xn=jt.map.cameraPosition;xn!==void 0&&xn.setValue(O,V.setFromMatrixPosition(W.matrixWorld))}(de.isMeshPhongMaterial||de.isMeshToonMaterial||de.isMeshLambertMaterial||de.isMeshBasicMaterial||de.isMeshStandardMaterial||de.isShaderMaterial)&&jt.setValue(O,"isOrthographic",W.isOrthographicCamera===!0),(de.isMeshPhongMaterial||de.isMeshToonMaterial||de.isMeshLambertMaterial||de.isMeshBasicMaterial||de.isMeshStandardMaterial||de.isShaderMaterial||de.isShadowMaterial||we.isSkinnedMesh)&&jt.setValue(O,"viewMatrix",W.matrixWorldInverse)}if(we.isSkinnedMesh){jt.setOptional(O,we,"bindMatrix"),jt.setOptional(O,we,"bindMatrixInverse");const xn=we.skeleton;xn&&(_e.floatVertexTextures?(xn.boneTexture===null&&xn.computeBoneTexture(),jt.setValue(O,"boneTexture",xn.boneTexture,j),jt.setValue(O,"boneTextureSize",xn.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const ot=be.morphAttributes;if((ot.position!==void 0||ot.normal!==void 0||ot.color!==void 0&&_e.isWebGL2===!0)&&xe.update(we,be,st),(Gt||Ge.receiveShadow!==we.receiveShadow)&&(Ge.receiveShadow=we.receiveShadow,jt.setValue(O,"receiveShadow",we.receiveShadow)),de.isMeshGouraudMaterial&&de.envMap!==null&&(Pt.envMap.value=Mt,Pt.flipEnvMap.value=Mt.isCubeTexture&&Mt.isRenderTargetTexture===!1?-1:1),Gt&&(jt.setValue(O,"toneMappingExposure",p.toneMappingExposure),Ge.needsLights&&Gh(Pt,Qt),ct&&de.fog===!0&&G.refreshFogUniforms(Pt,ct),G.refreshMaterialUniforms(Pt,de,P,D,ne),Lm.upload(O,Ge.uniformsList,Pt,j)),de.isShaderMaterial&&de.uniformsNeedUpdate===!0&&(Lm.upload(O,Ge.uniformsList,Pt,j),de.uniformsNeedUpdate=!1),de.isSpriteMaterial&&jt.setValue(O,"center",we.center),jt.setValue(O,"modelViewMatrix",we.modelViewMatrix),jt.setValue(O,"normalMatrix",we.normalMatrix),jt.setValue(O,"modelMatrix",we.matrixWorld),de.isShaderMaterial||de.isRawShaderMaterial){const xn=de.uniformsGroups;for(let Ot=0,ts=xn.length;Ot<ts;Ot++)if(_e.isWebGL2){const jr=xn[Ot];Re.update(jr,st),Re.bind(jr,st)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return st}function Gh(W,pe){W.ambientLightColor.needsUpdate=pe,W.lightProbe.needsUpdate=pe,W.directionalLights.needsUpdate=pe,W.directionalLightShadows.needsUpdate=pe,W.pointLights.needsUpdate=pe,W.pointLightShadows.needsUpdate=pe,W.spotLights.needsUpdate=pe,W.spotLightShadows.needsUpdate=pe,W.rectAreaLights.needsUpdate=pe,W.hemisphereLights.needsUpdate=pe}function Xf(W){return W.isMeshLambertMaterial||W.isMeshToonMaterial||W.isMeshPhongMaterial||W.isMeshStandardMaterial||W.isShadowMaterial||W.isShaderMaterial&&W.lights===!0}this.getActiveCubeFace=function(){return x},this.getActiveMipmapLevel=function(){return v},this.getRenderTarget=function(){return S},this.setRenderTargetTextures=function(W,pe,be){$e.get(W.texture).__webglTexture=pe,$e.get(W.depthTexture).__webglTexture=be;const de=$e.get(W);de.__hasExternalTextures=!0,de.__hasExternalTextures&&(de.__autoAllocateDepthBuffer=be===void 0,de.__autoAllocateDepthBuffer||Ne.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),de.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(W,pe){const be=$e.get(W);be.__webglFramebuffer=pe,be.__useDefaultFramebuffer=pe===void 0},this.setRenderTarget=function(W,pe=0,be=0){S=W,x=pe,v=be;let de=!0,we=null,ct=!1,ft=!1;if(W){const Mt=$e.get(W);Mt.__useDefaultFramebuffer!==void 0?(Fe.bindFramebuffer(O.FRAMEBUFFER,null),de=!1):Mt.__webglFramebuffer===void 0?j.setupRenderTarget(W):Mt.__hasExternalTextures&&j.rebindTextures(W,$e.get(W.texture).__webglTexture,$e.get(W.depthTexture).__webglTexture);const F=W.texture;(F.isData3DTexture||F.isDataArrayTexture||F.isCompressedArrayTexture)&&(ft=!0);const Z=$e.get(W).__webglFramebuffer;W.isWebGLCubeRenderTarget?(we=Z[pe],ct=!0):_e.isWebGL2&&W.samples>0&&j.useMultisampledRTT(W)===!1?we=$e.get(W).__webglMultisampledFramebuffer:we=Z,w.copy(W.viewport),b.copy(W.scissor),T=W.scissorTest}else w.copy(U).multiplyScalar(P).floor(),b.copy(B).multiplyScalar(P).floor(),T=k;if(Fe.bindFramebuffer(O.FRAMEBUFFER,we)&&_e.drawBuffers&&de&&Fe.drawBuffers(W,we),Fe.viewport(w),Fe.scissor(b),Fe.setScissorTest(T),ct){const Mt=$e.get(W.texture);O.framebufferTexture2D(O.FRAMEBUFFER,O.COLOR_ATTACHMENT0,O.TEXTURE_CUBE_MAP_POSITIVE_X+pe,Mt.__webglTexture,be)}else if(ft){const Mt=$e.get(W.texture),F=pe||0;O.framebufferTextureLayer(O.FRAMEBUFFER,O.COLOR_ATTACHMENT0,Mt.__webglTexture,be||0,F)}M=-1},this.readRenderTargetPixels=function(W,pe,be,de,we,ct,ft){if(!(W&&W.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let _t=$e.get(W).__webglFramebuffer;if(W.isWebGLCubeRenderTarget&&ft!==void 0&&(_t=_t[ft]),_t){Fe.bindFramebuffer(O.FRAMEBUFFER,_t);try{const Mt=W.texture,F=Mt.format,Z=Mt.type;if(F!==er&&me.convert(F)!==O.getParameter(O.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const ce=Z===Vd&&(Ne.has("EXT_color_buffer_half_float")||_e.isWebGL2&&Ne.has("EXT_color_buffer_float"));if(Z!==$c&&me.convert(Z)!==O.getParameter(O.IMPLEMENTATION_COLOR_READ_TYPE)&&!(Z===Ic&&(_e.isWebGL2||Ne.has("OES_texture_float")||Ne.has("WEBGL_color_buffer_float")))&&!ce){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}pe>=0&&pe<=W.width-de&&be>=0&&be<=W.height-we&&O.readPixels(pe,be,de,we,me.convert(F),me.convert(Z),ct)}finally{const Mt=S!==null?$e.get(S).__webglFramebuffer:null;Fe.bindFramebuffer(O.FRAMEBUFFER,Mt)}}},this.copyFramebufferToTexture=function(W,pe,be=0){const de=Math.pow(2,-be),we=Math.floor(pe.image.width*de),ct=Math.floor(pe.image.height*de);j.setTexture2D(pe,0),O.copyTexSubImage2D(O.TEXTURE_2D,be,0,0,W.x,W.y,we,ct),Fe.unbindTexture()},this.copyTextureToTexture=function(W,pe,be,de=0){const we=pe.image.width,ct=pe.image.height,ft=me.convert(be.format),_t=me.convert(be.type);j.setTexture2D(be,0),O.pixelStorei(O.UNPACK_FLIP_Y_WEBGL,be.flipY),O.pixelStorei(O.UNPACK_PREMULTIPLY_ALPHA_WEBGL,be.premultiplyAlpha),O.pixelStorei(O.UNPACK_ALIGNMENT,be.unpackAlignment),pe.isDataTexture?O.texSubImage2D(O.TEXTURE_2D,de,W.x,W.y,we,ct,ft,_t,pe.image.data):pe.isCompressedTexture?O.compressedTexSubImage2D(O.TEXTURE_2D,de,W.x,W.y,pe.mipmaps[0].width,pe.mipmaps[0].height,ft,pe.mipmaps[0].data):O.texSubImage2D(O.TEXTURE_2D,de,W.x,W.y,ft,_t,pe.image),de===0&&be.generateMipmaps&&O.generateMipmap(O.TEXTURE_2D),Fe.unbindTexture()},this.copyTextureToTexture3D=function(W,pe,be,de,we=0){if(p.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const ct=W.max.x-W.min.x+1,ft=W.max.y-W.min.y+1,_t=W.max.z-W.min.z+1,Mt=me.convert(de.format),F=me.convert(de.type);let Z;if(de.isData3DTexture)j.setTexture3D(de,0),Z=O.TEXTURE_3D;else if(de.isDataArrayTexture)j.setTexture2DArray(de,0),Z=O.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}O.pixelStorei(O.UNPACK_FLIP_Y_WEBGL,de.flipY),O.pixelStorei(O.UNPACK_PREMULTIPLY_ALPHA_WEBGL,de.premultiplyAlpha),O.pixelStorei(O.UNPACK_ALIGNMENT,de.unpackAlignment);const ce=O.getParameter(O.UNPACK_ROW_LENGTH),ue=O.getParameter(O.UNPACK_IMAGE_HEIGHT),se=O.getParameter(O.UNPACK_SKIP_PIXELS),ke=O.getParameter(O.UNPACK_SKIP_ROWS),Ye=O.getParameter(O.UNPACK_SKIP_IMAGES),je=be.isCompressedTexture?be.mipmaps[0]:be.image;O.pixelStorei(O.UNPACK_ROW_LENGTH,je.width),O.pixelStorei(O.UNPACK_IMAGE_HEIGHT,je.height),O.pixelStorei(O.UNPACK_SKIP_PIXELS,W.min.x),O.pixelStorei(O.UNPACK_SKIP_ROWS,W.min.y),O.pixelStorei(O.UNPACK_SKIP_IMAGES,W.min.z),be.isDataTexture||be.isData3DTexture?O.texSubImage3D(Z,we,pe.x,pe.y,pe.z,ct,ft,_t,Mt,F,je.data):be.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),O.compressedTexSubImage3D(Z,we,pe.x,pe.y,pe.z,ct,ft,_t,Mt,je.data)):O.texSubImage3D(Z,we,pe.x,pe.y,pe.z,ct,ft,_t,Mt,F,je),O.pixelStorei(O.UNPACK_ROW_LENGTH,ce),O.pixelStorei(O.UNPACK_IMAGE_HEIGHT,ue),O.pixelStorei(O.UNPACK_SKIP_PIXELS,se),O.pixelStorei(O.UNPACK_SKIP_ROWS,ke),O.pixelStorei(O.UNPACK_SKIP_IMAGES,Ye),we===0&&de.generateMipmaps&&O.generateMipmap(Z),Fe.unbindTexture()},this.initTexture=function(W){W.isCubeTexture?j.setTextureCube(W,0):W.isData3DTexture?j.setTexture3D(W,0):W.isDataArrayTexture||W.isCompressedArrayTexture?j.setTexture2DArray(W,0):j.setTexture2D(W,0),Fe.unbindTexture()},this.resetState=function(){x=0,v=0,S=null,Fe.reset(),ge.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get physicallyCorrectLights(){return console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights}set physicallyCorrectLights(e){console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!e}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===Et?Bc:CC}set outputEncoding(e){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=e===Bc?Et:Lr}};class zB extends oR{}zB.prototype.isWebGL1Renderer=!0;let GB=class extends _r{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(e){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=e}},BS=class extends xh{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Wt(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}};const aE=new re,cE=new re,lE=new ci,v0=new kC,gp=new e_;class aR extends _r{constructor(e=new Us,t=new BS){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let s=1,r=t.count;s<r;s++)aE.fromBufferAttribute(t,s-1),cE.fromBufferAttribute(t,s),n[s]=n[s-1],n[s]+=aE.distanceTo(cE);e.setAttribute("lineDistance",new Wn(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,s=this.matrixWorld,r=e.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),gp.copy(n.boundingSphere),gp.applyMatrix4(s),gp.radius+=r,e.ray.intersectsSphere(gp)===!1)return;lE.copy(s).invert(),v0.copy(e.ray).applyMatrix4(lE);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),c=a*a,l=new re,u=new re,h=new re,d=new re,f=this.isLineSegments?2:1,m=n.index,g=n.attributes.position;if(m!==null){const p=Math.max(0,o.start),y=Math.min(m.count,o.start+o.count);for(let x=p,v=y-1;x<v;x+=f){const S=m.getX(x),M=m.getX(x+1);if(l.fromBufferAttribute(g,S),u.fromBufferAttribute(g,M),v0.distanceSqToSegment(l,u,d,h)>c)continue;d.applyMatrix4(this.matrixWorld);const w=e.ray.origin.distanceTo(d);w<e.near||w>e.far||t.push({distance:w,point:h.clone().applyMatrix4(this.matrixWorld),index:x,face:null,faceIndex:null,object:this})}}else{const p=Math.max(0,o.start),y=Math.min(g.count,o.start+o.count);for(let x=p,v=y-1;x<v;x+=f){if(l.fromBufferAttribute(g,x),u.fromBufferAttribute(g,x+1),v0.distanceSqToSegment(l,u,d,h)>c)continue;d.applyMatrix4(this.matrixWorld);const M=e.ray.origin.distanceTo(d);M<e.near||M>e.far||t.push({distance:M,point:h.clone().applyMatrix4(this.matrixWorld),index:x,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const s=t[n[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=s.length;r<o;r++){const a=s[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}class VB extends Gr{constructor(e,t,n,s,r,o,a,c,l){super(e,t,n,s,r,o,a,c,l),this.isCanvasTexture=!0,this.needsUpdate=!0}}class jo{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,s=this.getPoint(0),r=0;t.push(0);for(let o=1;o<=e;o++)n=this.getPoint(o/e),r+=n.distanceTo(s),t.push(r),s=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let s=0;const r=n.length;let o;t?o=t:o=e*n[r-1];let a=0,c=r-1,l;for(;a<=c;)if(s=Math.floor(a+(c-a)/2),l=n[s]-o,l<0)a=s+1;else if(l>0)c=s-1;else{c=s;break}if(s=c,n[s]===o)return s/(r-1);const u=n[s],d=n[s+1]-u,f=(o-u)/d;return(s+f)/(r-1)}getTangent(e,t){let s=e-1e-4,r=e+1e-4;s<0&&(s=0),r>1&&(r=1);const o=this.getPoint(s),a=this.getPoint(r),c=t||(o.isVector2?new ut:new re);return c.copy(a).sub(o).normalize(),c}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new re,s=[],r=[],o=[],a=new re,c=new ci;for(let f=0;f<=e;f++){const m=f/e;s[f]=this.getTangentAt(m,new re)}r[0]=new re,o[0]=new re;let l=Number.MAX_VALUE;const u=Math.abs(s[0].x),h=Math.abs(s[0].y),d=Math.abs(s[0].z);u<=l&&(l=u,n.set(1,0,0)),h<=l&&(l=h,n.set(0,1,0)),d<=l&&n.set(0,0,1),a.crossVectors(s[0],n).normalize(),r[0].crossVectors(s[0],a),o[0].crossVectors(s[0],r[0]);for(let f=1;f<=e;f++){if(r[f]=r[f-1].clone(),o[f]=o[f-1].clone(),a.crossVectors(s[f-1],s[f]),a.length()>Number.EPSILON){a.normalize();const m=Math.acos(xi(s[f-1].dot(s[f]),-1,1));r[f].applyMatrix4(c.makeRotationAxis(a,m))}o[f].crossVectors(s[f],r[f])}if(t===!0){let f=Math.acos(xi(r[0].dot(r[e]),-1,1));f/=e,s[0].dot(a.crossVectors(r[0],r[e]))>0&&(f=-f);for(let m=1;m<=e;m++)r[m].applyMatrix4(c.makeRotationAxis(s[m],f*m)),o[m].crossVectors(s[m],r[m])}return{tangents:s,normals:r,binormals:o}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class cR extends jo{constructor(e=0,t=0,n=1,s=1,r=0,o=Math.PI*2,a=!1,c=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=s,this.aStartAngle=r,this.aEndAngle=o,this.aClockwise=a,this.aRotation=c}getPoint(e,t){const n=t||new ut,s=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const o=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=s;for(;r>s;)r-=s;r<Number.EPSILON&&(o?r=0:r=s),this.aClockwise===!0&&!o&&(r===s?r=-s:r=r-s);const a=this.aStartAngle+e*r;let c=this.aX+this.xRadius*Math.cos(a),l=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const u=Math.cos(this.aRotation),h=Math.sin(this.aRotation),d=c-this.aX,f=l-this.aY;c=d*u-f*h+this.aX,l=d*h+f*u+this.aY}return n.set(c,l)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class HB extends cR{constructor(e,t,n,s,r,o){super(e,t,n,n,s,r,o),this.isArcCurve=!0,this.type="ArcCurve"}}function kS(){let i=0,e=0,t=0,n=0;function s(r,o,a,c){i=r,e=a,t=-3*r+3*o-2*a-c,n=2*r-2*o+a+c}return{initCatmullRom:function(r,o,a,c,l){s(o,a,l*(a-r),l*(c-o))},initNonuniformCatmullRom:function(r,o,a,c,l,u,h){let d=(o-r)/l-(a-r)/(l+u)+(a-o)/u,f=(a-o)/u-(c-o)/(u+h)+(c-a)/h;d*=u,f*=u,s(o,a,d,f)},calc:function(r){const o=r*r,a=o*r;return i+e*r+t*o+n*a}}}const _p=new re,x0=new kS,y0=new kS,S0=new kS;class WB extends jo{constructor(e=[],t=!1,n="centripetal",s=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=s}getPoint(e,t=new re){const n=t,s=this.points,r=s.length,o=(r-(this.closed?0:1))*e;let a=Math.floor(o),c=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/r)+1)*r:c===0&&a===r-1&&(a=r-2,c=1);let l,u;this.closed||a>0?l=s[(a-1)%r]:(_p.subVectors(s[0],s[1]).add(s[0]),l=_p);const h=s[a%r],d=s[(a+1)%r];if(this.closed||a+2<r?u=s[(a+2)%r]:(_p.subVectors(s[r-1],s[r-2]).add(s[r-1]),u=_p),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let m=Math.pow(l.distanceToSquared(h),f),_=Math.pow(h.distanceToSquared(d),f),g=Math.pow(d.distanceToSquared(u),f);_<1e-4&&(_=1),m<1e-4&&(m=_),g<1e-4&&(g=_),x0.initNonuniformCatmullRom(l.x,h.x,d.x,u.x,m,_,g),y0.initNonuniformCatmullRom(l.y,h.y,d.y,u.y,m,_,g),S0.initNonuniformCatmullRom(l.z,h.z,d.z,u.z,m,_,g)}else this.curveType==="catmullrom"&&(x0.initCatmullRom(l.x,h.x,d.x,u.x,this.tension),y0.initCatmullRom(l.y,h.y,d.y,u.y,this.tension),S0.initCatmullRom(l.z,h.z,d.z,u.z,this.tension));return n.set(x0.calc(c),y0.calc(c),S0.calc(c)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const s=e.points[t];this.points.push(s.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const s=this.points[t];e.points.push(s.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const s=e.points[t];this.points.push(new re().fromArray(s))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function uE(i,e,t,n,s){const r=(n-e)*.5,o=(s-t)*.5,a=i*i,c=i*a;return(2*t-2*n+r+o)*c+(-3*t+3*n-2*r-o)*a+r*i+t}function $B(i,e){const t=1-i;return t*t*e}function qB(i,e){return 2*(1-i)*i*e}function XB(i,e){return i*i*e}function Rd(i,e,t,n){return $B(i,e)+qB(i,t)+XB(i,n)}function jB(i,e){const t=1-i;return t*t*t*e}function YB(i,e){const t=1-i;return 3*t*t*i*e}function ZB(i,e){return 3*(1-i)*i*i*e}function KB(i,e){return i*i*i*e}function Nd(i,e,t,n,s){return jB(i,e)+YB(i,t)+ZB(i,n)+KB(i,s)}class QB extends jo{constructor(e=new ut,t=new ut,n=new ut,s=new ut){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=s}getPoint(e,t=new ut){const n=t,s=this.v0,r=this.v1,o=this.v2,a=this.v3;return n.set(Nd(e,s.x,r.x,o.x,a.x),Nd(e,s.y,r.y,o.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class lR extends jo{constructor(e=new re,t=new re,n=new re,s=new re){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=s}getPoint(e,t=new re){const n=t,s=this.v0,r=this.v1,o=this.v2,a=this.v3;return n.set(Nd(e,s.x,r.x,o.x,a.x),Nd(e,s.y,r.y,o.y,a.y),Nd(e,s.z,r.z,o.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class JB extends jo{constructor(e=new ut,t=new ut){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new ut){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new ut){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class ek extends jo{constructor(e=new re,t=new re){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new re){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new re){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class tk extends jo{constructor(e=new ut,t=new ut,n=new ut){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new ut){const n=t,s=this.v0,r=this.v1,o=this.v2;return n.set(Rd(e,s.x,r.x,o.x),Rd(e,s.y,r.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class zS extends jo{constructor(e=new re,t=new re,n=new re){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new re){const n=t,s=this.v0,r=this.v1,o=this.v2;return n.set(Rd(e,s.x,r.x,o.x),Rd(e,s.y,r.y,o.y),Rd(e,s.z,r.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class nk extends jo{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new ut){const n=t,s=this.points,r=(s.length-1)*e,o=Math.floor(r),a=r-o,c=s[o===0?o:o-1],l=s[o],u=s[o>s.length-2?s.length-1:o+1],h=s[o>s.length-3?s.length-1:o+2];return n.set(uE(a,c.x,l.x,u.x,h.x),uE(a,c.y,l.y,u.y,h.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const s=e.points[t];this.points.push(s.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const s=this.points[t];e.points.push(s.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const s=e.points[t];this.points.push(new ut().fromArray(s))}return this}}var ik=Object.freeze({__proto__:null,ArcCurve:HB,CatmullRomCurve3:WB,CubicBezierCurve:QB,CubicBezierCurve3:lR,EllipseCurve:cR,LineCurve:JB,LineCurve3:ek,QuadraticBezierCurve:tk,QuadraticBezierCurve3:zS,SplineCurve:nk});class n_ extends Us{constructor(e=1,t=1,n=1,s=32,r=1,o=!1,a=0,c=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:s,heightSegments:r,openEnded:o,thetaStart:a,thetaLength:c};const l=this;s=Math.floor(s),r=Math.floor(r);const u=[],h=[],d=[],f=[];let m=0;const _=[],g=n/2;let p=0;y(),o===!1&&(e>0&&x(!0),t>0&&x(!1)),this.setIndex(u),this.setAttribute("position",new Wn(h,3)),this.setAttribute("normal",new Wn(d,3)),this.setAttribute("uv",new Wn(f,2));function y(){const v=new re,S=new re;let M=0;const E=(t-e)/n;for(let w=0;w<=r;w++){const b=[],T=w/r,C=T*(t-e)+e;for(let D=0;D<=s;D++){const P=D/s,N=P*c+a,L=Math.sin(N),U=Math.cos(N);S.x=C*L,S.y=-T*n+g,S.z=C*U,h.push(S.x,S.y,S.z),v.set(L,E,U).normalize(),d.push(v.x,v.y,v.z),f.push(P,1-T),b.push(m++)}_.push(b)}for(let w=0;w<s;w++)for(let b=0;b<r;b++){const T=_[b][w],C=_[b+1][w],D=_[b+1][w+1],P=_[b][w+1];u.push(T,C,P),u.push(C,D,P),M+=6}l.addGroup(p,M,0),p+=M}function x(v){const S=m,M=new ut,E=new re;let w=0;const b=v===!0?e:t,T=v===!0?1:-1;for(let D=1;D<=s;D++)h.push(0,g*T,0),d.push(0,T,0),f.push(.5,.5),m++;const C=m;for(let D=0;D<=s;D++){const N=D/s*c+a,L=Math.cos(N),U=Math.sin(N);E.x=b*U,E.y=g*T,E.z=b*L,h.push(E.x,E.y,E.z),d.push(0,T,0),M.x=L*.5+.5,M.y=U*.5*T+.5,f.push(M.x,M.y),m++}for(let D=0;D<s;D++){const P=S+D,N=C+D;v===!0?u.push(N,N+1,P):u.push(N+1,N,P),w+=3}l.addGroup(p,w,v===!0?1:2),p+=w}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new n_(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class GS extends n_{constructor(e=1,t=1,n=32,s=1,r=!1,o=0,a=Math.PI*2){super(0,e,t,n,s,r,o,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:s,openEnded:r,thetaStart:o,thetaLength:a}}static fromJSON(e){return new GS(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}let uR=class hR extends Us{constructor(e=1,t=32,n=16,s=0,r=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:s,phiLength:r,thetaStart:o,thetaLength:a},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const c=Math.min(o+a,Math.PI);let l=0;const u=[],h=new re,d=new re,f=[],m=[],_=[],g=[];for(let p=0;p<=n;p++){const y=[],x=p/n;let v=0;p===0&&o===0?v=.5/t:p===n&&c===Math.PI&&(v=-.5/t);for(let S=0;S<=t;S++){const M=S/t;h.x=-e*Math.cos(s+M*r)*Math.sin(o+x*a),h.y=e*Math.cos(o+x*a),h.z=e*Math.sin(s+M*r)*Math.sin(o+x*a),m.push(h.x,h.y,h.z),d.copy(h).normalize(),_.push(d.x,d.y,d.z),g.push(M+v,1-x),y.push(l++)}u.push(y)}for(let p=0;p<n;p++)for(let y=0;y<t;y++){const x=u[p][y+1],v=u[p][y],S=u[p+1][y],M=u[p+1][y+1];(p!==0||o>0)&&f.push(x,v,M),(p!==n-1||c<Math.PI)&&f.push(v,S,M)}this.setIndex(f),this.setAttribute("position",new Wn(m,3)),this.setAttribute("normal",new Wn(_,3)),this.setAttribute("uv",new Wn(g,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new hR(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}};class VS extends Us{constructor(e=new zS(new re(-1,-1,0),new re(-1,1,0),new re(1,1,0)),t=64,n=1,s=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:s,closed:r};const o=e.computeFrenetFrames(t,r);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const a=new re,c=new re,l=new ut;let u=new re;const h=[],d=[],f=[],m=[];_(),this.setIndex(m),this.setAttribute("position",new Wn(h,3)),this.setAttribute("normal",new Wn(d,3)),this.setAttribute("uv",new Wn(f,2));function _(){for(let x=0;x<t;x++)g(x);g(r===!1?t:0),y(),p()}function g(x){u=e.getPointAt(x/t,u);const v=o.normals[x],S=o.binormals[x];for(let M=0;M<=s;M++){const E=M/s*Math.PI*2,w=Math.sin(E),b=-Math.cos(E);c.x=b*v.x+w*S.x,c.y=b*v.y+w*S.y,c.z=b*v.z+w*S.z,c.normalize(),d.push(c.x,c.y,c.z),a.x=u.x+n*c.x,a.y=u.y+n*c.y,a.z=u.z+n*c.z,h.push(a.x,a.y,a.z)}}function p(){for(let x=1;x<=t;x++)for(let v=1;v<=s;v++){const S=(s+1)*(x-1)+(v-1),M=(s+1)*x+(v-1),E=(s+1)*x+v,w=(s+1)*(x-1)+v;m.push(S,M,w),m.push(M,E,w)}}function y(){for(let x=0;x<=t;x++)for(let v=0;v<=s;v++)l.x=x/t,l.y=v/s,f.push(l.x,l.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new VS(new ik[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}let sk=class extends xh{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Wt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Wt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=RC,this.normalScale=new ut(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=FS,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}},rk=class{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=hE(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=hE();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}};function hE(){return(typeof performance>"u"?Date:performance).now()}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:IS}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=IS);let Tf=class{constructor(){this.isPass=!0,this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}dispose(){}};const ok=new tR(-1,1,1,-1,0,1),HS=new Us;HS.setAttribute("position",new Wn([-1,3,0,-1,-1,0,3,-1,0],3));HS.setAttribute("uv",new Wn([0,2,0,0,2,0],2));let dR=class{constructor(e){this._mesh=new Rs(HS,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,ok)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}};const fR={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform float opacity;

		uniform sampler2D tDiffuse;

		varying vec2 vUv;

		void main() {

			gl_FragColor = texture2D( tDiffuse, vUv );
			gl_FragColor.a *= opacity;


		}`},ak={shaderID:"luminosityHighPass",uniforms:{tDiffuse:{value:null},luminosityThreshold:{value:1},smoothWidth:{value:1},defaultColor:{value:new Wt(0)},defaultOpacity:{value:0}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;

			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform sampler2D tDiffuse;
		uniform vec3 defaultColor;
		uniform float defaultOpacity;
		uniform float luminosityThreshold;
		uniform float smoothWidth;

		varying vec2 vUv;

		void main() {

			vec4 texel = texture2D( tDiffuse, vUv );

			vec3 luma = vec3( 0.299, 0.587, 0.114 );

			float v = dot( texel.xyz, luma );

			vec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );

			float alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );

			gl_FragColor = mix( outputColor, texel, alpha );

		}`};class Zu extends Tf{constructor(e,t,n,s){super(),this.strength=t!==void 0?t:1,this.radius=n,this.threshold=s,this.resolution=e!==void 0?new ut(e.x,e.y):new ut(256,256),this.clearColor=new Wt(0,0,0),this.renderTargetsHorizontal=[],this.renderTargetsVertical=[],this.nMips=5;let r=Math.round(this.resolution.x/2),o=Math.round(this.resolution.y/2);this.renderTargetBright=new cr(r,o),this.renderTargetBright.texture.name="UnrealBloomPass.bright",this.renderTargetBright.texture.generateMipmaps=!1;for(let h=0;h<this.nMips;h++){const d=new cr(r,o);d.texture.name="UnrealBloomPass.h"+h,d.texture.generateMipmaps=!1,this.renderTargetsHorizontal.push(d);const f=new cr(r,o);f.texture.name="UnrealBloomPass.v"+h,f.texture.generateMipmaps=!1,this.renderTargetsVertical.push(f),r=Math.round(r/2),o=Math.round(o/2)}const a=ak;this.highPassUniforms=sg.clone(a.uniforms),this.highPassUniforms.luminosityThreshold.value=s,this.highPassUniforms.smoothWidth.value=.01,this.materialHighPassFilter=new _s({uniforms:this.highPassUniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader,defines:{}}),this.separableBlurMaterials=[];const c=[3,5,7,9,11];r=Math.round(this.resolution.x/2),o=Math.round(this.resolution.y/2);for(let h=0;h<this.nMips;h++)this.separableBlurMaterials.push(this.getSeperableBlurMaterial(c[h])),this.separableBlurMaterials[h].uniforms.texSize.value=new ut(r,o),r=Math.round(r/2),o=Math.round(o/2);this.compositeMaterial=this.getCompositeMaterial(this.nMips),this.compositeMaterial.uniforms.blurTexture1.value=this.renderTargetsVertical[0].texture,this.compositeMaterial.uniforms.blurTexture2.value=this.renderTargetsVertical[1].texture,this.compositeMaterial.uniforms.blurTexture3.value=this.renderTargetsVertical[2].texture,this.compositeMaterial.uniforms.blurTexture4.value=this.renderTargetsVertical[3].texture,this.compositeMaterial.uniforms.blurTexture5.value=this.renderTargetsVertical[4].texture,this.compositeMaterial.uniforms.bloomStrength.value=t,this.compositeMaterial.uniforms.bloomRadius.value=.1,this.compositeMaterial.needsUpdate=!0;const l=[1,.8,.6,.4,.2];this.compositeMaterial.uniforms.bloomFactors.value=l,this.bloomTintColors=[new re(1,1,1),new re(1,1,1),new re(1,1,1),new re(1,1,1),new re(1,1,1)],this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors;const u=fR;this.copyUniforms=sg.clone(u.uniforms),this.copyUniforms.opacity.value=1,this.materialCopy=new _s({uniforms:this.copyUniforms,vertexShader:u.vertexShader,fragmentShader:u.fragmentShader,blending:_x,depthTest:!1,depthWrite:!1,transparent:!0}),this.enabled=!0,this.needsSwap=!1,this._oldClearColor=new Wt,this.oldClearAlpha=1,this.basic=new Mf,this.fsQuad=new dR(null)}dispose(){for(let e=0;e<this.renderTargetsHorizontal.length;e++)this.renderTargetsHorizontal[e].dispose();for(let e=0;e<this.renderTargetsVertical.length;e++)this.renderTargetsVertical[e].dispose();this.renderTargetBright.dispose();for(let e=0;e<this.separableBlurMaterials.length;e++)this.separableBlurMaterials[e].dispose();this.compositeMaterial.dispose(),this.materialCopy.dispose(),this.basic.dispose(),this.fsQuad.dispose()}setSize(e,t){let n=Math.round(e/2),s=Math.round(t/2);this.renderTargetBright.setSize(n,s);for(let r=0;r<this.nMips;r++)this.renderTargetsHorizontal[r].setSize(n,s),this.renderTargetsVertical[r].setSize(n,s),this.separableBlurMaterials[r].uniforms.texSize.value=new ut(n,s),n=Math.round(n/2),s=Math.round(s/2)}render(e,t,n,s,r){e.getClearColor(this._oldClearColor),this.oldClearAlpha=e.getClearAlpha();const o=e.autoClear;e.autoClear=!1,e.setClearColor(this.clearColor,0),r&&e.state.buffers.stencil.setTest(!1),this.renderToScreen&&(this.fsQuad.material=this.basic,this.basic.map=n.texture,e.setRenderTarget(null),e.clear(),this.fsQuad.render(e)),this.highPassUniforms.tDiffuse.value=n.texture,this.highPassUniforms.luminosityThreshold.value=this.threshold,this.fsQuad.material=this.materialHighPassFilter,e.setRenderTarget(this.renderTargetBright),e.clear(),this.fsQuad.render(e);let a=this.renderTargetBright;for(let c=0;c<this.nMips;c++)this.fsQuad.material=this.separableBlurMaterials[c],this.separableBlurMaterials[c].uniforms.colorTexture.value=a.texture,this.separableBlurMaterials[c].uniforms.direction.value=Zu.BlurDirectionX,e.setRenderTarget(this.renderTargetsHorizontal[c]),e.clear(),this.fsQuad.render(e),this.separableBlurMaterials[c].uniforms.colorTexture.value=this.renderTargetsHorizontal[c].texture,this.separableBlurMaterials[c].uniforms.direction.value=Zu.BlurDirectionY,e.setRenderTarget(this.renderTargetsVertical[c]),e.clear(),this.fsQuad.render(e),a=this.renderTargetsVertical[c];this.fsQuad.material=this.compositeMaterial,this.compositeMaterial.uniforms.bloomStrength.value=this.strength,this.compositeMaterial.uniforms.bloomRadius.value=this.radius,this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,e.setRenderTarget(this.renderTargetsHorizontal[0]),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetsHorizontal[0].texture,r&&e.state.buffers.stencil.setTest(!0),this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(n),this.fsQuad.render(e)),e.setClearColor(this._oldClearColor,this.oldClearAlpha),e.autoClear=o}getSeperableBlurMaterial(e){return new _s({defines:{KERNEL_RADIUS:e,SIGMA:e},uniforms:{colorTexture:{value:null},texSize:{value:new ut(.5,.5)},direction:{value:new ut(.5,.5)}},vertexShader:`varying vec2 vUv;
				void main() {
					vUv = uv;
					gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
				}`,fragmentShader:`#include <common>
				varying vec2 vUv;
				uniform sampler2D colorTexture;
				uniform vec2 texSize;
				uniform vec2 direction;

				float gaussianPdf(in float x, in float sigma) {
					return 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;
				}
				void main() {
					vec2 invSize = 1.0 / texSize;
					float fSigma = float(SIGMA);
					float weightSum = gaussianPdf(0.0, fSigma);
					vec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;
					for( int i = 1; i < KERNEL_RADIUS; i ++ ) {
						float x = float(i);
						float w = gaussianPdf(x, fSigma);
						vec2 uvOffset = direction * invSize * x;
						vec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;
						vec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;
						diffuseSum += (sample1 + sample2) * w;
						weightSum += 2.0 * w;
					}
					gl_FragColor = vec4(diffuseSum/weightSum, 1.0);
				}`})}getCompositeMaterial(e){return new _s({defines:{NUM_MIPS:e},uniforms:{blurTexture1:{value:null},blurTexture2:{value:null},blurTexture3:{value:null},blurTexture4:{value:null},blurTexture5:{value:null},bloomStrength:{value:1},bloomFactors:{value:null},bloomTintColors:{value:null},bloomRadius:{value:0}},vertexShader:`varying vec2 vUv;
				void main() {
					vUv = uv;
					gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
				}`,fragmentShader:`varying vec2 vUv;
				uniform sampler2D blurTexture1;
				uniform sampler2D blurTexture2;
				uniform sampler2D blurTexture3;
				uniform sampler2D blurTexture4;
				uniform sampler2D blurTexture5;
				uniform float bloomStrength;
				uniform float bloomRadius;
				uniform float bloomFactors[NUM_MIPS];
				uniform vec3 bloomTintColors[NUM_MIPS];

				float lerpBloomFactor(const in float factor) {
					float mirrorFactor = 1.2 - factor;
					return mix(factor, mirrorFactor, bloomRadius);
				}

				void main() {
					gl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) +
						lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) +
						lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) +
						lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) +
						lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );
				}`})}}Zu.BlurDirectionX=new ut(1,0);Zu.BlurDirectionY=new ut(0,1);let ck=class extends Tf{constructor(e,t){super(),this.textureID=t!==void 0?t:"tDiffuse",e instanceof _s?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=sg.clone(e.uniforms),this.material=new _s({defines:Object.assign({},e.defines),uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this.fsQuad=new dR(this.material)}render(e,t,n){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=n.texture),this.fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this.fsQuad.render(e))}dispose(){this.material.dispose(),this.fsQuad.dispose()}},dE=class extends Tf{constructor(e,t){super(),this.scene=e,this.camera=t,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(e,t,n){const s=e.getContext(),r=e.state;r.buffers.color.setMask(!1),r.buffers.depth.setMask(!1),r.buffers.color.setLocked(!0),r.buffers.depth.setLocked(!0);let o,a;this.inverse?(o=0,a=1):(o=1,a=0),r.buffers.stencil.setTest(!0),r.buffers.stencil.setOp(s.REPLACE,s.REPLACE,s.REPLACE),r.buffers.stencil.setFunc(s.ALWAYS,o,4294967295),r.buffers.stencil.setClear(a),r.buffers.stencil.setLocked(!0),e.setRenderTarget(n),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),r.buffers.color.setLocked(!1),r.buffers.depth.setLocked(!1),r.buffers.stencil.setLocked(!1),r.buffers.stencil.setFunc(s.EQUAL,1,4294967295),r.buffers.stencil.setOp(s.KEEP,s.KEEP,s.KEEP),r.buffers.stencil.setLocked(!0)}},lk=class extends Tf{constructor(){super(),this.needsSwap=!1}render(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}},uk=class{constructor(e,t){if(this.renderer=e,this._pixelRatio=e.getPixelRatio(),t===void 0){const n=e.getSize(new ut);this._width=n.width,this._height=n.height,t=new cr(this._width*this._pixelRatio,this._height*this._pixelRatio),t.texture.name="EffectComposer.rt1"}else this._width=t.width,this._height=t.height;this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],this.copyPass=new ck(fR),this.clock=new rk}swapBuffers(){const e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}addPass(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(e){const t=this.passes.indexOf(e);t!==-1&&this.passes.splice(t,1)}isLastEnabledPass(e){for(let t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0}render(e){e===void 0&&(e=this.clock.getDelta());const t=this.renderer.getRenderTarget();let n=!1;for(let s=0,r=this.passes.length;s<r;s++){const o=this.passes[s];if(o.enabled!==!1){if(o.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(s),o.render(this.renderer,this.writeBuffer,this.readBuffer,e,n),o.needsSwap){if(n){const a=this.renderer.getContext(),c=this.renderer.state.buffers.stencil;c.setFunc(a.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),c.setFunc(a.EQUAL,1,4294967295)}this.swapBuffers()}dE!==void 0&&(o instanceof dE?n=!0:o instanceof lk&&(n=!1))}}this.renderer.setRenderTarget(t)}reset(e){if(e===void 0){const t=this.renderer.getSize(new ut);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,e=this.renderTarget1.clone(),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(e,t){this._width=e,this._height=t;const n=this._width*this._pixelRatio,s=this._height*this._pixelRatio;this.renderTarget1.setSize(n,s),this.renderTarget2.setSize(n,s);for(let r=0;r<this.passes.length;r++)this.passes[r].setSize(n,s)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.copyPass.dispose()}},hk=class extends Tf{constructor(e,t,n,s,r){super(),this.scene=e,this.camera=t,this.overrideMaterial=n,this.clearColor=s,this.clearAlpha=r!==void 0?r:0,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new Wt}render(e,t,n){const s=e.autoClear;e.autoClear=!1;let r,o;this.overrideMaterial!==void 0&&(o=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor&&(e.getClearColor(this._oldClearColor),r=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:n),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor&&e.setClearColor(this._oldClearColor,r),this.overrideMaterial!==void 0&&(this.scene.overrideMaterial=o),e.autoClear=s}};const Im={chunk:/[^\s-]+?-\b|\S+|\s+|\r\n?|\n/g,ansiEscapeSequence:/\u001b.*?m/g};class dk{constructor(e="",t={}){this._lines=String(e).split(/\r\n|\n/g),this.options={eol:`
`,width:30,...t}}lines(){return this._lines.map(fE,this).map(e=>e.match(Im.chunk)||["~~empty~~"]).map(e=>this.options.break?e.map(fk,this):e).map(e=>e.flat()).map(e=>e.reduce((t,n)=>{const s=t[t.length-1];return Ax(n).length+Ax(s).length>this.options.width?t.push(n):t[t.length-1]+=n,t},[""])).flat().map(fE,this).filter(e=>e.trim()).map(e=>e.replace("~~empty~~",""))}wrap(){return this.lines().join(this.options.eol)}toString(){return this.wrap()}static wrap(e,t){return new this(e,t).wrap()}static lines(e,t){return new this(e,t).lines()}static isWrappable(e=""){const t=String(e).match(Im.chunk);return t?t.length>1:!1}static getChunks(e){return e.match(Im.chunk)||[]}}function fE(i){return this.options.noTrim?i:i.trim()}function Ax(i){return i.replace(Im.ansiEscapeSequence,"")}function fk(i){if(Ax(i).length>this.options.width){const e=i.split("");let t;const n=[];for(;(t=e.splice(0,this.options.width)).length;)n.push(t.join(""));return n}else return i}const pR="14.7.77",pE=(i,e,t)=>({endTime:e,insertTime:t,type:"exponentialRampToValue",value:i}),mE=(i,e,t)=>({endTime:e,insertTime:t,type:"linearRampToValue",value:i}),Cx=(i,e)=>({startTime:e,type:"setValue",value:i}),mR=(i,e,t)=>({duration:t,startTime:e,type:"setValueCurve",values:i}),gR=(i,e,{startTime:t,target:n,timeConstant:s})=>n+(e-n)*Math.exp((t-i)/s),vu=i=>i.type==="exponentialRampToValue",rg=i=>i.type==="linearRampToValue",Ta=i=>vu(i)||rg(i),WS=i=>i.type==="setValue",_o=i=>i.type==="setValueCurve",og=(i,e,t,n)=>{const s=i[e];return s===void 0?n:Ta(s)||WS(s)?s.value:_o(s)?s.values[s.values.length-1]:gR(t,og(i,e-1,s.startTime,n),s)},gE=(i,e,t,n,s)=>t===void 0?[n.insertTime,s]:Ta(t)?[t.endTime,t.value]:WS(t)?[t.startTime,t.value]:_o(t)?[t.startTime+t.duration,t.values[t.values.length-1]]:[t.startTime,og(i,e-1,t.startTime,s)],Rx=i=>i.type==="cancelAndHold",Nx=i=>i.type==="cancelScheduledValues",aa=i=>Rx(i)||Nx(i)?i.cancelTime:vu(i)||rg(i)?i.endTime:i.startTime,_E=(i,e,t,{endTime:n,value:s})=>t===s?s:0<t&&0<s||t<0&&s<0?t*(s/t)**((i-e)/(n-e)):0,vE=(i,e,t,{endTime:n,value:s})=>t+(i-e)/(n-e)*(s-t),pk=(i,e)=>{const t=Math.floor(e),n=Math.ceil(e);return t===n?i[t]:(1-(e-t))*i[t]+(1-(n-e))*i[n]},mk=(i,{duration:e,startTime:t,values:n})=>{const s=(i-t)/e*(n.length-1);return pk(n,s)},vp=i=>i.type==="setTarget";class gk{constructor(e){this._automationEvents=[],this._currenTime=0,this._defaultValue=e}[Symbol.iterator](){return this._automationEvents[Symbol.iterator]()}add(e){const t=aa(e);if(Rx(e)||Nx(e)){const n=this._automationEvents.findIndex(r=>Nx(e)&&_o(r)?r.startTime+r.duration>=t:aa(r)>=t),s=this._automationEvents[n];if(n!==-1&&(this._automationEvents=this._automationEvents.slice(0,n)),Rx(e)){const r=this._automationEvents[this._automationEvents.length-1];if(s!==void 0&&Ta(s)){if(r!==void 0&&vp(r))throw new Error("The internal list is malformed.");const o=r===void 0?s.insertTime:_o(r)?r.startTime+r.duration:aa(r),a=r===void 0?this._defaultValue:_o(r)?r.values[r.values.length-1]:r.value,c=vu(s)?_E(t,o,a,s):vE(t,o,a,s),l=vu(s)?pE(c,t,this._currenTime):mE(c,t,this._currenTime);this._automationEvents.push(l)}if(r!==void 0&&vp(r)&&this._automationEvents.push(Cx(this.getValue(t),t)),r!==void 0&&_o(r)&&r.startTime+r.duration>t){const o=t-r.startTime,a=(r.values.length-1)/r.duration,c=Math.max(2,1+Math.ceil(o*a)),l=o/(c-1)*a,u=r.values.slice(0,c);if(l<1)for(let h=1;h<c;h+=1){const d=l*h%1;u[h]=r.values[h-1]*(1-d)+r.values[h]*d}this._automationEvents[this._automationEvents.length-1]=mR(u,r.startTime,o)}}}else{const n=this._automationEvents.findIndex(o=>aa(o)>t),s=n===-1?this._automationEvents[this._automationEvents.length-1]:this._automationEvents[n-1];if(s!==void 0&&_o(s)&&aa(s)+s.duration>t)return!1;const r=vu(e)?pE(e.value,e.endTime,this._currenTime):rg(e)?mE(e.value,t,this._currenTime):e;if(n===-1)this._automationEvents.push(r);else{if(_o(e)&&t+e.duration>aa(this._automationEvents[n]))return!1;this._automationEvents.splice(n,0,r)}}return!0}flush(e){const t=this._automationEvents.findIndex(n=>aa(n)>e);if(t>1){const n=this._automationEvents.slice(t-1),s=n[0];vp(s)&&n.unshift(Cx(og(this._automationEvents,t-2,s.startTime,this._defaultValue),s.startTime)),this._automationEvents=n}}getValue(e){if(this._automationEvents.length===0)return this._defaultValue;const t=this._automationEvents.findIndex(o=>aa(o)>e),n=this._automationEvents[t],s=(t===-1?this._automationEvents.length:t)-1,r=this._automationEvents[s];if(r!==void 0&&vp(r)&&(n===void 0||!Ta(n)||n.insertTime>e))return gR(e,og(this._automationEvents,s-1,r.startTime,this._defaultValue),r);if(r!==void 0&&WS(r)&&(n===void 0||!Ta(n)))return r.value;if(r!==void 0&&_o(r)&&(n===void 0||!Ta(n)||r.startTime+r.duration>e))return e<r.startTime+r.duration?mk(e,r):r.values[r.values.length-1];if(r!==void 0&&Ta(r)&&(n===void 0||!Ta(n)))return r.value;if(n!==void 0&&vu(n)){const[o,a]=gE(this._automationEvents,s,r,n,this._defaultValue);return _E(e,o,a,n)}if(n!==void 0&&rg(n)){const[o,a]=gE(this._automationEvents,s,r,n,this._defaultValue);return vE(e,o,a,n)}return this._defaultValue}}const _k=i=>({cancelTime:i,type:"cancelAndHold"}),vk=i=>({cancelTime:i,type:"cancelScheduledValues"}),xk=(i,e)=>({endTime:e,type:"exponentialRampToValue",value:i}),yk=(i,e)=>({endTime:e,type:"linearRampToValue",value:i}),Sk=(i,e,t)=>({startTime:e,target:i,timeConstant:t,type:"setTarget"}),bk=()=>new DOMException("","AbortError"),Mk=i=>(e,t,[n,s,r],o)=>{i(e[s],[t,n,r],a=>a[0]===t&&a[1]===n,o)},Tk=i=>(e,t,n)=>{const s=[];for(let r=0;r<n.numberOfInputs;r+=1)s.push(new Set);i.set(e,{activeInputs:s,outputs:new Set,passiveInputs:new WeakMap,renderer:t})},Ek=i=>(e,t)=>{i.set(e,{activeInputs:new Set,passiveInputs:new WeakMap,renderer:t})},Ku=new WeakSet,_R=new WeakMap,$S=new WeakMap,vR=new WeakMap,qS=new WeakMap,i_=new WeakMap,xR=new WeakMap,Px=new WeakMap,Dx=new WeakMap,Lx=new WeakMap,yR={construct(){return yR}},wk=i=>{try{const e=new Proxy(i,yR);new e}catch{return!1}return!0},xE=/^import(?:(?:[\s]+[\w]+|(?:[\s]+[\w]+[\s]*,)?[\s]*\{[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?(?:[\s]*,[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?)*[\s]*}|(?:[\s]+[\w]+[\s]*,)?[\s]*\*[\s]+as[\s]+[\w]+)[\s]+from)?(?:[\s]*)("([^"\\]|\\.)+"|'([^'\\]|\\.)+')(?:[\s]*);?/,yE=(i,e)=>{const t=[];let n=i.replace(/^[\s]+/,""),s=n.match(xE);for(;s!==null;){const r=s[1].slice(1,-1),o=s[0].replace(/([\s]+)?;?$/,"").replace(r,new URL(r,e).toString());t.push(o),n=n.slice(s[0].length).replace(/^[\s]+/,""),s=n.match(xE)}return[t.join(";"),n]},SE=i=>{if(i!==void 0&&!Array.isArray(i))throw new TypeError("The parameterDescriptors property of given value for processorCtor is not an array.")},bE=i=>{if(!wk(i))throw new TypeError("The given value for processorCtor should be a constructor.");if(i.prototype===null||typeof i.prototype!="object")throw new TypeError("The given value for processorCtor should have a prototype.")},Ak=(i,e,t,n,s,r,o,a,c,l,u,h,d)=>{let f=0;return(m,_,g={credentials:"omit"})=>{const p=u.get(m);if(p!==void 0&&p.has(_))return Promise.resolve();const y=l.get(m);if(y!==void 0){const S=y.get(_);if(S!==void 0)return S}const x=r(m),v=x.audioWorklet===void 0?s(_).then(([S,M])=>{const[E,w]=yE(S,M),b=`${E};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${w}
})})(window,'_AWGS')`;return t(b)}).then(()=>{const S=d._AWGS.pop();if(S===void 0)throw new SyntaxError;n(x.currentTime,x.sampleRate,()=>S(class{},void 0,(M,E)=>{if(M.trim()==="")throw e();const w=Dx.get(x);if(w!==void 0){if(w.has(M))throw e();bE(E),SE(E.parameterDescriptors),w.set(M,E)}else bE(E),SE(E.parameterDescriptors),Dx.set(x,new Map([[M,E]]))},x.sampleRate,void 0,void 0))}):Promise.all([s(_),Promise.resolve(i(h,h))]).then(([[S,M],E])=>{const w=f+1;f=w;const[b,T]=yE(S,M),N=`${b};((AudioWorkletProcessor,registerProcessor)=>{${T}
})(${E?"AudioWorkletProcessor":"class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}"},(n,p)=>registerProcessor(n,class extends p{${E?"":"__c = (a) => a.forEach(e=>this.__b.add(e.buffer));"}process(i,o,p){${E?"":"i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));"}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${w}',class extends AudioWorkletProcessor{process(){return !1}})`,L=new Blob([N],{type:"application/javascript; charset=utf-8"}),U=URL.createObjectURL(L);return x.audioWorklet.addModule(U,g).then(()=>{if(a(x))return x;const B=o(x);return B.audioWorklet.addModule(U,g).then(()=>B)}).then(B=>{if(c===null)throw new SyntaxError;try{new c(B,`__sac${w}`)}catch{throw new SyntaxError}}).finally(()=>URL.revokeObjectURL(U))});return y===void 0?l.set(m,new Map([[_,v]])):y.set(_,v),v.then(()=>{const S=u.get(m);S===void 0?u.set(m,new Set([_])):S.add(_)}).finally(()=>{const S=l.get(m);S!==void 0&&S.delete(_)}),v}},dr=(i,e)=>{const t=i.get(e);if(t===void 0)throw new Error("A value with the given key could not be found.");return t},s_=(i,e)=>{const t=Array.from(i).filter(e);if(t.length>1)throw Error("More than one element was found.");if(t.length===0)throw Error("No element was found.");const[n]=t;return i.delete(n),n},SR=(i,e,t,n)=>{const s=dr(i,e),r=s_(s,o=>o[0]===t&&o[1]===n);return s.size===0&&i.delete(e),r},Ef=i=>dr(xR,i),Qu=i=>{if(Ku.has(i))throw new Error("The AudioNode is already stored.");Ku.add(i),Ef(i).forEach(e=>e(!0))},bR=i=>"port"in i,wf=i=>{if(!Ku.has(i))throw new Error("The AudioNode is not stored.");Ku.delete(i),Ef(i).forEach(e=>e(!1))},Ix=(i,e)=>{!bR(i)&&e.every(t=>t.size===0)&&wf(i)},Ck=(i,e,t,n,s,r,o,a,c,l,u,h,d)=>{const f=new WeakMap;return(m,_,g,p,y)=>{const{activeInputs:x,passiveInputs:v}=r(_),{outputs:S}=r(m),M=a(m),E=w=>{const b=c(_),T=c(m);if(w){const C=SR(v,m,g,p);i(x,m,C,!1),!y&&!h(m)&&t(T,b,g,p),d(_)&&Qu(_)}else{const C=n(x,m,g,p);e(v,p,C,!1),!y&&!h(m)&&s(T,b,g,p);const D=o(_);if(D===0)u(_)&&Ix(_,x);else{const P=f.get(_);P!==void 0&&clearTimeout(P),f.set(_,setTimeout(()=>{u(_)&&Ix(_,x)},D*1e3))}}};return l(S,[_,g,p],w=>w[0]===_&&w[1]===g&&w[2]===p,!0)?(M.add(E),u(m)?i(x,m,[g,p,E],!0):e(v,p,[m,g,E],!0),!0):!1}},Rk=i=>(e,t,[n,s,r],o)=>{const a=e.get(n);a===void 0?e.set(n,new Set([[s,t,r]])):i(a,[s,t,r],c=>c[0]===s&&c[1]===t,o)},Nk=i=>(e,t)=>{const n=i(e,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});t.connect(n).connect(e.destination);const s=()=>{t.removeEventListener("ended",s),t.disconnect(n),n.disconnect()};t.addEventListener("ended",s)},Pk=i=>(e,t)=>{i(e).add(t)},Dk={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",fftSize:2048,maxDecibels:-30,minDecibels:-100,smoothingTimeConstant:.8},Lk=(i,e,t,n,s,r)=>class extends i{constructor(a,c){const l=s(a),u={...Dk,...c},h=n(l,u),d=r(l)?e():null;super(a,!1,h,d),this._nativeAnalyserNode=h}get fftSize(){return this._nativeAnalyserNode.fftSize}set fftSize(a){this._nativeAnalyserNode.fftSize=a}get frequencyBinCount(){return this._nativeAnalyserNode.frequencyBinCount}get maxDecibels(){return this._nativeAnalyserNode.maxDecibels}set maxDecibels(a){const c=this._nativeAnalyserNode.maxDecibels;if(this._nativeAnalyserNode.maxDecibels=a,!(a>this._nativeAnalyserNode.minDecibels))throw this._nativeAnalyserNode.maxDecibels=c,t()}get minDecibels(){return this._nativeAnalyserNode.minDecibels}set minDecibels(a){const c=this._nativeAnalyserNode.minDecibels;if(this._nativeAnalyserNode.minDecibels=a,!(this._nativeAnalyserNode.maxDecibels>a))throw this._nativeAnalyserNode.minDecibels=c,t()}get smoothingTimeConstant(){return this._nativeAnalyserNode.smoothingTimeConstant}set smoothingTimeConstant(a){this._nativeAnalyserNode.smoothingTimeConstant=a}getByteFrequencyData(a){this._nativeAnalyserNode.getByteFrequencyData(a)}getByteTimeDomainData(a){this._nativeAnalyserNode.getByteTimeDomainData(a)}getFloatFrequencyData(a){this._nativeAnalyserNode.getFloatFrequencyData(a)}getFloatTimeDomainData(a){this._nativeAnalyserNode.getFloatTimeDomainData(a)}},bi=(i,e)=>i.context===e,Ik=(i,e,t)=>()=>{const n=new WeakMap,s=async(r,o)=>{let a=e(r);if(!bi(a,o)){const l={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,fftSize:a.fftSize,maxDecibels:a.maxDecibels,minDecibels:a.minDecibels,smoothingTimeConstant:a.smoothingTimeConstant};a=i(o,l)}return n.set(o,a),await t(r,o,a),a};return{render(r,o){const a=n.get(o);return a!==void 0?Promise.resolve(a):s(r,o)}}},ag=i=>{try{i.copyToChannel(new Float32Array(1),0,-1)}catch{return!1}return!0},Vr=()=>new DOMException("","IndexSizeError"),XS=i=>{i.getChannelData=(e=>t=>{try{return e.call(i,t)}catch(n){throw n.code===12?Vr():n}})(i.getChannelData)},Fk={numberOfChannels:1},Uk=(i,e,t,n,s,r,o,a)=>{let c=null;return class MR{constructor(u){if(s===null)throw new Error("Missing the native OfflineAudioContext constructor.");const{length:h,numberOfChannels:d,sampleRate:f}={...Fk,...u};c===null&&(c=new s(1,1,44100));const m=n!==null&&e(r,r)?new n({length:h,numberOfChannels:d,sampleRate:f}):c.createBuffer(d,h,f);if(m.numberOfChannels===0)throw t();return typeof m.copyFromChannel!="function"?(o(m),XS(m)):e(ag,()=>ag(m))||a(m),i.add(m),m}static[Symbol.hasInstance](u){return u!==null&&typeof u=="object"&&Object.getPrototypeOf(u)===MR.prototype||i.has(u)}}},Hi=-34028234663852886e22,Ri=-Hi,Io=i=>Ku.has(i),Ok={buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1},Bk=(i,e,t,n,s,r,o,a)=>class extends i{constructor(l,u){const h=r(l),d={...Ok,...u},f=s(h,d),m=o(h),_=m?e():null;super(l,!1,f,_),this._audioBufferSourceNodeRenderer=_,this._isBufferNullified=!1,this._isBufferSet=d.buffer!==null,this._nativeAudioBufferSourceNode=f,this._onended=null,this._playbackRate=t(this,m,f.playbackRate,Ri,Hi)}get buffer(){return this._isBufferNullified?null:this._nativeAudioBufferSourceNode.buffer}set buffer(l){if(this._nativeAudioBufferSourceNode.buffer=l,l!==null){if(this._isBufferSet)throw n();this._isBufferSet=!0}}get loop(){return this._nativeAudioBufferSourceNode.loop}set loop(l){this._nativeAudioBufferSourceNode.loop=l}get loopEnd(){return this._nativeAudioBufferSourceNode.loopEnd}set loopEnd(l){this._nativeAudioBufferSourceNode.loopEnd=l}get loopStart(){return this._nativeAudioBufferSourceNode.loopStart}set loopStart(l){this._nativeAudioBufferSourceNode.loopStart=l}get onended(){return this._onended}set onended(l){const u=typeof l=="function"?a(this,l):null;this._nativeAudioBufferSourceNode.onended=u;const h=this._nativeAudioBufferSourceNode.onended;this._onended=h!==null&&h===u?l:h}get playbackRate(){return this._playbackRate}start(l=0,u=0,h){if(this._nativeAudioBufferSourceNode.start(l,u,h),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.start=h===void 0?[l,u]:[l,u,h]),this.context.state!=="closed"){Qu(this);const d=()=>{this._nativeAudioBufferSourceNode.removeEventListener("ended",d),Io(this)&&wf(this)};this._nativeAudioBufferSourceNode.addEventListener("ended",d)}}stop(l=0){this._nativeAudioBufferSourceNode.stop(l),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.stop=l)}},kk=(i,e,t,n,s)=>()=>{const r=new WeakMap;let o=null,a=null;const c=async(l,u)=>{let h=t(l);const d=bi(h,u);if(!d){const f={buffer:h.buffer,channelCount:h.channelCount,channelCountMode:h.channelCountMode,channelInterpretation:h.channelInterpretation,loop:h.loop,loopEnd:h.loopEnd,loopStart:h.loopStart,playbackRate:h.playbackRate.value};h=e(u,f),o!==null&&h.start(...o),a!==null&&h.stop(a)}return r.set(u,h),d?await i(u,l.playbackRate,h.playbackRate):await n(u,l.playbackRate,h.playbackRate),await s(l,u,h),h};return{set start(l){o=l},set stop(l){a=l},render(l,u){const h=r.get(u);return h!==void 0?Promise.resolve(h):c(l,u)}}},zk=i=>"playbackRate"in i,Gk=i=>"frequency"in i&&"gain"in i,Vk=i=>"offset"in i,Hk=i=>!("frequency"in i)&&"gain"in i,Wk=i=>"detune"in i&&"frequency"in i,$k=i=>"pan"in i,Ii=i=>dr(_R,i),Af=i=>dr(vR,i),Fx=(i,e)=>{const{activeInputs:t}=Ii(i);t.forEach(s=>s.forEach(([r])=>{e.includes(i)||Fx(r,[...e,i])}));const n=zk(i)?[i.playbackRate]:bR(i)?Array.from(i.parameters.values()):Gk(i)?[i.Q,i.detune,i.frequency,i.gain]:Vk(i)?[i.offset]:Hk(i)?[i.gain]:Wk(i)?[i.detune,i.frequency]:$k(i)?[i.pan]:[];for(const s of n){const r=Af(s);r!==void 0&&r.activeInputs.forEach(([o])=>Fx(o,e))}Io(i)&&wf(i)},TR=i=>{Fx(i.destination,[])},qk=i=>i===void 0||typeof i=="number"||typeof i=="string"&&(i==="balanced"||i==="interactive"||i==="playback"),Xk=(i,e,t,n,s,r,o,a,c)=>class extends i{constructor(u={}){if(c===null)throw new Error("Missing the native AudioContext constructor.");let h;try{h=new c(u)}catch(m){throw m.code===12&&m.message==="sampleRate is not in range"?t():m}if(h===null)throw n();if(!qk(u.latencyHint))throw new TypeError(`The provided value '${u.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);if(u.sampleRate!==void 0&&h.sampleRate!==u.sampleRate)throw t();super(h,2);const{latencyHint:d}=u,{sampleRate:f}=h;if(this._baseLatency=typeof h.baseLatency=="number"?h.baseLatency:d==="balanced"?512/f:d==="interactive"||d===void 0?256/f:d==="playback"?1024/f:Math.max(2,Math.min(128,Math.round(d*f/128)))*128/f,this._nativeAudioContext=h,c.name==="webkitAudioContext"?(this._nativeGainNode=h.createGain(),this._nativeOscillatorNode=h.createOscillator(),this._nativeGainNode.gain.value=1e-37,this._nativeOscillatorNode.connect(this._nativeGainNode).connect(h.destination),this._nativeOscillatorNode.start()):(this._nativeGainNode=null,this._nativeOscillatorNode=null),this._state=null,h.state==="running"){this._state="suspended";const m=()=>{this._state==="suspended"&&(this._state=null),h.removeEventListener("statechange",m)};h.addEventListener("statechange",m)}}get baseLatency(){return this._baseLatency}get state(){return this._state!==null?this._state:this._nativeAudioContext.state}close(){return this.state==="closed"?this._nativeAudioContext.close().then(()=>{throw e()}):(this._state==="suspended"&&(this._state=null),this._nativeAudioContext.close().then(()=>{this._nativeGainNode!==null&&this._nativeOscillatorNode!==null&&(this._nativeOscillatorNode.stop(),this._nativeGainNode.disconnect(),this._nativeOscillatorNode.disconnect()),TR(this)}))}createMediaElementSource(u){return new s(this,{mediaElement:u})}createMediaStreamDestination(){return new r(this)}createMediaStreamSource(u){return new o(this,{mediaStream:u})}createMediaStreamTrackSource(u){return new a(this,{mediaStreamTrack:u})}resume(){return this._state==="suspended"?new Promise((u,h)=>{const d=()=>{this._nativeAudioContext.removeEventListener("statechange",d),this._nativeAudioContext.state==="running"?u():this.resume().then(u,h)};this._nativeAudioContext.addEventListener("statechange",d)}):this._nativeAudioContext.resume().catch(u=>{throw u===void 0||u.code===15?e():u})}suspend(){return this._nativeAudioContext.suspend().catch(u=>{throw u===void 0?e():u})}},jk=(i,e,t,n,s,r,o,a)=>class extends i{constructor(l,u){const h=r(l),d=o(h),f=s(h,u,d),m=d?e(a):null;super(l,!1,f,m),this._isNodeOfNativeOfflineAudioContext=d,this._nativeAudioDestinationNode=f}get channelCount(){return this._nativeAudioDestinationNode.channelCount}set channelCount(l){if(this._isNodeOfNativeOfflineAudioContext)throw n();if(l>this._nativeAudioDestinationNode.maxChannelCount)throw t();this._nativeAudioDestinationNode.channelCount=l}get channelCountMode(){return this._nativeAudioDestinationNode.channelCountMode}set channelCountMode(l){if(this._isNodeOfNativeOfflineAudioContext)throw n();this._nativeAudioDestinationNode.channelCountMode=l}get maxChannelCount(){return this._nativeAudioDestinationNode.maxChannelCount}},Yk=i=>{const e=new WeakMap,t=async(n,s)=>{const r=s.destination;return e.set(s,r),await i(n,s,r),r};return{render(n,s){const r=e.get(s);return r!==void 0?Promise.resolve(r):t(n,s)}}},Zk=(i,e,t,n,s,r,o,a)=>(c,l)=>{const u=l.listener,h=()=>{const S=new Float32Array(1),M=e(l,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:9}),E=o(l);let w=!1,b=[0,0,-1,0,1,0],T=[0,0,0];const C=()=>{if(w)return;w=!0;const L=n(l,256,9,0);L.onaudioprocess=({inputBuffer:U})=>{const B=[r(U,S,0),r(U,S,1),r(U,S,2),r(U,S,3),r(U,S,4),r(U,S,5)];B.some(($,z)=>$!==b[z])&&(u.setOrientation(...B),b=B);const k=[r(U,S,6),r(U,S,7),r(U,S,8)];k.some(($,z)=>$!==T[z])&&(u.setPosition(...k),T=k)},M.connect(L)},D=L=>U=>{U!==b[L]&&(b[L]=U,u.setOrientation(...b))},P=L=>U=>{U!==T[L]&&(T[L]=U,u.setPosition(...T))},N=(L,U,B)=>{const k=t(l,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:U});k.connect(M,0,L),k.start(),Object.defineProperty(k.offset,"defaultValue",{get(){return U}});const $=i({context:c},E,k.offset,Ri,Hi);return a($,"value",z=>()=>z.call($),z=>Y=>{try{z.call($,Y)}catch(ne){if(ne.code!==9)throw ne}C(),E&&B(Y)}),$.cancelAndHoldAtTime=(z=>E?()=>{throw s()}:(...Y)=>{const ne=z.apply($,Y);return C(),ne})($.cancelAndHoldAtTime),$.cancelScheduledValues=(z=>E?()=>{throw s()}:(...Y)=>{const ne=z.apply($,Y);return C(),ne})($.cancelScheduledValues),$.exponentialRampToValueAtTime=(z=>E?()=>{throw s()}:(...Y)=>{const ne=z.apply($,Y);return C(),ne})($.exponentialRampToValueAtTime),$.linearRampToValueAtTime=(z=>E?()=>{throw s()}:(...Y)=>{const ne=z.apply($,Y);return C(),ne})($.linearRampToValueAtTime),$.setTargetAtTime=(z=>E?()=>{throw s()}:(...Y)=>{const ne=z.apply($,Y);return C(),ne})($.setTargetAtTime),$.setValueAtTime=(z=>E?()=>{throw s()}:(...Y)=>{const ne=z.apply($,Y);return C(),ne})($.setValueAtTime),$.setValueCurveAtTime=(z=>E?()=>{throw s()}:(...Y)=>{const ne=z.apply($,Y);return C(),ne})($.setValueCurveAtTime),$};return{forwardX:N(0,0,D(0)),forwardY:N(1,0,D(1)),forwardZ:N(2,-1,D(2)),positionX:N(6,0,P(0)),positionY:N(7,0,P(1)),positionZ:N(8,0,P(2)),upX:N(3,0,D(3)),upY:N(4,1,D(4)),upZ:N(5,0,D(5))}},{forwardX:d,forwardY:f,forwardZ:m,positionX:_,positionY:g,positionZ:p,upX:y,upY:x,upZ:v}=u.forwardX===void 0?h():u;return{get forwardX(){return d},get forwardY(){return f},get forwardZ(){return m},get positionX(){return _},get positionY(){return g},get positionZ(){return p},get upX(){return y},get upY(){return x},get upZ(){return v}}},cg=i=>"context"in i,Cf=i=>cg(i[0]),ll=(i,e,t,n)=>{for(const s of i)if(t(s)){if(n)return!1;throw Error("The set contains at least one similar element.")}return i.add(e),!0},ME=(i,e,[t,n],s)=>{ll(i,[e,t,n],r=>r[0]===e&&r[1]===t,s)},TE=(i,[e,t,n],s)=>{const r=i.get(e);r===void 0?i.set(e,new Set([[t,n]])):ll(r,[t,n],o=>o[0]===t,s)},Sh=i=>"inputs"in i,lg=(i,e,t,n)=>{if(Sh(e)){const s=e.inputs[n];return i.connect(s,t,0),[s,t,0]}return i.connect(e,t,n),[e,t,n]},ER=(i,e,t)=>{for(const n of i)if(n[0]===e&&n[1]===t)return i.delete(n),n;return null},Kk=(i,e,t)=>s_(i,n=>n[0]===e&&n[1]===t),wR=(i,e)=>{if(!Ef(i).delete(e))throw new Error("Missing the expected event listener.")},AR=(i,e,t)=>{const n=dr(i,e),s=s_(n,r=>r[0]===t);return n.size===0&&i.delete(e),s},ug=(i,e,t,n)=>{Sh(e)?i.disconnect(e.inputs[n],t,0):i.disconnect(e,t,n)},hn=i=>dr($S,i),Hd=i=>dr(qS,i),qc=i=>Px.has(i),Fm=i=>!Ku.has(i),EE=(i,e)=>new Promise(t=>{if(e!==null)t(!0);else{const n=i.createScriptProcessor(256,1,1),s=i.createGain(),r=i.createBuffer(1,2,44100),o=r.getChannelData(0);o[0]=1,o[1]=1;const a=i.createBufferSource();a.buffer=r,a.loop=!0,a.connect(n).connect(i.destination),a.connect(s),a.disconnect(s),n.onaudioprocess=c=>{const l=c.inputBuffer.getChannelData(0);Array.prototype.some.call(l,u=>u===1)?t(!0):t(!1),a.stop(),n.onaudioprocess=null,a.disconnect(n),n.disconnect(i.destination)},a.start()}}),b0=(i,e)=>{const t=new Map;for(const n of i)for(const s of n){const r=t.get(s);t.set(s,r===void 0?1:r+1)}t.forEach((n,s)=>e(s,n))},hg=i=>"context"in i,Qk=i=>{const e=new Map;i.connect=(t=>(n,s=0,r=0)=>{const o=hg(n)?t(n,s,r):t(n,s),a=e.get(n);return a===void 0?e.set(n,[{input:r,output:s}]):a.every(c=>c.input!==r||c.output!==s)&&a.push({input:r,output:s}),o})(i.connect.bind(i)),i.disconnect=(t=>(n,s,r)=>{if(t.apply(i),n===void 0)e.clear();else if(typeof n=="number")for(const[o,a]of e){const c=a.filter(l=>l.output!==n);c.length===0?e.delete(o):e.set(o,c)}else if(e.has(n))if(s===void 0)e.delete(n);else{const o=e.get(n);if(o!==void 0){const a=o.filter(c=>c.output!==s&&(c.input!==r||r===void 0));a.length===0?e.delete(n):e.set(n,a)}}for(const[o,a]of e)a.forEach(c=>{hg(o)?i.connect(o,c.output,c.input):i.connect(o,c.output)})})(i.disconnect)},Jk=(i,e,t,n)=>{const{activeInputs:s,passiveInputs:r}=Af(e),{outputs:o}=Ii(i),a=Ef(i),c=l=>{const u=hn(i),h=Hd(e);if(l){const d=AR(r,i,t);ME(s,i,d,!1),!n&&!qc(i)&&u.connect(h,t)}else{const d=Kk(s,i,t);TE(r,d,!1),!n&&!qc(i)&&u.disconnect(h,t)}};return ll(o,[e,t],l=>l[0]===e&&l[1]===t,!0)?(a.add(c),Io(i)?ME(s,i,[t,c],!0):TE(r,[i,t,c],!0),!0):!1},ez=(i,e,t,n)=>{const{activeInputs:s,passiveInputs:r}=Ii(e),o=ER(s[n],i,t);return o===null?[SR(r,i,t,n)[2],!1]:[o[2],!0]},tz=(i,e,t)=>{const{activeInputs:n,passiveInputs:s}=Af(e),r=ER(n,i,t);return r===null?[AR(s,i,t)[1],!1]:[r[2],!0]},jS=(i,e,t,n,s)=>{const[r,o]=ez(i,t,n,s);if(r!==null&&(wR(i,r),o&&!e&&!qc(i)&&ug(hn(i),hn(t),n,s)),Io(t)){const{activeInputs:a}=Ii(t);Ix(t,a)}},YS=(i,e,t,n)=>{const[s,r]=tz(i,t,n);s!==null&&(wR(i,s),r&&!e&&!qc(i)&&hn(i).disconnect(Hd(t),n))},nz=(i,e)=>{const t=Ii(i),n=[];for(const s of t.outputs)Cf(s)?jS(i,e,...s):YS(i,e,...s),n.push(s[0]);return t.outputs.clear(),n},iz=(i,e,t)=>{const n=Ii(i),s=[];for(const r of n.outputs)r[1]===t&&(Cf(r)?jS(i,e,...r):YS(i,e,...r),s.push(r[0]),n.outputs.delete(r));return s},sz=(i,e,t,n,s)=>{const r=Ii(i);return Array.from(r.outputs).filter(o=>o[0]===t&&(n===void 0||o[1]===n)&&(s===void 0||o[2]===s)).map(o=>(Cf(o)?jS(i,e,...o):YS(i,e,...o),r.outputs.delete(o),o[0]))},rz=(i,e,t,n,s,r,o,a,c,l,u,h,d,f,m,_)=>class extends l{constructor(p,y,x,v){super(x),this._context=p,this._nativeAudioNode=x;const S=u(p);h(S)&&t(EE,()=>EE(S,_))!==!0&&Qk(x),$S.set(this,x),xR.set(this,new Set),p.state!=="closed"&&y&&Qu(this),i(this,v,x)}get channelCount(){return this._nativeAudioNode.channelCount}set channelCount(p){this._nativeAudioNode.channelCount=p}get channelCountMode(){return this._nativeAudioNode.channelCountMode}set channelCountMode(p){this._nativeAudioNode.channelCountMode=p}get channelInterpretation(){return this._nativeAudioNode.channelInterpretation}set channelInterpretation(p){this._nativeAudioNode.channelInterpretation=p}get context(){return this._context}get numberOfInputs(){return this._nativeAudioNode.numberOfInputs}get numberOfOutputs(){return this._nativeAudioNode.numberOfOutputs}connect(p,y=0,x=0){if(y<0||y>=this._nativeAudioNode.numberOfOutputs)throw s();const v=u(this._context),S=m(v);if(d(p)||f(p))throw r();if(cg(p)){const w=hn(p);try{const T=lg(this._nativeAudioNode,w,y,x),C=Fm(this);(S||C)&&this._nativeAudioNode.disconnect(...T),this.context.state!=="closed"&&!C&&Fm(p)&&Qu(p)}catch(T){throw T.code===12?r():T}if(e(this,p,y,x,S)){const T=c([this],p);b0(T,n(S))}return p}const M=Hd(p);if(M.name==="playbackRate"&&M.maxValue===1024)throw o();try{this._nativeAudioNode.connect(M,y),(S||Fm(this))&&this._nativeAudioNode.disconnect(M,y)}catch(w){throw w.code===12?r():w}if(Jk(this,p,y,S)){const w=c([this],p);b0(w,n(S))}}disconnect(p,y,x){let v;const S=u(this._context),M=m(S);if(p===void 0)v=nz(this,M);else if(typeof p=="number"){if(p<0||p>=this.numberOfOutputs)throw s();v=iz(this,M,p)}else{if(y!==void 0&&(y<0||y>=this.numberOfOutputs)||cg(p)&&x!==void 0&&(x<0||x>=p.numberOfInputs))throw s();if(v=sz(this,M,p,y,x),v.length===0)throw r()}for(const E of v){const w=c([this],E);b0(w,a)}}},oz=(i,e,t,n,s,r,o,a,c,l,u,h,d)=>(f,m,_,g=null,p=null)=>{const y=_.value,x=new gk(y),v=m?n(x):null,S={get defaultValue(){return y},get maxValue(){return g===null?_.maxValue:g},get minValue(){return p===null?_.minValue:p},get value(){return _.value},set value(M){_.value=M,S.setValueAtTime(M,f.context.currentTime)},cancelAndHoldAtTime(M){if(typeof _.cancelAndHoldAtTime=="function")v===null&&x.flush(f.context.currentTime),x.add(s(M)),_.cancelAndHoldAtTime(M);else{const E=Array.from(x).pop();v===null&&x.flush(f.context.currentTime),x.add(s(M));const w=Array.from(x).pop();_.cancelScheduledValues(M),E!==w&&w!==void 0&&(w.type==="exponentialRampToValue"?_.exponentialRampToValueAtTime(w.value,w.endTime):w.type==="linearRampToValue"?_.linearRampToValueAtTime(w.value,w.endTime):w.type==="setValue"?_.setValueAtTime(w.value,w.startTime):w.type==="setValueCurve"&&_.setValueCurveAtTime(w.values,w.startTime,w.duration))}return S},cancelScheduledValues(M){return v===null&&x.flush(f.context.currentTime),x.add(r(M)),_.cancelScheduledValues(M),S},exponentialRampToValueAtTime(M,E){if(M===0)throw new RangeError;if(!Number.isFinite(E)||E<0)throw new RangeError;const w=f.context.currentTime;return v===null&&x.flush(w),Array.from(x).length===0&&(x.add(l(y,w)),_.setValueAtTime(y,w)),x.add(o(M,E)),_.exponentialRampToValueAtTime(M,E),S},linearRampToValueAtTime(M,E){const w=f.context.currentTime;return v===null&&x.flush(w),Array.from(x).length===0&&(x.add(l(y,w)),_.setValueAtTime(y,w)),x.add(a(M,E)),_.linearRampToValueAtTime(M,E),S},setTargetAtTime(M,E,w){return v===null&&x.flush(f.context.currentTime),x.add(c(M,E,w)),_.setTargetAtTime(M,E,w),S},setValueAtTime(M,E){return v===null&&x.flush(f.context.currentTime),x.add(l(M,E)),_.setValueAtTime(M,E),S},setValueCurveAtTime(M,E,w){const b=M instanceof Float32Array?M:new Float32Array(M);if(h!==null&&h.name==="webkitAudioContext"){const T=E+w,C=f.context.sampleRate,D=Math.ceil(E*C),P=Math.floor(T*C),N=P-D,L=new Float32Array(N);for(let B=0;B<N;B+=1){const k=(b.length-1)/w*((D+B)/C-E),$=Math.floor(k),z=Math.ceil(k);L[B]=$===z?b[$]:(1-(k-$))*b[$]+(1-(z-k))*b[z]}v===null&&x.flush(f.context.currentTime),x.add(u(L,E,w)),_.setValueCurveAtTime(L,E,w);const U=P/C;U<T&&d(S,L[L.length-1],U),d(S,b[b.length-1],T)}else v===null&&x.flush(f.context.currentTime),x.add(u(b,E,w)),_.setValueCurveAtTime(b,E,w);return S}};return t.set(S,_),e.set(S,f),i(S,v),S},az=i=>({replay(e){for(const t of i)if(t.type==="exponentialRampToValue"){const{endTime:n,value:s}=t;e.exponentialRampToValueAtTime(s,n)}else if(t.type==="linearRampToValue"){const{endTime:n,value:s}=t;e.linearRampToValueAtTime(s,n)}else if(t.type==="setTarget"){const{startTime:n,target:s,timeConstant:r}=t;e.setTargetAtTime(s,n,r)}else if(t.type==="setValue"){const{startTime:n,value:s}=t;e.setValueAtTime(s,n)}else if(t.type==="setValueCurve"){const{duration:n,startTime:s,values:r}=t;e.setValueCurveAtTime(r,s,n)}else throw new Error("Can't apply an unknown automation.")}});class CR{constructor(e){this._map=new Map(e)}get size(){return this._map.size}entries(){return this._map.entries()}forEach(e,t=null){return this._map.forEach((n,s)=>e.call(t,n,s,this))}get(e){return this._map.get(e)}has(e){return this._map.has(e)}keys(){return this._map.keys()}values(){return this._map.values()}}const cz={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:1,numberOfOutputs:1,parameterData:{},processorOptions:{}},lz=(i,e,t,n,s,r,o,a,c,l,u,h,d,f)=>class extends e{constructor(_,g,p){var y;const x=a(_),v=c(x),S=u({...cz,...p});d(S);const M=Dx.get(x),E=M==null?void 0:M.get(g),w=v||x.state!=="closed"?x:(y=o(x))!==null&&y!==void 0?y:x,b=s(w,v?null:_.baseLatency,l,g,E,S),T=v?n(g,S,E):null;super(_,!0,b,T);const C=[];b.parameters.forEach((P,N)=>{const L=t(this,v,P);C.push([N,L])}),this._nativeAudioWorkletNode=b,this._onprocessorerror=null,this._parameters=new CR(C),v&&i(x,this);const{activeInputs:D}=r(this);h(b,D)}get onprocessorerror(){return this._onprocessorerror}set onprocessorerror(_){const g=typeof _=="function"?f(this,_):null;this._nativeAudioWorkletNode.onprocessorerror=g;const p=this._nativeAudioWorkletNode.onprocessorerror;this._onprocessorerror=p!==null&&p===g?_:p}get parameters(){return this._parameters===null?this._nativeAudioWorkletNode.parameters:this._parameters}get port(){return this._nativeAudioWorkletNode.port}};function dg(i,e,t,n,s){if(typeof i.copyFromChannel=="function")e[t].byteLength===0&&(e[t]=new Float32Array(128)),i.copyFromChannel(e[t],n,s);else{const r=i.getChannelData(n);if(e[t].byteLength===0)e[t]=r.slice(s,s+128);else{const o=new Float32Array(r.buffer,s*Float32Array.BYTES_PER_ELEMENT,128);e[t].set(o)}}}const RR=(i,e,t,n,s)=>{typeof i.copyToChannel=="function"?e[t].byteLength!==0&&i.copyToChannel(e[t],n,s):e[t].byteLength!==0&&i.getChannelData(n).set(e[t],s)},fg=(i,e)=>{const t=[];for(let n=0;n<i;n+=1){const s=[],r=typeof e=="number"?e:e[n];for(let o=0;o<r;o+=1)s.push(new Float32Array(128));t.push(s)}return t},uz=(i,e)=>{const t=dr(Lx,i),n=hn(e);return dr(t,n)},hz=async(i,e,t,n,s,r,o)=>{const a=e===null?Math.ceil(i.context.length/128)*128:e.length,c=n.channelCount*n.numberOfInputs,l=s.reduce((g,p)=>g+p,0),u=l===0?null:t.createBuffer(l,a,t.sampleRate);if(r===void 0)throw new Error("Missing the processor constructor.");const h=Ii(i),d=await uz(t,i),f=fg(n.numberOfInputs,n.channelCount),m=fg(n.numberOfOutputs,s),_=Array.from(i.parameters.keys()).reduce((g,p)=>({...g,[p]:new Float32Array(128)}),{});for(let g=0;g<a;g+=128){if(n.numberOfInputs>0&&e!==null)for(let p=0;p<n.numberOfInputs;p+=1)for(let y=0;y<n.channelCount;y+=1)dg(e,f[p],y,y,g);r.parameterDescriptors!==void 0&&e!==null&&r.parameterDescriptors.forEach(({name:p},y)=>{dg(e,_,p,c+y,g)});for(let p=0;p<n.numberOfInputs;p+=1)for(let y=0;y<s[p];y+=1)m[p][y].byteLength===0&&(m[p][y]=new Float32Array(128));try{const p=f.map((x,v)=>h.activeInputs[v].size===0?[]:x),y=o(g/t.sampleRate,t.sampleRate,()=>d.process(p,m,_));if(u!==null)for(let x=0,v=0;x<n.numberOfOutputs;x+=1){for(let S=0;S<s[x];S+=1)RR(u,m[x],S,v+S,g);v+=s[x]}if(!y)break}catch(p){i.dispatchEvent(new ErrorEvent("processorerror",{colno:p.colno,filename:p.filename,lineno:p.lineno,message:p.message}));break}}return u},dz=(i,e,t,n,s,r,o,a,c,l,u,h,d,f,m,_)=>(g,p,y)=>{const x=new WeakMap;let v=null;const S=async(M,E)=>{let w=u(M),b=null;const T=bi(w,E),C=Array.isArray(p.outputChannelCount)?p.outputChannelCount:Array.from(p.outputChannelCount);if(h===null){const D=C.reduce((U,B)=>U+B,0),P=s(E,{channelCount:Math.max(1,D),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,D)}),N=[];for(let U=0;U<M.numberOfOutputs;U+=1)N.push(n(E,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:C[U]}));const L=o(E,{channelCount:p.channelCount,channelCountMode:p.channelCountMode,channelInterpretation:p.channelInterpretation,gain:1});L.connect=e.bind(null,N),L.disconnect=c.bind(null,N),b=[P,N,L]}else T||(w=new h(E,g));if(x.set(E,b===null?w:b[2]),b!==null){if(v===null){if(y===void 0)throw new Error("Missing the processor constructor.");if(d===null)throw new Error("Missing the native OfflineAudioContext constructor.");const B=M.channelCount*M.numberOfInputs,k=y.parameterDescriptors===void 0?0:y.parameterDescriptors.length,$=B+k;v=hz(M,$===0?null:await(async()=>{const Y=new d($,Math.ceil(M.context.length/128)*128,E.sampleRate),ne=[],te=[];for(let Q=0;Q<p.numberOfInputs;Q+=1)ne.push(o(Y,{channelCount:p.channelCount,channelCountMode:p.channelCountMode,channelInterpretation:p.channelInterpretation,gain:1})),te.push(s(Y,{channelCount:p.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:p.channelCount}));const V=await Promise.all(Array.from(M.parameters.values()).map(async Q=>{const O=r(Y,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:Q.value});return await f(Y,Q,O.offset),O})),H=n(Y,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,B+k)});for(let Q=0;Q<p.numberOfInputs;Q+=1){ne[Q].connect(te[Q]);for(let O=0;O<p.channelCount;O+=1)te[Q].connect(H,O,Q*p.channelCount+O)}for(const[Q,O]of V.entries())O.connect(H,0,B+Q),O.start(0);return H.connect(Y.destination),await Promise.all(ne.map(Q=>m(M,Y,Q))),_(Y)})(),E,p,C,y,l)}const D=await v,P=t(E,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),[N,L,U]=b;D!==null&&(P.buffer=D,P.start(0)),P.connect(N);for(let B=0,k=0;B<M.numberOfOutputs;B+=1){const $=L[B];for(let z=0;z<C[B];z+=1)N.connect($,k+z,z);k+=C[B]}return U}if(T)for(const[D,P]of M.parameters.entries())await i(E,P,w.parameters.get(D));else for(const[D,P]of M.parameters.entries())await f(E,P,w.parameters.get(D));return await m(M,E,w),w};return{render(M,E){a(E,M);const w=x.get(E);return w!==void 0?Promise.resolve(w):S(M,E)}}},fz=(i,e,t,n,s,r,o,a,c,l,u,h,d,f,m,_,g,p,y,x)=>class extends m{constructor(S,M){super(S,M),this._nativeContext=S,this._audioWorklet=i===void 0?void 0:{addModule:(E,w)=>i(this,E,w)}}get audioWorklet(){return this._audioWorklet}createAnalyser(){return new e(this)}createBiquadFilter(){return new s(this)}createBuffer(S,M,E){return new t({length:M,numberOfChannels:S,sampleRate:E})}createBufferSource(){return new n(this)}createChannelMerger(S=6){return new r(this,{numberOfInputs:S})}createChannelSplitter(S=6){return new o(this,{numberOfOutputs:S})}createConstantSource(){return new a(this)}createConvolver(){return new c(this)}createDelay(S=1){return new u(this,{maxDelayTime:S})}createDynamicsCompressor(){return new h(this)}createGain(){return new d(this)}createIIRFilter(S,M){return new f(this,{feedback:M,feedforward:S})}createOscillator(){return new _(this)}createPanner(){return new g(this)}createPeriodicWave(S,M,E={disableNormalization:!1}){return new p(this,{...E,imag:M,real:S})}createStereoPanner(){return new y(this)}createWaveShaper(){return new x(this)}decodeAudioData(S,M,E){return l(this._nativeContext,S).then(w=>(typeof M=="function"&&M(w),w),w=>{throw typeof E=="function"&&E(w),w})}},pz={Q:1,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:350,gain:0,type:"lowpass"},mz=(i,e,t,n,s,r,o,a)=>class extends i{constructor(l,u){const h=r(l),d={...pz,...u},f=s(h,d),m=o(h),_=m?t():null;super(l,!1,f,_),this._Q=e(this,m,f.Q,Ri,Hi),this._detune=e(this,m,f.detune,1200*Math.log2(Ri),-1200*Math.log2(Ri)),this._frequency=e(this,m,f.frequency,l.sampleRate/2,0),this._gain=e(this,m,f.gain,40*Math.log10(Ri),Hi),this._nativeBiquadFilterNode=f,a(this,1)}get detune(){return this._detune}get frequency(){return this._frequency}get gain(){return this._gain}get Q(){return this._Q}get type(){return this._nativeBiquadFilterNode.type}set type(l){this._nativeBiquadFilterNode.type=l}getFrequencyResponse(l,u,h){try{this._nativeBiquadFilterNode.getFrequencyResponse(l,u,h)}catch(d){throw d.code===11?n():d}if(l.length!==u.length||u.length!==h.length)throw n()}},gz=(i,e,t,n,s)=>()=>{const r=new WeakMap,o=async(a,c)=>{let l=t(a);const u=bi(l,c);if(!u){const h={Q:l.Q.value,channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,detune:l.detune.value,frequency:l.frequency.value,gain:l.gain.value,type:l.type};l=e(c,h)}return r.set(c,l),u?(await i(c,a.Q,l.Q),await i(c,a.detune,l.detune),await i(c,a.frequency,l.frequency),await i(c,a.gain,l.gain)):(await n(c,a.Q,l.Q),await n(c,a.detune,l.detune),await n(c,a.frequency,l.frequency),await n(c,a.gain,l.gain)),await s(a,c,l),l};return{render(a,c){const l=r.get(c);return l!==void 0?Promise.resolve(l):o(a,c)}}},_z=(i,e)=>(t,n)=>{const s=e.get(t);if(s!==void 0)return s;const r=i.get(t);if(r!==void 0)return r;try{const o=n();return o instanceof Promise?(i.set(t,o),o.catch(()=>!1).then(a=>(i.delete(t),e.set(t,a),a))):(e.set(t,o),o)}catch{return e.set(t,!1),!1}},vz={channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6},xz=(i,e,t,n,s)=>class extends i{constructor(o,a){const c=n(o),l={...vz,...a},u=t(c,l),h=s(c)?e():null;super(o,!1,u,h)}},yz=(i,e,t)=>()=>{const n=new WeakMap,s=async(r,o)=>{let a=e(r);if(!bi(a,o)){const l={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,numberOfInputs:a.numberOfInputs};a=i(o,l)}return n.set(o,a),await t(r,o,a),a};return{render(r,o){const a=n.get(o);return a!==void 0?Promise.resolve(a):s(r,o)}}},Sz={channelCount:6,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:6},bz=(i,e,t,n,s,r)=>class extends i{constructor(a,c){const l=n(a),u=r({...Sz,...c}),h=t(l,u),d=s(l)?e():null;super(a,!1,h,d)}},Mz=(i,e,t)=>()=>{const n=new WeakMap,s=async(r,o)=>{let a=e(r);if(!bi(a,o)){const l={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,numberOfOutputs:a.numberOfOutputs};a=i(o,l)}return n.set(o,a),await t(r,o,a),a};return{render(r,o){const a=n.get(o);return a!==void 0?Promise.resolve(a):s(r,o)}}},Tz=i=>(e,t,n)=>i(t,e,n),Ez=i=>(e,t,n=0,s=0)=>{const r=e[n];if(r===void 0)throw i();return hg(t)?r.connect(t,0,s):r.connect(t,0)},wz=i=>(e,t)=>{const n=i(e,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),s=e.createBuffer(1,2,44100);return n.buffer=s,n.loop=!0,n.connect(t),n.start(),()=>{n.stop(),n.disconnect(t)}},Az={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",offset:1},Cz=(i,e,t,n,s,r,o)=>class extends i{constructor(c,l){const u=s(c),h={...Az,...l},d=n(u,h),f=r(u),m=f?t():null;super(c,!1,d,m),this._constantSourceNodeRenderer=m,this._nativeConstantSourceNode=d,this._offset=e(this,f,d.offset,Ri,Hi),this._onended=null}get offset(){return this._offset}get onended(){return this._onended}set onended(c){const l=typeof c=="function"?o(this,c):null;this._nativeConstantSourceNode.onended=l;const u=this._nativeConstantSourceNode.onended;this._onended=u!==null&&u===l?c:u}start(c=0){if(this._nativeConstantSourceNode.start(c),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.start=c),this.context.state!=="closed"){Qu(this);const l=()=>{this._nativeConstantSourceNode.removeEventListener("ended",l),Io(this)&&wf(this)};this._nativeConstantSourceNode.addEventListener("ended",l)}}stop(c=0){this._nativeConstantSourceNode.stop(c),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.stop=c)}},Rz=(i,e,t,n,s)=>()=>{const r=new WeakMap;let o=null,a=null;const c=async(l,u)=>{let h=t(l);const d=bi(h,u);if(!d){const f={channelCount:h.channelCount,channelCountMode:h.channelCountMode,channelInterpretation:h.channelInterpretation,offset:h.offset.value};h=e(u,f),o!==null&&h.start(o),a!==null&&h.stop(a)}return r.set(u,h),d?await i(u,l.offset,h.offset):await n(u,l.offset,h.offset),await s(l,u,h),h};return{set start(l){o=l},set stop(l){a=l},render(l,u){const h=r.get(u);return h!==void 0?Promise.resolve(h):c(l,u)}}},Nz=i=>e=>(i[0]=e,i[0]),Pz={buffer:null,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",disableNormalization:!1},Dz=(i,e,t,n,s,r)=>class extends i{constructor(a,c){const l=n(a),u={...Pz,...c},h=t(l,u),f=s(l)?e():null;super(a,!1,h,f),this._isBufferNullified=!1,this._nativeConvolverNode=h,u.buffer!==null&&r(this,u.buffer.duration)}get buffer(){return this._isBufferNullified?null:this._nativeConvolverNode.buffer}set buffer(a){if(this._nativeConvolverNode.buffer=a,a===null&&this._nativeConvolverNode.buffer!==null){const c=this._nativeConvolverNode.context;this._nativeConvolverNode.buffer=c.createBuffer(1,1,c.sampleRate),this._isBufferNullified=!0,r(this,0)}else this._isBufferNullified=!1,r(this,this._nativeConvolverNode.buffer===null?0:this._nativeConvolverNode.buffer.duration)}get normalize(){return this._nativeConvolverNode.normalize}set normalize(a){this._nativeConvolverNode.normalize=a}},Lz=(i,e,t)=>()=>{const n=new WeakMap,s=async(r,o)=>{let a=e(r);if(!bi(a,o)){const l={buffer:a.buffer,channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,disableNormalization:!a.normalize};a=i(o,l)}return n.set(o,a),Sh(a)?await t(r,o,a.inputs[0]):await t(r,o,a),a};return{render(r,o){const a=n.get(o);return a!==void 0?Promise.resolve(a):s(r,o)}}},Iz=(i,e)=>(t,n,s)=>{if(e===null)throw new Error("Missing the native OfflineAudioContext constructor.");try{return new e(t,n,s)}catch(r){throw r.name==="SyntaxError"?i():r}},Fz=()=>new DOMException("","DataCloneError"),wE=i=>{const{port1:e,port2:t}=new MessageChannel;return new Promise(n=>{const s=()=>{t.onmessage=null,e.close(),t.close(),n()};t.onmessage=()=>s();try{e.postMessage(i,[i])}catch{}finally{s()}})},Uz=(i,e,t,n,s,r,o,a,c,l,u)=>(h,d)=>{const f=o(h)?h:r(h);if(s.has(d)){const m=t();return Promise.reject(m)}try{s.add(d)}catch{}return e(c,()=>c(f))?f.decodeAudioData(d).then(m=>(wE(d).catch(()=>{}),e(a,()=>a(m))||u(m),i.add(m),m)):new Promise((m,_)=>{const g=async()=>{try{await wE(d)}catch{}},p=y=>{_(y),g()};try{f.decodeAudioData(d,y=>{typeof y.copyFromChannel!="function"&&(l(y),XS(y)),i.add(y),g().then(()=>m(y))},y=>{p(y===null?n():y)})}catch(y){p(y)}})},Oz=(i,e,t,n,s,r,o,a)=>(c,l)=>{const u=e.get(c);if(u===void 0)throw new Error("Missing the expected cycle count.");const h=r(c.context),d=a(h);if(u===l){if(e.delete(c),!d&&o(c)){const f=n(c),{outputs:m}=t(c);for(const _ of m)if(Cf(_)){const g=n(_[0]);i(f,g,_[1],_[2])}else{const g=s(_[0]);f.connect(g,_[1])}}}else e.set(c,u-l)},Bz={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",delayTime:0,maxDelayTime:1},kz=(i,e,t,n,s,r,o)=>class extends i{constructor(c,l){const u=s(c),h={...Bz,...l},d=n(u,h),f=r(u),m=f?t(h.maxDelayTime):null;super(c,!1,d,m),this._delayTime=e(this,f,d.delayTime),o(this,h.maxDelayTime)}get delayTime(){return this._delayTime}},zz=(i,e,t,n,s)=>r=>{const o=new WeakMap,a=async(c,l)=>{let u=t(c);const h=bi(u,l);if(!h){const d={channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,delayTime:u.delayTime.value,maxDelayTime:r};u=e(l,d)}return o.set(l,u),h?await i(l,c.delayTime,u.delayTime):await n(l,c.delayTime,u.delayTime),await s(c,l,u),u};return{render(c,l){const u=o.get(l);return u!==void 0?Promise.resolve(u):a(c,l)}}},Gz=i=>(e,t,n,s)=>i(e[s],r=>r[0]===t&&r[1]===n),Vz=i=>(e,t)=>{i(e).delete(t)},Hz=i=>"delayTime"in i,Wz=(i,e,t)=>function n(s,r){const o=cg(r)?r:t(i,r);if(Hz(o))return[];if(s[0]===o)return[s];if(s.includes(o))return[];const{outputs:a}=e(o);return Array.from(a).map(c=>n([...s,o],c[0])).reduce((c,l)=>c.concat(l),[])},xp=(i,e,t)=>{const n=e[t];if(n===void 0)throw i();return n},$z=i=>(e,t=void 0,n=void 0,s=0)=>t===void 0?e.forEach(r=>r.disconnect()):typeof t=="number"?xp(i,e,t).disconnect():hg(t)?n===void 0?e.forEach(r=>r.disconnect(t)):s===void 0?xp(i,e,n).disconnect(t,0):xp(i,e,n).disconnect(t,0,s):n===void 0?e.forEach(r=>r.disconnect(t)):xp(i,e,n).disconnect(t,0),qz={attack:.003,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",knee:30,ratio:12,release:.25,threshold:-24},Xz=(i,e,t,n,s,r,o,a)=>class extends i{constructor(l,u){const h=r(l),d={...qz,...u},f=n(h,d),m=o(h),_=m?t():null;super(l,!1,f,_),this._attack=e(this,m,f.attack),this._knee=e(this,m,f.knee),this._nativeDynamicsCompressorNode=f,this._ratio=e(this,m,f.ratio),this._release=e(this,m,f.release),this._threshold=e(this,m,f.threshold),a(this,.006)}get attack(){return this._attack}get channelCount(){return this._nativeDynamicsCompressorNode.channelCount}set channelCount(l){const u=this._nativeDynamicsCompressorNode.channelCount;if(this._nativeDynamicsCompressorNode.channelCount=l,l>2)throw this._nativeDynamicsCompressorNode.channelCount=u,s()}get channelCountMode(){return this._nativeDynamicsCompressorNode.channelCountMode}set channelCountMode(l){const u=this._nativeDynamicsCompressorNode.channelCountMode;if(this._nativeDynamicsCompressorNode.channelCountMode=l,l==="max")throw this._nativeDynamicsCompressorNode.channelCountMode=u,s()}get knee(){return this._knee}get ratio(){return this._ratio}get reduction(){return typeof this._nativeDynamicsCompressorNode.reduction.value=="number"?this._nativeDynamicsCompressorNode.reduction.value:this._nativeDynamicsCompressorNode.reduction}get release(){return this._release}get threshold(){return this._threshold}},jz=(i,e,t,n,s)=>()=>{const r=new WeakMap,o=async(a,c)=>{let l=t(a);const u=bi(l,c);if(!u){const h={attack:l.attack.value,channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,knee:l.knee.value,ratio:l.ratio.value,release:l.release.value,threshold:l.threshold.value};l=e(c,h)}return r.set(c,l),u?(await i(c,a.attack,l.attack),await i(c,a.knee,l.knee),await i(c,a.ratio,l.ratio),await i(c,a.release,l.release),await i(c,a.threshold,l.threshold)):(await n(c,a.attack,l.attack),await n(c,a.knee,l.knee),await n(c,a.ratio,l.ratio),await n(c,a.release,l.release),await n(c,a.threshold,l.threshold)),await s(a,c,l),l};return{render(a,c){const l=r.get(c);return l!==void 0?Promise.resolve(l):o(a,c)}}},Yz=()=>new DOMException("","EncodingError"),Zz=i=>e=>new Promise((t,n)=>{if(i===null){n(new SyntaxError);return}const s=i.document.head;if(s===null)n(new SyntaxError);else{const r=i.document.createElement("script"),o=new Blob([e],{type:"application/javascript"}),a=URL.createObjectURL(o),c=i.onerror,l=()=>{i.onerror=c,URL.revokeObjectURL(a)};i.onerror=(u,h,d,f,m)=>{if(h===a||h===i.location.href&&d===1&&f===1)return l(),n(m),!1;if(c!==null)return c(u,h,d,f,m)},r.onerror=()=>{l(),n(new SyntaxError)},r.onload=()=>{l(),t()},r.src=a,r.type="module",s.appendChild(r)}}),Kz=i=>class{constructor(t){this._nativeEventTarget=t,this._listeners=new WeakMap}addEventListener(t,n,s){if(n!==null){let r=this._listeners.get(n);r===void 0&&(r=i(this,n),typeof n=="function"&&this._listeners.set(n,r)),this._nativeEventTarget.addEventListener(t,r,s)}}dispatchEvent(t){return this._nativeEventTarget.dispatchEvent(t)}removeEventListener(t,n,s){const r=n===null?void 0:this._listeners.get(n);this._nativeEventTarget.removeEventListener(t,r===void 0?null:r,s)}},Qz=i=>(e,t,n)=>{Object.defineProperties(i,{currentFrame:{configurable:!0,get(){return Math.round(e*t)}},currentTime:{configurable:!0,get(){return e}}});try{return n()}finally{i!==null&&(delete i.currentFrame,delete i.currentTime)}},Jz=i=>async e=>{try{const t=await fetch(e);if(t.ok)return[await t.text(),t.url]}catch{}throw i()},eG={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",gain:1},tG=(i,e,t,n,s,r)=>class extends i{constructor(a,c){const l=s(a),u={...eG,...c},h=n(l,u),d=r(l),f=d?t():null;super(a,!1,h,f),this._gain=e(this,d,h.gain,Ri,Hi)}get gain(){return this._gain}},nG=(i,e,t,n,s)=>()=>{const r=new WeakMap,o=async(a,c)=>{let l=t(a);const u=bi(l,c);if(!u){const h={channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,gain:l.gain.value};l=e(c,h)}return r.set(c,l),u?await i(c,a.gain,l.gain):await n(c,a.gain,l.gain),await s(a,c,l),l};return{render(a,c){const l=r.get(c);return l!==void 0?Promise.resolve(l):o(a,c)}}},iG=(i,e)=>t=>e(i,t),sG=i=>e=>{const t=i(e);if(t.renderer===null)throw new Error("Missing the renderer of the given AudioNode in the audio graph.");return t.renderer},rG=i=>e=>{var t;return(t=i.get(e))!==null&&t!==void 0?t:0},oG=i=>e=>{const t=i(e);if(t.renderer===null)throw new Error("Missing the renderer of the given AudioParam in the audio graph.");return t.renderer},aG=i=>e=>i.get(e),ti=()=>new DOMException("","InvalidStateError"),cG=i=>e=>{const t=i.get(e);if(t===void 0)throw ti();return t},lG=(i,e)=>t=>{let n=i.get(t);if(n!==void 0)return n;if(e===null)throw new Error("Missing the native OfflineAudioContext constructor.");return n=new e(1,1,44100),i.set(t,n),n},uG=i=>e=>{const t=i.get(e);if(t===void 0)throw new Error("The context has no set of AudioWorkletNodes.");return t},r_=()=>new DOMException("","InvalidAccessError"),hG=i=>{i.getFrequencyResponse=(e=>(t,n,s)=>{if(t.length!==n.length||n.length!==s.length)throw r_();return e.call(i,t,n,s)})(i.getFrequencyResponse)},dG={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers"},fG=(i,e,t,n,s,r)=>class extends i{constructor(a,c){const l=n(a),u=s(l),h={...dG,...c},d=e(l,u?null:a.baseLatency,h),f=u?t(h.feedback,h.feedforward):null;super(a,!1,d,f),hG(d),this._nativeIIRFilterNode=d,r(this,1)}getFrequencyResponse(a,c,l){return this._nativeIIRFilterNode.getFrequencyResponse(a,c,l)}},NR=(i,e,t,n,s,r,o,a,c,l,u)=>{const h=l.length;let d=a;for(let f=0;f<h;f+=1){let m=t[0]*l[f];for(let _=1;_<s;_+=1){const g=d-_&c-1;m+=t[_]*r[g],m-=i[_]*o[g]}for(let _=s;_<n;_+=1)m+=t[_]*r[d-_&c-1];for(let _=s;_<e;_+=1)m-=i[_]*o[d-_&c-1];r[d]=l[f],o[d]=m,d=d+1&c-1,u[f]=m}return d},pG=(i,e,t,n)=>{const s=t instanceof Float64Array?t:new Float64Array(t),r=n instanceof Float64Array?n:new Float64Array(n),o=s.length,a=r.length,c=Math.min(o,a);if(s[0]!==1){for(let m=0;m<o;m+=1)r[m]/=s[0];for(let m=1;m<a;m+=1)s[m]/=s[0]}const l=32,u=new Float32Array(l),h=new Float32Array(l),d=e.createBuffer(i.numberOfChannels,i.length,i.sampleRate),f=i.numberOfChannels;for(let m=0;m<f;m+=1){const _=i.getChannelData(m),g=d.getChannelData(m);u.fill(0),h.fill(0),NR(s,o,r,a,c,u,h,0,l,_,g)}return d},mG=(i,e,t,n,s)=>(r,o)=>{const a=new WeakMap;let c=null;const l=async(u,h)=>{let d=null,f=e(u);const m=bi(f,h);if(h.createIIRFilter===void 0?d=i(h,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}):m||(f=h.createIIRFilter(o,r)),a.set(h,d===null?f:d),d!==null){if(c===null){if(t===null)throw new Error("Missing the native OfflineAudioContext constructor.");const g=new t(u.context.destination.channelCount,u.context.length,h.sampleRate);c=(async()=>{await n(u,g,g.destination);const p=await s(g);return pG(p,h,r,o)})()}const _=await c;return d.buffer=_,d.start(0),d}return await n(u,h,f),f};return{render(u,h){const d=a.get(h);return d!==void 0?Promise.resolve(d):l(u,h)}}},gG=(i,e,t,n,s,r)=>o=>(a,c)=>{const l=i.get(a);if(l===void 0){if(!o&&r(a)){const u=n(a),{outputs:h}=t(a);for(const d of h)if(Cf(d)){const f=n(d[0]);e(u,f,d[1],d[2])}else{const f=s(d[0]);u.disconnect(f,d[1])}}i.set(a,c)}else i.set(a,l+c)},_G=(i,e)=>t=>{const n=i.get(t);return e(n)||e(t)},vG=(i,e)=>t=>i.has(t)||e(t),xG=(i,e)=>t=>i.has(t)||e(t),yG=(i,e)=>t=>{const n=i.get(t);return e(n)||e(t)},SG=i=>e=>i!==null&&e instanceof i,bG=i=>e=>i!==null&&typeof i.AudioNode=="function"&&e instanceof i.AudioNode,MG=i=>e=>i!==null&&typeof i.AudioParam=="function"&&e instanceof i.AudioParam,TG=(i,e)=>t=>i(t)||e(t),EG=i=>e=>i!==null&&e instanceof i,wG=i=>i!==null&&i.isSecureContext,AG=(i,e,t,n)=>class extends i{constructor(r,o){const a=t(r),c=e(a,o);if(n(a))throw TypeError();super(r,!0,c,null),this._nativeMediaElementAudioSourceNode=c}get mediaElement(){return this._nativeMediaElementAudioSourceNode.mediaElement}},CG={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers"},RG=(i,e,t,n)=>class extends i{constructor(r,o){const a=t(r);if(n(a))throw new TypeError;const c={...CG,...o},l=e(a,c);super(r,!1,l,null),this._nativeMediaStreamAudioDestinationNode=l}get stream(){return this._nativeMediaStreamAudioDestinationNode.stream}},NG=(i,e,t,n)=>class extends i{constructor(r,o){const a=t(r),c=e(a,o);if(n(a))throw new TypeError;super(r,!0,c,null),this._nativeMediaStreamAudioSourceNode=c}get mediaStream(){return this._nativeMediaStreamAudioSourceNode.mediaStream}},PG=(i,e,t)=>class extends i{constructor(s,r){const o=t(s),a=e(o,r);super(s,!0,a,null)}},DG=(i,e,t,n,s,r)=>class extends t{constructor(a,c){super(a),this._nativeContext=a,i_.set(this,a),n(a)&&s.set(a,new Set),this._destination=new i(this,c),this._listener=e(this,a),this._onstatechange=null}get currentTime(){return this._nativeContext.currentTime}get destination(){return this._destination}get listener(){return this._listener}get onstatechange(){return this._onstatechange}set onstatechange(a){const c=typeof a=="function"?r(this,a):null;this._nativeContext.onstatechange=c;const l=this._nativeContext.onstatechange;this._onstatechange=l!==null&&l===c?a:l}get sampleRate(){return this._nativeContext.sampleRate}get state(){return this._nativeContext.state}},Wd=i=>{const e=new Uint32Array([1179011410,40,1163280727,544501094,16,131073,44100,176400,1048580,1635017060,4,0]);try{const t=i.decodeAudioData(e.buffer,()=>{});return t===void 0?!1:(t.catch(()=>{}),!0)}catch{}return!1},LG=(i,e)=>(t,n,s)=>{const r=new Set;return t.connect=(o=>(a,c=0,l=0)=>{const u=r.size===0;if(e(a))return o.call(t,a,c,l),i(r,[a,c,l],h=>h[0]===a&&h[1]===c&&h[2]===l,!0),u&&n(),a;o.call(t,a,c),i(r,[a,c],h=>h[0]===a&&h[1]===c,!0),u&&n()})(t.connect),t.disconnect=(o=>(a,c,l)=>{const u=r.size>0;if(a===void 0)o.apply(t),r.clear();else if(typeof a=="number"){o.call(t,a);for(const d of r)d[1]===a&&r.delete(d)}else{e(a)?o.call(t,a,c,l):o.call(t,a,c);for(const d of r)d[0]===a&&(c===void 0||d[1]===c)&&(l===void 0||d[2]===l)&&r.delete(d)}const h=r.size===0;u&&h&&s()})(t.disconnect),t},gn=(i,e,t)=>{const n=e[t];n!==void 0&&n!==i[t]&&(i[t]=n)},Xn=(i,e)=>{gn(i,e,"channelCount"),gn(i,e,"channelCountMode"),gn(i,e,"channelInterpretation")},AE=i=>typeof i.getFloatTimeDomainData=="function",IG=i=>{i.getFloatTimeDomainData=e=>{const t=new Uint8Array(e.length);i.getByteTimeDomainData(t);const n=Math.max(t.length,i.fftSize);for(let s=0;s<n;s+=1)e[s]=(t[s]-128)*.0078125;return e}},FG=(i,e)=>(t,n)=>{const s=t.createAnalyser();if(Xn(s,n),!(n.maxDecibels>n.minDecibels))throw e();return gn(s,n,"fftSize"),gn(s,n,"maxDecibels"),gn(s,n,"minDecibels"),gn(s,n,"smoothingTimeConstant"),i(AE,()=>AE(s))||IG(s),s},UG=i=>i===null?null:i.hasOwnProperty("AudioBuffer")?i.AudioBuffer:null,bn=(i,e,t)=>{const n=e[t];n!==void 0&&n!==i[t].value&&(i[t].value=n)},OG=i=>{i.start=(e=>{let t=!1;return(n=0,s=0,r)=>{if(t)throw ti();e.call(i,n,s,r),t=!0}})(i.start)},ZS=i=>{i.start=(e=>(t=0,n=0,s)=>{if(typeof s=="number"&&s<0||n<0||t<0)throw new RangeError("The parameters can't be negative.");e.call(i,t,n,s)})(i.start)},KS=i=>{i.stop=(e=>(t=0)=>{if(t<0)throw new RangeError("The parameter can't be negative.");e.call(i,t)})(i.stop)},BG=(i,e,t,n,s,r,o,a,c,l,u)=>(h,d)=>{const f=h.createBufferSource();return Xn(f,d),bn(f,d,"playbackRate"),gn(f,d,"buffer"),gn(f,d,"loop"),gn(f,d,"loopEnd"),gn(f,d,"loopStart"),e(t,()=>t(h))||OG(f),e(n,()=>n(h))||c(f),e(s,()=>s(h))||l(f,h),e(r,()=>r(h))||ZS(f),e(o,()=>o(h))||u(f,h),e(a,()=>a(h))||KS(f),i(h,f),f},kG=i=>i===null?null:i.hasOwnProperty("AudioContext")?i.AudioContext:i.hasOwnProperty("webkitAudioContext")?i.webkitAudioContext:null,zG=(i,e)=>(t,n,s)=>{const r=t.destination;if(r.channelCount!==n)try{r.channelCount=n}catch{}s&&r.channelCountMode!=="explicit"&&(r.channelCountMode="explicit"),r.maxChannelCount===0&&Object.defineProperty(r,"maxChannelCount",{value:n});const o=i(t,{channelCount:n,channelCountMode:r.channelCountMode,channelInterpretation:r.channelInterpretation,gain:1});return e(o,"channelCount",a=>()=>a.call(o),a=>c=>{a.call(o,c);try{r.channelCount=c}catch(l){if(c>r.maxChannelCount)throw l}}),e(o,"channelCountMode",a=>()=>a.call(o),a=>c=>{a.call(o,c),r.channelCountMode=c}),e(o,"channelInterpretation",a=>()=>a.call(o),a=>c=>{a.call(o,c),r.channelInterpretation=c}),Object.defineProperty(o,"maxChannelCount",{get:()=>r.maxChannelCount}),o.connect(r),o},GG=i=>i===null?null:i.hasOwnProperty("AudioWorkletNode")?i.AudioWorkletNode:null,VG=i=>{const{port1:e}=new MessageChannel;try{e.postMessage(i)}finally{e.close()}},HG=(i,e,t,n,s)=>(r,o,a,c,l,u)=>{if(a!==null)try{const h=new a(r,c,u),d=new Map;let f=null;if(Object.defineProperties(h,{channelCount:{get:()=>u.channelCount,set:()=>{throw i()}},channelCountMode:{get:()=>"explicit",set:()=>{throw i()}},onprocessorerror:{get:()=>f,set:m=>{typeof f=="function"&&h.removeEventListener("processorerror",f),f=typeof m=="function"?m:null,typeof f=="function"&&h.addEventListener("processorerror",f)}}}),h.addEventListener=(m=>(..._)=>{if(_[0]==="processorerror"){const g=typeof _[1]=="function"?_[1]:typeof _[1]=="object"&&_[1]!==null&&typeof _[1].handleEvent=="function"?_[1].handleEvent:null;if(g!==null){const p=d.get(_[1]);p!==void 0?_[1]=p:(_[1]=y=>{y.type==="error"?(Object.defineProperties(y,{type:{value:"processorerror"}}),g(y)):g(new ErrorEvent(_[0],{...y}))},d.set(g,_[1]))}}return m.call(h,"error",_[1],_[2]),m.call(h,..._)})(h.addEventListener),h.removeEventListener=(m=>(..._)=>{if(_[0]==="processorerror"){const g=d.get(_[1]);g!==void 0&&(d.delete(_[1]),_[1]=g)}return m.call(h,"error",_[1],_[2]),m.call(h,_[0],_[1],_[2])})(h.removeEventListener),u.numberOfOutputs!==0){const m=t(r,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return h.connect(m).connect(r.destination),s(h,()=>m.disconnect(),()=>m.connect(r.destination))}return h}catch(h){throw h.code===11?n():h}if(l===void 0)throw n();return VG(u),e(r,o,l,u)},PR=(i,e)=>i===null?512:Math.max(512,Math.min(16384,Math.pow(2,Math.round(Math.log2(i*e))))),WG=i=>new Promise((e,t)=>{const{port1:n,port2:s}=new MessageChannel;n.onmessage=({data:r})=>{n.close(),s.close(),e(r)},n.onmessageerror=({data:r})=>{n.close(),s.close(),t(r)},s.postMessage(i)}),$G=async(i,e)=>{const t=await WG(e);return new i(t)},qG=(i,e,t,n)=>{let s=Lx.get(i);s===void 0&&(s=new WeakMap,Lx.set(i,s));const r=$G(t,n);return s.set(e,r),r},XG=(i,e,t,n,s,r,o,a,c,l,u,h,d)=>(f,m,_,g)=>{if(g.numberOfInputs===0&&g.numberOfOutputs===0)throw c();const p=Array.isArray(g.outputChannelCount)?g.outputChannelCount:Array.from(g.outputChannelCount);if(p.some(Ie=>Ie<1))throw c();if(p.length!==g.numberOfOutputs)throw e();if(g.channelCountMode!=="explicit")throw c();const y=g.channelCount*g.numberOfInputs,x=p.reduce((Ie,De)=>Ie+De,0),v=_.parameterDescriptors===void 0?0:_.parameterDescriptors.length;if(y+v>6||x>6)throw c();const S=new MessageChannel,M=[],E=[];for(let Ie=0;Ie<g.numberOfInputs;Ie+=1)M.push(o(f,{channelCount:g.channelCount,channelCountMode:g.channelCountMode,channelInterpretation:g.channelInterpretation,gain:1})),E.push(s(f,{channelCount:g.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:g.channelCount}));const w=[];if(_.parameterDescriptors!==void 0)for(const{defaultValue:Ie,maxValue:De,minValue:qe,name:Be}of _.parameterDescriptors){const He=r(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:g.parameterData[Be]!==void 0?g.parameterData[Be]:Ie===void 0?0:Ie});Object.defineProperties(He.offset,{defaultValue:{get:()=>Ie===void 0?0:Ie},maxValue:{get:()=>De===void 0?Ri:De},minValue:{get:()=>qe===void 0?Hi:qe}}),w.push(He)}const b=n(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,y+v)}),T=PR(m,f.sampleRate),C=a(f,T,y+v,Math.max(1,x)),D=s(f,{channelCount:Math.max(1,x),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,x)}),P=[];for(let Ie=0;Ie<g.numberOfOutputs;Ie+=1)P.push(n(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:p[Ie]}));for(let Ie=0;Ie<g.numberOfInputs;Ie+=1){M[Ie].connect(E[Ie]);for(let De=0;De<g.channelCount;De+=1)E[Ie].connect(b,De,Ie*g.channelCount+De)}const N=new CR(_.parameterDescriptors===void 0?[]:_.parameterDescriptors.map(({name:Ie},De)=>{const qe=w[De];return qe.connect(b,0,y+De),qe.start(0),[Ie,qe.offset]}));b.connect(C);let L=g.channelInterpretation,U=null;const B=g.numberOfOutputs===0?[C]:P,k={get bufferSize(){return T},get channelCount(){return g.channelCount},set channelCount(Ie){throw t()},get channelCountMode(){return g.channelCountMode},set channelCountMode(Ie){throw t()},get channelInterpretation(){return L},set channelInterpretation(Ie){for(const De of M)De.channelInterpretation=Ie;L=Ie},get context(){return C.context},get inputs(){return M},get numberOfInputs(){return g.numberOfInputs},get numberOfOutputs(){return g.numberOfOutputs},get onprocessorerror(){return U},set onprocessorerror(Ie){typeof U=="function"&&k.removeEventListener("processorerror",U),U=typeof Ie=="function"?Ie:null,typeof U=="function"&&k.addEventListener("processorerror",U)},get parameters(){return N},get port(){return S.port2},addEventListener(...Ie){return C.addEventListener(Ie[0],Ie[1],Ie[2])},connect:i.bind(null,B),disconnect:l.bind(null,B),dispatchEvent(...Ie){return C.dispatchEvent(Ie[0])},removeEventListener(...Ie){return C.removeEventListener(Ie[0],Ie[1],Ie[2])}},$=new Map;S.port1.addEventListener=(Ie=>(...De)=>{if(De[0]==="message"){const qe=typeof De[1]=="function"?De[1]:typeof De[1]=="object"&&De[1]!==null&&typeof De[1].handleEvent=="function"?De[1].handleEvent:null;if(qe!==null){const Be=$.get(De[1]);Be!==void 0?De[1]=Be:(De[1]=He=>{u(f.currentTime,f.sampleRate,()=>qe(He))},$.set(qe,De[1]))}}return Ie.call(S.port1,De[0],De[1],De[2])})(S.port1.addEventListener),S.port1.removeEventListener=(Ie=>(...De)=>{if(De[0]==="message"){const qe=$.get(De[1]);qe!==void 0&&($.delete(De[1]),De[1]=qe)}return Ie.call(S.port1,De[0],De[1],De[2])})(S.port1.removeEventListener);let z=null;Object.defineProperty(S.port1,"onmessage",{get:()=>z,set:Ie=>{typeof z=="function"&&S.port1.removeEventListener("message",z),z=typeof Ie=="function"?Ie:null,typeof z=="function"&&(S.port1.addEventListener("message",z),S.port1.start())}}),_.prototype.port=S.port1;let Y=null;qG(f,k,_,g).then(Ie=>Y=Ie);const te=fg(g.numberOfInputs,g.channelCount),V=fg(g.numberOfOutputs,p),H=_.parameterDescriptors===void 0?[]:_.parameterDescriptors.reduce((Ie,{name:De})=>({...Ie,[De]:new Float32Array(128)}),{});let Q=!0;const O=()=>{g.numberOfOutputs>0&&C.disconnect(D);for(let Ie=0,De=0;Ie<g.numberOfOutputs;Ie+=1){const qe=P[Ie];for(let Be=0;Be<p[Ie];Be+=1)D.disconnect(qe,De+Be,Be);De+=p[Ie]}},oe=new Map;C.onaudioprocess=({inputBuffer:Ie,outputBuffer:De})=>{if(Y!==null){const qe=h(k);for(let Be=0;Be<T;Be+=128){for(let He=0;He<g.numberOfInputs;He+=1)for(let ze=0;ze<g.channelCount;ze+=1)dg(Ie,te[He],ze,ze,Be);_.parameterDescriptors!==void 0&&_.parameterDescriptors.forEach(({name:He},ze)=>{dg(Ie,H,He,y+ze,Be)});for(let He=0;He<g.numberOfInputs;He+=1)for(let ze=0;ze<p[He];ze+=1)V[He][ze].byteLength===0&&(V[He][ze]=new Float32Array(128));try{const He=te.map((G,A)=>{if(qe[A].size>0)return oe.set(A,T/128),G;const q=oe.get(A);return q===void 0?[]:(G.every(ie=>ie.every(J=>J===0))&&(q===1?oe.delete(A):oe.set(A,q-1)),G)});Q=u(f.currentTime+Be/f.sampleRate,f.sampleRate,()=>Y.process(He,V,H));for(let G=0,A=0;G<g.numberOfOutputs;G+=1){for(let R=0;R<p[G];R+=1)RR(De,V[G],R,A+R,Be);A+=p[G]}}catch(He){Q=!1,k.dispatchEvent(new ErrorEvent("processorerror",{colno:He.colno,filename:He.filename,lineno:He.lineno,message:He.message}))}if(!Q){for(let He=0;He<g.numberOfInputs;He+=1){M[He].disconnect(E[He]);for(let ze=0;ze<g.channelCount;ze+=1)E[Be].disconnect(b,ze,He*g.channelCount+ze)}if(_.parameterDescriptors!==void 0){const He=_.parameterDescriptors.length;for(let ze=0;ze<He;ze+=1){const G=w[ze];G.disconnect(b,0,y+ze),G.stop()}}b.disconnect(C),C.onaudioprocess=null,Ne?O():Xe();break}}}};let Ne=!1;const _e=o(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0}),Fe=()=>C.connect(_e).connect(f.destination),Xe=()=>{C.disconnect(_e),_e.disconnect()},$e=()=>{if(Q){Xe(),g.numberOfOutputs>0&&C.connect(D);for(let Ie=0,De=0;Ie<g.numberOfOutputs;Ie+=1){const qe=P[Ie];for(let Be=0;Be<p[Ie];Be+=1)D.connect(qe,De+Be,Be);De+=p[Ie]}}Ne=!0},j=()=>{Q&&(Fe(),O()),Ne=!1};return Fe(),d(k,$e,j)},DR=(i,e)=>{const t=i.createBiquadFilter();return Xn(t,e),bn(t,e,"Q"),bn(t,e,"detune"),bn(t,e,"frequency"),bn(t,e,"gain"),gn(t,e,"type"),t},jG=(i,e)=>(t,n)=>{const s=t.createChannelMerger(n.numberOfInputs);return i!==null&&i.name==="webkitAudioContext"&&e(t,s),Xn(s,n),s},YG=i=>{const e=i.numberOfOutputs;Object.defineProperty(i,"channelCount",{get:()=>e,set:t=>{if(t!==e)throw ti()}}),Object.defineProperty(i,"channelCountMode",{get:()=>"explicit",set:t=>{if(t!=="explicit")throw ti()}}),Object.defineProperty(i,"channelInterpretation",{get:()=>"discrete",set:t=>{if(t!=="discrete")throw ti()}})},Rf=(i,e)=>{const t=i.createChannelSplitter(e.numberOfOutputs);return Xn(t,e),YG(t),t},ZG=(i,e,t,n,s)=>(r,o)=>{if(r.createConstantSource===void 0)return t(r,o);const a=r.createConstantSource();return Xn(a,o),bn(a,o,"offset"),e(n,()=>n(r))||ZS(a),e(s,()=>s(r))||KS(a),i(r,a),a},bh=(i,e)=>(i.connect=e.connect.bind(e),i.disconnect=e.disconnect.bind(e),i),KG=(i,e,t,n)=>(s,{offset:r,...o})=>{const a=s.createBuffer(1,2,44100),c=e(s,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),l=t(s,{...o,gain:r}),u=a.getChannelData(0);u[0]=1,u[1]=1,c.buffer=a,c.loop=!0;const h={get bufferSize(){},get channelCount(){return l.channelCount},set channelCount(m){l.channelCount=m},get channelCountMode(){return l.channelCountMode},set channelCountMode(m){l.channelCountMode=m},get channelInterpretation(){return l.channelInterpretation},set channelInterpretation(m){l.channelInterpretation=m},get context(){return l.context},get inputs(){return[]},get numberOfInputs(){return c.numberOfInputs},get numberOfOutputs(){return l.numberOfOutputs},get offset(){return l.gain},get onended(){return c.onended},set onended(m){c.onended=m},addEventListener(...m){return c.addEventListener(m[0],m[1],m[2])},dispatchEvent(...m){return c.dispatchEvent(m[0])},removeEventListener(...m){return c.removeEventListener(m[0],m[1],m[2])},start(m=0){c.start.call(c,m)},stop(m=0){c.stop.call(c,m)}},d=()=>c.connect(l),f=()=>c.disconnect(l);return i(s,c),n(bh(h,l),d,f)},QG=(i,e)=>(t,n)=>{const s=t.createConvolver();if(Xn(s,n),n.disableNormalization===s.normalize&&(s.normalize=!n.disableNormalization),gn(s,n,"buffer"),n.channelCount>2||(e(s,"channelCount",r=>()=>r.call(s),r=>o=>{if(o>2)throw i();return r.call(s,o)}),n.channelCountMode==="max"))throw i();return e(s,"channelCountMode",r=>()=>r.call(s),r=>o=>{if(o==="max")throw i();return r.call(s,o)}),s},LR=(i,e)=>{const t=i.createDelay(e.maxDelayTime);return Xn(t,e),bn(t,e,"delayTime"),t},JG=i=>(e,t)=>{const n=e.createDynamicsCompressor();if(Xn(n,t),t.channelCount>2||t.channelCountMode==="max")throw i();return bn(n,t,"attack"),bn(n,t,"knee"),bn(n,t,"ratio"),bn(n,t,"release"),bn(n,t,"threshold"),n},Zi=(i,e)=>{const t=i.createGain();return Xn(t,e),bn(t,e,"gain"),t},eV=i=>(e,t,n)=>{if(e.createIIRFilter===void 0)return i(e,t,n);const s=e.createIIRFilter(n.feedforward,n.feedback);return Xn(s,n),s};function tV(i,e){const t=e[0]*e[0]+e[1]*e[1];return[(i[0]*e[0]+i[1]*e[1])/t,(i[1]*e[0]-i[0]*e[1])/t]}function nV(i,e){return[i[0]*e[0]-i[1]*e[1],i[0]*e[1]+i[1]*e[0]]}function CE(i,e){let t=[0,0];for(let n=i.length-1;n>=0;n-=1)t=nV(t,e),t[0]+=i[n];return t}const iV=(i,e,t,n)=>(s,r,{channelCount:o,channelCountMode:a,channelInterpretation:c,feedback:l,feedforward:u})=>{const h=PR(r,s.sampleRate),d=l instanceof Float64Array?l:new Float64Array(l),f=u instanceof Float64Array?u:new Float64Array(u),m=d.length,_=f.length,g=Math.min(m,_);if(m===0||m>20)throw n();if(d[0]===0)throw e();if(_===0||_>20)throw n();if(f[0]===0)throw e();if(d[0]!==1){for(let w=0;w<_;w+=1)f[w]/=d[0];for(let w=1;w<m;w+=1)d[w]/=d[0]}const p=t(s,h,o,o);p.channelCount=o,p.channelCountMode=a,p.channelInterpretation=c;const y=32,x=[],v=[],S=[];for(let w=0;w<o;w+=1){x.push(0);const b=new Float32Array(y),T=new Float32Array(y);b.fill(0),T.fill(0),v.push(b),S.push(T)}p.onaudioprocess=w=>{const b=w.inputBuffer,T=w.outputBuffer,C=b.numberOfChannels;for(let D=0;D<C;D+=1){const P=b.getChannelData(D),N=T.getChannelData(D);x[D]=NR(d,m,f,_,g,v[D],S[D],x[D],y,P,N)}};const M=s.sampleRate/2;return bh({get bufferSize(){return h},get channelCount(){return p.channelCount},set channelCount(w){p.channelCount=w},get channelCountMode(){return p.channelCountMode},set channelCountMode(w){p.channelCountMode=w},get channelInterpretation(){return p.channelInterpretation},set channelInterpretation(w){p.channelInterpretation=w},get context(){return p.context},get inputs(){return[p]},get numberOfInputs(){return p.numberOfInputs},get numberOfOutputs(){return p.numberOfOutputs},addEventListener(...w){return p.addEventListener(w[0],w[1],w[2])},dispatchEvent(...w){return p.dispatchEvent(w[0])},getFrequencyResponse(w,b,T){if(w.length!==b.length||b.length!==T.length)throw i();const C=w.length;for(let D=0;D<C;D+=1){const P=-Math.PI*(w[D]/M),N=[Math.cos(P),Math.sin(P)],L=CE(f,N),U=CE(d,N),B=tV(L,U);b[D]=Math.sqrt(B[0]*B[0]+B[1]*B[1]),T[D]=Math.atan2(B[1],B[0])}},removeEventListener(...w){return p.removeEventListener(w[0],w[1],w[2])}},p)},sV=(i,e)=>i.createMediaElementSource(e.mediaElement),rV=(i,e)=>{const t=i.createMediaStreamDestination();return Xn(t,e),t.numberOfOutputs===1&&Object.defineProperty(t,"numberOfOutputs",{get:()=>0}),t},oV=(i,{mediaStream:e})=>{const t=e.getAudioTracks();t.sort((r,o)=>r.id<o.id?-1:r.id>o.id?1:0);const n=t.slice(0,1),s=i.createMediaStreamSource(new MediaStream(n));return Object.defineProperty(s,"mediaStream",{value:e}),s},aV=(i,e)=>(t,{mediaStreamTrack:n})=>{if(typeof t.createMediaStreamTrackSource=="function")return t.createMediaStreamTrackSource(n);const s=new MediaStream([n]),r=t.createMediaStreamSource(s);if(n.kind!=="audio")throw i();if(e(t))throw new TypeError;return r},cV=i=>i===null?null:i.hasOwnProperty("OfflineAudioContext")?i.OfflineAudioContext:i.hasOwnProperty("webkitOfflineAudioContext")?i.webkitOfflineAudioContext:null,lV=(i,e,t,n,s,r)=>(o,a)=>{const c=o.createOscillator();return Xn(c,a),bn(c,a,"detune"),bn(c,a,"frequency"),a.periodicWave!==void 0?c.setPeriodicWave(a.periodicWave):gn(c,a,"type"),e(t,()=>t(o))||ZS(c),e(n,()=>n(o))||r(c,o),e(s,()=>s(o))||KS(c),i(o,c),c},uV=i=>(e,t)=>{const n=e.createPanner();return n.orientationX===void 0?i(e,t):(Xn(n,t),bn(n,t,"orientationX"),bn(n,t,"orientationY"),bn(n,t,"orientationZ"),bn(n,t,"positionX"),bn(n,t,"positionY"),bn(n,t,"positionZ"),gn(n,t,"coneInnerAngle"),gn(n,t,"coneOuterAngle"),gn(n,t,"coneOuterGain"),gn(n,t,"distanceModel"),gn(n,t,"maxDistance"),gn(n,t,"panningModel"),gn(n,t,"refDistance"),gn(n,t,"rolloffFactor"),n)},hV=(i,e,t,n,s,r,o,a,c,l)=>(u,{coneInnerAngle:h,coneOuterAngle:d,coneOuterGain:f,distanceModel:m,maxDistance:_,orientationX:g,orientationY:p,orientationZ:y,panningModel:x,positionX:v,positionY:S,positionZ:M,refDistance:E,rolloffFactor:w,...b})=>{const T=u.createPanner();if(b.channelCount>2||b.channelCountMode==="max")throw o();Xn(T,b);const C={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},D=t(u,{...C,channelInterpretation:"speakers",numberOfInputs:6}),P=n(u,{...b,gain:1}),N=n(u,{...C,gain:1}),L=n(u,{...C,gain:0}),U=n(u,{...C,gain:0}),B=n(u,{...C,gain:0}),k=n(u,{...C,gain:0}),$=n(u,{...C,gain:0}),z=s(u,256,6,1),Y=r(u,{...C,curve:new Float32Array([1,1]),oversample:"none"});let ne=[g,p,y],te=[v,S,M];const V=new Float32Array(1);z.onaudioprocess=({inputBuffer:oe})=>{const Ne=[c(oe,V,0),c(oe,V,1),c(oe,V,2)];Ne.some((Fe,Xe)=>Fe!==ne[Xe])&&(T.setOrientation(...Ne),ne=Ne);const _e=[c(oe,V,3),c(oe,V,4),c(oe,V,5)];_e.some((Fe,Xe)=>Fe!==te[Xe])&&(T.setPosition(..._e),te=_e)},Object.defineProperty(L.gain,"defaultValue",{get:()=>0}),Object.defineProperty(U.gain,"defaultValue",{get:()=>0}),Object.defineProperty(B.gain,"defaultValue",{get:()=>0}),Object.defineProperty(k.gain,"defaultValue",{get:()=>0}),Object.defineProperty($.gain,"defaultValue",{get:()=>0});const H={get bufferSize(){},get channelCount(){return T.channelCount},set channelCount(oe){if(oe>2)throw o();P.channelCount=oe,T.channelCount=oe},get channelCountMode(){return T.channelCountMode},set channelCountMode(oe){if(oe==="max")throw o();P.channelCountMode=oe,T.channelCountMode=oe},get channelInterpretation(){return T.channelInterpretation},set channelInterpretation(oe){P.channelInterpretation=oe,T.channelInterpretation=oe},get coneInnerAngle(){return T.coneInnerAngle},set coneInnerAngle(oe){T.coneInnerAngle=oe},get coneOuterAngle(){return T.coneOuterAngle},set coneOuterAngle(oe){T.coneOuterAngle=oe},get coneOuterGain(){return T.coneOuterGain},set coneOuterGain(oe){if(oe<0||oe>1)throw e();T.coneOuterGain=oe},get context(){return T.context},get distanceModel(){return T.distanceModel},set distanceModel(oe){T.distanceModel=oe},get inputs(){return[P]},get maxDistance(){return T.maxDistance},set maxDistance(oe){if(oe<0)throw new RangeError;T.maxDistance=oe},get numberOfInputs(){return T.numberOfInputs},get numberOfOutputs(){return T.numberOfOutputs},get orientationX(){return N.gain},get orientationY(){return L.gain},get orientationZ(){return U.gain},get panningModel(){return T.panningModel},set panningModel(oe){T.panningModel=oe},get positionX(){return B.gain},get positionY(){return k.gain},get positionZ(){return $.gain},get refDistance(){return T.refDistance},set refDistance(oe){if(oe<0)throw new RangeError;T.refDistance=oe},get rolloffFactor(){return T.rolloffFactor},set rolloffFactor(oe){if(oe<0)throw new RangeError;T.rolloffFactor=oe},addEventListener(...oe){return P.addEventListener(oe[0],oe[1],oe[2])},dispatchEvent(...oe){return P.dispatchEvent(oe[0])},removeEventListener(...oe){return P.removeEventListener(oe[0],oe[1],oe[2])}};h!==H.coneInnerAngle&&(H.coneInnerAngle=h),d!==H.coneOuterAngle&&(H.coneOuterAngle=d),f!==H.coneOuterGain&&(H.coneOuterGain=f),m!==H.distanceModel&&(H.distanceModel=m),_!==H.maxDistance&&(H.maxDistance=_),g!==H.orientationX.value&&(H.orientationX.value=g),p!==H.orientationY.value&&(H.orientationY.value=p),y!==H.orientationZ.value&&(H.orientationZ.value=y),x!==H.panningModel&&(H.panningModel=x),v!==H.positionX.value&&(H.positionX.value=v),S!==H.positionY.value&&(H.positionY.value=S),M!==H.positionZ.value&&(H.positionZ.value=M),E!==H.refDistance&&(H.refDistance=E),w!==H.rolloffFactor&&(H.rolloffFactor=w),(ne[0]!==1||ne[1]!==0||ne[2]!==0)&&T.setOrientation(...ne),(te[0]!==0||te[1]!==0||te[2]!==0)&&T.setPosition(...te);const Q=()=>{P.connect(T),i(P,Y,0,0),Y.connect(N).connect(D,0,0),Y.connect(L).connect(D,0,1),Y.connect(U).connect(D,0,2),Y.connect(B).connect(D,0,3),Y.connect(k).connect(D,0,4),Y.connect($).connect(D,0,5),D.connect(z).connect(u.destination)},O=()=>{P.disconnect(T),a(P,Y,0,0),Y.disconnect(N),N.disconnect(D),Y.disconnect(L),L.disconnect(D),Y.disconnect(U),U.disconnect(D),Y.disconnect(B),B.disconnect(D),Y.disconnect(k),k.disconnect(D),Y.disconnect($),$.disconnect(D),D.disconnect(z),z.disconnect(u.destination)};return l(bh(H,T),Q,O)},dV=i=>(e,{disableNormalization:t,imag:n,real:s})=>{const r=n instanceof Float32Array?n:new Float32Array(n),o=s instanceof Float32Array?s:new Float32Array(s),a=e.createPeriodicWave(o,r,{disableNormalization:t});if(Array.from(n).length<2)throw i();return a},Nf=(i,e,t,n)=>i.createScriptProcessor(e,t,n),fV=(i,e)=>(t,n)=>{const s=n.channelCountMode;if(s==="clamped-max")throw e();if(t.createStereoPanner===void 0)return i(t,n);const r=t.createStereoPanner();return Xn(r,n),bn(r,n,"pan"),Object.defineProperty(r,"channelCountMode",{get:()=>s,set:o=>{if(o!==s)throw e()}}),r},pV=(i,e,t,n,s,r)=>{const a=new Float32Array([1,1]),c=Math.PI/2,l={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},u={...l,oversample:"none"},h=(m,_,g,p)=>{const y=new Float32Array(16385),x=new Float32Array(16385);for(let b=0;b<16385;b+=1){const T=b/16384*c;y[b]=Math.cos(T),x[b]=Math.sin(T)}const v=t(m,{...l,gain:0}),S=n(m,{...u,curve:y}),M=n(m,{...u,curve:a}),E=t(m,{...l,gain:0}),w=n(m,{...u,curve:x});return{connectGraph(){_.connect(v),_.connect(M.inputs===void 0?M:M.inputs[0]),_.connect(E),M.connect(g),g.connect(S.inputs===void 0?S:S.inputs[0]),g.connect(w.inputs===void 0?w:w.inputs[0]),S.connect(v.gain),w.connect(E.gain),v.connect(p,0,0),E.connect(p,0,1)},disconnectGraph(){_.disconnect(v),_.disconnect(M.inputs===void 0?M:M.inputs[0]),_.disconnect(E),M.disconnect(g),g.disconnect(S.inputs===void 0?S:S.inputs[0]),g.disconnect(w.inputs===void 0?w:w.inputs[0]),S.disconnect(v.gain),w.disconnect(E.gain),v.disconnect(p,0,0),E.disconnect(p,0,1)}}},d=(m,_,g,p)=>{const y=new Float32Array(16385),x=new Float32Array(16385),v=new Float32Array(16385),S=new Float32Array(16385),M=Math.floor(16385/2);for(let B=0;B<16385;B+=1)if(B>M){const k=(B-M)/(16384-M)*c;y[B]=Math.cos(k),x[B]=Math.sin(k),v[B]=0,S[B]=1}else{const k=B/(16384-M)*c;y[B]=1,x[B]=0,v[B]=Math.cos(k),S[B]=Math.sin(k)}const E=e(m,{channelCount:2,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:2}),w=t(m,{...l,gain:0}),b=n(m,{...u,curve:y}),T=t(m,{...l,gain:0}),C=n(m,{...u,curve:x}),D=n(m,{...u,curve:a}),P=t(m,{...l,gain:0}),N=n(m,{...u,curve:v}),L=t(m,{...l,gain:0}),U=n(m,{...u,curve:S});return{connectGraph(){_.connect(E),_.connect(D.inputs===void 0?D:D.inputs[0]),E.connect(w,0),E.connect(T,0),E.connect(P,1),E.connect(L,1),D.connect(g),g.connect(b.inputs===void 0?b:b.inputs[0]),g.connect(C.inputs===void 0?C:C.inputs[0]),g.connect(N.inputs===void 0?N:N.inputs[0]),g.connect(U.inputs===void 0?U:U.inputs[0]),b.connect(w.gain),C.connect(T.gain),N.connect(P.gain),U.connect(L.gain),w.connect(p,0,0),P.connect(p,0,0),T.connect(p,0,1),L.connect(p,0,1)},disconnectGraph(){_.disconnect(E),_.disconnect(D.inputs===void 0?D:D.inputs[0]),E.disconnect(w,0),E.disconnect(T,0),E.disconnect(P,1),E.disconnect(L,1),D.disconnect(g),g.disconnect(b.inputs===void 0?b:b.inputs[0]),g.disconnect(C.inputs===void 0?C:C.inputs[0]),g.disconnect(N.inputs===void 0?N:N.inputs[0]),g.disconnect(U.inputs===void 0?U:U.inputs[0]),b.disconnect(w.gain),C.disconnect(T.gain),N.disconnect(P.gain),U.disconnect(L.gain),w.disconnect(p,0,0),P.disconnect(p,0,0),T.disconnect(p,0,1),L.disconnect(p,0,1)}}},f=(m,_,g,p,y)=>{if(_===1)return h(m,g,p,y);if(_===2)return d(m,g,p,y);throw s()};return(m,{channelCount:_,channelCountMode:g,pan:p,...y})=>{if(g==="max")throw s();const x=i(m,{...y,channelCount:1,channelCountMode:g,numberOfInputs:2}),v=t(m,{...y,channelCount:_,channelCountMode:g,gain:1}),S=t(m,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:p});let{connectGraph:M,disconnectGraph:E}=f(m,_,v,S,x);Object.defineProperty(S.gain,"defaultValue",{get:()=>0}),Object.defineProperty(S.gain,"maxValue",{get:()=>1}),Object.defineProperty(S.gain,"minValue",{get:()=>-1});const w={get bufferSize(){},get channelCount(){return v.channelCount},set channelCount(D){v.channelCount!==D&&(b&&E(),{connectGraph:M,disconnectGraph:E}=f(m,D,v,S,x),b&&M()),v.channelCount=D},get channelCountMode(){return v.channelCountMode},set channelCountMode(D){if(D==="clamped-max"||D==="max")throw s();v.channelCountMode=D},get channelInterpretation(){return v.channelInterpretation},set channelInterpretation(D){v.channelInterpretation=D},get context(){return v.context},get inputs(){return[v]},get numberOfInputs(){return v.numberOfInputs},get numberOfOutputs(){return v.numberOfOutputs},get pan(){return S.gain},addEventListener(...D){return v.addEventListener(D[0],D[1],D[2])},dispatchEvent(...D){return v.dispatchEvent(D[0])},removeEventListener(...D){return v.removeEventListener(D[0],D[1],D[2])}};let b=!1;const T=()=>{M(),b=!0},C=()=>{E(),b=!1};return r(bh(w,x),T,C)}},mV=(i,e,t,n,s,r,o)=>(a,c)=>{const l=a.createWaveShaper();if(r!==null&&r.name==="webkitAudioContext"&&a.createGain().gain.automationRate===void 0)return t(a,c);Xn(l,c);const u=c.curve===null||c.curve instanceof Float32Array?c.curve:new Float32Array(c.curve);if(u!==null&&u.length<2)throw e();gn(l,{curve:u},"curve"),gn(l,c,"oversample");let h=null,d=!1;return o(l,"curve",_=>()=>_.call(l),_=>g=>(_.call(l,g),d&&(n(g)&&h===null?h=i(a,l):!n(g)&&h!==null&&(h(),h=null)),g)),s(l,()=>{d=!0,n(l.curve)&&(h=i(a,l))},()=>{d=!1,h!==null&&(h(),h=null)})},gV=(i,e,t,n,s)=>(r,{curve:o,oversample:a,...c})=>{const l=r.createWaveShaper(),u=r.createWaveShaper();Xn(l,c),Xn(u,c);const h=t(r,{...c,gain:1}),d=t(r,{...c,gain:-1}),f=t(r,{...c,gain:1}),m=t(r,{...c,gain:-1});let _=null,g=!1,p=null;const y={get bufferSize(){},get channelCount(){return l.channelCount},set channelCount(S){h.channelCount=S,d.channelCount=S,l.channelCount=S,f.channelCount=S,u.channelCount=S,m.channelCount=S},get channelCountMode(){return l.channelCountMode},set channelCountMode(S){h.channelCountMode=S,d.channelCountMode=S,l.channelCountMode=S,f.channelCountMode=S,u.channelCountMode=S,m.channelCountMode=S},get channelInterpretation(){return l.channelInterpretation},set channelInterpretation(S){h.channelInterpretation=S,d.channelInterpretation=S,l.channelInterpretation=S,f.channelInterpretation=S,u.channelInterpretation=S,m.channelInterpretation=S},get context(){return l.context},get curve(){return p},set curve(S){if(S!==null&&S.length<2)throw e();if(S===null)l.curve=S,u.curve=S;else{const M=S.length,E=new Float32Array(M+2-M%2),w=new Float32Array(M+2-M%2);E[0]=S[0],w[0]=-S[M-1];const b=Math.ceil((M+1)/2),T=(M+1)/2-1;for(let C=1;C<b;C+=1){const D=C/b*T,P=Math.floor(D),N=Math.ceil(D);E[C]=P===N?S[P]:(1-(D-P))*S[P]+(1-(N-D))*S[N],w[C]=P===N?-S[M-1-P]:-((1-(D-P))*S[M-1-P])-(1-(N-D))*S[M-1-N]}E[b]=M%2===1?S[b-1]:(S[b-2]+S[b-1])/2,l.curve=E,u.curve=w}p=S,g&&(n(p)&&_===null?_=i(r,h):_!==null&&(_(),_=null))},get inputs(){return[h]},get numberOfInputs(){return l.numberOfInputs},get numberOfOutputs(){return l.numberOfOutputs},get oversample(){return l.oversample},set oversample(S){l.oversample=S,u.oversample=S},addEventListener(...S){return h.addEventListener(S[0],S[1],S[2])},dispatchEvent(...S){return h.dispatchEvent(S[0])},removeEventListener(...S){return h.removeEventListener(S[0],S[1],S[2])}};o!==null&&(y.curve=o instanceof Float32Array?o:new Float32Array(o)),a!==y.oversample&&(y.oversample=a);const x=()=>{h.connect(l).connect(f),h.connect(d).connect(u).connect(m).connect(f),g=!0,n(p)&&(_=i(r,h))},v=()=>{h.disconnect(l),l.disconnect(f),h.disconnect(d),d.disconnect(u),u.disconnect(m),m.disconnect(f),g=!1,_!==null&&(_(),_=null)};return s(bh(y,f),x,v)},zi=()=>new DOMException("","NotSupportedError"),_V={numberOfChannels:1},vV=(i,e,t,n,s)=>class extends i{constructor(o,a,c){let l;if(typeof o=="number"&&a!==void 0&&c!==void 0)l={length:a,numberOfChannels:o,sampleRate:c};else if(typeof o=="object")l=o;else throw new Error("The given parameters are not valid.");const{length:u,numberOfChannels:h,sampleRate:d}={..._V,...l},f=n(h,u,d);e(Wd,()=>Wd(f))||f.addEventListener("statechange",(()=>{let m=0;const _=g=>{this._state==="running"&&(m>0?(f.removeEventListener("statechange",_),g.stopImmediatePropagation(),this._waitForThePromiseToSettle(g)):m+=1)};return _})()),super(f,h),this._length=u,this._nativeOfflineAudioContext=f,this._state=null}get length(){return this._nativeOfflineAudioContext.length===void 0?this._length:this._nativeOfflineAudioContext.length}get state(){return this._state===null?this._nativeOfflineAudioContext.state:this._state}startRendering(){return this._state==="running"?Promise.reject(t()):(this._state="running",s(this.destination,this._nativeOfflineAudioContext).finally(()=>{this._state=null,TR(this)}))}_waitForThePromiseToSettle(o){this._state===null?this._nativeOfflineAudioContext.dispatchEvent(o):setTimeout(()=>this._waitForThePromiseToSettle(o))}},xV={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:440,periodicWave:void 0,type:"sine"},yV=(i,e,t,n,s,r,o)=>class extends i{constructor(c,l){const u=s(c),h={...xV,...l},d=t(u,h),f=r(u),m=f?n():null,_=c.sampleRate/2;super(c,!1,d,m),this._detune=e(this,f,d.detune,153600,-153600),this._frequency=e(this,f,d.frequency,_,-_),this._nativeOscillatorNode=d,this._onended=null,this._oscillatorNodeRenderer=m,this._oscillatorNodeRenderer!==null&&h.periodicWave!==void 0&&(this._oscillatorNodeRenderer.periodicWave=h.periodicWave)}get detune(){return this._detune}get frequency(){return this._frequency}get onended(){return this._onended}set onended(c){const l=typeof c=="function"?o(this,c):null;this._nativeOscillatorNode.onended=l;const u=this._nativeOscillatorNode.onended;this._onended=u!==null&&u===l?c:u}get type(){return this._nativeOscillatorNode.type}set type(c){this._nativeOscillatorNode.type=c,this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=null)}setPeriodicWave(c){this._nativeOscillatorNode.setPeriodicWave(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=c)}start(c=0){if(this._nativeOscillatorNode.start(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.start=c),this.context.state!=="closed"){Qu(this);const l=()=>{this._nativeOscillatorNode.removeEventListener("ended",l),Io(this)&&wf(this)};this._nativeOscillatorNode.addEventListener("ended",l)}}stop(c=0){this._nativeOscillatorNode.stop(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.stop=c)}},SV=(i,e,t,n,s)=>()=>{const r=new WeakMap;let o=null,a=null,c=null;const l=async(u,h)=>{let d=t(u);const f=bi(d,h);if(!f){const m={channelCount:d.channelCount,channelCountMode:d.channelCountMode,channelInterpretation:d.channelInterpretation,detune:d.detune.value,frequency:d.frequency.value,periodicWave:o===null?void 0:o,type:d.type};d=e(h,m),a!==null&&d.start(a),c!==null&&d.stop(c)}return r.set(h,d),f?(await i(h,u.detune,d.detune),await i(h,u.frequency,d.frequency)):(await n(h,u.detune,d.detune),await n(h,u.frequency,d.frequency)),await s(u,h,d),d};return{set periodicWave(u){o=u},set start(u){a=u},set stop(u){c=u},render(u,h){const d=r.get(h);return d!==void 0?Promise.resolve(d):l(u,h)}}},bV={channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:"inverse",maxDistance:1e4,orientationX:1,orientationY:0,orientationZ:0,panningModel:"equalpower",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1},MV=(i,e,t,n,s,r,o)=>class extends i{constructor(c,l){const u=s(c),h={...bV,...l},d=t(u,h),f=r(u),m=f?n():null;super(c,!1,d,m),this._nativePannerNode=d,this._orientationX=e(this,f,d.orientationX,Ri,Hi),this._orientationY=e(this,f,d.orientationY,Ri,Hi),this._orientationZ=e(this,f,d.orientationZ,Ri,Hi),this._positionX=e(this,f,d.positionX,Ri,Hi),this._positionY=e(this,f,d.positionY,Ri,Hi),this._positionZ=e(this,f,d.positionZ,Ri,Hi),o(this,1)}get coneInnerAngle(){return this._nativePannerNode.coneInnerAngle}set coneInnerAngle(c){this._nativePannerNode.coneInnerAngle=c}get coneOuterAngle(){return this._nativePannerNode.coneOuterAngle}set coneOuterAngle(c){this._nativePannerNode.coneOuterAngle=c}get coneOuterGain(){return this._nativePannerNode.coneOuterGain}set coneOuterGain(c){this._nativePannerNode.coneOuterGain=c}get distanceModel(){return this._nativePannerNode.distanceModel}set distanceModel(c){this._nativePannerNode.distanceModel=c}get maxDistance(){return this._nativePannerNode.maxDistance}set maxDistance(c){this._nativePannerNode.maxDistance=c}get orientationX(){return this._orientationX}get orientationY(){return this._orientationY}get orientationZ(){return this._orientationZ}get panningModel(){return this._nativePannerNode.panningModel}set panningModel(c){this._nativePannerNode.panningModel=c}get positionX(){return this._positionX}get positionY(){return this._positionY}get positionZ(){return this._positionZ}get refDistance(){return this._nativePannerNode.refDistance}set refDistance(c){this._nativePannerNode.refDistance=c}get rolloffFactor(){return this._nativePannerNode.rolloffFactor}set rolloffFactor(c){this._nativePannerNode.rolloffFactor=c}},TV=(i,e,t,n,s,r,o,a,c,l)=>()=>{const u=new WeakMap;let h=null;const d=async(f,m)=>{let _=null,g=r(f);const p={channelCount:g.channelCount,channelCountMode:g.channelCountMode,channelInterpretation:g.channelInterpretation},y={...p,coneInnerAngle:g.coneInnerAngle,coneOuterAngle:g.coneOuterAngle,coneOuterGain:g.coneOuterGain,distanceModel:g.distanceModel,maxDistance:g.maxDistance,panningModel:g.panningModel,refDistance:g.refDistance,rolloffFactor:g.rolloffFactor},x=bi(g,m);if("bufferSize"in g)_=n(m,{...p,gain:1});else if(!x){const v={...y,orientationX:g.orientationX.value,orientationY:g.orientationY.value,orientationZ:g.orientationZ.value,positionX:g.positionX.value,positionY:g.positionY.value,positionZ:g.positionZ.value};g=s(m,v)}if(u.set(m,_===null?g:_),_!==null){if(h===null){if(o===null)throw new Error("Missing the native OfflineAudioContext constructor.");const C=new o(6,f.context.length,m.sampleRate),D=e(C,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6});D.connect(C.destination),h=(async()=>{const P=await Promise.all([f.orientationX,f.orientationY,f.orientationZ,f.positionX,f.positionY,f.positionZ].map(async(N,L)=>{const U=t(C,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:L===0?1:0});return await a(C,N,U.offset),U}));for(let N=0;N<6;N+=1)P[N].connect(D,0,N),P[N].start(0);return l(C)})()}const v=await h,S=n(m,{...p,gain:1});await c(f,m,S);const M=[];for(let C=0;C<v.numberOfChannels;C+=1)M.push(v.getChannelData(C));let E=[M[0][0],M[1][0],M[2][0]],w=[M[3][0],M[4][0],M[5][0]],b=n(m,{...p,gain:1}),T=s(m,{...y,orientationX:E[0],orientationY:E[1],orientationZ:E[2],positionX:w[0],positionY:w[1],positionZ:w[2]});S.connect(b).connect(T.inputs[0]),T.connect(_);for(let C=128;C<v.length;C+=128){const D=[M[0][C],M[1][C],M[2][C]],P=[M[3][C],M[4][C],M[5][C]];if(D.some((N,L)=>N!==E[L])||P.some((N,L)=>N!==w[L])){E=D,w=P;const N=C/m.sampleRate;b.gain.setValueAtTime(0,N),b=n(m,{...p,gain:0}),T=s(m,{...y,orientationX:E[0],orientationY:E[1],orientationZ:E[2],positionX:w[0],positionY:w[1],positionZ:w[2]}),b.gain.setValueAtTime(1,N),S.connect(b).connect(T.inputs[0]),T.connect(_)}}return _}return x?(await i(m,f.orientationX,g.orientationX),await i(m,f.orientationY,g.orientationY),await i(m,f.orientationZ,g.orientationZ),await i(m,f.positionX,g.positionX),await i(m,f.positionY,g.positionY),await i(m,f.positionZ,g.positionZ)):(await a(m,f.orientationX,g.orientationX),await a(m,f.orientationY,g.orientationY),await a(m,f.orientationZ,g.orientationZ),await a(m,f.positionX,g.positionX),await a(m,f.positionY,g.positionY),await a(m,f.positionZ,g.positionZ)),Sh(g)?await c(f,m,g.inputs[0]):await c(f,m,g),g};return{render(f,m){const _=u.get(m);return _!==void 0?Promise.resolve(_):d(f,m)}}},EV={disableNormalization:!1},wV=(i,e,t,n)=>class IR{constructor(r,o){const a=e(r),c=n({...EV,...o}),l=i(a,c);return t.add(l),l}static[Symbol.hasInstance](r){return r!==null&&typeof r=="object"&&Object.getPrototypeOf(r)===IR.prototype||t.has(r)}},AV=(i,e)=>(t,n,s)=>(i(n).replay(s),e(n,t,s)),CV=(i,e,t)=>async(n,s,r)=>{const o=i(n);await Promise.all(o.activeInputs.map((a,c)=>Array.from(a).map(async([l,u])=>{const d=await e(l).render(l,s),f=n.context.destination;!t(l)&&(n!==f||!t(n))&&d.connect(r,u,c)})).reduce((a,c)=>[...a,...c],[]))},RV=(i,e,t)=>async(n,s,r)=>{const o=e(n);await Promise.all(Array.from(o.activeInputs).map(async([a,c])=>{const u=await i(a).render(a,s);t(a)||u.connect(r,c)}))},NV=(i,e,t,n)=>s=>i(Wd,()=>Wd(s))?Promise.resolve(i(n,n)).then(r=>{if(!r){const o=t(s,512,0,1);s.oncomplete=()=>{o.onaudioprocess=null,o.disconnect()},o.onaudioprocess=()=>s.currentTime,o.connect(s.destination)}return s.startRendering()}):new Promise(r=>{const o=e(s,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});s.oncomplete=a=>{o.disconnect(),r(a.renderedBuffer)},o.connect(s.destination),s.startRendering()}),PV=i=>(e,t)=>{i.set(e,t)},DV=i=>(e,t)=>i.set(e,t),LV=(i,e,t,n,s,r,o,a)=>(c,l)=>t(c).render(c,l).then(()=>Promise.all(Array.from(n(l)).map(u=>t(u).render(u,l)))).then(()=>s(l)).then(u=>(typeof u.copyFromChannel!="function"?(o(u),XS(u)):e(r,()=>r(u))||a(u),i.add(u),u)),IV={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",pan:0},FV=(i,e,t,n,s,r)=>class extends i{constructor(a,c){const l=s(a),u={...IV,...c},h=t(l,u),d=r(l),f=d?n():null;super(a,!1,h,f),this._pan=e(this,d,h.pan)}get pan(){return this._pan}},UV=(i,e,t,n,s)=>()=>{const r=new WeakMap,o=async(a,c)=>{let l=t(a);const u=bi(l,c);if(!u){const h={channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,pan:l.pan.value};l=e(c,h)}return r.set(c,l),u?await i(c,a.pan,l.pan):await n(c,a.pan,l.pan),Sh(l)?await s(a,c,l.inputs[0]):await s(a,c,l),l};return{render(a,c){const l=r.get(c);return l!==void 0?Promise.resolve(l):o(a,c)}}},OV=i=>()=>{if(i===null)return!1;try{new i({length:1,sampleRate:44100})}catch{return!1}return!0},BV=(i,e)=>async()=>{if(i===null)return!0;if(e===null)return!1;const t=new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor("a",A)'],{type:"application/javascript; charset=utf-8"}),n=new e(1,128,44100),s=URL.createObjectURL(t);let r=!1,o=!1;try{await n.audioWorklet.addModule(s);const a=new i(n,"a",{numberOfOutputs:0}),c=n.createOscillator();a.port.onmessage=()=>r=!0,a.onprocessorerror=()=>o=!0,c.connect(a),c.start(0),await n.startRendering()}catch{}finally{URL.revokeObjectURL(s)}return r&&!o},kV=(i,e)=>()=>{if(e===null)return Promise.resolve(!1);const t=new e(1,1,44100),n=i(t,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return new Promise(s=>{t.oncomplete=()=>{n.disconnect(),s(t.currentTime!==0)},t.startRendering()})},zV=()=>new DOMException("","UnknownError"),GV={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",curve:null,oversample:"none"},VV=(i,e,t,n,s,r,o)=>class extends i{constructor(c,l){const u=s(c),h={...GV,...l},d=t(u,h),m=r(u)?n():null;super(c,!0,d,m),this._isCurveNullified=!1,this._nativeWaveShaperNode=d,o(this,1)}get curve(){return this._isCurveNullified?null:this._nativeWaveShaperNode.curve}set curve(c){if(c===null)this._isCurveNullified=!0,this._nativeWaveShaperNode.curve=new Float32Array([0,0]);else{if(c.length<2)throw e();this._isCurveNullified=!1,this._nativeWaveShaperNode.curve=c}}get oversample(){return this._nativeWaveShaperNode.oversample}set oversample(c){this._nativeWaveShaperNode.oversample=c}},HV=(i,e,t)=>()=>{const n=new WeakMap,s=async(r,o)=>{let a=e(r);if(!bi(a,o)){const l={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,curve:a.curve,oversample:a.oversample};a=i(o,l)}return n.set(o,a),Sh(a)?await t(r,o,a.inputs[0]):await t(r,o,a),a};return{render(r,o){const a=n.get(o);return a!==void 0?Promise.resolve(a):s(r,o)}}},WV=()=>typeof window>"u"?null:window,$V=(i,e)=>t=>{t.copyFromChannel=(n,s,r=0)=>{const o=i(r),a=i(s);if(a>=t.numberOfChannels)throw e();const c=t.length,l=t.getChannelData(a),u=n.length;for(let h=o<0?-o:0;h+o<c&&h<u;h+=1)n[h]=l[h+o]},t.copyToChannel=(n,s,r=0)=>{const o=i(r),a=i(s);if(a>=t.numberOfChannels)throw e();const c=t.length,l=t.getChannelData(a),u=n.length;for(let h=o<0?-o:0;h+o<c&&h<u;h+=1)l[h+o]=n[h]}},qV=i=>e=>{e.copyFromChannel=(t=>(n,s,r=0)=>{const o=i(r),a=i(s);if(o<e.length)return t.call(e,n,a,o)})(e.copyFromChannel),e.copyToChannel=(t=>(n,s,r=0)=>{const o=i(r),a=i(s);if(o<e.length)return t.call(e,n,a,o)})(e.copyToChannel)},XV=i=>(e,t)=>{const n=t.createBuffer(1,1,44100);e.buffer===null&&(e.buffer=n),i(e,"buffer",s=>()=>{const r=s.call(e);return r===n?null:r},s=>r=>s.call(e,r===null?n:r))},jV=(i,e)=>(t,n)=>{n.channelCount=1,n.channelCountMode="explicit",Object.defineProperty(n,"channelCount",{get:()=>1,set:()=>{throw i()}}),Object.defineProperty(n,"channelCountMode",{get:()=>"explicit",set:()=>{throw i()}});const s=t.createBufferSource();e(n,()=>{const a=n.numberOfInputs;for(let c=0;c<a;c+=1)s.connect(n,0,c)},()=>s.disconnect(n))},FR=(i,e,t)=>i.copyFromChannel===void 0?i.getChannelData(t)[0]:(i.copyFromChannel(e,t),e[0]),UR=i=>{if(i===null)return!1;const e=i.length;return e%2!==0?i[Math.floor(e/2)]!==0:i[e/2-1]+i[e/2]!==0},Pf=(i,e,t,n)=>{let s=i;for(;!s.hasOwnProperty(e);)s=Object.getPrototypeOf(s);const{get:r,set:o}=Object.getOwnPropertyDescriptor(s,e);Object.defineProperty(i,e,{get:t(r),set:n(o)})},YV=i=>({...i,outputChannelCount:i.outputChannelCount!==void 0?i.outputChannelCount:i.numberOfInputs===1&&i.numberOfOutputs===1?[i.channelCount]:Array.from({length:i.numberOfOutputs},()=>1)}),ZV=i=>({...i,channelCount:i.numberOfOutputs}),KV=i=>{const{imag:e,real:t}=i;return e===void 0?t===void 0?{...i,imag:[0,0],real:[0,0]}:{...i,imag:Array.from(t,()=>0),real:t}:t===void 0?{...i,imag:e,real:Array.from(e,()=>0)}:{...i,imag:e,real:t}},OR=(i,e,t)=>{try{i.setValueAtTime(e,t)}catch(n){if(n.code!==9)throw n;OR(i,e,t+1e-7)}},QV=i=>{const e=i.createBufferSource();e.start();try{e.start()}catch{return!0}return!1},JV=i=>{const e=i.createBufferSource(),t=i.createBuffer(1,1,44100);e.buffer=t;try{e.start(0,1)}catch{return!1}return!0},e4=i=>{const e=i.createBufferSource();e.start();try{e.stop()}catch{return!1}return!0},QS=i=>{const e=i.createOscillator();try{e.start(-1)}catch(t){return t instanceof RangeError}return!1},BR=i=>{const e=i.createBuffer(1,1,44100),t=i.createBufferSource();t.buffer=e,t.start(),t.stop();try{return t.stop(),!0}catch{return!1}},JS=i=>{const e=i.createOscillator();try{e.stop(-1)}catch(t){return t instanceof RangeError}return!1},t4=i=>{const{port1:e,port2:t}=new MessageChannel;try{e.postMessage(i)}finally{e.close(),t.close()}},n4=i=>{i.start=(e=>(t=0,n=0,s)=>{const r=i.buffer,o=r===null?n:Math.min(r.duration,n);r!==null&&o>r.duration-.5/i.context.sampleRate?e.call(i,t,0,0):e.call(i,t,o,s)})(i.start)},kR=(i,e)=>{const t=e.createGain();i.connect(t);const n=(s=>()=>{s.call(i,t),i.removeEventListener("ended",n)})(i.disconnect);i.addEventListener("ended",n),bh(i,t),i.stop=(s=>{let r=!1;return(o=0)=>{if(r)try{s.call(i,o)}catch{t.gain.setValueAtTime(0,o)}else s.call(i,o),r=!0}})(i.stop)},Mh=(i,e)=>t=>{const n={value:i};return Object.defineProperties(t,{currentTarget:n,target:n}),typeof e=="function"?e.call(i,t):e.handleEvent.call(i,t)},i4=Mk(ll),s4=Rk(ll),r4=Gz(s_),zR=new WeakMap,o4=rG(zR),vr=_z(new Map,new WeakMap),Ir=WV(),GR=FG(vr,Vr),eb=sG(Ii),hi=CV(Ii,eb,qc),a4=Ik(GR,hn,hi),on=cG(i_),Yo=cV(Ir),tn=EG(Yo),VR=new WeakMap,HR=Kz(Mh),Df=kG(Ir),tb=SG(Df),nb=bG(Ir),WR=MG(Ir),$d=GG(Ir),Rn=rz(Tk(_R),Ck(i4,s4,lg,r4,ug,Ii,o4,Ef,hn,ll,Io,qc,Fm),vr,gG(Px,ug,Ii,hn,Hd,Io),Vr,r_,zi,Oz(lg,Px,Ii,hn,Hd,on,Io,tn),Wz(VR,Ii,dr),HR,on,tb,nb,WR,tn,$d),c4=Lk(Rn,a4,Vr,GR,on,tn),ib=new WeakSet,RE=UG(Ir),$R=Nz(new Uint32Array(1)),sb=$V($R,Vr),rb=qV($R),l4=Uk(ib,vr,zi,RE,Yo,OV(RE),sb,rb),o_=Nk(Zi),qR=RV(eb,Af,qc),Hr=Tz(qR),Th=BG(o_,vr,QV,JV,e4,QS,BR,JS,n4,XV(Pf),kR),Wr=AV(oG(Af),qR),u4=kk(Hr,Th,hn,Wr,hi),xr=oz(Ek(vR),VR,qS,az,_k,vk,xk,yk,Sk,Cx,mR,Df,OR),h4=Bk(Rn,u4,xr,ti,Th,on,tn,Mh),d4=jk(Rn,Yk,Vr,ti,zG(Zi,Pf),on,tn,hi),f4=gz(Hr,DR,hn,Wr,hi),ul=DV(zR),p4=mz(Rn,xr,f4,r_,DR,on,tn,ul),ja=LG(ll,nb),m4=jV(ti,ja),Ya=jG(Df,m4),g4=yz(Ya,hn,hi),_4=xz(Rn,g4,Ya,on,tn),v4=Mz(Rf,hn,hi),x4=bz(Rn,v4,Rf,on,tn,ZV),y4=KG(o_,Th,Zi,ja),Eh=ZG(o_,vr,y4,QS,JS),S4=Rz(Hr,Eh,hn,Wr,hi),b4=Cz(Rn,xr,S4,Eh,on,tn,Mh),XR=QG(zi,Pf),M4=Lz(XR,hn,hi),T4=Dz(Rn,M4,XR,on,tn,ul),E4=zz(Hr,LR,hn,Wr,hi),w4=kz(Rn,xr,E4,LR,on,tn,ul),jR=JG(zi),A4=jz(Hr,jR,hn,Wr,hi),C4=Xz(Rn,xr,A4,jR,zi,on,tn,ul),R4=nG(Hr,Zi,hn,Wr,hi),N4=tG(Rn,xr,R4,Zi,on,tn),P4=iV(r_,ti,Nf,zi),a_=NV(vr,Zi,Nf,kV(Zi,Yo)),D4=mG(Th,hn,Yo,hi,a_),L4=eV(P4),I4=fG(Rn,L4,D4,on,tn,ul),F4=Zk(xr,Ya,Eh,Nf,zi,FR,tn,Pf),YR=new WeakMap,U4=DG(d4,F4,HR,tn,YR,Mh),ZR=lV(o_,vr,QS,BR,JS,kR),O4=SV(Hr,ZR,hn,Wr,hi),B4=yV(Rn,xr,ZR,O4,on,tn,Mh),KR=wz(Th),k4=gV(KR,ti,Zi,UR,ja),c_=mV(KR,ti,k4,UR,ja,Df,Pf),z4=hV(lg,ti,Ya,Zi,Nf,c_,zi,ug,FR,ja),QR=uV(z4),G4=TV(Hr,Ya,Eh,Zi,QR,hn,Yo,Wr,hi,a_),V4=MV(Rn,xr,QR,G4,on,tn,ul),H4=dV(Vr),W4=wV(H4,on,new WeakSet,KV),$4=pV(Ya,Rf,Zi,c_,zi,ja),JR=fV($4,zi),q4=UV(Hr,JR,hn,Wr,hi),X4=FV(Rn,xr,JR,q4,on,tn),j4=HV(c_,hn,hi),Y4=VV(Rn,ti,c_,j4,on,tn,ul),eN=wG(Ir),ob=Qz(Ir),tN=new WeakMap,Z4=lG(tN,Yo),K4=eN?Ak(vr,zi,Zz(Ir),ob,Jz(bk),on,Z4,tn,$d,new WeakMap,new WeakMap,BV($d,Yo),Ir):void 0,Q4=TG(tb,tn),J4=Uz(ib,vr,Fz,Yz,new WeakSet,on,Q4,ag,Wd,sb,rb),nN=fz(K4,c4,l4,h4,p4,_4,x4,b4,T4,J4,w4,C4,N4,I4,U4,B4,V4,W4,X4,Y4),eH=AG(Rn,sV,on,tn),tH=RG(Rn,rV,on,tn),nH=NG(Rn,oV,on,tn),iH=aV(ti,tn),sH=PG(Rn,iH,on),rH=Xk(nN,ti,zi,zV,eH,tH,nH,sH,Df),ab=uG(YR),oH=Pk(ab),iN=Ez(Vr),aH=Vz(ab),sN=$z(Vr),rN=new WeakMap,cH=iG(rN,dr),lH=XG(iN,Vr,ti,Ya,Rf,Eh,Zi,Nf,zi,sN,ob,cH,ja),uH=HG(ti,lH,Zi,zi,ja),hH=dz(Hr,iN,Th,Ya,Rf,Eh,Zi,aH,sN,ob,hn,$d,Yo,Wr,hi,a_),dH=aG(tN),fH=PV(rN),NE=eN?lz(oH,Rn,xr,hH,uH,Ii,dH,on,tn,$d,YV,fH,t4,Mh):void 0,pH=Iz(zi,Yo),mH=LV(ib,vr,eb,ab,a_,ag,sb,rb),gH=vV(nN,vr,ti,pH,mH),_H=_G(i_,tb),vH=vG($S,nb),xH=xG(qS,WR),yH=yG(i_,tn);function wt(i,e){if(!i)throw new Error(e)}function Ga(i,e,t=1/0){if(!(e<=i&&i<=t))throw new RangeError(`Value must be within [${e}, ${t}], got: ${i}`)}function oN(i){!i.isOffline&&i.state!=="running"&&cN('The AudioContext is "suspended". Invoke Tone.start() from a user action to start the audio.')}let aN=console;function SH(...i){aN.log(...i)}function cN(...i){aN.warn(...i)}function Ps(i){return typeof i>"u"}function It(i){return!Ps(i)}function bH(i){return typeof i=="function"}function Xc(i){return typeof i=="number"}function zc(i){return Object.prototype.toString.call(i)==="[object Object]"&&i.constructor===Object}function MH(i){return typeof i=="boolean"}function ur(i){return Array.isArray(i)}function Fr(i){return typeof i=="string"}function yp(i){return Fr(i)&&/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(i)}function TH(i){return new rH(i)}function EH(i,e,t){return new gH(i,e,t)}const Gc=typeof self=="object"?self:null,wH=Gc&&(Gc.hasOwnProperty("AudioContext")||Gc.hasOwnProperty("webkitAudioContext"));function AH(i,e,t){return wt(It(NE),"This node only works in a secure context (https or localhost)"),new NE(i,e,t)}function yr(i,e,t,n){var s=arguments.length,r=s<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,o;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")r=Reflect.decorate(i,e,t,n);else for(var a=i.length-1;a>=0;a--)(o=i[a])&&(r=(s<3?o(r):s>3?o(e,t,r):o(e,t))||r);return s>3&&r&&Object.defineProperty(e,t,r),r}function kn(i,e,t,n){function s(r){return r instanceof t?r:new t(function(o){o(r)})}return new(t||(t=Promise))(function(r,o){function a(u){try{l(n.next(u))}catch(h){o(h)}}function c(u){try{l(n.throw(u))}catch(h){o(h)}}function l(u){u.done?r(u.value):s(u.value).then(a,c)}l((n=n.apply(i,e||[])).next())})}class CH{constructor(e,t,n){this._callback=e,this._type=t,this._updateInterval=n,this._createClock()}_createWorker(){const e=new Blob([`
			// the initial timeout time
			let timeoutTime =  ${(this._updateInterval*1e3).toFixed(1)};
			// onmessage callback
			self.onmessage = function(msg){
				timeoutTime = parseInt(msg.data);
			};
			// the tick function which posts a message
			// and schedules a new tick
			function tick(){
				setTimeout(tick, timeoutTime);
				self.postMessage('tick');
			}
			// call tick initially
			tick();
			`],{type:"text/javascript"}),t=URL.createObjectURL(e),n=new Worker(t);n.onmessage=this._callback.bind(this),this._worker=n}_createTimeout(){this._timeout=setTimeout(()=>{this._createTimeout(),this._callback()},this._updateInterval*1e3)}_createClock(){if(this._type==="worker")try{this._createWorker()}catch{this._type="timeout",this._createClock()}else this._type==="timeout"&&this._createTimeout()}_disposeClock(){this._timeout&&(clearTimeout(this._timeout),this._timeout=0),this._worker&&(this._worker.terminate(),this._worker.onmessage=null)}get updateInterval(){return this._updateInterval}set updateInterval(e){this._updateInterval=Math.max(e,128/44100),this._type==="worker"&&this._worker.postMessage(Math.max(e*1e3,1))}get type(){return this._type}set type(e){this._disposeClock(),this._type=e,this._createClock()}dispose(){this._disposeClock()}}function jc(i){return xH(i)}function La(i){return vH(i)}function Um(i){return yH(i)}function du(i){return _H(i)}function lN(i){return i instanceof AudioBuffer}function RH(i,e){return i==="value"||jc(e)||La(e)||lN(e)}function Pu(i,...e){if(!e.length)return i;const t=e.shift();if(zc(i)&&zc(t))for(const n in t)RH(n,t[n])?i[n]=t[n]:zc(t[n])?(i[n]||Object.assign(i,{[n]:{}}),Pu(i[n],t[n])):Object.assign(i,{[n]:t[n]});return Pu(i,...e)}function NH(i,e){return i.length===e.length&&i.every((t,n)=>e[n]===t)}function et(i,e,t=[],n){const s={},r=Array.from(e);if(zc(r[0])&&n&&!Reflect.has(r[0],n)&&(Object.keys(r[0]).some(a=>Reflect.has(i,a))||(Pu(s,{[n]:r[0]}),t.splice(t.indexOf(n),1),r.shift())),r.length===1&&zc(r[0]))Pu(s,r[0]);else for(let o=0;o<t.length;o++)It(r[o])&&(s[t[o]]=r[o]);return Pu(i,s)}function PH(i){return i.constructor.getDefaults()}function Du(i,e){return Ps(i)?e:i}function PE(i,e){return e.forEach(t=>{Reflect.has(i,t)&&delete i[t]}),i}/**
 * Tone.js
 * @author Yotam Mann
 * @license http://opensource.org/licenses/MIT MIT License
 * @copyright 2014-2019 Yotam Mann
 */class Zo{constructor(){this.debug=!1,this._wasDisposed=!1}static getDefaults(){return{}}log(...e){(this.debug||Gc&&this.toString()===Gc.TONE_DEBUG_CLASS)&&SH(this,...e)}dispose(){return this._wasDisposed=!0,this}get disposed(){return this._wasDisposed}toString(){return this.name}}Zo.version=pR;const cb=1e-6;function pg(i,e){return i>e+cb}function Ux(i,e){return pg(i,e)||Zs(i,e)}function uN(i,e){return i+cb<e}function Zs(i,e){return Math.abs(i-e)<cb}function DH(i,e,t){return Math.max(Math.min(i,t),e)}class $r extends Zo{constructor(){super(),this.name="Timeline",this._timeline=[];const e=et($r.getDefaults(),arguments,["memory"]);this.memory=e.memory,this.increasing=e.increasing}static getDefaults(){return{memory:1/0,increasing:!1}}get length(){return this._timeline.length}add(e){if(wt(Reflect.has(e,"time"),"Timeline: events must have a time attribute"),e.time=e.time.valueOf(),this.increasing&&this.length){const t=this._timeline[this.length-1];wt(Ux(e.time,t.time),"The time must be greater than or equal to the last scheduled time"),this._timeline.push(e)}else{const t=this._search(e.time);this._timeline.splice(t+1,0,e)}if(this.length>this.memory){const t=this.length-this.memory;this._timeline.splice(0,t)}return this}remove(e){const t=this._timeline.indexOf(e);return t!==-1&&this._timeline.splice(t,1),this}get(e,t="time"){const n=this._search(e,t);return n!==-1?this._timeline[n]:null}peek(){return this._timeline[0]}shift(){return this._timeline.shift()}getAfter(e,t="time"){const n=this._search(e,t);return n+1<this._timeline.length?this._timeline[n+1]:null}getBefore(e){const t=this._timeline.length;if(t>0&&this._timeline[t-1].time<e)return this._timeline[t-1];const n=this._search(e);return n-1>=0?this._timeline[n-1]:null}cancel(e){if(this._timeline.length>1){let t=this._search(e);if(t>=0)if(Zs(this._timeline[t].time,e)){for(let n=t;n>=0&&Zs(this._timeline[n].time,e);n--)t=n;this._timeline=this._timeline.slice(0,t)}else this._timeline=this._timeline.slice(0,t+1);else this._timeline=[]}else this._timeline.length===1&&Ux(this._timeline[0].time,e)&&(this._timeline=[]);return this}cancelBefore(e){const t=this._search(e);return t>=0&&(this._timeline=this._timeline.slice(t+1)),this}previousEvent(e){const t=this._timeline.indexOf(e);return t>0?this._timeline[t-1]:null}_search(e,t="time"){if(this._timeline.length===0)return-1;let n=0;const s=this._timeline.length;let r=s;if(s>0&&this._timeline[s-1][t]<=e)return s-1;for(;n<r;){let o=Math.floor(n+(r-n)/2);const a=this._timeline[o],c=this._timeline[o+1];if(Zs(a[t],e)){for(let l=o;l<this._timeline.length;l++){const u=this._timeline[l];if(Zs(u[t],e))o=l;else break}return o}else{if(uN(a[t],e)&&pg(c[t],e))return o;pg(a[t],e)?r=o:n=o+1}}return-1}_iterate(e,t=0,n=this._timeline.length-1){this._timeline.slice(t,n+1).forEach(e)}forEach(e){return this._iterate(e),this}forEachBefore(e,t){const n=this._search(e);return n!==-1&&this._iterate(t,0,n),this}forEachAfter(e,t){const n=this._search(e);return this._iterate(t,n+1),this}forEachBetween(e,t,n){let s=this._search(e),r=this._search(t);return s!==-1&&r!==-1?(this._timeline[s].time!==e&&(s+=1),this._timeline[r].time===t&&(r-=1),this._iterate(n,s,r)):s===-1&&this._iterate(n,0,r),this}forEachFrom(e,t){let n=this._search(e);for(;n>=0&&this._timeline[n].time>=e;)n--;return this._iterate(t,n+1),this}forEachAtTime(e,t){const n=this._search(e);if(n!==-1&&Zs(this._timeline[n].time,e)){let s=n;for(let r=n;r>=0&&Zs(this._timeline[r].time,e);r--)s=r;this._iterate(r=>{t(r)},s,n)}return this}dispose(){return super.dispose(),this._timeline=[],this}}const hN=[];function l_(i){hN.push(i)}function LH(i){hN.forEach(e=>e(i))}const dN=[];function u_(i){dN.push(i)}function IH(i){dN.forEach(e=>e(i))}class Lf extends Zo{constructor(){super(...arguments),this.name="Emitter"}on(e,t){return e.split(/\W+/).forEach(s=>{Ps(this._events)&&(this._events={}),this._events.hasOwnProperty(s)||(this._events[s]=[]),this._events[s].push(t)}),this}once(e,t){const n=(...s)=>{t(...s),this.off(e,n)};return this.on(e,n),this}off(e,t){return e.split(/\W+/).forEach(s=>{if(Ps(this._events)&&(this._events={}),this._events.hasOwnProperty(e))if(Ps(t))this._events[e]=[];else{const r=this._events[e];for(let o=r.length-1;o>=0;o--)r[o]===t&&r.splice(o,1)}}),this}emit(e,...t){if(this._events&&this._events.hasOwnProperty(e)){const n=this._events[e].slice(0);for(let s=0,r=n.length;s<r;s++)n[s].apply(this,t)}return this}static mixin(e){["on","once","off","emit"].forEach(t=>{const n=Object.getOwnPropertyDescriptor(Lf.prototype,t);Object.defineProperty(e.prototype,t,n)})}dispose(){return super.dispose(),this._events=void 0,this}}class fN extends Lf{constructor(){super(...arguments),this.isOffline=!1}toJSON(){return{}}}class If extends fN{constructor(){super(),this.name="Context",this._constants=new Map,this._timeouts=new $r,this._timeoutIds=0,this._initialized=!1,this.isOffline=!1,this._workletModules=new Map;const e=et(If.getDefaults(),arguments,["context"]);e.context?this._context=e.context:this._context=TH({latencyHint:e.latencyHint}),this._ticker=new CH(this.emit.bind(this,"tick"),e.clockSource,e.updateInterval),this.on("tick",this._timeoutLoop.bind(this)),this._context.onstatechange=()=>{this.emit("statechange",this.state)},this._setLatencyHint(e.latencyHint),this.lookAhead=e.lookAhead}static getDefaults(){return{clockSource:"worker",latencyHint:"interactive",lookAhead:.1,updateInterval:.05}}initialize(){return this._initialized||(LH(this),this._initialized=!0),this}createAnalyser(){return this._context.createAnalyser()}createOscillator(){return this._context.createOscillator()}createBufferSource(){return this._context.createBufferSource()}createBiquadFilter(){return this._context.createBiquadFilter()}createBuffer(e,t,n){return this._context.createBuffer(e,t,n)}createChannelMerger(e){return this._context.createChannelMerger(e)}createChannelSplitter(e){return this._context.createChannelSplitter(e)}createConstantSource(){return this._context.createConstantSource()}createConvolver(){return this._context.createConvolver()}createDelay(e){return this._context.createDelay(e)}createDynamicsCompressor(){return this._context.createDynamicsCompressor()}createGain(){return this._context.createGain()}createIIRFilter(e,t){return this._context.createIIRFilter(e,t)}createPanner(){return this._context.createPanner()}createPeriodicWave(e,t,n){return this._context.createPeriodicWave(e,t,n)}createStereoPanner(){return this._context.createStereoPanner()}createWaveShaper(){return this._context.createWaveShaper()}createMediaStreamSource(e){return wt(du(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamSource(e)}createMediaElementSource(e){return wt(du(this._context),"Not available if OfflineAudioContext"),this._context.createMediaElementSource(e)}createMediaStreamDestination(){return wt(du(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamDestination()}decodeAudioData(e){return this._context.decodeAudioData(e)}get currentTime(){return this._context.currentTime}get state(){return this._context.state}get sampleRate(){return this._context.sampleRate}get listener(){return this.initialize(),this._listener}set listener(e){wt(!this._initialized,"The listener cannot be set after initialization."),this._listener=e}get transport(){return this.initialize(),this._transport}set transport(e){wt(!this._initialized,"The transport cannot be set after initialization."),this._transport=e}get draw(){return this.initialize(),this._draw}set draw(e){wt(!this._initialized,"Draw cannot be set after initialization."),this._draw=e}get destination(){return this.initialize(),this._destination}set destination(e){wt(!this._initialized,"The destination cannot be set after initialization."),this._destination=e}createAudioWorkletNode(e,t){return AH(this.rawContext,e,t)}addAudioWorkletModule(e,t){return kn(this,void 0,void 0,function*(){wt(It(this.rawContext.audioWorklet),"AudioWorkletNode is only available in a secure context (https or localhost)"),this._workletModules.has(t)||this._workletModules.set(t,this.rawContext.audioWorklet.addModule(e)),yield this._workletModules.get(t)})}workletsAreReady(){return kn(this,void 0,void 0,function*(){const e=[];this._workletModules.forEach(t=>e.push(t)),yield Promise.all(e)})}get updateInterval(){return this._ticker.updateInterval}set updateInterval(e){this._ticker.updateInterval=e}get clockSource(){return this._ticker.type}set clockSource(e){this._ticker.type=e}get latencyHint(){return this._latencyHint}_setLatencyHint(e){let t=0;if(this._latencyHint=e,Fr(e))switch(e){case"interactive":t=.1;break;case"playback":t=.5;break;case"balanced":t=.25;break}this.lookAhead=t,this.updateInterval=t/2}get rawContext(){return this._context}now(){return this._context.currentTime+this.lookAhead}immediate(){return this._context.currentTime}resume(){return du(this._context)?this._context.resume():Promise.resolve()}close(){return kn(this,void 0,void 0,function*(){du(this._context)&&(yield this._context.close()),this._initialized&&IH(this)})}getConstant(e){if(this._constants.has(e))return this._constants.get(e);{const t=this._context.createBuffer(1,128,this._context.sampleRate),n=t.getChannelData(0);for(let r=0;r<n.length;r++)n[r]=e;const s=this._context.createBufferSource();return s.channelCount=1,s.channelCountMode="explicit",s.buffer=t,s.loop=!0,s.start(0),this._constants.set(e,s),s}}dispose(){return super.dispose(),this._ticker.dispose(),this._timeouts.dispose(),Object.keys(this._constants).map(e=>this._constants[e].disconnect()),this}_timeoutLoop(){const e=this.now();let t=this._timeouts.peek();for(;this._timeouts.length&&t&&t.time<=e;)t.callback(),this._timeouts.shift(),t=this._timeouts.peek()}setTimeout(e,t){this._timeoutIds++;const n=this.now();return this._timeouts.add({callback:e,id:this._timeoutIds,time:n+t}),this._timeoutIds}clearTimeout(e){return this._timeouts.forEach(t=>{t.id===e&&this._timeouts.remove(t)}),this}clearInterval(e){return this.clearTimeout(e)}setInterval(e,t){const n=++this._timeoutIds,s=()=>{const r=this.now();this._timeouts.add({callback:()=>{e(),s()},id:n,time:r+t})};return s(),n}}class FH extends fN{constructor(){super(...arguments),this.lookAhead=0,this.latencyHint=0,this.isOffline=!1}createAnalyser(){return{}}createOscillator(){return{}}createBufferSource(){return{}}createBiquadFilter(){return{}}createBuffer(e,t,n){return{}}createChannelMerger(e){return{}}createChannelSplitter(e){return{}}createConstantSource(){return{}}createConvolver(){return{}}createDelay(e){return{}}createDynamicsCompressor(){return{}}createGain(){return{}}createIIRFilter(e,t){return{}}createPanner(){return{}}createPeriodicWave(e,t,n){return{}}createStereoPanner(){return{}}createWaveShaper(){return{}}createMediaStreamSource(e){return{}}createMediaElementSource(e){return{}}createMediaStreamDestination(){return{}}decodeAudioData(e){return Promise.resolve({})}createAudioWorkletNode(e,t){return{}}get rawContext(){return{}}addAudioWorkletModule(e,t){return kn(this,void 0,void 0,function*(){return Promise.resolve()})}resume(){return Promise.resolve()}setTimeout(e,t){return 0}clearTimeout(e){return this}setInterval(e,t){return 0}clearInterval(e){return this}getConstant(e){return{}}get currentTime(){return 0}get state(){return{}}get sampleRate(){return 0}get listener(){return{}}get transport(){return{}}get draw(){return{}}set draw(e){}get destination(){return{}}set destination(e){}now(){return 0}immediate(){return 0}}function En(i,e){ur(e)?e.forEach(t=>En(i,t)):Object.defineProperty(i,e,{enumerable:!0,writable:!1})}function pN(i,e){ur(e)?e.forEach(t=>pN(i,t)):Object.defineProperty(i,e,{writable:!0})}const sn=()=>{};class rn extends Zo{constructor(){super(),this.name="ToneAudioBuffer",this.onload=sn;const e=et(rn.getDefaults(),arguments,["url","onload","onerror"]);this.reverse=e.reverse,this.onload=e.onload,e.url&&lN(e.url)||e.url instanceof rn?this.set(e.url):Fr(e.url)&&this.load(e.url).catch(e.onerror)}static getDefaults(){return{onerror:sn,onload:sn,reverse:!1}}get sampleRate(){return this._buffer?this._buffer.sampleRate:nr().sampleRate}set(e){return e instanceof rn?e.loaded?this._buffer=e.get():e.onload=()=>{this.set(e),this.onload(this)}:this._buffer=e,this._reversed&&this._reverse(),this}get(){return this._buffer}load(e){return kn(this,void 0,void 0,function*(){const t=rn.load(e).then(n=>{this.set(n),this.onload(this)});rn.downloads.push(t);try{yield t}finally{const n=rn.downloads.indexOf(t);rn.downloads.splice(n,1)}return this})}dispose(){return super.dispose(),this._buffer=void 0,this}fromArray(e){const t=ur(e)&&e[0].length>0,n=t?e.length:1,s=t?e[0].length:e.length,r=nr(),o=r.createBuffer(n,s,r.sampleRate),a=!t&&n===1?[e]:e;for(let c=0;c<n;c++)o.copyToChannel(a[c],c);return this._buffer=o,this}toMono(e){if(Xc(e))this.fromArray(this.toArray(e));else{let t=new Float32Array(this.length);const n=this.numberOfChannels;for(let s=0;s<n;s++){const r=this.toArray(s);for(let o=0;o<r.length;o++)t[o]+=r[o]}t=t.map(s=>s/n),this.fromArray(t)}return this}toArray(e){if(Xc(e))return this.getChannelData(e);if(this.numberOfChannels===1)return this.toArray(0);{const t=[];for(let n=0;n<this.numberOfChannels;n++)t[n]=this.getChannelData(n);return t}}getChannelData(e){return this._buffer?this._buffer.getChannelData(e):new Float32Array(0)}slice(e,t=this.duration){const n=Math.floor(e*this.sampleRate),s=Math.floor(t*this.sampleRate);wt(n<s,"The start time must be less than the end time");const r=s-n,o=nr().createBuffer(this.numberOfChannels,r,this.sampleRate);for(let a=0;a<this.numberOfChannels;a++)o.copyToChannel(this.getChannelData(a).subarray(n,s),a);return new rn(o)}_reverse(){if(this.loaded)for(let e=0;e<this.numberOfChannels;e++)this.getChannelData(e).reverse();return this}get loaded(){return this.length>0}get duration(){return this._buffer?this._buffer.duration:0}get length(){return this._buffer?this._buffer.length:0}get numberOfChannels(){return this._buffer?this._buffer.numberOfChannels:0}get reverse(){return this._reversed}set reverse(e){this._reversed!==e&&(this._reversed=e,this._reverse())}static fromArray(e){return new rn().fromArray(e)}static fromUrl(e){return kn(this,void 0,void 0,function*(){return yield new rn().load(e)})}static load(e){return kn(this,void 0,void 0,function*(){const t=e.match(/\[([^\]\[]+\|.+)\]$/);if(t){const a=t[1].split("|");let c=a[0];for(const l of a)if(rn.supportsType(l)){c=l;break}e=e.replace(t[0],c)}const n=rn.baseUrl===""||rn.baseUrl.endsWith("/")?rn.baseUrl:rn.baseUrl+"/",s=yield fetch(n+e);if(!s.ok)throw new Error(`could not load url: ${e}`);const r=yield s.arrayBuffer();return yield nr().decodeAudioData(r)})}static supportsType(e){const t=e.split("."),n=t[t.length-1];return document.createElement("audio").canPlayType("audio/"+n)!==""}static loaded(){return kn(this,void 0,void 0,function*(){for(yield Promise.resolve();rn.downloads.length;)yield rn.downloads[0]})}}rn.baseUrl="";rn.downloads=[];class lb extends If{constructor(){super({clockSource:"offline",context:Um(arguments[0])?arguments[0]:EH(arguments[0],arguments[1]*arguments[2],arguments[2]),lookAhead:0,updateInterval:Um(arguments[0])?128/arguments[0].sampleRate:128/arguments[2]}),this.name="OfflineContext",this._currentTime=0,this.isOffline=!0,this._duration=Um(arguments[0])?arguments[0].length/arguments[0].sampleRate:arguments[1]}now(){return this._currentTime}get currentTime(){return this._currentTime}_renderClock(e){return kn(this,void 0,void 0,function*(){let t=0;for(;this._duration-this._currentTime>=0;){this.emit("tick"),this._currentTime+=128/this.sampleRate,t++;const n=Math.floor(this.sampleRate/128);e&&t%n===0&&(yield new Promise(s=>setTimeout(s,1)))}})}render(e=!0){return kn(this,void 0,void 0,function*(){yield this.workletsAreReady(),yield this._renderClock(e);const t=yield this._context.startRendering();return new rn(t)})}close(){return Promise.resolve()}}const mN=new FH;let Lu=mN;function nr(){return Lu===mN&&wH&&UH(new If),Lu}function UH(i){du(i)?Lu=new If(i):Um(i)?Lu=new lb(i):Lu=i}function OH(){return Lu.resume()}if(Gc&&!Gc.TONE_SILENCE_LOGGING){const e=` * Tone.js v${pR} * `;console.log(`%c${e}`,"background: #000; color: #fff")}function BH(i){return Math.pow(10,i/20)}function kH(i){return 20*(Math.log(i)/Math.LN10)}function gN(i){return Math.pow(2,i/12)}let h_=440;function zH(){return h_}function GH(i){h_=i}function Ox(i){return Math.round(_N(i))}function _N(i){return 69+12*Math.log2(i/h_)}function VH(i){return h_*Math.pow(2,(i-69)/12)}class ub extends Zo{constructor(e,t,n){super(),this.defaultUnits="s",this._val=t,this._units=n,this.context=e,this._expressions=this._getExpressions()}_getExpressions(){return{hz:{method:e=>this._frequencyToUnits(parseFloat(e)),regexp:/^(\d+(?:\.\d+)?)hz$/i},i:{method:e=>this._ticksToUnits(parseInt(e,10)),regexp:/^(\d+)i$/i},m:{method:e=>this._beatsToUnits(parseInt(e,10)*this._getTimeSignature()),regexp:/^(\d+)m$/i},n:{method:(e,t)=>{const n=parseInt(e,10),s=t==="."?1.5:1;return n===1?this._beatsToUnits(this._getTimeSignature())*s:this._beatsToUnits(4/n)*s},regexp:/^(\d+)n(\.?)$/i},number:{method:e=>this._expressions[this.defaultUnits].method.call(this,e),regexp:/^(\d+(?:\.\d+)?)$/},s:{method:e=>this._secondsToUnits(parseFloat(e)),regexp:/^(\d+(?:\.\d+)?)s$/},samples:{method:e=>parseInt(e,10)/this.context.sampleRate,regexp:/^(\d+)samples$/},t:{method:e=>{const t=parseInt(e,10);return this._beatsToUnits(8/(Math.floor(t)*3))},regexp:/^(\d+)t$/i},tr:{method:(e,t,n)=>{let s=0;return e&&e!=="0"&&(s+=this._beatsToUnits(this._getTimeSignature()*parseFloat(e))),t&&t!=="0"&&(s+=this._beatsToUnits(parseFloat(t))),n&&n!=="0"&&(s+=this._beatsToUnits(parseFloat(n)/4)),s},regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?$/}}}valueOf(){if(this._val instanceof ub&&this.fromType(this._val),Ps(this._val))return this._noArg();if(Fr(this._val)&&Ps(this._units)){for(const e in this._expressions)if(this._expressions[e].regexp.test(this._val.trim())){this._units=e;break}}else if(zc(this._val)){let e=0;for(const t in this._val)if(It(this._val[t])){const n=this._val[t],s=new this.constructor(this.context,t).valueOf()*n;e+=s}return e}if(It(this._units)){const e=this._expressions[this._units],t=this._val.toString().trim().match(e.regexp);return t?e.method.apply(this,t.slice(1)):e.method.call(this,this._val)}else return Fr(this._val)?parseFloat(this._val):this._val}_frequencyToUnits(e){return 1/e}_beatsToUnits(e){return 60/this._getBpm()*e}_secondsToUnits(e){return e}_ticksToUnits(e){return e*this._beatsToUnits(1)/this._getPPQ()}_noArg(){return this._now()}_getBpm(){return this.context.transport.bpm.value}_getTimeSignature(){return this.context.transport.timeSignature}_getPPQ(){return this.context.transport.PPQ}fromType(e){switch(this._units=void 0,this.defaultUnits){case"s":this._val=e.toSeconds();break;case"i":this._val=e.toTicks();break;case"hz":this._val=e.toFrequency();break;case"midi":this._val=e.toMidi();break}return this}toFrequency(){return 1/this.toSeconds()}toSamples(){return this.toSeconds()*this.context.sampleRate}toMilliseconds(){return this.toSeconds()*1e3}}class ir extends ub{constructor(){super(...arguments),this.name="TimeClass"}_getExpressions(){return Object.assign(super._getExpressions(),{now:{method:e=>this._now()+new this.constructor(this.context,e).valueOf(),regexp:/^\+(.+)/},quantize:{method:e=>{const t=new ir(this.context,e).valueOf();return this._secondsToUnits(this.context.transport.nextSubdivision(t))},regexp:/^@(.+)/}})}quantize(e,t=1){const n=new this.constructor(this.context,e).valueOf(),s=this.valueOf(),a=Math.round(s/n)*n-s;return s+a*t}toNotation(){const e=this.toSeconds(),t=["1m"];for(let r=1;r<9;r++){const o=Math.pow(2,r);t.push(o+"n."),t.push(o+"n"),t.push(o+"t")}t.push("0");let n=t[0],s=new ir(this.context,t[0]).toSeconds();return t.forEach(r=>{const o=new ir(this.context,r).toSeconds();Math.abs(o-e)<Math.abs(s-e)&&(n=r,s=o)}),n}toBarsBeatsSixteenths(){const e=this._beatsToUnits(1);let t=this.valueOf()/e;t=parseFloat(t.toFixed(4));const n=Math.floor(t/this._getTimeSignature());let s=t%1*4;t=Math.floor(t)%this._getTimeSignature();const r=s.toString();return r.length>3&&(s=parseFloat(parseFloat(r).toFixed(3))),[n,t,s].join(":")}toTicks(){const e=this._beatsToUnits(1),t=this.valueOf()/e;return Math.round(t*this._getPPQ())}toSeconds(){return this.valueOf()}toMidi(){return Ox(this.toFrequency())}_now(){return this.context.now()}}class Ns extends ir{constructor(){super(...arguments),this.name="Frequency",this.defaultUnits="hz"}static get A4(){return zH()}static set A4(e){GH(e)}_getExpressions(){return Object.assign({},super._getExpressions(),{midi:{regexp:/^(\d+(?:\.\d+)?midi)/,method(e){return this.defaultUnits==="midi"?e:Ns.mtof(e)}},note:{regexp:/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,method(e,t){const s=HH[e.toLowerCase()]+(parseInt(t,10)+1)*12;return this.defaultUnits==="midi"?s:Ns.mtof(s)}},tr:{regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,method(e,t,n){let s=1;return e&&e!=="0"&&(s*=this._beatsToUnits(this._getTimeSignature()*parseFloat(e))),t&&t!=="0"&&(s*=this._beatsToUnits(parseFloat(t))),n&&n!=="0"&&(s*=this._beatsToUnits(parseFloat(n)/4)),s}}})}transpose(e){return new Ns(this.context,this.valueOf()*gN(e))}harmonize(e){return e.map(t=>this.transpose(t))}toMidi(){return Ox(this.valueOf())}toNote(){const e=this.toFrequency(),t=Math.log2(e/Ns.A4);let n=Math.round(12*t)+57;const s=Math.floor(n/12);return s<0&&(n+=-12*s),WH[n%12]+s.toString()}toSeconds(){return 1/super.toSeconds()}toTicks(){const e=this._beatsToUnits(1),t=this.valueOf()/e;return Math.floor(t*this._getPPQ())}_noArg(){return 0}_frequencyToUnits(e){return e}_ticksToUnits(e){return 1/(e*60/(this._getBpm()*this._getPPQ()))}_beatsToUnits(e){return 1/super._beatsToUnits(e)}_secondsToUnits(e){return 1/e}static mtof(e){return VH(e)}static ftom(e){return Ox(e)}}const HH={cbb:-2,cb:-1,c:0,"c#":1,cx:2,dbb:0,db:1,d:2,"d#":3,dx:4,ebb:2,eb:3,e:4,"e#":5,ex:6,fbb:3,fb:4,f:5,"f#":6,fx:7,gbb:5,gb:6,g:7,"g#":8,gx:9,abb:7,ab:8,a:9,"a#":10,ax:11,bbb:9,bb:10,b:11,"b#":12,bx:13},WH=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"];class Pd extends ir{constructor(){super(...arguments),this.name="TransportTime"}_now(){return this.context.transport.seconds}}class Yi extends Zo{constructor(){super();const e=et(Yi.getDefaults(),arguments,["context"]);this.defaultContext?this.context=this.defaultContext:this.context=e.context}static getDefaults(){return{context:nr()}}now(){return this.context.currentTime+this.context.lookAhead}immediate(){return this.context.currentTime}get sampleTime(){return 1/this.context.sampleRate}get blockTime(){return 128/this.context.sampleRate}toSeconds(e){return new ir(this.context,e).toSeconds()}toFrequency(e){return new Ns(this.context,e).toFrequency()}toTicks(e){return new Pd(this.context,e).toTicks()}_getPartialProperties(e){const t=this.get();return Object.keys(t).forEach(n=>{Ps(e[n])&&delete t[n]}),t}get(){const e=PH(this);return Object.keys(e).forEach(t=>{if(Reflect.has(this,t)){const n=this[t];It(n)&&It(n.value)&&It(n.setValueAtTime)?e[t]=n.value:n instanceof Yi?e[t]=n._getPartialProperties(e[t]):ur(n)||Xc(n)||Fr(n)||MH(n)?e[t]=n:delete e[t]}}),e}set(e){return Object.keys(e).forEach(t=>{Reflect.has(this,t)&&It(this[t])&&(this[t]&&It(this[t].value)&&It(this[t].setValueAtTime)?this[t].value!==e[t]&&(this[t].value=e[t]):this[t]instanceof Yi?this[t].set(e[t]):this[t]=e[t])}),this}}class hb extends $r{constructor(e="stopped"){super(),this.name="StateTimeline",this._initial=e,this.setStateAtTime(this._initial,0)}getValueAtTime(e){const t=this.get(e);return t!==null?t.state:this._initial}setStateAtTime(e,t,n){return Ga(t,0),this.add(Object.assign({},n,{state:e,time:t})),this}getLastState(e,t){const n=this._search(t);for(let s=n;s>=0;s--){const r=this._timeline[s];if(r.state===e)return r}}getNextState(e,t){const n=this._search(t);if(n!==-1)for(let s=n;s<this._timeline.length;s++){const r=this._timeline[s];if(r.state===e)return r}}}class pn extends Yi{constructor(){super(et(pn.getDefaults(),arguments,["param","units","convert"])),this.name="Param",this.overridden=!1,this._minOutput=1e-7;const e=et(pn.getDefaults(),arguments,["param","units","convert"]);for(wt(It(e.param)&&(jc(e.param)||e.param instanceof pn),"param must be an AudioParam");!jc(e.param);)e.param=e.param._param;this._swappable=It(e.swappable)?e.swappable:!1,this._swappable?(this.input=this.context.createGain(),this._param=e.param,this.input.connect(this._param)):this._param=this.input=e.param,this._events=new $r(1e3),this._initialValue=this._param.defaultValue,this.units=e.units,this.convert=e.convert,this._minValue=e.minValue,this._maxValue=e.maxValue,It(e.value)&&e.value!==this._toType(this._initialValue)&&this.setValueAtTime(e.value,0)}static getDefaults(){return Object.assign(Yi.getDefaults(),{convert:!0,units:"number"})}get value(){const e=this.now();return this.getValueAtTime(e)}set value(e){this.cancelScheduledValues(this.now()),this.setValueAtTime(e,this.now())}get minValue(){return It(this._minValue)?this._minValue:this.units==="time"||this.units==="frequency"||this.units==="normalRange"||this.units==="positive"||this.units==="transportTime"||this.units==="ticks"||this.units==="bpm"||this.units==="hertz"||this.units==="samples"?0:this.units==="audioRange"?-1:this.units==="decibels"?-1/0:this._param.minValue}get maxValue(){return It(this._maxValue)?this._maxValue:this.units==="normalRange"||this.units==="audioRange"?1:this._param.maxValue}_is(e,t){return this.units===t}_assertRange(e){return It(this.maxValue)&&It(this.minValue)&&Ga(e,this._fromType(this.minValue),this._fromType(this.maxValue)),e}_fromType(e){return this.convert&&!this.overridden?this._is(e,"time")?this.toSeconds(e):this._is(e,"decibels")?BH(e):this._is(e,"frequency")?this.toFrequency(e):e:this.overridden?0:e}_toType(e){return this.convert&&this.units==="decibels"?kH(e):e}setValueAtTime(e,t){const n=this.toSeconds(t),s=this._fromType(e);return wt(isFinite(s)&&isFinite(n),`Invalid argument(s) to setValueAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`),this._assertRange(s),this.log(this.units,"setValueAtTime",e,n),this._events.add({time:n,type:"setValueAtTime",value:s}),this._param.setValueAtTime(s,n),this}getValueAtTime(e){const t=Math.max(this.toSeconds(e),0),n=this._events.getAfter(t),s=this._events.get(t);let r=this._initialValue;if(s===null)r=this._initialValue;else if(s.type==="setTargetAtTime"&&(n===null||n.type==="setValueAtTime")){const o=this._events.getBefore(s.time);let a;o===null?a=this._initialValue:a=o.value,s.type==="setTargetAtTime"&&(r=this._exponentialApproach(s.time,a,s.value,s.constant,t))}else if(n===null)r=s.value;else if(n.type==="linearRampToValueAtTime"||n.type==="exponentialRampToValueAtTime"){let o=s.value;if(s.type==="setTargetAtTime"){const a=this._events.getBefore(s.time);a===null?o=this._initialValue:o=a.value}n.type==="linearRampToValueAtTime"?r=this._linearInterpolate(s.time,o,n.time,n.value,t):r=this._exponentialInterpolate(s.time,o,n.time,n.value,t)}else r=s.value;return this._toType(r)}setRampPoint(e){e=this.toSeconds(e);let t=this.getValueAtTime(e);return this.cancelAndHoldAtTime(e),this._fromType(t)===0&&(t=this._toType(this._minOutput)),this.setValueAtTime(t,e),this}linearRampToValueAtTime(e,t){const n=this._fromType(e),s=this.toSeconds(t);return wt(isFinite(n)&&isFinite(s),`Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`),this._assertRange(n),this._events.add({time:s,type:"linearRampToValueAtTime",value:n}),this.log(this.units,"linearRampToValueAtTime",e,s),this._param.linearRampToValueAtTime(n,s),this}exponentialRampToValueAtTime(e,t){let n=this._fromType(e);n=Zs(n,0)?this._minOutput:n,this._assertRange(n);const s=this.toSeconds(t);return wt(isFinite(n)&&isFinite(s),`Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`),this._events.add({time:s,type:"exponentialRampToValueAtTime",value:n}),this.log(this.units,"exponentialRampToValueAtTime",e,s),this._param.exponentialRampToValueAtTime(n,s),this}exponentialRampTo(e,t,n){return n=this.toSeconds(n),this.setRampPoint(n),this.exponentialRampToValueAtTime(e,n+this.toSeconds(t)),this}linearRampTo(e,t,n){return n=this.toSeconds(n),this.setRampPoint(n),this.linearRampToValueAtTime(e,n+this.toSeconds(t)),this}targetRampTo(e,t,n){return n=this.toSeconds(n),this.setRampPoint(n),this.exponentialApproachValueAtTime(e,n,t),this}exponentialApproachValueAtTime(e,t,n){t=this.toSeconds(t),n=this.toSeconds(n);const s=Math.log(n+1)/Math.log(200);return this.setTargetAtTime(e,t,s),this.cancelAndHoldAtTime(t+n*.9),this.linearRampToValueAtTime(e,t+n),this}setTargetAtTime(e,t,n){const s=this._fromType(e);wt(isFinite(n)&&n>0,"timeConstant must be a number greater than 0");const r=this.toSeconds(t);return this._assertRange(s),wt(isFinite(s)&&isFinite(r),`Invalid argument(s) to setTargetAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`),this._events.add({constant:n,time:r,type:"setTargetAtTime",value:s}),this.log(this.units,"setTargetAtTime",e,r,n),this._param.setTargetAtTime(s,r,n),this}setValueCurveAtTime(e,t,n,s=1){n=this.toSeconds(n),t=this.toSeconds(t);const r=this._fromType(e[0])*s;this.setValueAtTime(this._toType(r),t);const o=n/(e.length-1);for(let a=1;a<e.length;a++){const c=this._fromType(e[a])*s;this.linearRampToValueAtTime(this._toType(c),t+a*o)}return this}cancelScheduledValues(e){const t=this.toSeconds(e);return wt(isFinite(t),`Invalid argument to cancelScheduledValues: ${JSON.stringify(e)}`),this._events.cancel(t),this._param.cancelScheduledValues(t),this.log(this.units,"cancelScheduledValues",t),this}cancelAndHoldAtTime(e){const t=this.toSeconds(e),n=this._fromType(this.getValueAtTime(t));wt(isFinite(t),`Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(e)}`),this.log(this.units,"cancelAndHoldAtTime",t,"value="+n);const s=this._events.get(t),r=this._events.getAfter(t);return s&&Zs(s.time,t)?r?(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time)):(this._param.cancelAndHoldAtTime(t),this._events.cancel(t+this.sampleTime)):r&&(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time),r.type==="linearRampToValueAtTime"?this.linearRampToValueAtTime(this._toType(n),t):r.type==="exponentialRampToValueAtTime"&&this.exponentialRampToValueAtTime(this._toType(n),t)),this._events.add({time:t,type:"setValueAtTime",value:n}),this._param.setValueAtTime(n,t),this}rampTo(e,t=.1,n){return this.units==="frequency"||this.units==="bpm"||this.units==="decibels"?this.exponentialRampTo(e,t,n):this.linearRampTo(e,t,n),this}apply(e){const t=this.context.currentTime;e.setValueAtTime(this.getValueAtTime(t),t);const n=this._events.get(t);if(n&&n.type==="setTargetAtTime"){const s=this._events.getAfter(n.time),r=s?s.time:t+2,o=(r-t)/10;for(let a=t;a<r;a+=o)e.linearRampToValueAtTime(this.getValueAtTime(a),a)}return this._events.forEachAfter(this.context.currentTime,s=>{s.type==="cancelScheduledValues"?e.cancelScheduledValues(s.time):s.type==="setTargetAtTime"?e.setTargetAtTime(s.value,s.time,s.constant):e[s.type](s.value,s.time)}),this}setParam(e){wt(this._swappable,"The Param must be assigned as 'swappable' in the constructor");const t=this.input;return t.disconnect(this._param),this.apply(e),this._param=e,t.connect(this._param),this}dispose(){return super.dispose(),this._events.dispose(),this}get defaultValue(){return this._toType(this._param.defaultValue)}_exponentialApproach(e,t,n,s,r){return n+(t-n)*Math.exp(-(r-e)/s)}_linearInterpolate(e,t,n,s,r){return t+(s-t)*((r-e)/(n-e))}_exponentialInterpolate(e,t,n,s,r){return t*Math.pow(s/t,(r-e)/(n-e))}}class Lt extends Yi{constructor(){super(...arguments),this.name="ToneAudioNode",this._internalChannels=[]}get numberOfInputs(){return It(this.input)?jc(this.input)||this.input instanceof pn?1:this.input.numberOfInputs:0}get numberOfOutputs(){return It(this.output)?this.output.numberOfOutputs:0}_isAudioNode(e){return It(e)&&(e instanceof Lt||La(e))}_getInternalNodes(){const e=this._internalChannels.slice(0);return this._isAudioNode(this.input)&&e.push(this.input),this._isAudioNode(this.output)&&this.input!==this.output&&e.push(this.output),e}_setChannelProperties(e){this._getInternalNodes().forEach(n=>{n.channelCount=e.channelCount,n.channelCountMode=e.channelCountMode,n.channelInterpretation=e.channelInterpretation})}_getChannelProperties(){const e=this._getInternalNodes();wt(e.length>0,"ToneAudioNode does not have any internal nodes");const t=e[0];return{channelCount:t.channelCount,channelCountMode:t.channelCountMode,channelInterpretation:t.channelInterpretation}}get channelCount(){return this._getChannelProperties().channelCount}set channelCount(e){const t=this._getChannelProperties();this._setChannelProperties(Object.assign(t,{channelCount:e}))}get channelCountMode(){return this._getChannelProperties().channelCountMode}set channelCountMode(e){const t=this._getChannelProperties();this._setChannelProperties(Object.assign(t,{channelCountMode:e}))}get channelInterpretation(){return this._getChannelProperties().channelInterpretation}set channelInterpretation(e){const t=this._getChannelProperties();this._setChannelProperties(Object.assign(t,{channelInterpretation:e}))}connect(e,t=0,n=0){return wh(this,e,t,n),this}toDestination(){return this.connect(this.context.destination),this}toMaster(){return cN("toMaster() has been renamed toDestination()"),this.toDestination()}disconnect(e,t=0,n=0){return $H(this,e,t,n),this}chain(...e){return Bx(this,...e),this}fan(...e){return e.forEach(t=>this.connect(t)),this}dispose(){return super.dispose(),It(this.input)&&(this.input instanceof Lt?this.input.dispose():La(this.input)&&this.input.disconnect()),It(this.output)&&(this.output instanceof Lt?this.output.dispose():La(this.output)&&this.output.disconnect()),this._internalChannels=[],this}}function Bx(...i){const e=i.shift();i.reduce((t,n)=>(t instanceof Lt?t.connect(n):La(t)&&wh(t,n),n),e)}function wh(i,e,t=0,n=0){for(wt(It(i),"Cannot connect from undefined node"),wt(It(e),"Cannot connect to undefined node"),(e instanceof Lt||La(e))&&wt(e.numberOfInputs>0,"Cannot connect to node with no inputs"),wt(i.numberOfOutputs>0,"Cannot connect from node with no outputs");e instanceof Lt||e instanceof pn;)It(e.input)&&(e=e.input);for(;i instanceof Lt;)It(i.output)&&(i=i.output);jc(e)?i.connect(e,t):i.connect(e,t,n)}function $H(i,e,t=0,n=0){if(It(e))for(;e instanceof Lt;)e=e.input;for(;!La(i);)It(i.output)&&(i=i.output);jc(e)?i.disconnect(e,t):La(e)?i.disconnect(e,t,n):i.disconnect()}class Oi extends Lt{constructor(){super(et(Oi.getDefaults(),arguments,["gain","units"])),this.name="Gain",this._gainNode=this.context.createGain(),this.input=this._gainNode,this.output=this._gainNode;const e=et(Oi.getDefaults(),arguments,["gain","units"]);this.gain=new pn({context:this.context,convert:e.convert,param:this._gainNode.gain,units:e.units,value:e.gain,minValue:e.minValue,maxValue:e.maxValue}),En(this,"gain")}static getDefaults(){return Object.assign(Lt.getDefaults(),{convert:!0,gain:1,units:"gain"})}dispose(){return super.dispose(),this._gainNode.disconnect(),this.gain.dispose(),this}}class Ju extends Lt{constructor(e){super(e),this.onended=sn,this._startTime=-1,this._stopTime=-1,this._timeout=-1,this.output=new Oi({context:this.context,gain:0}),this._gainNode=this.output,this.getStateAtTime=function(t){const n=this.toSeconds(t);return this._startTime!==-1&&n>=this._startTime&&(this._stopTime===-1||n<=this._stopTime)?"started":"stopped"},this._fadeIn=e.fadeIn,this._fadeOut=e.fadeOut,this._curve=e.curve,this.onended=e.onended}static getDefaults(){return Object.assign(Lt.getDefaults(),{curve:"linear",fadeIn:0,fadeOut:0,onended:sn})}_startGain(e,t=1){wt(this._startTime===-1,"Source cannot be started more than once");const n=this.toSeconds(this._fadeIn);return this._startTime=e+n,this._startTime=Math.max(this._startTime,this.context.currentTime),n>0?(this._gainNode.gain.setValueAtTime(0,e),this._curve==="linear"?this._gainNode.gain.linearRampToValueAtTime(t,e+n):this._gainNode.gain.exponentialApproachValueAtTime(t,e,n)):this._gainNode.gain.setValueAtTime(t,e),this}stop(e){return this.log("stop",e),this._stopGain(this.toSeconds(e)),this}_stopGain(e){wt(this._startTime!==-1,"'start' must be called before 'stop'"),this.cancelStop();const t=this.toSeconds(this._fadeOut);return this._stopTime=this.toSeconds(e)+t,this._stopTime=Math.max(this._stopTime,this.context.currentTime),t>0?this._curve==="linear"?this._gainNode.gain.linearRampTo(0,t,e):this._gainNode.gain.targetRampTo(0,t,e):(this._gainNode.gain.cancelAndHoldAtTime(e),this._gainNode.gain.setValueAtTime(0,e)),this.context.clearTimeout(this._timeout),this._timeout=this.context.setTimeout(()=>{const n=this._curve==="exponential"?t*2:0;this._stopSource(this.now()+n),this._onended()},this._stopTime-this.context.currentTime),this}_onended(){if(this.onended!==sn&&(this.onended(this),this.onended=sn,!this.context.isOffline)){const e=()=>this.dispose();typeof window.requestIdleCallback<"u"?window.requestIdleCallback(e):setTimeout(e,1e3)}}get state(){return this.getStateAtTime(this.now())}cancelStop(){return this.log("cancelStop"),wt(this._startTime!==-1,"Source is not started"),this._gainNode.gain.cancelScheduledValues(this._startTime+this.sampleTime),this.context.clearTimeout(this._timeout),this._stopTime=-1,this}dispose(){return super.dispose(),this._gainNode.disconnect(),this}}class mg extends Ju{constructor(){super(et(mg.getDefaults(),arguments,["offset"])),this.name="ToneConstantSource",this._source=this.context.createConstantSource();const e=et(mg.getDefaults(),arguments,["offset"]);wh(this._source,this._gainNode),this.offset=new pn({context:this.context,convert:e.convert,param:this._source.offset,units:e.units,value:e.offset,minValue:e.minValue,maxValue:e.maxValue})}static getDefaults(){return Object.assign(Ju.getDefaults(),{convert:!0,offset:1,units:"number"})}start(e){const t=this.toSeconds(e);return this.log("start",t),this._startGain(t),this._source.start(t),this}_stopSource(e){this._source.stop(e)}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._source.disconnect(),this.offset.dispose(),this}}class jn extends Lt{constructor(){super(et(jn.getDefaults(),arguments,["value","units"])),this.name="Signal",this.override=!0;const e=et(jn.getDefaults(),arguments,["value","units"]);this.output=this._constantSource=new mg({context:this.context,convert:e.convert,offset:e.value,units:e.units,minValue:e.minValue,maxValue:e.maxValue}),this._constantSource.start(0),this.input=this._param=this._constantSource.offset}static getDefaults(){return Object.assign(Lt.getDefaults(),{convert:!0,units:"number",value:0})}connect(e,t=0,n=0){return db(this,e,t,n),this}dispose(){return super.dispose(),this._param.dispose(),this._constantSource.dispose(),this}setValueAtTime(e,t){return this._param.setValueAtTime(e,t),this}getValueAtTime(e){return this._param.getValueAtTime(e)}setRampPoint(e){return this._param.setRampPoint(e),this}linearRampToValueAtTime(e,t){return this._param.linearRampToValueAtTime(e,t),this}exponentialRampToValueAtTime(e,t){return this._param.exponentialRampToValueAtTime(e,t),this}exponentialRampTo(e,t,n){return this._param.exponentialRampTo(e,t,n),this}linearRampTo(e,t,n){return this._param.linearRampTo(e,t,n),this}targetRampTo(e,t,n){return this._param.targetRampTo(e,t,n),this}exponentialApproachValueAtTime(e,t,n){return this._param.exponentialApproachValueAtTime(e,t,n),this}setTargetAtTime(e,t,n){return this._param.setTargetAtTime(e,t,n),this}setValueCurveAtTime(e,t,n,s){return this._param.setValueCurveAtTime(e,t,n,s),this}cancelScheduledValues(e){return this._param.cancelScheduledValues(e),this}cancelAndHoldAtTime(e){return this._param.cancelAndHoldAtTime(e),this}rampTo(e,t,n){return this._param.rampTo(e,t,n),this}get value(){return this._param.value}set value(e){this._param.value=e}get convert(){return this._param.convert}set convert(e){this._param.convert=e}get units(){return this._param.units}get overridden(){return this._param.overridden}set overridden(e){this._param.overridden=e}get maxValue(){return this._param.maxValue}get minValue(){return this._param.minValue}apply(e){return this._param.apply(e),this}}function db(i,e,t,n){(e instanceof pn||jc(e)||e instanceof jn&&e.override)&&(e.cancelScheduledValues(0),e.setValueAtTime(0,0),e instanceof jn&&(e.overridden=!0)),wh(i,e,t,n)}class gg extends pn{constructor(){super(et(gg.getDefaults(),arguments,["value"])),this.name="TickParam",this._events=new $r(1/0),this._multiplier=1;const e=et(gg.getDefaults(),arguments,["value"]);this._multiplier=e.multiplier,this._events.cancel(0),this._events.add({ticks:0,time:0,type:"setValueAtTime",value:this._fromType(e.value)}),this.setValueAtTime(e.value,0)}static getDefaults(){return Object.assign(pn.getDefaults(),{multiplier:1,units:"hertz",value:1})}setTargetAtTime(e,t,n){t=this.toSeconds(t),this.setRampPoint(t);const s=this._fromType(e),r=this._events.get(t),o=Math.round(Math.max(1/n,1));for(let a=0;a<=o;a++){const c=n*a+t,l=this._exponentialApproach(r.time,r.value,s,n,c);this.linearRampToValueAtTime(this._toType(l),c)}return this}setValueAtTime(e,t){const n=this.toSeconds(t);super.setValueAtTime(e,t);const s=this._events.get(n),r=this._events.previousEvent(s),o=this._getTicksUntilEvent(r,n);return s.ticks=Math.max(o,0),this}linearRampToValueAtTime(e,t){const n=this.toSeconds(t);super.linearRampToValueAtTime(e,t);const s=this._events.get(n),r=this._events.previousEvent(s),o=this._getTicksUntilEvent(r,n);return s.ticks=Math.max(o,0),this}exponentialRampToValueAtTime(e,t){t=this.toSeconds(t);const n=this._fromType(e),s=this._events.get(t),r=Math.round(Math.max((t-s.time)*10,1)),o=(t-s.time)/r;for(let a=0;a<=r;a++){const c=o*a+s.time,l=this._exponentialInterpolate(s.time,s.value,t,n,c);this.linearRampToValueAtTime(this._toType(l),c)}return this}_getTicksUntilEvent(e,t){if(e===null)e={ticks:0,time:0,type:"setValueAtTime",value:0};else if(Ps(e.ticks)){const o=this._events.previousEvent(e);e.ticks=this._getTicksUntilEvent(o,e.time)}const n=this._fromType(this.getValueAtTime(e.time));let s=this._fromType(this.getValueAtTime(t));const r=this._events.get(t);return r&&r.time===t&&r.type==="setValueAtTime"&&(s=this._fromType(this.getValueAtTime(t-this.sampleTime))),.5*(t-e.time)*(n+s)+e.ticks}getTicksAtTime(e){const t=this.toSeconds(e),n=this._events.get(t);return Math.max(this._getTicksUntilEvent(n,t),0)}getDurationOfTicks(e,t){const n=this.toSeconds(t),s=this.getTicksAtTime(t);return this.getTimeOfTick(s+e)-n}getTimeOfTick(e){const t=this._events.get(e,"ticks"),n=this._events.getAfter(e,"ticks");if(t&&t.ticks===e)return t.time;if(t&&n&&n.type==="linearRampToValueAtTime"&&t.value!==n.value){const s=this._fromType(this.getValueAtTime(t.time)),o=(this._fromType(this.getValueAtTime(n.time))-s)/(n.time-t.time),a=Math.sqrt(Math.pow(s,2)-2*o*(t.ticks-e)),c=(-s+a)/o,l=(-s-a)/o;return(c>0?c:l)+t.time}else return t?t.value===0?1/0:t.time+(e-t.ticks)/t.value:e/this._initialValue}ticksToTime(e,t){return this.getDurationOfTicks(e,t)}timeToTicks(e,t){const n=this.toSeconds(t),s=this.toSeconds(e),r=this.getTicksAtTime(n);return this.getTicksAtTime(n+s)-r}_fromType(e){return this.units==="bpm"&&this.multiplier?1/(60/e/this.multiplier):super._fromType(e)}_toType(e){return this.units==="bpm"&&this.multiplier?e/this.multiplier*60:super._toType(e)}get multiplier(){return this._multiplier}set multiplier(e){const t=this.value;this._multiplier=e,this.cancelScheduledValues(0),this.setValueAtTime(t,0)}}class _g extends jn{constructor(){super(et(_g.getDefaults(),arguments,["value"])),this.name="TickSignal";const e=et(_g.getDefaults(),arguments,["value"]);this.input=this._param=new gg({context:this.context,convert:e.convert,multiplier:e.multiplier,param:this._constantSource.offset,units:e.units,value:e.value})}static getDefaults(){return Object.assign(jn.getDefaults(),{multiplier:1,units:"hertz",value:1})}ticksToTime(e,t){return this._param.ticksToTime(e,t)}timeToTicks(e,t){return this._param.timeToTicks(e,t)}getTimeOfTick(e){return this._param.getTimeOfTick(e)}getDurationOfTicks(e,t){return this._param.getDurationOfTicks(e,t)}getTicksAtTime(e){return this._param.getTicksAtTime(e)}get multiplier(){return this._param.multiplier}set multiplier(e){this._param.multiplier=e}dispose(){return super.dispose(),this._param.dispose(),this}}class vg extends Yi{constructor(){super(et(vg.getDefaults(),arguments,["frequency"])),this.name="TickSource",this._state=new hb,this._tickOffset=new $r;const e=et(vg.getDefaults(),arguments,["frequency"]);this.frequency=new _g({context:this.context,units:e.units,value:e.frequency}),En(this,"frequency"),this._state.setStateAtTime("stopped",0),this.setTicksAtTime(0,0)}static getDefaults(){return Object.assign({frequency:1,units:"hertz"},Yi.getDefaults())}get state(){return this.getStateAtTime(this.now())}start(e,t){const n=this.toSeconds(e);return this._state.getValueAtTime(n)!=="started"&&(this._state.setStateAtTime("started",n),It(t)&&this.setTicksAtTime(t,n)),this}stop(e){const t=this.toSeconds(e);if(this._state.getValueAtTime(t)==="stopped"){const n=this._state.get(t);n&&n.time>0&&(this._tickOffset.cancel(n.time),this._state.cancel(n.time))}return this._state.cancel(t),this._state.setStateAtTime("stopped",t),this.setTicksAtTime(0,t),this}pause(e){const t=this.toSeconds(e);return this._state.getValueAtTime(t)==="started"&&this._state.setStateAtTime("paused",t),this}cancel(e){return e=this.toSeconds(e),this._state.cancel(e),this._tickOffset.cancel(e),this}getTicksAtTime(e){const t=this.toSeconds(e),n=this._state.getLastState("stopped",t),s={state:"paused",time:t};this._state.add(s);let r=n,o=0;return this._state.forEachBetween(n.time,t+this.sampleTime,a=>{let c=r.time;const l=this._tickOffset.get(a.time);l&&l.time>=r.time&&(o=l.ticks,c=l.time),r.state==="started"&&a.state!=="started"&&(o+=this.frequency.getTicksAtTime(a.time)-this.frequency.getTicksAtTime(c)),r=a}),this._state.remove(s),o}get ticks(){return this.getTicksAtTime(this.now())}set ticks(e){this.setTicksAtTime(e,this.now())}get seconds(){return this.getSecondsAtTime(this.now())}set seconds(e){const t=this.now(),n=this.frequency.timeToTicks(e,t);this.setTicksAtTime(n,t)}getSecondsAtTime(e){e=this.toSeconds(e);const t=this._state.getLastState("stopped",e),n={state:"paused",time:e};this._state.add(n);let s=t,r=0;return this._state.forEachBetween(t.time,e+this.sampleTime,o=>{let a=s.time;const c=this._tickOffset.get(o.time);c&&c.time>=s.time&&(r=c.seconds,a=c.time),s.state==="started"&&o.state!=="started"&&(r+=o.time-a),s=o}),this._state.remove(n),r}setTicksAtTime(e,t){return t=this.toSeconds(t),this._tickOffset.cancel(t),this._tickOffset.add({seconds:this.frequency.getDurationOfTicks(e,t),ticks:e,time:t}),this}getStateAtTime(e){return e=this.toSeconds(e),this._state.getValueAtTime(e)}getTimeOfTick(e,t=this.now()){const n=this._tickOffset.get(t),s=this._state.get(t),r=Math.max(n.time,s.time),o=this.frequency.getTicksAtTime(r)+e-n.ticks;return this.frequency.getTimeOfTick(o)}forEachTickBetween(e,t,n){let s=this._state.get(e);this._state.forEachBetween(e,t,o=>{s&&s.state==="started"&&o.state!=="started"&&this.forEachTickBetween(Math.max(s.time,e),o.time-this.sampleTime,n),s=o});let r=null;if(s&&s.state==="started"){const o=Math.max(s.time,e),a=this.frequency.getTicksAtTime(o),c=this.frequency.getTicksAtTime(s.time),l=a-c;let u=Math.ceil(l)-l;u=Zs(u,1)?0:u;let h=this.frequency.getTimeOfTick(a+u);for(;h<t;){try{n(h,Math.round(this.getTicksAtTime(h)))}catch(d){r=d;break}h+=this.frequency.getDurationOfTicks(1,h)}}if(r)throw r;return this}dispose(){return super.dispose(),this._state.dispose(),this._tickOffset.dispose(),this.frequency.dispose(),this}}let vN=class kx extends Yi{constructor(){super(et(kx.getDefaults(),arguments,["callback","frequency"])),this.name="Clock",this.callback=sn,this._lastUpdate=0,this._state=new hb("stopped"),this._boundLoop=this._loop.bind(this);const e=et(kx.getDefaults(),arguments,["callback","frequency"]);this.callback=e.callback,this._tickSource=new vg({context:this.context,frequency:e.frequency,units:e.units}),this._lastUpdate=0,this.frequency=this._tickSource.frequency,En(this,"frequency"),this._state.setStateAtTime("stopped",0),this.context.on("tick",this._boundLoop)}static getDefaults(){return Object.assign(Yi.getDefaults(),{callback:sn,frequency:1,units:"hertz"})}get state(){return this._state.getValueAtTime(this.now())}start(e,t){oN(this.context);const n=this.toSeconds(e);return this.log("start",n),this._state.getValueAtTime(n)!=="started"&&(this._state.setStateAtTime("started",n),this._tickSource.start(n,t),n<this._lastUpdate&&this.emit("start",n,t)),this}stop(e){const t=this.toSeconds(e);return this.log("stop",t),this._state.cancel(t),this._state.setStateAtTime("stopped",t),this._tickSource.stop(t),t<this._lastUpdate&&this.emit("stop",t),this}pause(e){const t=this.toSeconds(e);return this._state.getValueAtTime(t)==="started"&&(this._state.setStateAtTime("paused",t),this._tickSource.pause(t),t<this._lastUpdate&&this.emit("pause",t)),this}get ticks(){return Math.ceil(this.getTicksAtTime(this.now()))}set ticks(e){this._tickSource.ticks=e}get seconds(){return this._tickSource.seconds}set seconds(e){this._tickSource.seconds=e}getSecondsAtTime(e){return this._tickSource.getSecondsAtTime(e)}setTicksAtTime(e,t){return this._tickSource.setTicksAtTime(e,t),this}getTimeOfTick(e,t=this.now()){return this._tickSource.getTimeOfTick(e,t)}getTicksAtTime(e){return this._tickSource.getTicksAtTime(e)}nextTickTime(e,t){const n=this.toSeconds(t),s=this.getTicksAtTime(n);return this._tickSource.getTimeOfTick(s+e,n)}_loop(){const e=this._lastUpdate,t=this.now();this._lastUpdate=t,this.log("loop",e,t),e!==t&&(this._state.forEachBetween(e,t,n=>{switch(n.state){case"started":const s=this._tickSource.getTicksAtTime(n.time);this.emit("start",n.time,s);break;case"stopped":n.time!==0&&this.emit("stop",n.time);break;case"paused":this.emit("pause",n.time);break}}),this._tickSource.forEachTickBetween(e,t,(n,s)=>{this.callback(n,s)}))}getStateAtTime(e){const t=this.toSeconds(e);return this._state.getValueAtTime(t)}dispose(){return super.dispose(),this.context.off("tick",this._boundLoop),this._tickSource.dispose(),this._state.dispose(),this}};Lf.mixin(vN);class fb extends Zo{constructor(){super(),this.name="ToneAudioBuffers",this._buffers=new Map,this._loadingCount=0;const e=et(fb.getDefaults(),arguments,["urls","onload","baseUrl"],"urls");this.baseUrl=e.baseUrl,Object.keys(e.urls).forEach(t=>{this._loadingCount++;const n=e.urls[t];this.add(t,n,this._bufferLoaded.bind(this,e.onload),e.onerror)})}static getDefaults(){return{baseUrl:"",onerror:sn,onload:sn,urls:{}}}has(e){return this._buffers.has(e.toString())}get(e){return wt(this.has(e),`ToneAudioBuffers has no buffer named: ${e}`),this._buffers.get(e.toString())}_bufferLoaded(e){this._loadingCount--,this._loadingCount===0&&e&&e()}get loaded(){return Array.from(this._buffers).every(([e,t])=>t.loaded)}add(e,t,n=sn,s=sn){return Fr(t)?this._buffers.set(e.toString(),new rn(this.baseUrl+t,n,s)):this._buffers.set(e.toString(),new rn(t,n,s)),this}dispose(){return super.dispose(),this._buffers.forEach(e=>e.dispose()),this._buffers.clear(),this}}class Mo extends Pd{constructor(){super(...arguments),this.name="Ticks",this.defaultUnits="i"}_now(){return this.context.transport.ticks}_beatsToUnits(e){return this._getPPQ()*e}_secondsToUnits(e){return Math.floor(e/(60/this._getBpm())*this._getPPQ())}_ticksToUnits(e){return e}toTicks(){return this.valueOf()}toSeconds(){return this.valueOf()/this._getPPQ()*(60/this._getBpm())}}class qH extends Yi{constructor(){super(...arguments),this.name="Draw",this.expiration=.25,this.anticipation=.008,this._events=new $r,this._boundDrawLoop=this._drawLoop.bind(this),this._animationFrame=-1}schedule(e,t){return this._events.add({callback:e,time:this.toSeconds(t)}),this._events.length===1&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop)),this}cancel(e){return this._events.cancel(this.toSeconds(e)),this}_drawLoop(){const e=this.context.currentTime;for(;this._events.length&&this._events.peek().time-this.anticipation<=e;){const t=this._events.shift();t&&e-t.time<=this.expiration&&t.callback()}this._events.length>0&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop))}dispose(){return super.dispose(),this._events.dispose(),cancelAnimationFrame(this._animationFrame),this}}l_(i=>{i.draw=new qH({context:i})});u_(i=>{i.draw.dispose()});class XH extends Zo{constructor(){super(...arguments),this.name="IntervalTimeline",this._root=null,this._length=0}add(e){wt(It(e.time),"Events must have a time property"),wt(It(e.duration),"Events must have a duration parameter"),e.time=e.time.valueOf();let t=new jH(e.time,e.time+e.duration,e);for(this._root===null?this._root=t:this._root.insert(t),this._length++;t!==null;)t.updateHeight(),t.updateMax(),this._rebalance(t),t=t.parent;return this}remove(e){if(this._root!==null){const t=[];this._root.search(e.time,t);for(const n of t)if(n.event===e){this._removeNode(n),this._length--;break}}return this}get length(){return this._length}cancel(e){return this.forEachFrom(e,t=>this.remove(t)),this}_setRoot(e){this._root=e,this._root!==null&&(this._root.parent=null)}_replaceNodeInParent(e,t){e.parent!==null?(e.isLeftChild()?e.parent.left=t:e.parent.right=t,this._rebalance(e.parent)):this._setRoot(t)}_removeNode(e){if(e.left===null&&e.right===null)this._replaceNodeInParent(e,null);else if(e.right===null)this._replaceNodeInParent(e,e.left);else if(e.left===null)this._replaceNodeInParent(e,e.right);else{const t=e.getBalance();let n,s=null;if(t>0)if(e.left.right===null)n=e.left,n.right=e.right,s=n;else{for(n=e.left.right;n.right!==null;)n=n.right;n.parent&&(n.parent.right=n.left,s=n.parent,n.left=e.left,n.right=e.right)}else if(e.right.left===null)n=e.right,n.left=e.left,s=n;else{for(n=e.right.left;n.left!==null;)n=n.left;n.parent&&(n.parent.left=n.right,s=n.parent,n.left=e.left,n.right=e.right)}e.parent!==null?e.isLeftChild()?e.parent.left=n:e.parent.right=n:this._setRoot(n),s&&this._rebalance(s)}e.dispose()}_rotateLeft(e){const t=e.parent,n=e.isLeftChild(),s=e.right;s&&(e.right=s.left,s.left=e),t!==null?n?t.left=s:t.right=s:this._setRoot(s)}_rotateRight(e){const t=e.parent,n=e.isLeftChild(),s=e.left;s&&(e.left=s.right,s.right=e),t!==null?n?t.left=s:t.right=s:this._setRoot(s)}_rebalance(e){const t=e.getBalance();t>1&&e.left?e.left.getBalance()<0?this._rotateLeft(e.left):this._rotateRight(e):t<-1&&e.right&&(e.right.getBalance()>0?this._rotateRight(e.right):this._rotateLeft(e))}get(e){if(this._root!==null){const t=[];if(this._root.search(e,t),t.length>0){let n=t[0];for(let s=1;s<t.length;s++)t[s].low>n.low&&(n=t[s]);return n.event}}return null}forEach(e){if(this._root!==null){const t=[];this._root.traverse(n=>t.push(n)),t.forEach(n=>{n.event&&e(n.event)})}return this}forEachAtTime(e,t){if(this._root!==null){const n=[];this._root.search(e,n),n.forEach(s=>{s.event&&t(s.event)})}return this}forEachFrom(e,t){if(this._root!==null){const n=[];this._root.searchAfter(e,n),n.forEach(s=>{s.event&&t(s.event)})}return this}dispose(){return super.dispose(),this._root!==null&&this._root.traverse(e=>e.dispose()),this._root=null,this}}class jH{constructor(e,t,n){this._left=null,this._right=null,this.parent=null,this.height=0,this.event=n,this.low=e,this.high=t,this.max=this.high}insert(e){e.low<=this.low?this.left===null?this.left=e:this.left.insert(e):this.right===null?this.right=e:this.right.insert(e)}search(e,t){e>this.max||(this.left!==null&&this.left.search(e,t),this.low<=e&&this.high>e&&t.push(this),!(this.low>e)&&this.right!==null&&this.right.search(e,t))}searchAfter(e,t){this.low>=e&&(t.push(this),this.left!==null&&this.left.searchAfter(e,t)),this.right!==null&&this.right.searchAfter(e,t)}traverse(e){e(this),this.left!==null&&this.left.traverse(e),this.right!==null&&this.right.traverse(e)}updateHeight(){this.left!==null&&this.right!==null?this.height=Math.max(this.left.height,this.right.height)+1:this.right!==null?this.height=this.right.height+1:this.left!==null?this.height=this.left.height+1:this.height=0}updateMax(){this.max=this.high,this.left!==null&&(this.max=Math.max(this.max,this.left.max)),this.right!==null&&(this.max=Math.max(this.max,this.right.max))}getBalance(){let e=0;return this.left!==null&&this.right!==null?e=this.left.height-this.right.height:this.left!==null?e=this.left.height+1:this.right!==null&&(e=-(this.right.height+1)),e}isLeftChild(){return this.parent!==null&&this.parent.left===this}get left(){return this._left}set left(e){this._left=e,e!==null&&(e.parent=this),this.updateHeight(),this.updateMax()}get right(){return this._right}set right(e){this._right=e,e!==null&&(e.parent=this),this.updateHeight(),this.updateMax()}dispose(){this.parent=null,this._left=null,this._right=null,this.event=null}}class Yc extends Lt{constructor(){super(et(Yc.getDefaults(),arguments,["volume"])),this.name="Volume";const e=et(Yc.getDefaults(),arguments,["volume"]);this.input=this.output=new Oi({context:this.context,gain:e.volume,units:"decibels"}),this.volume=this.output.gain,En(this,"volume"),this._unmutedVolume=e.volume,this.mute=e.mute}static getDefaults(){return Object.assign(Lt.getDefaults(),{mute:!1,volume:0})}get mute(){return this.volume.value===-1/0}set mute(e){!this.mute&&e?(this._unmutedVolume=this.volume.value,this.volume.value=-1/0):this.mute&&!e&&(this.volume.value=this._unmutedVolume)}dispose(){return super.dispose(),this.input.dispose(),this.volume.dispose(),this}}class xg extends Lt{constructor(){super(et(xg.getDefaults(),arguments)),this.name="Destination",this.input=new Yc({context:this.context}),this.output=new Oi({context:this.context}),this.volume=this.input.volume;const e=et(xg.getDefaults(),arguments);Bx(this.input,this.output,this.context.rawContext.destination),this.mute=e.mute,this._internalChannels=[this.input,this.context.rawContext.destination,this.output]}static getDefaults(){return Object.assign(Lt.getDefaults(),{mute:!1,volume:0})}get mute(){return this.input.mute}set mute(e){this.input.mute=e}chain(...e){return this.input.disconnect(),e.unshift(this.input),e.push(this.output),Bx(...e),this}get maxChannelCount(){return this.context.rawContext.destination.maxChannelCount}dispose(){return super.dispose(),this.volume.dispose(),this}}l_(i=>{i.destination=new xg({context:i})});u_(i=>{i.destination.dispose()});class YH extends Zo{constructor(e){super(),this.name="TimelineValue",this._timeline=new $r({memory:10}),this._initialValue=e}set(e,t){return this._timeline.add({value:e,time:t}),this}get(e){const t=this._timeline.get(e);return t?t.value:this._initialValue}}class Va{constructor(e,t){this.id=Va._eventId++;const n=Object.assign(Va.getDefaults(),t);this.transport=e,this.callback=n.callback,this._once=n.once,this.time=n.time}static getDefaults(){return{callback:sn,once:!1,time:0}}invoke(e){this.callback&&(this.callback(e),this._once&&this.transport.clear(this.id))}dispose(){return this.callback=void 0,this}}Va._eventId=0;class pb extends Va{constructor(e,t){super(e,t),this._currentId=-1,this._nextId=-1,this._nextTick=this.time,this._boundRestart=this._restart.bind(this);const n=Object.assign(pb.getDefaults(),t);this.duration=new Mo(e.context,n.duration).valueOf(),this._interval=new Mo(e.context,n.interval).valueOf(),this._nextTick=n.time,this.transport.on("start",this._boundRestart),this.transport.on("loopStart",this._boundRestart),this.context=this.transport.context,this._restart()}static getDefaults(){return Object.assign({},Va.getDefaults(),{duration:1/0,interval:1,once:!1})}invoke(e){this._createEvents(e),super.invoke(e)}_createEvents(e){const t=this.transport.getTicksAtTime(e);t>=this.time&&t>=this._nextTick&&this._nextTick+this._interval<this.time+this.duration&&(this._nextTick+=this._interval,this._currentId=this._nextId,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new Mo(this.context,this._nextTick).toSeconds()))}_restart(e){this.transport.clear(this._currentId),this.transport.clear(this._nextId),this._nextTick=this.time;const t=this.transport.getTicksAtTime(e);t>this.time&&(this._nextTick=this.time+Math.ceil((t-this.time)/this._interval)*this._interval),this._currentId=this.transport.scheduleOnce(this.invoke.bind(this),new Mo(this.context,this._nextTick).toSeconds()),this._nextTick+=this._interval,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new Mo(this.context,this._nextTick).toSeconds())}dispose(){return super.dispose(),this.transport.clear(this._currentId),this.transport.clear(this._nextId),this.transport.off("start",this._boundRestart),this.transport.off("loopStart",this._boundRestart),this}}class qd extends Yi{constructor(){super(et(qd.getDefaults(),arguments)),this.name="Transport",this._loop=new YH(!1),this._loopStart=0,this._loopEnd=0,this._scheduledEvents={},this._timeline=new $r,this._repeatedEvents=new XH,this._syncedSignals=[],this._swingAmount=0;const e=et(qd.getDefaults(),arguments);this._ppq=e.ppq,this._clock=new vN({callback:this._processTick.bind(this),context:this.context,frequency:0,units:"bpm"}),this._bindClockEvents(),this.bpm=this._clock.frequency,this._clock.frequency.multiplier=e.ppq,this.bpm.setValueAtTime(e.bpm,0),En(this,"bpm"),this._timeSignature=e.timeSignature,this._swingTicks=e.ppq/2}static getDefaults(){return Object.assign(Yi.getDefaults(),{bpm:120,loopEnd:"4m",loopStart:0,ppq:192,swing:0,swingSubdivision:"8n",timeSignature:4})}_processTick(e,t){if(this._loop.get(e)&&t>=this._loopEnd&&(this.emit("loopEnd",e),this._clock.setTicksAtTime(this._loopStart,e),t=this._loopStart,this.emit("loopStart",e,this._clock.getSecondsAtTime(e)),this.emit("loop",e)),this._swingAmount>0&&t%this._ppq!==0&&t%(this._swingTicks*2)!==0){const n=t%(this._swingTicks*2)/(this._swingTicks*2),s=Math.sin(n*Math.PI)*this._swingAmount;e+=new Mo(this.context,this._swingTicks*2/3).toSeconds()*s}this._timeline.forEachAtTime(t,n=>n.invoke(e))}schedule(e,t){const n=new Va(this,{callback:e,time:new Pd(this.context,t).toTicks()});return this._addEvent(n,this._timeline)}scheduleRepeat(e,t,n,s=1/0){const r=new pb(this,{callback:e,duration:new ir(this.context,s).toTicks(),interval:new ir(this.context,t).toTicks(),time:new Pd(this.context,n).toTicks()});return this._addEvent(r,this._repeatedEvents)}scheduleOnce(e,t){const n=new Va(this,{callback:e,once:!0,time:new Pd(this.context,t).toTicks()});return this._addEvent(n,this._timeline)}clear(e){if(this._scheduledEvents.hasOwnProperty(e)){const t=this._scheduledEvents[e.toString()];t.timeline.remove(t.event),t.event.dispose(),delete this._scheduledEvents[e.toString()]}return this}_addEvent(e,t){return this._scheduledEvents[e.id.toString()]={event:e,timeline:t},t.add(e),e.id}cancel(e=0){const t=this.toTicks(e);return this._timeline.forEachFrom(t,n=>this.clear(n.id)),this._repeatedEvents.forEachFrom(t,n=>this.clear(n.id)),this}_bindClockEvents(){this._clock.on("start",(e,t)=>{t=new Mo(this.context,t).toSeconds(),this.emit("start",e,t)}),this._clock.on("stop",e=>{this.emit("stop",e)}),this._clock.on("pause",e=>{this.emit("pause",e)})}get state(){return this._clock.getStateAtTime(this.now())}start(e,t){let n;return It(t)&&(n=this.toTicks(t)),this._clock.start(e,n),this}stop(e){return this._clock.stop(e),this}pause(e){return this._clock.pause(e),this}toggle(e){return e=this.toSeconds(e),this._clock.getStateAtTime(e)!=="started"?this.start(e):this.stop(e),this}get timeSignature(){return this._timeSignature}set timeSignature(e){ur(e)&&(e=e[0]/e[1]*4),this._timeSignature=e}get loopStart(){return new ir(this.context,this._loopStart,"i").toSeconds()}set loopStart(e){this._loopStart=this.toTicks(e)}get loopEnd(){return new ir(this.context,this._loopEnd,"i").toSeconds()}set loopEnd(e){this._loopEnd=this.toTicks(e)}get loop(){return this._loop.get(this.now())}set loop(e){this._loop.set(e,this.now())}setLoopPoints(e,t){return this.loopStart=e,this.loopEnd=t,this}get swing(){return this._swingAmount}set swing(e){this._swingAmount=e}get swingSubdivision(){return new Mo(this.context,this._swingTicks).toNotation()}set swingSubdivision(e){this._swingTicks=this.toTicks(e)}get position(){const e=this.now(),t=this._clock.getTicksAtTime(e);return new Mo(this.context,t).toBarsBeatsSixteenths()}set position(e){const t=this.toTicks(e);this.ticks=t}get seconds(){return this._clock.seconds}set seconds(e){const t=this.now(),n=this._clock.frequency.timeToTicks(e,t);this.ticks=n}get progress(){if(this.loop){const e=this.now();return(this._clock.getTicksAtTime(e)-this._loopStart)/(this._loopEnd-this._loopStart)}else return 0}get ticks(){return this._clock.ticks}set ticks(e){if(this._clock.ticks!==e){const t=this.now();if(this.state==="started"){const n=this._clock.getTicksAtTime(t),s=this._clock.frequency.getDurationOfTicks(Math.ceil(n)-n,t),r=t+s;this.emit("stop",r),this._clock.setTicksAtTime(e,r),this.emit("start",r,this._clock.getSecondsAtTime(r))}else this._clock.setTicksAtTime(e,t)}}getTicksAtTime(e){return Math.round(this._clock.getTicksAtTime(e))}getSecondsAtTime(e){return this._clock.getSecondsAtTime(e)}get PPQ(){return this._clock.frequency.multiplier}set PPQ(e){this._clock.frequency.multiplier=e}nextSubdivision(e){if(e=this.toTicks(e),this.state!=="started")return 0;{const t=this.now(),n=this.getTicksAtTime(t),s=e-n%e;return this._clock.nextTickTime(s,t)}}syncSignal(e,t){if(!t){const s=this.now();if(e.getValueAtTime(s)!==0){const o=1/(60/this.bpm.getValueAtTime(s)/this.PPQ);t=e.getValueAtTime(s)/o}else t=0}const n=new Oi(t);return this.bpm.connect(n),n.connect(e._param),this._syncedSignals.push({initial:e.value,ratio:n,signal:e}),e.value=0,this}unsyncSignal(e){for(let t=this._syncedSignals.length-1;t>=0;t--){const n=this._syncedSignals[t];n.signal===e&&(n.ratio.dispose(),n.signal.value=n.initial,this._syncedSignals.splice(t,1))}return this}dispose(){return super.dispose(),this._clock.dispose(),pN(this,"bpm"),this._timeline.dispose(),this._repeatedEvents.dispose(),this}}Lf.mixin(qd);l_(i=>{i.transport=new qd({context:i})});u_(i=>{i.transport.dispose()});let vs=class extends Lt{constructor(e){super(e),this.input=void 0,this._state=new hb("stopped"),this._synced=!1,this._scheduled=[],this._syncedStart=sn,this._syncedStop=sn,this._state.memory=100,this._state.increasing=!0,this._volume=this.output=new Yc({context:this.context,mute:e.mute,volume:e.volume}),this.volume=this._volume.volume,En(this,"volume"),this.onstop=e.onstop}static getDefaults(){return Object.assign(Lt.getDefaults(),{mute:!1,onstop:sn,volume:0})}get state(){return this._synced?this.context.transport.state==="started"?this._state.getValueAtTime(this.context.transport.seconds):"stopped":this._state.getValueAtTime(this.now())}get mute(){return this._volume.mute}set mute(e){this._volume.mute=e}_clampToCurrentTime(e){return this._synced?e:Math.max(e,this.context.currentTime)}start(e,t,n){let s=Ps(e)&&this._synced?this.context.transport.seconds:this.toSeconds(e);if(s=this._clampToCurrentTime(s),!this._synced&&this._state.getValueAtTime(s)==="started")wt(pg(s,this._state.get(s).time),"Start time must be strictly greater than previous start time"),this._state.cancel(s),this._state.setStateAtTime("started",s),this.log("restart",s),this.restart(s,t,n);else if(this.log("start",s),this._state.setStateAtTime("started",s),this._synced){const r=this._state.get(s);r&&(r.offset=this.toSeconds(Du(t,0)),r.duration=n?this.toSeconds(n):void 0);const o=this.context.transport.schedule(a=>{this._start(a,t,n)},s);this._scheduled.push(o),this.context.transport.state==="started"&&this.context.transport.getSecondsAtTime(this.immediate())>s&&this._syncedStart(this.now(),this.context.transport.seconds)}else oN(this.context),this._start(s,t,n);return this}stop(e){let t=Ps(e)&&this._synced?this.context.transport.seconds:this.toSeconds(e);if(t=this._clampToCurrentTime(t),this._state.getValueAtTime(t)==="started"||It(this._state.getNextState("started",t))){if(this.log("stop",t),!this._synced)this._stop(t);else{const n=this.context.transport.schedule(this._stop.bind(this),t);this._scheduled.push(n)}this._state.cancel(t),this._state.setStateAtTime("stopped",t)}return this}restart(e,t,n){return e=this.toSeconds(e),this._state.getValueAtTime(e)==="started"&&(this._state.cancel(e),this._restart(e,t,n)),this}sync(){return this._synced||(this._synced=!0,this._syncedStart=(e,t)=>{if(t>0){const n=this._state.get(t);if(n&&n.state==="started"&&n.time!==t){const s=t-this.toSeconds(n.time);let r;n.duration&&(r=this.toSeconds(n.duration)-s),this._start(e,this.toSeconds(n.offset)+s,r)}}},this._syncedStop=e=>{const t=this.context.transport.getSecondsAtTime(Math.max(e-this.sampleTime,0));this._state.getValueAtTime(t)==="started"&&this._stop(e)},this.context.transport.on("start",this._syncedStart),this.context.transport.on("loopStart",this._syncedStart),this.context.transport.on("stop",this._syncedStop),this.context.transport.on("pause",this._syncedStop),this.context.transport.on("loopEnd",this._syncedStop)),this}unsync(){return this._synced&&(this.context.transport.off("stop",this._syncedStop),this.context.transport.off("pause",this._syncedStop),this.context.transport.off("loopEnd",this._syncedStop),this.context.transport.off("start",this._syncedStart),this.context.transport.off("loopStart",this._syncedStart)),this._synced=!1,this._scheduled.forEach(e=>this.context.transport.clear(e)),this._scheduled=[],this._state.cancel(0),this._stop(0),this}dispose(){return super.dispose(),this.onstop=sn,this.unsync(),this._volume.dispose(),this._state.dispose(),this}};class Xd extends Ju{constructor(){super(et(Xd.getDefaults(),arguments,["url","onload"])),this.name="ToneBufferSource",this._source=this.context.createBufferSource(),this._internalChannels=[this._source],this._sourceStarted=!1,this._sourceStopped=!1;const e=et(Xd.getDefaults(),arguments,["url","onload"]);wh(this._source,this._gainNode),this._source.onended=()=>this._stopSource(),this.playbackRate=new pn({context:this.context,param:this._source.playbackRate,units:"positive",value:e.playbackRate}),this.loop=e.loop,this.loopStart=e.loopStart,this.loopEnd=e.loopEnd,this._buffer=new rn(e.url,e.onload,e.onerror),this._internalChannels.push(this._source)}static getDefaults(){return Object.assign(Ju.getDefaults(),{url:new rn,loop:!1,loopEnd:0,loopStart:0,onload:sn,onerror:sn,playbackRate:1})}get fadeIn(){return this._fadeIn}set fadeIn(e){this._fadeIn=e}get fadeOut(){return this._fadeOut}set fadeOut(e){this._fadeOut=e}get curve(){return this._curve}set curve(e){this._curve=e}start(e,t,n,s=1){wt(this.buffer.loaded,"buffer is either not set or not loaded");const r=this.toSeconds(e);this._startGain(r,s),this.loop?t=Du(t,this.loopStart):t=Du(t,0);let o=Math.max(this.toSeconds(t),0);if(this.loop){const a=this.toSeconds(this.loopEnd)||this.buffer.duration,c=this.toSeconds(this.loopStart),l=a-c;Ux(o,a)&&(o=(o-c)%l+c),Zs(o,this.buffer.duration)&&(o=0)}if(this._source.buffer=this.buffer.get(),this._source.loopEnd=this.toSeconds(this.loopEnd)||this.buffer.duration,uN(o,this.buffer.duration)&&(this._sourceStarted=!0,this._source.start(r,o)),It(n)){let a=this.toSeconds(n);a=Math.max(a,0),this.stop(r+a)}return this}_stopSource(e){!this._sourceStopped&&this._sourceStarted&&(this._sourceStopped=!0,this._source.stop(this.toSeconds(e)),this._onended())}get loopStart(){return this._source.loopStart}set loopStart(e){this._source.loopStart=this.toSeconds(e)}get loopEnd(){return this._source.loopEnd}set loopEnd(e){this._source.loopEnd=this.toSeconds(e)}get buffer(){return this._buffer}set buffer(e){this._buffer.set(e)}get loop(){return this._source.loop}set loop(e){this._source.loop=e,this._sourceStarted&&this.cancelStop()}dispose(){return super.dispose(),this._source.onended=null,this._source.disconnect(),this._buffer.dispose(),this.playbackRate.dispose(),this}}function hl(i,e){return kn(this,void 0,void 0,function*(){const t=e/i.context.sampleRate,n=new lb(1,t,i.context.sampleRate);return new i.constructor(Object.assign(i.get(),{frequency:2/t,detune:0,context:n})).toDestination().start(0),(yield n.render()).getChannelData(0)})}class yg extends Ju{constructor(){super(et(yg.getDefaults(),arguments,["frequency","type"])),this.name="ToneOscillatorNode",this._oscillator=this.context.createOscillator(),this._internalChannels=[this._oscillator];const e=et(yg.getDefaults(),arguments,["frequency","type"]);wh(this._oscillator,this._gainNode),this.type=e.type,this.frequency=new pn({context:this.context,param:this._oscillator.frequency,units:"frequency",value:e.frequency}),this.detune=new pn({context:this.context,param:this._oscillator.detune,units:"cents",value:e.detune}),En(this,["frequency","detune"])}static getDefaults(){return Object.assign(Ju.getDefaults(),{detune:0,frequency:440,type:"sine"})}start(e){const t=this.toSeconds(e);return this.log("start",t),this._startGain(t),this._oscillator.start(t),this}_stopSource(e){this._oscillator.stop(e)}setPeriodicWave(e){return this._oscillator.setPeriodicWave(e),this}get type(){return this._oscillator.type}set type(e){this._oscillator.type=e}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._oscillator.disconnect(),this.frequency.dispose(),this.detune.dispose(),this}}class An extends vs{constructor(){super(et(An.getDefaults(),arguments,["frequency","type"])),this.name="Oscillator",this._oscillator=null;const e=et(An.getDefaults(),arguments,["frequency","type"]);this.frequency=new jn({context:this.context,units:"frequency",value:e.frequency}),En(this,"frequency"),this.detune=new jn({context:this.context,units:"cents",value:e.detune}),En(this,"detune"),this._partials=e.partials,this._partialCount=e.partialCount,this._type=e.type,e.partialCount&&e.type!=="custom"&&(this._type=this.baseType+e.partialCount.toString()),this.phase=e.phase}static getDefaults(){return Object.assign(vs.getDefaults(),{detune:0,frequency:440,partialCount:0,partials:[],phase:0,type:"sine"})}_start(e){const t=this.toSeconds(e),n=new yg({context:this.context,onended:()=>this.onstop(this)});this._oscillator=n,this._wave?this._oscillator.setPeriodicWave(this._wave):this._oscillator.type=this._type,this._oscillator.connect(this.output),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.start(t)}_stop(e){const t=this.toSeconds(e);this._oscillator&&this._oscillator.stop(t)}_restart(e){const t=this.toSeconds(e);return this.log("restart",t),this._oscillator&&this._oscillator.cancelStop(),this._state.cancel(t),this}syncFrequency(){return this.context.transport.syncSignal(this.frequency),this}unsyncFrequency(){return this.context.transport.unsyncSignal(this.frequency),this}_getCachedPeriodicWave(){if(this._type==="custom")return An._periodicWaveCache.find(t=>t.phase===this._phase&&NH(t.partials,this._partials));{const e=An._periodicWaveCache.find(t=>t.type===this._type&&t.phase===this._phase);return this._partialCount=e?e.partialCount:this._partialCount,e}}get type(){return this._type}set type(e){this._type=e;const t=["sine","square","sawtooth","triangle"].indexOf(e)!==-1;if(this._phase===0&&t)this._wave=void 0,this._partialCount=0,this._oscillator!==null&&(this._oscillator.type=e);else{const n=this._getCachedPeriodicWave();if(It(n)){const{partials:s,wave:r}=n;this._wave=r,this._partials=s,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave)}else{const[s,r]=this._getRealImaginary(e,this._phase),o=this.context.createPeriodicWave(s,r);this._wave=o,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave),An._periodicWaveCache.push({imag:r,partialCount:this._partialCount,partials:this._partials,phase:this._phase,real:s,type:this._type,wave:this._wave}),An._periodicWaveCache.length>100&&An._periodicWaveCache.shift()}}}get baseType(){return this._type.replace(this.partialCount.toString(),"")}set baseType(e){this.partialCount&&this._type!=="custom"&&e!=="custom"?this.type=e+this.partialCount:this.type=e}get partialCount(){return this._partialCount}set partialCount(e){Ga(e,0);let t=this._type;const n=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(this._type);if(n&&(t=n[1]),this._type!=="custom")e===0?this.type=t:this.type=t+e.toString();else{const s=new Float32Array(e);this._partials.forEach((r,o)=>s[o]=r),this._partials=Array.from(s),this.type=this._type}}_getRealImaginary(e,t){let s=2048;const r=new Float32Array(s),o=new Float32Array(s);let a=1;if(e==="custom"){if(a=this._partials.length+1,this._partialCount=this._partials.length,s=a,this._partials.length===0)return[r,o]}else{const c=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(e);c?(a=parseInt(c[2],10)+1,this._partialCount=parseInt(c[2],10),e=c[1],a=Math.max(a,2),s=a):this._partialCount=0,this._partials=[]}for(let c=1;c<s;++c){const l=2/(c*Math.PI);let u;switch(e){case"sine":u=c<=a?1:0,this._partials[c-1]=u;break;case"square":u=c&1?2*l:0,this._partials[c-1]=u;break;case"sawtooth":u=l*(c&1?1:-1),this._partials[c-1]=u;break;case"triangle":c&1?u=2*(l*l)*(c-1>>1&1?-1:1):u=0,this._partials[c-1]=u;break;case"custom":u=this._partials[c-1];break;default:throw new TypeError("Oscillator: invalid type: "+e)}u!==0?(r[c]=-u*Math.sin(t*c),o[c]=u*Math.cos(t*c)):(r[c]=0,o[c]=0)}return[r,o]}_inverseFFT(e,t,n){let s=0;const r=e.length;for(let o=0;o<r;o++)s+=e[o]*Math.cos(o*n)+t[o]*Math.sin(o*n);return s}getInitialValue(){const[e,t]=this._getRealImaginary(this._type,0);let n=0;const s=Math.PI*2,r=32;for(let o=0;o<r;o++)n=Math.max(this._inverseFFT(e,t,o/r*s),n);return DH(-this._inverseFFT(e,t,this._phase)/n,-1,1)}get partials(){return this._partials.slice(0,this.partialCount)}set partials(e){this._partials=e,this._partialCount=this._partials.length,e.length&&(this.type="custom")}get phase(){return this._phase*(180/Math.PI)}set phase(e){this._phase=e*Math.PI/180,this.type=this._type}asArray(e=1024){return kn(this,void 0,void 0,function*(){return hl(this,e)})}dispose(){return super.dispose(),this._oscillator!==null&&this._oscillator.dispose(),this._wave=void 0,this.frequency.dispose(),this.detune.dispose(),this}}An._periodicWaveCache=[];class d_ extends Lt{constructor(){super(Object.assign(et(d_.getDefaults(),arguments,["context"])))}connect(e,t=0,n=0){return db(this,e,t,n),this}}class jd extends d_{constructor(){super(Object.assign(et(jd.getDefaults(),arguments,["mapping","length"]))),this.name="WaveShaper",this._shaper=this.context.createWaveShaper(),this.input=this._shaper,this.output=this._shaper;const e=et(jd.getDefaults(),arguments,["mapping","length"]);ur(e.mapping)||e.mapping instanceof Float32Array?this.curve=Float32Array.from(e.mapping):bH(e.mapping)&&this.setMap(e.mapping,e.length)}static getDefaults(){return Object.assign(jn.getDefaults(),{length:1024})}setMap(e,t=1024){const n=new Float32Array(t);for(let s=0,r=t;s<r;s++){const o=s/(r-1)*2-1;n[s]=e(o,s)}return this.curve=n,this}get curve(){return this._shaper.curve}set curve(e){this._shaper.curve=e}get oversample(){return this._shaper.oversample}set oversample(e){const t=["none","2x","4x"].some(n=>n.includes(e));wt(t,"oversampling must be either 'none', '2x', or '4x'"),this._shaper.oversample=e}dispose(){return super.dispose(),this._shaper.disconnect(),this}}class ZH extends d_{constructor(){super(...arguments),this.name="AudioToGain",this._norm=new jd({context:this.context,mapping:e=>(e+1)/2}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class Zc extends jn{constructor(){super(Object.assign(et(Zc.getDefaults(),arguments,["value"]))),this.name="Multiply",this.override=!1;const e=et(Zc.getDefaults(),arguments,["value"]);this._mult=this.input=this.output=new Oi({context:this.context,minValue:e.minValue,maxValue:e.maxValue}),this.factor=this._param=this._mult.gain,this.factor.setValueAtTime(e.value,0)}static getDefaults(){return Object.assign(jn.getDefaults(),{value:0})}dispose(){return super.dispose(),this._mult.dispose(),this}}class Yd extends vs{constructor(){super(et(Yd.getDefaults(),arguments,["frequency","type","modulationType"])),this.name="AMOscillator",this._modulationScale=new ZH({context:this.context}),this._modulationNode=new Oi({context:this.context});const e=et(Yd.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new An({context:this.context,detune:e.detune,frequency:e.frequency,onstop:()=>this.onstop(this),phase:e.phase,type:e.type}),this.frequency=this._carrier.frequency,this.detune=this._carrier.detune,this._modulator=new An({context:this.context,phase:e.phase,type:e.modulationType}),this.harmonicity=new Zc({context:this.context,units:"positive",value:e.harmonicity}),this.frequency.chain(this.harmonicity,this._modulator.frequency),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output),En(this,["frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(An.getDefaults(),{harmonicity:1,modulationType:"square"})}_start(e){this._modulator.start(e),this._carrier.start(e)}_stop(e){this._modulator.stop(e),this._carrier.stop(e)}_restart(e){this._modulator.restart(e),this._carrier.restart(e)}get type(){return this._carrier.type}set type(e){this._carrier.type=e}get baseType(){return this._carrier.baseType}set baseType(e){this._carrier.baseType=e}get partialCount(){return this._carrier.partialCount}set partialCount(e){this._carrier.partialCount=e}get modulationType(){return this._modulator.type}set modulationType(e){this._modulator.type=e}get phase(){return this._carrier.phase}set phase(e){this._carrier.phase=e,this._modulator.phase=e}get partials(){return this._carrier.partials}set partials(e){this._carrier.partials=e}asArray(e=1024){return kn(this,void 0,void 0,function*(){return hl(this,e)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this._modulationScale.dispose(),this}}class Zd extends vs{constructor(){super(et(Zd.getDefaults(),arguments,["frequency","type","modulationType"])),this.name="FMOscillator",this._modulationNode=new Oi({context:this.context,gain:0});const e=et(Zd.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new An({context:this.context,detune:e.detune,frequency:0,onstop:()=>this.onstop(this),phase:e.phase,type:e.type}),this.detune=this._carrier.detune,this.frequency=new jn({context:this.context,units:"frequency",value:e.frequency}),this._modulator=new An({context:this.context,phase:e.phase,type:e.modulationType}),this.harmonicity=new Zc({context:this.context,units:"positive",value:e.harmonicity}),this.modulationIndex=new Zc({context:this.context,units:"positive",value:e.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output),this.detune.connect(this._modulator.detune),En(this,["modulationIndex","frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(An.getDefaults(),{harmonicity:1,modulationIndex:2,modulationType:"square"})}_start(e){this._modulator.start(e),this._carrier.start(e)}_stop(e){this._modulator.stop(e),this._carrier.stop(e)}_restart(e){return this._modulator.restart(e),this._carrier.restart(e),this}get type(){return this._carrier.type}set type(e){this._carrier.type=e}get baseType(){return this._carrier.baseType}set baseType(e){this._carrier.baseType=e}get partialCount(){return this._carrier.partialCount}set partialCount(e){this._carrier.partialCount=e}get modulationType(){return this._modulator.type}set modulationType(e){this._modulator.type=e}get phase(){return this._carrier.phase}set phase(e){this._carrier.phase=e,this._modulator.phase=e}get partials(){return this._carrier.partials}set partials(e){this._carrier.partials=e}asArray(e=1024){return kn(this,void 0,void 0,function*(){return hl(this,e)})}dispose(){return super.dispose(),this.frequency.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this.modulationIndex.dispose(),this}}class eh extends vs{constructor(){super(et(eh.getDefaults(),arguments,["frequency","width"])),this.name="PulseOscillator",this._widthGate=new Oi({context:this.context,gain:0}),this._thresh=new jd({context:this.context,mapping:t=>t<=0?-1:1});const e=et(eh.getDefaults(),arguments,["frequency","width"]);this.width=new jn({context:this.context,units:"audioRange",value:e.width}),this._triangle=new An({context:this.context,detune:e.detune,frequency:e.frequency,onstop:()=>this.onstop(this),phase:e.phase,type:"triangle"}),this.frequency=this._triangle.frequency,this.detune=this._triangle.detune,this._triangle.chain(this._thresh,this.output),this.width.chain(this._widthGate,this._thresh),En(this,["width","frequency","detune"])}static getDefaults(){return Object.assign(vs.getDefaults(),{detune:0,frequency:440,phase:0,type:"pulse",width:.2})}_start(e){e=this.toSeconds(e),this._triangle.start(e),this._widthGate.gain.setValueAtTime(1,e)}_stop(e){e=this.toSeconds(e),this._triangle.stop(e),this._widthGate.gain.cancelScheduledValues(e),this._widthGate.gain.setValueAtTime(0,e)}_restart(e){this._triangle.restart(e),this._widthGate.gain.cancelScheduledValues(e),this._widthGate.gain.setValueAtTime(1,e)}get phase(){return this._triangle.phase}set phase(e){this._triangle.phase=e}get type(){return"pulse"}get baseType(){return"pulse"}get partials(){return[]}get partialCount(){return 0}set carrierType(e){this._triangle.type=e}asArray(e=1024){return kn(this,void 0,void 0,function*(){return hl(this,e)})}dispose(){return super.dispose(),this._triangle.dispose(),this.width.dispose(),this._widthGate.dispose(),this._thresh.dispose(),this}}class Kd extends vs{constructor(){super(et(Kd.getDefaults(),arguments,["frequency","type","spread"])),this.name="FatOscillator",this._oscillators=[];const e=et(Kd.getDefaults(),arguments,["frequency","type","spread"]);this.frequency=new jn({context:this.context,units:"frequency",value:e.frequency}),this.detune=new jn({context:this.context,units:"cents",value:e.detune}),this._spread=e.spread,this._type=e.type,this._phase=e.phase,this._partials=e.partials,this._partialCount=e.partialCount,this.count=e.count,En(this,["frequency","detune"])}static getDefaults(){return Object.assign(An.getDefaults(),{count:3,spread:20,type:"sawtooth"})}_start(e){e=this.toSeconds(e),this._forEach(t=>t.start(e))}_stop(e){e=this.toSeconds(e),this._forEach(t=>t.stop(e))}_restart(e){this._forEach(t=>t.restart(e))}_forEach(e){for(let t=0;t<this._oscillators.length;t++)e(this._oscillators[t],t)}get type(){return this._type}set type(e){this._type=e,this._forEach(t=>t.type=e)}get spread(){return this._spread}set spread(e){if(this._spread=e,this._oscillators.length>1){const t=-e/2,n=e/(this._oscillators.length-1);this._forEach((s,r)=>s.detune.value=t+n*r)}}get count(){return this._oscillators.length}set count(e){if(Ga(e,1),this._oscillators.length!==e){this._forEach(t=>t.dispose()),this._oscillators=[];for(let t=0;t<e;t++){const n=new An({context:this.context,volume:-6-e*1.1,type:this._type,phase:this._phase+t/e*360,partialCount:this._partialCount,onstop:t===0?()=>this.onstop(this):sn});this.type==="custom"&&(n.partials=this._partials),this.frequency.connect(n.frequency),this.detune.connect(n.detune),n.detune.overridden=!1,n.connect(this.output),this._oscillators[t]=n}this.spread=this._spread,this.state==="started"&&this._forEach(t=>t.start())}}get phase(){return this._phase}set phase(e){this._phase=e,this._forEach((t,n)=>t.phase=this._phase+n/this.count*360)}get baseType(){return this._oscillators[0].baseType}set baseType(e){this._forEach(t=>t.baseType=e),this._type=this._oscillators[0].type}get partials(){return this._oscillators[0].partials}set partials(e){this._partials=e,this._partialCount=this._partials.length,e.length&&(this._type="custom",this._forEach(t=>t.partials=e))}get partialCount(){return this._oscillators[0].partialCount}set partialCount(e){this._partialCount=e,this._forEach(t=>t.partialCount=e),this._type=this._oscillators[0].type}asArray(e=1024){return kn(this,void 0,void 0,function*(){return hl(this,e)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this._forEach(e=>e.dispose()),this}}class Qd extends vs{constructor(){super(et(Qd.getDefaults(),arguments,["frequency","modulationFrequency"])),this.name="PWMOscillator",this.sourceType="pwm",this._scale=new Zc({context:this.context,value:2});const e=et(Qd.getDefaults(),arguments,["frequency","modulationFrequency"]);this._pulse=new eh({context:this.context,frequency:e.modulationFrequency}),this._pulse.carrierType="sine",this.modulationFrequency=this._pulse.frequency,this._modulator=new An({context:this.context,detune:e.detune,frequency:e.frequency,onstop:()=>this.onstop(this),phase:e.phase}),this.frequency=this._modulator.frequency,this.detune=this._modulator.detune,this._modulator.chain(this._scale,this._pulse.width),this._pulse.connect(this.output),En(this,["modulationFrequency","frequency","detune"])}static getDefaults(){return Object.assign(vs.getDefaults(),{detune:0,frequency:440,modulationFrequency:.4,phase:0,type:"pwm"})}_start(e){e=this.toSeconds(e),this._modulator.start(e),this._pulse.start(e)}_stop(e){e=this.toSeconds(e),this._modulator.stop(e),this._pulse.stop(e)}_restart(e){this._modulator.restart(e),this._pulse.restart(e)}get type(){return"pwm"}get baseType(){return"pwm"}get partials(){return[]}get partialCount(){return 0}get phase(){return this._modulator.phase}set phase(e){this._modulator.phase=e}asArray(e=1024){return kn(this,void 0,void 0,function*(){return hl(this,e)})}dispose(){return super.dispose(),this._pulse.dispose(),this._scale.dispose(),this._modulator.dispose(),this}}const DE={am:Yd,fat:Kd,fm:Zd,oscillator:An,pulse:eh,pwm:Qd};class Jd extends vs{constructor(){super(et(Jd.getDefaults(),arguments,["frequency","type"])),this.name="OmniOscillator";const e=et(Jd.getDefaults(),arguments,["frequency","type"]);this.frequency=new jn({context:this.context,units:"frequency",value:e.frequency}),this.detune=new jn({context:this.context,units:"cents",value:e.detune}),En(this,["frequency","detune"]),this.set(e)}static getDefaults(){return Object.assign(An.getDefaults(),Zd.getDefaults(),Yd.getDefaults(),Kd.getDefaults(),eh.getDefaults(),Qd.getDefaults())}_start(e){this._oscillator.start(e)}_stop(e){this._oscillator.stop(e)}_restart(e){return this._oscillator.restart(e),this}get type(){let e="";return["am","fm","fat"].some(t=>this._sourceType===t)&&(e=this._sourceType),e+this._oscillator.type}set type(e){e.substr(0,2)==="fm"?(this._createNewOscillator("fm"),this._oscillator=this._oscillator,this._oscillator.type=e.substr(2)):e.substr(0,2)==="am"?(this._createNewOscillator("am"),this._oscillator=this._oscillator,this._oscillator.type=e.substr(2)):e.substr(0,3)==="fat"?(this._createNewOscillator("fat"),this._oscillator=this._oscillator,this._oscillator.type=e.substr(3)):e==="pwm"?(this._createNewOscillator("pwm"),this._oscillator=this._oscillator):e==="pulse"?this._createNewOscillator("pulse"):(this._createNewOscillator("oscillator"),this._oscillator=this._oscillator,this._oscillator.type=e)}get partials(){return this._oscillator.partials}set partials(e){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partials=e)}get partialCount(){return this._oscillator.partialCount}set partialCount(e){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partialCount=e)}set(e){return Reflect.has(e,"type")&&e.type&&(this.type=e.type),super.set(e),this}_createNewOscillator(e){if(e!==this._sourceType){this._sourceType=e;const t=DE[e],n=this.now();if(this._oscillator){const s=this._oscillator;s.stop(n),this.context.setTimeout(()=>s.dispose(),this.blockTime)}this._oscillator=new t({context:this.context}),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.connect(this.output),this._oscillator.onstop=()=>this.onstop(this),this.state==="started"&&this._oscillator.start(n)}}get phase(){return this._oscillator.phase}set phase(e){this._oscillator.phase=e}get sourceType(){return this._sourceType}set sourceType(e){let t="sine";this._oscillator.type!=="pwm"&&this._oscillator.type!=="pulse"&&(t=this._oscillator.type),e==="fm"?this.type="fm"+t:e==="am"?this.type="am"+t:e==="fat"?this.type="fat"+t:e==="oscillator"?this.type=t:e==="pulse"?this.type="pulse":e==="pwm"&&(this.type="pwm")}_getOscType(e,t){return e instanceof DE[t]}get baseType(){return this._oscillator.baseType}set baseType(e){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&e!=="pulse"&&e!=="pwm"&&(this._oscillator.baseType=e)}get width(){if(this._getOscType(this._oscillator,"pulse"))return this._oscillator.width}get count(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.count}set count(e){this._getOscType(this._oscillator,"fat")&&Xc(e)&&(this._oscillator.count=e)}get spread(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.spread}set spread(e){this._getOscType(this._oscillator,"fat")&&Xc(e)&&(this._oscillator.spread=e)}get modulationType(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.modulationType}set modulationType(e){(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))&&Fr(e)&&(this._oscillator.modulationType=e)}get modulationIndex(){if(this._getOscType(this._oscillator,"fm"))return this._oscillator.modulationIndex}get harmonicity(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.harmonicity}get modulationFrequency(){if(this._getOscType(this._oscillator,"pwm"))return this._oscillator.modulationFrequency}asArray(e=1024){return kn(this,void 0,void 0,function*(){return hl(this,e)})}dispose(){return super.dispose(),this.detune.dispose(),this.frequency.dispose(),this._oscillator.dispose(),this}}function xN(i,e=1/0){const t=new WeakMap;return function(n,s){Reflect.defineProperty(n,s,{configurable:!0,enumerable:!0,get:function(){return t.get(this)},set:function(r){Ga(r,i,e),t.set(this,r)}})}}function Ko(i,e=1/0){const t=new WeakMap;return function(n,s){Reflect.defineProperty(n,s,{configurable:!0,enumerable:!0,get:function(){return t.get(this)},set:function(r){Ga(this.toSeconds(r),i,e),t.set(this,r)}})}}class ef extends vs{constructor(){super(et(ef.getDefaults(),arguments,["url","onload"])),this.name="Player",this._activeSources=new Set;const e=et(ef.getDefaults(),arguments,["url","onload"]);this._buffer=new rn({onload:this._onload.bind(this,e.onload),onerror:e.onerror,reverse:e.reverse,url:e.url}),this.autostart=e.autostart,this._loop=e.loop,this._loopStart=e.loopStart,this._loopEnd=e.loopEnd,this._playbackRate=e.playbackRate,this.fadeIn=e.fadeIn,this.fadeOut=e.fadeOut}static getDefaults(){return Object.assign(vs.getDefaults(),{autostart:!1,fadeIn:0,fadeOut:0,loop:!1,loopEnd:0,loopStart:0,onload:sn,onerror:sn,playbackRate:1,reverse:!1})}load(e){return kn(this,void 0,void 0,function*(){return yield this._buffer.load(e),this._onload(),this})}_onload(e=sn){e(),this.autostart&&this.start()}_onSourceEnd(e){this.onstop(this),this._activeSources.delete(e),this._activeSources.size===0&&!this._synced&&this._state.getValueAtTime(this.now())==="started"&&(this._state.cancel(this.now()),this._state.setStateAtTime("stopped",this.now()))}start(e,t,n){return super.start(e,t,n),this}_start(e,t,n){this._loop?t=Du(t,this._loopStart):t=Du(t,0);const s=this.toSeconds(t),r=n;n=Du(n,Math.max(this._buffer.duration-s,0));let o=this.toSeconds(n);o=o/this._playbackRate,e=this.toSeconds(e);const a=new Xd({url:this._buffer,context:this.context,fadeIn:this.fadeIn,fadeOut:this.fadeOut,loop:this._loop,loopEnd:this._loopEnd,loopStart:this._loopStart,onended:this._onSourceEnd.bind(this),playbackRate:this._playbackRate}).connect(this.output);!this._loop&&!this._synced&&(this._state.cancel(e+o),this._state.setStateAtTime("stopped",e+o,{implicitEnd:!0})),this._activeSources.add(a),this._loop&&Ps(r)?a.start(e,s):a.start(e,s,o-this.toSeconds(this.fadeOut))}_stop(e){const t=this.toSeconds(e);this._activeSources.forEach(n=>n.stop(t))}restart(e,t,n){return super.restart(e,t,n),this}_restart(e,t,n){this._stop(e),this._start(e,t,n)}seek(e,t){const n=this.toSeconds(t);if(this._state.getValueAtTime(n)==="started"){const s=this.toSeconds(e);this._stop(n),this._start(n,s)}return this}setLoopPoints(e,t){return this.loopStart=e,this.loopEnd=t,this}get loopStart(){return this._loopStart}set loopStart(e){this._loopStart=e,this.buffer.loaded&&Ga(this.toSeconds(e),0,this.buffer.duration),this._activeSources.forEach(t=>{t.loopStart=e})}get loopEnd(){return this._loopEnd}set loopEnd(e){this._loopEnd=e,this.buffer.loaded&&Ga(this.toSeconds(e),0,this.buffer.duration),this._activeSources.forEach(t=>{t.loopEnd=e})}get buffer(){return this._buffer}set buffer(e){this._buffer.set(e)}get loop(){return this._loop}set loop(e){if(this._loop!==e&&(this._loop=e,this._activeSources.forEach(t=>{t.loop=e}),e)){const t=this._state.getNextState("stopped",this.now());t&&this._state.cancel(t.time)}}get playbackRate(){return this._playbackRate}set playbackRate(e){this._playbackRate=e;const t=this.now(),n=this._state.getNextState("stopped",t);n&&n.implicitEnd&&(this._state.cancel(n.time),this._activeSources.forEach(s=>s.cancelStop())),this._activeSources.forEach(s=>{s.playbackRate.setValueAtTime(e,t)})}get reverse(){return this._buffer.reverse}set reverse(e){this._buffer.reverse=e}get loaded(){return this._buffer.loaded}dispose(){return super.dispose(),this._activeSources.forEach(e=>e.dispose()),this._activeSources.clear(),this._buffer.dispose(),this}}yr([Ko(0)],ef.prototype,"fadeIn",void 0);yr([Ko(0)],ef.prototype,"fadeOut",void 0);class Wo extends Lt{constructor(){super(et(Wo.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="Envelope",this._sig=new jn({context:this.context,value:0}),this.output=this._sig,this.input=void 0;const e=et(Wo.getDefaults(),arguments,["attack","decay","sustain","release"]);this.attack=e.attack,this.decay=e.decay,this.sustain=e.sustain,this.release=e.release,this.attackCurve=e.attackCurve,this.releaseCurve=e.releaseCurve,this.decayCurve=e.decayCurve}static getDefaults(){return Object.assign(Lt.getDefaults(),{attack:.01,attackCurve:"linear",decay:.1,decayCurve:"exponential",release:1,releaseCurve:"exponential",sustain:.5})}get value(){return this.getValueAtTime(this.now())}_getCurve(e,t){if(Fr(e))return e;{let n;for(n in Sp)if(Sp[n][t]===e)return n;return e}}_setCurve(e,t,n){if(Fr(n)&&Reflect.has(Sp,n)){const s=Sp[n];zc(s)?e!=="_decayCurve"&&(this[e]=s[t]):this[e]=s}else if(ur(n)&&e!=="_decayCurve")this[e]=n;else throw new Error("Envelope: invalid curve: "+n)}get attackCurve(){return this._getCurve(this._attackCurve,"In")}set attackCurve(e){this._setCurve("_attackCurve","In",e)}get releaseCurve(){return this._getCurve(this._releaseCurve,"Out")}set releaseCurve(e){this._setCurve("_releaseCurve","Out",e)}get decayCurve(){return this._decayCurve}set decayCurve(e){wt(["linear","exponential"].some(t=>t===e),`Invalid envelope curve: ${e}`),this._decayCurve=e}triggerAttack(e,t=1){this.log("triggerAttack",e,t),e=this.toSeconds(e);let s=this.toSeconds(this.attack);const r=this.toSeconds(this.decay),o=this.getValueAtTime(e);if(o>0){const a=1/s;s=(1-o)/a}if(s<this.sampleTime)this._sig.cancelScheduledValues(e),this._sig.setValueAtTime(t,e);else if(this._attackCurve==="linear")this._sig.linearRampTo(t,s,e);else if(this._attackCurve==="exponential")this._sig.targetRampTo(t,s,e);else{this._sig.cancelAndHoldAtTime(e);let a=this._attackCurve;for(let c=1;c<a.length;c++)if(a[c-1]<=o&&o<=a[c]){a=this._attackCurve.slice(c),a[0]=o;break}this._sig.setValueCurveAtTime(a,e,s,t)}if(r&&this.sustain<1){const a=t*this.sustain,c=e+s;this.log("decay",c),this._decayCurve==="linear"?this._sig.linearRampToValueAtTime(a,r+c):this._sig.exponentialApproachValueAtTime(a,c,r)}return this}triggerRelease(e){this.log("triggerRelease",e),e=this.toSeconds(e);const t=this.getValueAtTime(e);if(t>0){const n=this.toSeconds(this.release);n<this.sampleTime?this._sig.setValueAtTime(0,e):this._releaseCurve==="linear"?this._sig.linearRampTo(0,n,e):this._releaseCurve==="exponential"?this._sig.targetRampTo(0,n,e):(wt(ur(this._releaseCurve),"releaseCurve must be either 'linear', 'exponential' or an array"),this._sig.cancelAndHoldAtTime(e),this._sig.setValueCurveAtTime(this._releaseCurve,e,n,t))}return this}getValueAtTime(e){return this._sig.getValueAtTime(e)}triggerAttackRelease(e,t,n=1){return t=this.toSeconds(t),this.triggerAttack(t,n),this.triggerRelease(t+this.toSeconds(e)),this}cancel(e){return this._sig.cancelScheduledValues(this.toSeconds(e)),this}connect(e,t=0,n=0){return db(this,e,t,n),this}asArray(e=1024){return kn(this,void 0,void 0,function*(){const t=e/this.context.sampleRate,n=new lb(1,t,this.context.sampleRate),s=this.toSeconds(this.attack)+this.toSeconds(this.decay),r=s+this.toSeconds(this.release),o=r*.1,a=r+o,c=new this.constructor(Object.assign(this.get(),{attack:t*this.toSeconds(this.attack)/a,decay:t*this.toSeconds(this.decay)/a,release:t*this.toSeconds(this.release)/a,context:n}));return c._sig.toDestination(),c.triggerAttackRelease(t*(s+o)/a,0),(yield n.render()).getChannelData(0)})}dispose(){return super.dispose(),this._sig.dispose(),this}}yr([Ko(0)],Wo.prototype,"attack",void 0);yr([Ko(0)],Wo.prototype,"decay",void 0);yr([xN(0,1)],Wo.prototype,"sustain",void 0);yr([Ko(0)],Wo.prototype,"release",void 0);const Sp=(()=>{let e,t;const n=[];for(e=0;e<128;e++)n[e]=Math.sin(e/(128-1)*(Math.PI/2));const s=[],r=6.4;for(e=0;e<128-1;e++){t=e/(128-1);const d=Math.sin(t*(Math.PI*2)*r-Math.PI/2)+1;s[e]=d/10+t*.83}s[128-1]=1;const o=[],a=5;for(e=0;e<128;e++)o[e]=Math.ceil(e/(128-1)*a)/a;const c=[];for(e=0;e<128;e++)t=e/(128-1),c[e]=.5*(1-Math.cos(Math.PI*t));const l=[];for(e=0;e<128;e++){t=e/(128-1);const d=Math.pow(t,3)*4+.2,f=Math.cos(d*Math.PI*2*t);l[e]=Math.abs(f*(1-t))}function u(d){const f=new Array(d.length);for(let m=0;m<d.length;m++)f[m]=1-d[m];return f}function h(d){return d.slice(0).reverse()}return{bounce:{In:u(l),Out:l},cosine:{In:n,Out:h(n)},exponential:"exponential",linear:"linear",ripple:{In:s,Out:u(s)},sine:{In:c,Out:u(c)},step:{In:o,Out:u(o)}}})();class Kc extends Lt{constructor(){super(et(Kc.getDefaults(),arguments)),this._scheduledEvents=[],this._synced=!1,this._original_triggerAttack=this.triggerAttack,this._original_triggerRelease=this.triggerRelease;const e=et(Kc.getDefaults(),arguments);this._volume=this.output=new Yc({context:this.context,volume:e.volume}),this.volume=this._volume.volume,En(this,"volume")}static getDefaults(){return Object.assign(Lt.getDefaults(),{volume:0})}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",0)),this}_syncState(){let e=!1;return this._synced||(this._synced=!0,e=!0),e}_syncMethod(e,t){const n=this["_original_"+e]=this[e];this[e]=(...s)=>{const r=s[t],o=this.context.transport.schedule(a=>{s[t]=a,n.apply(this,s)},r);this._scheduledEvents.push(o)}}unsync(){return this._scheduledEvents.forEach(e=>this.context.transport.clear(e)),this._scheduledEvents=[],this._synced&&(this._synced=!1,this.triggerAttack=this._original_triggerAttack,this.triggerRelease=this._original_triggerRelease),this}triggerAttackRelease(e,t,n,s){const r=this.toSeconds(n),o=this.toSeconds(t);return this.triggerAttack(e,r,s),this.triggerRelease(r+o),this}dispose(){return super.dispose(),this._volume.dispose(),this.unsync(),this._scheduledEvents=[],this}}class Qc extends Kc{constructor(){super(et(Qc.getDefaults(),arguments));const e=et(Qc.getDefaults(),arguments);this.portamento=e.portamento,this.onsilence=e.onsilence}static getDefaults(){return Object.assign(Kc.getDefaults(),{detune:0,onsilence:sn,portamento:0})}triggerAttack(e,t,n=1){this.log("triggerAttack",e,t,n);const s=this.toSeconds(t);return this._triggerEnvelopeAttack(s,n),this.setNote(e,s),this}triggerRelease(e){this.log("triggerRelease",e);const t=this.toSeconds(e);return this._triggerEnvelopeRelease(t),this}setNote(e,t){const n=this.toSeconds(t),s=e instanceof Ns?e.toFrequency():e;if(this.portamento>0&&this.getLevelAtTime(n)>.05){const r=this.toSeconds(this.portamento);this.frequency.exponentialRampTo(s,r,n)}else this.frequency.setValueAtTime(s,n);return this}}yr([Ko(0)],Qc.prototype,"portamento",void 0);class mb extends Wo{constructor(){super(et(mb.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="AmplitudeEnvelope",this._gainNode=new Oi({context:this.context,gain:0}),this.output=this._gainNode,this.input=this._gainNode,this._sig.connect(this._gainNode.gain),this.output=this._gainNode,this.input=this._gainNode}dispose(){return super.dispose(),this._gainNode.dispose(),this}}class tf extends Qc{constructor(){super(et(tf.getDefaults(),arguments)),this.name="Synth";const e=et(tf.getDefaults(),arguments);this.oscillator=new Jd(Object.assign({context:this.context,detune:e.detune,onstop:()=>this.onsilence(this)},e.oscillator)),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.envelope=new mb(Object.assign({context:this.context},e.envelope)),this.oscillator.chain(this.envelope,this.output),En(this,["oscillator","frequency","detune","envelope"])}static getDefaults(){return Object.assign(Qc.getDefaults(),{envelope:Object.assign(PE(Wo.getDefaults(),Object.keys(Lt.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.3}),oscillator:Object.assign(PE(Jd.getDefaults(),[...Object.keys(vs.getDefaults()),"frequency","detune"]),{type:"triangle"})})}_triggerEnvelopeAttack(e,t){if(this.envelope.triggerAttack(e,t),this.oscillator.start(e),this.envelope.sustain===0){const n=this.toSeconds(this.envelope.attack),s=this.toSeconds(this.envelope.decay);this.oscillator.stop(e+n+s)}}_triggerEnvelopeRelease(e){this.envelope.triggerRelease(e),this.oscillator.stop(e+this.toSeconds(this.envelope.release))}getLevelAtTime(e){return e=this.toSeconds(e),this.envelope.getValueAtTime(e)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this}}class nf extends tf{constructor(){super(et(nf.getDefaults(),arguments)),this.name="MembraneSynth",this.portamento=0;const e=et(nf.getDefaults(),arguments);this.pitchDecay=e.pitchDecay,this.octaves=e.octaves,En(this,["oscillator","envelope"])}static getDefaults(){return Pu(Qc.getDefaults(),tf.getDefaults(),{envelope:{attack:.001,attackCurve:"exponential",decay:.4,release:1.4,sustain:.01},octaves:10,oscillator:{type:"sine"},pitchDecay:.05})}setNote(e,t){const n=this.toSeconds(t),s=this.toFrequency(e instanceof Ns?e.toFrequency():e),r=s*this.octaves;return this.oscillator.frequency.setValueAtTime(r,n),this.oscillator.frequency.exponentialRampToValueAtTime(s,n+this.toSeconds(this.pitchDecay)),this}dispose(){return super.dispose(),this}}yr([xN(0)],nf.prototype,"octaves",void 0);yr([Ko(0)],nf.prototype,"pitchDecay",void 0);const yN=new Set;function gb(i){yN.add(i)}function SN(i,e){const t=`registerProcessor("${i}", ${e})`;yN.add(t)}const KH=`
	/**
	 * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. 
	 */
	class ToneAudioWorkletProcessor extends AudioWorkletProcessor {

		constructor(options) {
			
			super(options);
			/**
			 * If the processor was disposed or not. Keep alive until it's disposed.
			 */
			this.disposed = false;
		   	/** 
			 * The number of samples in the processing block
			 */
			this.blockSize = 128;
			/**
			 * the sample rate
			 */
			this.sampleRate = sampleRate;

			this.port.onmessage = (event) => {
				// when it receives a dispose 
				if (event.data === "dispose") {
					this.disposed = true;
				}
			};
		}
	}
`;gb(KH);const QH=`
	/**
	 * Abstract class for a single input/output processor. 
	 * has a 'generate' function which processes one sample at a time
	 */
	class SingleIOProcessor extends ToneAudioWorkletProcessor {

		constructor(options) {
			super(Object.assign(options, {
				numberOfInputs: 1,
				numberOfOutputs: 1
			}));
			/**
			 * Holds the name of the parameter and a single value of that
			 * parameter at the current sample
			 * @type { [name: string]: number }
			 */
			this.params = {}
		}

		/**
		 * Generate an output sample from the input sample and parameters
		 * @abstract
		 * @param input number
		 * @param channel number
		 * @param parameters { [name: string]: number }
		 * @returns number
		 */
		generate(){}

		/**
		 * Update the private params object with the 
		 * values of the parameters at the given index
		 * @param parameters { [name: string]: Float32Array },
		 * @param index number
		 */
		updateParams(parameters, index) {
			for (const paramName in parameters) {
				const param = parameters[paramName];
				if (param.length > 1) {
					this.params[paramName] = parameters[paramName][index];
				} else {
					this.params[paramName] = parameters[paramName][0];
				}
			}
		}

		/**
		 * Process a single frame of the audio
		 * @param inputs Float32Array[][]
		 * @param outputs Float32Array[][]
		 */
		process(inputs, outputs, parameters) {
			const input = inputs[0];
			const output = outputs[0];
			// get the parameter values
			const channelCount = Math.max(input && input.length || 0, output.length);
			for (let sample = 0; sample < this.blockSize; sample++) {
				this.updateParams(parameters, sample);
				for (let channel = 0; channel < channelCount; channel++) {
					const inputSample = input && input.length ? input[channel][sample] : 0;
					output[channel][sample] = this.generate(inputSample, channel, this.params);
				}
			}
			return !this.disposed;
		}
	};
`;gb(QH);const JH=`
	/**
	 * A multichannel buffer for use within an AudioWorkletProcessor as a delay line
	 */
	class DelayLine {
		
		constructor(size, channels) {
			this.buffer = [];
			this.writeHead = []
			this.size = size;

			// create the empty channels
			for (let i = 0; i < channels; i++) {
				this.buffer[i] = new Float32Array(this.size);
				this.writeHead[i] = 0;
			}
		}

		/**
		 * Push a value onto the end
		 * @param channel number
		 * @param value number
		 */
		push(channel, value) {
			this.writeHead[channel] += 1;
			if (this.writeHead[channel] > this.size) {
				this.writeHead[channel] = 0;
			}
			this.buffer[channel][this.writeHead[channel]] = value;
		}

		/**
		 * Get the recorded value of the channel given the delay
		 * @param channel number
		 * @param delay number delay samples
		 */
		get(channel, delay) {
			let readHead = this.writeHead[channel] - Math.floor(delay);
			if (readHead < 0) {
				readHead += this.size;
			}
			return this.buffer[channel][readHead];
		}
	}
`;gb(JH);const e5="feedback-comb-filter",t5=`
	class FeedbackCombFilterWorklet extends SingleIOProcessor {

		constructor(options) {
			super(options);
			this.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);
		}

		static get parameterDescriptors() {
			return [{
				name: "delayTime",
				defaultValue: 0.1,
				minValue: 0,
				maxValue: 1,
				automationRate: "k-rate"
			}, {
				name: "feedback",
				defaultValue: 0.5,
				minValue: 0,
				maxValue: 0.9999,
				automationRate: "k-rate"
			}];
		}

		generate(input, channel, parameters) {
			const delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);
			this.delayLine.push(channel, input + delayedSample * parameters.feedback);
			return delayedSample;
		}
	}
`;SN(e5,t5);let _b=class zx extends Kc{constructor(){super(et(zx.getDefaults(),arguments,["urls","onload","baseUrl"],"urls")),this.name="Sampler",this._activeSources=new Map;const e=et(zx.getDefaults(),arguments,["urls","onload","baseUrl"],"urls"),t={};Object.keys(e.urls).forEach(n=>{const s=parseInt(n,10);if(wt(yp(n)||Xc(s)&&isFinite(s),`url key is neither a note or midi pitch: ${n}`),yp(n)){const r=new Ns(this.context,n).toMidi();t[r]=e.urls[n]}else Xc(s)&&isFinite(s)&&(t[s]=e.urls[s])}),this._buffers=new fb({urls:t,onload:e.onload,baseUrl:e.baseUrl,onerror:e.onerror}),this.attack=e.attack,this.release=e.release,this.curve=e.curve,this._buffers.loaded&&Promise.resolve().then(e.onload)}static getDefaults(){return Object.assign(Kc.getDefaults(),{attack:0,baseUrl:"",curve:"exponential",onload:sn,onerror:sn,release:.1,urls:{}})}_findClosest(e){let n=0;for(;n<96;){if(this._buffers.has(e+n))return-n;if(this._buffers.has(e-n))return n;n++}throw new Error(`No available buffers for note: ${e}`)}triggerAttack(e,t,n=1){return this.log("triggerAttack",e,t,n),Array.isArray(e)||(e=[e]),e.forEach(s=>{const r=_N(new Ns(this.context,s).toFrequency()),o=Math.round(r),a=r-o,c=this._findClosest(o),l=o-c,u=this._buffers.get(l),h=gN(c+a),d=new Xd({url:u,context:this.context,curve:this.curve,fadeIn:this.attack,fadeOut:this.release,playbackRate:h}).connect(this.output);d.start(t,0,u.duration/h,n),ur(this._activeSources.get(o))||this._activeSources.set(o,[]),this._activeSources.get(o).push(d),d.onended=()=>{if(this._activeSources&&this._activeSources.has(o)){const f=this._activeSources.get(o),m=f.indexOf(d);m!==-1&&f.splice(m,1)}}}),this}triggerRelease(e,t){return this.log("triggerRelease",e,t),Array.isArray(e)||(e=[e]),e.forEach(n=>{const s=new Ns(this.context,n).toMidi();if(this._activeSources.has(s)&&this._activeSources.get(s).length){const r=this._activeSources.get(s);t=this.toSeconds(t),r.forEach(o=>{o.stop(t)}),this._activeSources.set(s,[])}}),this}releaseAll(e){const t=this.toSeconds(e);return this._activeSources.forEach(n=>{for(;n.length;)n.shift().stop(t)}),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1)),this}triggerAttackRelease(e,t,n,s=1){const r=this.toSeconds(n);return this.triggerAttack(e,r,s),ur(t)?(wt(ur(e),"notes must be an array when duration is array"),e.forEach((o,a)=>{const c=t[Math.min(a,t.length-1)];this.triggerRelease(o,r+this.toSeconds(c))})):this.triggerRelease(e,r+this.toSeconds(t)),this}add(e,t,n){if(wt(yp(e)||isFinite(e),`note must be a pitch or midi: ${e}`),yp(e)){const s=new Ns(this.context,e).toMidi();this._buffers.add(s,t,n)}else this._buffers.add(e,t,n);return this}get loaded(){return this._buffers.loaded}dispose(){return super.dispose(),this._buffers.dispose(),this._activeSources.forEach(e=>{e.forEach(t=>t.dispose())}),this._activeSources.clear(),this}};yr([Ko(0)],_b.prototype,"attack",void 0);yr([Ko(0)],_b.prototype,"release",void 0);class Sg extends Lt{constructor(){super(Object.assign(et(Sg.getDefaults(),arguments,["pan"]))),this.name="Panner",this._panner=this.context.createStereoPanner(),this.input=this._panner,this.output=this._panner;const e=et(Sg.getDefaults(),arguments,["pan"]);this.pan=new pn({context:this.context,param:this._panner.pan,value:e.pan,minValue:-1,maxValue:1}),this._panner.channelCount=e.channelCount,this._panner.channelCountMode="explicit",En(this,"pan")}static getDefaults(){return Object.assign(Lt.getDefaults(),{pan:0,channelCount:1})}dispose(){return super.dispose(),this._panner.disconnect(),this.pan.dispose(),this}}const n5="bit-crusher",i5=`
	class BitCrusherWorklet extends SingleIOProcessor {

		static get parameterDescriptors() {
			return [{
				name: "bits",
				defaultValue: 12,
				minValue: 1,
				maxValue: 16,
				automationRate: 'k-rate'
			}];
		}

		generate(input, _channel, parameters) {
			const step = Math.pow(0.5, parameters.bits - 1);
			const val = step * Math.floor(input / step + 0.5);
			return val;
		}
	}
`;SN(n5,i5);class wn extends Lt{constructor(){super(et(wn.getDefaults(),arguments,["solo"])),this.name="Solo";const e=et(wn.getDefaults(),arguments,["solo"]);this.input=this.output=new Oi({context:this.context}),wn._allSolos.has(this.context)||wn._allSolos.set(this.context,new Set),wn._allSolos.get(this.context).add(this),this.solo=e.solo}static getDefaults(){return Object.assign(Lt.getDefaults(),{solo:!1})}get solo(){return this._isSoloed()}set solo(e){e?this._addSolo():this._removeSolo(),wn._allSolos.get(this.context).forEach(t=>t._updateSolo())}get muted(){return this.input.gain.value===0}_addSolo(){wn._soloed.has(this.context)||wn._soloed.set(this.context,new Set),wn._soloed.get(this.context).add(this)}_removeSolo(){wn._soloed.has(this.context)&&wn._soloed.get(this.context).delete(this)}_isSoloed(){return wn._soloed.has(this.context)&&wn._soloed.get(this.context).has(this)}_noSolos(){return!wn._soloed.has(this.context)||wn._soloed.has(this.context)&&wn._soloed.get(this.context).size===0}_updateSolo(){this._isSoloed()?this.input.gain.value=1:this._noSolos()?this.input.gain.value=1:this.input.gain.value=0}dispose(){return super.dispose(),wn._allSolos.get(this.context).delete(this),this._removeSolo(),this}}wn._allSolos=new Map;wn._soloed=new Map;class bg extends Lt{constructor(){super(et(bg.getDefaults(),arguments,["pan","volume"])),this.name="PanVol";const e=et(bg.getDefaults(),arguments,["pan","volume"]);this._panner=this.input=new Sg({context:this.context,pan:e.pan,channelCount:e.channelCount}),this.pan=this._panner.pan,this._volume=this.output=new Yc({context:this.context,volume:e.volume}),this.volume=this._volume.volume,this._panner.connect(this._volume),this.mute=e.mute,En(this,["pan","volume"])}static getDefaults(){return Object.assign(Lt.getDefaults(),{mute:!1,pan:0,volume:0,channelCount:1})}get mute(){return this._volume.mute}set mute(e){this._volume.mute=e}dispose(){return super.dispose(),this._panner.dispose(),this.pan.dispose(),this._volume.dispose(),this.volume.dispose(),this}}class wc extends Lt{constructor(){super(et(wc.getDefaults(),arguments,["volume","pan"])),this.name="Channel";const e=et(wc.getDefaults(),arguments,["volume","pan"]);this._solo=this.input=new wn({solo:e.solo,context:this.context}),this._panVol=this.output=new bg({context:this.context,pan:e.pan,volume:e.volume,mute:e.mute,channelCount:e.channelCount}),this.pan=this._panVol.pan,this.volume=this._panVol.volume,this._solo.connect(this._panVol),En(this,["pan","volume"])}static getDefaults(){return Object.assign(Lt.getDefaults(),{pan:0,volume:0,mute:!1,solo:!1,channelCount:1})}get solo(){return this._solo.solo}set solo(e){this._solo.solo=e}get muted(){return this._solo.muted||this.mute}get mute(){return this._panVol.mute}set mute(e){this._panVol.mute=e}_getBus(e){return wc.buses.has(e)||wc.buses.set(e,new Oi({context:this.context})),wc.buses.get(e)}send(e,t=0){const n=this._getBus(e),s=new Oi({context:this.context,units:"decibels",gain:t});return this.connect(s),s.connect(n),s}receive(e){return this._getBus(e).connect(this),this}dispose(){return super.dispose(),this._panVol.dispose(),this.pan.dispose(),this.volume.dispose(),this._solo.dispose(),this}}wc.buses=new Map;class s5 extends Lt{constructor(){super(...arguments),this.name="Listener",this.positionX=new pn({context:this.context,param:this.context.rawContext.listener.positionX}),this.positionY=new pn({context:this.context,param:this.context.rawContext.listener.positionY}),this.positionZ=new pn({context:this.context,param:this.context.rawContext.listener.positionZ}),this.forwardX=new pn({context:this.context,param:this.context.rawContext.listener.forwardX}),this.forwardY=new pn({context:this.context,param:this.context.rawContext.listener.forwardY}),this.forwardZ=new pn({context:this.context,param:this.context.rawContext.listener.forwardZ}),this.upX=new pn({context:this.context,param:this.context.rawContext.listener.upX}),this.upY=new pn({context:this.context,param:this.context.rawContext.listener.upY}),this.upZ=new pn({context:this.context,param:this.context.rawContext.listener.upZ})}static getDefaults(){return Object.assign(Lt.getDefaults(),{positionX:0,positionY:0,positionZ:0,forwardX:0,forwardY:0,forwardZ:-1,upX:0,upY:1,upZ:0})}dispose(){return super.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this.forwardX.dispose(),this.forwardY.dispose(),this.forwardZ.dispose(),this.upX.dispose(),this.upY.dispose(),this.upZ.dispose(),this}}l_(i=>{i.listener=new s5({context:i})});u_(i=>{i.listener.dispose()});nr().transport;nr().destination;nr().destination;nr().listener;nr().draw;const r5=nr();/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const f_="170",ei={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Ro={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},o5=0,LE=1,a5=2,bN=1,c5=2,go=3,Ha=0,Fi=1,To=2,Fo=0,Iu=1,IE=2,FE=3,UE=4,l5=5,Ac=100,u5=101,h5=102,d5=103,f5=104,p5=200,m5=201,g5=202,_5=203,Gx=204,Vx=205,v5=206,x5=207,y5=208,S5=209,b5=210,M5=211,T5=212,E5=213,w5=214,Hx=0,Wx=1,$x=2,th=3,qx=4,Xx=5,jx=6,Yx=7,MN=0,A5=1,C5=2,Ia=0,R5=1,N5=2,P5=3,D5=4,L5=5,I5=6,F5=7,TN=300,nh=301,ih=302,Zx=303,Kx=304,p_=306,Qx=1e3,Fc=1001,Jx=1002,hr=1003,U5=1004,bp=1005,Cr=1006,M0=1007,Uc=1008,$o=1009,EN=1010,wN=1011,sf=1012,vb=1013,Jc=1014,No=1015,Ah=1016,xb=1017,yb=1018,sh=1020,AN=35902,CN=1021,RN=1022,sr=1023,NN=1024,PN=1025,Fu=1026,rh=1027,DN=1028,Sb=1029,LN=1030,bb=1031,Mb=1033,Om=33776,Bm=33777,km=33778,zm=33779,ey=35840,ty=35841,ny=35842,iy=35843,sy=36196,ry=37492,oy=37496,ay=37808,cy=37809,ly=37810,uy=37811,hy=37812,dy=37813,fy=37814,py=37815,my=37816,gy=37817,_y=37818,vy=37819,xy=37820,yy=37821,Gm=36492,Sy=36494,by=36495,IN=36283,My=36284,Ty=36285,Ey=36286,O5=3200,B5=3201,k5=0,z5=1,Aa="",ps="srgb",Ch="srgb-linear",m_="linear",Jt="srgb",Ll=7680,OE=519,G5=512,V5=513,H5=514,FN=515,W5=516,$5=517,q5=518,X5=519,BE=35044,kE="300 es",Po=2e3,Mg=2001;let Za=class{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const s=this._listeners[e];if(s!==void 0){const r=s.indexOf(t);r!==-1&&s.splice(r,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const s=n.slice(0);for(let r=0,o=s.length;r<o;r++)s[r].call(this,e);e.target=null}}};const pi=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let zE=1234567;const Dd=Math.PI/180,rf=180/Math.PI;function Rh(){const i=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(pi[i&255]+pi[i>>8&255]+pi[i>>16&255]+pi[i>>24&255]+"-"+pi[e&255]+pi[e>>8&255]+"-"+pi[e>>16&15|64]+pi[e>>24&255]+"-"+pi[t&63|128]+pi[t>>8&255]+"-"+pi[t>>16&255]+pi[t>>24&255]+pi[n&255]+pi[n>>8&255]+pi[n>>16&255]+pi[n>>24&255]).toLowerCase()}function yi(i,e,t){return Math.max(e,Math.min(t,i))}function Tb(i,e){return(i%e+e)%e}function j5(i,e,t,n,s){return n+(i-e)*(s-n)/(t-e)}function Y5(i,e,t){return i!==e?(t-i)/(e-i):0}function Ld(i,e,t){return(1-t)*i+t*e}function Z5(i,e,t,n){return Ld(i,e,1-Math.exp(-t*n))}function K5(i,e=1){return e-Math.abs(Tb(i,e*2)-e)}function Q5(i,e,t){return i<=e?0:i>=t?1:(i=(i-e)/(t-e),i*i*(3-2*i))}function J5(i,e,t){return i<=e?0:i>=t?1:(i=(i-e)/(t-e),i*i*i*(i*(i*6-15)+10))}function eW(i,e){return i+Math.floor(Math.random()*(e-i+1))}function tW(i,e){return i+Math.random()*(e-i)}function nW(i){return i*(.5-Math.random())}function iW(i){i!==void 0&&(zE=i);let e=zE+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function sW(i){return i*Dd}function rW(i){return i*rf}function oW(i){return(i&i-1)===0&&i!==0}function aW(i){return Math.pow(2,Math.ceil(Math.log(i)/Math.LN2))}function cW(i){return Math.pow(2,Math.floor(Math.log(i)/Math.LN2))}function lW(i,e,t,n,s){const r=Math.cos,o=Math.sin,a=r(t/2),c=o(t/2),l=r((e+n)/2),u=o((e+n)/2),h=r((e-n)/2),d=o((e-n)/2),f=r((n-e)/2),m=o((n-e)/2);switch(s){case"XYX":i.set(a*u,c*h,c*d,a*l);break;case"YZY":i.set(c*d,a*u,c*h,a*l);break;case"ZXZ":i.set(c*h,c*d,a*u,a*l);break;case"XZX":i.set(a*u,c*m,c*f,a*l);break;case"YXY":i.set(c*f,a*u,c*m,a*l);break;case"ZYZ":i.set(c*m,c*f,a*u,a*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+s)}}function fu(i,e){switch(e.constructor){case Float32Array:return i;case Uint32Array:return i/4294967295;case Uint16Array:return i/65535;case Uint8Array:return i/255;case Int32Array:return Math.max(i/2147483647,-1);case Int16Array:return Math.max(i/32767,-1);case Int8Array:return Math.max(i/127,-1);default:throw new Error("Invalid component type.")}}function Ei(i,e){switch(e.constructor){case Float32Array:return i;case Uint32Array:return Math.round(i*4294967295);case Uint16Array:return Math.round(i*65535);case Uint8Array:return Math.round(i*255);case Int32Array:return Math.round(i*2147483647);case Int16Array:return Math.round(i*32767);case Int8Array:return Math.round(i*127);default:throw new Error("Invalid component type.")}}const wy={DEG2RAD:Dd,RAD2DEG:rf,generateUUID:Rh,clamp:yi,euclideanModulo:Tb,mapLinear:j5,inverseLerp:Y5,lerp:Ld,damp:Z5,pingpong:K5,smoothstep:Q5,smootherstep:J5,randInt:eW,randFloat:tW,randFloatSpread:nW,seededRandom:iW,degToRad:sW,radToDeg:rW,isPowerOfTwo:oW,ceilPowerOfTwo:aW,floorPowerOfTwo:cW,setQuaternionFromProperEuler:lW,normalize:Ei,denormalize:fu};let lt=class UN{constructor(e=0,t=0){UN.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6],this.y=s[1]*t+s[4]*n+s[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(yi(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),s=Math.sin(t),r=this.x-e.x,o=this.y-e.y;return this.x=r*n-o*s+e.x,this.y=r*s+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}},Nt=class ON{constructor(e,t,n,s,r,o,a,c,l){ON.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,s,r,o,a,c,l)}set(e,t,n,s,r,o,a,c,l){const u=this.elements;return u[0]=e,u[1]=s,u[2]=a,u[3]=t,u[4]=r,u[5]=c,u[6]=n,u[7]=o,u[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,s=t.elements,r=this.elements,o=n[0],a=n[3],c=n[6],l=n[1],u=n[4],h=n[7],d=n[2],f=n[5],m=n[8],_=s[0],g=s[3],p=s[6],y=s[1],x=s[4],v=s[7],S=s[2],M=s[5],E=s[8];return r[0]=o*_+a*y+c*S,r[3]=o*g+a*x+c*M,r[6]=o*p+a*v+c*E,r[1]=l*_+u*y+h*S,r[4]=l*g+u*x+h*M,r[7]=l*p+u*v+h*E,r[2]=d*_+f*y+m*S,r[5]=d*g+f*x+m*M,r[8]=d*p+f*v+m*E,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],s=e[2],r=e[3],o=e[4],a=e[5],c=e[6],l=e[7],u=e[8];return t*o*u-t*a*l-n*r*u+n*a*c+s*r*l-s*o*c}invert(){const e=this.elements,t=e[0],n=e[1],s=e[2],r=e[3],o=e[4],a=e[5],c=e[6],l=e[7],u=e[8],h=u*o-a*l,d=a*c-u*r,f=l*r-o*c,m=t*h+n*d+s*f;if(m===0)return this.set(0,0,0,0,0,0,0,0,0);const _=1/m;return e[0]=h*_,e[1]=(s*l-u*n)*_,e[2]=(a*n-s*o)*_,e[3]=d*_,e[4]=(u*t-s*c)*_,e[5]=(s*r-a*t)*_,e[6]=f*_,e[7]=(n*c-l*t)*_,e[8]=(o*t-n*r)*_,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,s,r,o,a){const c=Math.cos(r),l=Math.sin(r);return this.set(n*c,n*l,-n*(c*o+l*a)+o+e,-s*l,s*c,-s*(-l*o+c*a)+a+t,0,0,1),this}scale(e,t){return this.premultiply(T0.makeScale(e,t)),this}rotate(e){return this.premultiply(T0.makeRotation(-e)),this}translate(e,t){return this.premultiply(T0.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let s=0;s<9;s++)if(t[s]!==n[s])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}};const T0=new Nt;function BN(i){for(let e=i.length-1;e>=0;--e)if(i[e]>=65535)return!0;return!1}function of(i){return document.createElementNS("http://www.w3.org/1999/xhtml",i)}function uW(){const i=of("canvas");return i.style.display="block",i}const GE={};function xd(i){i in GE||(GE[i]=!0,console.warn(i))}function hW(i,e,t){return new Promise(function(n,s){function r(){switch(i.clientWaitSync(e,i.SYNC_FLUSH_COMMANDS_BIT,0)){case i.WAIT_FAILED:s();break;case i.TIMEOUT_EXPIRED:setTimeout(r,t);break;default:n()}}setTimeout(r,t)})}function dW(i){const e=i.elements;e[2]=.5*e[2]+.5*e[3],e[6]=.5*e[6]+.5*e[7],e[10]=.5*e[10]+.5*e[11],e[14]=.5*e[14]+.5*e[15]}function fW(i){const e=i.elements;e[11]===-1?(e[10]=-e[10]-1,e[14]=-e[14]):(e[10]=-e[10],e[14]=-e[14]+1)}const zt={enabled:!0,workingColorSpace:Ch,spaces:{},convert:function(i,e,t){return this.enabled===!1||e===t||!e||!t||(this.spaces[e].transfer===Jt&&(i.r=Uo(i.r),i.g=Uo(i.g),i.b=Uo(i.b)),this.spaces[e].primaries!==this.spaces[t].primaries&&(i.applyMatrix3(this.spaces[e].toXYZ),i.applyMatrix3(this.spaces[t].fromXYZ)),this.spaces[t].transfer===Jt&&(i.r=Uu(i.r),i.g=Uu(i.g),i.b=Uu(i.b))),i},fromWorkingColorSpace:function(i,e){return this.convert(i,this.workingColorSpace,e)},toWorkingColorSpace:function(i,e){return this.convert(i,e,this.workingColorSpace)},getPrimaries:function(i){return this.spaces[i].primaries},getTransfer:function(i){return i===Aa?m_:this.spaces[i].transfer},getLuminanceCoefficients:function(i,e=this.workingColorSpace){return i.fromArray(this.spaces[e].luminanceCoefficients)},define:function(i){Object.assign(this.spaces,i)},_getMatrix:function(i,e,t){return i.copy(this.spaces[e].toXYZ).multiply(this.spaces[t].fromXYZ)},_getDrawingBufferColorSpace:function(i){return this.spaces[i].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(i=this.workingColorSpace){return this.spaces[i].workingColorSpaceConfig.unpackColorSpace}};function Uo(i){return i<.04045?i*.0773993808:Math.pow(i*.9478672986+.0521327014,2.4)}function Uu(i){return i<.0031308?i*12.92:1.055*Math.pow(i,.41666)-.055}const VE=[.64,.33,.3,.6,.15,.06],HE=[.2126,.7152,.0722],WE=[.3127,.329],$E=new Nt().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),qE=new Nt().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);zt.define({[Ch]:{primaries:VE,whitePoint:WE,transfer:m_,toXYZ:$E,fromXYZ:qE,luminanceCoefficients:HE,workingColorSpaceConfig:{unpackColorSpace:ps},outputColorSpaceConfig:{drawingBufferColorSpace:ps}},[ps]:{primaries:VE,whitePoint:WE,transfer:Jt,toXYZ:$E,fromXYZ:qE,luminanceCoefficients:HE,outputColorSpaceConfig:{drawingBufferColorSpace:ps}}});let Il,pW=class{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Il===void 0&&(Il=of("canvas")),Il.width=e.width,Il.height=e.height;const n=Il.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Il}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=of("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const s=n.getImageData(0,0,e.width,e.height),r=s.data;for(let o=0;o<r.length;o++)r[o]=Uo(r[o]/255)*255;return n.putImageData(s,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(Uo(t[n]/255)*255):t[n]=Uo(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}},mW=0,kN=class{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:mW++}),this.uuid=Rh(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},s=this.data;if(s!==null){let r;if(Array.isArray(s)){r=[];for(let o=0,a=s.length;o<a;o++)s[o].isDataTexture?r.push(E0(s[o].image)):r.push(E0(s[o]))}else r=E0(s);n.url=r}return t||(e.images[this.uuid]=n),n}};function E0(i){return typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&i instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&i instanceof ImageBitmap?pW.getDataURL(i):i.data?{data:Array.from(i.data),width:i.width,height:i.height,type:i.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let gW=0,Sr=class Vm extends Za{constructor(e=Vm.DEFAULT_IMAGE,t=Vm.DEFAULT_MAPPING,n=Fc,s=Fc,r=Cr,o=Uc,a=sr,c=$o,l=Vm.DEFAULT_ANISOTROPY,u=Aa){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:gW++}),this.uuid=Rh(),this.name="",this.source=new kN(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=s,this.magFilter=r,this.minFilter=o,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=c,this.offset=new lt(0,0),this.repeat=new lt(1,1),this.center=new lt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Nt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==TN)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Qx:e.x=e.x-Math.floor(e.x);break;case Fc:e.x=e.x<0?0:1;break;case Jx:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Qx:e.y=e.y-Math.floor(e.y);break;case Fc:e.y=e.y<0?0:1;break;case Jx:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}};Sr.DEFAULT_IMAGE=null;Sr.DEFAULT_MAPPING=TN;Sr.DEFAULT_ANISOTROPY=1;let Bn=class zN{constructor(e=0,t=0,n=0,s=1){zN.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=s}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,s){return this.x=e,this.y=t,this.z=n,this.w=s,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,s=this.z,r=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*s+o[12]*r,this.y=o[1]*t+o[5]*n+o[9]*s+o[13]*r,this.z=o[2]*t+o[6]*n+o[10]*s+o[14]*r,this.w=o[3]*t+o[7]*n+o[11]*s+o[15]*r,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,s,r;const c=e.elements,l=c[0],u=c[4],h=c[8],d=c[1],f=c[5],m=c[9],_=c[2],g=c[6],p=c[10];if(Math.abs(u-d)<.01&&Math.abs(h-_)<.01&&Math.abs(m-g)<.01){if(Math.abs(u+d)<.1&&Math.abs(h+_)<.1&&Math.abs(m+g)<.1&&Math.abs(l+f+p-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const x=(l+1)/2,v=(f+1)/2,S=(p+1)/2,M=(u+d)/4,E=(h+_)/4,w=(m+g)/4;return x>v&&x>S?x<.01?(n=0,s=.707106781,r=.707106781):(n=Math.sqrt(x),s=M/n,r=E/n):v>S?v<.01?(n=.707106781,s=0,r=.707106781):(s=Math.sqrt(v),n=M/s,r=w/s):S<.01?(n=.707106781,s=.707106781,r=0):(r=Math.sqrt(S),n=E/r,s=w/r),this.set(n,s,r,t),this}let y=Math.sqrt((g-m)*(g-m)+(h-_)*(h-_)+(d-u)*(d-u));return Math.abs(y)<.001&&(y=1),this.x=(g-m)/y,this.y=(h-_)/y,this.z=(d-u)/y,this.w=Math.acos((l+f+p-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}},_W=class extends Za{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Bn(0,0,e,t),this.scissorTest=!1,this.viewport=new Bn(0,0,e,t);const s={width:e,height:t,depth:1};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Cr,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},n);const r=new Sr(s,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);r.flipY=!1,r.generateMipmaps=n.generateMipmaps,r.internalFormat=n.internalFormat,this.textures=[];const o=n.count;for(let a=0;a<o;a++)this.textures[a]=r.clone(),this.textures[a].isRenderTargetTexture=!0;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let s=0,r=this.textures.length;s<r;s++)this.textures[s].image.width=e,this.textures[s].image.height=t,this.textures[s].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let n=0,s=e.textures.length;n<s;n++)this.textures[n]=e.textures[n].clone(),this.textures[n].isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new kN(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}},Wa=class extends _W{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}},GN=class extends Sr{constructor(e=null,t=1,n=1,s=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:s},this.magFilter=hr,this.minFilter=hr,this.wrapR=Fc,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}};class vW extends Sr{constructor(e=null,t=1,n=1,s=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:s},this.magFilter=hr,this.minFilter=hr,this.wrapR=Fc,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}let fr=class{constructor(e=0,t=0,n=0,s=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=s}static slerpFlat(e,t,n,s,r,o,a){let c=n[s+0],l=n[s+1],u=n[s+2],h=n[s+3];const d=r[o+0],f=r[o+1],m=r[o+2],_=r[o+3];if(a===0){e[t+0]=c,e[t+1]=l,e[t+2]=u,e[t+3]=h;return}if(a===1){e[t+0]=d,e[t+1]=f,e[t+2]=m,e[t+3]=_;return}if(h!==_||c!==d||l!==f||u!==m){let g=1-a;const p=c*d+l*f+u*m+h*_,y=p>=0?1:-1,x=1-p*p;if(x>Number.EPSILON){const S=Math.sqrt(x),M=Math.atan2(S,p*y);g=Math.sin(g*M)/S,a=Math.sin(a*M)/S}const v=a*y;if(c=c*g+d*v,l=l*g+f*v,u=u*g+m*v,h=h*g+_*v,g===1-a){const S=1/Math.sqrt(c*c+l*l+u*u+h*h);c*=S,l*=S,u*=S,h*=S}}e[t]=c,e[t+1]=l,e[t+2]=u,e[t+3]=h}static multiplyQuaternionsFlat(e,t,n,s,r,o){const a=n[s],c=n[s+1],l=n[s+2],u=n[s+3],h=r[o],d=r[o+1],f=r[o+2],m=r[o+3];return e[t]=a*m+u*h+c*f-l*d,e[t+1]=c*m+u*d+l*h-a*f,e[t+2]=l*m+u*f+a*d-c*h,e[t+3]=u*m-a*h-c*d-l*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,s){return this._x=e,this._y=t,this._z=n,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,s=e._y,r=e._z,o=e._order,a=Math.cos,c=Math.sin,l=a(n/2),u=a(s/2),h=a(r/2),d=c(n/2),f=c(s/2),m=c(r/2);switch(o){case"XYZ":this._x=d*u*h+l*f*m,this._y=l*f*h-d*u*m,this._z=l*u*m+d*f*h,this._w=l*u*h-d*f*m;break;case"YXZ":this._x=d*u*h+l*f*m,this._y=l*f*h-d*u*m,this._z=l*u*m-d*f*h,this._w=l*u*h+d*f*m;break;case"ZXY":this._x=d*u*h-l*f*m,this._y=l*f*h+d*u*m,this._z=l*u*m+d*f*h,this._w=l*u*h-d*f*m;break;case"ZYX":this._x=d*u*h-l*f*m,this._y=l*f*h+d*u*m,this._z=l*u*m-d*f*h,this._w=l*u*h+d*f*m;break;case"YZX":this._x=d*u*h+l*f*m,this._y=l*f*h+d*u*m,this._z=l*u*m-d*f*h,this._w=l*u*h-d*f*m;break;case"XZY":this._x=d*u*h-l*f*m,this._y=l*f*h-d*u*m,this._z=l*u*m+d*f*h,this._w=l*u*h+d*f*m;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,s=Math.sin(n);return this._x=e.x*s,this._y=e.y*s,this._z=e.z*s,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],s=t[4],r=t[8],o=t[1],a=t[5],c=t[9],l=t[2],u=t[6],h=t[10],d=n+a+h;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(u-c)*f,this._y=(r-l)*f,this._z=(o-s)*f}else if(n>a&&n>h){const f=2*Math.sqrt(1+n-a-h);this._w=(u-c)/f,this._x=.25*f,this._y=(s+o)/f,this._z=(r+l)/f}else if(a>h){const f=2*Math.sqrt(1+a-n-h);this._w=(r-l)/f,this._x=(s+o)/f,this._y=.25*f,this._z=(c+u)/f}else{const f=2*Math.sqrt(1+h-n-a);this._w=(o-s)/f,this._x=(r+l)/f,this._y=(c+u)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(yi(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const s=Math.min(1,t/n);return this.slerp(e,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,s=e._y,r=e._z,o=e._w,a=t._x,c=t._y,l=t._z,u=t._w;return this._x=n*u+o*a+s*l-r*c,this._y=s*u+o*c+r*a-n*l,this._z=r*u+o*l+n*c-s*a,this._w=o*u-n*a-s*c-r*l,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,s=this._y,r=this._z,o=this._w;let a=o*e._w+n*e._x+s*e._y+r*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=n,this._y=s,this._z=r,this;const c=1-a*a;if(c<=Number.EPSILON){const f=1-t;return this._w=f*o+t*this._w,this._x=f*n+t*this._x,this._y=f*s+t*this._y,this._z=f*r+t*this._z,this.normalize(),this}const l=Math.sqrt(c),u=Math.atan2(l,a),h=Math.sin((1-t)*u)/l,d=Math.sin(t*u)/l;return this._w=o*h+this._w*d,this._x=n*h+this._x*d,this._y=s*h+this._y*d,this._z=r*h+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),s=Math.sqrt(1-n),r=Math.sqrt(n);return this.set(s*Math.sin(e),s*Math.cos(e),r*Math.sin(t),r*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}},he=class VN{constructor(e=0,t=0,n=0){VN.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(XE.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(XE.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,s=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*s,this.y=r[1]*t+r[4]*n+r[7]*s,this.z=r[2]*t+r[5]*n+r[8]*s,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,s=this.z,r=e.elements,o=1/(r[3]*t+r[7]*n+r[11]*s+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*s+r[12])*o,this.y=(r[1]*t+r[5]*n+r[9]*s+r[13])*o,this.z=(r[2]*t+r[6]*n+r[10]*s+r[14])*o,this}applyQuaternion(e){const t=this.x,n=this.y,s=this.z,r=e.x,o=e.y,a=e.z,c=e.w,l=2*(o*s-a*n),u=2*(a*t-r*s),h=2*(r*n-o*t);return this.x=t+c*l+o*h-a*u,this.y=n+c*u+a*l-r*h,this.z=s+c*h+r*u-o*l,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,s=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*s,this.y=r[1]*t+r[5]*n+r[9]*s,this.z=r[2]*t+r[6]*n+r[10]*s,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,s=e.y,r=e.z,o=t.x,a=t.y,c=t.z;return this.x=s*c-r*a,this.y=r*o-n*c,this.z=n*a-s*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return w0.copy(this).projectOnVector(e),this.sub(w0)}reflect(e){return this.sub(w0.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(yi(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,s=this.z-e.z;return t*t+n*n+s*s}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const s=Math.sin(t)*e;return this.x=s*Math.sin(n),this.y=Math.cos(t)*e,this.z=s*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),s=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=s,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}};const w0=new he,XE=new fr;let Nh=class{constructor(e=new he(1/0,1/0,1/0),t=new he(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(Gs.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(Gs.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Gs.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const r=n.getAttribute("position");if(t===!0&&r!==void 0&&e.isInstancedMesh!==!0)for(let o=0,a=r.count;o<a;o++)e.isMesh===!0?e.getVertexPosition(o,Gs):Gs.fromBufferAttribute(r,o),Gs.applyMatrix4(e.matrixWorld),this.expandByPoint(Gs);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),Mp.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),Mp.copy(n.boundingBox)),Mp.applyMatrix4(e.matrixWorld),this.union(Mp)}const s=e.children;for(let r=0,o=s.length;r<o;r++)this.expandByObject(s[r],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,Gs),Gs.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(jh),Tp.subVectors(this.max,jh),Fl.subVectors(e.a,jh),Ul.subVectors(e.b,jh),Ol.subVectors(e.c,jh),ca.subVectors(Ul,Fl),la.subVectors(Ol,Ul),oc.subVectors(Fl,Ol);let t=[0,-ca.z,ca.y,0,-la.z,la.y,0,-oc.z,oc.y,ca.z,0,-ca.x,la.z,0,-la.x,oc.z,0,-oc.x,-ca.y,ca.x,0,-la.y,la.x,0,-oc.y,oc.x,0];return!A0(t,Fl,Ul,Ol,Tp)||(t=[1,0,0,0,1,0,0,0,1],!A0(t,Fl,Ul,Ol,Tp))?!1:(Ep.crossVectors(ca,la),t=[Ep.x,Ep.y,Ep.z],A0(t,Fl,Ul,Ol,Tp))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Gs).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Gs).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(to[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),to[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),to[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),to[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),to[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),to[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),to[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),to[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(to),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}};const to=[new he,new he,new he,new he,new he,new he,new he,new he],Gs=new he,Mp=new Nh,Fl=new he,Ul=new he,Ol=new he,ca=new he,la=new he,oc=new he,jh=new he,Tp=new he,Ep=new he,ac=new he;function A0(i,e,t,n,s){for(let r=0,o=i.length-3;r<=o;r+=3){ac.fromArray(i,r);const a=s.x*Math.abs(ac.x)+s.y*Math.abs(ac.y)+s.z*Math.abs(ac.z),c=e.dot(ac),l=t.dot(ac),u=n.dot(ac);if(Math.max(-Math.max(c,l,u),Math.min(c,l,u))>a)return!1}return!0}const xW=new Nh,Yh=new he,C0=new he;let Eb=class{constructor(e=new he,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):xW.setFromPoints(e).getCenter(n);let s=0;for(let r=0,o=e.length;r<o;r++)s=Math.max(s,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(s),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Yh.subVectors(e,this.center);const t=Yh.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),s=(n-this.radius)*.5;this.center.addScaledVector(Yh,s/n),this.radius+=s}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(C0.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Yh.copy(e.center).add(C0)),this.expandByPoint(Yh.copy(e.center).sub(C0))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}};const no=new he,R0=new he,wp=new he,ua=new he,N0=new he,Ap=new he,P0=new he;let wb=class{constructor(e=new he,t=new he(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,no)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=no.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(no.copy(this.origin).addScaledVector(this.direction,t),no.distanceToSquared(e))}distanceSqToSegment(e,t,n,s){R0.copy(e).add(t).multiplyScalar(.5),wp.copy(t).sub(e).normalize(),ua.copy(this.origin).sub(R0);const r=e.distanceTo(t)*.5,o=-this.direction.dot(wp),a=ua.dot(this.direction),c=-ua.dot(wp),l=ua.lengthSq(),u=Math.abs(1-o*o);let h,d,f,m;if(u>0)if(h=o*c-a,d=o*a-c,m=r*u,h>=0)if(d>=-m)if(d<=m){const _=1/u;h*=_,d*=_,f=h*(h+o*d+2*a)+d*(o*h+d+2*c)+l}else d=r,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*c)+l;else d=-r,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*c)+l;else d<=-m?(h=Math.max(0,-(-o*r+a)),d=h>0?-r:Math.min(Math.max(-r,-c),r),f=-h*h+d*(d+2*c)+l):d<=m?(h=0,d=Math.min(Math.max(-r,-c),r),f=d*(d+2*c)+l):(h=Math.max(0,-(o*r+a)),d=h>0?r:Math.min(Math.max(-r,-c),r),f=-h*h+d*(d+2*c)+l);else d=o>0?-r:r,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*c)+l;return n&&n.copy(this.origin).addScaledVector(this.direction,h),s&&s.copy(R0).addScaledVector(wp,d),f}intersectSphere(e,t){no.subVectors(e.center,this.origin);const n=no.dot(this.direction),s=no.dot(no)-n*n,r=e.radius*e.radius;if(s>r)return null;const o=Math.sqrt(r-s),a=n-o,c=n+o;return c<0?null:a<0?this.at(c,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,s,r,o,a,c;const l=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,d=this.origin;return l>=0?(n=(e.min.x-d.x)*l,s=(e.max.x-d.x)*l):(n=(e.max.x-d.x)*l,s=(e.min.x-d.x)*l),u>=0?(r=(e.min.y-d.y)*u,o=(e.max.y-d.y)*u):(r=(e.max.y-d.y)*u,o=(e.min.y-d.y)*u),n>o||r>s||((r>n||isNaN(n))&&(n=r),(o<s||isNaN(s))&&(s=o),h>=0?(a=(e.min.z-d.z)*h,c=(e.max.z-d.z)*h):(a=(e.max.z-d.z)*h,c=(e.min.z-d.z)*h),n>c||a>s)||((a>n||n!==n)&&(n=a),(c<s||s!==s)&&(s=c),s<0)?null:this.at(n>=0?n:s,t)}intersectsBox(e){return this.intersectBox(e,no)!==null}intersectTriangle(e,t,n,s,r){N0.subVectors(t,e),Ap.subVectors(n,e),P0.crossVectors(N0,Ap);let o=this.direction.dot(P0),a;if(o>0){if(s)return null;a=1}else if(o<0)a=-1,o=-o;else return null;ua.subVectors(this.origin,e);const c=a*this.direction.dot(Ap.crossVectors(ua,Ap));if(c<0)return null;const l=a*this.direction.dot(N0.cross(ua));if(l<0||c+l>o)return null;const u=-a*ua.dot(P0);return u<0?null:this.at(u/o,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}},Cn=class Ay{constructor(e,t,n,s,r,o,a,c,l,u,h,d,f,m,_,g){Ay.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,s,r,o,a,c,l,u,h,d,f,m,_,g)}set(e,t,n,s,r,o,a,c,l,u,h,d,f,m,_,g){const p=this.elements;return p[0]=e,p[4]=t,p[8]=n,p[12]=s,p[1]=r,p[5]=o,p[9]=a,p[13]=c,p[2]=l,p[6]=u,p[10]=h,p[14]=d,p[3]=f,p[7]=m,p[11]=_,p[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Ay().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,s=1/Bl.setFromMatrixColumn(e,0).length(),r=1/Bl.setFromMatrixColumn(e,1).length(),o=1/Bl.setFromMatrixColumn(e,2).length();return t[0]=n[0]*s,t[1]=n[1]*s,t[2]=n[2]*s,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,s=e.y,r=e.z,o=Math.cos(n),a=Math.sin(n),c=Math.cos(s),l=Math.sin(s),u=Math.cos(r),h=Math.sin(r);if(e.order==="XYZ"){const d=o*u,f=o*h,m=a*u,_=a*h;t[0]=c*u,t[4]=-c*h,t[8]=l,t[1]=f+m*l,t[5]=d-_*l,t[9]=-a*c,t[2]=_-d*l,t[6]=m+f*l,t[10]=o*c}else if(e.order==="YXZ"){const d=c*u,f=c*h,m=l*u,_=l*h;t[0]=d+_*a,t[4]=m*a-f,t[8]=o*l,t[1]=o*h,t[5]=o*u,t[9]=-a,t[2]=f*a-m,t[6]=_+d*a,t[10]=o*c}else if(e.order==="ZXY"){const d=c*u,f=c*h,m=l*u,_=l*h;t[0]=d-_*a,t[4]=-o*h,t[8]=m+f*a,t[1]=f+m*a,t[5]=o*u,t[9]=_-d*a,t[2]=-o*l,t[6]=a,t[10]=o*c}else if(e.order==="ZYX"){const d=o*u,f=o*h,m=a*u,_=a*h;t[0]=c*u,t[4]=m*l-f,t[8]=d*l+_,t[1]=c*h,t[5]=_*l+d,t[9]=f*l-m,t[2]=-l,t[6]=a*c,t[10]=o*c}else if(e.order==="YZX"){const d=o*c,f=o*l,m=a*c,_=a*l;t[0]=c*u,t[4]=_-d*h,t[8]=m*h+f,t[1]=h,t[5]=o*u,t[9]=-a*u,t[2]=-l*u,t[6]=f*h+m,t[10]=d-_*h}else if(e.order==="XZY"){const d=o*c,f=o*l,m=a*c,_=a*l;t[0]=c*u,t[4]=-h,t[8]=l*u,t[1]=d*h+_,t[5]=o*u,t[9]=f*h-m,t[2]=m*h-f,t[6]=a*u,t[10]=_*h+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(yW,e,SW)}lookAt(e,t,n){const s=this.elements;return os.subVectors(e,t),os.lengthSq()===0&&(os.z=1),os.normalize(),ha.crossVectors(n,os),ha.lengthSq()===0&&(Math.abs(n.z)===1?os.x+=1e-4:os.z+=1e-4,os.normalize(),ha.crossVectors(n,os)),ha.normalize(),Cp.crossVectors(os,ha),s[0]=ha.x,s[4]=Cp.x,s[8]=os.x,s[1]=ha.y,s[5]=Cp.y,s[9]=os.y,s[2]=ha.z,s[6]=Cp.z,s[10]=os.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,s=t.elements,r=this.elements,o=n[0],a=n[4],c=n[8],l=n[12],u=n[1],h=n[5],d=n[9],f=n[13],m=n[2],_=n[6],g=n[10],p=n[14],y=n[3],x=n[7],v=n[11],S=n[15],M=s[0],E=s[4],w=s[8],b=s[12],T=s[1],C=s[5],D=s[9],P=s[13],N=s[2],L=s[6],U=s[10],B=s[14],k=s[3],$=s[7],z=s[11],Y=s[15];return r[0]=o*M+a*T+c*N+l*k,r[4]=o*E+a*C+c*L+l*$,r[8]=o*w+a*D+c*U+l*z,r[12]=o*b+a*P+c*B+l*Y,r[1]=u*M+h*T+d*N+f*k,r[5]=u*E+h*C+d*L+f*$,r[9]=u*w+h*D+d*U+f*z,r[13]=u*b+h*P+d*B+f*Y,r[2]=m*M+_*T+g*N+p*k,r[6]=m*E+_*C+g*L+p*$,r[10]=m*w+_*D+g*U+p*z,r[14]=m*b+_*P+g*B+p*Y,r[3]=y*M+x*T+v*N+S*k,r[7]=y*E+x*C+v*L+S*$,r[11]=y*w+x*D+v*U+S*z,r[15]=y*b+x*P+v*B+S*Y,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],s=e[8],r=e[12],o=e[1],a=e[5],c=e[9],l=e[13],u=e[2],h=e[6],d=e[10],f=e[14],m=e[3],_=e[7],g=e[11],p=e[15];return m*(+r*c*h-s*l*h-r*a*d+n*l*d+s*a*f-n*c*f)+_*(+t*c*f-t*l*d+r*o*d-s*o*f+s*l*u-r*c*u)+g*(+t*l*h-t*a*f-r*o*h+n*o*f+r*a*u-n*l*u)+p*(-s*a*u-t*c*h+t*a*d+s*o*h-n*o*d+n*c*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const s=this.elements;return e.isVector3?(s[12]=e.x,s[13]=e.y,s[14]=e.z):(s[12]=e,s[13]=t,s[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],s=e[2],r=e[3],o=e[4],a=e[5],c=e[6],l=e[7],u=e[8],h=e[9],d=e[10],f=e[11],m=e[12],_=e[13],g=e[14],p=e[15],y=h*g*l-_*d*l+_*c*f-a*g*f-h*c*p+a*d*p,x=m*d*l-u*g*l-m*c*f+o*g*f+u*c*p-o*d*p,v=u*_*l-m*h*l+m*a*f-o*_*f-u*a*p+o*h*p,S=m*h*c-u*_*c-m*a*d+o*_*d+u*a*g-o*h*g,M=t*y+n*x+s*v+r*S;if(M===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const E=1/M;return e[0]=y*E,e[1]=(_*d*r-h*g*r-_*s*f+n*g*f+h*s*p-n*d*p)*E,e[2]=(a*g*r-_*c*r+_*s*l-n*g*l-a*s*p+n*c*p)*E,e[3]=(h*c*r-a*d*r-h*s*l+n*d*l+a*s*f-n*c*f)*E,e[4]=x*E,e[5]=(u*g*r-m*d*r+m*s*f-t*g*f-u*s*p+t*d*p)*E,e[6]=(m*c*r-o*g*r-m*s*l+t*g*l+o*s*p-t*c*p)*E,e[7]=(o*d*r-u*c*r+u*s*l-t*d*l-o*s*f+t*c*f)*E,e[8]=v*E,e[9]=(m*h*r-u*_*r-m*n*f+t*_*f+u*n*p-t*h*p)*E,e[10]=(o*_*r-m*a*r+m*n*l-t*_*l-o*n*p+t*a*p)*E,e[11]=(u*a*r-o*h*r-u*n*l+t*h*l+o*n*f-t*a*f)*E,e[12]=S*E,e[13]=(u*_*s-m*h*s+m*n*d-t*_*d-u*n*g+t*h*g)*E,e[14]=(m*a*s-o*_*s-m*n*c+t*_*c+o*n*g-t*a*g)*E,e[15]=(o*h*s-u*a*s+u*n*c-t*h*c-o*n*d+t*a*d)*E,this}scale(e){const t=this.elements,n=e.x,s=e.y,r=e.z;return t[0]*=n,t[4]*=s,t[8]*=r,t[1]*=n,t[5]*=s,t[9]*=r,t[2]*=n,t[6]*=s,t[10]*=r,t[3]*=n,t[7]*=s,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],s=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,s))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),s=Math.sin(t),r=1-n,o=e.x,a=e.y,c=e.z,l=r*o,u=r*a;return this.set(l*o+n,l*a-s*c,l*c+s*a,0,l*a+s*c,u*a+n,u*c-s*o,0,l*c-s*a,u*c+s*o,r*c*c+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,s,r,o){return this.set(1,n,r,0,e,1,o,0,t,s,1,0,0,0,0,1),this}compose(e,t,n){const s=this.elements,r=t._x,o=t._y,a=t._z,c=t._w,l=r+r,u=o+o,h=a+a,d=r*l,f=r*u,m=r*h,_=o*u,g=o*h,p=a*h,y=c*l,x=c*u,v=c*h,S=n.x,M=n.y,E=n.z;return s[0]=(1-(_+p))*S,s[1]=(f+v)*S,s[2]=(m-x)*S,s[3]=0,s[4]=(f-v)*M,s[5]=(1-(d+p))*M,s[6]=(g+y)*M,s[7]=0,s[8]=(m+x)*E,s[9]=(g-y)*E,s[10]=(1-(d+_))*E,s[11]=0,s[12]=e.x,s[13]=e.y,s[14]=e.z,s[15]=1,this}decompose(e,t,n){const s=this.elements;let r=Bl.set(s[0],s[1],s[2]).length();const o=Bl.set(s[4],s[5],s[6]).length(),a=Bl.set(s[8],s[9],s[10]).length();this.determinant()<0&&(r=-r),e.x=s[12],e.y=s[13],e.z=s[14],Vs.copy(this);const l=1/r,u=1/o,h=1/a;return Vs.elements[0]*=l,Vs.elements[1]*=l,Vs.elements[2]*=l,Vs.elements[4]*=u,Vs.elements[5]*=u,Vs.elements[6]*=u,Vs.elements[8]*=h,Vs.elements[9]*=h,Vs.elements[10]*=h,t.setFromRotationMatrix(Vs),n.x=r,n.y=o,n.z=a,this}makePerspective(e,t,n,s,r,o,a=Po){const c=this.elements,l=2*r/(t-e),u=2*r/(n-s),h=(t+e)/(t-e),d=(n+s)/(n-s);let f,m;if(a===Po)f=-(o+r)/(o-r),m=-2*o*r/(o-r);else if(a===Mg)f=-o/(o-r),m=-o*r/(o-r);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return c[0]=l,c[4]=0,c[8]=h,c[12]=0,c[1]=0,c[5]=u,c[9]=d,c[13]=0,c[2]=0,c[6]=0,c[10]=f,c[14]=m,c[3]=0,c[7]=0,c[11]=-1,c[15]=0,this}makeOrthographic(e,t,n,s,r,o,a=Po){const c=this.elements,l=1/(t-e),u=1/(n-s),h=1/(o-r),d=(t+e)*l,f=(n+s)*u;let m,_;if(a===Po)m=(o+r)*h,_=-2*h;else if(a===Mg)m=r*h,_=-1*h;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return c[0]=2*l,c[4]=0,c[8]=0,c[12]=-d,c[1]=0,c[5]=2*u,c[9]=0,c[13]=-f,c[2]=0,c[6]=0,c[10]=_,c[14]=-m,c[3]=0,c[7]=0,c[11]=0,c[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let s=0;s<16;s++)if(t[s]!==n[s])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}};const Bl=new he,Vs=new Cn,yW=new he(0,0,0),SW=new he(1,1,1),ha=new he,Cp=new he,os=new he,jE=new Cn,YE=new fr;let el=class HN{constructor(e=0,t=0,n=0,s=HN.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=s}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,s=this._order){return this._x=e,this._y=t,this._z=n,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const s=e.elements,r=s[0],o=s[4],a=s[8],c=s[1],l=s[5],u=s[9],h=s[2],d=s[6],f=s[10];switch(t){case"XYZ":this._y=Math.asin(yi(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,f),this._z=Math.atan2(-o,r)):(this._x=Math.atan2(d,l),this._z=0);break;case"YXZ":this._x=Math.asin(-yi(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-h,r),this._z=0);break;case"ZXY":this._x=Math.asin(yi(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-h,f),this._z=Math.atan2(-o,l)):(this._y=0,this._z=Math.atan2(c,r));break;case"ZYX":this._y=Math.asin(-yi(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(c,r)):(this._x=0,this._z=Math.atan2(-o,l));break;case"YZX":this._z=Math.asin(yi(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-u,l),this._y=Math.atan2(-h,r)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-yi(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,l),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-u,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return jE.makeRotationFromQuaternion(e),this.setFromRotationMatrix(jE,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return YE.setFromEuler(this),this.setFromQuaternion(YE,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}};el.DEFAULT_ORDER="XYZ";let Ab=class{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}},bW=0;const ZE=new he,kl=new fr,io=new Cn,Rp=new he,Zh=new he,MW=new he,TW=new fr,KE=new he(1,0,0),QE=new he(0,1,0),JE=new he(0,0,1),ew={type:"added"},EW={type:"removed"},zl={type:"childadded",child:null},D0={type:"childremoved",child:null};let Is=class Hm extends Za{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:bW++}),this.uuid=Rh(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Hm.DEFAULT_UP.clone();const e=new he,t=new el,n=new fr,s=new he(1,1,1);function r(){n.setFromEuler(t,!1)}function o(){t.setFromQuaternion(n,void 0,!1)}t._onChange(r),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new Cn},normalMatrix:{value:new Nt}}),this.matrix=new Cn,this.matrixWorld=new Cn,this.matrixAutoUpdate=Hm.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Hm.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Ab,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return kl.setFromAxisAngle(e,t),this.quaternion.multiply(kl),this}rotateOnWorldAxis(e,t){return kl.setFromAxisAngle(e,t),this.quaternion.premultiply(kl),this}rotateX(e){return this.rotateOnAxis(KE,e)}rotateY(e){return this.rotateOnAxis(QE,e)}rotateZ(e){return this.rotateOnAxis(JE,e)}translateOnAxis(e,t){return ZE.copy(e).applyQuaternion(this.quaternion),this.position.add(ZE.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(KE,e)}translateY(e){return this.translateOnAxis(QE,e)}translateZ(e){return this.translateOnAxis(JE,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(io.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Rp.copy(e):Rp.set(e,t,n);const s=this.parent;this.updateWorldMatrix(!0,!1),Zh.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?io.lookAt(Zh,Rp,this.up):io.lookAt(Rp,Zh,this.up),this.quaternion.setFromRotationMatrix(io),s&&(io.extractRotation(s.matrixWorld),kl.setFromRotationMatrix(io),this.quaternion.premultiply(kl.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(ew),zl.child=e,this.dispatchEvent(zl),zl.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(EW),D0.child=e,this.dispatchEvent(D0),D0.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),io.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),io.multiply(e.parent.matrixWorld)),e.applyMatrix4(io),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(ew),zl.child=e,this.dispatchEvent(zl),zl.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,s=this.children.length;n<s;n++){const o=this.children[n].getObjectByProperty(e,t);if(o!==void 0)return o}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const s=this.children;for(let r=0,o=s.length;r<o;r++)s[r].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Zh,e,MW),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Zh,TW,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,s=t.length;n<s;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,s=t.length;n<s;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,s=t.length;n<s;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const s=this.children;for(let r=0,o=s.length;r<o;r++)s[r].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),s.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(s.type="BatchedMesh",s.perObjectFrustumCulled=this.perObjectFrustumCulled,s.sortObjects=this.sortObjects,s.drawRanges=this._drawRanges,s.reservedRanges=this._reservedRanges,s.visibility=this._visibility,s.active=this._active,s.bounds=this._bounds.map(a=>({boxInitialized:a.boxInitialized,boxMin:a.box.min.toArray(),boxMax:a.box.max.toArray(),sphereInitialized:a.sphereInitialized,sphereRadius:a.sphere.radius,sphereCenter:a.sphere.center.toArray()})),s.maxInstanceCount=this._maxInstanceCount,s.maxVertexCount=this._maxVertexCount,s.maxIndexCount=this._maxIndexCount,s.geometryInitialized=this._geometryInitialized,s.geometryCount=this._geometryCount,s.matricesTexture=this._matricesTexture.toJSON(e),this._colorsTexture!==null&&(s.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(s.boundingSphere={center:s.boundingSphere.center.toArray(),radius:s.boundingSphere.radius}),this.boundingBox!==null&&(s.boundingBox={min:s.boundingBox.min.toArray(),max:s.boundingBox.max.toArray()}));function r(a,c){return a[c.uuid]===void 0&&(a[c.uuid]=c.toJSON(e)),c.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=r(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const c=a.shapes;if(Array.isArray(c))for(let l=0,u=c.length;l<u;l++){const h=c[l];r(e.shapes,h)}else r(e.shapes,c)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let c=0,l=this.material.length;c<l;c++)a.push(r(e.materials,this.material[c]));s.material=a}else s.material=r(e.materials,this.material);if(this.children.length>0){s.children=[];for(let a=0;a<this.children.length;a++)s.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){s.animations=[];for(let a=0;a<this.animations.length;a++){const c=this.animations[a];s.animations.push(r(e.animations,c))}}if(t){const a=o(e.geometries),c=o(e.materials),l=o(e.textures),u=o(e.images),h=o(e.shapes),d=o(e.skeletons),f=o(e.animations),m=o(e.nodes);a.length>0&&(n.geometries=a),c.length>0&&(n.materials=c),l.length>0&&(n.textures=l),u.length>0&&(n.images=u),h.length>0&&(n.shapes=h),d.length>0&&(n.skeletons=d),f.length>0&&(n.animations=f),m.length>0&&(n.nodes=m)}return n.object=s,n;function o(a){const c=[];for(const l in a){const u=a[l];delete u.metadata,c.push(u)}return c}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const s=e.children[n];this.add(s.clone())}return this}};Is.DEFAULT_UP=new he(0,1,0);Is.DEFAULT_MATRIX_AUTO_UPDATE=!0;Is.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Hs=new he,so=new he,L0=new he,ro=new he,Gl=new he,Vl=new he,tw=new he,I0=new he,F0=new he,U0=new he,O0=new Bn,B0=new Bn,k0=new Bn;let Kh=class pu{constructor(e=new he,t=new he,n=new he){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,s){s.subVectors(n,t),Hs.subVectors(e,t),s.cross(Hs);const r=s.lengthSq();return r>0?s.multiplyScalar(1/Math.sqrt(r)):s.set(0,0,0)}static getBarycoord(e,t,n,s,r){Hs.subVectors(s,t),so.subVectors(n,t),L0.subVectors(e,t);const o=Hs.dot(Hs),a=Hs.dot(so),c=Hs.dot(L0),l=so.dot(so),u=so.dot(L0),h=o*l-a*a;if(h===0)return r.set(0,0,0),null;const d=1/h,f=(l*c-a*u)*d,m=(o*u-a*c)*d;return r.set(1-f-m,m,f)}static containsPoint(e,t,n,s){return this.getBarycoord(e,t,n,s,ro)===null?!1:ro.x>=0&&ro.y>=0&&ro.x+ro.y<=1}static getInterpolation(e,t,n,s,r,o,a,c){return this.getBarycoord(e,t,n,s,ro)===null?(c.x=0,c.y=0,"z"in c&&(c.z=0),"w"in c&&(c.w=0),null):(c.setScalar(0),c.addScaledVector(r,ro.x),c.addScaledVector(o,ro.y),c.addScaledVector(a,ro.z),c)}static getInterpolatedAttribute(e,t,n,s,r,o){return O0.setScalar(0),B0.setScalar(0),k0.setScalar(0),O0.fromBufferAttribute(e,t),B0.fromBufferAttribute(e,n),k0.fromBufferAttribute(e,s),o.setScalar(0),o.addScaledVector(O0,r.x),o.addScaledVector(B0,r.y),o.addScaledVector(k0,r.z),o}static isFrontFacing(e,t,n,s){return Hs.subVectors(n,t),so.subVectors(e,t),Hs.cross(so).dot(s)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,s){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[s]),this}setFromAttributeAndIndices(e,t,n,s){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,s),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Hs.subVectors(this.c,this.b),so.subVectors(this.a,this.b),Hs.cross(so).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return pu.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return pu.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,s,r){return pu.getInterpolation(e,this.a,this.b,this.c,t,n,s,r)}containsPoint(e){return pu.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return pu.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,s=this.b,r=this.c;let o,a;Gl.subVectors(s,n),Vl.subVectors(r,n),I0.subVectors(e,n);const c=Gl.dot(I0),l=Vl.dot(I0);if(c<=0&&l<=0)return t.copy(n);F0.subVectors(e,s);const u=Gl.dot(F0),h=Vl.dot(F0);if(u>=0&&h<=u)return t.copy(s);const d=c*h-u*l;if(d<=0&&c>=0&&u<=0)return o=c/(c-u),t.copy(n).addScaledVector(Gl,o);U0.subVectors(e,r);const f=Gl.dot(U0),m=Vl.dot(U0);if(m>=0&&f<=m)return t.copy(r);const _=f*l-c*m;if(_<=0&&l>=0&&m<=0)return a=l/(l-m),t.copy(n).addScaledVector(Vl,a);const g=u*m-f*h;if(g<=0&&h-u>=0&&f-m>=0)return tw.subVectors(r,s),a=(h-u)/(h-u+(f-m)),t.copy(s).addScaledVector(tw,a);const p=1/(g+_+d);return o=_*p,a=d*p,t.copy(n).addScaledVector(Gl,o).addScaledVector(Vl,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}};const WN={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},da={h:0,s:0,l:0},Np={h:0,s:0,l:0};function z0(i,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?i+(e-i)*6*t:t<1/2?e:t<2/3?i+(e-i)*6*(2/3-t):i}let Xt=class{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const s=e;s&&s.isColor?this.copy(s):typeof s=="number"?this.setHex(s):typeof s=="string"&&this.setStyle(s)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=ps){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,zt.toWorkingColorSpace(this,t),this}setRGB(e,t,n,s=zt.workingColorSpace){return this.r=e,this.g=t,this.b=n,zt.toWorkingColorSpace(this,s),this}setHSL(e,t,n,s=zt.workingColorSpace){if(e=Tb(e,1),t=yi(t,0,1),n=yi(n,0,1),t===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+t):n+t-n*t,o=2*n-r;this.r=z0(o,r,e+1/3),this.g=z0(o,r,e),this.b=z0(o,r,e-1/3)}return zt.toWorkingColorSpace(this,s),this}setStyle(e,t=ps){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let s;if(s=/^(\w+)\(([^\)]*)\)/.exec(e)){let r;const o=s[1],a=s[2];switch(o){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,t);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,t);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=s[1],o=r.length;if(o===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,t);if(o===6)return this.setHex(parseInt(r,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=ps){const n=WN[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Uo(e.r),this.g=Uo(e.g),this.b=Uo(e.b),this}copyLinearToSRGB(e){return this.r=Uu(e.r),this.g=Uu(e.g),this.b=Uu(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=ps){return zt.fromWorkingColorSpace(mi.copy(this),e),Math.round(yi(mi.r*255,0,255))*65536+Math.round(yi(mi.g*255,0,255))*256+Math.round(yi(mi.b*255,0,255))}getHexString(e=ps){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=zt.workingColorSpace){zt.fromWorkingColorSpace(mi.copy(this),t);const n=mi.r,s=mi.g,r=mi.b,o=Math.max(n,s,r),a=Math.min(n,s,r);let c,l;const u=(a+o)/2;if(a===o)c=0,l=0;else{const h=o-a;switch(l=u<=.5?h/(o+a):h/(2-o-a),o){case n:c=(s-r)/h+(s<r?6:0);break;case s:c=(r-n)/h+2;break;case r:c=(n-s)/h+4;break}c/=6}return e.h=c,e.s=l,e.l=u,e}getRGB(e,t=zt.workingColorSpace){return zt.fromWorkingColorSpace(mi.copy(this),t),e.r=mi.r,e.g=mi.g,e.b=mi.b,e}getStyle(e=ps){zt.fromWorkingColorSpace(mi.copy(this),e);const t=mi.r,n=mi.g,s=mi.b;return e!==ps?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${s.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(s*255)})`}offsetHSL(e,t,n){return this.getHSL(da),this.setHSL(da.h+e,da.s+t,da.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(da),e.getHSL(Np);const n=Ld(da.h,Np.h,t),s=Ld(da.s,Np.s,t),r=Ld(da.l,Np.l,t);return this.setHSL(n,s,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,s=this.b,r=e.elements;return this.r=r[0]*t+r[3]*n+r[6]*s,this.g=r[1]*t+r[4]*n+r[7]*s,this.b=r[2]*t+r[5]*n+r[8]*s,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}};const mi=new Xt;Xt.NAMES=WN;let wW=0,g_=class extends Za{static get type(){return"Material"}get type(){return this.constructor.type}set type(e){}constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:wW++}),this.uuid=Rh(),this.name="",this.blending=Iu,this.side=Ha,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Gx,this.blendDst=Vx,this.blendEquation=Ac,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Xt(0,0,0),this.blendAlpha=0,this.depthFunc=th,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=OE,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Ll,this.stencilZFail=Ll,this.stencilZPass=Ll,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const s=this[t];if(s===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}s&&s.isColor?s.set(n):s&&s.isVector3&&n&&n.isVector3?s.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Iu&&(n.blending=this.blending),this.side!==Ha&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==Gx&&(n.blendSrc=this.blendSrc),this.blendDst!==Vx&&(n.blendDst=this.blendDst),this.blendEquation!==Ac&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==th&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==OE&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Ll&&(n.stencilFail=this.stencilFail),this.stencilZFail!==Ll&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==Ll&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function s(r){const o=[];for(const a in r){const c=r[a];delete c.metadata,o.push(c)}return o}if(t){const r=s(e.textures),o=s(e.images);r.length>0&&(n.textures=r),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const s=t.length;n=new Array(s);for(let r=0;r!==s;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}},Cb=class extends g_{static get type(){return"MeshBasicMaterial"}constructor(e){super(),this.isMeshBasicMaterial=!0,this.color=new Xt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new el,this.combine=MN,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}};const Dn=new he,Pp=new lt;let Dr=class{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=BE,this.updateRanges=[],this.gpuType=No,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let s=0,r=this.itemSize;s<r;s++)this.array[e+s]=t.array[n+s];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)Pp.fromBufferAttribute(this,t),Pp.applyMatrix3(e),this.setXY(t,Pp.x,Pp.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)Dn.fromBufferAttribute(this,t),Dn.applyMatrix3(e),this.setXYZ(t,Dn.x,Dn.y,Dn.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)Dn.fromBufferAttribute(this,t),Dn.applyMatrix4(e),this.setXYZ(t,Dn.x,Dn.y,Dn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Dn.fromBufferAttribute(this,t),Dn.applyNormalMatrix(e),this.setXYZ(t,Dn.x,Dn.y,Dn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Dn.fromBufferAttribute(this,t),Dn.transformDirection(e),this.setXYZ(t,Dn.x,Dn.y,Dn.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=fu(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=Ei(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=fu(t,this.array)),t}setX(e,t){return this.normalized&&(t=Ei(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=fu(t,this.array)),t}setY(e,t){return this.normalized&&(t=Ei(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=fu(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Ei(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=fu(t,this.array)),t}setW(e,t){return this.normalized&&(t=Ei(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=Ei(t,this.array),n=Ei(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,s){return e*=this.itemSize,this.normalized&&(t=Ei(t,this.array),n=Ei(n,this.array),s=Ei(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=s,this}setXYZW(e,t,n,s,r){return e*=this.itemSize,this.normalized&&(t=Ei(t,this.array),n=Ei(n,this.array),s=Ei(s,this.array),r=Ei(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=s,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==BE&&(e.usage=this.usage),e}},$N=class extends Dr{constructor(e,t,n){super(new Uint16Array(e),t,n)}},qN=class extends Dr{constructor(e,t,n){super(new Uint32Array(e),t,n)}},Ds=class extends Dr{constructor(e,t,n){super(new Float32Array(e),t,n)}},AW=0;const Ms=new Cn,G0=new Is,Hl=new he,as=new Nh,Qh=new Nh,Qn=new he;let dl=class XN extends Za{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:AW++}),this.uuid=Rh(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(BN(e)?qN:$N)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new Nt().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}const s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(e),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Ms.makeRotationFromQuaternion(e),this.applyMatrix4(Ms),this}rotateX(e){return Ms.makeRotationX(e),this.applyMatrix4(Ms),this}rotateY(e){return Ms.makeRotationY(e),this.applyMatrix4(Ms),this}rotateZ(e){return Ms.makeRotationZ(e),this.applyMatrix4(Ms),this}translate(e,t,n){return Ms.makeTranslation(e,t,n),this.applyMatrix4(Ms),this}scale(e,t,n){return Ms.makeScale(e,t,n),this.applyMatrix4(Ms),this}lookAt(e){return G0.lookAt(e),G0.updateMatrix(),this.applyMatrix4(G0.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Hl).negate(),this.translate(Hl.x,Hl.y,Hl.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const n=[];for(let s=0,r=e.length;s<r;s++){const o=e[s];n.push(o.x,o.y,o.z||0)}this.setAttribute("position",new Ds(n,3))}else{for(let n=0,s=t.count;n<s;n++){const r=e[n];t.setXYZ(n,r.x,r.y,r.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Nh);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new he(-1/0,-1/0,-1/0),new he(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,s=t.length;n<s;n++){const r=t[n];as.setFromBufferAttribute(r),this.morphTargetsRelative?(Qn.addVectors(this.boundingBox.min,as.min),this.boundingBox.expandByPoint(Qn),Qn.addVectors(this.boundingBox.max,as.max),this.boundingBox.expandByPoint(Qn)):(this.boundingBox.expandByPoint(as.min),this.boundingBox.expandByPoint(as.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Eb);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new he,1/0);return}if(e){const n=this.boundingSphere.center;if(as.setFromBufferAttribute(e),t)for(let r=0,o=t.length;r<o;r++){const a=t[r];Qh.setFromBufferAttribute(a),this.morphTargetsRelative?(Qn.addVectors(as.min,Qh.min),as.expandByPoint(Qn),Qn.addVectors(as.max,Qh.max),as.expandByPoint(Qn)):(as.expandByPoint(Qh.min),as.expandByPoint(Qh.max))}as.getCenter(n);let s=0;for(let r=0,o=e.count;r<o;r++)Qn.fromBufferAttribute(e,r),s=Math.max(s,n.distanceToSquared(Qn));if(t)for(let r=0,o=t.length;r<o;r++){const a=t[r],c=this.morphTargetsRelative;for(let l=0,u=a.count;l<u;l++)Qn.fromBufferAttribute(a,l),c&&(Hl.fromBufferAttribute(e,l),Qn.add(Hl)),s=Math.max(s,n.distanceToSquared(Qn))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.position,s=t.normal,r=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Dr(new Float32Array(4*n.count),4));const o=this.getAttribute("tangent"),a=[],c=[];for(let w=0;w<n.count;w++)a[w]=new he,c[w]=new he;const l=new he,u=new he,h=new he,d=new lt,f=new lt,m=new lt,_=new he,g=new he;function p(w,b,T){l.fromBufferAttribute(n,w),u.fromBufferAttribute(n,b),h.fromBufferAttribute(n,T),d.fromBufferAttribute(r,w),f.fromBufferAttribute(r,b),m.fromBufferAttribute(r,T),u.sub(l),h.sub(l),f.sub(d),m.sub(d);const C=1/(f.x*m.y-m.x*f.y);isFinite(C)&&(_.copy(u).multiplyScalar(m.y).addScaledVector(h,-f.y).multiplyScalar(C),g.copy(h).multiplyScalar(f.x).addScaledVector(u,-m.x).multiplyScalar(C),a[w].add(_),a[b].add(_),a[T].add(_),c[w].add(g),c[b].add(g),c[T].add(g))}let y=this.groups;y.length===0&&(y=[{start:0,count:e.count}]);for(let w=0,b=y.length;w<b;++w){const T=y[w],C=T.start,D=T.count;for(let P=C,N=C+D;P<N;P+=3)p(e.getX(P+0),e.getX(P+1),e.getX(P+2))}const x=new he,v=new he,S=new he,M=new he;function E(w){S.fromBufferAttribute(s,w),M.copy(S);const b=a[w];x.copy(b),x.sub(S.multiplyScalar(S.dot(b))).normalize(),v.crossVectors(M,b);const C=v.dot(c[w])<0?-1:1;o.setXYZW(w,x.x,x.y,x.z,C)}for(let w=0,b=y.length;w<b;++w){const T=y[w],C=T.start,D=T.count;for(let P=C,N=C+D;P<N;P+=3)E(e.getX(P+0)),E(e.getX(P+1)),E(e.getX(P+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Dr(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let d=0,f=n.count;d<f;d++)n.setXYZ(d,0,0,0);const s=new he,r=new he,o=new he,a=new he,c=new he,l=new he,u=new he,h=new he;if(e)for(let d=0,f=e.count;d<f;d+=3){const m=e.getX(d+0),_=e.getX(d+1),g=e.getX(d+2);s.fromBufferAttribute(t,m),r.fromBufferAttribute(t,_),o.fromBufferAttribute(t,g),u.subVectors(o,r),h.subVectors(s,r),u.cross(h),a.fromBufferAttribute(n,m),c.fromBufferAttribute(n,_),l.fromBufferAttribute(n,g),a.add(u),c.add(u),l.add(u),n.setXYZ(m,a.x,a.y,a.z),n.setXYZ(_,c.x,c.y,c.z),n.setXYZ(g,l.x,l.y,l.z)}else for(let d=0,f=t.count;d<f;d+=3)s.fromBufferAttribute(t,d+0),r.fromBufferAttribute(t,d+1),o.fromBufferAttribute(t,d+2),u.subVectors(o,r),h.subVectors(s,r),u.cross(h),n.setXYZ(d+0,u.x,u.y,u.z),n.setXYZ(d+1,u.x,u.y,u.z),n.setXYZ(d+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Qn.fromBufferAttribute(e,t),Qn.normalize(),e.setXYZ(t,Qn.x,Qn.y,Qn.z)}toNonIndexed(){function e(a,c){const l=a.array,u=a.itemSize,h=a.normalized,d=new l.constructor(c.length*u);let f=0,m=0;for(let _=0,g=c.length;_<g;_++){a.isInterleavedBufferAttribute?f=c[_]*a.data.stride+a.offset:f=c[_]*u;for(let p=0;p<u;p++)d[m++]=l[f++]}return new Dr(d,u,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new XN,n=this.index.array,s=this.attributes;for(const a in s){const c=s[a],l=e(c,n);t.setAttribute(a,l)}const r=this.morphAttributes;for(const a in r){const c=[],l=r[a];for(let u=0,h=l.length;u<h;u++){const d=l[u],f=e(d,n);c.push(f)}t.morphAttributes[a]=c}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,c=o.length;a<c;a++){const l=o[a];t.addGroup(l.start,l.count,l.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const c=this.parameters;for(const l in c)c[l]!==void 0&&(e[l]=c[l]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const c in n){const l=n[c];e.data.attributes[c]=l.toJSON(e.data)}const s={};let r=!1;for(const c in this.morphAttributes){const l=this.morphAttributes[c],u=[];for(let h=0,d=l.length;h<d;h++){const f=l[h];u.push(f.toJSON(e.data))}u.length>0&&(s[c]=u,r=!0)}r&&(e.data.morphAttributes=s,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const s=e.attributes;for(const l in s){const u=s[l];this.setAttribute(l,u.clone(t))}const r=e.morphAttributes;for(const l in r){const u=[],h=r[l];for(let d=0,f=h.length;d<f;d++)u.push(h[d].clone(t));this.morphAttributes[l]=u}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let l=0,u=o.length;l<u;l++){const h=o[l];this.addGroup(h.start,h.count,h.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const c=e.boundingSphere;return c!==null&&(this.boundingSphere=c.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}};const nw=new Cn,cc=new wb,Dp=new Eb,iw=new he,Lp=new he,Ip=new he,Fp=new he,V0=new he,Up=new he,sw=new he,Op=new he;let rr=class extends Is{constructor(e=new dl,t=new Cb){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const s=t[n[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=s.length;r<o;r++){const a=s[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}getVertexPosition(e,t){const n=this.geometry,s=n.attributes.position,r=n.morphAttributes.position,o=n.morphTargetsRelative;t.fromBufferAttribute(s,e);const a=this.morphTargetInfluences;if(r&&a){Up.set(0,0,0);for(let c=0,l=r.length;c<l;c++){const u=a[c],h=r[c];u!==0&&(V0.fromBufferAttribute(h,e),o?Up.addScaledVector(V0,u):Up.addScaledVector(V0.sub(t),u))}t.add(Up)}return t}raycast(e,t){const n=this.geometry,s=this.material,r=this.matrixWorld;s!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),Dp.copy(n.boundingSphere),Dp.applyMatrix4(r),cc.copy(e.ray).recast(e.near),!(Dp.containsPoint(cc.origin)===!1&&(cc.intersectSphere(Dp,iw)===null||cc.origin.distanceToSquared(iw)>(e.far-e.near)**2))&&(nw.copy(r).invert(),cc.copy(e.ray).applyMatrix4(nw),!(n.boundingBox!==null&&cc.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,cc)))}_computeIntersections(e,t,n){let s;const r=this.geometry,o=this.material,a=r.index,c=r.attributes.position,l=r.attributes.uv,u=r.attributes.uv1,h=r.attributes.normal,d=r.groups,f=r.drawRange;if(a!==null)if(Array.isArray(o))for(let m=0,_=d.length;m<_;m++){const g=d[m],p=o[g.materialIndex],y=Math.max(g.start,f.start),x=Math.min(a.count,Math.min(g.start+g.count,f.start+f.count));for(let v=y,S=x;v<S;v+=3){const M=a.getX(v),E=a.getX(v+1),w=a.getX(v+2);s=Bp(this,p,e,n,l,u,h,M,E,w),s&&(s.faceIndex=Math.floor(v/3),s.face.materialIndex=g.materialIndex,t.push(s))}}else{const m=Math.max(0,f.start),_=Math.min(a.count,f.start+f.count);for(let g=m,p=_;g<p;g+=3){const y=a.getX(g),x=a.getX(g+1),v=a.getX(g+2);s=Bp(this,o,e,n,l,u,h,y,x,v),s&&(s.faceIndex=Math.floor(g/3),t.push(s))}}else if(c!==void 0)if(Array.isArray(o))for(let m=0,_=d.length;m<_;m++){const g=d[m],p=o[g.materialIndex],y=Math.max(g.start,f.start),x=Math.min(c.count,Math.min(g.start+g.count,f.start+f.count));for(let v=y,S=x;v<S;v+=3){const M=v,E=v+1,w=v+2;s=Bp(this,p,e,n,l,u,h,M,E,w),s&&(s.faceIndex=Math.floor(v/3),s.face.materialIndex=g.materialIndex,t.push(s))}}else{const m=Math.max(0,f.start),_=Math.min(c.count,f.start+f.count);for(let g=m,p=_;g<p;g+=3){const y=g,x=g+1,v=g+2;s=Bp(this,o,e,n,l,u,h,y,x,v),s&&(s.faceIndex=Math.floor(g/3),t.push(s))}}}};function CW(i,e,t,n,s,r,o,a){let c;if(e.side===Fi?c=n.intersectTriangle(o,r,s,!0,a):c=n.intersectTriangle(s,r,o,e.side===Ha,a),c===null)return null;Op.copy(a),Op.applyMatrix4(i.matrixWorld);const l=t.ray.origin.distanceTo(Op);return l<t.near||l>t.far?null:{distance:l,point:Op.clone(),object:i}}function Bp(i,e,t,n,s,r,o,a,c,l){i.getVertexPosition(a,Lp),i.getVertexPosition(c,Ip),i.getVertexPosition(l,Fp);const u=CW(i,e,t,n,Lp,Ip,Fp,sw);if(u){const h=new he;Kh.getBarycoord(sw,Lp,Ip,Fp,h),s&&(u.uv=Kh.getInterpolatedAttribute(s,a,c,l,h,new lt)),r&&(u.uv1=Kh.getInterpolatedAttribute(r,a,c,l,h,new lt)),o&&(u.normal=Kh.getInterpolatedAttribute(o,a,c,l,h,new he),u.normal.dot(n.direction)>0&&u.normal.multiplyScalar(-1));const d={a,b:c,c:l,normal:new he,materialIndex:0};Kh.getNormal(Lp,Ip,Fp,d.normal),u.face=d,u.barycoord=h}return u}let Rb=class jN extends dl{constructor(e=1,t=1,n=1,s=1,r=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:s,heightSegments:r,depthSegments:o};const a=this;s=Math.floor(s),r=Math.floor(r),o=Math.floor(o);const c=[],l=[],u=[],h=[];let d=0,f=0;m("z","y","x",-1,-1,n,t,e,o,r,0),m("z","y","x",1,-1,n,t,-e,o,r,1),m("x","z","y",1,1,e,n,t,s,o,2),m("x","z","y",1,-1,e,n,-t,s,o,3),m("x","y","z",1,-1,e,t,n,s,r,4),m("x","y","z",-1,-1,e,t,-n,s,r,5),this.setIndex(c),this.setAttribute("position",new Ds(l,3)),this.setAttribute("normal",new Ds(u,3)),this.setAttribute("uv",new Ds(h,2));function m(_,g,p,y,x,v,S,M,E,w,b){const T=v/E,C=S/w,D=v/2,P=S/2,N=M/2,L=E+1,U=w+1;let B=0,k=0;const $=new he;for(let z=0;z<U;z++){const Y=z*C-P;for(let ne=0;ne<L;ne++){const te=ne*T-D;$[_]=te*y,$[g]=Y*x,$[p]=N,l.push($.x,$.y,$.z),$[_]=0,$[g]=0,$[p]=M>0?1:-1,u.push($.x,$.y,$.z),h.push(ne/E),h.push(1-z/w),B+=1}}for(let z=0;z<w;z++)for(let Y=0;Y<E;Y++){const ne=d+Y+L*z,te=d+Y+L*(z+1),V=d+(Y+1)+L*(z+1),H=d+(Y+1)+L*z;c.push(ne,te,H),c.push(te,V,H),k+=6}a.addGroup(f,k,b),f+=k,d+=B}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new jN(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}};function oh(i){const e={};for(const t in i){e[t]={};for(const n in i[t]){const s=i[t][n];s&&(s.isColor||s.isMatrix3||s.isMatrix4||s.isVector2||s.isVector3||s.isVector4||s.isTexture||s.isQuaternion)?s.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=s.clone():Array.isArray(s)?e[t][n]=s.slice():e[t][n]=s}}return e}function Ai(i){const e={};for(let t=0;t<i.length;t++){const n=oh(i[t]);for(const s in n)e[s]=n[s]}return e}function RW(i){const e=[];for(let t=0;t<i.length;t++)e.push(i[t].clone());return e}function YN(i){const e=i.getRenderTarget();return e===null?i.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:zt.workingColorSpace}const ZN={clone:oh,merge:Ai};var NW=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,PW=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;let Ur=class extends g_{static get type(){return"ShaderMaterial"}constructor(e){super(),this.isShaderMaterial=!0,this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=NW,this.fragmentShader=PW,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=oh(e.uniforms),this.uniformsGroups=RW(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const s in this.uniforms){const o=this.uniforms[s].value;o&&o.isTexture?t.uniforms[s]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[s]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[s]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[s]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[s]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[s]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[s]={type:"m4",value:o.toArray()}:t.uniforms[s]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const s in this.extensions)this.extensions[s]===!0&&(n[s]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}},KN=class extends Is{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Cn,this.projectionMatrix=new Cn,this.projectionMatrixInverse=new Cn,this.coordinateSystem=Po}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}};const fa=new he,rw=new lt,ow=new lt;let Cs=class extends KN{constructor(e=50,t=1,n=.1,s=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=s,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=rf*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Dd*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return rf*2*Math.atan(Math.tan(Dd*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){fa.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(fa.x,fa.y).multiplyScalar(-e/fa.z),fa.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(fa.x,fa.y).multiplyScalar(-e/fa.z)}getViewSize(e,t){return this.getViewBounds(e,rw,ow),t.subVectors(ow,rw)}setViewOffset(e,t,n,s,r,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=s,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Dd*.5*this.fov)/this.zoom,n=2*t,s=this.aspect*n,r=-.5*s;const o=this.view;if(this.view!==null&&this.view.enabled){const c=o.fullWidth,l=o.fullHeight;r+=o.offsetX*s/c,t-=o.offsetY*n/l,s*=o.width/c,n*=o.height/l}const a=this.filmOffset;a!==0&&(r+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+s,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}};const Wl=-90,$l=1;let DW=class extends Is{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const s=new Cs(Wl,$l,e,t);s.layers=this.layers,this.add(s);const r=new Cs(Wl,$l,e,t);r.layers=this.layers,this.add(r);const o=new Cs(Wl,$l,e,t);o.layers=this.layers,this.add(o);const a=new Cs(Wl,$l,e,t);a.layers=this.layers,this.add(a);const c=new Cs(Wl,$l,e,t);c.layers=this.layers,this.add(c);const l=new Cs(Wl,$l,e,t);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,s,r,o,a,c]=t;for(const l of t)this.remove(l);if(e===Po)n.up.set(0,1,0),n.lookAt(1,0,0),s.up.set(0,1,0),s.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),c.up.set(0,1,0),c.lookAt(0,0,-1);else if(e===Mg)n.up.set(0,-1,0),n.lookAt(-1,0,0),s.up.set(0,-1,0),s.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),c.up.set(0,-1,0),c.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const l of t)this.add(l),l.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:s}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[r,o,a,c,l,u]=this.children,h=e.getRenderTarget(),d=e.getActiveCubeFace(),f=e.getActiveMipmapLevel(),m=e.xr.enabled;e.xr.enabled=!1;const _=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,s),e.render(t,r),e.setRenderTarget(n,1,s),e.render(t,o),e.setRenderTarget(n,2,s),e.render(t,a),e.setRenderTarget(n,3,s),e.render(t,c),e.setRenderTarget(n,4,s),e.render(t,l),n.texture.generateMipmaps=_,e.setRenderTarget(n,5,s),e.render(t,u),e.setRenderTarget(h,d,f),e.xr.enabled=m,n.texture.needsPMREMUpdate=!0}},QN=class extends Sr{constructor(e,t,n,s,r,o,a,c,l,u){e=e!==void 0?e:[],t=t!==void 0?t:nh,super(e,t,n,s,r,o,a,c,l,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}},LW=class extends Wa{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},s=[n,n,n,n,n,n];this.texture=new QN(s,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:Cr}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},s=new Rb(5,5,5),r=new Ur({name:"CubemapFromEquirect",uniforms:oh(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Fi,blending:Fo});r.uniforms.tEquirect.value=t;const o=new rr(s,r),a=t.minFilter;return t.minFilter===Uc&&(t.minFilter=Cr),new DW(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,n,s){const r=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,s);e.setRenderTarget(r)}};const H0=new he,IW=new he,FW=new Nt;let xo=class{constructor(e=new he(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,s){return this.normal.set(e,t,n),this.constant=s,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const s=H0.subVectors(n,t).cross(IW.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(s,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(H0),s=this.normal.dot(n);if(s===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/s;return r<0||r>1?null:t.copy(e.start).addScaledVector(n,r)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||FW.getNormalMatrix(e),s=this.coplanarPoint(H0).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-s.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}};const lc=new Eb,kp=new he;let Nb=class{constructor(e=new xo,t=new xo,n=new xo,s=new xo,r=new xo,o=new xo){this.planes=[e,t,n,s,r,o]}set(e,t,n,s,r,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(s),a[4].copy(r),a[5].copy(o),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=Po){const n=this.planes,s=e.elements,r=s[0],o=s[1],a=s[2],c=s[3],l=s[4],u=s[5],h=s[6],d=s[7],f=s[8],m=s[9],_=s[10],g=s[11],p=s[12],y=s[13],x=s[14],v=s[15];if(n[0].setComponents(c-r,d-l,g-f,v-p).normalize(),n[1].setComponents(c+r,d+l,g+f,v+p).normalize(),n[2].setComponents(c+o,d+u,g+m,v+y).normalize(),n[3].setComponents(c-o,d-u,g-m,v-y).normalize(),n[4].setComponents(c-a,d-h,g-_,v-x).normalize(),t===Po)n[5].setComponents(c+a,d+h,g+_,v+x).normalize();else if(t===Mg)n[5].setComponents(a,h,_,x).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),lc.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),lc.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(lc)}intersectsSprite(e){return lc.center.set(0,0,0),lc.radius=.7071067811865476,lc.applyMatrix4(e.matrixWorld),this.intersectsSphere(lc)}intersectsSphere(e){const t=this.planes,n=e.center,s=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(n)<s)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const s=t[n];if(kp.x=s.normal.x>0?e.max.x:e.min.x,kp.y=s.normal.y>0?e.max.y:e.min.y,kp.z=s.normal.z>0?e.max.z:e.min.z,s.distanceToPoint(kp)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}};function JN(){let i=null,e=!1,t=null,n=null;function s(r,o){t(r,o),n=i.requestAnimationFrame(s)}return{start:function(){e!==!0&&t!==null&&(n=i.requestAnimationFrame(s),e=!0)},stop:function(){i.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){i=r}}}function UW(i){const e=new WeakMap;function t(a,c){const l=a.array,u=a.usage,h=l.byteLength,d=i.createBuffer();i.bindBuffer(c,d),i.bufferData(c,l,u),a.onUploadCallback();let f;if(l instanceof Float32Array)f=i.FLOAT;else if(l instanceof Uint16Array)a.isFloat16BufferAttribute?f=i.HALF_FLOAT:f=i.UNSIGNED_SHORT;else if(l instanceof Int16Array)f=i.SHORT;else if(l instanceof Uint32Array)f=i.UNSIGNED_INT;else if(l instanceof Int32Array)f=i.INT;else if(l instanceof Int8Array)f=i.BYTE;else if(l instanceof Uint8Array)f=i.UNSIGNED_BYTE;else if(l instanceof Uint8ClampedArray)f=i.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+l);return{buffer:d,type:f,bytesPerElement:l.BYTES_PER_ELEMENT,version:a.version,size:h}}function n(a,c,l){const u=c.array,h=c.updateRanges;if(i.bindBuffer(l,a),h.length===0)i.bufferSubData(l,0,u);else{h.sort((f,m)=>f.start-m.start);let d=0;for(let f=1;f<h.length;f++){const m=h[d],_=h[f];_.start<=m.start+m.count+1?m.count=Math.max(m.count,_.start+_.count-m.start):(++d,h[d]=_)}h.length=d+1;for(let f=0,m=h.length;f<m;f++){const _=h[f];i.bufferSubData(l,_.start*u.BYTES_PER_ELEMENT,u,_.start,_.count)}c.clearUpdateRanges()}c.onUploadCallback()}function s(a){return a.isInterleavedBufferAttribute&&(a=a.data),e.get(a)}function r(a){a.isInterleavedBufferAttribute&&(a=a.data);const c=e.get(a);c&&(i.deleteBuffer(c.buffer),e.delete(a))}function o(a,c){if(a.isInterleavedBufferAttribute&&(a=a.data),a.isGLBufferAttribute){const u=e.get(a);(!u||u.version<a.version)&&e.set(a,{buffer:a.buffer,type:a.type,bytesPerElement:a.elementSize,version:a.version});return}const l=e.get(a);if(l===void 0)e.set(a,t(a,c));else if(l.version<a.version){if(l.size!==a.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(l.buffer,a,c),l.version=a.version}}return{get:s,remove:r,update:o}}class __ extends dl{constructor(e=1,t=1,n=1,s=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:s};const r=e/2,o=t/2,a=Math.floor(n),c=Math.floor(s),l=a+1,u=c+1,h=e/a,d=t/c,f=[],m=[],_=[],g=[];for(let p=0;p<u;p++){const y=p*d-o;for(let x=0;x<l;x++){const v=x*h-r;m.push(v,-y,0),_.push(0,0,1),g.push(x/a),g.push(1-p/c)}}for(let p=0;p<c;p++)for(let y=0;y<a;y++){const x=y+l*p,v=y+l*(p+1),S=y+1+l*(p+1),M=y+1+l*p;f.push(x,v,M),f.push(v,S,M)}this.setIndex(f),this.setAttribute("position",new Ds(m,3)),this.setAttribute("normal",new Ds(_,3)),this.setAttribute("uv",new Ds(g,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new __(e.width,e.height,e.widthSegments,e.heightSegments)}}var OW=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,BW=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,kW=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,zW=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,GW=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,VW=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,HW=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,WW=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,$W=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,qW=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,XW=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,jW=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,YW=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,ZW=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,KW=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,QW=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,JW=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,e$=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,t$=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,n$=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,i$=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,s$=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,r$=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,o$=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,a$=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,c$=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,l$=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,u$=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,h$=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,d$=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,f$="gl_FragColor = linearToOutputTexel( gl_FragColor );",p$=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,m$=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,g$=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,_$=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,v$=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,x$=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,y$=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,S$=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,b$=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,M$=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,T$=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,E$=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,w$=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,A$=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,C$=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,R$=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,N$=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,P$=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,D$=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,L$=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,I$=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,F$=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,U$=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,O$=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,B$=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,k$=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,z$=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,G$=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,V$=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,H$=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,W$=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,$$=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,q$=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,X$=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,j$=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Y$=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,Z$=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,K$=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,Q$=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,J$=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,e8=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,t8=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,n8=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,i8=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,s8=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,r8=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,o8=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,a8=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,c8=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,l8=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,u8=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,h8=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,d8=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,f8=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,p8=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,m8=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,g8=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,_8=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,v8=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,x8=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,y8=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,S8=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,b8=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,M8=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,T8=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,E8=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,w8=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,A8=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,C8=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,R8=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,N8=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,P8=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
		
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
		
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		
		#else
		
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,D8=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,L8=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,I8=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,F8=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const U8=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,O8=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,B8=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,k8=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,z8=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,G8=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,V8=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,H8=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,W8=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,$8=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,q8=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,X8=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,j8=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Y8=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Z8=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,K8=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Q8=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,J8=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,e6=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,t6=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,n6=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,i6=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,s6=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,r6=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,o6=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,a6=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,c6=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,l6=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,u6=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,h6=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,d6=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,f6=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,p6=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,m6=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Tt={alphahash_fragment:OW,alphahash_pars_fragment:BW,alphamap_fragment:kW,alphamap_pars_fragment:zW,alphatest_fragment:GW,alphatest_pars_fragment:VW,aomap_fragment:HW,aomap_pars_fragment:WW,batching_pars_vertex:$W,batching_vertex:qW,begin_vertex:XW,beginnormal_vertex:jW,bsdfs:YW,iridescence_fragment:ZW,bumpmap_pars_fragment:KW,clipping_planes_fragment:QW,clipping_planes_pars_fragment:JW,clipping_planes_pars_vertex:e$,clipping_planes_vertex:t$,color_fragment:n$,color_pars_fragment:i$,color_pars_vertex:s$,color_vertex:r$,common:o$,cube_uv_reflection_fragment:a$,defaultnormal_vertex:c$,displacementmap_pars_vertex:l$,displacementmap_vertex:u$,emissivemap_fragment:h$,emissivemap_pars_fragment:d$,colorspace_fragment:f$,colorspace_pars_fragment:p$,envmap_fragment:m$,envmap_common_pars_fragment:g$,envmap_pars_fragment:_$,envmap_pars_vertex:v$,envmap_physical_pars_fragment:R$,envmap_vertex:x$,fog_vertex:y$,fog_pars_vertex:S$,fog_fragment:b$,fog_pars_fragment:M$,gradientmap_pars_fragment:T$,lightmap_pars_fragment:E$,lights_lambert_fragment:w$,lights_lambert_pars_fragment:A$,lights_pars_begin:C$,lights_toon_fragment:N$,lights_toon_pars_fragment:P$,lights_phong_fragment:D$,lights_phong_pars_fragment:L$,lights_physical_fragment:I$,lights_physical_pars_fragment:F$,lights_fragment_begin:U$,lights_fragment_maps:O$,lights_fragment_end:B$,logdepthbuf_fragment:k$,logdepthbuf_pars_fragment:z$,logdepthbuf_pars_vertex:G$,logdepthbuf_vertex:V$,map_fragment:H$,map_pars_fragment:W$,map_particle_fragment:$$,map_particle_pars_fragment:q$,metalnessmap_fragment:X$,metalnessmap_pars_fragment:j$,morphinstance_vertex:Y$,morphcolor_vertex:Z$,morphnormal_vertex:K$,morphtarget_pars_vertex:Q$,morphtarget_vertex:J$,normal_fragment_begin:e8,normal_fragment_maps:t8,normal_pars_fragment:n8,normal_pars_vertex:i8,normal_vertex:s8,normalmap_pars_fragment:r8,clearcoat_normal_fragment_begin:o8,clearcoat_normal_fragment_maps:a8,clearcoat_pars_fragment:c8,iridescence_pars_fragment:l8,opaque_fragment:u8,packing:h8,premultiplied_alpha_fragment:d8,project_vertex:f8,dithering_fragment:p8,dithering_pars_fragment:m8,roughnessmap_fragment:g8,roughnessmap_pars_fragment:_8,shadowmap_pars_fragment:v8,shadowmap_pars_vertex:x8,shadowmap_vertex:y8,shadowmask_pars_fragment:S8,skinbase_vertex:b8,skinning_pars_vertex:M8,skinning_vertex:T8,skinnormal_vertex:E8,specularmap_fragment:w8,specularmap_pars_fragment:A8,tonemapping_fragment:C8,tonemapping_pars_fragment:R8,transmission_fragment:N8,transmission_pars_fragment:P8,uv_pars_fragment:D8,uv_pars_vertex:L8,uv_vertex:I8,worldpos_vertex:F8,background_vert:U8,background_frag:O8,backgroundCube_vert:B8,backgroundCube_frag:k8,cube_vert:z8,cube_frag:G8,depth_vert:V8,depth_frag:H8,distanceRGBA_vert:W8,distanceRGBA_frag:$8,equirect_vert:q8,equirect_frag:X8,linedashed_vert:j8,linedashed_frag:Y8,meshbasic_vert:Z8,meshbasic_frag:K8,meshlambert_vert:Q8,meshlambert_frag:J8,meshmatcap_vert:e6,meshmatcap_frag:t6,meshnormal_vert:n6,meshnormal_frag:i6,meshphong_vert:s6,meshphong_frag:r6,meshphysical_vert:o6,meshphysical_frag:a6,meshtoon_vert:c6,meshtoon_frag:l6,points_vert:u6,points_frag:h6,shadow_vert:d6,shadow_frag:f6,sprite_vert:p6,sprite_frag:m6},Qe={common:{diffuse:{value:new Xt(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Nt},alphaMap:{value:null},alphaMapTransform:{value:new Nt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Nt}},envmap:{envMap:{value:null},envMapRotation:{value:new Nt},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Nt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Nt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Nt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Nt},normalScale:{value:new lt(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Nt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Nt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Nt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Nt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Xt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Xt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Nt},alphaTest:{value:0},uvTransform:{value:new Nt}},sprite:{diffuse:{value:new Xt(16777215)},opacity:{value:1},center:{value:new lt(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Nt},alphaMap:{value:null},alphaMapTransform:{value:new Nt},alphaTest:{value:0}}},wr={basic:{uniforms:Ai([Qe.common,Qe.specularmap,Qe.envmap,Qe.aomap,Qe.lightmap,Qe.fog]),vertexShader:Tt.meshbasic_vert,fragmentShader:Tt.meshbasic_frag},lambert:{uniforms:Ai([Qe.common,Qe.specularmap,Qe.envmap,Qe.aomap,Qe.lightmap,Qe.emissivemap,Qe.bumpmap,Qe.normalmap,Qe.displacementmap,Qe.fog,Qe.lights,{emissive:{value:new Xt(0)}}]),vertexShader:Tt.meshlambert_vert,fragmentShader:Tt.meshlambert_frag},phong:{uniforms:Ai([Qe.common,Qe.specularmap,Qe.envmap,Qe.aomap,Qe.lightmap,Qe.emissivemap,Qe.bumpmap,Qe.normalmap,Qe.displacementmap,Qe.fog,Qe.lights,{emissive:{value:new Xt(0)},specular:{value:new Xt(1118481)},shininess:{value:30}}]),vertexShader:Tt.meshphong_vert,fragmentShader:Tt.meshphong_frag},standard:{uniforms:Ai([Qe.common,Qe.envmap,Qe.aomap,Qe.lightmap,Qe.emissivemap,Qe.bumpmap,Qe.normalmap,Qe.displacementmap,Qe.roughnessmap,Qe.metalnessmap,Qe.fog,Qe.lights,{emissive:{value:new Xt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Tt.meshphysical_vert,fragmentShader:Tt.meshphysical_frag},toon:{uniforms:Ai([Qe.common,Qe.aomap,Qe.lightmap,Qe.emissivemap,Qe.bumpmap,Qe.normalmap,Qe.displacementmap,Qe.gradientmap,Qe.fog,Qe.lights,{emissive:{value:new Xt(0)}}]),vertexShader:Tt.meshtoon_vert,fragmentShader:Tt.meshtoon_frag},matcap:{uniforms:Ai([Qe.common,Qe.bumpmap,Qe.normalmap,Qe.displacementmap,Qe.fog,{matcap:{value:null}}]),vertexShader:Tt.meshmatcap_vert,fragmentShader:Tt.meshmatcap_frag},points:{uniforms:Ai([Qe.points,Qe.fog]),vertexShader:Tt.points_vert,fragmentShader:Tt.points_frag},dashed:{uniforms:Ai([Qe.common,Qe.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Tt.linedashed_vert,fragmentShader:Tt.linedashed_frag},depth:{uniforms:Ai([Qe.common,Qe.displacementmap]),vertexShader:Tt.depth_vert,fragmentShader:Tt.depth_frag},normal:{uniforms:Ai([Qe.common,Qe.bumpmap,Qe.normalmap,Qe.displacementmap,{opacity:{value:1}}]),vertexShader:Tt.meshnormal_vert,fragmentShader:Tt.meshnormal_frag},sprite:{uniforms:Ai([Qe.sprite,Qe.fog]),vertexShader:Tt.sprite_vert,fragmentShader:Tt.sprite_frag},background:{uniforms:{uvTransform:{value:new Nt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Tt.background_vert,fragmentShader:Tt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new Nt}},vertexShader:Tt.backgroundCube_vert,fragmentShader:Tt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Tt.cube_vert,fragmentShader:Tt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Tt.equirect_vert,fragmentShader:Tt.equirect_frag},distanceRGBA:{uniforms:Ai([Qe.common,Qe.displacementmap,{referencePosition:{value:new he},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Tt.distanceRGBA_vert,fragmentShader:Tt.distanceRGBA_frag},shadow:{uniforms:Ai([Qe.lights,Qe.fog,{color:{value:new Xt(0)},opacity:{value:1}}]),vertexShader:Tt.shadow_vert,fragmentShader:Tt.shadow_frag}};wr.physical={uniforms:Ai([wr.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Nt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Nt},clearcoatNormalScale:{value:new lt(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Nt},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Nt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Nt},sheen:{value:0},sheenColor:{value:new Xt(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Nt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Nt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Nt},transmissionSamplerSize:{value:new lt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Nt},attenuationDistance:{value:0},attenuationColor:{value:new Xt(0)},specularColor:{value:new Xt(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Nt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Nt},anisotropyVector:{value:new lt},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Nt}}]),vertexShader:Tt.meshphysical_vert,fragmentShader:Tt.meshphysical_frag};const zp={r:0,b:0,g:0},uc=new el,g6=new Cn;function _6(i,e,t,n,s,r,o){const a=new Xt(0);let c=r===!0?0:1,l,u,h=null,d=0,f=null;function m(y){let x=y.isScene===!0?y.background:null;return x&&x.isTexture&&(x=(y.backgroundBlurriness>0?t:e).get(x)),x}function _(y){let x=!1;const v=m(y);v===null?p(a,c):v&&v.isColor&&(p(v,1),x=!0);const S=i.xr.getEnvironmentBlendMode();S==="additive"?n.buffers.color.setClear(0,0,0,1,o):S==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,o),(i.autoClear||x)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),i.clear(i.autoClearColor,i.autoClearDepth,i.autoClearStencil))}function g(y,x){const v=m(x);v&&(v.isCubeTexture||v.mapping===p_)?(u===void 0&&(u=new rr(new Rb(1,1,1),new Ur({name:"BackgroundCubeMaterial",uniforms:oh(wr.backgroundCube.uniforms),vertexShader:wr.backgroundCube.vertexShader,fragmentShader:wr.backgroundCube.fragmentShader,side:Fi,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(S,M,E){this.matrixWorld.copyPosition(E.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),s.update(u)),uc.copy(x.backgroundRotation),uc.x*=-1,uc.y*=-1,uc.z*=-1,v.isCubeTexture&&v.isRenderTargetTexture===!1&&(uc.y*=-1,uc.z*=-1),u.material.uniforms.envMap.value=v,u.material.uniforms.flipEnvMap.value=v.isCubeTexture&&v.isRenderTargetTexture===!1?-1:1,u.material.uniforms.backgroundBlurriness.value=x.backgroundBlurriness,u.material.uniforms.backgroundIntensity.value=x.backgroundIntensity,u.material.uniforms.backgroundRotation.value.setFromMatrix4(g6.makeRotationFromEuler(uc)),u.material.toneMapped=zt.getTransfer(v.colorSpace)!==Jt,(h!==v||d!==v.version||f!==i.toneMapping)&&(u.material.needsUpdate=!0,h=v,d=v.version,f=i.toneMapping),u.layers.enableAll(),y.unshift(u,u.geometry,u.material,0,0,null)):v&&v.isTexture&&(l===void 0&&(l=new rr(new __(2,2),new Ur({name:"BackgroundMaterial",uniforms:oh(wr.background.uniforms),vertexShader:wr.background.vertexShader,fragmentShader:wr.background.fragmentShader,side:Ha,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),s.update(l)),l.material.uniforms.t2D.value=v,l.material.uniforms.backgroundIntensity.value=x.backgroundIntensity,l.material.toneMapped=zt.getTransfer(v.colorSpace)!==Jt,v.matrixAutoUpdate===!0&&v.updateMatrix(),l.material.uniforms.uvTransform.value.copy(v.matrix),(h!==v||d!==v.version||f!==i.toneMapping)&&(l.material.needsUpdate=!0,h=v,d=v.version,f=i.toneMapping),l.layers.enableAll(),y.unshift(l,l.geometry,l.material,0,0,null))}function p(y,x){y.getRGB(zp,YN(i)),n.buffers.color.setClear(zp.r,zp.g,zp.b,x,o)}return{getClearColor:function(){return a},setClearColor:function(y,x=1){a.set(y),c=x,p(a,c)},getClearAlpha:function(){return c},setClearAlpha:function(y){c=y,p(a,c)},render:_,addToRenderList:g}}function v6(i,e){const t=i.getParameter(i.MAX_VERTEX_ATTRIBS),n={},s=d(null);let r=s,o=!1;function a(T,C,D,P,N){let L=!1;const U=h(P,D,C);r!==U&&(r=U,l(r.object)),L=f(T,P,D,N),L&&m(T,P,D,N),N!==null&&e.update(N,i.ELEMENT_ARRAY_BUFFER),(L||o)&&(o=!1,v(T,C,D,P),N!==null&&i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,e.get(N).buffer))}function c(){return i.createVertexArray()}function l(T){return i.bindVertexArray(T)}function u(T){return i.deleteVertexArray(T)}function h(T,C,D){const P=D.wireframe===!0;let N=n[T.id];N===void 0&&(N={},n[T.id]=N);let L=N[C.id];L===void 0&&(L={},N[C.id]=L);let U=L[P];return U===void 0&&(U=d(c()),L[P]=U),U}function d(T){const C=[],D=[],P=[];for(let N=0;N<t;N++)C[N]=0,D[N]=0,P[N]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:C,enabledAttributes:D,attributeDivisors:P,object:T,attributes:{},index:null}}function f(T,C,D,P){const N=r.attributes,L=C.attributes;let U=0;const B=D.getAttributes();for(const k in B)if(B[k].location>=0){const z=N[k];let Y=L[k];if(Y===void 0&&(k==="instanceMatrix"&&T.instanceMatrix&&(Y=T.instanceMatrix),k==="instanceColor"&&T.instanceColor&&(Y=T.instanceColor)),z===void 0||z.attribute!==Y||Y&&z.data!==Y.data)return!0;U++}return r.attributesNum!==U||r.index!==P}function m(T,C,D,P){const N={},L=C.attributes;let U=0;const B=D.getAttributes();for(const k in B)if(B[k].location>=0){let z=L[k];z===void 0&&(k==="instanceMatrix"&&T.instanceMatrix&&(z=T.instanceMatrix),k==="instanceColor"&&T.instanceColor&&(z=T.instanceColor));const Y={};Y.attribute=z,z&&z.data&&(Y.data=z.data),N[k]=Y,U++}r.attributes=N,r.attributesNum=U,r.index=P}function _(){const T=r.newAttributes;for(let C=0,D=T.length;C<D;C++)T[C]=0}function g(T){p(T,0)}function p(T,C){const D=r.newAttributes,P=r.enabledAttributes,N=r.attributeDivisors;D[T]=1,P[T]===0&&(i.enableVertexAttribArray(T),P[T]=1),N[T]!==C&&(i.vertexAttribDivisor(T,C),N[T]=C)}function y(){const T=r.newAttributes,C=r.enabledAttributes;for(let D=0,P=C.length;D<P;D++)C[D]!==T[D]&&(i.disableVertexAttribArray(D),C[D]=0)}function x(T,C,D,P,N,L,U){U===!0?i.vertexAttribIPointer(T,C,D,N,L):i.vertexAttribPointer(T,C,D,P,N,L)}function v(T,C,D,P){_();const N=P.attributes,L=D.getAttributes(),U=C.defaultAttributeValues;for(const B in L){const k=L[B];if(k.location>=0){let $=N[B];if($===void 0&&(B==="instanceMatrix"&&T.instanceMatrix&&($=T.instanceMatrix),B==="instanceColor"&&T.instanceColor&&($=T.instanceColor)),$!==void 0){const z=$.normalized,Y=$.itemSize,ne=e.get($);if(ne===void 0)continue;const te=ne.buffer,V=ne.type,H=ne.bytesPerElement,Q=V===i.INT||V===i.UNSIGNED_INT||$.gpuType===vb;if($.isInterleavedBufferAttribute){const O=$.data,oe=O.stride,Ne=$.offset;if(O.isInstancedInterleavedBuffer){for(let _e=0;_e<k.locationSize;_e++)p(k.location+_e,O.meshPerAttribute);T.isInstancedMesh!==!0&&P._maxInstanceCount===void 0&&(P._maxInstanceCount=O.meshPerAttribute*O.count)}else for(let _e=0;_e<k.locationSize;_e++)g(k.location+_e);i.bindBuffer(i.ARRAY_BUFFER,te);for(let _e=0;_e<k.locationSize;_e++)x(k.location+_e,Y/k.locationSize,V,z,oe*H,(Ne+Y/k.locationSize*_e)*H,Q)}else{if($.isInstancedBufferAttribute){for(let O=0;O<k.locationSize;O++)p(k.location+O,$.meshPerAttribute);T.isInstancedMesh!==!0&&P._maxInstanceCount===void 0&&(P._maxInstanceCount=$.meshPerAttribute*$.count)}else for(let O=0;O<k.locationSize;O++)g(k.location+O);i.bindBuffer(i.ARRAY_BUFFER,te);for(let O=0;O<k.locationSize;O++)x(k.location+O,Y/k.locationSize,V,z,Y*H,Y/k.locationSize*O*H,Q)}}else if(U!==void 0){const z=U[B];if(z!==void 0)switch(z.length){case 2:i.vertexAttrib2fv(k.location,z);break;case 3:i.vertexAttrib3fv(k.location,z);break;case 4:i.vertexAttrib4fv(k.location,z);break;default:i.vertexAttrib1fv(k.location,z)}}}}y()}function S(){w();for(const T in n){const C=n[T];for(const D in C){const P=C[D];for(const N in P)u(P[N].object),delete P[N];delete C[D]}delete n[T]}}function M(T){if(n[T.id]===void 0)return;const C=n[T.id];for(const D in C){const P=C[D];for(const N in P)u(P[N].object),delete P[N];delete C[D]}delete n[T.id]}function E(T){for(const C in n){const D=n[C];if(D[T.id]===void 0)continue;const P=D[T.id];for(const N in P)u(P[N].object),delete P[N];delete D[T.id]}}function w(){b(),o=!0,r!==s&&(r=s,l(r.object))}function b(){s.geometry=null,s.program=null,s.wireframe=!1}return{setup:a,reset:w,resetDefaultState:b,dispose:S,releaseStatesOfGeometry:M,releaseStatesOfProgram:E,initAttributes:_,enableAttribute:g,disableUnusedAttributes:y}}function x6(i,e,t){let n;function s(l){n=l}function r(l,u){i.drawArrays(n,l,u),t.update(u,n,1)}function o(l,u,h){h!==0&&(i.drawArraysInstanced(n,l,u,h),t.update(u,n,h))}function a(l,u,h){if(h===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,l,0,u,0,h);let f=0;for(let m=0;m<h;m++)f+=u[m];t.update(f,n,1)}function c(l,u,h,d){if(h===0)return;const f=e.get("WEBGL_multi_draw");if(f===null)for(let m=0;m<l.length;m++)o(l[m],u[m],d[m]);else{f.multiDrawArraysInstancedWEBGL(n,l,0,u,0,d,0,h);let m=0;for(let _=0;_<h;_++)m+=u[_]*d[_];t.update(m,n,1)}}this.setMode=s,this.render=r,this.renderInstances=o,this.renderMultiDraw=a,this.renderMultiDrawInstances=c}function y6(i,e,t,n){let s;function r(){if(s!==void 0)return s;if(e.has("EXT_texture_filter_anisotropic")===!0){const E=e.get("EXT_texture_filter_anisotropic");s=i.getParameter(E.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else s=0;return s}function o(E){return!(E!==sr&&n.convert(E)!==i.getParameter(i.IMPLEMENTATION_COLOR_READ_FORMAT))}function a(E){const w=E===Ah&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(E!==$o&&n.convert(E)!==i.getParameter(i.IMPLEMENTATION_COLOR_READ_TYPE)&&E!==No&&!w)}function c(E){if(E==="highp"){if(i.getShaderPrecisionFormat(i.VERTEX_SHADER,i.HIGH_FLOAT).precision>0&&i.getShaderPrecisionFormat(i.FRAGMENT_SHADER,i.HIGH_FLOAT).precision>0)return"highp";E="mediump"}return E==="mediump"&&i.getShaderPrecisionFormat(i.VERTEX_SHADER,i.MEDIUM_FLOAT).precision>0&&i.getShaderPrecisionFormat(i.FRAGMENT_SHADER,i.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let l=t.precision!==void 0?t.precision:"highp";const u=c(l);u!==l&&(console.warn("THREE.WebGLRenderer:",l,"not supported, using",u,"instead."),l=u);const h=t.logarithmicDepthBuffer===!0,d=t.reverseDepthBuffer===!0&&e.has("EXT_clip_control"),f=i.getParameter(i.MAX_TEXTURE_IMAGE_UNITS),m=i.getParameter(i.MAX_VERTEX_TEXTURE_IMAGE_UNITS),_=i.getParameter(i.MAX_TEXTURE_SIZE),g=i.getParameter(i.MAX_CUBE_MAP_TEXTURE_SIZE),p=i.getParameter(i.MAX_VERTEX_ATTRIBS),y=i.getParameter(i.MAX_VERTEX_UNIFORM_VECTORS),x=i.getParameter(i.MAX_VARYING_VECTORS),v=i.getParameter(i.MAX_FRAGMENT_UNIFORM_VECTORS),S=m>0,M=i.getParameter(i.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:r,getMaxPrecision:c,textureFormatReadable:o,textureTypeReadable:a,precision:l,logarithmicDepthBuffer:h,reverseDepthBuffer:d,maxTextures:f,maxVertexTextures:m,maxTextureSize:_,maxCubemapSize:g,maxAttributes:p,maxVertexUniforms:y,maxVaryings:x,maxFragmentUniforms:v,vertexTextures:S,maxSamples:M}}function S6(i){const e=this;let t=null,n=0,s=!1,r=!1;const o=new xo,a=new Nt,c={value:null,needsUpdate:!1};this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(h,d){const f=h.length!==0||d||n!==0||s;return s=d,n=h.length,f},this.beginShadows=function(){r=!0,u(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(h,d){t=u(h,d,0)},this.setState=function(h,d,f){const m=h.clippingPlanes,_=h.clipIntersection,g=h.clipShadows,p=i.get(h);if(!s||m===null||m.length===0||r&&!g)r?u(null):l();else{const y=r?0:n,x=y*4;let v=p.clippingState||null;c.value=v,v=u(m,d,x,f);for(let S=0;S!==x;++S)v[S]=t[S];p.clippingState=v,this.numIntersection=_?this.numPlanes:0,this.numPlanes+=y}};function l(){c.value!==t&&(c.value=t,c.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function u(h,d,f,m){const _=h!==null?h.length:0;let g=null;if(_!==0){if(g=c.value,m!==!0||g===null){const p=f+_*4,y=d.matrixWorldInverse;a.getNormalMatrix(y),(g===null||g.length<p)&&(g=new Float32Array(p));for(let x=0,v=f;x!==_;++x,v+=4)o.copy(h[x]).applyMatrix4(y,a),o.normal.toArray(g,v),g[v+3]=o.constant}c.value=g,c.needsUpdate=!0}return e.numPlanes=_,e.numIntersection=0,g}}function b6(i){let e=new WeakMap;function t(o,a){return a===Zx?o.mapping=nh:a===Kx&&(o.mapping=ih),o}function n(o){if(o&&o.isTexture){const a=o.mapping;if(a===Zx||a===Kx)if(e.has(o)){const c=e.get(o).texture;return t(c,o.mapping)}else{const c=o.image;if(c&&c.height>0){const l=new LW(c.height);return l.fromEquirectangularTexture(i,o),e.set(o,l),o.addEventListener("dispose",s),t(l.texture,o.mapping)}else return null}}return o}function s(o){const a=o.target;a.removeEventListener("dispose",s);const c=e.get(a);c!==void 0&&(e.delete(a),c.dispose())}function r(){e=new WeakMap}return{get:n,dispose:r}}let Pb=class extends KN{constructor(e=-1,t=1,n=1,s=-1,r=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=s,this.near=r,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,s,r,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=s,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,s=(this.top+this.bottom)/2;let r=n-e,o=n+e,a=s+t,c=s-t;if(this.view!==null&&this.view.enabled){const l=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=l*this.view.offsetX,o=r+l*this.view.width,a-=u*this.view.offsetY,c=a-u*this.view.height}this.projectionMatrix.makeOrthographic(r,o,a,c,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}};const xu=4,aw=[.125,.215,.35,.446,.526,.582],Cc=20,W0=new Pb,cw=new Xt;let $0=null,q0=0,X0=0,j0=!1;const yc=(1+Math.sqrt(5))/2,ql=1/yc,lw=[new he(-yc,ql,0),new he(yc,ql,0),new he(-ql,0,yc),new he(ql,0,yc),new he(0,yc,-ql),new he(0,yc,ql),new he(-1,1,-1),new he(1,1,-1),new he(-1,1,1),new he(1,1,1)];let uw=class{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,s=100){$0=this._renderer.getRenderTarget(),q0=this._renderer.getActiveCubeFace(),X0=this._renderer.getActiveMipmapLevel(),j0=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(e,n,s,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=fw(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=dw(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget($0,q0,X0),this._renderer.xr.enabled=j0,e.scissorTest=!1,Gp(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===nh||e.mapping===ih?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),$0=this._renderer.getRenderTarget(),q0=this._renderer.getActiveCubeFace(),X0=this._renderer.getActiveMipmapLevel(),j0=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:Cr,minFilter:Cr,generateMipmaps:!1,type:Ah,format:sr,colorSpace:Ch,depthBuffer:!1},s=hw(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=hw(e,t,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=M6(r)),this._blurMaterial=T6(r,e,t)}return s}_compileMaterial(e){const t=new rr(this._lodPlanes[0],e);this._renderer.compile(t,W0)}_sceneToCubeUV(e,t,n,s){const a=new Cs(90,1,t,n),c=[1,-1,1,1,1,1],l=[1,1,1,-1,-1,-1],u=this._renderer,h=u.autoClear,d=u.toneMapping;u.getClearColor(cw),u.toneMapping=Ia,u.autoClear=!1;const f=new Cb({name:"PMREM.Background",side:Fi,depthWrite:!1,depthTest:!1}),m=new rr(new Rb,f);let _=!1;const g=e.background;g?g.isColor&&(f.color.copy(g),e.background=null,_=!0):(f.color.copy(cw),_=!0);for(let p=0;p<6;p++){const y=p%3;y===0?(a.up.set(0,c[p],0),a.lookAt(l[p],0,0)):y===1?(a.up.set(0,0,c[p]),a.lookAt(0,l[p],0)):(a.up.set(0,c[p],0),a.lookAt(0,0,l[p]));const x=this._cubeSize;Gp(s,y*x,p>2?x:0,x,x),u.setRenderTarget(s),_&&u.render(m,a),u.render(e,a)}m.geometry.dispose(),m.material.dispose(),u.toneMapping=d,u.autoClear=h,e.background=g}_textureToCubeUV(e,t){const n=this._renderer,s=e.mapping===nh||e.mapping===ih;s?(this._cubemapMaterial===null&&(this._cubemapMaterial=fw()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=dw());const r=s?this._cubemapMaterial:this._equirectMaterial,o=new rr(this._lodPlanes[0],r),a=r.uniforms;a.envMap.value=e;const c=this._cubeSize;Gp(t,0,0,3*c,2*c),n.setRenderTarget(t),n.render(o,W0)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;const s=this._lodPlanes.length;for(let r=1;r<s;r++){const o=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),a=lw[(s-r-1)%lw.length];this._blur(e,r-1,r,o,a)}t.autoClear=n}_blur(e,t,n,s,r){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,s,"latitudinal",r),this._halfBlur(o,e,n,n,s,"longitudinal",r)}_halfBlur(e,t,n,s,r,o,a){const c=this._renderer,l=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,h=new rr(this._lodPlanes[s],l),d=l.uniforms,f=this._sizeLods[n]-1,m=isFinite(r)?Math.PI/(2*f):2*Math.PI/(2*Cc-1),_=r/m,g=isFinite(r)?1+Math.floor(u*_):Cc;g>Cc&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${Cc}`);const p=[];let y=0;for(let E=0;E<Cc;++E){const w=E/_,b=Math.exp(-w*w/2);p.push(b),E===0?y+=b:E<g&&(y+=2*b)}for(let E=0;E<p.length;E++)p[E]=p[E]/y;d.envMap.value=e.texture,d.samples.value=g,d.weights.value=p,d.latitudinal.value=o==="latitudinal",a&&(d.poleAxis.value=a);const{_lodMax:x}=this;d.dTheta.value=m,d.mipInt.value=x-n;const v=this._sizeLods[s],S=3*v*(s>x-xu?s-x+xu:0),M=4*(this._cubeSize-v);Gp(t,S,M,3*v,2*v),c.setRenderTarget(t),c.render(h,W0)}};function M6(i){const e=[],t=[],n=[];let s=i;const r=i-xu+1+aw.length;for(let o=0;o<r;o++){const a=Math.pow(2,s);t.push(a);let c=1/a;o>i-xu?c=aw[o-i+xu-1]:o===0&&(c=0),n.push(c);const l=1/(a-2),u=-l,h=1+l,d=[u,u,h,u,h,h,u,u,h,h,u,h],f=6,m=6,_=3,g=2,p=1,y=new Float32Array(_*m*f),x=new Float32Array(g*m*f),v=new Float32Array(p*m*f);for(let M=0;M<f;M++){const E=M%3*2/3-1,w=M>2?0:-1,b=[E,w,0,E+2/3,w,0,E+2/3,w+1,0,E,w,0,E+2/3,w+1,0,E,w+1,0];y.set(b,_*m*M),x.set(d,g*m*M);const T=[M,M,M,M,M,M];v.set(T,p*m*M)}const S=new dl;S.setAttribute("position",new Dr(y,_)),S.setAttribute("uv",new Dr(x,g)),S.setAttribute("faceIndex",new Dr(v,p)),e.push(S),s>xu&&s--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function hw(i,e,t){const n=new Wa(i,e,t);return n.texture.mapping=p_,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Gp(i,e,t,n,s){i.viewport.set(e,t,n,s),i.scissor.set(e,t,n,s)}function T6(i,e,t){const n=new Float32Array(Cc),s=new he(0,1,0);return new Ur({name:"SphericalGaussianBlur",defines:{n:Cc,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${i}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:s}},vertexShader:Db(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Fo,depthTest:!1,depthWrite:!1})}function dw(){return new Ur({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Db(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Fo,depthTest:!1,depthWrite:!1})}function fw(){return new Ur({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Db(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Fo,depthTest:!1,depthWrite:!1})}function Db(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function E6(i){let e=new WeakMap,t=null;function n(a){if(a&&a.isTexture){const c=a.mapping,l=c===Zx||c===Kx,u=c===nh||c===ih;if(l||u){let h=e.get(a);const d=h!==void 0?h.texture.pmremVersion:0;if(a.isRenderTargetTexture&&a.pmremVersion!==d)return t===null&&(t=new uw(i)),h=l?t.fromEquirectangular(a,h):t.fromCubemap(a,h),h.texture.pmremVersion=a.pmremVersion,e.set(a,h),h.texture;if(h!==void 0)return h.texture;{const f=a.image;return l&&f&&f.height>0||u&&f&&s(f)?(t===null&&(t=new uw(i)),h=l?t.fromEquirectangular(a):t.fromCubemap(a),h.texture.pmremVersion=a.pmremVersion,e.set(a,h),a.addEventListener("dispose",r),h.texture):null}}}return a}function s(a){let c=0;const l=6;for(let u=0;u<l;u++)a[u]!==void 0&&c++;return c===l}function r(a){const c=a.target;c.removeEventListener("dispose",r);const l=e.get(c);l!==void 0&&(e.delete(c),l.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:o}}function w6(i){const e={};function t(n){if(e[n]!==void 0)return e[n];let s;switch(n){case"WEBGL_depth_texture":s=i.getExtension("WEBGL_depth_texture")||i.getExtension("MOZ_WEBGL_depth_texture")||i.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":s=i.getExtension("EXT_texture_filter_anisotropic")||i.getExtension("MOZ_EXT_texture_filter_anisotropic")||i.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":s=i.getExtension("WEBGL_compressed_texture_s3tc")||i.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":s=i.getExtension("WEBGL_compressed_texture_pvrtc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:s=i.getExtension(n)}return e[n]=s,s}return{has:function(n){return t(n)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(n){const s=t(n);return s===null&&xd("THREE.WebGLRenderer: "+n+" extension not supported."),s}}}function A6(i,e,t,n){const s={},r=new WeakMap;function o(h){const d=h.target;d.index!==null&&e.remove(d.index);for(const m in d.attributes)e.remove(d.attributes[m]);for(const m in d.morphAttributes){const _=d.morphAttributes[m];for(let g=0,p=_.length;g<p;g++)e.remove(_[g])}d.removeEventListener("dispose",o),delete s[d.id];const f=r.get(d);f&&(e.remove(f),r.delete(d)),n.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,t.memory.geometries--}function a(h,d){return s[d.id]===!0||(d.addEventListener("dispose",o),s[d.id]=!0,t.memory.geometries++),d}function c(h){const d=h.attributes;for(const m in d)e.update(d[m],i.ARRAY_BUFFER);const f=h.morphAttributes;for(const m in f){const _=f[m];for(let g=0,p=_.length;g<p;g++)e.update(_[g],i.ARRAY_BUFFER)}}function l(h){const d=[],f=h.index,m=h.attributes.position;let _=0;if(f!==null){const y=f.array;_=f.version;for(let x=0,v=y.length;x<v;x+=3){const S=y[x+0],M=y[x+1],E=y[x+2];d.push(S,M,M,E,E,S)}}else if(m!==void 0){const y=m.array;_=m.version;for(let x=0,v=y.length/3-1;x<v;x+=3){const S=x+0,M=x+1,E=x+2;d.push(S,M,M,E,E,S)}}else return;const g=new(BN(d)?qN:$N)(d,1);g.version=_;const p=r.get(h);p&&e.remove(p),r.set(h,g)}function u(h){const d=r.get(h);if(d){const f=h.index;f!==null&&d.version<f.version&&l(h)}else l(h);return r.get(h)}return{get:a,update:c,getWireframeAttribute:u}}function C6(i,e,t){let n;function s(d){n=d}let r,o;function a(d){r=d.type,o=d.bytesPerElement}function c(d,f){i.drawElements(n,f,r,d*o),t.update(f,n,1)}function l(d,f,m){m!==0&&(i.drawElementsInstanced(n,f,r,d*o,m),t.update(f,n,m))}function u(d,f,m){if(m===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,f,0,r,d,0,m);let g=0;for(let p=0;p<m;p++)g+=f[p];t.update(g,n,1)}function h(d,f,m,_){if(m===0)return;const g=e.get("WEBGL_multi_draw");if(g===null)for(let p=0;p<d.length;p++)l(d[p]/o,f[p],_[p]);else{g.multiDrawElementsInstancedWEBGL(n,f,0,r,d,0,_,0,m);let p=0;for(let y=0;y<m;y++)p+=f[y]*_[y];t.update(p,n,1)}}this.setMode=s,this.setIndex=a,this.render=c,this.renderInstances=l,this.renderMultiDraw=u,this.renderMultiDrawInstances=h}function R6(i){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,o,a){switch(t.calls++,o){case i.TRIANGLES:t.triangles+=a*(r/3);break;case i.LINES:t.lines+=a*(r/2);break;case i.LINE_STRIP:t.lines+=a*(r-1);break;case i.LINE_LOOP:t.lines+=a*r;break;case i.POINTS:t.points+=a*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function s(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:s,update:n}}function N6(i,e,t){const n=new WeakMap,s=new Bn;function r(o,a,c){const l=o.morphTargetInfluences,u=a.morphAttributes.position||a.morphAttributes.normal||a.morphAttributes.color,h=u!==void 0?u.length:0;let d=n.get(a);if(d===void 0||d.count!==h){let T=function(){w.dispose(),n.delete(a),a.removeEventListener("dispose",T)};var f=T;d!==void 0&&d.texture.dispose();const m=a.morphAttributes.position!==void 0,_=a.morphAttributes.normal!==void 0,g=a.morphAttributes.color!==void 0,p=a.morphAttributes.position||[],y=a.morphAttributes.normal||[],x=a.morphAttributes.color||[];let v=0;m===!0&&(v=1),_===!0&&(v=2),g===!0&&(v=3);let S=a.attributes.position.count*v,M=1;S>e.maxTextureSize&&(M=Math.ceil(S/e.maxTextureSize),S=e.maxTextureSize);const E=new Float32Array(S*M*4*h),w=new GN(E,S,M,h);w.type=No,w.needsUpdate=!0;const b=v*4;for(let C=0;C<h;C++){const D=p[C],P=y[C],N=x[C],L=S*M*4*C;for(let U=0;U<D.count;U++){const B=U*b;m===!0&&(s.fromBufferAttribute(D,U),E[L+B+0]=s.x,E[L+B+1]=s.y,E[L+B+2]=s.z,E[L+B+3]=0),_===!0&&(s.fromBufferAttribute(P,U),E[L+B+4]=s.x,E[L+B+5]=s.y,E[L+B+6]=s.z,E[L+B+7]=0),g===!0&&(s.fromBufferAttribute(N,U),E[L+B+8]=s.x,E[L+B+9]=s.y,E[L+B+10]=s.z,E[L+B+11]=N.itemSize===4?s.w:1)}}d={count:h,texture:w,size:new lt(S,M)},n.set(a,d),a.addEventListener("dispose",T)}if(o.isInstancedMesh===!0&&o.morphTexture!==null)c.getUniforms().setValue(i,"morphTexture",o.morphTexture,t);else{let m=0;for(let g=0;g<l.length;g++)m+=l[g];const _=a.morphTargetsRelative?1:1-m;c.getUniforms().setValue(i,"morphTargetBaseInfluence",_),c.getUniforms().setValue(i,"morphTargetInfluences",l)}c.getUniforms().setValue(i,"morphTargetsTexture",d.texture,t),c.getUniforms().setValue(i,"morphTargetsTextureSize",d.size)}return{update:r}}function P6(i,e,t,n){let s=new WeakMap;function r(c){const l=n.render.frame,u=c.geometry,h=e.get(c,u);if(s.get(h)!==l&&(e.update(h),s.set(h,l)),c.isInstancedMesh&&(c.hasEventListener("dispose",a)===!1&&c.addEventListener("dispose",a),s.get(c)!==l&&(t.update(c.instanceMatrix,i.ARRAY_BUFFER),c.instanceColor!==null&&t.update(c.instanceColor,i.ARRAY_BUFFER),s.set(c,l))),c.isSkinnedMesh){const d=c.skeleton;s.get(d)!==l&&(d.update(),s.set(d,l))}return h}function o(){s=new WeakMap}function a(c){const l=c.target;l.removeEventListener("dispose",a),t.remove(l.instanceMatrix),l.instanceColor!==null&&t.remove(l.instanceColor)}return{update:r,dispose:o}}let eP=class extends Sr{constructor(e,t,n,s,r,o,a,c,l,u=Fu){if(u!==Fu&&u!==rh)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&u===Fu&&(n=Jc),n===void 0&&u===rh&&(n=sh),super(null,s,r,o,a,c,u,n,l),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=a!==void 0?a:hr,this.minFilter=c!==void 0?c:hr,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}};const tP=new Sr,pw=new eP(1,1),nP=new GN,iP=new vW,sP=new QN,mw=[],gw=[],_w=new Float32Array(16),vw=new Float32Array(9),xw=new Float32Array(4);function Ph(i,e,t){const n=i[0];if(n<=0||n>0)return i;const s=e*t;let r=mw[s];if(r===void 0&&(r=new Float32Array(s),mw[s]=r),e!==0){n.toArray(r,0);for(let o=1,a=0;o!==e;++o)a+=t,i[o].toArray(r,a)}return r}function Yn(i,e){if(i.length!==e.length)return!1;for(let t=0,n=i.length;t<n;t++)if(i[t]!==e[t])return!1;return!0}function Zn(i,e){for(let t=0,n=e.length;t<n;t++)i[t]=e[t]}function v_(i,e){let t=gw[e];t===void 0&&(t=new Int32Array(e),gw[e]=t);for(let n=0;n!==e;++n)t[n]=i.allocateTextureUnit();return t}function D6(i,e){const t=this.cache;t[0]!==e&&(i.uniform1f(this.addr,e),t[0]=e)}function L6(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Yn(t,e))return;i.uniform2fv(this.addr,e),Zn(t,e)}}function I6(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(i.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(Yn(t,e))return;i.uniform3fv(this.addr,e),Zn(t,e)}}function F6(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Yn(t,e))return;i.uniform4fv(this.addr,e),Zn(t,e)}}function U6(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(Yn(t,e))return;i.uniformMatrix2fv(this.addr,!1,e),Zn(t,e)}else{if(Yn(t,n))return;xw.set(n),i.uniformMatrix2fv(this.addr,!1,xw),Zn(t,n)}}function O6(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(Yn(t,e))return;i.uniformMatrix3fv(this.addr,!1,e),Zn(t,e)}else{if(Yn(t,n))return;vw.set(n),i.uniformMatrix3fv(this.addr,!1,vw),Zn(t,n)}}function B6(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(Yn(t,e))return;i.uniformMatrix4fv(this.addr,!1,e),Zn(t,e)}else{if(Yn(t,n))return;_w.set(n),i.uniformMatrix4fv(this.addr,!1,_w),Zn(t,n)}}function k6(i,e){const t=this.cache;t[0]!==e&&(i.uniform1i(this.addr,e),t[0]=e)}function z6(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Yn(t,e))return;i.uniform2iv(this.addr,e),Zn(t,e)}}function G6(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Yn(t,e))return;i.uniform3iv(this.addr,e),Zn(t,e)}}function V6(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Yn(t,e))return;i.uniform4iv(this.addr,e),Zn(t,e)}}function H6(i,e){const t=this.cache;t[0]!==e&&(i.uniform1ui(this.addr,e),t[0]=e)}function W6(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Yn(t,e))return;i.uniform2uiv(this.addr,e),Zn(t,e)}}function $6(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Yn(t,e))return;i.uniform3uiv(this.addr,e),Zn(t,e)}}function q6(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Yn(t,e))return;i.uniform4uiv(this.addr,e),Zn(t,e)}}function X6(i,e,t){const n=this.cache,s=t.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s);let r;this.type===i.SAMPLER_2D_SHADOW?(pw.compareFunction=FN,r=pw):r=tP,t.setTexture2D(e||r,s)}function j6(i,e,t){const n=this.cache,s=t.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s),t.setTexture3D(e||iP,s)}function Y6(i,e,t){const n=this.cache,s=t.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s),t.setTextureCube(e||sP,s)}function Z6(i,e,t){const n=this.cache,s=t.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s),t.setTexture2DArray(e||nP,s)}function K6(i){switch(i){case 5126:return D6;case 35664:return L6;case 35665:return I6;case 35666:return F6;case 35674:return U6;case 35675:return O6;case 35676:return B6;case 5124:case 35670:return k6;case 35667:case 35671:return z6;case 35668:case 35672:return G6;case 35669:case 35673:return V6;case 5125:return H6;case 36294:return W6;case 36295:return $6;case 36296:return q6;case 35678:case 36198:case 36298:case 36306:case 35682:return X6;case 35679:case 36299:case 36307:return j6;case 35680:case 36300:case 36308:case 36293:return Y6;case 36289:case 36303:case 36311:case 36292:return Z6}}function Q6(i,e){i.uniform1fv(this.addr,e)}function J6(i,e){const t=Ph(e,this.size,2);i.uniform2fv(this.addr,t)}function eq(i,e){const t=Ph(e,this.size,3);i.uniform3fv(this.addr,t)}function tq(i,e){const t=Ph(e,this.size,4);i.uniform4fv(this.addr,t)}function nq(i,e){const t=Ph(e,this.size,4);i.uniformMatrix2fv(this.addr,!1,t)}function iq(i,e){const t=Ph(e,this.size,9);i.uniformMatrix3fv(this.addr,!1,t)}function sq(i,e){const t=Ph(e,this.size,16);i.uniformMatrix4fv(this.addr,!1,t)}function rq(i,e){i.uniform1iv(this.addr,e)}function oq(i,e){i.uniform2iv(this.addr,e)}function aq(i,e){i.uniform3iv(this.addr,e)}function cq(i,e){i.uniform4iv(this.addr,e)}function lq(i,e){i.uniform1uiv(this.addr,e)}function uq(i,e){i.uniform2uiv(this.addr,e)}function hq(i,e){i.uniform3uiv(this.addr,e)}function dq(i,e){i.uniform4uiv(this.addr,e)}function fq(i,e,t){const n=this.cache,s=e.length,r=v_(t,s);Yn(n,r)||(i.uniform1iv(this.addr,r),Zn(n,r));for(let o=0;o!==s;++o)t.setTexture2D(e[o]||tP,r[o])}function pq(i,e,t){const n=this.cache,s=e.length,r=v_(t,s);Yn(n,r)||(i.uniform1iv(this.addr,r),Zn(n,r));for(let o=0;o!==s;++o)t.setTexture3D(e[o]||iP,r[o])}function mq(i,e,t){const n=this.cache,s=e.length,r=v_(t,s);Yn(n,r)||(i.uniform1iv(this.addr,r),Zn(n,r));for(let o=0;o!==s;++o)t.setTextureCube(e[o]||sP,r[o])}function gq(i,e,t){const n=this.cache,s=e.length,r=v_(t,s);Yn(n,r)||(i.uniform1iv(this.addr,r),Zn(n,r));for(let o=0;o!==s;++o)t.setTexture2DArray(e[o]||nP,r[o])}function _q(i){switch(i){case 5126:return Q6;case 35664:return J6;case 35665:return eq;case 35666:return tq;case 35674:return nq;case 35675:return iq;case 35676:return sq;case 5124:case 35670:return rq;case 35667:case 35671:return oq;case 35668:case 35672:return aq;case 35669:case 35673:return cq;case 5125:return lq;case 36294:return uq;case 36295:return hq;case 36296:return dq;case 35678:case 36198:case 36298:case 36306:case 35682:return fq;case 35679:case 36299:case 36307:return pq;case 35680:case 36300:case 36308:case 36293:return mq;case 36289:case 36303:case 36311:case 36292:return gq}}class vq{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=K6(t.type)}}class xq{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=_q(t.type)}}class yq{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const s=this.seq;for(let r=0,o=s.length;r!==o;++r){const a=s[r];a.setValue(e,t[a.id],n)}}}const Y0=/(\w+)(\])?(\[|\.)?/g;function yw(i,e){i.seq.push(e),i.map[e.id]=e}function Sq(i,e,t){const n=i.name,s=n.length;for(Y0.lastIndex=0;;){const r=Y0.exec(n),o=Y0.lastIndex;let a=r[1];const c=r[2]==="]",l=r[3];if(c&&(a=a|0),l===void 0||l==="["&&o+2===s){yw(t,l===void 0?new vq(a,i,e):new xq(a,i,e));break}else{let h=t.map[a];h===void 0&&(h=new yq(a),yw(t,h)),t=h}}}class Wm{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let s=0;s<n;++s){const r=e.getActiveUniform(t,s),o=e.getUniformLocation(t,r.name);Sq(r,o,this)}}setValue(e,t,n,s){const r=this.map[t];r!==void 0&&r.setValue(e,n,s)}setOptional(e,t,n){const s=t[n];s!==void 0&&this.setValue(e,n,s)}static upload(e,t,n,s){for(let r=0,o=t.length;r!==o;++r){const a=t[r],c=n[a.id];c.needsUpdate!==!1&&a.setValue(e,c.value,s)}}static seqWithValue(e,t){const n=[];for(let s=0,r=e.length;s!==r;++s){const o=e[s];o.id in t&&n.push(o)}return n}}function Sw(i,e,t){const n=i.createShader(e);return i.shaderSource(n,t),i.compileShader(n),n}const bq=37297;let Mq=0;function Tq(i,e){const t=i.split(`
`),n=[],s=Math.max(e-6,0),r=Math.min(e+6,t.length);for(let o=s;o<r;o++){const a=o+1;n.push(`${a===e?">":" "} ${a}: ${t[o]}`)}return n.join(`
`)}const bw=new Nt;function Eq(i){zt._getMatrix(bw,zt.workingColorSpace,i);const e=`mat3( ${bw.elements.map(t=>t.toFixed(4))} )`;switch(zt.getTransfer(i)){case m_:return[e,"LinearTransferOETF"];case Jt:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",i),[e,"LinearTransferOETF"]}}function Mw(i,e,t){const n=i.getShaderParameter(e,i.COMPILE_STATUS),s=i.getShaderInfoLog(e).trim();if(n&&s==="")return"";const r=/ERROR: 0:(\d+)/.exec(s);if(r){const o=parseInt(r[1]);return t.toUpperCase()+`

`+s+`

`+Tq(i.getShaderSource(e),o)}else return s}function wq(i,e){const t=Eq(e);return[`vec4 ${i}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function Aq(i,e){let t;switch(e){case R5:t="Linear";break;case N5:t="Reinhard";break;case P5:t="Cineon";break;case D5:t="ACESFilmic";break;case I5:t="AgX";break;case F5:t="Neutral";break;case L5:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+i+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const Vp=new he;function Cq(){zt.getLuminanceCoefficients(Vp);const i=Vp.x.toFixed(4),e=Vp.y.toFixed(4),t=Vp.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${i}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function Rq(i){return[i.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",i.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(yd).join(`
`)}function Nq(i){const e=[];for(const t in i){const n=i[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function Pq(i,e){const t={},n=i.getProgramParameter(e,i.ACTIVE_ATTRIBUTES);for(let s=0;s<n;s++){const r=i.getActiveAttrib(e,s),o=r.name;let a=1;r.type===i.FLOAT_MAT2&&(a=2),r.type===i.FLOAT_MAT3&&(a=3),r.type===i.FLOAT_MAT4&&(a=4),t[o]={type:r.type,location:i.getAttribLocation(e,o),locationSize:a}}return t}function yd(i){return i!==""}function Tw(i,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return i.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Ew(i,e){return i.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Dq=/^[ \t]*#include +<([\w\d./]+)>/gm;function Cy(i){return i.replace(Dq,Iq)}const Lq=new Map;function Iq(i,e){let t=Tt[e];if(t===void 0){const n=Lq.get(e);if(n!==void 0)t=Tt[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return Cy(t)}const Fq=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function ww(i){return i.replace(Fq,Uq)}function Uq(i,e,t,n){let s="";for(let r=parseInt(e);r<parseInt(t);r++)s+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return s}function Aw(i){let e=`precision ${i.precision} float;
	precision ${i.precision} int;
	precision ${i.precision} sampler2D;
	precision ${i.precision} samplerCube;
	precision ${i.precision} sampler3D;
	precision ${i.precision} sampler2DArray;
	precision ${i.precision} sampler2DShadow;
	precision ${i.precision} samplerCubeShadow;
	precision ${i.precision} sampler2DArrayShadow;
	precision ${i.precision} isampler2D;
	precision ${i.precision} isampler3D;
	precision ${i.precision} isamplerCube;
	precision ${i.precision} isampler2DArray;
	precision ${i.precision} usampler2D;
	precision ${i.precision} usampler3D;
	precision ${i.precision} usamplerCube;
	precision ${i.precision} usampler2DArray;
	`;return i.precision==="highp"?e+=`
#define HIGH_PRECISION`:i.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:i.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function Oq(i){let e="SHADOWMAP_TYPE_BASIC";return i.shadowMapType===bN?e="SHADOWMAP_TYPE_PCF":i.shadowMapType===c5?e="SHADOWMAP_TYPE_PCF_SOFT":i.shadowMapType===go&&(e="SHADOWMAP_TYPE_VSM"),e}function Bq(i){let e="ENVMAP_TYPE_CUBE";if(i.envMap)switch(i.envMapMode){case nh:case ih:e="ENVMAP_TYPE_CUBE";break;case p_:e="ENVMAP_TYPE_CUBE_UV";break}return e}function kq(i){let e="ENVMAP_MODE_REFLECTION";if(i.envMap)switch(i.envMapMode){case ih:e="ENVMAP_MODE_REFRACTION";break}return e}function zq(i){let e="ENVMAP_BLENDING_NONE";if(i.envMap)switch(i.combine){case MN:e="ENVMAP_BLENDING_MULTIPLY";break;case A5:e="ENVMAP_BLENDING_MIX";break;case C5:e="ENVMAP_BLENDING_ADD";break}return e}function Gq(i){const e=i.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function Vq(i,e,t,n){const s=i.getContext(),r=t.defines;let o=t.vertexShader,a=t.fragmentShader;const c=Oq(t),l=Bq(t),u=kq(t),h=zq(t),d=Gq(t),f=Rq(t),m=Nq(r),_=s.createProgram();let g,p,y=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(g=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,m].filter(yd).join(`
`),g.length>0&&(g+=`
`),p=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,m].filter(yd).join(`
`),p.length>0&&(p+=`
`)):(g=[Aw(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,m,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(yd).join(`
`),p=[Aw(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,m,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+l:"",t.envMap?"#define "+u:"",t.envMap?"#define "+h:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Ia?"#define TONE_MAPPING":"",t.toneMapping!==Ia?Tt.tonemapping_pars_fragment:"",t.toneMapping!==Ia?Aq("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",Tt.colorspace_pars_fragment,wq("linearToOutputTexel",t.outputColorSpace),Cq(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(yd).join(`
`)),o=Cy(o),o=Tw(o,t),o=Ew(o,t),a=Cy(a),a=Tw(a,t),a=Ew(a,t),o=ww(o),a=ww(a),t.isRawShaderMaterial!==!0&&(y=`#version 300 es
`,g=[f,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+g,p=["#define varying in",t.glslVersion===kE?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===kE?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+p);const x=y+g+o,v=y+p+a,S=Sw(s,s.VERTEX_SHADER,x),M=Sw(s,s.FRAGMENT_SHADER,v);s.attachShader(_,S),s.attachShader(_,M),t.index0AttributeName!==void 0?s.bindAttribLocation(_,0,t.index0AttributeName):t.morphTargets===!0&&s.bindAttribLocation(_,0,"position"),s.linkProgram(_);function E(C){if(i.debug.checkShaderErrors){const D=s.getProgramInfoLog(_).trim(),P=s.getShaderInfoLog(S).trim(),N=s.getShaderInfoLog(M).trim();let L=!0,U=!0;if(s.getProgramParameter(_,s.LINK_STATUS)===!1)if(L=!1,typeof i.debug.onShaderError=="function")i.debug.onShaderError(s,_,S,M);else{const B=Mw(s,S,"vertex"),k=Mw(s,M,"fragment");console.error("THREE.WebGLProgram: Shader Error "+s.getError()+" - VALIDATE_STATUS "+s.getProgramParameter(_,s.VALIDATE_STATUS)+`

Material Name: `+C.name+`
Material Type: `+C.type+`

Program Info Log: `+D+`
`+B+`
`+k)}else D!==""?console.warn("THREE.WebGLProgram: Program Info Log:",D):(P===""||N==="")&&(U=!1);U&&(C.diagnostics={runnable:L,programLog:D,vertexShader:{log:P,prefix:g},fragmentShader:{log:N,prefix:p}})}s.deleteShader(S),s.deleteShader(M),w=new Wm(s,_),b=Pq(s,_)}let w;this.getUniforms=function(){return w===void 0&&E(this),w};let b;this.getAttributes=function(){return b===void 0&&E(this),b};let T=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return T===!1&&(T=s.getProgramParameter(_,bq)),T},this.destroy=function(){n.releaseStatesOfProgram(this),s.deleteProgram(_),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=Mq++,this.cacheKey=e,this.usedTimes=1,this.program=_,this.vertexShader=S,this.fragmentShader=M,this}let Hq=0;class Wq{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,s=this._getShaderStage(t),r=this._getShaderStage(n),o=this._getShaderCacheForMaterial(e);return o.has(s)===!1&&(o.add(s),s.usedTimes++),o.has(r)===!1&&(o.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new $q(e),t.set(e,n)),n}}class $q{constructor(e){this.id=Hq++,this.code=e,this.usedTimes=0}}function qq(i,e,t,n,s,r,o){const a=new Ab,c=new Wq,l=new Set,u=[],h=s.logarithmicDepthBuffer,d=s.vertexTextures;let f=s.precision;const m={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function _(b){return l.add(b),b===0?"uv":`uv${b}`}function g(b,T,C,D,P){const N=D.fog,L=P.geometry,U=b.isMeshStandardMaterial?D.environment:null,B=(b.isMeshStandardMaterial?t:e).get(b.envMap||U),k=B&&B.mapping===p_?B.image.height:null,$=m[b.type];b.precision!==null&&(f=s.getMaxPrecision(b.precision),f!==b.precision&&console.warn("THREE.WebGLProgram.getParameters:",b.precision,"not supported, using",f,"instead."));const z=L.morphAttributes.position||L.morphAttributes.normal||L.morphAttributes.color,Y=z!==void 0?z.length:0;let ne=0;L.morphAttributes.position!==void 0&&(ne=1),L.morphAttributes.normal!==void 0&&(ne=2),L.morphAttributes.color!==void 0&&(ne=3);let te,V,H,Q;if($){const dt=wr[$];te=dt.vertexShader,V=dt.fragmentShader}else te=b.vertexShader,V=b.fragmentShader,c.update(b),H=c.getVertexShaderID(b),Q=c.getFragmentShaderID(b);const O=i.getRenderTarget(),oe=i.state.buffers.depth.getReversed(),Ne=P.isInstancedMesh===!0,_e=P.isBatchedMesh===!0,Fe=!!b.map,Xe=!!b.matcap,$e=!!B,j=!!b.aoMap,Ie=!!b.lightMap,De=!!b.bumpMap,qe=!!b.normalMap,Be=!!b.displacementMap,He=!!b.emissiveMap,ze=!!b.metalnessMap,G=!!b.roughnessMap,A=b.anisotropy>0,R=b.clearcoat>0,q=b.dispersion>0,ie=b.iridescence>0,J=b.sheen>0,xe=b.transmission>0,Ce=A&&!!b.anisotropyMap,ye=R&&!!b.clearcoatMap,me=R&&!!b.clearcoatNormalMap,ge=R&&!!b.clearcoatRoughnessMap,Re=ie&&!!b.iridescenceMap,Ue=ie&&!!b.iridescenceThicknessMap,Le=J&&!!b.sheenColorMap,Ee=J&&!!b.sheenRoughnessMap,tt=!!b.specularMap,nt=!!b.specularColorMap,mt=!!b.specularIntensityMap,I=xe&&!!b.transmissionMap,ee=xe&&!!b.thicknessMap,X=!!b.gradientMap,le=!!b.alphaMap,Se=b.alphaTest>0,Oe=!!b.alphaHash,it=!!b.extensions;let Ct=Ia;b.toneMapped&&(O===null||O.isXRRenderTarget===!0)&&(Ct=i.toneMapping);const an={shaderID:$,shaderType:b.type,shaderName:b.name,vertexShader:te,fragmentShader:V,defines:b.defines,customVertexShaderID:H,customFragmentShaderID:Q,isRawShaderMaterial:b.isRawShaderMaterial===!0,glslVersion:b.glslVersion,precision:f,batching:_e,batchingColor:_e&&P._colorsTexture!==null,instancing:Ne,instancingColor:Ne&&P.instanceColor!==null,instancingMorph:Ne&&P.morphTexture!==null,supportsVertexTextures:d,outputColorSpace:O===null?i.outputColorSpace:O.isXRRenderTarget===!0?O.texture.colorSpace:Ch,alphaToCoverage:!!b.alphaToCoverage,map:Fe,matcap:Xe,envMap:$e,envMapMode:$e&&B.mapping,envMapCubeUVHeight:k,aoMap:j,lightMap:Ie,bumpMap:De,normalMap:qe,displacementMap:d&&Be,emissiveMap:He,normalMapObjectSpace:qe&&b.normalMapType===z5,normalMapTangentSpace:qe&&b.normalMapType===k5,metalnessMap:ze,roughnessMap:G,anisotropy:A,anisotropyMap:Ce,clearcoat:R,clearcoatMap:ye,clearcoatNormalMap:me,clearcoatRoughnessMap:ge,dispersion:q,iridescence:ie,iridescenceMap:Re,iridescenceThicknessMap:Ue,sheen:J,sheenColorMap:Le,sheenRoughnessMap:Ee,specularMap:tt,specularColorMap:nt,specularIntensityMap:mt,transmission:xe,transmissionMap:I,thicknessMap:ee,gradientMap:X,opaque:b.transparent===!1&&b.blending===Iu&&b.alphaToCoverage===!1,alphaMap:le,alphaTest:Se,alphaHash:Oe,combine:b.combine,mapUv:Fe&&_(b.map.channel),aoMapUv:j&&_(b.aoMap.channel),lightMapUv:Ie&&_(b.lightMap.channel),bumpMapUv:De&&_(b.bumpMap.channel),normalMapUv:qe&&_(b.normalMap.channel),displacementMapUv:Be&&_(b.displacementMap.channel),emissiveMapUv:He&&_(b.emissiveMap.channel),metalnessMapUv:ze&&_(b.metalnessMap.channel),roughnessMapUv:G&&_(b.roughnessMap.channel),anisotropyMapUv:Ce&&_(b.anisotropyMap.channel),clearcoatMapUv:ye&&_(b.clearcoatMap.channel),clearcoatNormalMapUv:me&&_(b.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:ge&&_(b.clearcoatRoughnessMap.channel),iridescenceMapUv:Re&&_(b.iridescenceMap.channel),iridescenceThicknessMapUv:Ue&&_(b.iridescenceThicknessMap.channel),sheenColorMapUv:Le&&_(b.sheenColorMap.channel),sheenRoughnessMapUv:Ee&&_(b.sheenRoughnessMap.channel),specularMapUv:tt&&_(b.specularMap.channel),specularColorMapUv:nt&&_(b.specularColorMap.channel),specularIntensityMapUv:mt&&_(b.specularIntensityMap.channel),transmissionMapUv:I&&_(b.transmissionMap.channel),thicknessMapUv:ee&&_(b.thicknessMap.channel),alphaMapUv:le&&_(b.alphaMap.channel),vertexTangents:!!L.attributes.tangent&&(qe||A),vertexColors:b.vertexColors,vertexAlphas:b.vertexColors===!0&&!!L.attributes.color&&L.attributes.color.itemSize===4,pointsUvs:P.isPoints===!0&&!!L.attributes.uv&&(Fe||le),fog:!!N,useFog:b.fog===!0,fogExp2:!!N&&N.isFogExp2,flatShading:b.flatShading===!0,sizeAttenuation:b.sizeAttenuation===!0,logarithmicDepthBuffer:h,reverseDepthBuffer:oe,skinning:P.isSkinnedMesh===!0,morphTargets:L.morphAttributes.position!==void 0,morphNormals:L.morphAttributes.normal!==void 0,morphColors:L.morphAttributes.color!==void 0,morphTargetsCount:Y,morphTextureStride:ne,numDirLights:T.directional.length,numPointLights:T.point.length,numSpotLights:T.spot.length,numSpotLightMaps:T.spotLightMap.length,numRectAreaLights:T.rectArea.length,numHemiLights:T.hemi.length,numDirLightShadows:T.directionalShadowMap.length,numPointLightShadows:T.pointShadowMap.length,numSpotLightShadows:T.spotShadowMap.length,numSpotLightShadowsWithMaps:T.numSpotLightShadowsWithMaps,numLightProbes:T.numLightProbes,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:b.dithering,shadowMapEnabled:i.shadowMap.enabled&&C.length>0,shadowMapType:i.shadowMap.type,toneMapping:Ct,decodeVideoTexture:Fe&&b.map.isVideoTexture===!0&&zt.getTransfer(b.map.colorSpace)===Jt,decodeVideoTextureEmissive:He&&b.emissiveMap.isVideoTexture===!0&&zt.getTransfer(b.emissiveMap.colorSpace)===Jt,premultipliedAlpha:b.premultipliedAlpha,doubleSided:b.side===To,flipSided:b.side===Fi,useDepthPacking:b.depthPacking>=0,depthPacking:b.depthPacking||0,index0AttributeName:b.index0AttributeName,extensionClipCullDistance:it&&b.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(it&&b.extensions.multiDraw===!0||_e)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:b.customProgramCacheKey()};return an.vertexUv1s=l.has(1),an.vertexUv2s=l.has(2),an.vertexUv3s=l.has(3),l.clear(),an}function p(b){const T=[];if(b.shaderID?T.push(b.shaderID):(T.push(b.customVertexShaderID),T.push(b.customFragmentShaderID)),b.defines!==void 0)for(const C in b.defines)T.push(C),T.push(b.defines[C]);return b.isRawShaderMaterial===!1&&(y(T,b),x(T,b),T.push(i.outputColorSpace)),T.push(b.customProgramCacheKey),T.join()}function y(b,T){b.push(T.precision),b.push(T.outputColorSpace),b.push(T.envMapMode),b.push(T.envMapCubeUVHeight),b.push(T.mapUv),b.push(T.alphaMapUv),b.push(T.lightMapUv),b.push(T.aoMapUv),b.push(T.bumpMapUv),b.push(T.normalMapUv),b.push(T.displacementMapUv),b.push(T.emissiveMapUv),b.push(T.metalnessMapUv),b.push(T.roughnessMapUv),b.push(T.anisotropyMapUv),b.push(T.clearcoatMapUv),b.push(T.clearcoatNormalMapUv),b.push(T.clearcoatRoughnessMapUv),b.push(T.iridescenceMapUv),b.push(T.iridescenceThicknessMapUv),b.push(T.sheenColorMapUv),b.push(T.sheenRoughnessMapUv),b.push(T.specularMapUv),b.push(T.specularColorMapUv),b.push(T.specularIntensityMapUv),b.push(T.transmissionMapUv),b.push(T.thicknessMapUv),b.push(T.combine),b.push(T.fogExp2),b.push(T.sizeAttenuation),b.push(T.morphTargetsCount),b.push(T.morphAttributeCount),b.push(T.numDirLights),b.push(T.numPointLights),b.push(T.numSpotLights),b.push(T.numSpotLightMaps),b.push(T.numHemiLights),b.push(T.numRectAreaLights),b.push(T.numDirLightShadows),b.push(T.numPointLightShadows),b.push(T.numSpotLightShadows),b.push(T.numSpotLightShadowsWithMaps),b.push(T.numLightProbes),b.push(T.shadowMapType),b.push(T.toneMapping),b.push(T.numClippingPlanes),b.push(T.numClipIntersection),b.push(T.depthPacking)}function x(b,T){a.disableAll(),T.supportsVertexTextures&&a.enable(0),T.instancing&&a.enable(1),T.instancingColor&&a.enable(2),T.instancingMorph&&a.enable(3),T.matcap&&a.enable(4),T.envMap&&a.enable(5),T.normalMapObjectSpace&&a.enable(6),T.normalMapTangentSpace&&a.enable(7),T.clearcoat&&a.enable(8),T.iridescence&&a.enable(9),T.alphaTest&&a.enable(10),T.vertexColors&&a.enable(11),T.vertexAlphas&&a.enable(12),T.vertexUv1s&&a.enable(13),T.vertexUv2s&&a.enable(14),T.vertexUv3s&&a.enable(15),T.vertexTangents&&a.enable(16),T.anisotropy&&a.enable(17),T.alphaHash&&a.enable(18),T.batching&&a.enable(19),T.dispersion&&a.enable(20),T.batchingColor&&a.enable(21),b.push(a.mask),a.disableAll(),T.fog&&a.enable(0),T.useFog&&a.enable(1),T.flatShading&&a.enable(2),T.logarithmicDepthBuffer&&a.enable(3),T.reverseDepthBuffer&&a.enable(4),T.skinning&&a.enable(5),T.morphTargets&&a.enable(6),T.morphNormals&&a.enable(7),T.morphColors&&a.enable(8),T.premultipliedAlpha&&a.enable(9),T.shadowMapEnabled&&a.enable(10),T.doubleSided&&a.enable(11),T.flipSided&&a.enable(12),T.useDepthPacking&&a.enable(13),T.dithering&&a.enable(14),T.transmission&&a.enable(15),T.sheen&&a.enable(16),T.opaque&&a.enable(17),T.pointsUvs&&a.enable(18),T.decodeVideoTexture&&a.enable(19),T.decodeVideoTextureEmissive&&a.enable(20),T.alphaToCoverage&&a.enable(21),b.push(a.mask)}function v(b){const T=m[b.type];let C;if(T){const D=wr[T];C=ZN.clone(D.uniforms)}else C=b.uniforms;return C}function S(b,T){let C;for(let D=0,P=u.length;D<P;D++){const N=u[D];if(N.cacheKey===T){C=N,++C.usedTimes;break}}return C===void 0&&(C=new Vq(i,T,b,r),u.push(C)),C}function M(b){if(--b.usedTimes===0){const T=u.indexOf(b);u[T]=u[u.length-1],u.pop(),b.destroy()}}function E(b){c.remove(b)}function w(){c.dispose()}return{getParameters:g,getProgramCacheKey:p,getUniforms:v,acquireProgram:S,releaseProgram:M,releaseShaderCache:E,programs:u,dispose:w}}function Xq(){let i=new WeakMap;function e(o){return i.has(o)}function t(o){let a=i.get(o);return a===void 0&&(a={},i.set(o,a)),a}function n(o){i.delete(o)}function s(o,a,c){i.get(o)[a]=c}function r(){i=new WeakMap}return{has:e,get:t,remove:n,update:s,dispose:r}}function jq(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.material.id!==e.material.id?i.material.id-e.material.id:i.z!==e.z?i.z-e.z:i.id-e.id}function Cw(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.z!==e.z?e.z-i.z:i.id-e.id}function Rw(){const i=[];let e=0;const t=[],n=[],s=[];function r(){e=0,t.length=0,n.length=0,s.length=0}function o(h,d,f,m,_,g){let p=i[e];return p===void 0?(p={id:h.id,object:h,geometry:d,material:f,groupOrder:m,renderOrder:h.renderOrder,z:_,group:g},i[e]=p):(p.id=h.id,p.object=h,p.geometry=d,p.material=f,p.groupOrder=m,p.renderOrder=h.renderOrder,p.z=_,p.group=g),e++,p}function a(h,d,f,m,_,g){const p=o(h,d,f,m,_,g);f.transmission>0?n.push(p):f.transparent===!0?s.push(p):t.push(p)}function c(h,d,f,m,_,g){const p=o(h,d,f,m,_,g);f.transmission>0?n.unshift(p):f.transparent===!0?s.unshift(p):t.unshift(p)}function l(h,d){t.length>1&&t.sort(h||jq),n.length>1&&n.sort(d||Cw),s.length>1&&s.sort(d||Cw)}function u(){for(let h=e,d=i.length;h<d;h++){const f=i[h];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:t,transmissive:n,transparent:s,init:r,push:a,unshift:c,finish:u,sort:l}}function Yq(){let i=new WeakMap;function e(n,s){const r=i.get(n);let o;return r===void 0?(o=new Rw,i.set(n,[o])):s>=r.length?(o=new Rw,r.push(o)):o=r[s],o}function t(){i=new WeakMap}return{get:e,dispose:t}}function Zq(){const i={};return{get:function(e){if(i[e.id]!==void 0)return i[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new he,color:new Xt};break;case"SpotLight":t={position:new he,direction:new he,color:new Xt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new he,color:new Xt,distance:0,decay:0};break;case"HemisphereLight":t={direction:new he,skyColor:new Xt,groundColor:new Xt};break;case"RectAreaLight":t={color:new Xt,position:new he,halfWidth:new he,halfHeight:new he};break}return i[e.id]=t,t}}}function Kq(){const i={};return{get:function(e){if(i[e.id]!==void 0)return i[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new lt};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new lt};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new lt,shadowCameraNear:1,shadowCameraFar:1e3};break}return i[e.id]=t,t}}}let Qq=0;function Jq(i,e){return(e.castShadow?2:0)-(i.castShadow?2:0)+(e.map?1:0)-(i.map?1:0)}function e9(i){const e=new Zq,t=Kq(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let l=0;l<9;l++)n.probe.push(new he);const s=new he,r=new Cn,o=new Cn;function a(l){let u=0,h=0,d=0;for(let b=0;b<9;b++)n.probe[b].set(0,0,0);let f=0,m=0,_=0,g=0,p=0,y=0,x=0,v=0,S=0,M=0,E=0;l.sort(Jq);for(let b=0,T=l.length;b<T;b++){const C=l[b],D=C.color,P=C.intensity,N=C.distance,L=C.shadow&&C.shadow.map?C.shadow.map.texture:null;if(C.isAmbientLight)u+=D.r*P,h+=D.g*P,d+=D.b*P;else if(C.isLightProbe){for(let U=0;U<9;U++)n.probe[U].addScaledVector(C.sh.coefficients[U],P);E++}else if(C.isDirectionalLight){const U=e.get(C);if(U.color.copy(C.color).multiplyScalar(C.intensity),C.castShadow){const B=C.shadow,k=t.get(C);k.shadowIntensity=B.intensity,k.shadowBias=B.bias,k.shadowNormalBias=B.normalBias,k.shadowRadius=B.radius,k.shadowMapSize=B.mapSize,n.directionalShadow[f]=k,n.directionalShadowMap[f]=L,n.directionalShadowMatrix[f]=C.shadow.matrix,y++}n.directional[f]=U,f++}else if(C.isSpotLight){const U=e.get(C);U.position.setFromMatrixPosition(C.matrixWorld),U.color.copy(D).multiplyScalar(P),U.distance=N,U.coneCos=Math.cos(C.angle),U.penumbraCos=Math.cos(C.angle*(1-C.penumbra)),U.decay=C.decay,n.spot[_]=U;const B=C.shadow;if(C.map&&(n.spotLightMap[S]=C.map,S++,B.updateMatrices(C),C.castShadow&&M++),n.spotLightMatrix[_]=B.matrix,C.castShadow){const k=t.get(C);k.shadowIntensity=B.intensity,k.shadowBias=B.bias,k.shadowNormalBias=B.normalBias,k.shadowRadius=B.radius,k.shadowMapSize=B.mapSize,n.spotShadow[_]=k,n.spotShadowMap[_]=L,v++}_++}else if(C.isRectAreaLight){const U=e.get(C);U.color.copy(D).multiplyScalar(P),U.halfWidth.set(C.width*.5,0,0),U.halfHeight.set(0,C.height*.5,0),n.rectArea[g]=U,g++}else if(C.isPointLight){const U=e.get(C);if(U.color.copy(C.color).multiplyScalar(C.intensity),U.distance=C.distance,U.decay=C.decay,C.castShadow){const B=C.shadow,k=t.get(C);k.shadowIntensity=B.intensity,k.shadowBias=B.bias,k.shadowNormalBias=B.normalBias,k.shadowRadius=B.radius,k.shadowMapSize=B.mapSize,k.shadowCameraNear=B.camera.near,k.shadowCameraFar=B.camera.far,n.pointShadow[m]=k,n.pointShadowMap[m]=L,n.pointShadowMatrix[m]=C.shadow.matrix,x++}n.point[m]=U,m++}else if(C.isHemisphereLight){const U=e.get(C);U.skyColor.copy(C.color).multiplyScalar(P),U.groundColor.copy(C.groundColor).multiplyScalar(P),n.hemi[p]=U,p++}}g>0&&(i.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=Qe.LTC_FLOAT_1,n.rectAreaLTC2=Qe.LTC_FLOAT_2):(n.rectAreaLTC1=Qe.LTC_HALF_1,n.rectAreaLTC2=Qe.LTC_HALF_2)),n.ambient[0]=u,n.ambient[1]=h,n.ambient[2]=d;const w=n.hash;(w.directionalLength!==f||w.pointLength!==m||w.spotLength!==_||w.rectAreaLength!==g||w.hemiLength!==p||w.numDirectionalShadows!==y||w.numPointShadows!==x||w.numSpotShadows!==v||w.numSpotMaps!==S||w.numLightProbes!==E)&&(n.directional.length=f,n.spot.length=_,n.rectArea.length=g,n.point.length=m,n.hemi.length=p,n.directionalShadow.length=y,n.directionalShadowMap.length=y,n.pointShadow.length=x,n.pointShadowMap.length=x,n.spotShadow.length=v,n.spotShadowMap.length=v,n.directionalShadowMatrix.length=y,n.pointShadowMatrix.length=x,n.spotLightMatrix.length=v+S-M,n.spotLightMap.length=S,n.numSpotLightShadowsWithMaps=M,n.numLightProbes=E,w.directionalLength=f,w.pointLength=m,w.spotLength=_,w.rectAreaLength=g,w.hemiLength=p,w.numDirectionalShadows=y,w.numPointShadows=x,w.numSpotShadows=v,w.numSpotMaps=S,w.numLightProbes=E,n.version=Qq++)}function c(l,u){let h=0,d=0,f=0,m=0,_=0;const g=u.matrixWorldInverse;for(let p=0,y=l.length;p<y;p++){const x=l[p];if(x.isDirectionalLight){const v=n.directional[h];v.direction.setFromMatrixPosition(x.matrixWorld),s.setFromMatrixPosition(x.target.matrixWorld),v.direction.sub(s),v.direction.transformDirection(g),h++}else if(x.isSpotLight){const v=n.spot[f];v.position.setFromMatrixPosition(x.matrixWorld),v.position.applyMatrix4(g),v.direction.setFromMatrixPosition(x.matrixWorld),s.setFromMatrixPosition(x.target.matrixWorld),v.direction.sub(s),v.direction.transformDirection(g),f++}else if(x.isRectAreaLight){const v=n.rectArea[m];v.position.setFromMatrixPosition(x.matrixWorld),v.position.applyMatrix4(g),o.identity(),r.copy(x.matrixWorld),r.premultiply(g),o.extractRotation(r),v.halfWidth.set(x.width*.5,0,0),v.halfHeight.set(0,x.height*.5,0),v.halfWidth.applyMatrix4(o),v.halfHeight.applyMatrix4(o),m++}else if(x.isPointLight){const v=n.point[d];v.position.setFromMatrixPosition(x.matrixWorld),v.position.applyMatrix4(g),d++}else if(x.isHemisphereLight){const v=n.hemi[_];v.direction.setFromMatrixPosition(x.matrixWorld),v.direction.transformDirection(g),_++}}}return{setup:a,setupView:c,state:n}}function Nw(i){const e=new e9(i),t=[],n=[];function s(u){l.camera=u,t.length=0,n.length=0}function r(u){t.push(u)}function o(u){n.push(u)}function a(){e.setup(t)}function c(u){e.setupView(t,u)}const l={lightsArray:t,shadowsArray:n,camera:null,lights:e,transmissionRenderTarget:{}};return{init:s,state:l,setupLights:a,setupLightsView:c,pushLight:r,pushShadow:o}}function t9(i){let e=new WeakMap;function t(s,r=0){const o=e.get(s);let a;return o===void 0?(a=new Nw(i),e.set(s,[a])):r>=o.length?(a=new Nw(i),o.push(a)):a=o[r],a}function n(){e=new WeakMap}return{get:t,dispose:n}}class n9 extends g_{static get type(){return"MeshDepthMaterial"}constructor(e){super(),this.isMeshDepthMaterial=!0,this.depthPacking=O5,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class i9 extends g_{static get type(){return"MeshDistanceMaterial"}constructor(e){super(),this.isMeshDistanceMaterial=!0,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const s9=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,r9=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function o9(i,e,t){let n=new Nb;const s=new lt,r=new lt,o=new Bn,a=new n9({depthPacking:B5}),c=new i9,l={},u=t.maxTextureSize,h={[Ha]:Fi,[Fi]:Ha,[To]:To},d=new Ur({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new lt},radius:{value:4}},vertexShader:s9,fragmentShader:r9}),f=d.clone();f.defines.HORIZONTAL_PASS=1;const m=new dl;m.setAttribute("position",new Dr(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const _=new rr(m,d),g=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=bN;let p=this.type;this.render=function(M,E,w){if(g.enabled===!1||g.autoUpdate===!1&&g.needsUpdate===!1||M.length===0)return;const b=i.getRenderTarget(),T=i.getActiveCubeFace(),C=i.getActiveMipmapLevel(),D=i.state;D.setBlending(Fo),D.buffers.color.setClear(1,1,1,1),D.buffers.depth.setTest(!0),D.setScissorTest(!1);const P=p!==go&&this.type===go,N=p===go&&this.type!==go;for(let L=0,U=M.length;L<U;L++){const B=M[L],k=B.shadow;if(k===void 0){console.warn("THREE.WebGLShadowMap:",B,"has no shadow.");continue}if(k.autoUpdate===!1&&k.needsUpdate===!1)continue;s.copy(k.mapSize);const $=k.getFrameExtents();if(s.multiply($),r.copy(k.mapSize),(s.x>u||s.y>u)&&(s.x>u&&(r.x=Math.floor(u/$.x),s.x=r.x*$.x,k.mapSize.x=r.x),s.y>u&&(r.y=Math.floor(u/$.y),s.y=r.y*$.y,k.mapSize.y=r.y)),k.map===null||P===!0||N===!0){const Y=this.type!==go?{minFilter:hr,magFilter:hr}:{};k.map!==null&&k.map.dispose(),k.map=new Wa(s.x,s.y,Y),k.map.texture.name=B.name+".shadowMap",k.camera.updateProjectionMatrix()}i.setRenderTarget(k.map),i.clear();const z=k.getViewportCount();for(let Y=0;Y<z;Y++){const ne=k.getViewport(Y);o.set(r.x*ne.x,r.y*ne.y,r.x*ne.z,r.y*ne.w),D.viewport(o),k.updateMatrices(B,Y),n=k.getFrustum(),v(E,w,k.camera,B,this.type)}k.isPointLightShadow!==!0&&this.type===go&&y(k,w),k.needsUpdate=!1}p=this.type,g.needsUpdate=!1,i.setRenderTarget(b,T,C)};function y(M,E){const w=e.update(_);d.defines.VSM_SAMPLES!==M.blurSamples&&(d.defines.VSM_SAMPLES=M.blurSamples,f.defines.VSM_SAMPLES=M.blurSamples,d.needsUpdate=!0,f.needsUpdate=!0),M.mapPass===null&&(M.mapPass=new Wa(s.x,s.y)),d.uniforms.shadow_pass.value=M.map.texture,d.uniforms.resolution.value=M.mapSize,d.uniforms.radius.value=M.radius,i.setRenderTarget(M.mapPass),i.clear(),i.renderBufferDirect(E,null,w,d,_,null),f.uniforms.shadow_pass.value=M.mapPass.texture,f.uniforms.resolution.value=M.mapSize,f.uniforms.radius.value=M.radius,i.setRenderTarget(M.map),i.clear(),i.renderBufferDirect(E,null,w,f,_,null)}function x(M,E,w,b){let T=null;const C=w.isPointLight===!0?M.customDistanceMaterial:M.customDepthMaterial;if(C!==void 0)T=C;else if(T=w.isPointLight===!0?c:a,i.localClippingEnabled&&E.clipShadows===!0&&Array.isArray(E.clippingPlanes)&&E.clippingPlanes.length!==0||E.displacementMap&&E.displacementScale!==0||E.alphaMap&&E.alphaTest>0||E.map&&E.alphaTest>0){const D=T.uuid,P=E.uuid;let N=l[D];N===void 0&&(N={},l[D]=N);let L=N[P];L===void 0&&(L=T.clone(),N[P]=L,E.addEventListener("dispose",S)),T=L}if(T.visible=E.visible,T.wireframe=E.wireframe,b===go?T.side=E.shadowSide!==null?E.shadowSide:E.side:T.side=E.shadowSide!==null?E.shadowSide:h[E.side],T.alphaMap=E.alphaMap,T.alphaTest=E.alphaTest,T.map=E.map,T.clipShadows=E.clipShadows,T.clippingPlanes=E.clippingPlanes,T.clipIntersection=E.clipIntersection,T.displacementMap=E.displacementMap,T.displacementScale=E.displacementScale,T.displacementBias=E.displacementBias,T.wireframeLinewidth=E.wireframeLinewidth,T.linewidth=E.linewidth,w.isPointLight===!0&&T.isMeshDistanceMaterial===!0){const D=i.properties.get(T);D.light=w}return T}function v(M,E,w,b,T){if(M.visible===!1)return;if(M.layers.test(E.layers)&&(M.isMesh||M.isLine||M.isPoints)&&(M.castShadow||M.receiveShadow&&T===go)&&(!M.frustumCulled||n.intersectsObject(M))){M.modelViewMatrix.multiplyMatrices(w.matrixWorldInverse,M.matrixWorld);const P=e.update(M),N=M.material;if(Array.isArray(N)){const L=P.groups;for(let U=0,B=L.length;U<B;U++){const k=L[U],$=N[k.materialIndex];if($&&$.visible){const z=x(M,$,b,T);M.onBeforeShadow(i,M,E,w,P,z,k),i.renderBufferDirect(w,null,P,z,M,k),M.onAfterShadow(i,M,E,w,P,z,k)}}}else if(N.visible){const L=x(M,N,b,T);M.onBeforeShadow(i,M,E,w,P,L,null),i.renderBufferDirect(w,null,P,L,M,null),M.onAfterShadow(i,M,E,w,P,L,null)}}const D=M.children;for(let P=0,N=D.length;P<N;P++)v(D[P],E,w,b,T)}function S(M){M.target.removeEventListener("dispose",S);for(const w in l){const b=l[w],T=M.target.uuid;T in b&&(b[T].dispose(),delete b[T])}}}const a9={[Hx]:Wx,[$x]:jx,[qx]:Yx,[th]:Xx,[Wx]:Hx,[jx]:$x,[Yx]:qx,[Xx]:th};function c9(i,e){function t(){let I=!1;const ee=new Bn;let X=null;const le=new Bn(0,0,0,0);return{setMask:function(Se){X!==Se&&!I&&(i.colorMask(Se,Se,Se,Se),X=Se)},setLocked:function(Se){I=Se},setClear:function(Se,Oe,it,Ct,an){an===!0&&(Se*=Ct,Oe*=Ct,it*=Ct),ee.set(Se,Oe,it,Ct),le.equals(ee)===!1&&(i.clearColor(Se,Oe,it,Ct),le.copy(ee))},reset:function(){I=!1,X=null,le.set(-1,0,0,0)}}}function n(){let I=!1,ee=!1,X=null,le=null,Se=null;return{setReversed:function(Oe){if(ee!==Oe){const it=e.get("EXT_clip_control");ee?it.clipControlEXT(it.LOWER_LEFT_EXT,it.ZERO_TO_ONE_EXT):it.clipControlEXT(it.LOWER_LEFT_EXT,it.NEGATIVE_ONE_TO_ONE_EXT);const Ct=Se;Se=null,this.setClear(Ct)}ee=Oe},getReversed:function(){return ee},setTest:function(Oe){Oe?O(i.DEPTH_TEST):oe(i.DEPTH_TEST)},setMask:function(Oe){X!==Oe&&!I&&(i.depthMask(Oe),X=Oe)},setFunc:function(Oe){if(ee&&(Oe=a9[Oe]),le!==Oe){switch(Oe){case Hx:i.depthFunc(i.NEVER);break;case Wx:i.depthFunc(i.ALWAYS);break;case $x:i.depthFunc(i.LESS);break;case th:i.depthFunc(i.LEQUAL);break;case qx:i.depthFunc(i.EQUAL);break;case Xx:i.depthFunc(i.GEQUAL);break;case jx:i.depthFunc(i.GREATER);break;case Yx:i.depthFunc(i.NOTEQUAL);break;default:i.depthFunc(i.LEQUAL)}le=Oe}},setLocked:function(Oe){I=Oe},setClear:function(Oe){Se!==Oe&&(ee&&(Oe=1-Oe),i.clearDepth(Oe),Se=Oe)},reset:function(){I=!1,X=null,le=null,Se=null,ee=!1}}}function s(){let I=!1,ee=null,X=null,le=null,Se=null,Oe=null,it=null,Ct=null,an=null;return{setTest:function(dt){I||(dt?O(i.STENCIL_TEST):oe(i.STENCIL_TEST))},setMask:function(dt){ee!==dt&&!I&&(i.stencilMask(dt),ee=dt)},setFunc:function(dt,dn,Nn){(X!==dt||le!==dn||Se!==Nn)&&(i.stencilFunc(dt,dn,Nn),X=dt,le=dn,Se=Nn)},setOp:function(dt,dn,Nn){(Oe!==dt||it!==dn||Ct!==Nn)&&(i.stencilOp(dt,dn,Nn),Oe=dt,it=dn,Ct=Nn)},setLocked:function(dt){I=dt},setClear:function(dt){an!==dt&&(i.clearStencil(dt),an=dt)},reset:function(){I=!1,ee=null,X=null,le=null,Se=null,Oe=null,it=null,Ct=null,an=null}}}const r=new t,o=new n,a=new s,c=new WeakMap,l=new WeakMap;let u={},h={},d=new WeakMap,f=[],m=null,_=!1,g=null,p=null,y=null,x=null,v=null,S=null,M=null,E=new Xt(0,0,0),w=0,b=!1,T=null,C=null,D=null,P=null,N=null;const L=i.getParameter(i.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let U=!1,B=0;const k=i.getParameter(i.VERSION);k.indexOf("WebGL")!==-1?(B=parseFloat(/^WebGL (\d)/.exec(k)[1]),U=B>=1):k.indexOf("OpenGL ES")!==-1&&(B=parseFloat(/^OpenGL ES (\d)/.exec(k)[1]),U=B>=2);let $=null,z={};const Y=i.getParameter(i.SCISSOR_BOX),ne=i.getParameter(i.VIEWPORT),te=new Bn().fromArray(Y),V=new Bn().fromArray(ne);function H(I,ee,X,le){const Se=new Uint8Array(4),Oe=i.createTexture();i.bindTexture(I,Oe),i.texParameteri(I,i.TEXTURE_MIN_FILTER,i.NEAREST),i.texParameteri(I,i.TEXTURE_MAG_FILTER,i.NEAREST);for(let it=0;it<X;it++)I===i.TEXTURE_3D||I===i.TEXTURE_2D_ARRAY?i.texImage3D(ee,0,i.RGBA,1,1,le,0,i.RGBA,i.UNSIGNED_BYTE,Se):i.texImage2D(ee+it,0,i.RGBA,1,1,0,i.RGBA,i.UNSIGNED_BYTE,Se);return Oe}const Q={};Q[i.TEXTURE_2D]=H(i.TEXTURE_2D,i.TEXTURE_2D,1),Q[i.TEXTURE_CUBE_MAP]=H(i.TEXTURE_CUBE_MAP,i.TEXTURE_CUBE_MAP_POSITIVE_X,6),Q[i.TEXTURE_2D_ARRAY]=H(i.TEXTURE_2D_ARRAY,i.TEXTURE_2D_ARRAY,1,1),Q[i.TEXTURE_3D]=H(i.TEXTURE_3D,i.TEXTURE_3D,1,1),r.setClear(0,0,0,1),o.setClear(1),a.setClear(0),O(i.DEPTH_TEST),o.setFunc(th),De(!1),qe(LE),O(i.CULL_FACE),j(Fo);function O(I){u[I]!==!0&&(i.enable(I),u[I]=!0)}function oe(I){u[I]!==!1&&(i.disable(I),u[I]=!1)}function Ne(I,ee){return h[I]!==ee?(i.bindFramebuffer(I,ee),h[I]=ee,I===i.DRAW_FRAMEBUFFER&&(h[i.FRAMEBUFFER]=ee),I===i.FRAMEBUFFER&&(h[i.DRAW_FRAMEBUFFER]=ee),!0):!1}function _e(I,ee){let X=f,le=!1;if(I){X=d.get(ee),X===void 0&&(X=[],d.set(ee,X));const Se=I.textures;if(X.length!==Se.length||X[0]!==i.COLOR_ATTACHMENT0){for(let Oe=0,it=Se.length;Oe<it;Oe++)X[Oe]=i.COLOR_ATTACHMENT0+Oe;X.length=Se.length,le=!0}}else X[0]!==i.BACK&&(X[0]=i.BACK,le=!0);le&&i.drawBuffers(X)}function Fe(I){return m!==I?(i.useProgram(I),m=I,!0):!1}const Xe={[Ac]:i.FUNC_ADD,[u5]:i.FUNC_SUBTRACT,[h5]:i.FUNC_REVERSE_SUBTRACT};Xe[d5]=i.MIN,Xe[f5]=i.MAX;const $e={[p5]:i.ZERO,[m5]:i.ONE,[g5]:i.SRC_COLOR,[Gx]:i.SRC_ALPHA,[b5]:i.SRC_ALPHA_SATURATE,[y5]:i.DST_COLOR,[v5]:i.DST_ALPHA,[_5]:i.ONE_MINUS_SRC_COLOR,[Vx]:i.ONE_MINUS_SRC_ALPHA,[S5]:i.ONE_MINUS_DST_COLOR,[x5]:i.ONE_MINUS_DST_ALPHA,[M5]:i.CONSTANT_COLOR,[T5]:i.ONE_MINUS_CONSTANT_COLOR,[E5]:i.CONSTANT_ALPHA,[w5]:i.ONE_MINUS_CONSTANT_ALPHA};function j(I,ee,X,le,Se,Oe,it,Ct,an,dt){if(I===Fo){_===!0&&(oe(i.BLEND),_=!1);return}if(_===!1&&(O(i.BLEND),_=!0),I!==l5){if(I!==g||dt!==b){if((p!==Ac||v!==Ac)&&(i.blendEquation(i.FUNC_ADD),p=Ac,v=Ac),dt)switch(I){case Iu:i.blendFuncSeparate(i.ONE,i.ONE_MINUS_SRC_ALPHA,i.ONE,i.ONE_MINUS_SRC_ALPHA);break;case IE:i.blendFunc(i.ONE,i.ONE);break;case FE:i.blendFuncSeparate(i.ZERO,i.ONE_MINUS_SRC_COLOR,i.ZERO,i.ONE);break;case UE:i.blendFuncSeparate(i.ZERO,i.SRC_COLOR,i.ZERO,i.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",I);break}else switch(I){case Iu:i.blendFuncSeparate(i.SRC_ALPHA,i.ONE_MINUS_SRC_ALPHA,i.ONE,i.ONE_MINUS_SRC_ALPHA);break;case IE:i.blendFunc(i.SRC_ALPHA,i.ONE);break;case FE:i.blendFuncSeparate(i.ZERO,i.ONE_MINUS_SRC_COLOR,i.ZERO,i.ONE);break;case UE:i.blendFunc(i.ZERO,i.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",I);break}y=null,x=null,S=null,M=null,E.set(0,0,0),w=0,g=I,b=dt}return}Se=Se||ee,Oe=Oe||X,it=it||le,(ee!==p||Se!==v)&&(i.blendEquationSeparate(Xe[ee],Xe[Se]),p=ee,v=Se),(X!==y||le!==x||Oe!==S||it!==M)&&(i.blendFuncSeparate($e[X],$e[le],$e[Oe],$e[it]),y=X,x=le,S=Oe,M=it),(Ct.equals(E)===!1||an!==w)&&(i.blendColor(Ct.r,Ct.g,Ct.b,an),E.copy(Ct),w=an),g=I,b=!1}function Ie(I,ee){I.side===To?oe(i.CULL_FACE):O(i.CULL_FACE);let X=I.side===Fi;ee&&(X=!X),De(X),I.blending===Iu&&I.transparent===!1?j(Fo):j(I.blending,I.blendEquation,I.blendSrc,I.blendDst,I.blendEquationAlpha,I.blendSrcAlpha,I.blendDstAlpha,I.blendColor,I.blendAlpha,I.premultipliedAlpha),o.setFunc(I.depthFunc),o.setTest(I.depthTest),o.setMask(I.depthWrite),r.setMask(I.colorWrite);const le=I.stencilWrite;a.setTest(le),le&&(a.setMask(I.stencilWriteMask),a.setFunc(I.stencilFunc,I.stencilRef,I.stencilFuncMask),a.setOp(I.stencilFail,I.stencilZFail,I.stencilZPass)),He(I.polygonOffset,I.polygonOffsetFactor,I.polygonOffsetUnits),I.alphaToCoverage===!0?O(i.SAMPLE_ALPHA_TO_COVERAGE):oe(i.SAMPLE_ALPHA_TO_COVERAGE)}function De(I){T!==I&&(I?i.frontFace(i.CW):i.frontFace(i.CCW),T=I)}function qe(I){I!==o5?(O(i.CULL_FACE),I!==C&&(I===LE?i.cullFace(i.BACK):I===a5?i.cullFace(i.FRONT):i.cullFace(i.FRONT_AND_BACK))):oe(i.CULL_FACE),C=I}function Be(I){I!==D&&(U&&i.lineWidth(I),D=I)}function He(I,ee,X){I?(O(i.POLYGON_OFFSET_FILL),(P!==ee||N!==X)&&(i.polygonOffset(ee,X),P=ee,N=X)):oe(i.POLYGON_OFFSET_FILL)}function ze(I){I?O(i.SCISSOR_TEST):oe(i.SCISSOR_TEST)}function G(I){I===void 0&&(I=i.TEXTURE0+L-1),$!==I&&(i.activeTexture(I),$=I)}function A(I,ee,X){X===void 0&&($===null?X=i.TEXTURE0+L-1:X=$);let le=z[X];le===void 0&&(le={type:void 0,texture:void 0},z[X]=le),(le.type!==I||le.texture!==ee)&&($!==X&&(i.activeTexture(X),$=X),i.bindTexture(I,ee||Q[I]),le.type=I,le.texture=ee)}function R(){const I=z[$];I!==void 0&&I.type!==void 0&&(i.bindTexture(I.type,null),I.type=void 0,I.texture=void 0)}function q(){try{i.compressedTexImage2D.apply(i,arguments)}catch(I){console.error("THREE.WebGLState:",I)}}function ie(){try{i.compressedTexImage3D.apply(i,arguments)}catch(I){console.error("THREE.WebGLState:",I)}}function J(){try{i.texSubImage2D.apply(i,arguments)}catch(I){console.error("THREE.WebGLState:",I)}}function xe(){try{i.texSubImage3D.apply(i,arguments)}catch(I){console.error("THREE.WebGLState:",I)}}function Ce(){try{i.compressedTexSubImage2D.apply(i,arguments)}catch(I){console.error("THREE.WebGLState:",I)}}function ye(){try{i.compressedTexSubImage3D.apply(i,arguments)}catch(I){console.error("THREE.WebGLState:",I)}}function me(){try{i.texStorage2D.apply(i,arguments)}catch(I){console.error("THREE.WebGLState:",I)}}function ge(){try{i.texStorage3D.apply(i,arguments)}catch(I){console.error("THREE.WebGLState:",I)}}function Re(){try{i.texImage2D.apply(i,arguments)}catch(I){console.error("THREE.WebGLState:",I)}}function Ue(){try{i.texImage3D.apply(i,arguments)}catch(I){console.error("THREE.WebGLState:",I)}}function Le(I){te.equals(I)===!1&&(i.scissor(I.x,I.y,I.z,I.w),te.copy(I))}function Ee(I){V.equals(I)===!1&&(i.viewport(I.x,I.y,I.z,I.w),V.copy(I))}function tt(I,ee){let X=l.get(ee);X===void 0&&(X=new WeakMap,l.set(ee,X));let le=X.get(I);le===void 0&&(le=i.getUniformBlockIndex(ee,I.name),X.set(I,le))}function nt(I,ee){const le=l.get(ee).get(I);c.get(ee)!==le&&(i.uniformBlockBinding(ee,le,I.__bindingPointIndex),c.set(ee,le))}function mt(){i.disable(i.BLEND),i.disable(i.CULL_FACE),i.disable(i.DEPTH_TEST),i.disable(i.POLYGON_OFFSET_FILL),i.disable(i.SCISSOR_TEST),i.disable(i.STENCIL_TEST),i.disable(i.SAMPLE_ALPHA_TO_COVERAGE),i.blendEquation(i.FUNC_ADD),i.blendFunc(i.ONE,i.ZERO),i.blendFuncSeparate(i.ONE,i.ZERO,i.ONE,i.ZERO),i.blendColor(0,0,0,0),i.colorMask(!0,!0,!0,!0),i.clearColor(0,0,0,0),i.depthMask(!0),i.depthFunc(i.LESS),o.setReversed(!1),i.clearDepth(1),i.stencilMask(4294967295),i.stencilFunc(i.ALWAYS,0,4294967295),i.stencilOp(i.KEEP,i.KEEP,i.KEEP),i.clearStencil(0),i.cullFace(i.BACK),i.frontFace(i.CCW),i.polygonOffset(0,0),i.activeTexture(i.TEXTURE0),i.bindFramebuffer(i.FRAMEBUFFER,null),i.bindFramebuffer(i.DRAW_FRAMEBUFFER,null),i.bindFramebuffer(i.READ_FRAMEBUFFER,null),i.useProgram(null),i.lineWidth(1),i.scissor(0,0,i.canvas.width,i.canvas.height),i.viewport(0,0,i.canvas.width,i.canvas.height),u={},$=null,z={},h={},d=new WeakMap,f=[],m=null,_=!1,g=null,p=null,y=null,x=null,v=null,S=null,M=null,E=new Xt(0,0,0),w=0,b=!1,T=null,C=null,D=null,P=null,N=null,te.set(0,0,i.canvas.width,i.canvas.height),V.set(0,0,i.canvas.width,i.canvas.height),r.reset(),o.reset(),a.reset()}return{buffers:{color:r,depth:o,stencil:a},enable:O,disable:oe,bindFramebuffer:Ne,drawBuffers:_e,useProgram:Fe,setBlending:j,setMaterial:Ie,setFlipSided:De,setCullFace:qe,setLineWidth:Be,setPolygonOffset:He,setScissorTest:ze,activeTexture:G,bindTexture:A,unbindTexture:R,compressedTexImage2D:q,compressedTexImage3D:ie,texImage2D:Re,texImage3D:Ue,updateUBOMapping:tt,uniformBlockBinding:nt,texStorage2D:me,texStorage3D:ge,texSubImage2D:J,texSubImage3D:xe,compressedTexSubImage2D:Ce,compressedTexSubImage3D:ye,scissor:Le,viewport:Ee,reset:mt}}function Pw(i,e,t,n){const s=l9(n);switch(t){case CN:return i*e;case NN:return i*e;case PN:return i*e*2;case DN:return i*e/s.components*s.byteLength;case Sb:return i*e/s.components*s.byteLength;case LN:return i*e*2/s.components*s.byteLength;case bb:return i*e*2/s.components*s.byteLength;case RN:return i*e*3/s.components*s.byteLength;case sr:return i*e*4/s.components*s.byteLength;case Mb:return i*e*4/s.components*s.byteLength;case Om:case Bm:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*8;case km:case zm:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*16;case ty:case iy:return Math.max(i,16)*Math.max(e,8)/4;case ey:case ny:return Math.max(i,8)*Math.max(e,8)/2;case sy:case ry:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*8;case oy:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*16;case ay:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*16;case cy:return Math.floor((i+4)/5)*Math.floor((e+3)/4)*16;case ly:return Math.floor((i+4)/5)*Math.floor((e+4)/5)*16;case uy:return Math.floor((i+5)/6)*Math.floor((e+4)/5)*16;case hy:return Math.floor((i+5)/6)*Math.floor((e+5)/6)*16;case dy:return Math.floor((i+7)/8)*Math.floor((e+4)/5)*16;case fy:return Math.floor((i+7)/8)*Math.floor((e+5)/6)*16;case py:return Math.floor((i+7)/8)*Math.floor((e+7)/8)*16;case my:return Math.floor((i+9)/10)*Math.floor((e+4)/5)*16;case gy:return Math.floor((i+9)/10)*Math.floor((e+5)/6)*16;case _y:return Math.floor((i+9)/10)*Math.floor((e+7)/8)*16;case vy:return Math.floor((i+9)/10)*Math.floor((e+9)/10)*16;case xy:return Math.floor((i+11)/12)*Math.floor((e+9)/10)*16;case yy:return Math.floor((i+11)/12)*Math.floor((e+11)/12)*16;case Gm:case Sy:case by:return Math.ceil(i/4)*Math.ceil(e/4)*16;case IN:case My:return Math.ceil(i/4)*Math.ceil(e/4)*8;case Ty:case Ey:return Math.ceil(i/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function l9(i){switch(i){case $o:case EN:return{byteLength:1,components:1};case sf:case wN:case Ah:return{byteLength:2,components:1};case xb:case yb:return{byteLength:2,components:4};case Jc:case vb:case No:return{byteLength:4,components:1};case AN:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${i}.`)}function u9(i,e,t,n,s,r,o){const a=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,c=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),l=new lt,u=new WeakMap;let h;const d=new WeakMap;let f=!1;try{f=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function m(G,A){return f?new OffscreenCanvas(G,A):of("canvas")}function _(G,A,R){let q=1;const ie=ze(G);if((ie.width>R||ie.height>R)&&(q=R/Math.max(ie.width,ie.height)),q<1)if(typeof HTMLImageElement<"u"&&G instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&G instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&G instanceof ImageBitmap||typeof VideoFrame<"u"&&G instanceof VideoFrame){const J=Math.floor(q*ie.width),xe=Math.floor(q*ie.height);h===void 0&&(h=m(J,xe));const Ce=A?m(J,xe):h;return Ce.width=J,Ce.height=xe,Ce.getContext("2d").drawImage(G,0,0,J,xe),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+ie.width+"x"+ie.height+") to ("+J+"x"+xe+")."),Ce}else return"data"in G&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+ie.width+"x"+ie.height+")."),G;return G}function g(G){return G.generateMipmaps}function p(G){i.generateMipmap(G)}function y(G){return G.isWebGLCubeRenderTarget?i.TEXTURE_CUBE_MAP:G.isWebGL3DRenderTarget?i.TEXTURE_3D:G.isWebGLArrayRenderTarget||G.isCompressedArrayTexture?i.TEXTURE_2D_ARRAY:i.TEXTURE_2D}function x(G,A,R,q,ie=!1){if(G!==null){if(i[G]!==void 0)return i[G];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+G+"'")}let J=A;if(A===i.RED&&(R===i.FLOAT&&(J=i.R32F),R===i.HALF_FLOAT&&(J=i.R16F),R===i.UNSIGNED_BYTE&&(J=i.R8)),A===i.RED_INTEGER&&(R===i.UNSIGNED_BYTE&&(J=i.R8UI),R===i.UNSIGNED_SHORT&&(J=i.R16UI),R===i.UNSIGNED_INT&&(J=i.R32UI),R===i.BYTE&&(J=i.R8I),R===i.SHORT&&(J=i.R16I),R===i.INT&&(J=i.R32I)),A===i.RG&&(R===i.FLOAT&&(J=i.RG32F),R===i.HALF_FLOAT&&(J=i.RG16F),R===i.UNSIGNED_BYTE&&(J=i.RG8)),A===i.RG_INTEGER&&(R===i.UNSIGNED_BYTE&&(J=i.RG8UI),R===i.UNSIGNED_SHORT&&(J=i.RG16UI),R===i.UNSIGNED_INT&&(J=i.RG32UI),R===i.BYTE&&(J=i.RG8I),R===i.SHORT&&(J=i.RG16I),R===i.INT&&(J=i.RG32I)),A===i.RGB_INTEGER&&(R===i.UNSIGNED_BYTE&&(J=i.RGB8UI),R===i.UNSIGNED_SHORT&&(J=i.RGB16UI),R===i.UNSIGNED_INT&&(J=i.RGB32UI),R===i.BYTE&&(J=i.RGB8I),R===i.SHORT&&(J=i.RGB16I),R===i.INT&&(J=i.RGB32I)),A===i.RGBA_INTEGER&&(R===i.UNSIGNED_BYTE&&(J=i.RGBA8UI),R===i.UNSIGNED_SHORT&&(J=i.RGBA16UI),R===i.UNSIGNED_INT&&(J=i.RGBA32UI),R===i.BYTE&&(J=i.RGBA8I),R===i.SHORT&&(J=i.RGBA16I),R===i.INT&&(J=i.RGBA32I)),A===i.RGB&&R===i.UNSIGNED_INT_5_9_9_9_REV&&(J=i.RGB9_E5),A===i.RGBA){const xe=ie?m_:zt.getTransfer(q);R===i.FLOAT&&(J=i.RGBA32F),R===i.HALF_FLOAT&&(J=i.RGBA16F),R===i.UNSIGNED_BYTE&&(J=xe===Jt?i.SRGB8_ALPHA8:i.RGBA8),R===i.UNSIGNED_SHORT_4_4_4_4&&(J=i.RGBA4),R===i.UNSIGNED_SHORT_5_5_5_1&&(J=i.RGB5_A1)}return(J===i.R16F||J===i.R32F||J===i.RG16F||J===i.RG32F||J===i.RGBA16F||J===i.RGBA32F)&&e.get("EXT_color_buffer_float"),J}function v(G,A){let R;return G?A===null||A===Jc||A===sh?R=i.DEPTH24_STENCIL8:A===No?R=i.DEPTH32F_STENCIL8:A===sf&&(R=i.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):A===null||A===Jc||A===sh?R=i.DEPTH_COMPONENT24:A===No?R=i.DEPTH_COMPONENT32F:A===sf&&(R=i.DEPTH_COMPONENT16),R}function S(G,A){return g(G)===!0||G.isFramebufferTexture&&G.minFilter!==hr&&G.minFilter!==Cr?Math.log2(Math.max(A.width,A.height))+1:G.mipmaps!==void 0&&G.mipmaps.length>0?G.mipmaps.length:G.isCompressedTexture&&Array.isArray(G.image)?A.mipmaps.length:1}function M(G){const A=G.target;A.removeEventListener("dispose",M),w(A),A.isVideoTexture&&u.delete(A)}function E(G){const A=G.target;A.removeEventListener("dispose",E),T(A)}function w(G){const A=n.get(G);if(A.__webglInit===void 0)return;const R=G.source,q=d.get(R);if(q){const ie=q[A.__cacheKey];ie.usedTimes--,ie.usedTimes===0&&b(G),Object.keys(q).length===0&&d.delete(R)}n.remove(G)}function b(G){const A=n.get(G);i.deleteTexture(A.__webglTexture);const R=G.source,q=d.get(R);delete q[A.__cacheKey],o.memory.textures--}function T(G){const A=n.get(G);if(G.depthTexture&&(G.depthTexture.dispose(),n.remove(G.depthTexture)),G.isWebGLCubeRenderTarget)for(let q=0;q<6;q++){if(Array.isArray(A.__webglFramebuffer[q]))for(let ie=0;ie<A.__webglFramebuffer[q].length;ie++)i.deleteFramebuffer(A.__webglFramebuffer[q][ie]);else i.deleteFramebuffer(A.__webglFramebuffer[q]);A.__webglDepthbuffer&&i.deleteRenderbuffer(A.__webglDepthbuffer[q])}else{if(Array.isArray(A.__webglFramebuffer))for(let q=0;q<A.__webglFramebuffer.length;q++)i.deleteFramebuffer(A.__webglFramebuffer[q]);else i.deleteFramebuffer(A.__webglFramebuffer);if(A.__webglDepthbuffer&&i.deleteRenderbuffer(A.__webglDepthbuffer),A.__webglMultisampledFramebuffer&&i.deleteFramebuffer(A.__webglMultisampledFramebuffer),A.__webglColorRenderbuffer)for(let q=0;q<A.__webglColorRenderbuffer.length;q++)A.__webglColorRenderbuffer[q]&&i.deleteRenderbuffer(A.__webglColorRenderbuffer[q]);A.__webglDepthRenderbuffer&&i.deleteRenderbuffer(A.__webglDepthRenderbuffer)}const R=G.textures;for(let q=0,ie=R.length;q<ie;q++){const J=n.get(R[q]);J.__webglTexture&&(i.deleteTexture(J.__webglTexture),o.memory.textures--),n.remove(R[q])}n.remove(G)}let C=0;function D(){C=0}function P(){const G=C;return G>=s.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+G+" texture units while this GPU supports only "+s.maxTextures),C+=1,G}function N(G){const A=[];return A.push(G.wrapS),A.push(G.wrapT),A.push(G.wrapR||0),A.push(G.magFilter),A.push(G.minFilter),A.push(G.anisotropy),A.push(G.internalFormat),A.push(G.format),A.push(G.type),A.push(G.generateMipmaps),A.push(G.premultiplyAlpha),A.push(G.flipY),A.push(G.unpackAlignment),A.push(G.colorSpace),A.join()}function L(G,A){const R=n.get(G);if(G.isVideoTexture&&Be(G),G.isRenderTargetTexture===!1&&G.version>0&&R.__version!==G.version){const q=G.image;if(q===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(q.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{V(R,G,A);return}}t.bindTexture(i.TEXTURE_2D,R.__webglTexture,i.TEXTURE0+A)}function U(G,A){const R=n.get(G);if(G.version>0&&R.__version!==G.version){V(R,G,A);return}t.bindTexture(i.TEXTURE_2D_ARRAY,R.__webglTexture,i.TEXTURE0+A)}function B(G,A){const R=n.get(G);if(G.version>0&&R.__version!==G.version){V(R,G,A);return}t.bindTexture(i.TEXTURE_3D,R.__webglTexture,i.TEXTURE0+A)}function k(G,A){const R=n.get(G);if(G.version>0&&R.__version!==G.version){H(R,G,A);return}t.bindTexture(i.TEXTURE_CUBE_MAP,R.__webglTexture,i.TEXTURE0+A)}const $={[Qx]:i.REPEAT,[Fc]:i.CLAMP_TO_EDGE,[Jx]:i.MIRRORED_REPEAT},z={[hr]:i.NEAREST,[U5]:i.NEAREST_MIPMAP_NEAREST,[bp]:i.NEAREST_MIPMAP_LINEAR,[Cr]:i.LINEAR,[M0]:i.LINEAR_MIPMAP_NEAREST,[Uc]:i.LINEAR_MIPMAP_LINEAR},Y={[G5]:i.NEVER,[X5]:i.ALWAYS,[V5]:i.LESS,[FN]:i.LEQUAL,[H5]:i.EQUAL,[q5]:i.GEQUAL,[W5]:i.GREATER,[$5]:i.NOTEQUAL};function ne(G,A){if(A.type===No&&e.has("OES_texture_float_linear")===!1&&(A.magFilter===Cr||A.magFilter===M0||A.magFilter===bp||A.magFilter===Uc||A.minFilter===Cr||A.minFilter===M0||A.minFilter===bp||A.minFilter===Uc)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),i.texParameteri(G,i.TEXTURE_WRAP_S,$[A.wrapS]),i.texParameteri(G,i.TEXTURE_WRAP_T,$[A.wrapT]),(G===i.TEXTURE_3D||G===i.TEXTURE_2D_ARRAY)&&i.texParameteri(G,i.TEXTURE_WRAP_R,$[A.wrapR]),i.texParameteri(G,i.TEXTURE_MAG_FILTER,z[A.magFilter]),i.texParameteri(G,i.TEXTURE_MIN_FILTER,z[A.minFilter]),A.compareFunction&&(i.texParameteri(G,i.TEXTURE_COMPARE_MODE,i.COMPARE_REF_TO_TEXTURE),i.texParameteri(G,i.TEXTURE_COMPARE_FUNC,Y[A.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(A.magFilter===hr||A.minFilter!==bp&&A.minFilter!==Uc||A.type===No&&e.has("OES_texture_float_linear")===!1)return;if(A.anisotropy>1||n.get(A).__currentAnisotropy){const R=e.get("EXT_texture_filter_anisotropic");i.texParameterf(G,R.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(A.anisotropy,s.getMaxAnisotropy())),n.get(A).__currentAnisotropy=A.anisotropy}}}function te(G,A){let R=!1;G.__webglInit===void 0&&(G.__webglInit=!0,A.addEventListener("dispose",M));const q=A.source;let ie=d.get(q);ie===void 0&&(ie={},d.set(q,ie));const J=N(A);if(J!==G.__cacheKey){ie[J]===void 0&&(ie[J]={texture:i.createTexture(),usedTimes:0},o.memory.textures++,R=!0),ie[J].usedTimes++;const xe=ie[G.__cacheKey];xe!==void 0&&(ie[G.__cacheKey].usedTimes--,xe.usedTimes===0&&b(A)),G.__cacheKey=J,G.__webglTexture=ie[J].texture}return R}function V(G,A,R){let q=i.TEXTURE_2D;(A.isDataArrayTexture||A.isCompressedArrayTexture)&&(q=i.TEXTURE_2D_ARRAY),A.isData3DTexture&&(q=i.TEXTURE_3D);const ie=te(G,A),J=A.source;t.bindTexture(q,G.__webglTexture,i.TEXTURE0+R);const xe=n.get(J);if(J.version!==xe.__version||ie===!0){t.activeTexture(i.TEXTURE0+R);const Ce=zt.getPrimaries(zt.workingColorSpace),ye=A.colorSpace===Aa?null:zt.getPrimaries(A.colorSpace),me=A.colorSpace===Aa||Ce===ye?i.NONE:i.BROWSER_DEFAULT_WEBGL;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,A.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,A.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,A.unpackAlignment),i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,me);let ge=_(A.image,!1,s.maxTextureSize);ge=He(A,ge);const Re=r.convert(A.format,A.colorSpace),Ue=r.convert(A.type);let Le=x(A.internalFormat,Re,Ue,A.colorSpace,A.isVideoTexture);ne(q,A);let Ee;const tt=A.mipmaps,nt=A.isVideoTexture!==!0,mt=xe.__version===void 0||ie===!0,I=J.dataReady,ee=S(A,ge);if(A.isDepthTexture)Le=v(A.format===rh,A.type),mt&&(nt?t.texStorage2D(i.TEXTURE_2D,1,Le,ge.width,ge.height):t.texImage2D(i.TEXTURE_2D,0,Le,ge.width,ge.height,0,Re,Ue,null));else if(A.isDataTexture)if(tt.length>0){nt&&mt&&t.texStorage2D(i.TEXTURE_2D,ee,Le,tt[0].width,tt[0].height);for(let X=0,le=tt.length;X<le;X++)Ee=tt[X],nt?I&&t.texSubImage2D(i.TEXTURE_2D,X,0,0,Ee.width,Ee.height,Re,Ue,Ee.data):t.texImage2D(i.TEXTURE_2D,X,Le,Ee.width,Ee.height,0,Re,Ue,Ee.data);A.generateMipmaps=!1}else nt?(mt&&t.texStorage2D(i.TEXTURE_2D,ee,Le,ge.width,ge.height),I&&t.texSubImage2D(i.TEXTURE_2D,0,0,0,ge.width,ge.height,Re,Ue,ge.data)):t.texImage2D(i.TEXTURE_2D,0,Le,ge.width,ge.height,0,Re,Ue,ge.data);else if(A.isCompressedTexture)if(A.isCompressedArrayTexture){nt&&mt&&t.texStorage3D(i.TEXTURE_2D_ARRAY,ee,Le,tt[0].width,tt[0].height,ge.depth);for(let X=0,le=tt.length;X<le;X++)if(Ee=tt[X],A.format!==sr)if(Re!==null)if(nt){if(I)if(A.layerUpdates.size>0){const Se=Pw(Ee.width,Ee.height,A.format,A.type);for(const Oe of A.layerUpdates){const it=Ee.data.subarray(Oe*Se/Ee.data.BYTES_PER_ELEMENT,(Oe+1)*Se/Ee.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(i.TEXTURE_2D_ARRAY,X,0,0,Oe,Ee.width,Ee.height,1,Re,it)}A.clearLayerUpdates()}else t.compressedTexSubImage3D(i.TEXTURE_2D_ARRAY,X,0,0,0,Ee.width,Ee.height,ge.depth,Re,Ee.data)}else t.compressedTexImage3D(i.TEXTURE_2D_ARRAY,X,Le,Ee.width,Ee.height,ge.depth,0,Ee.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else nt?I&&t.texSubImage3D(i.TEXTURE_2D_ARRAY,X,0,0,0,Ee.width,Ee.height,ge.depth,Re,Ue,Ee.data):t.texImage3D(i.TEXTURE_2D_ARRAY,X,Le,Ee.width,Ee.height,ge.depth,0,Re,Ue,Ee.data)}else{nt&&mt&&t.texStorage2D(i.TEXTURE_2D,ee,Le,tt[0].width,tt[0].height);for(let X=0,le=tt.length;X<le;X++)Ee=tt[X],A.format!==sr?Re!==null?nt?I&&t.compressedTexSubImage2D(i.TEXTURE_2D,X,0,0,Ee.width,Ee.height,Re,Ee.data):t.compressedTexImage2D(i.TEXTURE_2D,X,Le,Ee.width,Ee.height,0,Ee.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):nt?I&&t.texSubImage2D(i.TEXTURE_2D,X,0,0,Ee.width,Ee.height,Re,Ue,Ee.data):t.texImage2D(i.TEXTURE_2D,X,Le,Ee.width,Ee.height,0,Re,Ue,Ee.data)}else if(A.isDataArrayTexture)if(nt){if(mt&&t.texStorage3D(i.TEXTURE_2D_ARRAY,ee,Le,ge.width,ge.height,ge.depth),I)if(A.layerUpdates.size>0){const X=Pw(ge.width,ge.height,A.format,A.type);for(const le of A.layerUpdates){const Se=ge.data.subarray(le*X/ge.data.BYTES_PER_ELEMENT,(le+1)*X/ge.data.BYTES_PER_ELEMENT);t.texSubImage3D(i.TEXTURE_2D_ARRAY,0,0,0,le,ge.width,ge.height,1,Re,Ue,Se)}A.clearLayerUpdates()}else t.texSubImage3D(i.TEXTURE_2D_ARRAY,0,0,0,0,ge.width,ge.height,ge.depth,Re,Ue,ge.data)}else t.texImage3D(i.TEXTURE_2D_ARRAY,0,Le,ge.width,ge.height,ge.depth,0,Re,Ue,ge.data);else if(A.isData3DTexture)nt?(mt&&t.texStorage3D(i.TEXTURE_3D,ee,Le,ge.width,ge.height,ge.depth),I&&t.texSubImage3D(i.TEXTURE_3D,0,0,0,0,ge.width,ge.height,ge.depth,Re,Ue,ge.data)):t.texImage3D(i.TEXTURE_3D,0,Le,ge.width,ge.height,ge.depth,0,Re,Ue,ge.data);else if(A.isFramebufferTexture){if(mt)if(nt)t.texStorage2D(i.TEXTURE_2D,ee,Le,ge.width,ge.height);else{let X=ge.width,le=ge.height;for(let Se=0;Se<ee;Se++)t.texImage2D(i.TEXTURE_2D,Se,Le,X,le,0,Re,Ue,null),X>>=1,le>>=1}}else if(tt.length>0){if(nt&&mt){const X=ze(tt[0]);t.texStorage2D(i.TEXTURE_2D,ee,Le,X.width,X.height)}for(let X=0,le=tt.length;X<le;X++)Ee=tt[X],nt?I&&t.texSubImage2D(i.TEXTURE_2D,X,0,0,Re,Ue,Ee):t.texImage2D(i.TEXTURE_2D,X,Le,Re,Ue,Ee);A.generateMipmaps=!1}else if(nt){if(mt){const X=ze(ge);t.texStorage2D(i.TEXTURE_2D,ee,Le,X.width,X.height)}I&&t.texSubImage2D(i.TEXTURE_2D,0,0,0,Re,Ue,ge)}else t.texImage2D(i.TEXTURE_2D,0,Le,Re,Ue,ge);g(A)&&p(q),xe.__version=J.version,A.onUpdate&&A.onUpdate(A)}G.__version=A.version}function H(G,A,R){if(A.image.length!==6)return;const q=te(G,A),ie=A.source;t.bindTexture(i.TEXTURE_CUBE_MAP,G.__webglTexture,i.TEXTURE0+R);const J=n.get(ie);if(ie.version!==J.__version||q===!0){t.activeTexture(i.TEXTURE0+R);const xe=zt.getPrimaries(zt.workingColorSpace),Ce=A.colorSpace===Aa?null:zt.getPrimaries(A.colorSpace),ye=A.colorSpace===Aa||xe===Ce?i.NONE:i.BROWSER_DEFAULT_WEBGL;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,A.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,A.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,A.unpackAlignment),i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,ye);const me=A.isCompressedTexture||A.image[0].isCompressedTexture,ge=A.image[0]&&A.image[0].isDataTexture,Re=[];for(let le=0;le<6;le++)!me&&!ge?Re[le]=_(A.image[le],!0,s.maxCubemapSize):Re[le]=ge?A.image[le].image:A.image[le],Re[le]=He(A,Re[le]);const Ue=Re[0],Le=r.convert(A.format,A.colorSpace),Ee=r.convert(A.type),tt=x(A.internalFormat,Le,Ee,A.colorSpace),nt=A.isVideoTexture!==!0,mt=J.__version===void 0||q===!0,I=ie.dataReady;let ee=S(A,Ue);ne(i.TEXTURE_CUBE_MAP,A);let X;if(me){nt&&mt&&t.texStorage2D(i.TEXTURE_CUBE_MAP,ee,tt,Ue.width,Ue.height);for(let le=0;le<6;le++){X=Re[le].mipmaps;for(let Se=0;Se<X.length;Se++){const Oe=X[Se];A.format!==sr?Le!==null?nt?I&&t.compressedTexSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+le,Se,0,0,Oe.width,Oe.height,Le,Oe.data):t.compressedTexImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+le,Se,tt,Oe.width,Oe.height,0,Oe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):nt?I&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+le,Se,0,0,Oe.width,Oe.height,Le,Ee,Oe.data):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+le,Se,tt,Oe.width,Oe.height,0,Le,Ee,Oe.data)}}}else{if(X=A.mipmaps,nt&&mt){X.length>0&&ee++;const le=ze(Re[0]);t.texStorage2D(i.TEXTURE_CUBE_MAP,ee,tt,le.width,le.height)}for(let le=0;le<6;le++)if(ge){nt?I&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+le,0,0,0,Re[le].width,Re[le].height,Le,Ee,Re[le].data):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+le,0,tt,Re[le].width,Re[le].height,0,Le,Ee,Re[le].data);for(let Se=0;Se<X.length;Se++){const it=X[Se].image[le].image;nt?I&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+le,Se+1,0,0,it.width,it.height,Le,Ee,it.data):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+le,Se+1,tt,it.width,it.height,0,Le,Ee,it.data)}}else{nt?I&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+le,0,0,0,Le,Ee,Re[le]):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+le,0,tt,Le,Ee,Re[le]);for(let Se=0;Se<X.length;Se++){const Oe=X[Se];nt?I&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+le,Se+1,0,0,Le,Ee,Oe.image[le]):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+le,Se+1,tt,Le,Ee,Oe.image[le])}}}g(A)&&p(i.TEXTURE_CUBE_MAP),J.__version=ie.version,A.onUpdate&&A.onUpdate(A)}G.__version=A.version}function Q(G,A,R,q,ie,J){const xe=r.convert(R.format,R.colorSpace),Ce=r.convert(R.type),ye=x(R.internalFormat,xe,Ce,R.colorSpace),me=n.get(A),ge=n.get(R);if(ge.__renderTarget=A,!me.__hasExternalTextures){const Re=Math.max(1,A.width>>J),Ue=Math.max(1,A.height>>J);ie===i.TEXTURE_3D||ie===i.TEXTURE_2D_ARRAY?t.texImage3D(ie,J,ye,Re,Ue,A.depth,0,xe,Ce,null):t.texImage2D(ie,J,ye,Re,Ue,0,xe,Ce,null)}t.bindFramebuffer(i.FRAMEBUFFER,G),qe(A)?a.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,q,ie,ge.__webglTexture,0,De(A)):(ie===i.TEXTURE_2D||ie>=i.TEXTURE_CUBE_MAP_POSITIVE_X&&ie<=i.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&i.framebufferTexture2D(i.FRAMEBUFFER,q,ie,ge.__webglTexture,J),t.bindFramebuffer(i.FRAMEBUFFER,null)}function O(G,A,R){if(i.bindRenderbuffer(i.RENDERBUFFER,G),A.depthBuffer){const q=A.depthTexture,ie=q&&q.isDepthTexture?q.type:null,J=v(A.stencilBuffer,ie),xe=A.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,Ce=De(A);qe(A)?a.renderbufferStorageMultisampleEXT(i.RENDERBUFFER,Ce,J,A.width,A.height):R?i.renderbufferStorageMultisample(i.RENDERBUFFER,Ce,J,A.width,A.height):i.renderbufferStorage(i.RENDERBUFFER,J,A.width,A.height),i.framebufferRenderbuffer(i.FRAMEBUFFER,xe,i.RENDERBUFFER,G)}else{const q=A.textures;for(let ie=0;ie<q.length;ie++){const J=q[ie],xe=r.convert(J.format,J.colorSpace),Ce=r.convert(J.type),ye=x(J.internalFormat,xe,Ce,J.colorSpace),me=De(A);R&&qe(A)===!1?i.renderbufferStorageMultisample(i.RENDERBUFFER,me,ye,A.width,A.height):qe(A)?a.renderbufferStorageMultisampleEXT(i.RENDERBUFFER,me,ye,A.width,A.height):i.renderbufferStorage(i.RENDERBUFFER,ye,A.width,A.height)}}i.bindRenderbuffer(i.RENDERBUFFER,null)}function oe(G,A){if(A&&A.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(i.FRAMEBUFFER,G),!(A.depthTexture&&A.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const q=n.get(A.depthTexture);q.__renderTarget=A,(!q.__webglTexture||A.depthTexture.image.width!==A.width||A.depthTexture.image.height!==A.height)&&(A.depthTexture.image.width=A.width,A.depthTexture.image.height=A.height,A.depthTexture.needsUpdate=!0),L(A.depthTexture,0);const ie=q.__webglTexture,J=De(A);if(A.depthTexture.format===Fu)qe(A)?a.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.TEXTURE_2D,ie,0,J):i.framebufferTexture2D(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.TEXTURE_2D,ie,0);else if(A.depthTexture.format===rh)qe(A)?a.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.TEXTURE_2D,ie,0,J):i.framebufferTexture2D(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.TEXTURE_2D,ie,0);else throw new Error("Unknown depthTexture format")}function Ne(G){const A=n.get(G),R=G.isWebGLCubeRenderTarget===!0;if(A.__boundDepthTexture!==G.depthTexture){const q=G.depthTexture;if(A.__depthDisposeCallback&&A.__depthDisposeCallback(),q){const ie=()=>{delete A.__boundDepthTexture,delete A.__depthDisposeCallback,q.removeEventListener("dispose",ie)};q.addEventListener("dispose",ie),A.__depthDisposeCallback=ie}A.__boundDepthTexture=q}if(G.depthTexture&&!A.__autoAllocateDepthBuffer){if(R)throw new Error("target.depthTexture not supported in Cube render targets");oe(A.__webglFramebuffer,G)}else if(R){A.__webglDepthbuffer=[];for(let q=0;q<6;q++)if(t.bindFramebuffer(i.FRAMEBUFFER,A.__webglFramebuffer[q]),A.__webglDepthbuffer[q]===void 0)A.__webglDepthbuffer[q]=i.createRenderbuffer(),O(A.__webglDepthbuffer[q],G,!1);else{const ie=G.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,J=A.__webglDepthbuffer[q];i.bindRenderbuffer(i.RENDERBUFFER,J),i.framebufferRenderbuffer(i.FRAMEBUFFER,ie,i.RENDERBUFFER,J)}}else if(t.bindFramebuffer(i.FRAMEBUFFER,A.__webglFramebuffer),A.__webglDepthbuffer===void 0)A.__webglDepthbuffer=i.createRenderbuffer(),O(A.__webglDepthbuffer,G,!1);else{const q=G.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,ie=A.__webglDepthbuffer;i.bindRenderbuffer(i.RENDERBUFFER,ie),i.framebufferRenderbuffer(i.FRAMEBUFFER,q,i.RENDERBUFFER,ie)}t.bindFramebuffer(i.FRAMEBUFFER,null)}function _e(G,A,R){const q=n.get(G);A!==void 0&&Q(q.__webglFramebuffer,G,G.texture,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,0),R!==void 0&&Ne(G)}function Fe(G){const A=G.texture,R=n.get(G),q=n.get(A);G.addEventListener("dispose",E);const ie=G.textures,J=G.isWebGLCubeRenderTarget===!0,xe=ie.length>1;if(xe||(q.__webglTexture===void 0&&(q.__webglTexture=i.createTexture()),q.__version=A.version,o.memory.textures++),J){R.__webglFramebuffer=[];for(let Ce=0;Ce<6;Ce++)if(A.mipmaps&&A.mipmaps.length>0){R.__webglFramebuffer[Ce]=[];for(let ye=0;ye<A.mipmaps.length;ye++)R.__webglFramebuffer[Ce][ye]=i.createFramebuffer()}else R.__webglFramebuffer[Ce]=i.createFramebuffer()}else{if(A.mipmaps&&A.mipmaps.length>0){R.__webglFramebuffer=[];for(let Ce=0;Ce<A.mipmaps.length;Ce++)R.__webglFramebuffer[Ce]=i.createFramebuffer()}else R.__webglFramebuffer=i.createFramebuffer();if(xe)for(let Ce=0,ye=ie.length;Ce<ye;Ce++){const me=n.get(ie[Ce]);me.__webglTexture===void 0&&(me.__webglTexture=i.createTexture(),o.memory.textures++)}if(G.samples>0&&qe(G)===!1){R.__webglMultisampledFramebuffer=i.createFramebuffer(),R.__webglColorRenderbuffer=[],t.bindFramebuffer(i.FRAMEBUFFER,R.__webglMultisampledFramebuffer);for(let Ce=0;Ce<ie.length;Ce++){const ye=ie[Ce];R.__webglColorRenderbuffer[Ce]=i.createRenderbuffer(),i.bindRenderbuffer(i.RENDERBUFFER,R.__webglColorRenderbuffer[Ce]);const me=r.convert(ye.format,ye.colorSpace),ge=r.convert(ye.type),Re=x(ye.internalFormat,me,ge,ye.colorSpace,G.isXRRenderTarget===!0),Ue=De(G);i.renderbufferStorageMultisample(i.RENDERBUFFER,Ue,Re,G.width,G.height),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+Ce,i.RENDERBUFFER,R.__webglColorRenderbuffer[Ce])}i.bindRenderbuffer(i.RENDERBUFFER,null),G.depthBuffer&&(R.__webglDepthRenderbuffer=i.createRenderbuffer(),O(R.__webglDepthRenderbuffer,G,!0)),t.bindFramebuffer(i.FRAMEBUFFER,null)}}if(J){t.bindTexture(i.TEXTURE_CUBE_MAP,q.__webglTexture),ne(i.TEXTURE_CUBE_MAP,A);for(let Ce=0;Ce<6;Ce++)if(A.mipmaps&&A.mipmaps.length>0)for(let ye=0;ye<A.mipmaps.length;ye++)Q(R.__webglFramebuffer[Ce][ye],G,A,i.COLOR_ATTACHMENT0,i.TEXTURE_CUBE_MAP_POSITIVE_X+Ce,ye);else Q(R.__webglFramebuffer[Ce],G,A,i.COLOR_ATTACHMENT0,i.TEXTURE_CUBE_MAP_POSITIVE_X+Ce,0);g(A)&&p(i.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(xe){for(let Ce=0,ye=ie.length;Ce<ye;Ce++){const me=ie[Ce],ge=n.get(me);t.bindTexture(i.TEXTURE_2D,ge.__webglTexture),ne(i.TEXTURE_2D,me),Q(R.__webglFramebuffer,G,me,i.COLOR_ATTACHMENT0+Ce,i.TEXTURE_2D,0),g(me)&&p(i.TEXTURE_2D)}t.unbindTexture()}else{let Ce=i.TEXTURE_2D;if((G.isWebGL3DRenderTarget||G.isWebGLArrayRenderTarget)&&(Ce=G.isWebGL3DRenderTarget?i.TEXTURE_3D:i.TEXTURE_2D_ARRAY),t.bindTexture(Ce,q.__webglTexture),ne(Ce,A),A.mipmaps&&A.mipmaps.length>0)for(let ye=0;ye<A.mipmaps.length;ye++)Q(R.__webglFramebuffer[ye],G,A,i.COLOR_ATTACHMENT0,Ce,ye);else Q(R.__webglFramebuffer,G,A,i.COLOR_ATTACHMENT0,Ce,0);g(A)&&p(Ce),t.unbindTexture()}G.depthBuffer&&Ne(G)}function Xe(G){const A=G.textures;for(let R=0,q=A.length;R<q;R++){const ie=A[R];if(g(ie)){const J=y(G),xe=n.get(ie).__webglTexture;t.bindTexture(J,xe),p(J),t.unbindTexture()}}}const $e=[],j=[];function Ie(G){if(G.samples>0){if(qe(G)===!1){const A=G.textures,R=G.width,q=G.height;let ie=i.COLOR_BUFFER_BIT;const J=G.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,xe=n.get(G),Ce=A.length>1;if(Ce)for(let ye=0;ye<A.length;ye++)t.bindFramebuffer(i.FRAMEBUFFER,xe.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+ye,i.RENDERBUFFER,null),t.bindFramebuffer(i.FRAMEBUFFER,xe.__webglFramebuffer),i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0+ye,i.TEXTURE_2D,null,0);t.bindFramebuffer(i.READ_FRAMEBUFFER,xe.__webglMultisampledFramebuffer),t.bindFramebuffer(i.DRAW_FRAMEBUFFER,xe.__webglFramebuffer);for(let ye=0;ye<A.length;ye++){if(G.resolveDepthBuffer&&(G.depthBuffer&&(ie|=i.DEPTH_BUFFER_BIT),G.stencilBuffer&&G.resolveStencilBuffer&&(ie|=i.STENCIL_BUFFER_BIT)),Ce){i.framebufferRenderbuffer(i.READ_FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.RENDERBUFFER,xe.__webglColorRenderbuffer[ye]);const me=n.get(A[ye]).__webglTexture;i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,me,0)}i.blitFramebuffer(0,0,R,q,0,0,R,q,ie,i.NEAREST),c===!0&&($e.length=0,j.length=0,$e.push(i.COLOR_ATTACHMENT0+ye),G.depthBuffer&&G.resolveDepthBuffer===!1&&($e.push(J),j.push(J),i.invalidateFramebuffer(i.DRAW_FRAMEBUFFER,j)),i.invalidateFramebuffer(i.READ_FRAMEBUFFER,$e))}if(t.bindFramebuffer(i.READ_FRAMEBUFFER,null),t.bindFramebuffer(i.DRAW_FRAMEBUFFER,null),Ce)for(let ye=0;ye<A.length;ye++){t.bindFramebuffer(i.FRAMEBUFFER,xe.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+ye,i.RENDERBUFFER,xe.__webglColorRenderbuffer[ye]);const me=n.get(A[ye]).__webglTexture;t.bindFramebuffer(i.FRAMEBUFFER,xe.__webglFramebuffer),i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0+ye,i.TEXTURE_2D,me,0)}t.bindFramebuffer(i.DRAW_FRAMEBUFFER,xe.__webglMultisampledFramebuffer)}else if(G.depthBuffer&&G.resolveDepthBuffer===!1&&c){const A=G.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT;i.invalidateFramebuffer(i.DRAW_FRAMEBUFFER,[A])}}}function De(G){return Math.min(s.maxSamples,G.samples)}function qe(G){const A=n.get(G);return G.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&A.__useRenderToTexture!==!1}function Be(G){const A=o.render.frame;u.get(G)!==A&&(u.set(G,A),G.update())}function He(G,A){const R=G.colorSpace,q=G.format,ie=G.type;return G.isCompressedTexture===!0||G.isVideoTexture===!0||R!==Ch&&R!==Aa&&(zt.getTransfer(R)===Jt?(q!==sr||ie!==$o)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",R)),A}function ze(G){return typeof HTMLImageElement<"u"&&G instanceof HTMLImageElement?(l.width=G.naturalWidth||G.width,l.height=G.naturalHeight||G.height):typeof VideoFrame<"u"&&G instanceof VideoFrame?(l.width=G.displayWidth,l.height=G.displayHeight):(l.width=G.width,l.height=G.height),l}this.allocateTextureUnit=P,this.resetTextureUnits=D,this.setTexture2D=L,this.setTexture2DArray=U,this.setTexture3D=B,this.setTextureCube=k,this.rebindTextures=_e,this.setupRenderTarget=Fe,this.updateRenderTargetMipmap=Xe,this.updateMultisampleRenderTarget=Ie,this.setupDepthRenderbuffer=Ne,this.setupFrameBufferTexture=Q,this.useMultisampledRTT=qe}function h9(i,e){function t(n,s=Aa){let r;const o=zt.getTransfer(s);if(n===$o)return i.UNSIGNED_BYTE;if(n===xb)return i.UNSIGNED_SHORT_4_4_4_4;if(n===yb)return i.UNSIGNED_SHORT_5_5_5_1;if(n===AN)return i.UNSIGNED_INT_5_9_9_9_REV;if(n===EN)return i.BYTE;if(n===wN)return i.SHORT;if(n===sf)return i.UNSIGNED_SHORT;if(n===vb)return i.INT;if(n===Jc)return i.UNSIGNED_INT;if(n===No)return i.FLOAT;if(n===Ah)return i.HALF_FLOAT;if(n===CN)return i.ALPHA;if(n===RN)return i.RGB;if(n===sr)return i.RGBA;if(n===NN)return i.LUMINANCE;if(n===PN)return i.LUMINANCE_ALPHA;if(n===Fu)return i.DEPTH_COMPONENT;if(n===rh)return i.DEPTH_STENCIL;if(n===DN)return i.RED;if(n===Sb)return i.RED_INTEGER;if(n===LN)return i.RG;if(n===bb)return i.RG_INTEGER;if(n===Mb)return i.RGBA_INTEGER;if(n===Om||n===Bm||n===km||n===zm)if(o===Jt)if(r=e.get("WEBGL_compressed_texture_s3tc_srgb"),r!==null){if(n===Om)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===Bm)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===km)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===zm)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(r=e.get("WEBGL_compressed_texture_s3tc"),r!==null){if(n===Om)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===Bm)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===km)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===zm)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===ey||n===ty||n===ny||n===iy)if(r=e.get("WEBGL_compressed_texture_pvrtc"),r!==null){if(n===ey)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===ty)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===ny)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===iy)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===sy||n===ry||n===oy)if(r=e.get("WEBGL_compressed_texture_etc"),r!==null){if(n===sy||n===ry)return o===Jt?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(n===oy)return o===Jt?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===ay||n===cy||n===ly||n===uy||n===hy||n===dy||n===fy||n===py||n===my||n===gy||n===_y||n===vy||n===xy||n===yy)if(r=e.get("WEBGL_compressed_texture_astc"),r!==null){if(n===ay)return o===Jt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===cy)return o===Jt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===ly)return o===Jt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===uy)return o===Jt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===hy)return o===Jt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===dy)return o===Jt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===fy)return o===Jt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===py)return o===Jt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===my)return o===Jt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===gy)return o===Jt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===_y)return o===Jt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===vy)return o===Jt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===xy)return o===Jt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===yy)return o===Jt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===Gm||n===Sy||n===by)if(r=e.get("EXT_texture_compression_bptc"),r!==null){if(n===Gm)return o===Jt?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===Sy)return r.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===by)return r.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===IN||n===My||n===Ty||n===Ey)if(r=e.get("EXT_texture_compression_rgtc"),r!==null){if(n===Gm)return r.COMPRESSED_RED_RGTC1_EXT;if(n===My)return r.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===Ty)return r.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===Ey)return r.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===sh?i.UNSIGNED_INT_24_8:i[n]!==void 0?i[n]:null}return{convert:t}}class d9 extends Cs{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}let Hp=class extends Is{constructor(){super(),this.isGroup=!0,this.type="Group"}};const f9={type:"move"};class Z0{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Hp,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Hp,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new he,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new he),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Hp,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new he,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new he),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let s=null,r=null,o=null;const a=this._targetRay,c=this._grip,l=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(l&&e.hand){o=!0;for(const _ of e.hand.values()){const g=t.getJointPose(_,n),p=this._getHandJoint(l,_);g!==null&&(p.matrix.fromArray(g.transform.matrix),p.matrix.decompose(p.position,p.rotation,p.scale),p.matrixWorldNeedsUpdate=!0,p.jointRadius=g.radius),p.visible=g!==null}const u=l.joints["index-finger-tip"],h=l.joints["thumb-tip"],d=u.position.distanceTo(h.position),f=.02,m=.005;l.inputState.pinching&&d>f+m?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&d<=f-m&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else c!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),r!==null&&(c.matrix.fromArray(r.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,r.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(r.linearVelocity)):c.hasLinearVelocity=!1,r.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(r.angularVelocity)):c.hasAngularVelocity=!1));a!==null&&(s=t.getPose(e.targetRaySpace,n),s===null&&r!==null&&(s=r),s!==null&&(a.matrix.fromArray(s.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,s.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(s.linearVelocity)):a.hasLinearVelocity=!1,s.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(s.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(f9)))}return a!==null&&(a.visible=s!==null),c!==null&&(c.visible=r!==null),l!==null&&(l.visible=o!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new Hp;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}const p9=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,m9=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class g9{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,n){if(this.texture===null){const s=new Sr,r=e.properties.get(s);r.__webglTexture=t.texture,(t.depthNear!=n.depthNear||t.depthFar!=n.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=s}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,n=new Ur({vertexShader:p9,fragmentShader:m9,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new rr(new __(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class _9 extends Za{constructor(e,t){super();const n=this;let s=null,r=1,o=null,a="local-floor",c=1,l=null,u=null,h=null,d=null,f=null,m=null;const _=new g9,g=t.getContextAttributes();let p=null,y=null;const x=[],v=[],S=new lt;let M=null;const E=new Cs;E.viewport=new Bn;const w=new Cs;w.viewport=new Bn;const b=[E,w],T=new d9;let C=null,D=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(V){let H=x[V];return H===void 0&&(H=new Z0,x[V]=H),H.getTargetRaySpace()},this.getControllerGrip=function(V){let H=x[V];return H===void 0&&(H=new Z0,x[V]=H),H.getGripSpace()},this.getHand=function(V){let H=x[V];return H===void 0&&(H=new Z0,x[V]=H),H.getHandSpace()};function P(V){const H=v.indexOf(V.inputSource);if(H===-1)return;const Q=x[H];Q!==void 0&&(Q.update(V.inputSource,V.frame,l||o),Q.dispatchEvent({type:V.type,data:V.inputSource}))}function N(){s.removeEventListener("select",P),s.removeEventListener("selectstart",P),s.removeEventListener("selectend",P),s.removeEventListener("squeeze",P),s.removeEventListener("squeezestart",P),s.removeEventListener("squeezeend",P),s.removeEventListener("end",N),s.removeEventListener("inputsourceschange",L);for(let V=0;V<x.length;V++){const H=v[V];H!==null&&(v[V]=null,x[V].disconnect(H))}C=null,D=null,_.reset(),e.setRenderTarget(p),f=null,d=null,h=null,s=null,y=null,te.stop(),n.isPresenting=!1,e.setPixelRatio(M),e.setSize(S.width,S.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(V){r=V,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(V){a=V,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||o},this.setReferenceSpace=function(V){l=V},this.getBaseLayer=function(){return d!==null?d:f},this.getBinding=function(){return h},this.getFrame=function(){return m},this.getSession=function(){return s},this.setSession=async function(V){if(s=V,s!==null){if(p=e.getRenderTarget(),s.addEventListener("select",P),s.addEventListener("selectstart",P),s.addEventListener("selectend",P),s.addEventListener("squeeze",P),s.addEventListener("squeezestart",P),s.addEventListener("squeezeend",P),s.addEventListener("end",N),s.addEventListener("inputsourceschange",L),g.xrCompatible!==!0&&await t.makeXRCompatible(),M=e.getPixelRatio(),e.getSize(S),s.renderState.layers===void 0){const H={antialias:g.antialias,alpha:!0,depth:g.depth,stencil:g.stencil,framebufferScaleFactor:r};f=new XRWebGLLayer(s,t,H),s.updateRenderState({baseLayer:f}),e.setPixelRatio(1),e.setSize(f.framebufferWidth,f.framebufferHeight,!1),y=new Wa(f.framebufferWidth,f.framebufferHeight,{format:sr,type:$o,colorSpace:e.outputColorSpace,stencilBuffer:g.stencil})}else{let H=null,Q=null,O=null;g.depth&&(O=g.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,H=g.stencil?rh:Fu,Q=g.stencil?sh:Jc);const oe={colorFormat:t.RGBA8,depthFormat:O,scaleFactor:r};h=new XRWebGLBinding(s,t),d=h.createProjectionLayer(oe),s.updateRenderState({layers:[d]}),e.setPixelRatio(1),e.setSize(d.textureWidth,d.textureHeight,!1),y=new Wa(d.textureWidth,d.textureHeight,{format:sr,type:$o,depthTexture:new eP(d.textureWidth,d.textureHeight,Q,void 0,void 0,void 0,void 0,void 0,void 0,H),stencilBuffer:g.stencil,colorSpace:e.outputColorSpace,samples:g.antialias?4:0,resolveDepthBuffer:d.ignoreDepthValues===!1})}y.isXRRenderTarget=!0,this.setFoveation(c),l=null,o=await s.requestReferenceSpace(a),te.setContext(s),te.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(s!==null)return s.environmentBlendMode},this.getDepthTexture=function(){return _.getDepthTexture()};function L(V){for(let H=0;H<V.removed.length;H++){const Q=V.removed[H],O=v.indexOf(Q);O>=0&&(v[O]=null,x[O].disconnect(Q))}for(let H=0;H<V.added.length;H++){const Q=V.added[H];let O=v.indexOf(Q);if(O===-1){for(let Ne=0;Ne<x.length;Ne++)if(Ne>=v.length){v.push(Q),O=Ne;break}else if(v[Ne]===null){v[Ne]=Q,O=Ne;break}if(O===-1)break}const oe=x[O];oe&&oe.connect(Q)}}const U=new he,B=new he;function k(V,H,Q){U.setFromMatrixPosition(H.matrixWorld),B.setFromMatrixPosition(Q.matrixWorld);const O=U.distanceTo(B),oe=H.projectionMatrix.elements,Ne=Q.projectionMatrix.elements,_e=oe[14]/(oe[10]-1),Fe=oe[14]/(oe[10]+1),Xe=(oe[9]+1)/oe[5],$e=(oe[9]-1)/oe[5],j=(oe[8]-1)/oe[0],Ie=(Ne[8]+1)/Ne[0],De=_e*j,qe=_e*Ie,Be=O/(-j+Ie),He=Be*-j;if(H.matrixWorld.decompose(V.position,V.quaternion,V.scale),V.translateX(He),V.translateZ(Be),V.matrixWorld.compose(V.position,V.quaternion,V.scale),V.matrixWorldInverse.copy(V.matrixWorld).invert(),oe[10]===-1)V.projectionMatrix.copy(H.projectionMatrix),V.projectionMatrixInverse.copy(H.projectionMatrixInverse);else{const ze=_e+Be,G=Fe+Be,A=De-He,R=qe+(O-He),q=Xe*Fe/G*ze,ie=$e*Fe/G*ze;V.projectionMatrix.makePerspective(A,R,q,ie,ze,G),V.projectionMatrixInverse.copy(V.projectionMatrix).invert()}}function $(V,H){H===null?V.matrixWorld.copy(V.matrix):V.matrixWorld.multiplyMatrices(H.matrixWorld,V.matrix),V.matrixWorldInverse.copy(V.matrixWorld).invert()}this.updateCamera=function(V){if(s===null)return;let H=V.near,Q=V.far;_.texture!==null&&(_.depthNear>0&&(H=_.depthNear),_.depthFar>0&&(Q=_.depthFar)),T.near=w.near=E.near=H,T.far=w.far=E.far=Q,(C!==T.near||D!==T.far)&&(s.updateRenderState({depthNear:T.near,depthFar:T.far}),C=T.near,D=T.far),E.layers.mask=V.layers.mask|2,w.layers.mask=V.layers.mask|4,T.layers.mask=E.layers.mask|w.layers.mask;const O=V.parent,oe=T.cameras;$(T,O);for(let Ne=0;Ne<oe.length;Ne++)$(oe[Ne],O);oe.length===2?k(T,E,w):T.projectionMatrix.copy(E.projectionMatrix),z(V,T,O)};function z(V,H,Q){Q===null?V.matrix.copy(H.matrixWorld):(V.matrix.copy(Q.matrixWorld),V.matrix.invert(),V.matrix.multiply(H.matrixWorld)),V.matrix.decompose(V.position,V.quaternion,V.scale),V.updateMatrixWorld(!0),V.projectionMatrix.copy(H.projectionMatrix),V.projectionMatrixInverse.copy(H.projectionMatrixInverse),V.isPerspectiveCamera&&(V.fov=rf*2*Math.atan(1/V.projectionMatrix.elements[5]),V.zoom=1)}this.getCamera=function(){return T},this.getFoveation=function(){if(!(d===null&&f===null))return c},this.setFoveation=function(V){c=V,d!==null&&(d.fixedFoveation=V),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=V)},this.hasDepthSensing=function(){return _.texture!==null},this.getDepthSensingMesh=function(){return _.getMesh(T)};let Y=null;function ne(V,H){if(u=H.getViewerPose(l||o),m=H,u!==null){const Q=u.views;f!==null&&(e.setRenderTargetFramebuffer(y,f.framebuffer),e.setRenderTarget(y));let O=!1;Q.length!==T.cameras.length&&(T.cameras.length=0,O=!0);for(let Ne=0;Ne<Q.length;Ne++){const _e=Q[Ne];let Fe=null;if(f!==null)Fe=f.getViewport(_e);else{const $e=h.getViewSubImage(d,_e);Fe=$e.viewport,Ne===0&&(e.setRenderTargetTextures(y,$e.colorTexture,d.ignoreDepthValues?void 0:$e.depthStencilTexture),e.setRenderTarget(y))}let Xe=b[Ne];Xe===void 0&&(Xe=new Cs,Xe.layers.enable(Ne),Xe.viewport=new Bn,b[Ne]=Xe),Xe.matrix.fromArray(_e.transform.matrix),Xe.matrix.decompose(Xe.position,Xe.quaternion,Xe.scale),Xe.projectionMatrix.fromArray(_e.projectionMatrix),Xe.projectionMatrixInverse.copy(Xe.projectionMatrix).invert(),Xe.viewport.set(Fe.x,Fe.y,Fe.width,Fe.height),Ne===0&&(T.matrix.copy(Xe.matrix),T.matrix.decompose(T.position,T.quaternion,T.scale)),O===!0&&T.cameras.push(Xe)}const oe=s.enabledFeatures;if(oe&&oe.includes("depth-sensing")){const Ne=h.getDepthInformation(Q[0]);Ne&&Ne.isValid&&Ne.texture&&_.init(e,Ne,s.renderState)}}for(let Q=0;Q<x.length;Q++){const O=v[Q],oe=x[Q];O!==null&&oe!==void 0&&oe.update(O,H,l||o)}Y&&Y(V,H),H.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:H}),m=null}const te=new JN;te.setAnimationLoop(ne),this.setAnimationLoop=function(V){Y=V},this.dispose=function(){}}}const hc=new el,v9=new Cn;function x9(i,e){function t(g,p){g.matrixAutoUpdate===!0&&g.updateMatrix(),p.value.copy(g.matrix)}function n(g,p){p.color.getRGB(g.fogColor.value,YN(i)),p.isFog?(g.fogNear.value=p.near,g.fogFar.value=p.far):p.isFogExp2&&(g.fogDensity.value=p.density)}function s(g,p,y,x,v){p.isMeshBasicMaterial||p.isMeshLambertMaterial?r(g,p):p.isMeshToonMaterial?(r(g,p),h(g,p)):p.isMeshPhongMaterial?(r(g,p),u(g,p)):p.isMeshStandardMaterial?(r(g,p),d(g,p),p.isMeshPhysicalMaterial&&f(g,p,v)):p.isMeshMatcapMaterial?(r(g,p),m(g,p)):p.isMeshDepthMaterial?r(g,p):p.isMeshDistanceMaterial?(r(g,p),_(g,p)):p.isMeshNormalMaterial?r(g,p):p.isLineBasicMaterial?(o(g,p),p.isLineDashedMaterial&&a(g,p)):p.isPointsMaterial?c(g,p,y,x):p.isSpriteMaterial?l(g,p):p.isShadowMaterial?(g.color.value.copy(p.color),g.opacity.value=p.opacity):p.isShaderMaterial&&(p.uniformsNeedUpdate=!1)}function r(g,p){g.opacity.value=p.opacity,p.color&&g.diffuse.value.copy(p.color),p.emissive&&g.emissive.value.copy(p.emissive).multiplyScalar(p.emissiveIntensity),p.map&&(g.map.value=p.map,t(p.map,g.mapTransform)),p.alphaMap&&(g.alphaMap.value=p.alphaMap,t(p.alphaMap,g.alphaMapTransform)),p.bumpMap&&(g.bumpMap.value=p.bumpMap,t(p.bumpMap,g.bumpMapTransform),g.bumpScale.value=p.bumpScale,p.side===Fi&&(g.bumpScale.value*=-1)),p.normalMap&&(g.normalMap.value=p.normalMap,t(p.normalMap,g.normalMapTransform),g.normalScale.value.copy(p.normalScale),p.side===Fi&&g.normalScale.value.negate()),p.displacementMap&&(g.displacementMap.value=p.displacementMap,t(p.displacementMap,g.displacementMapTransform),g.displacementScale.value=p.displacementScale,g.displacementBias.value=p.displacementBias),p.emissiveMap&&(g.emissiveMap.value=p.emissiveMap,t(p.emissiveMap,g.emissiveMapTransform)),p.specularMap&&(g.specularMap.value=p.specularMap,t(p.specularMap,g.specularMapTransform)),p.alphaTest>0&&(g.alphaTest.value=p.alphaTest);const y=e.get(p),x=y.envMap,v=y.envMapRotation;x&&(g.envMap.value=x,hc.copy(v),hc.x*=-1,hc.y*=-1,hc.z*=-1,x.isCubeTexture&&x.isRenderTargetTexture===!1&&(hc.y*=-1,hc.z*=-1),g.envMapRotation.value.setFromMatrix4(v9.makeRotationFromEuler(hc)),g.flipEnvMap.value=x.isCubeTexture&&x.isRenderTargetTexture===!1?-1:1,g.reflectivity.value=p.reflectivity,g.ior.value=p.ior,g.refractionRatio.value=p.refractionRatio),p.lightMap&&(g.lightMap.value=p.lightMap,g.lightMapIntensity.value=p.lightMapIntensity,t(p.lightMap,g.lightMapTransform)),p.aoMap&&(g.aoMap.value=p.aoMap,g.aoMapIntensity.value=p.aoMapIntensity,t(p.aoMap,g.aoMapTransform))}function o(g,p){g.diffuse.value.copy(p.color),g.opacity.value=p.opacity,p.map&&(g.map.value=p.map,t(p.map,g.mapTransform))}function a(g,p){g.dashSize.value=p.dashSize,g.totalSize.value=p.dashSize+p.gapSize,g.scale.value=p.scale}function c(g,p,y,x){g.diffuse.value.copy(p.color),g.opacity.value=p.opacity,g.size.value=p.size*y,g.scale.value=x*.5,p.map&&(g.map.value=p.map,t(p.map,g.uvTransform)),p.alphaMap&&(g.alphaMap.value=p.alphaMap,t(p.alphaMap,g.alphaMapTransform)),p.alphaTest>0&&(g.alphaTest.value=p.alphaTest)}function l(g,p){g.diffuse.value.copy(p.color),g.opacity.value=p.opacity,g.rotation.value=p.rotation,p.map&&(g.map.value=p.map,t(p.map,g.mapTransform)),p.alphaMap&&(g.alphaMap.value=p.alphaMap,t(p.alphaMap,g.alphaMapTransform)),p.alphaTest>0&&(g.alphaTest.value=p.alphaTest)}function u(g,p){g.specular.value.copy(p.specular),g.shininess.value=Math.max(p.shininess,1e-4)}function h(g,p){p.gradientMap&&(g.gradientMap.value=p.gradientMap)}function d(g,p){g.metalness.value=p.metalness,p.metalnessMap&&(g.metalnessMap.value=p.metalnessMap,t(p.metalnessMap,g.metalnessMapTransform)),g.roughness.value=p.roughness,p.roughnessMap&&(g.roughnessMap.value=p.roughnessMap,t(p.roughnessMap,g.roughnessMapTransform)),p.envMap&&(g.envMapIntensity.value=p.envMapIntensity)}function f(g,p,y){g.ior.value=p.ior,p.sheen>0&&(g.sheenColor.value.copy(p.sheenColor).multiplyScalar(p.sheen),g.sheenRoughness.value=p.sheenRoughness,p.sheenColorMap&&(g.sheenColorMap.value=p.sheenColorMap,t(p.sheenColorMap,g.sheenColorMapTransform)),p.sheenRoughnessMap&&(g.sheenRoughnessMap.value=p.sheenRoughnessMap,t(p.sheenRoughnessMap,g.sheenRoughnessMapTransform))),p.clearcoat>0&&(g.clearcoat.value=p.clearcoat,g.clearcoatRoughness.value=p.clearcoatRoughness,p.clearcoatMap&&(g.clearcoatMap.value=p.clearcoatMap,t(p.clearcoatMap,g.clearcoatMapTransform)),p.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=p.clearcoatRoughnessMap,t(p.clearcoatRoughnessMap,g.clearcoatRoughnessMapTransform)),p.clearcoatNormalMap&&(g.clearcoatNormalMap.value=p.clearcoatNormalMap,t(p.clearcoatNormalMap,g.clearcoatNormalMapTransform),g.clearcoatNormalScale.value.copy(p.clearcoatNormalScale),p.side===Fi&&g.clearcoatNormalScale.value.negate())),p.dispersion>0&&(g.dispersion.value=p.dispersion),p.iridescence>0&&(g.iridescence.value=p.iridescence,g.iridescenceIOR.value=p.iridescenceIOR,g.iridescenceThicknessMinimum.value=p.iridescenceThicknessRange[0],g.iridescenceThicknessMaximum.value=p.iridescenceThicknessRange[1],p.iridescenceMap&&(g.iridescenceMap.value=p.iridescenceMap,t(p.iridescenceMap,g.iridescenceMapTransform)),p.iridescenceThicknessMap&&(g.iridescenceThicknessMap.value=p.iridescenceThicknessMap,t(p.iridescenceThicknessMap,g.iridescenceThicknessMapTransform))),p.transmission>0&&(g.transmission.value=p.transmission,g.transmissionSamplerMap.value=y.texture,g.transmissionSamplerSize.value.set(y.width,y.height),p.transmissionMap&&(g.transmissionMap.value=p.transmissionMap,t(p.transmissionMap,g.transmissionMapTransform)),g.thickness.value=p.thickness,p.thicknessMap&&(g.thicknessMap.value=p.thicknessMap,t(p.thicknessMap,g.thicknessMapTransform)),g.attenuationDistance.value=p.attenuationDistance,g.attenuationColor.value.copy(p.attenuationColor)),p.anisotropy>0&&(g.anisotropyVector.value.set(p.anisotropy*Math.cos(p.anisotropyRotation),p.anisotropy*Math.sin(p.anisotropyRotation)),p.anisotropyMap&&(g.anisotropyMap.value=p.anisotropyMap,t(p.anisotropyMap,g.anisotropyMapTransform))),g.specularIntensity.value=p.specularIntensity,g.specularColor.value.copy(p.specularColor),p.specularColorMap&&(g.specularColorMap.value=p.specularColorMap,t(p.specularColorMap,g.specularColorMapTransform)),p.specularIntensityMap&&(g.specularIntensityMap.value=p.specularIntensityMap,t(p.specularIntensityMap,g.specularIntensityMapTransform))}function m(g,p){p.matcap&&(g.matcap.value=p.matcap)}function _(g,p){const y=e.get(p).light;g.referencePosition.value.setFromMatrixPosition(y.matrixWorld),g.nearDistance.value=y.shadow.camera.near,g.farDistance.value=y.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:s}}function y9(i,e,t,n){let s={},r={},o=[];const a=i.getParameter(i.MAX_UNIFORM_BUFFER_BINDINGS);function c(y,x){const v=x.program;n.uniformBlockBinding(y,v)}function l(y,x){let v=s[y.id];v===void 0&&(m(y),v=u(y),s[y.id]=v,y.addEventListener("dispose",g));const S=x.program;n.updateUBOMapping(y,S);const M=e.render.frame;r[y.id]!==M&&(d(y),r[y.id]=M)}function u(y){const x=h();y.__bindingPointIndex=x;const v=i.createBuffer(),S=y.__size,M=y.usage;return i.bindBuffer(i.UNIFORM_BUFFER,v),i.bufferData(i.UNIFORM_BUFFER,S,M),i.bindBuffer(i.UNIFORM_BUFFER,null),i.bindBufferBase(i.UNIFORM_BUFFER,x,v),v}function h(){for(let y=0;y<a;y++)if(o.indexOf(y)===-1)return o.push(y),y;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(y){const x=s[y.id],v=y.uniforms,S=y.__cache;i.bindBuffer(i.UNIFORM_BUFFER,x);for(let M=0,E=v.length;M<E;M++){const w=Array.isArray(v[M])?v[M]:[v[M]];for(let b=0,T=w.length;b<T;b++){const C=w[b];if(f(C,M,b,S)===!0){const D=C.__offset,P=Array.isArray(C.value)?C.value:[C.value];let N=0;for(let L=0;L<P.length;L++){const U=P[L],B=_(U);typeof U=="number"||typeof U=="boolean"?(C.__data[0]=U,i.bufferSubData(i.UNIFORM_BUFFER,D+N,C.__data)):U.isMatrix3?(C.__data[0]=U.elements[0],C.__data[1]=U.elements[1],C.__data[2]=U.elements[2],C.__data[3]=0,C.__data[4]=U.elements[3],C.__data[5]=U.elements[4],C.__data[6]=U.elements[5],C.__data[7]=0,C.__data[8]=U.elements[6],C.__data[9]=U.elements[7],C.__data[10]=U.elements[8],C.__data[11]=0):(U.toArray(C.__data,N),N+=B.storage/Float32Array.BYTES_PER_ELEMENT)}i.bufferSubData(i.UNIFORM_BUFFER,D,C.__data)}}}i.bindBuffer(i.UNIFORM_BUFFER,null)}function f(y,x,v,S){const M=y.value,E=x+"_"+v;if(S[E]===void 0)return typeof M=="number"||typeof M=="boolean"?S[E]=M:S[E]=M.clone(),!0;{const w=S[E];if(typeof M=="number"||typeof M=="boolean"){if(w!==M)return S[E]=M,!0}else if(w.equals(M)===!1)return w.copy(M),!0}return!1}function m(y){const x=y.uniforms;let v=0;const S=16;for(let E=0,w=x.length;E<w;E++){const b=Array.isArray(x[E])?x[E]:[x[E]];for(let T=0,C=b.length;T<C;T++){const D=b[T],P=Array.isArray(D.value)?D.value:[D.value];for(let N=0,L=P.length;N<L;N++){const U=P[N],B=_(U),k=v%S,$=k%B.boundary,z=k+$;v+=$,z!==0&&S-z<B.storage&&(v+=S-z),D.__data=new Float32Array(B.storage/Float32Array.BYTES_PER_ELEMENT),D.__offset=v,v+=B.storage}}}const M=v%S;return M>0&&(v+=S-M),y.__size=v,y.__cache={},this}function _(y){const x={boundary:0,storage:0};return typeof y=="number"||typeof y=="boolean"?(x.boundary=4,x.storage=4):y.isVector2?(x.boundary=8,x.storage=8):y.isVector3||y.isColor?(x.boundary=16,x.storage=12):y.isVector4?(x.boundary=16,x.storage=16):y.isMatrix3?(x.boundary=48,x.storage=48):y.isMatrix4?(x.boundary=64,x.storage=64):y.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",y),x}function g(y){const x=y.target;x.removeEventListener("dispose",g);const v=o.indexOf(x.__bindingPointIndex);o.splice(v,1),i.deleteBuffer(s[x.id]),delete s[x.id],delete r[x.id]}function p(){for(const y in s)i.deleteBuffer(s[y]);o=[],s={},r={}}return{bind:c,update:l,dispose:p}}class S9{constructor(e={}){const{canvas:t=uW(),context:n=null,depth:s=!0,stencil:r=!1,alpha:o=!1,antialias:a=!1,premultipliedAlpha:c=!0,preserveDrawingBuffer:l=!1,powerPreference:u="default",failIfMajorPerformanceCaveat:h=!1,reverseDepthBuffer:d=!1}=e;this.isWebGLRenderer=!0;let f;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");f=n.getContextAttributes().alpha}else f=o;const m=new Uint32Array(4),_=new Int32Array(4);let g=null,p=null;const y=[],x=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=ps,this.toneMapping=Ia,this.toneMappingExposure=1;const v=this;let S=!1,M=0,E=0,w=null,b=-1,T=null;const C=new Bn,D=new Bn;let P=null;const N=new Xt(0);let L=0,U=t.width,B=t.height,k=1,$=null,z=null;const Y=new Bn(0,0,U,B),ne=new Bn(0,0,U,B);let te=!1;const V=new Nb;let H=!1,Q=!1;const O=new Cn,oe=new Cn,Ne=new he,_e=new Bn,Fe={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let Xe=!1;function $e(){return w===null?k:1}let j=n;function Ie(F,Z){return t.getContext(F,Z)}try{const F={alpha:!0,depth:s,stencil:r,antialias:a,premultipliedAlpha:c,preserveDrawingBuffer:l,powerPreference:u,failIfMajorPerformanceCaveat:h};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${f_}`),t.addEventListener("webglcontextlost",le,!1),t.addEventListener("webglcontextrestored",Se,!1),t.addEventListener("webglcontextcreationerror",Oe,!1),j===null){const Z="webgl2";if(j=Ie(Z,F),j===null)throw Ie(Z)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(F){throw console.error("THREE.WebGLRenderer: "+F.message),F}let De,qe,Be,He,ze,G,A,R,q,ie,J,xe,Ce,ye,me,ge,Re,Ue,Le,Ee,tt,nt,mt,I;function ee(){De=new w6(j),De.init(),nt=new h9(j,De),qe=new y6(j,De,e,nt),Be=new c9(j,De),qe.reverseDepthBuffer&&d&&Be.buffers.depth.setReversed(!0),He=new R6(j),ze=new Xq,G=new u9(j,De,Be,ze,qe,nt,He),A=new b6(v),R=new E6(v),q=new UW(j),mt=new v6(j,q),ie=new A6(j,q,He,mt),J=new P6(j,ie,q,He),Le=new N6(j,qe,G),ge=new S6(ze),xe=new qq(v,A,R,De,qe,mt,ge),Ce=new x9(v,ze),ye=new Yq,me=new t9(De),Ue=new _6(v,A,R,Be,J,f,c),Re=new o9(v,J,qe),I=new y9(j,He,qe,Be),Ee=new x6(j,De,He),tt=new C6(j,De,He),He.programs=xe.programs,v.capabilities=qe,v.extensions=De,v.properties=ze,v.renderLists=ye,v.shadowMap=Re,v.state=Be,v.info=He}ee();const X=new _9(v,j);this.xr=X,this.getContext=function(){return j},this.getContextAttributes=function(){return j.getContextAttributes()},this.forceContextLoss=function(){const F=De.get("WEBGL_lose_context");F&&F.loseContext()},this.forceContextRestore=function(){const F=De.get("WEBGL_lose_context");F&&F.restoreContext()},this.getPixelRatio=function(){return k},this.setPixelRatio=function(F){F!==void 0&&(k=F,this.setSize(U,B,!1))},this.getSize=function(F){return F.set(U,B)},this.setSize=function(F,Z,ce=!0){if(X.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}U=F,B=Z,t.width=Math.floor(F*k),t.height=Math.floor(Z*k),ce===!0&&(t.style.width=F+"px",t.style.height=Z+"px"),this.setViewport(0,0,F,Z)},this.getDrawingBufferSize=function(F){return F.set(U*k,B*k).floor()},this.setDrawingBufferSize=function(F,Z,ce){U=F,B=Z,k=ce,t.width=Math.floor(F*ce),t.height=Math.floor(Z*ce),this.setViewport(0,0,F,Z)},this.getCurrentViewport=function(F){return F.copy(C)},this.getViewport=function(F){return F.copy(Y)},this.setViewport=function(F,Z,ce,ue){F.isVector4?Y.set(F.x,F.y,F.z,F.w):Y.set(F,Z,ce,ue),Be.viewport(C.copy(Y).multiplyScalar(k).round())},this.getScissor=function(F){return F.copy(ne)},this.setScissor=function(F,Z,ce,ue){F.isVector4?ne.set(F.x,F.y,F.z,F.w):ne.set(F,Z,ce,ue),Be.scissor(D.copy(ne).multiplyScalar(k).round())},this.getScissorTest=function(){return te},this.setScissorTest=function(F){Be.setScissorTest(te=F)},this.setOpaqueSort=function(F){$=F},this.setTransparentSort=function(F){z=F},this.getClearColor=function(F){return F.copy(Ue.getClearColor())},this.setClearColor=function(){Ue.setClearColor.apply(Ue,arguments)},this.getClearAlpha=function(){return Ue.getClearAlpha()},this.setClearAlpha=function(){Ue.setClearAlpha.apply(Ue,arguments)},this.clear=function(F=!0,Z=!0,ce=!0){let ue=0;if(F){let se=!1;if(w!==null){const ke=w.texture.format;se=ke===Mb||ke===bb||ke===Sb}if(se){const ke=w.texture.type,Ye=ke===$o||ke===Jc||ke===sf||ke===sh||ke===xb||ke===yb,je=Ue.getClearColor(),Ge=Ue.getClearAlpha(),gt=je.r,rt=je.g,st=je.b;Ye?(m[0]=gt,m[1]=rt,m[2]=st,m[3]=Ge,j.clearBufferuiv(j.COLOR,0,m)):(_[0]=gt,_[1]=rt,_[2]=st,_[3]=Ge,j.clearBufferiv(j.COLOR,0,_))}else ue|=j.COLOR_BUFFER_BIT}Z&&(ue|=j.DEPTH_BUFFER_BIT),ce&&(ue|=j.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),j.clear(ue)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",le,!1),t.removeEventListener("webglcontextrestored",Se,!1),t.removeEventListener("webglcontextcreationerror",Oe,!1),ye.dispose(),me.dispose(),ze.dispose(),A.dispose(),R.dispose(),J.dispose(),mt.dispose(),I.dispose(),xe.dispose(),X.dispose(),X.removeEventListener("sessionstart",nc),X.removeEventListener("sessionend",zh),Xr.stop()};function le(F){F.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),S=!0}function Se(){console.log("THREE.WebGLRenderer: Context Restored."),S=!1;const F=He.autoReset,Z=Re.enabled,ce=Re.autoUpdate,ue=Re.needsUpdate,se=Re.type;ee(),He.autoReset=F,Re.enabled=Z,Re.autoUpdate=ce,Re.needsUpdate=ue,Re.type=se}function Oe(F){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",F.statusMessage)}function it(F){const Z=F.target;Z.removeEventListener("dispose",it),Ct(Z)}function Ct(F){an(F),ze.remove(F)}function an(F){const Z=ze.get(F).programs;Z!==void 0&&(Z.forEach(function(ce){xe.releaseProgram(ce)}),F.isShaderMaterial&&xe.releaseShaderCache(F))}this.renderBufferDirect=function(F,Z,ce,ue,se,ke){Z===null&&(Z=Fe);const Ye=se.isMesh&&se.matrixWorld.determinant()<0,je=ft(F,Z,ce,ue,se);Be.setMaterial(ue,Ye);let Ge=ce.index,gt=1;if(ue.wireframe===!0){if(Ge=ie.getWireframeAttribute(ce),Ge===void 0)return;gt=2}const rt=ce.drawRange,st=ce.attributes.position;let Ut=rt.start*gt,Gt=(rt.start+rt.count)*gt;ke!==null&&(Ut=Math.max(Ut,ke.start*gt),Gt=Math.min(Gt,(ke.start+ke.count)*gt)),Ge!==null?(Ut=Math.max(Ut,0),Gt=Math.min(Gt,Ge.count)):st!=null&&(Ut=Math.max(Ut,0),Gt=Math.min(Gt,st.count));const Qt=Gt-Ut;if(Qt<0||Qt===1/0)return;mt.setup(se,ue,je,ce,Ge);let jt,Pt=Ee;if(Ge!==null&&(jt=q.get(Ge),Pt=tt,Pt.setIndex(jt)),se.isMesh)ue.wireframe===!0?(Be.setLineWidth(ue.wireframeLinewidth*$e()),Pt.setMode(j.LINES)):Pt.setMode(j.TRIANGLES);else if(se.isLine){let ot=ue.linewidth;ot===void 0&&(ot=1),Be.setLineWidth(ot*$e()),se.isLineSegments?Pt.setMode(j.LINES):se.isLineLoop?Pt.setMode(j.LINE_LOOP):Pt.setMode(j.LINE_STRIP)}else se.isPoints?Pt.setMode(j.POINTS):se.isSprite&&Pt.setMode(j.TRIANGLES);if(se.isBatchedMesh)if(se._multiDrawInstances!==null)Pt.renderMultiDrawInstances(se._multiDrawStarts,se._multiDrawCounts,se._multiDrawCount,se._multiDrawInstances);else if(De.get("WEBGL_multi_draw"))Pt.renderMultiDraw(se._multiDrawStarts,se._multiDrawCounts,se._multiDrawCount);else{const ot=se._multiDrawStarts,xn=se._multiDrawCounts,Ot=se._multiDrawCount,ts=Ge?q.get(Ge).bytesPerElement:1,jr=ze.get(ue).currentProgram.getUniforms();for(let ns=0;ns<Ot;ns++)jr.setValue(j,"_gl_DrawID",ns),Pt.render(ot[ns]/ts,xn[ns])}else if(se.isInstancedMesh)Pt.renderInstances(Ut,Qt,se.count);else if(ce.isInstancedBufferGeometry){const ot=ce._maxInstanceCount!==void 0?ce._maxInstanceCount:1/0,xn=Math.min(ce.instanceCount,ot);Pt.renderInstances(Ut,Qt,xn)}else Pt.render(Ut,Qt)};function dt(F,Z,ce){F.transparent===!0&&F.side===To&&F.forceSinglePass===!1?(F.side=Fi,F.needsUpdate=!0,de(F,Z,ce),F.side=Ha,F.needsUpdate=!0,de(F,Z,ce),F.side=To):de(F,Z,ce)}this.compile=function(F,Z,ce=null){ce===null&&(ce=F),p=me.get(ce),p.init(Z),x.push(p),ce.traverseVisible(function(se){se.isLight&&se.layers.test(Z.layers)&&(p.pushLight(se),se.castShadow&&p.pushShadow(se))}),F!==ce&&F.traverseVisible(function(se){se.isLight&&se.layers.test(Z.layers)&&(p.pushLight(se),se.castShadow&&p.pushShadow(se))}),p.setupLights();const ue=new Set;return F.traverse(function(se){if(!(se.isMesh||se.isPoints||se.isLine||se.isSprite))return;const ke=se.material;if(ke)if(Array.isArray(ke))for(let Ye=0;Ye<ke.length;Ye++){const je=ke[Ye];dt(je,ce,se),ue.add(je)}else dt(ke,ce,se),ue.add(ke)}),x.pop(),p=null,ue},this.compileAsync=function(F,Z,ce=null){const ue=this.compile(F,Z,ce);return new Promise(se=>{function ke(){if(ue.forEach(function(Ye){ze.get(Ye).currentProgram.isReady()&&ue.delete(Ye)}),ue.size===0){se(F);return}setTimeout(ke,10)}De.get("KHR_parallel_shader_compile")!==null?ke():setTimeout(ke,10)})};let dn=null;function Nn(F){dn&&dn(F)}function nc(){Xr.stop()}function zh(){Xr.start()}const Xr=new JN;Xr.setAnimationLoop(Nn),typeof self<"u"&&Xr.setContext(self),this.setAnimationLoop=function(F){dn=F,X.setAnimationLoop(F),F===null?Xr.stop():Xr.start()},X.addEventListener("sessionstart",nc),X.addEventListener("sessionend",zh),this.render=function(F,Z){if(Z!==void 0&&Z.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(S===!0)return;if(F.matrixWorldAutoUpdate===!0&&F.updateMatrixWorld(),Z.parent===null&&Z.matrixWorldAutoUpdate===!0&&Z.updateMatrixWorld(),X.enabled===!0&&X.isPresenting===!0&&(X.cameraAutoUpdate===!0&&X.updateCamera(Z),Z=X.getCamera()),F.isScene===!0&&F.onBeforeRender(v,F,Z,w),p=me.get(F,x.length),p.init(Z),x.push(p),oe.multiplyMatrices(Z.projectionMatrix,Z.matrixWorldInverse),V.setFromProjectionMatrix(oe),Q=this.localClippingEnabled,H=ge.init(this.clippingPlanes,Q),g=ye.get(F,y.length),g.init(),y.push(g),X.enabled===!0&&X.isPresenting===!0){const ke=v.xr.getDepthSensingMesh();ke!==null&&Gh(ke,Z,-1/0,v.sortObjects)}Gh(F,Z,0,v.sortObjects),g.finish(),v.sortObjects===!0&&g.sort($,z),Xe=X.enabled===!1||X.isPresenting===!1||X.hasDepthSensing()===!1,Xe&&Ue.addToRenderList(g,F),this.info.render.frame++,H===!0&&ge.beginShadows();const ce=p.state.shadowsArray;Re.render(ce,F,Z),H===!0&&ge.endShadows(),this.info.autoReset===!0&&this.info.reset();const ue=g.opaque,se=g.transmissive;if(p.setupLights(),Z.isArrayCamera){const ke=Z.cameras;if(se.length>0)for(let Ye=0,je=ke.length;Ye<je;Ye++){const Ge=ke[Ye];W(ue,se,F,Ge)}Xe&&Ue.render(F);for(let Ye=0,je=ke.length;Ye<je;Ye++){const Ge=ke[Ye];Xf(g,F,Ge,Ge.viewport)}}else se.length>0&&W(ue,se,F,Z),Xe&&Ue.render(F),Xf(g,F,Z);w!==null&&(G.updateMultisampleRenderTarget(w),G.updateRenderTargetMipmap(w)),F.isScene===!0&&F.onAfterRender(v,F,Z),mt.resetDefaultState(),b=-1,T=null,x.pop(),x.length>0?(p=x[x.length-1],H===!0&&ge.setGlobalState(v.clippingPlanes,p.state.camera)):p=null,y.pop(),y.length>0?g=y[y.length-1]:g=null};function Gh(F,Z,ce,ue){if(F.visible===!1)return;if(F.layers.test(Z.layers)){if(F.isGroup)ce=F.renderOrder;else if(F.isLOD)F.autoUpdate===!0&&F.update(Z);else if(F.isLight)p.pushLight(F),F.castShadow&&p.pushShadow(F);else if(F.isSprite){if(!F.frustumCulled||V.intersectsSprite(F)){ue&&_e.setFromMatrixPosition(F.matrixWorld).applyMatrix4(oe);const Ye=J.update(F),je=F.material;je.visible&&g.push(F,Ye,je,ce,_e.z,null)}}else if((F.isMesh||F.isLine||F.isPoints)&&(!F.frustumCulled||V.intersectsObject(F))){const Ye=J.update(F),je=F.material;if(ue&&(F.boundingSphere!==void 0?(F.boundingSphere===null&&F.computeBoundingSphere(),_e.copy(F.boundingSphere.center)):(Ye.boundingSphere===null&&Ye.computeBoundingSphere(),_e.copy(Ye.boundingSphere.center)),_e.applyMatrix4(F.matrixWorld).applyMatrix4(oe)),Array.isArray(je)){const Ge=Ye.groups;for(let gt=0,rt=Ge.length;gt<rt;gt++){const st=Ge[gt],Ut=je[st.materialIndex];Ut&&Ut.visible&&g.push(F,Ye,Ut,ce,_e.z,st)}}else je.visible&&g.push(F,Ye,je,ce,_e.z,null)}}const ke=F.children;for(let Ye=0,je=ke.length;Ye<je;Ye++)Gh(ke[Ye],Z,ce,ue)}function Xf(F,Z,ce,ue){const se=F.opaque,ke=F.transmissive,Ye=F.transparent;p.setupLightsView(ce),H===!0&&ge.setGlobalState(v.clippingPlanes,ce),ue&&Be.viewport(C.copy(ue)),se.length>0&&pe(se,Z,ce),ke.length>0&&pe(ke,Z,ce),Ye.length>0&&pe(Ye,Z,ce),Be.buffers.depth.setTest(!0),Be.buffers.depth.setMask(!0),Be.buffers.color.setMask(!0),Be.setPolygonOffset(!1)}function W(F,Z,ce,ue){if((ce.isScene===!0?ce.overrideMaterial:null)!==null)return;p.state.transmissionRenderTarget[ue.id]===void 0&&(p.state.transmissionRenderTarget[ue.id]=new Wa(1,1,{generateMipmaps:!0,type:De.has("EXT_color_buffer_half_float")||De.has("EXT_color_buffer_float")?Ah:$o,minFilter:Uc,samples:4,stencilBuffer:r,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:zt.workingColorSpace}));const ke=p.state.transmissionRenderTarget[ue.id],Ye=ue.viewport||C;ke.setSize(Ye.z,Ye.w);const je=v.getRenderTarget();v.setRenderTarget(ke),v.getClearColor(N),L=v.getClearAlpha(),L<1&&v.setClearColor(16777215,.5),v.clear(),Xe&&Ue.render(ce);const Ge=v.toneMapping;v.toneMapping=Ia;const gt=ue.viewport;if(ue.viewport!==void 0&&(ue.viewport=void 0),p.setupLightsView(ue),H===!0&&ge.setGlobalState(v.clippingPlanes,ue),pe(F,ce,ue),G.updateMultisampleRenderTarget(ke),G.updateRenderTargetMipmap(ke),De.has("WEBGL_multisampled_render_to_texture")===!1){let rt=!1;for(let st=0,Ut=Z.length;st<Ut;st++){const Gt=Z[st],Qt=Gt.object,jt=Gt.geometry,Pt=Gt.material,ot=Gt.group;if(Pt.side===To&&Qt.layers.test(ue.layers)){const xn=Pt.side;Pt.side=Fi,Pt.needsUpdate=!0,be(Qt,ce,ue,jt,Pt,ot),Pt.side=xn,Pt.needsUpdate=!0,rt=!0}}rt===!0&&(G.updateMultisampleRenderTarget(ke),G.updateRenderTargetMipmap(ke))}v.setRenderTarget(je),v.setClearColor(N,L),gt!==void 0&&(ue.viewport=gt),v.toneMapping=Ge}function pe(F,Z,ce){const ue=Z.isScene===!0?Z.overrideMaterial:null;for(let se=0,ke=F.length;se<ke;se++){const Ye=F[se],je=Ye.object,Ge=Ye.geometry,gt=ue===null?Ye.material:ue,rt=Ye.group;je.layers.test(ce.layers)&&be(je,Z,ce,Ge,gt,rt)}}function be(F,Z,ce,ue,se,ke){F.onBeforeRender(v,Z,ce,ue,se,ke),F.modelViewMatrix.multiplyMatrices(ce.matrixWorldInverse,F.matrixWorld),F.normalMatrix.getNormalMatrix(F.modelViewMatrix),se.onBeforeRender(v,Z,ce,ue,F,ke),se.transparent===!0&&se.side===To&&se.forceSinglePass===!1?(se.side=Fi,se.needsUpdate=!0,v.renderBufferDirect(ce,Z,ue,se,F,ke),se.side=Ha,se.needsUpdate=!0,v.renderBufferDirect(ce,Z,ue,se,F,ke),se.side=To):v.renderBufferDirect(ce,Z,ue,se,F,ke),F.onAfterRender(v,Z,ce,ue,se,ke)}function de(F,Z,ce){Z.isScene!==!0&&(Z=Fe);const ue=ze.get(F),se=p.state.lights,ke=p.state.shadowsArray,Ye=se.state.version,je=xe.getParameters(F,se.state,ke,Z,ce),Ge=xe.getProgramCacheKey(je);let gt=ue.programs;ue.environment=F.isMeshStandardMaterial?Z.environment:null,ue.fog=Z.fog,ue.envMap=(F.isMeshStandardMaterial?R:A).get(F.envMap||ue.environment),ue.envMapRotation=ue.environment!==null&&F.envMap===null?Z.environmentRotation:F.envMapRotation,gt===void 0&&(F.addEventListener("dispose",it),gt=new Map,ue.programs=gt);let rt=gt.get(Ge);if(rt!==void 0){if(ue.currentProgram===rt&&ue.lightsStateVersion===Ye)return ct(F,je),rt}else je.uniforms=xe.getUniforms(F),F.onBeforeCompile(je,v),rt=xe.acquireProgram(je,Ge),gt.set(Ge,rt),ue.uniforms=je.uniforms;const st=ue.uniforms;return(!F.isShaderMaterial&&!F.isRawShaderMaterial||F.clipping===!0)&&(st.clippingPlanes=ge.uniform),ct(F,je),ue.needsLights=Mt(F),ue.lightsStateVersion=Ye,ue.needsLights&&(st.ambientLightColor.value=se.state.ambient,st.lightProbe.value=se.state.probe,st.directionalLights.value=se.state.directional,st.directionalLightShadows.value=se.state.directionalShadow,st.spotLights.value=se.state.spot,st.spotLightShadows.value=se.state.spotShadow,st.rectAreaLights.value=se.state.rectArea,st.ltc_1.value=se.state.rectAreaLTC1,st.ltc_2.value=se.state.rectAreaLTC2,st.pointLights.value=se.state.point,st.pointLightShadows.value=se.state.pointShadow,st.hemisphereLights.value=se.state.hemi,st.directionalShadowMap.value=se.state.directionalShadowMap,st.directionalShadowMatrix.value=se.state.directionalShadowMatrix,st.spotShadowMap.value=se.state.spotShadowMap,st.spotLightMatrix.value=se.state.spotLightMatrix,st.spotLightMap.value=se.state.spotLightMap,st.pointShadowMap.value=se.state.pointShadowMap,st.pointShadowMatrix.value=se.state.pointShadowMatrix),ue.currentProgram=rt,ue.uniformsList=null,rt}function we(F){if(F.uniformsList===null){const Z=F.currentProgram.getUniforms();F.uniformsList=Wm.seqWithValue(Z.seq,F.uniforms)}return F.uniformsList}function ct(F,Z){const ce=ze.get(F);ce.outputColorSpace=Z.outputColorSpace,ce.batching=Z.batching,ce.batchingColor=Z.batchingColor,ce.instancing=Z.instancing,ce.instancingColor=Z.instancingColor,ce.instancingMorph=Z.instancingMorph,ce.skinning=Z.skinning,ce.morphTargets=Z.morphTargets,ce.morphNormals=Z.morphNormals,ce.morphColors=Z.morphColors,ce.morphTargetsCount=Z.morphTargetsCount,ce.numClippingPlanes=Z.numClippingPlanes,ce.numIntersection=Z.numClipIntersection,ce.vertexAlphas=Z.vertexAlphas,ce.vertexTangents=Z.vertexTangents,ce.toneMapping=Z.toneMapping}function ft(F,Z,ce,ue,se){Z.isScene!==!0&&(Z=Fe),G.resetTextureUnits();const ke=Z.fog,Ye=ue.isMeshStandardMaterial?Z.environment:null,je=w===null?v.outputColorSpace:w.isXRRenderTarget===!0?w.texture.colorSpace:Ch,Ge=(ue.isMeshStandardMaterial?R:A).get(ue.envMap||Ye),gt=ue.vertexColors===!0&&!!ce.attributes.color&&ce.attributes.color.itemSize===4,rt=!!ce.attributes.tangent&&(!!ue.normalMap||ue.anisotropy>0),st=!!ce.morphAttributes.position,Ut=!!ce.morphAttributes.normal,Gt=!!ce.morphAttributes.color;let Qt=Ia;ue.toneMapped&&(w===null||w.isXRRenderTarget===!0)&&(Qt=v.toneMapping);const jt=ce.morphAttributes.position||ce.morphAttributes.normal||ce.morphAttributes.color,Pt=jt!==void 0?jt.length:0,ot=ze.get(ue),xn=p.state.lights;if(H===!0&&(Q===!0||F!==T)){const Ss=F===T&&ue.id===b;ge.setState(ue,F,Ss)}let Ot=!1;ue.version===ot.__version?(ot.needsLights&&ot.lightsStateVersion!==xn.state.version||ot.outputColorSpace!==je||se.isBatchedMesh&&ot.batching===!1||!se.isBatchedMesh&&ot.batching===!0||se.isBatchedMesh&&ot.batchingColor===!0&&se.colorTexture===null||se.isBatchedMesh&&ot.batchingColor===!1&&se.colorTexture!==null||se.isInstancedMesh&&ot.instancing===!1||!se.isInstancedMesh&&ot.instancing===!0||se.isSkinnedMesh&&ot.skinning===!1||!se.isSkinnedMesh&&ot.skinning===!0||se.isInstancedMesh&&ot.instancingColor===!0&&se.instanceColor===null||se.isInstancedMesh&&ot.instancingColor===!1&&se.instanceColor!==null||se.isInstancedMesh&&ot.instancingMorph===!0&&se.morphTexture===null||se.isInstancedMesh&&ot.instancingMorph===!1&&se.morphTexture!==null||ot.envMap!==Ge||ue.fog===!0&&ot.fog!==ke||ot.numClippingPlanes!==void 0&&(ot.numClippingPlanes!==ge.numPlanes||ot.numIntersection!==ge.numIntersection)||ot.vertexAlphas!==gt||ot.vertexTangents!==rt||ot.morphTargets!==st||ot.morphNormals!==Ut||ot.morphColors!==Gt||ot.toneMapping!==Qt||ot.morphTargetsCount!==Pt)&&(Ot=!0):(Ot=!0,ot.__version=ue.version);let ts=ot.currentProgram;Ot===!0&&(ts=de(ue,Z,se));let jr=!1,ns=!1,Vh=!1;const cn=ts.getUniforms(),br=ot.uniforms;if(Be.useProgram(ts.program)&&(jr=!0,ns=!0,Vh=!0),ue.id!==b&&(b=ue.id,ns=!0),jr||T!==F){Be.buffers.depth.getReversed()?(O.copy(F.projectionMatrix),dW(O),fW(O),cn.setValue(j,"projectionMatrix",O)):cn.setValue(j,"projectionMatrix",F.projectionMatrix),cn.setValue(j,"viewMatrix",F.matrixWorldInverse);const ta=cn.map.cameraPosition;ta!==void 0&&ta.setValue(j,Ne.setFromMatrixPosition(F.matrixWorld)),qe.logarithmicDepthBuffer&&cn.setValue(j,"logDepthBufFC",2/(Math.log(F.far+1)/Math.LN2)),(ue.isMeshPhongMaterial||ue.isMeshToonMaterial||ue.isMeshLambertMaterial||ue.isMeshBasicMaterial||ue.isMeshStandardMaterial||ue.isShaderMaterial)&&cn.setValue(j,"isOrthographic",F.isOrthographicCamera===!0),T!==F&&(T=F,ns=!0,Vh=!0)}if(se.isSkinnedMesh){cn.setOptional(j,se,"bindMatrix"),cn.setOptional(j,se,"bindMatrixInverse");const Ss=se.skeleton;Ss&&(Ss.boneTexture===null&&Ss.computeBoneTexture(),cn.setValue(j,"boneTexture",Ss.boneTexture,G))}se.isBatchedMesh&&(cn.setOptional(j,se,"batchingTexture"),cn.setValue(j,"batchingTexture",se._matricesTexture,G),cn.setOptional(j,se,"batchingIdTexture"),cn.setValue(j,"batchingIdTexture",se._indirectTexture,G),cn.setOptional(j,se,"batchingColorTexture"),se._colorsTexture!==null&&cn.setValue(j,"batchingColorTexture",se._colorsTexture,G));const Hh=ce.morphAttributes;if((Hh.position!==void 0||Hh.normal!==void 0||Hh.color!==void 0)&&Le.update(se,ce,ts),(ns||ot.receiveShadow!==se.receiveShadow)&&(ot.receiveShadow=se.receiveShadow,cn.setValue(j,"receiveShadow",se.receiveShadow)),ue.isMeshGouraudMaterial&&ue.envMap!==null&&(br.envMap.value=Ge,br.flipEnvMap.value=Ge.isCubeTexture&&Ge.isRenderTargetTexture===!1?-1:1),ue.isMeshStandardMaterial&&ue.envMap===null&&Z.environment!==null&&(br.envMapIntensity.value=Z.environmentIntensity),ns&&(cn.setValue(j,"toneMappingExposure",v.toneMappingExposure),ot.needsLights&&_t(br,Vh),ke&&ue.fog===!0&&Ce.refreshFogUniforms(br,ke),Ce.refreshMaterialUniforms(br,ue,k,B,p.state.transmissionRenderTarget[F.id]),Wm.upload(j,we(ot),br,G)),ue.isShaderMaterial&&ue.uniformsNeedUpdate===!0&&(Wm.upload(j,we(ot),br,G),ue.uniformsNeedUpdate=!1),ue.isSpriteMaterial&&cn.setValue(j,"center",se.center),cn.setValue(j,"modelViewMatrix",se.modelViewMatrix),cn.setValue(j,"normalMatrix",se.normalMatrix),cn.setValue(j,"modelMatrix",se.matrixWorld),ue.isShaderMaterial||ue.isRawShaderMaterial){const Ss=ue.uniformsGroups;for(let ta=0,na=Ss.length;ta<na;ta++){const $M=Ss[ta];I.update($M,ts),I.bind($M,ts)}}return ts}function _t(F,Z){F.ambientLightColor.needsUpdate=Z,F.lightProbe.needsUpdate=Z,F.directionalLights.needsUpdate=Z,F.directionalLightShadows.needsUpdate=Z,F.pointLights.needsUpdate=Z,F.pointLightShadows.needsUpdate=Z,F.spotLights.needsUpdate=Z,F.spotLightShadows.needsUpdate=Z,F.rectAreaLights.needsUpdate=Z,F.hemisphereLights.needsUpdate=Z}function Mt(F){return F.isMeshLambertMaterial||F.isMeshToonMaterial||F.isMeshPhongMaterial||F.isMeshStandardMaterial||F.isShadowMaterial||F.isShaderMaterial&&F.lights===!0}this.getActiveCubeFace=function(){return M},this.getActiveMipmapLevel=function(){return E},this.getRenderTarget=function(){return w},this.setRenderTargetTextures=function(F,Z,ce){ze.get(F.texture).__webglTexture=Z,ze.get(F.depthTexture).__webglTexture=ce;const ue=ze.get(F);ue.__hasExternalTextures=!0,ue.__autoAllocateDepthBuffer=ce===void 0,ue.__autoAllocateDepthBuffer||De.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),ue.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(F,Z){const ce=ze.get(F);ce.__webglFramebuffer=Z,ce.__useDefaultFramebuffer=Z===void 0},this.setRenderTarget=function(F,Z=0,ce=0){w=F,M=Z,E=ce;let ue=!0,se=null,ke=!1,Ye=!1;if(F){const Ge=ze.get(F);if(Ge.__useDefaultFramebuffer!==void 0)Be.bindFramebuffer(j.FRAMEBUFFER,null),ue=!1;else if(Ge.__webglFramebuffer===void 0)G.setupRenderTarget(F);else if(Ge.__hasExternalTextures)G.rebindTextures(F,ze.get(F.texture).__webglTexture,ze.get(F.depthTexture).__webglTexture);else if(F.depthBuffer){const st=F.depthTexture;if(Ge.__boundDepthTexture!==st){if(st!==null&&ze.has(st)&&(F.width!==st.image.width||F.height!==st.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");G.setupDepthRenderbuffer(F)}}const gt=F.texture;(gt.isData3DTexture||gt.isDataArrayTexture||gt.isCompressedArrayTexture)&&(Ye=!0);const rt=ze.get(F).__webglFramebuffer;F.isWebGLCubeRenderTarget?(Array.isArray(rt[Z])?se=rt[Z][ce]:se=rt[Z],ke=!0):F.samples>0&&G.useMultisampledRTT(F)===!1?se=ze.get(F).__webglMultisampledFramebuffer:Array.isArray(rt)?se=rt[ce]:se=rt,C.copy(F.viewport),D.copy(F.scissor),P=F.scissorTest}else C.copy(Y).multiplyScalar(k).floor(),D.copy(ne).multiplyScalar(k).floor(),P=te;if(Be.bindFramebuffer(j.FRAMEBUFFER,se)&&ue&&Be.drawBuffers(F,se),Be.viewport(C),Be.scissor(D),Be.setScissorTest(P),ke){const Ge=ze.get(F.texture);j.framebufferTexture2D(j.FRAMEBUFFER,j.COLOR_ATTACHMENT0,j.TEXTURE_CUBE_MAP_POSITIVE_X+Z,Ge.__webglTexture,ce)}else if(Ye){const Ge=ze.get(F.texture),gt=Z||0;j.framebufferTextureLayer(j.FRAMEBUFFER,j.COLOR_ATTACHMENT0,Ge.__webglTexture,ce||0,gt)}b=-1},this.readRenderTargetPixels=function(F,Z,ce,ue,se,ke,Ye){if(!(F&&F.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let je=ze.get(F).__webglFramebuffer;if(F.isWebGLCubeRenderTarget&&Ye!==void 0&&(je=je[Ye]),je){Be.bindFramebuffer(j.FRAMEBUFFER,je);try{const Ge=F.texture,gt=Ge.format,rt=Ge.type;if(!qe.textureFormatReadable(gt)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!qe.textureTypeReadable(rt)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}Z>=0&&Z<=F.width-ue&&ce>=0&&ce<=F.height-se&&j.readPixels(Z,ce,ue,se,nt.convert(gt),nt.convert(rt),ke)}finally{const Ge=w!==null?ze.get(w).__webglFramebuffer:null;Be.bindFramebuffer(j.FRAMEBUFFER,Ge)}}},this.readRenderTargetPixelsAsync=async function(F,Z,ce,ue,se,ke,Ye){if(!(F&&F.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let je=ze.get(F).__webglFramebuffer;if(F.isWebGLCubeRenderTarget&&Ye!==void 0&&(je=je[Ye]),je){const Ge=F.texture,gt=Ge.format,rt=Ge.type;if(!qe.textureFormatReadable(gt))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!qe.textureTypeReadable(rt))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");if(Z>=0&&Z<=F.width-ue&&ce>=0&&ce<=F.height-se){Be.bindFramebuffer(j.FRAMEBUFFER,je);const st=j.createBuffer();j.bindBuffer(j.PIXEL_PACK_BUFFER,st),j.bufferData(j.PIXEL_PACK_BUFFER,ke.byteLength,j.STREAM_READ),j.readPixels(Z,ce,ue,se,nt.convert(gt),nt.convert(rt),0);const Ut=w!==null?ze.get(w).__webglFramebuffer:null;Be.bindFramebuffer(j.FRAMEBUFFER,Ut);const Gt=j.fenceSync(j.SYNC_GPU_COMMANDS_COMPLETE,0);return j.flush(),await hW(j,Gt,4),j.bindBuffer(j.PIXEL_PACK_BUFFER,st),j.getBufferSubData(j.PIXEL_PACK_BUFFER,0,ke),j.deleteBuffer(st),j.deleteSync(Gt),ke}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")}},this.copyFramebufferToTexture=function(F,Z=null,ce=0){F.isTexture!==!0&&(xd("WebGLRenderer: copyFramebufferToTexture function signature has changed."),Z=arguments[0]||null,F=arguments[1]);const ue=Math.pow(2,-ce),se=Math.floor(F.image.width*ue),ke=Math.floor(F.image.height*ue),Ye=Z!==null?Z.x:0,je=Z!==null?Z.y:0;G.setTexture2D(F,0),j.copyTexSubImage2D(j.TEXTURE_2D,ce,0,0,Ye,je,se,ke),Be.unbindTexture()},this.copyTextureToTexture=function(F,Z,ce=null,ue=null,se=0){F.isTexture!==!0&&(xd("WebGLRenderer: copyTextureToTexture function signature has changed."),ue=arguments[0]||null,F=arguments[1],Z=arguments[2],se=arguments[3]||0,ce=null);let ke,Ye,je,Ge,gt,rt,st,Ut,Gt;const Qt=F.isCompressedTexture?F.mipmaps[se]:F.image;ce!==null?(ke=ce.max.x-ce.min.x,Ye=ce.max.y-ce.min.y,je=ce.isBox3?ce.max.z-ce.min.z:1,Ge=ce.min.x,gt=ce.min.y,rt=ce.isBox3?ce.min.z:0):(ke=Qt.width,Ye=Qt.height,je=Qt.depth||1,Ge=0,gt=0,rt=0),ue!==null?(st=ue.x,Ut=ue.y,Gt=ue.z):(st=0,Ut=0,Gt=0);const jt=nt.convert(Z.format),Pt=nt.convert(Z.type);let ot;Z.isData3DTexture?(G.setTexture3D(Z,0),ot=j.TEXTURE_3D):Z.isDataArrayTexture||Z.isCompressedArrayTexture?(G.setTexture2DArray(Z,0),ot=j.TEXTURE_2D_ARRAY):(G.setTexture2D(Z,0),ot=j.TEXTURE_2D),j.pixelStorei(j.UNPACK_FLIP_Y_WEBGL,Z.flipY),j.pixelStorei(j.UNPACK_PREMULTIPLY_ALPHA_WEBGL,Z.premultiplyAlpha),j.pixelStorei(j.UNPACK_ALIGNMENT,Z.unpackAlignment);const xn=j.getParameter(j.UNPACK_ROW_LENGTH),Ot=j.getParameter(j.UNPACK_IMAGE_HEIGHT),ts=j.getParameter(j.UNPACK_SKIP_PIXELS),jr=j.getParameter(j.UNPACK_SKIP_ROWS),ns=j.getParameter(j.UNPACK_SKIP_IMAGES);j.pixelStorei(j.UNPACK_ROW_LENGTH,Qt.width),j.pixelStorei(j.UNPACK_IMAGE_HEIGHT,Qt.height),j.pixelStorei(j.UNPACK_SKIP_PIXELS,Ge),j.pixelStorei(j.UNPACK_SKIP_ROWS,gt),j.pixelStorei(j.UNPACK_SKIP_IMAGES,rt);const Vh=F.isDataArrayTexture||F.isData3DTexture,cn=Z.isDataArrayTexture||Z.isData3DTexture;if(F.isRenderTargetTexture||F.isDepthTexture){const br=ze.get(F),Hh=ze.get(Z),Ss=ze.get(br.__renderTarget),ta=ze.get(Hh.__renderTarget);Be.bindFramebuffer(j.READ_FRAMEBUFFER,Ss.__webglFramebuffer),Be.bindFramebuffer(j.DRAW_FRAMEBUFFER,ta.__webglFramebuffer);for(let na=0;na<je;na++)Vh&&j.framebufferTextureLayer(j.READ_FRAMEBUFFER,j.COLOR_ATTACHMENT0,ze.get(F).__webglTexture,se,rt+na),F.isDepthTexture?(cn&&j.framebufferTextureLayer(j.DRAW_FRAMEBUFFER,j.COLOR_ATTACHMENT0,ze.get(Z).__webglTexture,se,Gt+na),j.blitFramebuffer(Ge,gt,ke,Ye,st,Ut,ke,Ye,j.DEPTH_BUFFER_BIT,j.NEAREST)):cn?j.copyTexSubImage3D(ot,se,st,Ut,Gt+na,Ge,gt,ke,Ye):j.copyTexSubImage2D(ot,se,st,Ut,Gt+na,Ge,gt,ke,Ye);Be.bindFramebuffer(j.READ_FRAMEBUFFER,null),Be.bindFramebuffer(j.DRAW_FRAMEBUFFER,null)}else cn?F.isDataTexture||F.isData3DTexture?j.texSubImage3D(ot,se,st,Ut,Gt,ke,Ye,je,jt,Pt,Qt.data):Z.isCompressedArrayTexture?j.compressedTexSubImage3D(ot,se,st,Ut,Gt,ke,Ye,je,jt,Qt.data):j.texSubImage3D(ot,se,st,Ut,Gt,ke,Ye,je,jt,Pt,Qt):F.isDataTexture?j.texSubImage2D(j.TEXTURE_2D,se,st,Ut,ke,Ye,jt,Pt,Qt.data):F.isCompressedTexture?j.compressedTexSubImage2D(j.TEXTURE_2D,se,st,Ut,Qt.width,Qt.height,jt,Qt.data):j.texSubImage2D(j.TEXTURE_2D,se,st,Ut,ke,Ye,jt,Pt,Qt);j.pixelStorei(j.UNPACK_ROW_LENGTH,xn),j.pixelStorei(j.UNPACK_IMAGE_HEIGHT,Ot),j.pixelStorei(j.UNPACK_SKIP_PIXELS,ts),j.pixelStorei(j.UNPACK_SKIP_ROWS,jr),j.pixelStorei(j.UNPACK_SKIP_IMAGES,ns),se===0&&Z.generateMipmaps&&j.generateMipmap(ot),Be.unbindTexture()},this.copyTextureToTexture3D=function(F,Z,ce=null,ue=null,se=0){return F.isTexture!==!0&&(xd("WebGLRenderer: copyTextureToTexture3D function signature has changed."),ce=arguments[0]||null,ue=arguments[1]||null,F=arguments[2],Z=arguments[3],se=arguments[4]||0),xd('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(F,Z,ce,ue,se)},this.initRenderTarget=function(F){ze.get(F).__webglFramebuffer===void 0&&G.setupRenderTarget(F)},this.initTexture=function(F){F.isCubeTexture?G.setTextureCube(F,0):F.isData3DTexture?G.setTexture3D(F,0):F.isDataArrayTexture||F.isCompressedArrayTexture?G.setTexture2DArray(F,0):G.setTexture2D(F,0),Be.unbindTexture()},this.resetState=function(){M=0,E=0,w=null,Be.reset(),mt.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Po}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorspace=zt._getDrawingBufferColorSpace(e),t.unpackColorSpace=zt._getUnpackColorSpace()}}let b9=class extends Is{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new el,this.environmentIntensity=1,this.environmentRotation=new el,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}},M9=class rP extends dl{constructor(e=1,t=32,n=16,s=0,r=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:s,phiLength:r,thetaStart:o,thetaLength:a},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const c=Math.min(o+a,Math.PI);let l=0;const u=[],h=new he,d=new he,f=[],m=[],_=[],g=[];for(let p=0;p<=n;p++){const y=[],x=p/n;let v=0;p===0&&o===0?v=.5/t:p===n&&c===Math.PI&&(v=-.5/t);for(let S=0;S<=t;S++){const M=S/t;h.x=-e*Math.cos(s+M*r)*Math.sin(o+x*a),h.y=e*Math.cos(o+x*a),h.z=e*Math.sin(s+M*r)*Math.sin(o+x*a),m.push(h.x,h.y,h.z),d.copy(h).normalize(),_.push(d.x,d.y,d.z),g.push(M+v,1-x),y.push(l++)}u.push(y)}for(let p=0;p<n;p++)for(let y=0;y<t;y++){const x=u[p][y+1],v=u[p][y],S=u[p+1][y],M=u[p+1][y+1];(p!==0||o>0)&&f.push(x,v,M),(p!==n-1||c<Math.PI)&&f.push(v,S,M)}this.setIndex(f),this.setAttribute("position",new Ds(m,3)),this.setAttribute("normal",new Ds(_,3)),this.setAttribute("uv",new Ds(g,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new rP(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}};const Dw={enabled:!1,files:{},add:function(i,e){this.enabled!==!1&&(this.files[i]=e)},get:function(i){if(this.enabled!==!1)return this.files[i]},remove:function(i){delete this.files[i]},clear:function(){this.files={}}};class T9{constructor(e,t,n){const s=this;let r=!1,o=0,a=0,c;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(u){a++,r===!1&&s.onStart!==void 0&&s.onStart(u,o,a),r=!0},this.itemEnd=function(u){o++,s.onProgress!==void 0&&s.onProgress(u,o,a),o===a&&(r=!1,s.onLoad!==void 0&&s.onLoad())},this.itemError=function(u){s.onError!==void 0&&s.onError(u)},this.resolveURL=function(u){return c?c(u):u},this.setURLModifier=function(u){return c=u,this},this.addHandler=function(u,h){return l.push(u,h),this},this.removeHandler=function(u){const h=l.indexOf(u);return h!==-1&&l.splice(h,2),this},this.getHandler=function(u){for(let h=0,d=l.length;h<d;h+=2){const f=l[h],m=l[h+1];if(f.global&&(f.lastIndex=0),f.test(u))return m}return null}}}const E9=new T9;class Lb{constructor(e){this.manager=e!==void 0?e:E9,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(s,r){n.load(e,s,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}Lb.DEFAULT_MATERIAL_NAME="__DEFAULT";class w9 extends Lb{constructor(e){super(e)}load(e,t,n,s){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,o=Dw.get(e);if(o!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(o),r.manager.itemEnd(e)},0),o;const a=of("img");function c(){u(),Dw.add(e,this),t&&t(this),r.manager.itemEnd(e)}function l(h){u(),s&&s(h),r.manager.itemError(e),r.manager.itemEnd(e)}function u(){a.removeEventListener("load",c,!1),a.removeEventListener("error",l,!1)}return a.addEventListener("load",c,!1),a.addEventListener("error",l,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),r.manager.itemStart(e),a.src=e,a}}class A9 extends Lb{constructor(e){super(e)}load(e,t,n,s){const r=new Sr,o=new w9(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(a){r.image=a,r.needsUpdate=!0,t!==void 0&&t(r)},n,s),r}}let oP=class extends Is{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Xt(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}};const K0=new Cn,Lw=new he,Iw=new he;let C9=class{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new lt(512,512),this.map=null,this.mapPass=null,this.matrix=new Cn,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Nb,this._frameExtents=new lt(1,1),this._viewportCount=1,this._viewports=[new Bn(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;Lw.setFromMatrixPosition(e.matrixWorld),t.position.copy(Lw),Iw.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Iw),t.updateMatrixWorld(),K0.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(K0),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(K0)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}},R9=class extends C9{constructor(){super(new Pb(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}},N9=class extends oP{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Is.DEFAULT_UP),this.updateMatrix(),this.target=new Is,this.shadow=new R9}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}},P9=class extends oP{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}};class aP{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Fw(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=Fw();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function Fw(){return performance.now()}const Uw=new Cn;class cP{constructor(e,t,n=0,s=1/0){this.ray=new wb(e,t),this.near=n,this.far=s,this.camera=null,this.layers=new Ab,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return Uw.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(Uw),this}intersectObject(e,t=!0,n=[]){return Ry(e,this,n,t),n.sort(Ow),n}intersectObjects(e,t=!0,n=[]){for(let s=0,r=e.length;s<r;s++)Ry(e[s],this,n,t);return n.sort(Ow),n}}function Ow(i,e){return i.distance-e.distance}function Ry(i,e,t,n){let s=!0;if(i.layers.test(e.layers)&&i.raycast(e,t)===!1&&(s=!1),s===!0&&n===!0){const r=i.children;for(let o=0,a=r.length;o<a;o++)Ry(r[o],e,t,!0)}}class Ny{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(yi(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class x_ extends Za{constructor(e,t=null){super(),this.object=e,this.domElement=t,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(){}disconnect(){}dispose(){}update(){}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:f_}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=f_);const Ou=new xo,Eo=new lt,lP=new he,Q0=new lt,$m=new lt,Tg=new he,Py=new he,uP=new Cn,hP=new he,dP=new he;let Wi=null,Tr=null;const wo=[],Fa={NONE:-1,PAN:0,ROTATE:1};class D9 extends x_{constructor(e,t,n=null){super(t,n),this.objects=e,this.recursive=!0,this.transformGroup=!1,this.rotateSpeed=1,this.raycaster=new cP,this.mouseButtons={LEFT:ei.PAN,MIDDLE:ei.PAN,RIGHT:ei.ROTATE},this.touches={ONE:Ro.PAN},this._onPointerMove=L9.bind(this),this._onPointerDown=I9.bind(this),this._onPointerCancel=F9.bind(this),this._onContextMenu=U9.bind(this),n!==null&&this.connect()}connect(){this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointerup",this._onPointerCancel),this.domElement.addEventListener("pointerleave",this._onPointerCancel),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointerup",this._onPointerCancel),this.domElement.removeEventListener("pointerleave",this._onPointerCancel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="auto",this.domElement.style.cursor=""}dispose(){this.disconnect()}_updatePointer(e){const t=this.domElement.getBoundingClientRect();Eo.x=(e.clientX-t.left)/t.width*2-1,Eo.y=-(e.clientY-t.top)/t.height*2+1}_updateState(e){let t;if(e.pointerType==="touch")t=this.touches.ONE;else switch(e.button){case 0:t=this.mouseButtons.LEFT;break;case 1:t=this.mouseButtons.MIDDLE;break;case 2:t=this.mouseButtons.RIGHT;break;default:t=null}switch(t){case ei.PAN:case Ro.PAN:this.state=Fa.PAN;break;case ei.ROTATE:case Ro.ROTATE:this.state=Fa.ROTATE;break;default:this.state=Fa.NONE}}getRaycaster(){return console.warn("THREE.DragControls: getRaycaster() has been deprecated. Use controls.raycaster instead."),this.raycaster}setObjects(e){console.warn("THREE.DragControls: setObjects() has been deprecated. Use controls.objects instead."),this.objects=e}getObjects(){return console.warn("THREE.DragControls: getObjects() has been deprecated. Use controls.objects instead."),this.objects}activate(){console.warn("THREE.DragControls: activate() has been renamed to connect()."),this.connect()}deactivate(){console.warn("THREE.DragControls: deactivate() has been renamed to disconnect()."),this.disconnect()}set mode(e){console.warn("THREE.DragControls: The .mode property has been removed. Define the type of transformation via the .mouseButtons or .touches properties.")}get mode(){console.warn("THREE.DragControls: The .mode property has been removed. Define the type of transformation via the .mouseButtons or .touches properties.")}}function L9(i){const e=this.object,t=this.domElement,n=this.raycaster;if(this.enabled!==!1){if(this._updatePointer(i),n.setFromCamera(Eo,e),Wi)this.state===Fa.PAN?n.ray.intersectPlane(Ou,Tg)&&Wi.position.copy(Tg.sub(lP).applyMatrix4(uP)):this.state===Fa.ROTATE&&(Q0.subVectors(Eo,$m).multiplyScalar(this.rotateSpeed),Wi.rotateOnWorldAxis(hP,Q0.x),Wi.rotateOnWorldAxis(dP.normalize(),-Q0.y)),this.dispatchEvent({type:"drag",object:Wi}),$m.copy(Eo);else if(i.pointerType==="mouse"||i.pointerType==="pen")if(wo.length=0,n.setFromCamera(Eo,e),n.intersectObjects(this.objects,this.recursive,wo),wo.length>0){const s=wo[0].object;Ou.setFromNormalAndCoplanarPoint(e.getWorldDirection(Ou.normal),Py.setFromMatrixPosition(s.matrixWorld)),Tr!==s&&Tr!==null&&(this.dispatchEvent({type:"hoveroff",object:Tr}),t.style.cursor="auto",Tr=null),Tr!==s&&(this.dispatchEvent({type:"hoveron",object:s}),t.style.cursor="pointer",Tr=s)}else Tr!==null&&(this.dispatchEvent({type:"hoveroff",object:Tr}),t.style.cursor="auto",Tr=null);$m.copy(Eo)}}function I9(i){const e=this.object,t=this.domElement,n=this.raycaster;this.enabled!==!1&&(this._updatePointer(i),this._updateState(i),wo.length=0,n.setFromCamera(Eo,e),n.intersectObjects(this.objects,this.recursive,wo),wo.length>0&&(this.transformGroup===!0?Wi=fP(wo[0].object):Wi=wo[0].object,Ou.setFromNormalAndCoplanarPoint(e.getWorldDirection(Ou.normal),Py.setFromMatrixPosition(Wi.matrixWorld)),n.ray.intersectPlane(Ou,Tg)&&(this.state===Fa.PAN?(uP.copy(Wi.parent.matrixWorld).invert(),lP.copy(Tg).sub(Py.setFromMatrixPosition(Wi.matrixWorld))):this.state===Fa.ROTATE&&(hP.set(0,1,0).applyQuaternion(e.quaternion).normalize(),dP.set(1,0,0).applyQuaternion(e.quaternion).normalize())),t.style.cursor="move",this.dispatchEvent({type:"dragstart",object:Wi})),$m.copy(Eo))}function F9(){this.enabled!==!1&&(Wi&&(this.dispatchEvent({type:"dragend",object:Wi}),Wi=null),this.domElement.style.cursor=Tr?"pointer":"auto",this.state=Fa.NONE)}function U9(i){this.enabled!==!1&&i.preventDefault()}function fP(i,e=null){return i.isGroup&&(e=i),i.parent===null?e:fP(i.parent,e)}function O9(i,e,t){var n,s=1;i==null&&(i=0),e==null&&(e=0),t==null&&(t=0);function r(){var o,a=n.length,c,l=0,u=0,h=0;for(o=0;o<a;++o)c=n[o],l+=c.x||0,u+=c.y||0,h+=c.z||0;for(l=(l/a-i)*s,u=(u/a-e)*s,h=(h/a-t)*s,o=0;o<a;++o)c=n[o],l&&(c.x-=l),u&&(c.y-=u),h&&(c.z-=h)}return r.initialize=function(o){n=o},r.x=function(o){return arguments.length?(i=+o,r):i},r.y=function(o){return arguments.length?(e=+o,r):e},r.z=function(o){return arguments.length?(t=+o,r):t},r.strength=function(o){return arguments.length?(s=+o,r):s},r}function B9(i){const e=+this._x.call(null,i);return pP(this.cover(e),e,i)}function pP(i,e,t){if(isNaN(e))return i;var n,s=i._root,r={data:t},o=i._x0,a=i._x1,c,l,u,h,d;if(!s)return i._root=r,i;for(;s.length;)if((u=e>=(c=(o+a)/2))?o=c:a=c,n=s,!(s=s[h=+u]))return n[h]=r,i;if(l=+i._x.call(null,s.data),e===l)return r.next=s,n?n[h]=r:i._root=r,i;do n=n?n[h]=new Array(2):i._root=new Array(2),(u=e>=(c=(o+a)/2))?o=c:a=c;while((h=+u)==(d=+(l>=c)));return n[d]=s,n[h]=r,i}function k9(i){Array.isArray(i)||(i=Array.from(i));const e=i.length,t=new Float64Array(e);let n=1/0,s=-1/0;for(let r=0,o;r<e;++r)isNaN(o=+this._x.call(null,i[r]))||(t[r]=o,o<n&&(n=o),o>s&&(s=o));if(n>s)return this;this.cover(n).cover(s);for(let r=0;r<e;++r)pP(this,t[r],i[r]);return this}function z9(i){if(isNaN(i=+i))return this;var e=this._x0,t=this._x1;if(isNaN(e))t=(e=Math.floor(i))+1;else{for(var n=t-e||1,s=this._root,r,o;e>i||i>=t;)switch(o=+(i<e),r=new Array(2),r[o]=s,s=r,n*=2,o){case 0:t=e+n;break;case 1:e=t-n;break}this._root&&this._root.length&&(this._root=s)}return this._x0=e,this._x1=t,this}function G9(){var i=[];return this.visit(function(e){if(!e.length)do i.push(e.data);while(e=e.next)}),i}function V9(i){return arguments.length?this.cover(+i[0][0]).cover(+i[1][0]):isNaN(this._x0)?void 0:[[this._x0],[this._x1]]}function Oo(i,e,t){this.node=i,this.x0=e,this.x1=t}function H9(i,e){var t,n=this._x0,s,r,o=this._x1,a=[],c=this._root,l,u;for(c&&a.push(new Oo(c,n,o)),e==null?e=1/0:(n=i-e,o=i+e);l=a.pop();)if(!(!(c=l.node)||(s=l.x0)>o||(r=l.x1)<n))if(c.length){var h=(s+r)/2;a.push(new Oo(c[1],h,r),new Oo(c[0],s,h)),(u=+(i>=h))&&(l=a[a.length-1],a[a.length-1]=a[a.length-1-u],a[a.length-1-u]=l)}else{var d=Math.abs(i-+this._x.call(null,c.data));d<e&&(e=d,n=i-d,o=i+d,t=c.data)}return t}function W9(i){if(isNaN(c=+this._x.call(null,i)))return this;var e,t=this._root,n,s,r,o=this._x0,a=this._x1,c,l,u,h,d;if(!t)return this;if(t.length)for(;;){if((u=c>=(l=(o+a)/2))?o=l:a=l,e=t,!(t=t[h=+u]))return this;if(!t.length)break;e[h+1&1]&&(n=e,d=h)}for(;t.data!==i;)if(s=t,!(t=t.next))return this;return(r=t.next)&&delete t.next,s?(r?s.next=r:delete s.next,this):e?(r?e[h]=r:delete e[h],(t=e[0]||e[1])&&t===(e[1]||e[0])&&!t.length&&(n?n[d]=t:this._root=t),this):(this._root=r,this)}function $9(i){for(var e=0,t=i.length;e<t;++e)this.remove(i[e]);return this}function q9(){return this._root}function X9(){var i=0;return this.visit(function(e){if(!e.length)do++i;while(e=e.next)}),i}function j9(i){var e=[],t,n=this._root,s,r,o;for(n&&e.push(new Oo(n,this._x0,this._x1));t=e.pop();)if(!i(n=t.node,r=t.x0,o=t.x1)&&n.length){var a=(r+o)/2;(s=n[1])&&e.push(new Oo(s,a,o)),(s=n[0])&&e.push(new Oo(s,r,a))}return this}function Y9(i){var e=[],t=[],n;for(this._root&&e.push(new Oo(this._root,this._x0,this._x1));n=e.pop();){var s=n.node;if(s.length){var r,o=n.x0,a=n.x1,c=(o+a)/2;(r=s[0])&&e.push(new Oo(r,o,c)),(r=s[1])&&e.push(new Oo(r,c,a))}t.push(n)}for(;n=t.pop();)i(n.node,n.x0,n.x1);return this}function Z9(i){return i[0]}function K9(i){return arguments.length?(this._x=i,this):this._x}function mP(i,e){var t=new Ib(e??Z9,NaN,NaN);return i==null?t:t.addAll(i)}function Ib(i,e,t){this._x=i,this._x0=e,this._x1=t,this._root=void 0}function Bw(i){for(var e={data:i.data},t=e;i=i.next;)t=t.next={data:i.data};return e}var Ji=mP.prototype=Ib.prototype;Ji.copy=function(){var i=new Ib(this._x,this._x0,this._x1),e=this._root,t,n;if(!e)return i;if(!e.length)return i._root=Bw(e),i;for(t=[{source:e,target:i._root=new Array(2)}];e=t.pop();)for(var s=0;s<2;++s)(n=e.source[s])&&(n.length?t.push({source:n,target:e.target[s]=new Array(2)}):e.target[s]=Bw(n));return i};Ji.add=B9;Ji.addAll=k9;Ji.cover=z9;Ji.data=G9;Ji.extent=V9;Ji.find=H9;Ji.remove=W9;Ji.removeAll=$9;Ji.root=q9;Ji.size=X9;Ji.visit=j9;Ji.visitAfter=Y9;Ji.x=K9;function Q9(i){const e=+this._x.call(null,i),t=+this._y.call(null,i);return gP(this.cover(e,t),e,t,i)}function gP(i,e,t,n){if(isNaN(e)||isNaN(t))return i;var s,r=i._root,o={data:n},a=i._x0,c=i._y0,l=i._x1,u=i._y1,h,d,f,m,_,g,p,y;if(!r)return i._root=o,i;for(;r.length;)if((_=e>=(h=(a+l)/2))?a=h:l=h,(g=t>=(d=(c+u)/2))?c=d:u=d,s=r,!(r=r[p=g<<1|_]))return s[p]=o,i;if(f=+i._x.call(null,r.data),m=+i._y.call(null,r.data),e===f&&t===m)return o.next=r,s?s[p]=o:i._root=o,i;do s=s?s[p]=new Array(4):i._root=new Array(4),(_=e>=(h=(a+l)/2))?a=h:l=h,(g=t>=(d=(c+u)/2))?c=d:u=d;while((p=g<<1|_)===(y=(m>=d)<<1|f>=h));return s[y]=r,s[p]=o,i}function J9(i){var e,t,n=i.length,s,r,o=new Array(n),a=new Array(n),c=1/0,l=1/0,u=-1/0,h=-1/0;for(t=0;t<n;++t)isNaN(s=+this._x.call(null,e=i[t]))||isNaN(r=+this._y.call(null,e))||(o[t]=s,a[t]=r,s<c&&(c=s),s>u&&(u=s),r<l&&(l=r),r>h&&(h=r));if(c>u||l>h)return this;for(this.cover(c,l).cover(u,h),t=0;t<n;++t)gP(this,o[t],a[t],i[t]);return this}function eX(i,e){if(isNaN(i=+i)||isNaN(e=+e))return this;var t=this._x0,n=this._y0,s=this._x1,r=this._y1;if(isNaN(t))s=(t=Math.floor(i))+1,r=(n=Math.floor(e))+1;else{for(var o=s-t||1,a=this._root,c,l;t>i||i>=s||n>e||e>=r;)switch(l=(e<n)<<1|i<t,c=new Array(4),c[l]=a,a=c,o*=2,l){case 0:s=t+o,r=n+o;break;case 1:t=s-o,r=n+o;break;case 2:s=t+o,n=r-o;break;case 3:t=s-o,n=r-o;break}this._root&&this._root.length&&(this._root=a)}return this._x0=t,this._y0=n,this._x1=s,this._y1=r,this}function tX(){var i=[];return this.visit(function(e){if(!e.length)do i.push(e.data);while(e=e.next)}),i}function nX(i){return arguments.length?this.cover(+i[0][0],+i[0][1]).cover(+i[1][0],+i[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]}function Pi(i,e,t,n,s){this.node=i,this.x0=e,this.y0=t,this.x1=n,this.y1=s}function iX(i,e,t){var n,s=this._x0,r=this._y0,o,a,c,l,u=this._x1,h=this._y1,d=[],f=this._root,m,_;for(f&&d.push(new Pi(f,s,r,u,h)),t==null?t=1/0:(s=i-t,r=e-t,u=i+t,h=e+t,t*=t);m=d.pop();)if(!(!(f=m.node)||(o=m.x0)>u||(a=m.y0)>h||(c=m.x1)<s||(l=m.y1)<r))if(f.length){var g=(o+c)/2,p=(a+l)/2;d.push(new Pi(f[3],g,p,c,l),new Pi(f[2],o,p,g,l),new Pi(f[1],g,a,c,p),new Pi(f[0],o,a,g,p)),(_=(e>=p)<<1|i>=g)&&(m=d[d.length-1],d[d.length-1]=d[d.length-1-_],d[d.length-1-_]=m)}else{var y=i-+this._x.call(null,f.data),x=e-+this._y.call(null,f.data),v=y*y+x*x;if(v<t){var S=Math.sqrt(t=v);s=i-S,r=e-S,u=i+S,h=e+S,n=f.data}}return n}function sX(i){if(isNaN(u=+this._x.call(null,i))||isNaN(h=+this._y.call(null,i)))return this;var e,t=this._root,n,s,r,o=this._x0,a=this._y0,c=this._x1,l=this._y1,u,h,d,f,m,_,g,p;if(!t)return this;if(t.length)for(;;){if((m=u>=(d=(o+c)/2))?o=d:c=d,(_=h>=(f=(a+l)/2))?a=f:l=f,e=t,!(t=t[g=_<<1|m]))return this;if(!t.length)break;(e[g+1&3]||e[g+2&3]||e[g+3&3])&&(n=e,p=g)}for(;t.data!==i;)if(s=t,!(t=t.next))return this;return(r=t.next)&&delete t.next,s?(r?s.next=r:delete s.next,this):e?(r?e[g]=r:delete e[g],(t=e[0]||e[1]||e[2]||e[3])&&t===(e[3]||e[2]||e[1]||e[0])&&!t.length&&(n?n[p]=t:this._root=t),this):(this._root=r,this)}function rX(i){for(var e=0,t=i.length;e<t;++e)this.remove(i[e]);return this}function oX(){return this._root}function aX(){var i=0;return this.visit(function(e){if(!e.length)do++i;while(e=e.next)}),i}function cX(i){var e=[],t,n=this._root,s,r,o,a,c;for(n&&e.push(new Pi(n,this._x0,this._y0,this._x1,this._y1));t=e.pop();)if(!i(n=t.node,r=t.x0,o=t.y0,a=t.x1,c=t.y1)&&n.length){var l=(r+a)/2,u=(o+c)/2;(s=n[3])&&e.push(new Pi(s,l,u,a,c)),(s=n[2])&&e.push(new Pi(s,r,u,l,c)),(s=n[1])&&e.push(new Pi(s,l,o,a,u)),(s=n[0])&&e.push(new Pi(s,r,o,l,u))}return this}function lX(i){var e=[],t=[],n;for(this._root&&e.push(new Pi(this._root,this._x0,this._y0,this._x1,this._y1));n=e.pop();){var s=n.node;if(s.length){var r,o=n.x0,a=n.y0,c=n.x1,l=n.y1,u=(o+c)/2,h=(a+l)/2;(r=s[0])&&e.push(new Pi(r,o,a,u,h)),(r=s[1])&&e.push(new Pi(r,u,a,c,h)),(r=s[2])&&e.push(new Pi(r,o,h,u,l)),(r=s[3])&&e.push(new Pi(r,u,h,c,l))}t.push(n)}for(;n=t.pop();)i(n.node,n.x0,n.y0,n.x1,n.y1);return this}function uX(i){return i[0]}function hX(i){return arguments.length?(this._x=i,this):this._x}function dX(i){return i[1]}function fX(i){return arguments.length?(this._y=i,this):this._y}function _P(i,e,t){var n=new Fb(e??uX,t??dX,NaN,NaN,NaN,NaN);return i==null?n:n.addAll(i)}function Fb(i,e,t,n,s,r){this._x=i,this._y=e,this._x0=t,this._y0=n,this._x1=s,this._y1=r,this._root=void 0}function kw(i){for(var e={data:i.data},t=e;i=i.next;)t=t.next={data:i.data};return e}var Gi=_P.prototype=Fb.prototype;Gi.copy=function(){var i=new Fb(this._x,this._y,this._x0,this._y0,this._x1,this._y1),e=this._root,t,n;if(!e)return i;if(!e.length)return i._root=kw(e),i;for(t=[{source:e,target:i._root=new Array(4)}];e=t.pop();)for(var s=0;s<4;++s)(n=e.source[s])&&(n.length?t.push({source:n,target:e.target[s]=new Array(4)}):e.target[s]=kw(n));return i};Gi.add=Q9;Gi.addAll=J9;Gi.cover=eX;Gi.data=tX;Gi.extent=nX;Gi.find=iX;Gi.remove=sX;Gi.removeAll=rX;Gi.root=oX;Gi.size=aX;Gi.visit=cX;Gi.visitAfter=lX;Gi.x=hX;Gi.y=fX;function pX(i){const e=+this._x.call(null,i),t=+this._y.call(null,i),n=+this._z.call(null,i);return vP(this.cover(e,t,n),e,t,n,i)}function vP(i,e,t,n,s){if(isNaN(e)||isNaN(t)||isNaN(n))return i;var r,o=i._root,a={data:s},c=i._x0,l=i._y0,u=i._z0,h=i._x1,d=i._y1,f=i._z1,m,_,g,p,y,x,v,S,M,E,w;if(!o)return i._root=a,i;for(;o.length;)if((v=e>=(m=(c+h)/2))?c=m:h=m,(S=t>=(_=(l+d)/2))?l=_:d=_,(M=n>=(g=(u+f)/2))?u=g:f=g,r=o,!(o=o[E=M<<2|S<<1|v]))return r[E]=a,i;if(p=+i._x.call(null,o.data),y=+i._y.call(null,o.data),x=+i._z.call(null,o.data),e===p&&t===y&&n===x)return a.next=o,r?r[E]=a:i._root=a,i;do r=r?r[E]=new Array(8):i._root=new Array(8),(v=e>=(m=(c+h)/2))?c=m:h=m,(S=t>=(_=(l+d)/2))?l=_:d=_,(M=n>=(g=(u+f)/2))?u=g:f=g;while((E=M<<2|S<<1|v)===(w=(x>=g)<<2|(y>=_)<<1|p>=m));return r[w]=o,r[E]=a,i}function mX(i){Array.isArray(i)||(i=Array.from(i));const e=i.length,t=new Float64Array(e),n=new Float64Array(e),s=new Float64Array(e);let r=1/0,o=1/0,a=1/0,c=-1/0,l=-1/0,u=-1/0;for(let h=0,d,f,m,_;h<e;++h)isNaN(f=+this._x.call(null,d=i[h]))||isNaN(m=+this._y.call(null,d))||isNaN(_=+this._z.call(null,d))||(t[h]=f,n[h]=m,s[h]=_,f<r&&(r=f),f>c&&(c=f),m<o&&(o=m),m>l&&(l=m),_<a&&(a=_),_>u&&(u=_));if(r>c||o>l||a>u)return this;this.cover(r,o,a).cover(c,l,u);for(let h=0;h<e;++h)vP(this,t[h],n[h],s[h],i[h]);return this}function gX(i,e,t){if(isNaN(i=+i)||isNaN(e=+e)||isNaN(t=+t))return this;var n=this._x0,s=this._y0,r=this._z0,o=this._x1,a=this._y1,c=this._z1;if(isNaN(n))o=(n=Math.floor(i))+1,a=(s=Math.floor(e))+1,c=(r=Math.floor(t))+1;else{for(var l=o-n||1,u=this._root,h,d;n>i||i>=o||s>e||e>=a||r>t||t>=c;)switch(d=(t<r)<<2|(e<s)<<1|i<n,h=new Array(8),h[d]=u,u=h,l*=2,d){case 0:o=n+l,a=s+l,c=r+l;break;case 1:n=o-l,a=s+l,c=r+l;break;case 2:o=n+l,s=a-l,c=r+l;break;case 3:n=o-l,s=a-l,c=r+l;break;case 4:o=n+l,a=s+l,r=c-l;break;case 5:n=o-l,a=s+l,r=c-l;break;case 6:o=n+l,s=a-l,r=c-l;break;case 7:n=o-l,s=a-l,r=c-l;break}this._root&&this._root.length&&(this._root=u)}return this._x0=n,this._y0=s,this._z0=r,this._x1=o,this._y1=a,this._z1=c,this}function _X(){var i=[];return this.visit(function(e){if(!e.length)do i.push(e.data);while(e=e.next)}),i}function vX(i){return arguments.length?this.cover(+i[0][0],+i[0][1],+i[0][2]).cover(+i[1][0],+i[1][1],+i[1][2]):isNaN(this._x0)?void 0:[[this._x0,this._y0,this._z0],[this._x1,this._y1,this._z1]]}function nn(i,e,t,n,s,r,o){this.node=i,this.x0=e,this.y0=t,this.z0=n,this.x1=s,this.y1=r,this.z1=o}function xX(i,e,t,n){var s,r=this._x0,o=this._y0,a=this._z0,c,l,u,h,d,f,m=this._x1,_=this._y1,g=this._z1,p=[],y=this._root,x,v;for(y&&p.push(new nn(y,r,o,a,m,_,g)),n==null?n=1/0:(r=i-n,o=e-n,a=t-n,m=i+n,_=e+n,g=t+n,n*=n);x=p.pop();)if(!(!(y=x.node)||(c=x.x0)>m||(l=x.y0)>_||(u=x.z0)>g||(h=x.x1)<r||(d=x.y1)<o||(f=x.z1)<a))if(y.length){var S=(c+h)/2,M=(l+d)/2,E=(u+f)/2;p.push(new nn(y[7],S,M,E,h,d,f),new nn(y[6],c,M,E,S,d,f),new nn(y[5],S,l,E,h,M,f),new nn(y[4],c,l,E,S,M,f),new nn(y[3],S,M,u,h,d,E),new nn(y[2],c,M,u,S,d,E),new nn(y[1],S,l,u,h,M,E),new nn(y[0],c,l,u,S,M,E)),(v=(t>=E)<<2|(e>=M)<<1|i>=S)&&(x=p[p.length-1],p[p.length-1]=p[p.length-1-v],p[p.length-1-v]=x)}else{var w=i-+this._x.call(null,y.data),b=e-+this._y.call(null,y.data),T=t-+this._z.call(null,y.data),C=w*w+b*b+T*T;if(C<n){var D=Math.sqrt(n=C);r=i-D,o=e-D,a=t-D,m=i+D,_=e+D,g=t+D,s=y.data}}return s}function yX(i){if(isNaN(d=+this._x.call(null,i))||isNaN(f=+this._y.call(null,i))||isNaN(m=+this._z.call(null,i)))return this;var e,t=this._root,n,s,r,o=this._x0,a=this._y0,c=this._z0,l=this._x1,u=this._y1,h=this._z1,d,f,m,_,g,p,y,x,v,S,M;if(!t)return this;if(t.length)for(;;){if((y=d>=(_=(o+l)/2))?o=_:l=_,(x=f>=(g=(a+u)/2))?a=g:u=g,(v=m>=(p=(c+h)/2))?c=p:h=p,e=t,!(t=t[S=v<<2|x<<1|y]))return this;if(!t.length)break;(e[S+1&7]||e[S+2&7]||e[S+3&7]||e[S+4&7]||e[S+5&7]||e[S+6&7]||e[S+7&7])&&(n=e,M=S)}for(;t.data!==i;)if(s=t,!(t=t.next))return this;return(r=t.next)&&delete t.next,s?(r?s.next=r:delete s.next,this):e?(r?e[S]=r:delete e[S],(t=e[0]||e[1]||e[2]||e[3]||e[4]||e[5]||e[6]||e[7])&&t===(e[7]||e[6]||e[5]||e[4]||e[3]||e[2]||e[1]||e[0])&&!t.length&&(n?n[M]=t:this._root=t),this):(this._root=r,this)}function SX(i){for(var e=0,t=i.length;e<t;++e)this.remove(i[e]);return this}function bX(){return this._root}function MX(){var i=0;return this.visit(function(e){if(!e.length)do++i;while(e=e.next)}),i}function TX(i){var e=[],t,n=this._root,s,r,o,a,c,l,u;for(n&&e.push(new nn(n,this._x0,this._y0,this._z0,this._x1,this._y1,this._z1));t=e.pop();)if(!i(n=t.node,r=t.x0,o=t.y0,a=t.z0,c=t.x1,l=t.y1,u=t.z1)&&n.length){var h=(r+c)/2,d=(o+l)/2,f=(a+u)/2;(s=n[7])&&e.push(new nn(s,h,d,f,c,l,u)),(s=n[6])&&e.push(new nn(s,r,d,f,h,l,u)),(s=n[5])&&e.push(new nn(s,h,o,f,c,d,u)),(s=n[4])&&e.push(new nn(s,r,o,f,h,d,u)),(s=n[3])&&e.push(new nn(s,h,d,a,c,l,f)),(s=n[2])&&e.push(new nn(s,r,d,a,h,l,f)),(s=n[1])&&e.push(new nn(s,h,o,a,c,d,f)),(s=n[0])&&e.push(new nn(s,r,o,a,h,d,f))}return this}function EX(i){var e=[],t=[],n;for(this._root&&e.push(new nn(this._root,this._x0,this._y0,this._z0,this._x1,this._y1,this._z1));n=e.pop();){var s=n.node;if(s.length){var r,o=n.x0,a=n.y0,c=n.z0,l=n.x1,u=n.y1,h=n.z1,d=(o+l)/2,f=(a+u)/2,m=(c+h)/2;(r=s[0])&&e.push(new nn(r,o,a,c,d,f,m)),(r=s[1])&&e.push(new nn(r,d,a,c,l,f,m)),(r=s[2])&&e.push(new nn(r,o,f,c,d,u,m)),(r=s[3])&&e.push(new nn(r,d,f,c,l,u,m)),(r=s[4])&&e.push(new nn(r,o,a,m,d,f,h)),(r=s[5])&&e.push(new nn(r,d,a,m,l,f,h)),(r=s[6])&&e.push(new nn(r,o,f,m,d,u,h)),(r=s[7])&&e.push(new nn(r,d,f,m,l,u,h))}t.push(n)}for(;n=t.pop();)i(n.node,n.x0,n.y0,n.z0,n.x1,n.y1,n.z1);return this}function wX(i){return i[0]}function AX(i){return arguments.length?(this._x=i,this):this._x}function CX(i){return i[1]}function RX(i){return arguments.length?(this._y=i,this):this._y}function NX(i){return i[2]}function PX(i){return arguments.length?(this._z=i,this):this._z}function xP(i,e,t,n){var s=new Ub(e??wX,t??CX,n??NX,NaN,NaN,NaN,NaN,NaN,NaN);return i==null?s:s.addAll(i)}function Ub(i,e,t,n,s,r,o,a,c){this._x=i,this._y=e,this._z=t,this._x0=n,this._y0=s,this._z0=r,this._x1=o,this._y1=a,this._z1=c,this._root=void 0}function zw(i){for(var e={data:i.data},t=e;i=i.next;)t=t.next={data:i.data};return e}var Mi=xP.prototype=Ub.prototype;Mi.copy=function(){var i=new Ub(this._x,this._y,this._z,this._x0,this._y0,this._z0,this._x1,this._y1,this._z1),e=this._root,t,n;if(!e)return i;if(!e.length)return i._root=zw(e),i;for(t=[{source:e,target:i._root=new Array(8)}];e=t.pop();)for(var s=0;s<8;++s)(n=e.source[s])&&(n.length?t.push({source:n,target:e.target[s]=new Array(8)}):e.target[s]=zw(n));return i};Mi.add=pX;Mi.addAll=mX;Mi.cover=gX;Mi.data=_X;Mi.extent=vX;Mi.find=xX;Mi.remove=yX;Mi.removeAll=SX;Mi.root=bX;Mi.size=MX;Mi.visit=TX;Mi.visitAfter=EX;Mi.x=AX;Mi.y=RX;Mi.z=PX;function Do(i){return function(){return i}}function yo(i){return(i()-.5)*1e-6}function DX(i){return i.index}function Gw(i,e){var t=i.get(e);if(!t)throw new Error("node not found: "+e);return t}function LX(i){var e=DX,t=d,n,s=Do(30),r,o,a,c,l,u,h=1;i==null&&(i=[]);function d(p){return 1/Math.min(c[p.source.index],c[p.target.index])}function f(p){for(var y=0,x=i.length;y<h;++y)for(var v=0,S,M,E,w=0,b=0,T=0,C,D;v<x;++v)S=i[v],M=S.source,E=S.target,w=E.x+E.vx-M.x-M.vx||yo(u),a>1&&(b=E.y+E.vy-M.y-M.vy||yo(u)),a>2&&(T=E.z+E.vz-M.z-M.vz||yo(u)),C=Math.sqrt(w*w+b*b+T*T),C=(C-r[v])/C*p*n[v],w*=C,b*=C,T*=C,E.vx-=w*(D=l[v]),a>1&&(E.vy-=b*D),a>2&&(E.vz-=T*D),M.vx+=w*(D=1-D),a>1&&(M.vy+=b*D),a>2&&(M.vz+=T*D)}function m(){if(o){var p,y=o.length,x=i.length,v=new Map(o.map((M,E)=>[e(M,E,o),M])),S;for(p=0,c=new Array(y);p<x;++p)S=i[p],S.index=p,typeof S.source!="object"&&(S.source=Gw(v,S.source)),typeof S.target!="object"&&(S.target=Gw(v,S.target)),c[S.source.index]=(c[S.source.index]||0)+1,c[S.target.index]=(c[S.target.index]||0)+1;for(p=0,l=new Array(x);p<x;++p)S=i[p],l[p]=c[S.source.index]/(c[S.source.index]+c[S.target.index]);n=new Array(x),_(),r=new Array(x),g()}}function _(){if(o)for(var p=0,y=i.length;p<y;++p)n[p]=+t(i[p],p,i)}function g(){if(o)for(var p=0,y=i.length;p<y;++p)r[p]=+s(i[p],p,i)}return f.initialize=function(p,...y){o=p,u=y.find(x=>typeof x=="function")||Math.random,a=y.find(x=>[1,2,3].includes(x))||2,m()},f.links=function(p){return arguments.length?(i=p,m(),f):i},f.id=function(p){return arguments.length?(e=p,f):e},f.iterations=function(p){return arguments.length?(h=+p,f):h},f.strength=function(p){return arguments.length?(t=typeof p=="function"?p:Do(+p),_(),f):t},f.distance=function(p){return arguments.length?(s=typeof p=="function"?p:Do(+p),g(),f):s},f}var IX={value:()=>{}};function yP(){for(var i=0,e=arguments.length,t={},n;i<e;++i){if(!(n=arguments[i]+"")||n in t||/[\s.]/.test(n))throw new Error("illegal type: "+n);t[n]=[]}return new qm(t)}function qm(i){this._=i}function FX(i,e){return i.trim().split(/^|\s+/).map(function(t){var n="",s=t.indexOf(".");if(s>=0&&(n=t.slice(s+1),t=t.slice(0,s)),t&&!e.hasOwnProperty(t))throw new Error("unknown type: "+t);return{type:t,name:n}})}qm.prototype=yP.prototype={constructor:qm,on:function(i,e){var t=this._,n=FX(i+"",t),s,r=-1,o=n.length;if(arguments.length<2){for(;++r<o;)if((s=(i=n[r]).type)&&(s=UX(t[s],i.name)))return s;return}if(e!=null&&typeof e!="function")throw new Error("invalid callback: "+e);for(;++r<o;)if(s=(i=n[r]).type)t[s]=Vw(t[s],i.name,e);else if(e==null)for(s in t)t[s]=Vw(t[s],i.name,null);return this},copy:function(){var i={},e=this._;for(var t in e)i[t]=e[t].slice();return new qm(i)},call:function(i,e){if((s=arguments.length-2)>0)for(var t=new Array(s),n=0,s,r;n<s;++n)t[n]=arguments[n+2];if(!this._.hasOwnProperty(i))throw new Error("unknown type: "+i);for(r=this._[i],n=0,s=r.length;n<s;++n)r[n].value.apply(e,t)},apply:function(i,e,t){if(!this._.hasOwnProperty(i))throw new Error("unknown type: "+i);for(var n=this._[i],s=0,r=n.length;s<r;++s)n[s].value.apply(e,t)}};function UX(i,e){for(var t=0,n=i.length,s;t<n;++t)if((s=i[t]).name===e)return s.value}function Vw(i,e,t){for(var n=0,s=i.length;n<s;++n)if(i[n].name===e){i[n]=IX,i=i.slice(0,n).concat(i.slice(n+1));break}return t!=null&&i.push({name:e,value:t}),i}var ah=0,Sd=0,Jh=0,SP=1e3,Eg,bd,wg=0,tl=0,y_=0,af=typeof performance=="object"&&performance.now?performance:Date,bP=typeof window=="object"&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(i){setTimeout(i,17)};function MP(){return tl||(bP(OX),tl=af.now()+y_)}function OX(){tl=0}function Dy(){this._call=this._time=this._next=null}Dy.prototype=TP.prototype={constructor:Dy,restart:function(i,e,t){if(typeof i!="function")throw new TypeError("callback is not a function");t=(t==null?MP():+t)+(e==null?0:+e),!this._next&&bd!==this&&(bd?bd._next=this:Eg=this,bd=this),this._call=i,this._time=t,Ly()},stop:function(){this._call&&(this._call=null,this._time=1/0,Ly())}};function TP(i,e,t){var n=new Dy;return n.restart(i,e,t),n}function BX(){MP(),++ah;for(var i=Eg,e;i;)(e=tl-i._time)>=0&&i._call.call(void 0,e),i=i._next;--ah}function Hw(){tl=(wg=af.now())+y_,ah=Sd=0;try{BX()}finally{ah=0,zX(),tl=0}}function kX(){var i=af.now(),e=i-wg;e>SP&&(y_-=e,wg=i)}function zX(){for(var i,e=Eg,t,n=1/0;e;)e._call?(n>e._time&&(n=e._time),i=e,e=e._next):(t=e._next,e._next=null,e=i?i._next=t:Eg=t);bd=i,Ly(n)}function Ly(i){if(!ah){Sd&&(Sd=clearTimeout(Sd));var e=i-tl;e>24?(i<1/0&&(Sd=setTimeout(Hw,i-af.now()-y_)),Jh&&(Jh=clearInterval(Jh))):(Jh||(wg=af.now(),Jh=setInterval(kX,SP)),ah=1,bP(Hw))}}const GX=1664525,VX=1013904223,Ww=4294967296;function HX(){let i=1;return()=>(i=(GX*i+VX)%Ww)/Ww}var $w=3;function J0(i){return i.x}function qw(i){return i.y}function WX(i){return i.z}var $X=10,qX=Math.PI*(3-Math.sqrt(5)),XX=Math.PI*20/(9+Math.sqrt(221));function jX(i,e){e=e||2;var t=Math.min($w,Math.max(1,Math.round(e))),n,s=1,r=.001,o=1-Math.pow(r,1/300),a=0,c=.6,l=new Map,u=TP(f),h=yP("tick","end"),d=HX();i==null&&(i=[]);function f(){m(),h.call("tick",n),s<r&&(u.stop(),h.call("end",n))}function m(p){var y,x=i.length,v;p===void 0&&(p=1);for(var S=0;S<p;++S)for(s+=(a-s)*o,l.forEach(function(M){M(s)}),y=0;y<x;++y)v=i[y],v.fx==null?v.x+=v.vx*=c:(v.x=v.fx,v.vx=0),t>1&&(v.fy==null?v.y+=v.vy*=c:(v.y=v.fy,v.vy=0)),t>2&&(v.fz==null?v.z+=v.vz*=c:(v.z=v.fz,v.vz=0));return n}function _(){for(var p=0,y=i.length,x;p<y;++p){if(x=i[p],x.index=p,x.fx!=null&&(x.x=x.fx),x.fy!=null&&(x.y=x.fy),x.fz!=null&&(x.z=x.fz),isNaN(x.x)||t>1&&isNaN(x.y)||t>2&&isNaN(x.z)){var v=$X*(t>2?Math.cbrt(.5+p):t>1?Math.sqrt(.5+p):p),S=p*qX,M=p*XX;t===1?x.x=v:t===2?(x.x=v*Math.cos(S),x.y=v*Math.sin(S)):(x.x=v*Math.sin(S)*Math.cos(M),x.y=v*Math.cos(S),x.z=v*Math.sin(S)*Math.sin(M))}(isNaN(x.vx)||t>1&&isNaN(x.vy)||t>2&&isNaN(x.vz))&&(x.vx=0,t>1&&(x.vy=0),t>2&&(x.vz=0))}}function g(p){return p.initialize&&p.initialize(i,d,t),p}return _(),n={tick:m,restart:function(){return u.restart(f),n},stop:function(){return u.stop(),n},numDimensions:function(p){return arguments.length?(t=Math.min($w,Math.max(1,Math.round(p))),l.forEach(g),n):t},nodes:function(p){return arguments.length?(i=p,_(),l.forEach(g),n):i},alpha:function(p){return arguments.length?(s=+p,n):s},alphaMin:function(p){return arguments.length?(r=+p,n):r},alphaDecay:function(p){return arguments.length?(o=+p,n):+o},alphaTarget:function(p){return arguments.length?(a=+p,n):a},velocityDecay:function(p){return arguments.length?(c=1-p,n):1-c},randomSource:function(p){return arguments.length?(d=p,l.forEach(g),n):d},force:function(p,y){return arguments.length>1?(y==null?l.delete(p):l.set(p,g(y)),n):l.get(p)},find:function(){var p=Array.prototype.slice.call(arguments),y=p.shift()||0,x=(t>1?p.shift():null)||0,v=(t>2?p.shift():null)||0,S=p.shift()||1/0,M=0,E=i.length,w,b,T,C,D,P;for(S*=S,M=0;M<E;++M)D=i[M],w=y-D.x,b=x-(D.y||0),T=v-(D.z||0),C=w*w+b*b+T*T,C<S&&(P=D,S=C);return P},on:function(p,y){return arguments.length>1?(h.on(p,y),n):h.on(p)}}}function YX(){var i,e,t,n,s,r=Do(-30),o,a=1,c=1/0,l=.81;function u(m){var _,g=i.length,p=(e===1?mP(i,J0):e===2?_P(i,J0,qw):e===3?xP(i,J0,qw,WX):null).visitAfter(d);for(s=m,_=0;_<g;++_)t=i[_],p.visit(f)}function h(){if(i){var m,_=i.length,g;for(o=new Array(_),m=0;m<_;++m)g=i[m],o[g.index]=+r(g,m,i)}}function d(m){var _=0,g,p,y=0,x,v,S,M,E=m.length;if(E){for(x=v=S=M=0;M<E;++M)(g=m[M])&&(p=Math.abs(g.value))&&(_+=g.value,y+=p,x+=p*(g.x||0),v+=p*(g.y||0),S+=p*(g.z||0));_*=Math.sqrt(4/E),m.x=x/y,e>1&&(m.y=v/y),e>2&&(m.z=S/y)}else{g=m,g.x=g.data.x,e>1&&(g.y=g.data.y),e>2&&(g.z=g.data.z);do _+=o[g.data.index];while(g=g.next)}m.value=_}function f(m,_,g,p,y){if(!m.value)return!0;var x=[g,p,y][e-1],v=m.x-t.x,S=e>1?m.y-t.y:0,M=e>2?m.z-t.z:0,E=x-_,w=v*v+S*S+M*M;if(E*E/l<w)return w<c&&(v===0&&(v=yo(n),w+=v*v),e>1&&S===0&&(S=yo(n),w+=S*S),e>2&&M===0&&(M=yo(n),w+=M*M),w<a&&(w=Math.sqrt(a*w)),t.vx+=v*m.value*s/w,e>1&&(t.vy+=S*m.value*s/w),e>2&&(t.vz+=M*m.value*s/w)),!0;if(m.length||w>=c)return;(m.data!==t||m.next)&&(v===0&&(v=yo(n),w+=v*v),e>1&&S===0&&(S=yo(n),w+=S*S),e>2&&M===0&&(M=yo(n),w+=M*M),w<a&&(w=Math.sqrt(a*w)));do m.data!==t&&(E=o[m.data.index]*s/w,t.vx+=v*E,e>1&&(t.vy+=S*E),e>2&&(t.vz+=M*E));while(m=m.next)}return u.initialize=function(m,..._){i=m,n=_.find(g=>typeof g=="function")||Math.random,e=_.find(g=>[1,2,3].includes(g))||2,h()},u.strength=function(m){return arguments.length?(r=typeof m=="function"?m:Do(+m),h(),u):r},u.distanceMin=function(m){return arguments.length?(a=m*m,u):Math.sqrt(a)},u.distanceMax=function(m){return arguments.length?(c=m*m,u):Math.sqrt(c)},u.theta=function(m){return arguments.length?(l=m*m,u):Math.sqrt(l)},u}function ZX(i,e,t,n){var s,r,o=Do(.1),a,c;typeof i!="function"&&(i=Do(+i)),e==null&&(e=0),t==null&&(t=0),n==null&&(n=0);function l(h){for(var d=0,f=s.length;d<f;++d){var m=s[d],_=m.x-e||1e-6,g=(m.y||0)-t||1e-6,p=(m.z||0)-n||1e-6,y=Math.sqrt(_*_+g*g+p*p),x=(c[d]-y)*a[d]*h/y;m.vx+=_*x,r>1&&(m.vy+=g*x),r>2&&(m.vz+=p*x)}}function u(){if(s){var h,d=s.length;for(a=new Array(d),c=new Array(d),h=0;h<d;++h)c[h]=+i(s[h],h,s),a[h]=isNaN(c[h])?0:+o(s[h],h,s)}}return l.initialize=function(h,...d){s=h,r=d.find(f=>[1,2,3].includes(f))||2,u()},l.strength=function(h){return arguments.length?(o=typeof h=="function"?h:Do(+h),u(),l):o},l.radius=function(h){return arguments.length?(i=typeof h=="function"?h:Do(+h),u(),l):i},l.x=function(h){return arguments.length?(e=+h,l):e},l.y=function(h){return arguments.length?(t=+h,l):t},l.z=function(h){return arguments.length?(n=+h,l):n},l}function EP(i){return i&&i.__esModule&&Object.prototype.hasOwnProperty.call(i,"default")?i.default:i}var Ob=function(e){QX(e);var t=KX(e);return e.on=t.on,e.off=t.off,e.fire=t.fire,e};function KX(i){var e=Object.create(null);return{on:function(t,n,s){if(typeof n!="function")throw new Error("callback is expected to be a function");var r=e[t];return r||(r=e[t]=[]),r.push({callback:n,ctx:s}),i},off:function(t,n){var s=typeof t>"u";if(s)return e=Object.create(null),i;if(e[t]){var r=typeof n!="function";if(r)delete e[t];else for(var o=e[t],a=0;a<o.length;++a)o[a].callback===n&&o.splice(a,1)}return i},fire:function(t){var n=e[t];if(!n)return i;var s;arguments.length>1&&(s=Array.prototype.splice.call(arguments,1));for(var r=0;r<n.length;++r){var o=n[r];o.callback.apply(o.ctx,s)}return i}}}function QX(i){if(!i)throw new Error("Eventify cannot use falsy object as events subject");for(var e=["on","fire","off"],t=0;t<e.length;++t)if(i.hasOwnProperty(e[t]))throw new Error("Subject cannot be eventified, since it already has property '"+e[t]+"'")}var JX=tj,ej=Ob;function tj(i){if(i=i||{},"uniqueLinkId"in i&&(console.warn("ngraph.graph: Starting from version 0.14 `uniqueLinkId` is deprecated.\nUse `multigraph` option instead\n",`
`,`Note: there is also change in default behavior: From now on each graph
is considered to be not a multigraph by default (each edge is unique).`),i.multigraph=i.uniqueLinkId),i.multigraph===void 0&&(i.multigraph=!1),typeof Map!="function")throw new Error("ngraph.graph requires `Map` to be defined. Please polyfill it before using ngraph");var e=new Map,t=new Map,n={},s=0,r=i.multigraph?v:x,o=[],a=U,c=U,l=U,u=U,h={version:20,addNode:_,addLink:y,removeLink:w,removeNode:p,getNode:g,getNodeCount:S,getLinkCount:M,getEdgeCount:M,getLinksCount:M,getNodesCount:S,getLinks:E,forEachNode:$,forEachLinkedNode:P,forEachLink:D,beginUpdate:l,endUpdate:u,clear:C,hasLink:T,hasNode:g,getLink:T};return ej(h),d(),h;function d(){var z=h.on;h.on=Y;function Y(){return h.beginUpdate=l=B,h.endUpdate=u=k,a=f,c=m,h.on=z,z.apply(h,arguments)}}function f(z,Y){o.push({link:z,changeType:Y})}function m(z,Y){o.push({node:z,changeType:Y})}function _(z,Y){if(z===void 0)throw new Error("Invalid node identifier");l();var ne=g(z);return ne?(ne.data=Y,c(ne,"update")):(ne=new nj(z,Y),c(ne,"add")),e.set(z,ne),u(),ne}function g(z){return e.get(z)}function p(z){var Y=g(z);if(!Y)return!1;l();var ne=Y.links;return ne&&(ne.forEach(b),Y.links=null),e.delete(z),c(Y,"remove"),u(),!0}function y(z,Y,ne){l();var te=g(z)||_(z),V=g(Y)||_(Y),H=r(z,Y,ne),Q=t.has(H.id);return t.set(H.id,H),Xw(te,H),z!==Y&&Xw(V,H),a(H,Q?"update":"add"),u(),H}function x(z,Y,ne){var te=Wp(z,Y),V=t.get(te);return V?(V.data=ne,V):new jw(z,Y,ne,te)}function v(z,Y,ne){var te=Wp(z,Y),V=n.hasOwnProperty(te);if(V||T(z,Y)){V||(n[te]=0);var H="@"+ ++n[te];te=Wp(z+H,Y+H)}return new jw(z,Y,ne,te)}function S(){return e.size}function M(){return t.size}function E(z){var Y=g(z);return Y?Y.links:null}function w(z,Y){return Y!==void 0&&(z=T(z,Y)),b(z)}function b(z){if(!z||!t.get(z.id))return!1;l(),t.delete(z.id);var Y=g(z.fromId),ne=g(z.toId);return Y&&Y.links.delete(z),ne&&ne.links.delete(z),a(z,"remove"),u(),!0}function T(z,Y){if(!(z===void 0||Y===void 0))return t.get(Wp(z,Y))}function C(){l(),$(function(z){p(z.id)}),u()}function D(z){if(typeof z=="function")for(var Y=t.values(),ne=Y.next();!ne.done;){if(z(ne.value))return!0;ne=Y.next()}}function P(z,Y,ne){var te=g(z);if(te&&te.links&&typeof Y=="function")return ne?L(te.links,z,Y):N(te.links,z,Y)}function N(z,Y,ne){for(var te,V=z.values(),H=V.next();!H.done;){var Q=H.value,O=Q.fromId===Y?Q.toId:Q.fromId;if(te=ne(e.get(O),Q),te)return!0;H=V.next()}}function L(z,Y,ne){for(var te,V=z.values(),H=V.next();!H.done;){var Q=H.value;if(Q.fromId===Y&&(te=ne(e.get(Q.toId),Q),te))return!0;H=V.next()}}function U(){}function B(){s+=1}function k(){s-=1,s===0&&o.length>0&&(h.fire("changed",o),o.length=0)}function $(z){if(typeof z!="function")throw new Error("Function is expected to iterate over graph nodes. You passed "+z);for(var Y=e.values(),ne=Y.next();!ne.done;){if(z(ne.value))return!0;ne=Y.next()}}}function nj(i,e){this.id=i,this.links=null,this.data=e}function Xw(i,e){i.links?i.links.add(e):i.links=new Set([e])}function jw(i,e,t,n){this.fromId=i,this.toId=e,this.data=t,this.id=n}function Wp(i,e){return i.toString()+"👉 "+e.toString()}const ij=EP(JX);var Bb={exports:{}},Ff={exports:{}},wP=function(e){return e===0?"x":e===1?"y":e===2?"z":"c"+(e+1)};const sj=wP;var Dh=function(e){return t;function t(n,s){let r=s&&s.indent||0,o=s&&s.join!==void 0?s.join:`
`,a=Array(r+1).join(" "),c=[];for(let l=0;l<e;++l){let u=sj(l),h=l===0?"":a;c.push(h+n.replace(/{var}/g,u))}return c.join(o)}};const AP=Dh;Ff.exports=rj;Ff.exports.generateCreateBodyFunctionBody=CP;Ff.exports.getVectorCode=NP;Ff.exports.getBodyCode=RP;function rj(i,e){let t=CP(i,e),{Body:n}=new Function(t)();return n}function CP(i,e){return`
${NP(i,e)}
${RP(i)}
return {Body: Body, Vector: Vector};
`}function RP(i){let e=AP(i),t=e("{var}",{join:", "});return`
function Body(${t}) {
  this.isPinned = false;
  this.pos = new Vector(${t});
  this.force = new Vector();
  this.velocity = new Vector();
  this.mass = 1;

  this.springCount = 0;
  this.springLength = 0;
}

Body.prototype.reset = function() {
  this.force.reset();
  this.springCount = 0;
  this.springLength = 0;
}

Body.prototype.setPosition = function (${t}) {
  ${e("this.pos.{var} = {var} || 0;",{indent:2})}
};`}function NP(i,e){let t=AP(i),n="";return e&&(n=`${t(`
   var v{var};
Object.defineProperty(this, '{var}', {
  set: function(v) { 
    if (!Number.isFinite(v)) throw new Error('Cannot set non-numbers to {var}');
    v{var} = v; 
  },
  get: function() { return v{var}; }
});`)}`),`function Vector(${t("{var}",{join:", "})}) {
  ${n}
    if (typeof arguments[0] === 'object') {
      // could be another vector
      let v = arguments[0];
      ${t('if (!Number.isFinite(v.{var})) throw new Error("Expected value is not a finite number at Vector constructor ({var})");',{indent:4})}
      ${t("this.{var} = v.{var};",{indent:4})}
    } else {
      ${t('this.{var} = typeof {var} === "number" ? {var} : 0;',{indent:4})}
    }
  }
  
  Vector.prototype.reset = function () {
    ${t("this.{var} = ",{join:""})}0;
  };`}var oj=Ff.exports,Ka={exports:{}};const kb=Dh,pa=wP;Ka.exports=aj;Ka.exports.generateQuadTreeFunctionBody=PP;Ka.exports.getInsertStackCode=UP;Ka.exports.getQuadNodeCode=FP;Ka.exports.isSamePosition=DP;Ka.exports.getChildBodyCode=IP;Ka.exports.setChildBodyCode=LP;function aj(i){let e=PP(i);return new Function(e)()}function PP(i){let e=kb(i),t=Math.pow(2,i);return`
${UP()}
${FP(i)}
${DP(i)}
${IP(i)}
${LP(i)}

function createQuadTree(options, random) {
  options = options || {};
  options.gravity = typeof options.gravity === 'number' ? options.gravity : -1;
  options.theta = typeof options.theta === 'number' ? options.theta : 0.8;

  var gravity = options.gravity;
  var updateQueue = [];
  var insertStack = new InsertStack();
  var theta = options.theta;

  var nodesCache = [];
  var currentInCache = 0;
  var root = newNode();

  return {
    insertBodies: insertBodies,

    /**
     * Gets root node if it is present
     */
    getRoot: function() {
      return root;
    },

    updateBodyForce: update,

    options: function(newOptions) {
      if (newOptions) {
        if (typeof newOptions.gravity === 'number') {
          gravity = newOptions.gravity;
        }
        if (typeof newOptions.theta === 'number') {
          theta = newOptions.theta;
        }

        return this;
      }

      return {
        gravity: gravity,
        theta: theta
      };
    }
  };

  function newNode() {
    // To avoid pressure on GC we reuse nodes.
    var node = nodesCache[currentInCache];
    if (node) {
${o("      node.")}
      node.body = null;
      node.mass = ${e("node.mass_{var} = ",{join:""})}0;
      ${e("node.min_{var} = node.max_{var} = ",{join:""})}0;
    } else {
      node = new QuadNode();
      nodesCache[currentInCache] = node;
    }

    ++currentInCache;
    return node;
  }

  function update(sourceBody) {
    var queue = updateQueue;
    var v;
    ${e("var d{var};",{indent:4})}
    var r; 
    ${e("var f{var} = 0;",{indent:4})}
    var queueLength = 1;
    var shiftIdx = 0;
    var pushIdx = 1;

    queue[0] = root;

    while (queueLength) {
      var node = queue[shiftIdx];
      var body = node.body;

      queueLength -= 1;
      shiftIdx += 1;
      var differentBody = (body !== sourceBody);
      if (body && differentBody) {
        // If the current node is a leaf node (and it is not source body),
        // calculate the force exerted by the current node on body, and add this
        // amount to body's net force.
        ${e("d{var} = body.pos.{var} - sourceBody.pos.{var};",{indent:8})}
        r = Math.sqrt(${e("d{var} * d{var}",{join:" + "})});

        if (r === 0) {
          // Poor man's protection against zero distance.
          ${e("d{var} = (random.nextDouble() - 0.5) / 50;",{indent:10})}
          r = Math.sqrt(${e("d{var} * d{var}",{join:" + "})});
        }

        // This is standard gravitation force calculation but we divide
        // by r^3 to save two operations when normalizing force vector.
        v = gravity * body.mass * sourceBody.mass / (r * r * r);
        ${e("f{var} += v * d{var};",{indent:8})}
      } else if (differentBody) {
        // Otherwise, calculate the ratio s / r,  where s is the width of the region
        // represented by the internal node, and r is the distance between the body
        // and the node's center-of-mass
        ${e("d{var} = node.mass_{var} / node.mass - sourceBody.pos.{var};",{indent:8})}
        r = Math.sqrt(${e("d{var} * d{var}",{join:" + "})});

        if (r === 0) {
          // Sorry about code duplication. I don't want to create many functions
          // right away. Just want to see performance first.
          ${e("d{var} = (random.nextDouble() - 0.5) / 50;",{indent:10})}
          r = Math.sqrt(${e("d{var} * d{var}",{join:" + "})});
        }
        // If s / r < θ, treat this internal node as a single body, and calculate the
        // force it exerts on sourceBody, and add this amount to sourceBody's net force.
        if ((node.max_${pa(0)} - node.min_${pa(0)}) / r < theta) {
          // in the if statement above we consider node's width only
          // because the region was made into square during tree creation.
          // Thus there is no difference between using width or height.
          v = gravity * node.mass * sourceBody.mass / (r * r * r);
          ${e("f{var} += v * d{var};",{indent:10})}
        } else {
          // Otherwise, run the procedure recursively on each of the current node's children.

          // I intentionally unfolded this loop, to save several CPU cycles.
${r()}
        }
      }
    }

    ${e("sourceBody.force.{var} += f{var};",{indent:4})}
  }

  function insertBodies(bodies) {
    ${e("var {var}min = Number.MAX_VALUE;",{indent:4})}
    ${e("var {var}max = Number.MIN_VALUE;",{indent:4})}
    var i = bodies.length;

    // To reduce quad tree depth we are looking for exact bounding box of all particles.
    while (i--) {
      var pos = bodies[i].pos;
      ${e("if (pos.{var} < {var}min) {var}min = pos.{var};",{indent:6})}
      ${e("if (pos.{var} > {var}max) {var}max = pos.{var};",{indent:6})}
    }

    // Makes the bounds square.
    var maxSideLength = -Infinity;
    ${e("if ({var}max - {var}min > maxSideLength) maxSideLength = {var}max - {var}min ;",{indent:4})}

    currentInCache = 0;
    root = newNode();
    ${e("root.min_{var} = {var}min;",{indent:4})}
    ${e("root.max_{var} = {var}min + maxSideLength;",{indent:4})}

    i = bodies.length - 1;
    if (i >= 0) {
      root.body = bodies[i];
    }
    while (i--) {
      insert(bodies[i], root);
    }
  }

  function insert(newBody) {
    insertStack.reset();
    insertStack.push(root, newBody);

    while (!insertStack.isEmpty()) {
      var stackItem = insertStack.pop();
      var node = stackItem.node;
      var body = stackItem.body;

      if (!node.body) {
        // This is internal node. Update the total mass of the node and center-of-mass.
        ${e("var {var} = body.pos.{var};",{indent:8})}
        node.mass += body.mass;
        ${e("node.mass_{var} += body.mass * {var};",{indent:8})}

        // Recursively insert the body in the appropriate quadrant.
        // But first find the appropriate quadrant.
        var quadIdx = 0; // Assume we are in the 0's quad.
        ${e("var min_{var} = node.min_{var};",{indent:8})}
        ${e("var max_{var} = (min_{var} + node.max_{var}) / 2;",{indent:8})}

${s(8)}

        var child = getChild(node, quadIdx);

        if (!child) {
          // The node is internal but this quadrant is not taken. Add
          // subnode to it.
          child = newNode();
          ${e("child.min_{var} = min_{var};",{indent:10})}
          ${e("child.max_{var} = max_{var};",{indent:10})}
          child.body = body;

          setChild(node, quadIdx, child);
        } else {
          // continue searching in this quadrant.
          insertStack.push(child, body);
        }
      } else {
        // We are trying to add to the leaf node.
        // We have to convert current leaf into internal node
        // and continue adding two nodes.
        var oldBody = node.body;
        node.body = null; // internal nodes do not cary bodies

        if (isSamePosition(oldBody.pos, body.pos)) {
          // Prevent infinite subdivision by bumping one node
          // anywhere in this quadrant
          var retriesCount = 3;
          do {
            var offset = random.nextDouble();
            ${e("var d{var} = (node.max_{var} - node.min_{var}) * offset;",{indent:12})}

            ${e("oldBody.pos.{var} = node.min_{var} + d{var};",{indent:12})}
            retriesCount -= 1;
            // Make sure we don't bump it out of the box. If we do, next iteration should fix it
          } while (retriesCount > 0 && isSamePosition(oldBody.pos, body.pos));

          if (retriesCount === 0 && isSamePosition(oldBody.pos, body.pos)) {
            // This is very bad, we ran out of precision.
            // if we do not return from the method we'll get into
            // infinite loop here. So we sacrifice correctness of layout, and keep the app running
            // Next layout iteration should get larger bounding box in the first step and fix this
            return;
          }
        }
        // Next iteration should subdivide node further.
        insertStack.push(node, oldBody);
        insertStack.push(node, body);
      }
    }
  }
}
return createQuadTree;

`;function s(a){let c=[],l=Array(a+1).join(" ");for(let u=0;u<i;++u)c.push(l+`if (${pa(u)} > max_${pa(u)}) {`),c.push(l+`  quadIdx = quadIdx + ${Math.pow(2,u)};`),c.push(l+`  min_${pa(u)} = max_${pa(u)};`),c.push(l+`  max_${pa(u)} = node.max_${pa(u)};`),c.push(l+"}");return c.join(`
`)}function r(){let a=Array(11).join(" "),c=[];for(let l=0;l<t;++l)c.push(a+`if (node.quad${l}) {`),c.push(a+`  queue[pushIdx] = node.quad${l};`),c.push(a+"  queueLength += 1;"),c.push(a+"  pushIdx += 1;"),c.push(a+"}");return c.join(`
`)}function o(a){let c=[];for(let l=0;l<t;++l)c.push(`${a}quad${l} = null;`);return c.join(`
`)}}function DP(i){let e=kb(i);return`
  function isSamePosition(point1, point2) {
    ${e("var d{var} = Math.abs(point1.{var} - point2.{var});",{indent:2})}
  
    return ${e("d{var} < 1e-8",{join:" && "})};
  }  
`}function LP(i){var e=Math.pow(2,i);return`
function setChild(node, idx, child) {
  ${t()}
}`;function t(){let n=[];for(let s=0;s<e;++s){let r=s===0?"  ":"  else ";n.push(`${r}if (idx === ${s}) node.quad${s} = child;`)}return n.join(`
`)}}function IP(i){return`function getChild(node, idx) {
${e()}
  return null;
}`;function e(){let t=[],n=Math.pow(2,i);for(let s=0;s<n;++s)t.push(`  if (idx === ${s}) return node.quad${s};`);return t.join(`
`)}}function FP(i){let e=kb(i),t=Math.pow(2,i);var n=`
function QuadNode() {
  // body stored inside this node. In quad tree only leaf nodes (by construction)
  // contain bodies:
  this.body = null;

  // Child nodes are stored in quads. Each quad is presented by number:
  // 0 | 1
  // -----
  // 2 | 3
${s("  this.")}

  // Total mass of current node
  this.mass = 0;

  // Center of mass coordinates
  ${e("this.mass_{var} = 0;",{indent:2})}

  // bounding box coordinates
  ${e("this.min_{var} = 0;",{indent:2})}
  ${e("this.max_{var} = 0;",{indent:2})}
}
`;return n;function s(r){let o=[];for(let a=0;a<t;++a)o.push(`${r}quad${a} = null;`);return o.join(`
`)}}function UP(){return`
/**
 * Our implementation of QuadTree is non-recursive to avoid GC hit
 * This data structure represent stack of elements
 * which we are trying to insert into quad tree.
 */
function InsertStack () {
    this.stack = [];
    this.popIdx = 0;
}

InsertStack.prototype = {
    isEmpty: function() {
        return this.popIdx === 0;
    },
    push: function (node, body) {
        var item = this.stack[this.popIdx];
        if (!item) {
            // we are trying to avoid memory pressure: create new element
            // only when absolutely necessary
            this.stack[this.popIdx] = new InsertStackElement(node, body);
        } else {
            item.node = node;
            item.body = body;
        }
        ++this.popIdx;
    },
    pop: function () {
        if (this.popIdx > 0) {
            return this.stack[--this.popIdx];
        }
    },
    reset: function () {
        this.popIdx = 0;
    }
};

function InsertStackElement(node, body) {
    this.node = node; // QuadTree node
    this.body = body; // physical body which needs to be inserted to node
}
`}var cj=Ka.exports,zb={exports:{}};zb.exports=uj;zb.exports.generateFunctionBody=OP;const lj=Dh;function uj(i){let e=OP(i);return new Function("bodies","settings","random",e)}function OP(i){let e=lj(i);return`
  var boundingBox = {
    ${e("min_{var}: 0, max_{var}: 0,",{indent:4})}
  };

  return {
    box: boundingBox,

    update: updateBoundingBox,

    reset: resetBoundingBox,

    getBestNewPosition: function (neighbors) {
      var ${e("base_{var} = 0",{join:", "})};

      if (neighbors.length) {
        for (var i = 0; i < neighbors.length; ++i) {
          let neighborPos = neighbors[i].pos;
          ${e("base_{var} += neighborPos.{var};",{indent:10})}
        }

        ${e("base_{var} /= neighbors.length;",{indent:8})}
      } else {
        ${e("base_{var} = (boundingBox.min_{var} + boundingBox.max_{var}) / 2;",{indent:8})}
      }

      var springLength = settings.springLength;
      return {
        ${e("{var}: base_{var} + (random.nextDouble() - 0.5) * springLength,",{indent:8})}
      };
    }
  };

  function updateBoundingBox() {
    var i = bodies.length;
    if (i === 0) return; // No bodies - no borders.

    ${e("var max_{var} = -Infinity;",{indent:4})}
    ${e("var min_{var} = Infinity;",{indent:4})}

    while(i--) {
      // this is O(n), it could be done faster with quadtree, if we check the root node bounds
      var bodyPos = bodies[i].pos;
      ${e("if (bodyPos.{var} < min_{var}) min_{var} = bodyPos.{var};",{indent:6})}
      ${e("if (bodyPos.{var} > max_{var}) max_{var} = bodyPos.{var};",{indent:6})}
    }

    ${e("boundingBox.min_{var} = min_{var};",{indent:4})}
    ${e("boundingBox.max_{var} = max_{var};",{indent:4})}
  }

  function resetBoundingBox() {
    ${e("boundingBox.min_{var} = boundingBox.max_{var} = 0;",{indent:4})}
  }
`}var hj=zb.exports,Gb={exports:{}};const dj=Dh;Gb.exports=fj;Gb.exports.generateCreateDragForceFunctionBody=BP;function fj(i){let e=BP(i);return new Function("options",e)}function BP(i){return`
  if (!Number.isFinite(options.dragCoefficient)) throw new Error('dragCoefficient is not a finite number');

  return {
    update: function(body) {
      ${dj(i)("body.force.{var} -= options.dragCoefficient * body.velocity.{var};",{indent:6})}
    }
  };
`}var pj=Gb.exports,Vb={exports:{}};const mj=Dh;Vb.exports=gj;Vb.exports.generateCreateSpringForceFunctionBody=kP;function gj(i){let e=kP(i);return new Function("options","random",e)}function kP(i){let e=mj(i);return`
  if (!Number.isFinite(options.springCoefficient)) throw new Error('Spring coefficient is not a number');
  if (!Number.isFinite(options.springLength)) throw new Error('Spring length is not a number');

  return {
    /**
     * Updates forces acting on a spring
     */
    update: function (spring) {
      var body1 = spring.from;
      var body2 = spring.to;
      var length = spring.length < 0 ? options.springLength : spring.length;
      ${e("var d{var} = body2.pos.{var} - body1.pos.{var};",{indent:6})}
      var r = Math.sqrt(${e("d{var} * d{var}",{join:" + "})});

      if (r === 0) {
        ${e("d{var} = (random.nextDouble() - 0.5) / 50;",{indent:8})}
        r = Math.sqrt(${e("d{var} * d{var}",{join:" + "})});
      }

      var d = r - length;
      var coefficient = ((spring.coefficient > 0) ? spring.coefficient : options.springCoefficient) * d / r;

      ${e("body1.force.{var} += coefficient * d{var}",{indent:6})};
      body1.springCount += 1;
      body1.springLength += r;

      ${e("body2.force.{var} -= coefficient * d{var}",{indent:6})};
      body2.springCount += 1;
      body2.springLength += r;
    }
  };
`}var _j=Vb.exports,Hb={exports:{}};const vj=Dh;Hb.exports=xj;Hb.exports.generateIntegratorFunctionBody=zP;function xj(i){let e=zP(i);return new Function("bodies","timeStep","adaptiveTimeStepWeight",e)}function zP(i){let e=vj(i);return`
  var length = bodies.length;
  if (length === 0) return 0;

  ${e("var d{var} = 0, t{var} = 0;",{indent:2})}

  for (var i = 0; i < length; ++i) {
    var body = bodies[i];
    if (body.isPinned) continue;

    if (adaptiveTimeStepWeight && body.springCount) {
      timeStep = (adaptiveTimeStepWeight * body.springLength/body.springCount);
    }

    var coeff = timeStep / body.mass;

    ${e("body.velocity.{var} += coeff * body.force.{var};",{indent:4})}
    ${e("var v{var} = body.velocity.{var};",{indent:4})}
    var v = Math.sqrt(${e("v{var} * v{var}",{join:" + "})});

    if (v > 1) {
      // We normalize it so that we move within timeStep range. 
      // for the case when v <= 1 - we let velocity to fade out.
      ${e("body.velocity.{var} = v{var} / v;",{indent:6})}
    }

    ${e("d{var} = timeStep * body.velocity.{var};",{indent:4})}

    ${e("body.pos.{var} += d{var};",{indent:4})}

    ${e("t{var} += Math.abs(d{var});",{indent:4})}
  }

  return (${e("t{var} * t{var}",{join:" + "})})/length;
`}var yj=Hb.exports,ev,Yw;function Sj(){if(Yw)return ev;Yw=1,ev=i;function i(e,t,n,s){this.from=e,this.to=t,this.length=n,this.coefficient=s}return ev}var tv,Zw;function bj(){if(Zw)return tv;Zw=1,tv=i;function i(e,t){var n;if(e||(e={}),t){for(n in t)if(t.hasOwnProperty(n)){var s=e.hasOwnProperty(n),r=typeof t[n],o=!s||typeof e[n]!==r;o?e[n]=t[n]:r==="object"&&(e[n]=i(e[n],t[n]))}}return e}return tv}var ed={exports:{}},Kw;function Mj(){if(Kw)return ed.exports;Kw=1,ed.exports=i,ed.exports.random=i,ed.exports.randomIterator=a;function i(c){var l=typeof c=="number"?c:+new Date;return new e(l)}function e(c){this.seed=c}e.prototype.next=o,e.prototype.nextDouble=r,e.prototype.uniform=r,e.prototype.gaussian=t;function t(){var c,l,u;do l=this.nextDouble()*2-1,u=this.nextDouble()*2-1,c=l*l+u*u;while(c>=1||c===0);return l*Math.sqrt(-2*Math.log(c)/c)}e.prototype.levy=n;function n(){var c=1.5,l=Math.pow(s(1+c)*Math.sin(Math.PI*c/2)/(s((1+c)/2)*c*Math.pow(2,(c-1)/2)),1/c);return this.gaussian()*l/Math.pow(Math.abs(this.gaussian()),1/c)}function s(c){return Math.sqrt(2*Math.PI/c)*Math.pow(1/Math.E*(c+1/(12*c-1/(10*c))),c)}function r(){var c=this.seed;return c=c+2127912214+(c<<12)&4294967295,c=(c^3345072700^c>>>19)&4294967295,c=c+374761393+(c<<5)&4294967295,c=(c+3550635116^c<<9)&4294967295,c=c+4251993797+(c<<3)&4294967295,c=(c^3042594569^c>>>16)&4294967295,this.seed=c,(c&268435455)/268435456}function o(c){return Math.floor(this.nextDouble()*c)}function a(c,l){var u=l||i();if(typeof u.next!="function")throw new Error("customRandom does not match expected API: next() function is missing");return{forEach:d,shuffle:h};function h(){var f,m,_;for(f=c.length-1;f>0;--f)m=u.next(f+1),_=c[m],c[m]=c[f],c[f]=_;return c}function d(f){var m,_,g;for(m=c.length-1;m>0;--m)_=u.next(m+1),g=c[_],c[_]=c[m],c[m]=g,f(g);c.length&&f(c[0])}}return ed.exports}var GP=Nj,Tj=oj,Ej=cj,wj=hj,Aj=pj,Cj=_j,Rj=yj,Qw={};function Nj(i){var e=Sj(),t=bj(),n=Ob;if(i){if(i.springCoeff!==void 0)throw new Error("springCoeff was renamed to springCoefficient");if(i.dragCoeff!==void 0)throw new Error("dragCoeff was renamed to dragCoefficient")}i=t(i,{springLength:10,springCoefficient:.8,gravity:-12,theta:.8,dragCoefficient:.9,timeStep:.5,adaptiveTimeStepWeight:0,dimensions:2,debug:!1});var s=Qw[i.dimensions];if(!s){var r=i.dimensions;s={Body:Tj(r,i.debug),createQuadTree:Ej(r),createBounds:wj(r),createDragForce:Aj(r),createSpringForce:Cj(r),integrate:Rj(r)},Qw[r]=s}var o=s.Body,a=s.createQuadTree,c=s.createBounds,l=s.createDragForce,u=s.createSpringForce,h=s.integrate,d=L=>new o(L),f=Mj().random(42),m=[],_=[],g=a(i,f),p=c(m,i,f),y=u(i,f),x=l(i),v=0,S=[],M=new Map,E=0;T("nbody",P),T("spring",N);var w={bodies:m,quadTree:g,springs:_,settings:i,addForce:T,removeForce:C,getForces:D,step:function(){for(var L=0;L<S.length;++L)S[L](E);var U=h(m,i.timeStep,i.adaptiveTimeStepWeight);return E+=1,U},addBody:function(L){if(!L)throw new Error("Body is required");return m.push(L),L},addBodyAt:function(L){if(!L)throw new Error("Body position is required");var U=d(L);return m.push(U),U},removeBody:function(L){if(L){var U=m.indexOf(L);if(!(U<0))return m.splice(U,1),m.length===0&&p.reset(),!0}},addSpring:function(L,U,B,k){if(!L||!U)throw new Error("Cannot add null spring to force simulator");typeof B!="number"&&(B=-1);var $=new e(L,U,B,k>=0?k:-1);return _.push($),$},getTotalMovement:function(){return v},removeSpring:function(L){if(L){var U=_.indexOf(L);if(U>-1)return _.splice(U,1),!0}},getBestNewBodyPosition:function(L){return p.getBestNewPosition(L)},getBBox:b,getBoundingBox:b,invalidateBBox:function(){console.warn("invalidateBBox() is deprecated, bounds always recomputed on `getBBox()` call")},gravity:function(L){return L!==void 0?(i.gravity=L,g.options({gravity:L}),this):i.gravity},theta:function(L){return L!==void 0?(i.theta=L,g.options({theta:L}),this):i.theta},random:f};return Pj(i,w),n(w),w;function b(){return p.update(),p.box}function T(L,U){if(M.has(L))throw new Error("Force "+L+" is already added");M.set(L,U),S.push(U)}function C(L){var U=S.indexOf(M.get(L));U<0||(S.splice(U,1),M.delete(L))}function D(){return M}function P(){if(m.length!==0){g.insertBodies(m);for(var L=m.length;L--;){var U=m[L];U.isPinned||(U.reset(),g.updateBodyForce(U),x.update(U))}}}function N(){for(var L=_.length;L--;)y.update(_[L])}}function Pj(i,e){for(var t in i)Dj(i,e,t)}function Dj(i,e,t){if(i.hasOwnProperty(t)&&typeof e[t]!="function"){var n=Number.isFinite(i[t]);n?e[t]=function(s){if(s!==void 0){if(!Number.isFinite(s))throw new Error("Value of "+t+" should be a valid number.");return i[t]=s,e}return i[t]}:e[t]=function(s){return s!==void 0?(i[t]=s,e):i[t]}}}Bb.exports=Ij;Bb.exports.simulator=GP;var Lj=Ob;function Ij(i,e){if(!i)throw new Error("Graph structure cannot be undefined");var t=e&&e.createSimulator||GP,n=t(e);if(Array.isArray(e))throw new Error("Physics settings is expected to be an object");var s=i.version>19?P:D;e&&typeof e.nodeMass=="function"&&(s=e.nodeMass);var r=new Map,o={},a=0,c=n.settings.springTransform||Fj;x(),g();var l=!1,u={step:function(){if(a===0)return h(!0),!0;var N=n.step();u.lastMove=N,u.fire("step");var L=N/a,U=L<=.01;return h(U),U},getNodePosition:function(N){return C(N).pos},setNodePosition:function(N){var L=C(N);L.setPosition.apply(L,Array.prototype.slice.call(arguments,1))},getLinkPosition:function(N){var L=o[N];if(L)return{from:L.from.pos,to:L.to.pos}},getGraphRect:function(){return n.getBBox()},forEachBody:d,pinNode:function(N,L){var U=C(N.id);U.isPinned=!!L},isNodePinned:function(N){return C(N.id).isPinned},dispose:function(){i.off("changed",y),u.fire("disposed")},getBody:_,getSpring:m,getForceVectorLength:f,simulator:n,graph:i,lastMove:0};return Lj(u),u;function h(N){l!==N&&(l=N,p(N))}function d(N){r.forEach(N)}function f(){var N=0,L=0;return d(function(U){N+=Math.abs(U.force.x),L+=Math.abs(U.force.y)}),Math.sqrt(N*N+L*L)}function m(N,L){var U;if(L===void 0)typeof N!="object"?U=N:U=N.id;else{var B=i.hasLink(N,L);if(!B)return;U=B.id}return o[U]}function _(N){return r.get(N)}function g(){i.on("changed",y)}function p(N){u.fire("stable",N)}function y(N){for(var L=0;L<N.length;++L){var U=N[L];U.changeType==="add"?(U.node&&v(U.node.id),U.link&&M(U.link)):U.changeType==="remove"&&(U.node&&S(U.node),U.link&&E(U.link))}a=i.getNodesCount()}function x(){a=0,i.forEachNode(function(N){v(N.id),a+=1}),i.forEachLink(M)}function v(N){var L=r.get(N);if(!L){var U=i.getNode(N);if(!U)throw new Error("initBody() was called with unknown node id");var B=U.position;if(!B){var k=w(U);B=n.getBestNewBodyPosition(k)}L=n.addBodyAt(B),L.id=N,r.set(N,L),b(N),T(U)&&(L.isPinned=!0)}}function S(N){var L=N.id,U=r.get(L);U&&(r.delete(L),n.removeBody(U))}function M(N){b(N.fromId),b(N.toId);var L=r.get(N.fromId),U=r.get(N.toId),B=n.addSpring(L,U,N.length);c(N,B),o[N.id]=B}function E(N){var L=o[N.id];if(L){var U=i.getNode(N.fromId),B=i.getNode(N.toId);U&&b(U.id),B&&b(B.id),delete o[N.id],n.removeSpring(L)}}function w(N){var L=[];if(!N.links)return L;for(var U=Math.min(N.links.length,2),B=0;B<U;++B){var k=N.links[B],$=k.fromId!==N.id?r.get(k.fromId):r.get(k.toId);$&&$.pos&&L.push($)}return L}function b(N){var L=r.get(N);if(L.mass=s(N),Number.isNaN(L.mass))throw new Error("Node mass should be a number")}function T(N){return N&&(N.isPinned||N.data&&N.data.isPinned)}function C(N){var L=r.get(N);return L||(v(N),L=r.get(N)),L}function D(N){var L=i.getLinks(N);return L?1+L.length/3:1}function P(N){var L=i.getLinks(N);return L?1+L.size/3:1}}function Fj(){}var Uj=Bb.exports;const Oj=EP(Uj);function Iy(i){var e=typeof i;return i!=null&&(e=="object"||e=="function")}var Bj=typeof global=="object"&&global&&global.Object===Object&&global;const kj=Bj;var zj=typeof self=="object"&&self&&self.Object===Object&&self,Gj=kj||zj||Function("return this")();const VP=Gj;var Vj=function(){return VP.Date.now()};const nv=Vj;var Hj=/\s/;function Wj(i){for(var e=i.length;e--&&Hj.test(i.charAt(e)););return e}var $j=/^\s+/;function qj(i){return i&&i.slice(0,Wj(i)+1).replace($j,"")}var Xj=VP.Symbol;const Ag=Xj;var HP=Object.prototype,jj=HP.hasOwnProperty,Yj=HP.toString,td=Ag?Ag.toStringTag:void 0;function Zj(i){var e=jj.call(i,td),t=i[td];try{i[td]=void 0;var n=!0}catch{}var s=Yj.call(i);return n&&(e?i[td]=t:delete i[td]),s}var Kj=Object.prototype,Qj=Kj.toString;function Jj(i){return Qj.call(i)}var e7="[object Null]",t7="[object Undefined]",Jw=Ag?Ag.toStringTag:void 0;function n7(i){return i==null?i===void 0?t7:e7:Jw&&Jw in Object(i)?Zj(i):Jj(i)}function i7(i){return i!=null&&typeof i=="object"}var s7="[object Symbol]";function r7(i){return typeof i=="symbol"||i7(i)&&n7(i)==s7}var eA=0/0,o7=/^[-+]0x[0-9a-f]+$/i,a7=/^0b[01]+$/i,c7=/^0o[0-7]+$/i,l7=parseInt;function tA(i){if(typeof i=="number")return i;if(r7(i))return eA;if(Iy(i)){var e=typeof i.valueOf=="function"?i.valueOf():i;i=Iy(e)?e+"":e}if(typeof i!="string")return i===0?i:+i;i=qj(i);var t=a7.test(i);return t||c7.test(i)?l7(i.slice(2),t?2:8):o7.test(i)?eA:+i}var u7="Expected a function",h7=Math.max,d7=Math.min;function f7(i,e,t){var n,s,r,o,a,c,l=0,u=!1,h=!1,d=!0;if(typeof i!="function")throw new TypeError(u7);e=tA(e)||0,Iy(t)&&(u=!!t.leading,h="maxWait"in t,r=h?h7(tA(t.maxWait)||0,e):r,d="trailing"in t?!!t.trailing:d);function f(M){var E=n,w=s;return n=s=void 0,l=M,o=i.apply(w,E),o}function m(M){return l=M,a=setTimeout(p,e),u?f(M):o}function _(M){var E=M-c,w=M-l,b=e-E;return h?d7(b,r-w):b}function g(M){var E=M-c,w=M-l;return c===void 0||E>=e||E<0||h&&w>=r}function p(){var M=nv();if(g(M))return y(M);a=setTimeout(p,_(M))}function y(M){return a=void 0,d&&n?f(M):(n=s=void 0,o)}function x(){a!==void 0&&clearTimeout(a),l=0,n=c=s=a=void 0}function v(){return a===void 0?o:y(nv())}function S(){var M=nv(),E=g(M);if(n=arguments,s=this,c=M,E){if(a===void 0)return m(c);if(h)return clearTimeout(a),a=setTimeout(p,e),f(c)}return a===void 0&&(a=setTimeout(p,e)),o}return S.cancel=x,S.flush=v,S}function nA(i,e){(e==null||e>i.length)&&(e=i.length);for(var t=0,n=Array(e);t<e;t++)n[t]=i[t];return n}function p7(i){if(Array.isArray(i))return i}function m7(i,e){if(!(i instanceof e))throw new TypeError("Cannot call a class as a function")}function g7(i,e,t){return Object.defineProperty(i,"prototype",{writable:!1}),i}function _7(i,e){var t=i==null?null:typeof Symbol<"u"&&i[Symbol.iterator]||i["@@iterator"];if(t!=null){var n,s,r,o,a=[],c=!0,l=!1;try{if(r=(t=t.call(i)).next,e!==0)for(;!(c=(n=r.call(t)).done)&&(a.push(n.value),a.length!==e);c=!0);}catch(u){l=!0,s=u}finally{try{if(!c&&t.return!=null&&(o=t.return(),Object(o)!==o))return}finally{if(l)throw s}}return a}}function v7(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function x7(i,e){return p7(i)||_7(i,e)||y7(i,e)||v7()}function y7(i,e){if(i){if(typeof i=="string")return nA(i,e);var t={}.toString.call(i).slice(8,-1);return t==="Object"&&i.constructor&&(t=i.constructor.name),t==="Map"||t==="Set"?Array.from(i):t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?nA(i,e):void 0}}var S7=g7(function i(e,t){var n=t.default,s=n===void 0?null:n,r=t.triggerUpdate,o=r===void 0?!0:r,a=t.onChange,c=a===void 0?function(l,u){}:a;m7(this,i),this.name=e,this.defaultVal=s,this.triggerUpdate=o,this.onChange=c});function Wb(i){var e=i.stateInit,t=e===void 0?function(){return{}}:e,n=i.props,s=n===void 0?{}:n,r=i.methods,o=r===void 0?{}:r,a=i.aliases,c=a===void 0?{}:a,l=i.init,u=l===void 0?function(){}:l,h=i.update,d=h===void 0?function(){}:h,f=Object.keys(s).map(function(m){return new S7(m,s[m])});return function(){var m=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},_=Object.assign({},t instanceof Function?t(m):t,{initialised:!1}),g={};function p(v){return y(v,m),x(),p}var y=function(S,M){u.call(p,S,_,M),_.initialised=!0},x=f7(function(){_.initialised&&(d.call(p,_,g),g={})},1);return f.forEach(function(v){p[v.name]=S(v);function S(M){var E=M.name,w=M.triggerUpdate,b=w===void 0?!1:w,T=M.onChange,C=T===void 0?function(N,L){}:T,D=M.defaultVal,P=D===void 0?null:D;return function(N){var L=_[E];if(!arguments.length)return L;var U=N===void 0?P:N;return _[E]=U,C.call(p,U,_,L),!g.hasOwnProperty(E)&&(g[E]=L),b&&x(),p}}}),Object.keys(o).forEach(function(v){p[v]=function(){for(var S,M=arguments.length,E=new Array(M),w=0;w<M;w++)E[w]=arguments[w];return(S=o[v]).call.apply(S,[p,_].concat(E))}}),Object.entries(c).forEach(function(v){var S=x7(v,2),M=S[0],E=S[1];return p[M]=p[E]}),p.resetProps=function(){return f.forEach(function(v){p[v.name](v.defaultVal)}),p},p.resetProps(),_._rerender=x,p}}var Vt=function(i){return typeof i=="function"?i:typeof i=="string"?function(e){return e[i]}:function(e){return i}};class iA extends Map{constructor(e,t=T7){if(super(),Object.defineProperties(this,{_intern:{value:new Map},_key:{value:t}}),e!=null)for(const[n,s]of e)this.set(n,s)}get(e){return super.get(sA(this,e))}has(e){return super.has(sA(this,e))}set(e,t){return super.set(b7(this,e),t)}delete(e){return super.delete(M7(this,e))}}function sA({_intern:i,_key:e},t){const n=e(t);return i.has(n)?i.get(n):t}function b7({_intern:i,_key:e},t){const n=e(t);return i.has(n)?i.get(n):(i.set(n,t),t)}function M7({_intern:i,_key:e},t){const n=e(t);return i.has(n)&&(t=i.get(n),i.delete(n)),t}function T7(i){return i!==null&&typeof i=="object"?i.valueOf():i}function E7(i,e){let t;if(e===void 0)for(const n of i)n!=null&&(t<n||t===void 0&&n>=n)&&(t=n);else{let n=-1;for(let s of i)(s=e(s,++n,i))!=null&&(t<s||t===void 0&&s>=s)&&(t=s)}return t}function w7(i,e){let t;if(e===void 0)for(const n of i)n!=null&&(t>n||t===void 0&&n>=n)&&(t=n);else{let n=-1;for(let s of i)(s=e(s,++n,i))!=null&&(t>s||t===void 0&&s>=s)&&(t=s)}return t}function Fy(i,e){(e==null||e>i.length)&&(e=i.length);for(var t=0,n=Array(e);t<e;t++)n[t]=i[t];return n}function A7(i){if(Array.isArray(i))return i}function C7(i){if(Array.isArray(i))return Fy(i)}function R7(i){if(typeof Symbol<"u"&&i[Symbol.iterator]!=null||i["@@iterator"]!=null)return Array.from(i)}function N7(i,e){var t=i==null?null:typeof Symbol<"u"&&i[Symbol.iterator]||i["@@iterator"];if(t!=null){var n,s,r,o,a=[],c=!0,l=!1;try{if(r=(t=t.call(i)).next,e!==0)for(;!(c=(n=r.call(t)).done)&&(a.push(n.value),a.length!==e);c=!0);}catch(u){l=!0,s=u}finally{try{if(!c&&t.return!=null&&(o=t.return(),Object(o)!==o))return}finally{if(l)throw s}}return a}}function P7(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function D7(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function L7(i,e){if(i==null)return{};var t,n,s=I7(i,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(i);for(n=0;n<r.length;n++)t=r[n],e.includes(t)||{}.propertyIsEnumerable.call(i,t)&&(s[t]=i[t])}return s}function I7(i,e){if(i==null)return{};var t={};for(var n in i)if({}.hasOwnProperty.call(i,n)){if(e.includes(n))continue;t[n]=i[n]}return t}function F7(i,e){return A7(i)||N7(i,e)||WP(i,e)||P7()}function U7(i){return C7(i)||R7(i)||WP(i)||D7()}function O7(i,e){if(typeof i!="object"||!i)return i;var t=i[Symbol.toPrimitive];if(t!==void 0){var n=t.call(i,e);if(typeof n!="object")return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(i)}function B7(i){var e=O7(i,"string");return typeof e=="symbol"?e:e+""}function WP(i,e){if(i){if(typeof i=="string")return Fy(i,e);var t={}.toString.call(i).slice(8,-1);return t==="Object"&&i.constructor&&(t=i.constructor.name),t==="Map"||t==="Set"?Array.from(i):t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Fy(i,e):void 0}}var rA=function(){var i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:[],e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:[],t=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!0,n=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,s=(e instanceof Array?e.length?e:[void 0]:[e]).map(function(a){return{keyAccessor:a,isProp:!(a instanceof Function)}}),r=i.reduce(function(a,c){var l=a,u=c;return s.forEach(function(h,d){var f=h.keyAccessor,m=h.isProp,_;if(m){var g=u,p=g[f],y=L7(g,[f].map(B7));_=p,u=y}else _=f(u,d);d+1<s.length?(l.hasOwnProperty(_)||(l[_]={}),l=l[_]):t?(l.hasOwnProperty(_)||(l[_]=[]),l[_].push(u)):l[_]=u}),a},{});t instanceof Function&&function a(c){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:1;l===s.length?Object.keys(c).forEach(function(u){return c[u]=t(c[u])}):Object.values(c).forEach(function(u){return a(u,l+1)})}(r);var o=r;return n&&(o=[],function a(c){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:[];l.length===s.length?o.push({keys:l,vals:c}):Object.entries(c).forEach(function(u){var h=F7(u,2),d=h[0],f=h[1];return a(f,[].concat(U7(l),[d]))})}(r),e instanceof Array&&e.length===0&&o.length===1&&(o[0].keys=[])),o};function k7(i,e){var t=i==null?null:typeof Symbol<"u"&&i[Symbol.iterator]||i["@@iterator"];if(t!=null){var n,s,r,o,a=[],c=!0,l=!1;try{if(r=(t=t.call(i)).next,e===0){if(Object(t)!==t)return;c=!1}else for(;!(c=(n=r.call(t)).done)&&(a.push(n.value),a.length!==e);c=!0);}catch(u){l=!0,s=u}finally{try{if(!c&&t.return!=null&&(o=t.return(),Object(o)!==o))return}finally{if(l)throw s}}return a}}function oA(i,e){var t=Object.keys(i);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(i);e&&(n=n.filter(function(s){return Object.getOwnPropertyDescriptor(i,s).enumerable})),t.push.apply(t,n)}return t}function z7(i){for(var e=1;e<arguments.length;e++){var t=arguments[e]!=null?arguments[e]:{};e%2?oA(Object(t),!0).forEach(function(n){$P(i,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(i,Object.getOwnPropertyDescriptors(t)):oA(Object(t)).forEach(function(n){Object.defineProperty(i,n,Object.getOwnPropertyDescriptor(t,n))})}return i}function $P(i,e,t){return e=Y7(e),e in i?Object.defineProperty(i,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):i[e]=t,i}function G7(i,e){if(i==null)return{};var t={},n=Object.keys(i),s,r;for(r=0;r<n.length;r++)s=n[r],!(e.indexOf(s)>=0)&&(t[s]=i[s]);return t}function V7(i,e){if(i==null)return{};var t=G7(i,e),n,s;if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(i);for(s=0;s<r.length;s++)n=r[s],!(e.indexOf(n)>=0)&&Object.prototype.propertyIsEnumerable.call(i,n)&&(t[n]=i[n])}return t}function qP(i,e){return W7(i)||k7(i,e)||XP(i,e)||X7()}function Cg(i){return H7(i)||$7(i)||XP(i)||q7()}function H7(i){if(Array.isArray(i))return Uy(i)}function W7(i){if(Array.isArray(i))return i}function $7(i){if(typeof Symbol<"u"&&i[Symbol.iterator]!=null||i["@@iterator"]!=null)return Array.from(i)}function XP(i,e){if(i){if(typeof i=="string")return Uy(i,e);var t=Object.prototype.toString.call(i).slice(8,-1);if(t==="Object"&&i.constructor&&(t=i.constructor.name),t==="Map"||t==="Set")return Array.from(i);if(t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return Uy(i,e)}}function Uy(i,e){(e==null||e>i.length)&&(e=i.length);for(var t=0,n=new Array(e);t<e;t++)n[t]=i[t];return n}function q7(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function X7(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function j7(i,e){if(typeof i!="object"||i===null)return i;var t=i[Symbol.toPrimitive];if(t!==void 0){var n=t.call(i,e||"default");if(typeof n!="object")return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return(e==="string"?String:Number)(i)}function Y7(i){var e=j7(i,"string");return typeof e=="symbol"?e:String(e)}var Z7=["createObj","updateObj","exitObj","objBindAttr","dataBindAttr"];function K7(i,e,t){var n={enter:[],update:[],exit:[]};if(t){var o=rA(i,t,!1),a=rA(e,t,!1),c=Object.assign({},o,a);Object.entries(c).forEach(function(l){var u=qP(l,2),h=u[0],d=u[1],f=o.hasOwnProperty(h)?a.hasOwnProperty(h)?"update":"exit":"enter";n[f].push(f==="update"?[o[h],a[h]]:d)})}else{var s=new Set(i),r=new Set(e);new Set([].concat(Cg(s),Cg(r))).forEach(function(l){var u=s.has(l)?r.has(l)?"update":"exit":"enter";n[u].push(u==="update"?[l,l]:l)})}return n}function Q7(i,e,t){var n=t.objBindAttr,s=n===void 0?"__obj":n,r=t.dataBindAttr,o=r===void 0?"__data":r,a=t.idAccessor,c=t.purge,l=c===void 0?!1:c,u=function(g){return g.hasOwnProperty(o)},h=e.filter(function(_){return!u(_)}),d=e.filter(u).map(function(_){return _[o]}),f=i,m=l?{enter:f,exit:d,update:[]}:K7(d,f,a);return m.update=m.update.map(function(_){var g=qP(_,2),p=g[0],y=g[1];return p!==y&&(y[s]=p[s],y[s][o]=y),y}),m.exit=m.exit.concat(h.map(function(_){return $P({},s,_)})),m}function J7(i,e,t,n,s){var r=s.createObj,o=r===void 0?function(w){return{}}:r,a=s.updateObj,c=a===void 0?function(w,b){}:a,l=s.exitObj,u=l===void 0?function(w){}:l,h=s.objBindAttr,d=h===void 0?"__obj":h,f=s.dataBindAttr,m=f===void 0?"__data":f,_=V7(s,Z7),g=Q7(i,e,z7({objBindAttr:d,dataBindAttr:m},_)),p=g.enter,y=g.update,x=g.exit;x.forEach(function(w){var b=w[d];delete w[d],u(b),n(b)});var v=M(p),S=[].concat(Cg(p),Cg(y));E(S),v.forEach(t);function M(w){var b=[];return w.forEach(function(T){var C=o(T);C&&(C[m]=T,T[d]=C,b.push(C))}),b}function E(w){w.forEach(function(b){var T=b[d];T&&(T[m]=b,c(T,b))})}}function eY(i,e){switch(arguments.length){case 0:break;case 1:this.range(i);break;default:this.range(e).domain(i);break}return this}const aA=Symbol("implicit");function jP(){var i=new iA,e=[],t=[],n=aA;function s(r){let o=i.get(r);if(o===void 0){if(n!==aA)return n;i.set(r,o=e.push(r)-1)}return t[o%t.length]}return s.domain=function(r){if(!arguments.length)return e.slice();e=[],i=new iA;for(const o of r)i.has(o)||i.set(o,e.push(o)-1);return s},s.range=function(r){return arguments.length?(t=Array.from(r),s):t.slice()},s.unknown=function(r){return arguments.length?(n=r,s):n},s.copy=function(){return jP(e,t).unknown(n)},eY.apply(s,arguments),s}function tY(i){for(var e=i.length/6|0,t=new Array(e),n=0;n<e;)t[n]="#"+i.slice(n*6,++n*6);return t}const nY=tY("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928");function Rg(i){return Rg=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Rg(i)}var iY=/^\s+/,sY=/\s+$/;function at(i,e){if(i=i||"",e=e||{},i instanceof at)return i;if(!(this instanceof at))return new at(i,e);var t=rY(i);this._originalInput=i,this._r=t.r,this._g=t.g,this._b=t.b,this._a=t.a,this._roundA=Math.round(100*this._a)/100,this._format=e.format||t.format,this._gradientType=e.gradientType,this._r<1&&(this._r=Math.round(this._r)),this._g<1&&(this._g=Math.round(this._g)),this._b<1&&(this._b=Math.round(this._b)),this._ok=t.ok}at.prototype={isDark:function(){return this.getBrightness()<128},isLight:function(){return!this.isDark()},isValid:function(){return this._ok},getOriginalInput:function(){return this._originalInput},getFormat:function(){return this._format},getAlpha:function(){return this._a},getBrightness:function(){var e=this.toRgb();return(e.r*299+e.g*587+e.b*114)/1e3},getLuminance:function(){var e=this.toRgb(),t,n,s,r,o,a;return t=e.r/255,n=e.g/255,s=e.b/255,t<=.03928?r=t/12.92:r=Math.pow((t+.055)/1.055,2.4),n<=.03928?o=n/12.92:o=Math.pow((n+.055)/1.055,2.4),s<=.03928?a=s/12.92:a=Math.pow((s+.055)/1.055,2.4),.2126*r+.7152*o+.0722*a},setAlpha:function(e){return this._a=YP(e),this._roundA=Math.round(100*this._a)/100,this},toHsv:function(){var e=lA(this._r,this._g,this._b);return{h:e.h*360,s:e.s,v:e.v,a:this._a}},toHsvString:function(){var e=lA(this._r,this._g,this._b),t=Math.round(e.h*360),n=Math.round(e.s*100),s=Math.round(e.v*100);return this._a==1?"hsv("+t+", "+n+"%, "+s+"%)":"hsva("+t+", "+n+"%, "+s+"%, "+this._roundA+")"},toHsl:function(){var e=cA(this._r,this._g,this._b);return{h:e.h*360,s:e.s,l:e.l,a:this._a}},toHslString:function(){var e=cA(this._r,this._g,this._b),t=Math.round(e.h*360),n=Math.round(e.s*100),s=Math.round(e.l*100);return this._a==1?"hsl("+t+", "+n+"%, "+s+"%)":"hsla("+t+", "+n+"%, "+s+"%, "+this._roundA+")"},toHex:function(e){return uA(this._r,this._g,this._b,e)},toHexString:function(e){return"#"+this.toHex(e)},toHex8:function(e){return lY(this._r,this._g,this._b,this._a,e)},toHex8String:function(e){return"#"+this.toHex8(e)},toRgb:function(){return{r:Math.round(this._r),g:Math.round(this._g),b:Math.round(this._b),a:this._a}},toRgbString:function(){return this._a==1?"rgb("+Math.round(this._r)+", "+Math.round(this._g)+", "+Math.round(this._b)+")":"rgba("+Math.round(this._r)+", "+Math.round(this._g)+", "+Math.round(this._b)+", "+this._roundA+")"},toPercentageRgb:function(){return{r:Math.round(mn(this._r,255)*100)+"%",g:Math.round(mn(this._g,255)*100)+"%",b:Math.round(mn(this._b,255)*100)+"%",a:this._a}},toPercentageRgbString:function(){return this._a==1?"rgb("+Math.round(mn(this._r,255)*100)+"%, "+Math.round(mn(this._g,255)*100)+"%, "+Math.round(mn(this._b,255)*100)+"%)":"rgba("+Math.round(mn(this._r,255)*100)+"%, "+Math.round(mn(this._g,255)*100)+"%, "+Math.round(mn(this._b,255)*100)+"%, "+this._roundA+")"},toName:function(){return this._a===0?"transparent":this._a<1?!1:SY[uA(this._r,this._g,this._b,!0)]||!1},toFilter:function(e){var t="#"+hA(this._r,this._g,this._b,this._a),n=t,s=this._gradientType?"GradientType = 1, ":"";if(e){var r=at(e);n="#"+hA(r._r,r._g,r._b,r._a)}return"progid:DXImageTransform.Microsoft.gradient("+s+"startColorstr="+t+",endColorstr="+n+")"},toString:function(e){var t=!!e;e=e||this._format;var n=!1,s=this._a<1&&this._a>=0,r=!t&&s&&(e==="hex"||e==="hex6"||e==="hex3"||e==="hex4"||e==="hex8"||e==="name");return r?e==="name"&&this._a===0?this.toName():this.toRgbString():(e==="rgb"&&(n=this.toRgbString()),e==="prgb"&&(n=this.toPercentageRgbString()),(e==="hex"||e==="hex6")&&(n=this.toHexString()),e==="hex3"&&(n=this.toHexString(!0)),e==="hex4"&&(n=this.toHex8String(!0)),e==="hex8"&&(n=this.toHex8String()),e==="name"&&(n=this.toName()),e==="hsl"&&(n=this.toHslString()),e==="hsv"&&(n=this.toHsvString()),n||this.toHexString())},clone:function(){return at(this.toString())},_applyModification:function(e,t){var n=e.apply(null,[this].concat([].slice.call(t)));return this._r=n._r,this._g=n._g,this._b=n._b,this.setAlpha(n._a),this},lighten:function(){return this._applyModification(fY,arguments)},brighten:function(){return this._applyModification(pY,arguments)},darken:function(){return this._applyModification(mY,arguments)},desaturate:function(){return this._applyModification(uY,arguments)},saturate:function(){return this._applyModification(hY,arguments)},greyscale:function(){return this._applyModification(dY,arguments)},spin:function(){return this._applyModification(gY,arguments)},_applyCombination:function(e,t){return e.apply(null,[this].concat([].slice.call(t)))},analogous:function(){return this._applyCombination(xY,arguments)},complement:function(){return this._applyCombination(_Y,arguments)},monochromatic:function(){return this._applyCombination(yY,arguments)},splitcomplement:function(){return this._applyCombination(vY,arguments)},triad:function(){return this._applyCombination(dA,[3])},tetrad:function(){return this._applyCombination(dA,[4])}};at.fromRatio=function(i,e){if(Rg(i)=="object"){var t={};for(var n in i)i.hasOwnProperty(n)&&(n==="a"?t[n]=i[n]:t[n]=Md(i[n]));i=t}return at(i,e)};function rY(i){var e={r:0,g:0,b:0},t=1,n=null,s=null,r=null,o=!1,a=!1;return typeof i=="string"&&(i=EY(i)),Rg(i)=="object"&&(oo(i.r)&&oo(i.g)&&oo(i.b)?(e=oY(i.r,i.g,i.b),o=!0,a=String(i.r).substr(-1)==="%"?"prgb":"rgb"):oo(i.h)&&oo(i.s)&&oo(i.v)?(n=Md(i.s),s=Md(i.v),e=cY(i.h,n,s),o=!0,a="hsv"):oo(i.h)&&oo(i.s)&&oo(i.l)&&(n=Md(i.s),r=Md(i.l),e=aY(i.h,n,r),o=!0,a="hsl"),i.hasOwnProperty("a")&&(t=i.a)),t=YP(t),{ok:o,format:i.format||a,r:Math.min(255,Math.max(e.r,0)),g:Math.min(255,Math.max(e.g,0)),b:Math.min(255,Math.max(e.b,0)),a:t}}function oY(i,e,t){return{r:mn(i,255)*255,g:mn(e,255)*255,b:mn(t,255)*255}}function cA(i,e,t){i=mn(i,255),e=mn(e,255),t=mn(t,255);var n=Math.max(i,e,t),s=Math.min(i,e,t),r,o,a=(n+s)/2;if(n==s)r=o=0;else{var c=n-s;switch(o=a>.5?c/(2-n-s):c/(n+s),n){case i:r=(e-t)/c+(e<t?6:0);break;case e:r=(t-i)/c+2;break;case t:r=(i-e)/c+4;break}r/=6}return{h:r,s:o,l:a}}function aY(i,e,t){var n,s,r;i=mn(i,360),e=mn(e,100),t=mn(t,100);function o(l,u,h){return h<0&&(h+=1),h>1&&(h-=1),h<1/6?l+(u-l)*6*h:h<1/2?u:h<2/3?l+(u-l)*(2/3-h)*6:l}if(e===0)n=s=r=t;else{var a=t<.5?t*(1+e):t+e-t*e,c=2*t-a;n=o(c,a,i+1/3),s=o(c,a,i),r=o(c,a,i-1/3)}return{r:n*255,g:s*255,b:r*255}}function lA(i,e,t){i=mn(i,255),e=mn(e,255),t=mn(t,255);var n=Math.max(i,e,t),s=Math.min(i,e,t),r,o,a=n,c=n-s;if(o=n===0?0:c/n,n==s)r=0;else{switch(n){case i:r=(e-t)/c+(e<t?6:0);break;case e:r=(t-i)/c+2;break;case t:r=(i-e)/c+4;break}r/=6}return{h:r,s:o,v:a}}function cY(i,e,t){i=mn(i,360)*6,e=mn(e,100),t=mn(t,100);var n=Math.floor(i),s=i-n,r=t*(1-e),o=t*(1-s*e),a=t*(1-(1-s)*e),c=n%6,l=[t,o,r,r,a,t][c],u=[a,t,t,o,r,r][c],h=[r,r,a,t,t,o][c];return{r:l*255,g:u*255,b:h*255}}function uA(i,e,t,n){var s=[or(Math.round(i).toString(16)),or(Math.round(e).toString(16)),or(Math.round(t).toString(16))];return n&&s[0].charAt(0)==s[0].charAt(1)&&s[1].charAt(0)==s[1].charAt(1)&&s[2].charAt(0)==s[2].charAt(1)?s[0].charAt(0)+s[1].charAt(0)+s[2].charAt(0):s.join("")}function lY(i,e,t,n,s){var r=[or(Math.round(i).toString(16)),or(Math.round(e).toString(16)),or(Math.round(t).toString(16)),or(ZP(n))];return s&&r[0].charAt(0)==r[0].charAt(1)&&r[1].charAt(0)==r[1].charAt(1)&&r[2].charAt(0)==r[2].charAt(1)&&r[3].charAt(0)==r[3].charAt(1)?r[0].charAt(0)+r[1].charAt(0)+r[2].charAt(0)+r[3].charAt(0):r.join("")}function hA(i,e,t,n){var s=[or(ZP(n)),or(Math.round(i).toString(16)),or(Math.round(e).toString(16)),or(Math.round(t).toString(16))];return s.join("")}at.equals=function(i,e){return!i||!e?!1:at(i).toRgbString()==at(e).toRgbString()};at.random=function(){return at.fromRatio({r:Math.random(),g:Math.random(),b:Math.random()})};function uY(i,e){e=e===0?0:e||10;var t=at(i).toHsl();return t.s-=e/100,t.s=S_(t.s),at(t)}function hY(i,e){e=e===0?0:e||10;var t=at(i).toHsl();return t.s+=e/100,t.s=S_(t.s),at(t)}function dY(i){return at(i).desaturate(100)}function fY(i,e){e=e===0?0:e||10;var t=at(i).toHsl();return t.l+=e/100,t.l=S_(t.l),at(t)}function pY(i,e){e=e===0?0:e||10;var t=at(i).toRgb();return t.r=Math.max(0,Math.min(255,t.r-Math.round(255*-(e/100)))),t.g=Math.max(0,Math.min(255,t.g-Math.round(255*-(e/100)))),t.b=Math.max(0,Math.min(255,t.b-Math.round(255*-(e/100)))),at(t)}function mY(i,e){e=e===0?0:e||10;var t=at(i).toHsl();return t.l-=e/100,t.l=S_(t.l),at(t)}function gY(i,e){var t=at(i).toHsl(),n=(t.h+e)%360;return t.h=n<0?360+n:n,at(t)}function _Y(i){var e=at(i).toHsl();return e.h=(e.h+180)%360,at(e)}function dA(i,e){if(isNaN(e)||e<=0)throw new Error("Argument to polyad must be a positive number");for(var t=at(i).toHsl(),n=[at(i)],s=360/e,r=1;r<e;r++)n.push(at({h:(t.h+r*s)%360,s:t.s,l:t.l}));return n}function vY(i){var e=at(i).toHsl(),t=e.h;return[at(i),at({h:(t+72)%360,s:e.s,l:e.l}),at({h:(t+216)%360,s:e.s,l:e.l})]}function xY(i,e,t){e=e||6,t=t||30;var n=at(i).toHsl(),s=360/t,r=[at(i)];for(n.h=(n.h-(s*e>>1)+720)%360;--e;)n.h=(n.h+s)%360,r.push(at(n));return r}function yY(i,e){e=e||6;for(var t=at(i).toHsv(),n=t.h,s=t.s,r=t.v,o=[],a=1/e;e--;)o.push(at({h:n,s,v:r})),r=(r+a)%1;return o}at.mix=function(i,e,t){t=t===0?0:t||50;var n=at(i).toRgb(),s=at(e).toRgb(),r=t/100,o={r:(s.r-n.r)*r+n.r,g:(s.g-n.g)*r+n.g,b:(s.b-n.b)*r+n.b,a:(s.a-n.a)*r+n.a};return at(o)};at.readability=function(i,e){var t=at(i),n=at(e);return(Math.max(t.getLuminance(),n.getLuminance())+.05)/(Math.min(t.getLuminance(),n.getLuminance())+.05)};at.isReadable=function(i,e,t){var n=at.readability(i,e),s,r;switch(r=!1,s=wY(t),s.level+s.size){case"AAsmall":case"AAAlarge":r=n>=4.5;break;case"AAlarge":r=n>=3;break;case"AAAsmall":r=n>=7;break}return r};at.mostReadable=function(i,e,t){var n=null,s=0,r,o,a,c;t=t||{},o=t.includeFallbackColors,a=t.level,c=t.size;for(var l=0;l<e.length;l++)r=at.readability(i,e[l]),r>s&&(s=r,n=at(e[l]));return at.isReadable(i,n,{level:a,size:c})||!o?n:(t.includeFallbackColors=!1,at.mostReadable(i,["#fff","#000"],t))};var Oy=at.names={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"0ff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"00f",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",burntsienna:"ea7e5d",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"0ff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"f0f",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",rebeccapurple:"663399",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"},SY=at.hexNames=bY(Oy);function bY(i){var e={};for(var t in i)i.hasOwnProperty(t)&&(e[i[t]]=t);return e}function YP(i){return i=parseFloat(i),(isNaN(i)||i<0||i>1)&&(i=1),i}function mn(i,e){MY(i)&&(i="100%");var t=TY(i);return i=Math.min(e,Math.max(0,parseFloat(i))),t&&(i=parseInt(i*e,10)/100),Math.abs(i-e)<1e-6?1:i%e/parseFloat(e)}function S_(i){return Math.min(1,Math.max(0,i))}function ds(i){return parseInt(i,16)}function MY(i){return typeof i=="string"&&i.indexOf(".")!=-1&&parseFloat(i)===1}function TY(i){return typeof i=="string"&&i.indexOf("%")!=-1}function or(i){return i.length==1?"0"+i:""+i}function Md(i){return i<=1&&(i=i*100+"%"),i}function ZP(i){return Math.round(parseFloat(i)*255).toString(16)}function fA(i){return ds(i)/255}var Xs=function(){var i="[-\\+]?\\d+%?",e="[-\\+]?\\d*\\.\\d+%?",t="(?:"+e+")|(?:"+i+")",n="[\\s|\\(]+("+t+")[,|\\s]+("+t+")[,|\\s]+("+t+")\\s*\\)?",s="[\\s|\\(]+("+t+")[,|\\s]+("+t+")[,|\\s]+("+t+")[,|\\s]+("+t+")\\s*\\)?";return{CSS_UNIT:new RegExp(t),rgb:new RegExp("rgb"+n),rgba:new RegExp("rgba"+s),hsl:new RegExp("hsl"+n),hsla:new RegExp("hsla"+s),hsv:new RegExp("hsv"+n),hsva:new RegExp("hsva"+s),hex3:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,hex4:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex8:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/}}();function oo(i){return!!Xs.CSS_UNIT.exec(i)}function EY(i){i=i.replace(iY,"").replace(sY,"").toLowerCase();var e=!1;if(Oy[i])i=Oy[i],e=!0;else if(i=="transparent")return{r:0,g:0,b:0,a:0,format:"name"};var t;return(t=Xs.rgb.exec(i))?{r:t[1],g:t[2],b:t[3]}:(t=Xs.rgba.exec(i))?{r:t[1],g:t[2],b:t[3],a:t[4]}:(t=Xs.hsl.exec(i))?{h:t[1],s:t[2],l:t[3]}:(t=Xs.hsla.exec(i))?{h:t[1],s:t[2],l:t[3],a:t[4]}:(t=Xs.hsv.exec(i))?{h:t[1],s:t[2],v:t[3]}:(t=Xs.hsva.exec(i))?{h:t[1],s:t[2],v:t[3],a:t[4]}:(t=Xs.hex8.exec(i))?{r:ds(t[1]),g:ds(t[2]),b:ds(t[3]),a:fA(t[4]),format:e?"name":"hex8"}:(t=Xs.hex6.exec(i))?{r:ds(t[1]),g:ds(t[2]),b:ds(t[3]),format:e?"name":"hex"}:(t=Xs.hex4.exec(i))?{r:ds(t[1]+""+t[1]),g:ds(t[2]+""+t[2]),b:ds(t[3]+""+t[3]),a:fA(t[4]+""+t[4]),format:e?"name":"hex8"}:(t=Xs.hex3.exec(i))?{r:ds(t[1]+""+t[1]),g:ds(t[2]+""+t[2]),b:ds(t[3]+""+t[3]),format:e?"name":"hex"}:!1}function wY(i){var e,t;return i=i||{level:"AA",size:"small"},e=(i.level||"AA").toUpperCase(),t=(i.size||"small").toLowerCase(),e!=="AA"&&e!=="AAA"&&(e="AA"),t!=="small"&&t!=="large"&&(t="small"),{level:e,size:t}}function By(i,e){(e==null||e>i.length)&&(e=i.length);for(var t=0,n=Array(e);t<e;t++)n[t]=i[t];return n}function AY(i){if(Array.isArray(i))return i}function CY(i){if(Array.isArray(i))return By(i)}function RY(i){if(i===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return i}function NY(i,e,t){return e=Ng(e),GY(i,qb()?Reflect.construct(e,t||[],Ng(i).constructor):e.apply(i,t))}function PY(i,e){if(!(i instanceof e))throw new TypeError("Cannot call a class as a function")}function DY(i,e,t){if(qb())return Reflect.construct.apply(null,arguments);var n=[null];n.push.apply(n,e);var s=new(i.bind.apply(i,n));return s}function LY(i,e,t){return Object.defineProperty(i,"prototype",{writable:!1}),i}function $b(i,e,t){return(e=HY(e))in i?Object.defineProperty(i,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):i[e]=t,i}function Ng(i){return Ng=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Ng(i)}function IY(i,e){if(typeof e!="function"&&e!==null)throw new TypeError("Super expression must either be null or a function");i.prototype=Object.create(e&&e.prototype,{constructor:{value:i,writable:!0,configurable:!0}}),Object.defineProperty(i,"prototype",{writable:!1}),e&&ky(i,e)}function qb(){try{var i=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch{}return(qb=function(){return!!i})()}function FY(i){if(typeof Symbol<"u"&&i[Symbol.iterator]!=null||i["@@iterator"]!=null)return Array.from(i)}function UY(i,e){var t=i==null?null:typeof Symbol<"u"&&i[Symbol.iterator]||i["@@iterator"];if(t!=null){var n,s,r,o,a=[],c=!0,l=!1;try{if(r=(t=t.call(i)).next,e!==0)for(;!(c=(n=r.call(t)).done)&&(a.push(n.value),a.length!==e);c=!0);}catch(u){l=!0,s=u}finally{try{if(!c&&t.return!=null&&(o=t.return(),Object(o)!==o))return}finally{if(l)throw s}}return a}}function OY(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function BY(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function pA(i,e){var t=Object.keys(i);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(i);e&&(n=n.filter(function(s){return Object.getOwnPropertyDescriptor(i,s).enumerable})),t.push.apply(t,n)}return t}function KP(i){for(var e=1;e<arguments.length;e++){var t=arguments[e]!=null?arguments[e]:{};e%2?pA(Object(t),!0).forEach(function(n){$b(i,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(i,Object.getOwnPropertyDescriptors(t)):pA(Object(t)).forEach(function(n){Object.defineProperty(i,n,Object.getOwnPropertyDescriptor(t,n))})}return i}function kY(i,e){if(i==null)return{};var t,n,s=zY(i,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(i);for(n=0;n<r.length;n++)t=r[n],e.includes(t)||{}.propertyIsEnumerable.call(i,t)&&(s[t]=i[t])}return s}function zY(i,e){if(i==null)return{};var t={};for(var n in i)if({}.hasOwnProperty.call(i,n)){if(e.includes(n))continue;t[n]=i[n]}return t}function GY(i,e){if(e&&(typeof e=="object"||typeof e=="function"))return e;if(e!==void 0)throw new TypeError("Derived constructors may only return object or undefined");return RY(i)}function ky(i,e){return ky=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,n){return t.__proto__=n,t},ky(i,e)}function mA(i,e){return AY(i)||UY(i,e)||QP(i,e)||OY()}function Ys(i){return CY(i)||FY(i)||QP(i)||BY()}function VY(i,e){if(typeof i!="object"||!i)return i;var t=i[Symbol.toPrimitive];if(t!==void 0){var n=t.call(i,e||"default");if(typeof n!="object")return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return(e==="string"?String:Number)(i)}function HY(i){var e=VY(i,"string");return typeof e=="symbol"?e:e+""}function zy(i){return zy=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},zy(i)}function QP(i,e){if(i){if(typeof i=="string")return By(i,e);var t={}.toString.call(i).slice(8,-1);return t==="Object"&&i.constructor&&(t=i.constructor.name),t==="Map"||t==="Set"?Array.from(i):t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?By(i,e):void 0}}var JP=function(e){e instanceof Array?e.forEach(JP):(e.map&&e.map.dispose(),e.dispose())},e2=function(e){e.geometry&&e.geometry.dispose(),e.material&&JP(e.material),e.texture&&e.texture.dispose(),e.children&&e.children.forEach(e2)},Gy=function(e){for(;e.children.length;){var t=e.children[0];e.remove(t),e2(t)}},WY=["objFilter"];function nd(i,e){var t=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},n=t.objFilter,s=n===void 0?function(){return!0}:n,r=kY(t,WY);return J7(i,e.children.filter(s),function(o){return e.add(o)},function(o){e.remove(o),Gy(o)},KP({objBindAttr:"__threeObj"},r))}var id=function(e){return isNaN(e)?parseInt(at(e).toHex(),16):e},iv=function(e){return isNaN(e)?at(e).getAlpha():1},$Y=jP(nY);function gA(i,e,t){!e||typeof t!="string"||i.filter(function(n){return!n[t]}).forEach(function(n){n[t]=$Y(e(n))})}function qY(i,e){var t=i.nodes,n=i.links,s=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},r=s.nodeFilter,o=r===void 0?function(){return!0}:r,a=s.onLoopError,c=a===void 0?function(f){throw"Invalid DAG structure! Found cycle in node path: ".concat(f.join(" -> "),".")}:a,l={};t.forEach(function(f){return l[e(f)]={data:f,out:[],depth:-1,skip:!o(f)}}),n.forEach(function(f){var m=f.source,_=f.target,g=v(m),p=v(_);if(!l.hasOwnProperty(g))throw"Missing source node with id: ".concat(g);if(!l.hasOwnProperty(p))throw"Missing target node with id: ".concat(p);var y=l[g],x=l[p];y.out.push(x);function v(S){return zy(S)==="object"?e(S):S}});var u=[];d(Object.values(l));var h=Object.assign.apply(Object,[{}].concat(Ys(Object.entries(l).filter(function(f){var m=mA(f,2),_=m[1];return!_.skip}).map(function(f){var m=mA(f,2),_=m[0],g=m[1];return $b({},_,g.depth)}))));return h;function d(f){for(var m=arguments.length>1&&arguments[1]!==void 0?arguments[1]:[],_=arguments.length>2&&arguments[2]!==void 0?arguments[2]:0,g=function(){var v=f[p];if(m.indexOf(v)!==-1){var S=[].concat(Ys(m.slice(m.indexOf(v))),[v]).map(function(M){return e(M.data)});return u.some(function(M){return M.length===S.length&&M.every(function(E,w){return E===S[w]})})||(u.push(S),c(S)),1}_>v.depth&&(v.depth=_,d(v.out,[].concat(Ys(m),[v]),_+(v.skip?0:1)))},p=0,y=f.length;p<y;p++)g()}}var pt=window.THREE?window.THREE:{Group:_u,Mesh:Rs,MeshLambertMaterial:sk,Color:Wt,BufferGeometry:Us,BufferAttribute:lr,Matrix4:ci,Vector3:re,SphereGeometry:uR,CylinderGeometry:n_,TubeGeometry:VS,ConeGeometry:GS,Line:aR,LineBasicMaterial:BS,QuadraticBezierCurve3:zS,CubicBezierCurve3:lR,Box3:vh},_A={graph:ij,forcelayout:Oj},XY=2,sv=new pt.BufferGeometry().setAttribute?"setAttribute":"addAttribute",$p=new pt.BufferGeometry().applyMatrix4?"applyMatrix4":"applyMatrix",jY=Wb({props:{jsonUrl:{onChange:function(e,t){var n=this;e&&!t.fetchingJson&&(t.fetchingJson=!0,t.onLoading(),fetch(e).then(function(s){return s.json()}).then(function(s){t.fetchingJson=!1,t.onFinishLoading(s),n.graphData(s)}))},triggerUpdate:!1},graphData:{default:{nodes:[],links:[]},onChange:function(e,t){t.engineRunning=!1}},numDimensions:{default:3,onChange:function(e,t){var n=t.d3ForceLayout.force("charge");n&&n.strength(e>2?-60:-30),e<3&&s(t.graphData.nodes,"z"),e<2&&s(t.graphData.nodes,"y");function s(r,o){r.forEach(function(a){delete a[o],delete a["v".concat(o)]})}}},dagMode:{onChange:function(e,t){!e&&t.forceEngine==="d3"&&(t.graphData.nodes||[]).forEach(function(n){return n.fx=n.fy=n.fz=void 0})}},dagLevelDistance:{},dagNodeFilter:{default:function(e){return!0}},onDagError:{triggerUpdate:!1},nodeRelSize:{default:4},nodeId:{default:"id"},nodeVal:{default:"val"},nodeResolution:{default:8},nodeColor:{default:"color"},nodeAutoColorBy:{},nodeOpacity:{default:.75},nodeVisibility:{default:!0},nodeThreeObject:{},nodeThreeObjectExtend:{default:!1},nodePositionUpdate:{triggerUpdate:!1},linkSource:{default:"source"},linkTarget:{default:"target"},linkVisibility:{default:!0},linkColor:{default:"color"},linkAutoColorBy:{},linkOpacity:{default:.2},linkWidth:{},linkResolution:{default:6},linkCurvature:{default:0,triggerUpdate:!1},linkCurveRotation:{default:0,triggerUpdate:!1},linkMaterial:{},linkThreeObject:{},linkThreeObjectExtend:{default:!1},linkPositionUpdate:{triggerUpdate:!1},linkDirectionalArrowLength:{default:0},linkDirectionalArrowColor:{},linkDirectionalArrowRelPos:{default:.5,triggerUpdate:!1},linkDirectionalArrowResolution:{default:8},linkDirectionalParticles:{default:0},linkDirectionalParticleSpeed:{default:.01,triggerUpdate:!1},linkDirectionalParticleWidth:{default:.5},linkDirectionalParticleColor:{},linkDirectionalParticleResolution:{default:4},forceEngine:{default:"d3"},d3AlphaMin:{default:0},d3AlphaDecay:{default:.0228,triggerUpdate:!1,onChange:function(e,t){t.d3ForceLayout.alphaDecay(e)}},d3AlphaTarget:{default:0,triggerUpdate:!1,onChange:function(e,t){t.d3ForceLayout.alphaTarget(e)}},d3VelocityDecay:{default:.4,triggerUpdate:!1,onChange:function(e,t){t.d3ForceLayout.velocityDecay(e)}},ngraphPhysics:{default:{timeStep:20,gravity:-1.2,theta:.8,springLength:30,springCoefficient:8e-4,dragCoefficient:.02}},warmupTicks:{default:0,triggerUpdate:!1},cooldownTicks:{default:1/0,triggerUpdate:!1},cooldownTime:{default:15e3,triggerUpdate:!1},onLoading:{default:function(){},triggerUpdate:!1},onFinishLoading:{default:function(){},triggerUpdate:!1},onUpdate:{default:function(){},triggerUpdate:!1},onFinishUpdate:{default:function(){},triggerUpdate:!1},onEngineTick:{default:function(){},triggerUpdate:!1},onEngineStop:{default:function(){},triggerUpdate:!1}},methods:{refresh:function(e){return e._flushObjects=!0,e._rerender(),this},d3Force:function(e,t,n){return n===void 0?e.d3ForceLayout.force(t):(e.d3ForceLayout.force(t,n),this)},d3ReheatSimulation:function(e){return e.d3ForceLayout.alpha(1),this.resetCountdown(),this},resetCountdown:function(e){return e.cntTicks=0,e.startTickTime=new Date,e.engineRunning=!0,this},tickFrame:function(e){var t=e.forceEngine!=="ngraph";return e.engineRunning&&n(),s(),r(),this;function n(){++e.cntTicks>e.cooldownTicks||new Date-e.startTickTime>e.cooldownTime||t&&e.d3AlphaMin>0&&e.d3ForceLayout.alpha()<e.d3AlphaMin?(e.engineRunning=!1,e.onEngineStop()):(e.layout[t?"tick":"step"](),e.onEngineTick());var o=Vt(e.nodeThreeObjectExtend);e.graphData.nodes.forEach(function(d){var f=d.__threeObj;if(f){var m=t?d:e.layout.getNodePosition(d[e.nodeId]),_=o(d);(!e.nodePositionUpdate||!e.nodePositionUpdate(_?f.children[0]:f,{x:m.x,y:m.y,z:m.z},d)||_)&&(f.position.x=m.x,f.position.y=m.y||0,f.position.z=m.z||0)}});var a=Vt(e.linkWidth),c=Vt(e.linkCurvature),l=Vt(e.linkCurveRotation),u=Vt(e.linkThreeObjectExtend);e.graphData.links.forEach(function(d){var f=d.__lineObj;if(f){var m=t?d:e.layout.getLinkPosition(e.layout.graph.getLink(d.source,d.target).id),_=m[t?"source":"from"],g=m[t?"target":"to"];if(!(!_||!g||!_.hasOwnProperty("x")||!g.hasOwnProperty("x"))){h(d);var p=u(d);if(!(e.linkPositionUpdate&&e.linkPositionUpdate(p?f.children[1]:f,{start:{x:_.x,y:_.y,z:_.z},end:{x:g.x,y:g.y,z:g.z}},d)&&!p)){var y=30,x=d.__curve,v=f.children.length?f.children[0]:f;if(v.type==="Line"){if(x){var M=x.getPoints(y);v.geometry.getAttribute("position").array.length!==M.length*3&&v.geometry[sv]("position",new pt.BufferAttribute(new Float32Array(M.length*3),3)),v.geometry.setFromPoints(M)}else{var S=v.geometry.getAttribute("position");(!S||!S.array||S.array.length!==6)&&v.geometry[sv]("position",S=new pt.BufferAttribute(new Float32Array(2*3),3)),S.array[0]=_.x,S.array[1]=_.y||0,S.array[2]=_.z||0,S.array[3]=g.x,S.array[4]=g.y||0,S.array[5]=g.z||0,S.needsUpdate=!0}v.geometry.computeBoundingSphere()}else if(v.type==="Mesh")if(x){v.geometry.type.match(/^Tube(Buffer)?Geometry$/)||(v.position.set(0,0,0),v.rotation.set(0,0,0),v.scale.set(1,1,1));var P=Math.ceil(a(d)*10)/10,N=P/2,L=new pt.TubeGeometry(x,y,N,e.linkResolution,!1);v.geometry.dispose(),v.geometry=L}else{if(!v.geometry.type.match(/^Cylinder(Buffer)?Geometry$/)){var E=Math.ceil(a(d)*10)/10,w=E/2,b=new pt.CylinderGeometry(w,w,1,e.linkResolution,1,!1);b[$p](new pt.Matrix4().makeTranslation(0,1/2,0)),b[$p](new pt.Matrix4().makeRotationX(Math.PI/2)),v.geometry.dispose(),v.geometry=b}var T=new pt.Vector3(_.x,_.y||0,_.z||0),C=new pt.Vector3(g.x,g.y||0,g.z||0),D=T.distanceTo(C);v.position.x=T.x,v.position.y=T.y,v.position.z=T.z,v.scale.z=D,v.parent.localToWorld(C),v.lookAt(C)}}}}});function h(d){var f=t?d:e.layout.getLinkPosition(e.layout.graph.getLink(d.source,d.target).id),m=f[t?"source":"from"],_=f[t?"target":"to"];if(!(!m||!_||!m.hasOwnProperty("x")||!_.hasOwnProperty("x"))){var g=c(d);if(!g)d.__curve=null;else{var p=new pt.Vector3(m.x,m.y||0,m.z||0),y=new pt.Vector3(_.x,_.y||0,_.z||0),x=p.distanceTo(y),v,S=l(d);if(x>0){var M=_.x-m.x,E=_.y-m.y||0,w=new pt.Vector3().subVectors(y,p),b=w.clone().multiplyScalar(g).cross(M!==0||E!==0?new pt.Vector3(0,0,1):new pt.Vector3(0,1,0)).applyAxisAngle(w.normalize(),S).add(new pt.Vector3().addVectors(p,y).divideScalar(2));v=new pt.QuadraticBezierCurve3(p,b,y)}else{var T=g*70,C=-S,D=C+Math.PI/2;v=new pt.CubicBezierCurve3(p,new pt.Vector3(T*Math.cos(D),T*Math.sin(D),0).add(p),new pt.Vector3(T*Math.cos(C),T*Math.sin(C),0).add(p),y)}d.__curve=v}}}}function s(){var o=Vt(e.linkDirectionalArrowRelPos),a=Vt(e.linkDirectionalArrowLength),c=Vt(e.nodeVal);e.graphData.links.forEach(function(l){var u=l.__arrowObj;if(u){var h=t?l:e.layout.getLinkPosition(e.layout.graph.getLink(l.source,l.target).id),d=h[t?"source":"from"],f=h[t?"target":"to"];if(!(!d||!f||!d.hasOwnProperty("x")||!f.hasOwnProperty("x"))){var m=Math.cbrt(Math.max(0,c(d)||1))*e.nodeRelSize,_=Math.cbrt(Math.max(0,c(f)||1))*e.nodeRelSize,g=a(l),p=o(l),y=l.__curve?function(w){return l.__curve.getPoint(w)}:function(w){var b=function(C,D,P,N){return D[C]+(P[C]-D[C])*N||0};return{x:b("x",d,f,w),y:b("y",d,f,w),z:b("z",d,f,w)}},x=l.__curve?l.__curve.getLength():Math.sqrt(["x","y","z"].map(function(w){return Math.pow((f[w]||0)-(d[w]||0),2)}).reduce(function(w,b){return w+b},0)),v=m+g+(x-m-_-g)*p,S=y(v/x),M=y((v-g)/x);["x","y","z"].forEach(function(w){return u.position[w]=M[w]});var E=DY(pt.Vector3,Ys(["x","y","z"].map(function(w){return S[w]})));u.parent.localToWorld(E),u.lookAt(E)}}})}function r(){var o=Vt(e.linkDirectionalParticleSpeed);e.graphData.links.forEach(function(a){var c=a.__photonsObj&&a.__photonsObj.children,l=a.__singleHopPhotonsObj&&a.__singleHopPhotonsObj.children;if(!((!l||!l.length)&&(!c||!c.length))){var u=t?a:e.layout.getLinkPosition(e.layout.graph.getLink(a.source,a.target).id),h=u[t?"source":"from"],d=u[t?"target":"to"];if(!(!h||!d||!h.hasOwnProperty("x")||!d.hasOwnProperty("x"))){var f=o(a),m=a.__curve?function(g){return a.__curve.getPoint(g)}:function(g){var p=function(x,v,S,M){return v[x]+(S[x]-v[x])*M||0};return{x:p("x",h,d,g),y:p("y",h,d,g),z:p("z",h,d,g)}},_=[].concat(Ys(c||[]),Ys(l||[]));_.forEach(function(g,p){var y=g.parent.__linkThreeObjType==="singleHopPhotons";if(g.hasOwnProperty("__progressRatio")||(g.__progressRatio=y?0:p/c.length),g.__progressRatio+=f,g.__progressRatio>=1)if(!y)g.__progressRatio=g.__progressRatio%1;else{g.parent.remove(g),Gy(g);return}var x=g.__progressRatio,v=m(x);["x","y","z"].forEach(function(S){return g.position[S]=v[S]})})}}})}},emitParticle:function(e,t){if(t&&e.graphData.links.includes(t)){if(!t.__singleHopPhotonsObj){var n=new pt.Group;n.__linkThreeObjType="singleHopPhotons",t.__singleHopPhotonsObj=n,e.graphScene.add(n)}var s=Vt(e.linkDirectionalParticleWidth),r=Math.ceil(s(t)*10)/10/2,o=e.linkDirectionalParticleResolution,a=new pt.SphereGeometry(r,o,o),c=Vt(e.linkColor),l=Vt(e.linkDirectionalParticleColor),u=l(t)||c(t)||"#f0f0f0",h=new pt.Color(id(u)),d=e.linkOpacity*3,f=new pt.MeshLambertMaterial({color:h,transparent:!0,opacity:d});t.__singleHopPhotonsObj.add(new pt.Mesh(a,f))}return this},getGraphBbox:function(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:function(){return!0};if(!e.initialised)return null;var n=function s(r){var o=[];if(r.geometry){r.geometry.computeBoundingBox();var a=new pt.Box3;a.copy(r.geometry.boundingBox).applyMatrix4(r.matrixWorld),o.push(a)}return o.concat.apply(o,Ys((r.children||[]).filter(function(c){return!c.hasOwnProperty("__graphObjType")||c.__graphObjType==="node"&&t(c.__data)}).map(s)))}(e.graphScene);return n.length?Object.assign.apply(Object,Ys(["x","y","z"].map(function(s){return $b({},s,[w7(n,function(r){return r.min[s]}),E7(n,function(r){return r.max[s]})])}))):null}},stateInit:function(){return{d3ForceLayout:jX().force("link",LX()).force("charge",YX()).force("center",O9()).force("dagRadial",null).stop(),engineRunning:!1}},init:function(e,t){t.graphScene=e},update:function(e,t){var n=function(H){return H.some(function(Q){return t.hasOwnProperty(Q)})};if(e.engineRunning=!1,e.onUpdate(),e.nodeAutoColorBy!==null&&n(["nodeAutoColorBy","graphData","nodeColor"])&&gA(e.graphData.nodes,Vt(e.nodeAutoColorBy),e.nodeColor),e.linkAutoColorBy!==null&&n(["linkAutoColorBy","graphData","linkColor"])&&gA(e.graphData.links,Vt(e.linkAutoColorBy),e.linkColor),e._flushObjects||n(["graphData","nodeThreeObject","nodeThreeObjectExtend","nodeVal","nodeColor","nodeVisibility","nodeRelSize","nodeResolution","nodeOpacity"])){var s=Vt(e.nodeThreeObject),r=Vt(e.nodeThreeObjectExtend),o=Vt(e.nodeVal),a=Vt(e.nodeColor),c=Vt(e.nodeVisibility),l={},u={};nd(e.graphData.nodes.filter(c),e.graphScene,{purge:e._flushObjects||n(["nodeThreeObject","nodeThreeObjectExtend"]),objFilter:function(H){return H.__graphObjType==="node"},createObj:function(H){var Q=s(H),O=r(H);Q&&e.nodeThreeObject===Q&&(Q=Q.clone());var oe;return Q&&!O?oe=Q:(oe=new pt.Mesh,oe.__graphDefaultObj=!0,Q&&O&&oe.add(Q)),oe.__graphObjType="node",oe},updateObj:function(H,Q){if(H.__graphDefaultObj){var O=o(Q)||1,oe=Math.cbrt(O)*e.nodeRelSize,Ne=e.nodeResolution;(!H.geometry.type.match(/^Sphere(Buffer)?Geometry$/)||H.geometry.parameters.radius!==oe||H.geometry.parameters.widthSegments!==Ne)&&(l.hasOwnProperty(O)||(l[O]=new pt.SphereGeometry(oe,Ne,Ne)),H.geometry.dispose(),H.geometry=l[O]);var _e=a(Q),Fe=new pt.Color(id(_e||"#ffffaa")),Xe=e.nodeOpacity*iv(_e);(H.material.type!=="MeshLambertMaterial"||!H.material.color.equals(Fe)||H.material.opacity!==Xe)&&(u.hasOwnProperty(_e)||(u[_e]=new pt.MeshLambertMaterial({color:Fe,transparent:!0,opacity:Xe})),H.material.dispose(),H.material=u[_e])}}})}if(e._flushObjects||n(["graphData","linkThreeObject","linkThreeObjectExtend","linkMaterial","linkColor","linkWidth","linkVisibility","linkResolution","linkOpacity","linkDirectionalArrowLength","linkDirectionalArrowColor","linkDirectionalArrowResolution","linkDirectionalParticles","linkDirectionalParticleWidth","linkDirectionalParticleColor","linkDirectionalParticleResolution"])){var h=Vt(e.linkThreeObject),d=Vt(e.linkThreeObjectExtend),f=Vt(e.linkMaterial),m=Vt(e.linkVisibility),_=Vt(e.linkColor),g=Vt(e.linkWidth),p={},y={},x={},v=e.graphData.links.filter(m);if(nd(v,e.graphScene,{objBindAttr:"__lineObj",purge:e._flushObjects||n(["linkThreeObject","linkThreeObjectExtend","linkWidth"]),objFilter:function(H){return H.__graphObjType==="link"},exitObj:function(H){var Q=H.__data&&H.__data.__singleHopPhotonsObj;Q&&(Q.parent.remove(Q),Gy(Q),delete H.__data.__singleHopPhotonsObj)},createObj:function(H){var Q=h(H),O=d(H);Q&&e.linkThreeObject===Q&&(Q=Q.clone());var oe;if(!Q||O){var Ne=!!g(H);if(Ne)oe=new pt.Mesh;else{var _e=new pt.BufferGeometry;_e[sv]("position",new pt.BufferAttribute(new Float32Array(2*3),3)),oe=new pt.Line(_e)}}var Fe;return Q?O?(Fe=new pt.Group,Fe.__graphDefaultObj=!0,Fe.add(oe),Fe.add(Q)):Fe=Q:(Fe=oe,Fe.__graphDefaultObj=!0),Fe.renderOrder=10,Fe.__graphObjType="link",Fe},updateObj:function(H,Q){if(H.__graphDefaultObj){var O=H.children.length?H.children[0]:H,oe=Math.ceil(g(Q)*10)/10,Ne=!!oe;if(Ne){var _e=oe/2,Fe=e.linkResolution;if(!O.geometry.type.match(/^Cylinder(Buffer)?Geometry$/)||O.geometry.parameters.radiusTop!==_e||O.geometry.parameters.radialSegments!==Fe){if(!p.hasOwnProperty(oe)){var Xe=new pt.CylinderGeometry(_e,_e,1,Fe,1,!1);Xe[$p](new pt.Matrix4().makeTranslation(0,1/2,0)),Xe[$p](new pt.Matrix4().makeRotationX(Math.PI/2)),p[oe]=Xe}O.geometry.dispose(),O.geometry=p[oe]}}var $e=f(Q);if($e)O.material=$e;else{var j=_(Q),Ie=new pt.Color(id(j||"#f0f0f0")),De=e.linkOpacity*iv(j),qe=Ne?"MeshLambertMaterial":"LineBasicMaterial";if(O.material.type!==qe||!O.material.color.equals(Ie)||O.material.opacity!==De){var Be=Ne?y:x;Be.hasOwnProperty(j)||(Be[j]=new pt[qe]({color:Ie,transparent:De<1,opacity:De,depthWrite:De>=1})),O.material.dispose(),O.material=Be[j]}}}}}),e.linkDirectionalArrowLength||t.hasOwnProperty("linkDirectionalArrowLength")){var S=Vt(e.linkDirectionalArrowLength),M=Vt(e.linkDirectionalArrowColor);nd(v.filter(S),e.graphScene,{objBindAttr:"__arrowObj",objFilter:function(H){return H.__linkThreeObjType==="arrow"},createObj:function(){var H=new pt.Mesh(void 0,new pt.MeshLambertMaterial({transparent:!0}));return H.__linkThreeObjType="arrow",H},updateObj:function(H,Q){var O=S(Q),oe=e.linkDirectionalArrowResolution;if(!H.geometry.type.match(/^Cone(Buffer)?Geometry$/)||H.geometry.parameters.height!==O||H.geometry.parameters.radialSegments!==oe){var Ne=new pt.ConeGeometry(O*.25,O,oe);Ne.translate(0,O/2,0),Ne.rotateX(Math.PI/2),H.geometry.dispose(),H.geometry=Ne}var _e=M(Q)||_(Q)||"#f0f0f0";H.material.color=new pt.Color(id(_e)),H.material.opacity=e.linkOpacity*3*iv(_e)}})}if(e.linkDirectionalParticles||t.hasOwnProperty("linkDirectionalParticles")){var E=Vt(e.linkDirectionalParticles),w=Vt(e.linkDirectionalParticleWidth),b=Vt(e.linkDirectionalParticleColor),T={},C={};nd(v.filter(E),e.graphScene,{objBindAttr:"__photonsObj",objFilter:function(H){return H.__linkThreeObjType==="photons"},createObj:function(){var H=new pt.Group;return H.__linkThreeObjType="photons",H},updateObj:function(H,Q){var O=Math.round(Math.abs(E(Q))),oe=!!H.children.length&&H.children[0],Ne=Math.ceil(w(Q)*10)/10/2,_e=e.linkDirectionalParticleResolution,Fe;oe&&oe.geometry.parameters.radius===Ne&&oe.geometry.parameters.widthSegments===_e?Fe=oe.geometry:(C.hasOwnProperty(Ne)||(C[Ne]=new pt.SphereGeometry(Ne,_e,_e)),Fe=C[Ne],oe&&oe.geometry.dispose());var Xe=b(Q)||_(Q)||"#f0f0f0",$e=new pt.Color(id(Xe)),j=e.linkOpacity*3,Ie;oe&&oe.material.color.equals($e)&&oe.material.opacity===j?Ie=oe.material:(T.hasOwnProperty(Xe)||(T[Xe]=new pt.MeshLambertMaterial({color:$e,transparent:!0,opacity:j})),Ie=T[Xe],oe&&oe.material.dispose()),nd(Ys(new Array(O)).map(function(De,qe){return{idx:qe}}),H,{idAccessor:function(qe){return qe.idx},createObj:function(){return new pt.Mesh(Fe,Ie)},updateObj:function(qe){qe.geometry=Fe,qe.material=Ie}})}})}}if(e._flushObjects=!1,n(["graphData","nodeId","linkSource","linkTarget","numDimensions","forceEngine","dagMode","dagNodeFilter","dagLevelDistance"])){e.engineRunning=!1,e.graphData.links.forEach(function(V){V.source=V[e.linkSource],V.target=V[e.linkTarget]});var D=e.forceEngine!=="ngraph",P;if(D){(P=e.d3ForceLayout).stop().alpha(1).numDimensions(e.numDimensions).nodes(e.graphData.nodes);var N=e.d3ForceLayout.force("link");N&&N.id(function(V){return V[e.nodeId]}).links(e.graphData.links);var L=e.dagMode&&qY(e.graphData,function(V){return V[e.nodeId]},{nodeFilter:e.dagNodeFilter,onLoopError:e.onDagError||void 0}),U=Math.max.apply(Math,Ys(Object.values(L||[]))),B=e.dagLevelDistance||e.graphData.nodes.length/(U||1)*XY*(["radialin","radialout"].indexOf(e.dagMode)!==-1?.7:1);if(["lr","rl","td","bu","zin","zout"].includes(t.dagMode)){var k=["lr","rl"].includes(t.dagMode)?"fx":["td","bu"].includes(t.dagMode)?"fy":"fz";e.graphData.nodes.filter(e.dagNodeFilter).forEach(function(V){return delete V[k]})}if(["lr","rl","td","bu","zin","zout"].includes(e.dagMode)){var $=["rl","td","zout"].includes(e.dagMode),z=function(H){return(L[H[e.nodeId]]-U/2)*B*($?-1:1)},Y=["lr","rl"].includes(e.dagMode)?"fx":["td","bu"].includes(e.dagMode)?"fy":"fz";e.graphData.nodes.filter(e.dagNodeFilter).forEach(function(V){return V[Y]=z(V)})}e.d3ForceLayout.force("dagRadial",["radialin","radialout"].indexOf(e.dagMode)!==-1?ZX(function(V){var H=L[V[e.nodeId]]||-1;return(e.dagMode==="radialin"?U-H:H)*B}).strength(function(V){return e.dagNodeFilter(V)?1:0}):null)}else{var ne=_A.graph();e.graphData.nodes.forEach(function(V){ne.addNode(V[e.nodeId])}),e.graphData.links.forEach(function(V){ne.addLink(V.source,V.target)}),P=_A.forcelayout(ne,KP({dimensions:e.numDimensions},e.ngraphPhysics)),P.graph=ne}for(var te=0;te<e.warmupTicks&&!(D&&e.d3AlphaMin>0&&e.d3ForceLayout.alpha()<e.d3AlphaMin);te++)P[D?"tick":"step"]();e.layout=P,this.resetCountdown()}e.engineRunning=!0,e.onFinishUpdate()}});function YY(i){var e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Object,t=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,n=function(s){function r(){var o;PY(this,r);for(var a=arguments.length,c=new Array(a),l=0;l<a;l++)c[l]=arguments[l];return o=NY(this,r,[].concat(c)),o.__kapsuleInstance=i().apply(void 0,[].concat(Ys(t?[o]:[]),c)),o}return IY(r,s),LY(r)}(e);return Object.keys(i()).forEach(function(s){return n.prototype[s]=function(){var r,o=(r=this.__kapsuleInstance)[s].apply(r,arguments);return o===this.__kapsuleInstance?this:o}}),n}var ZY=window.THREE?window.THREE:{Group:_u},t2=YY(jY,ZY.Group,!0);/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const b_="170",KY=0,QY=1,JY=2,eZ=1,qp=3,ch=0,pr=1,Bu=2,lh=0,Ua=1,Pg=2,Dg=3,Lg=4,n2=5,Ca=100,i2=101,s2=102,tZ=103,nZ=104,r2=200,o2=201,a2=202,c2=203,Ig=204,Fg=205,l2=206,u2=207,h2=208,d2=209,f2=210,p2=0,m2=1,g2=2,Ug=3,_2=4,v2=5,x2=6,y2=7,M_=0,iZ=1,sZ=2,ku=0,rZ=1,oZ=2,aZ=3,cZ=4,lZ=6,uZ=7,Xb=300,nl=301,uh=302,Uf=303,Of=304,Vy=306,Og=1e3,yu=1001,Bg=1002,Si=1003,Hy=1004,zu=1005,xs=1006,Wy=1007,Bo=1008,Oa=1009,Id=1010,Fd=1011,Su=1012,Ni=1013,ri=1014,gs=1015,ko=1016,hZ=1017,dZ=1018,Bf=1020,S2=35902,fZ=1021,jb=1022,Lh=1023,pZ=1024,mZ=1025,Vc=1026,hh=1027,Yb=1028,Zb=1029,cf=1030,Kb=1031,gZ=1032,Qb=1033,rv=33776,Xm=33777,jm=33778,Ym=33779,vA=35840,xA=35841,yA=35842,SA=35843,bA=36196,$y=37492,qy=37496,Xy=37808,jy=37809,Yy=37810,Zy=37811,Ky=37812,Qy=37813,Jy=37814,eS=37815,tS=37816,nS=37817,iS=37818,sS=37819,rS=37820,oS=37821,ov=36492,_Z=36283,MA=36284,TA=36285,EA=36286,$a=0,vZ=1,il="",ht="srgb",Ba="srgb-linear",b2="linear",lf="srgb",xZ=0,Sc=7680,yZ=7681,SZ=7682,bZ=7683,MZ=34055,TZ=34056,EZ=5386,wZ=512,AZ=513,CZ=514,RZ=515,NZ=516,PZ=517,DZ=518,aS=519,M2=512,Jb=513,T2=514,E2=515,w2=516,A2=517,C2=518,R2=519,kg=35044,bu=35048,ar=2e3,sl=2001;class Ih{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const s=this._listeners[e];if(s!==void 0){const r=s.indexOf(t);r!==-1&&s.splice(r,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const s=n.slice(0);for(let r=0,o=s.length;r<o;r++)s[r].call(this,e);e.target=null}}}const gi=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let wA=1234567;const Ud=Math.PI/180,uf=180/Math.PI;function zo(){const i=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(gi[i&255]+gi[i>>8&255]+gi[i>>16&255]+gi[i>>24&255]+"-"+gi[e&255]+gi[e>>8&255]+"-"+gi[e>>16&15|64]+gi[e>>24&255]+"-"+gi[t&63|128]+gi[t>>8&255]+"-"+gi[t>>16&255]+gi[t>>24&255]+gi[n&255]+gi[n>>8&255]+gi[n>>16&255]+gi[n>>24&255]).toLowerCase()}function oi(i,e,t){return Math.max(e,Math.min(t,i))}function eM(i,e){return(i%e+e)%e}function LZ(i,e,t,n,s){return n+(i-e)*(s-n)/(t-e)}function IZ(i,e,t){return i!==e?(t-i)/(e-i):0}function Od(i,e,t){return(1-t)*i+t*e}function FZ(i,e,t,n){return Od(i,e,1-Math.exp(-t*n))}function UZ(i,e=1){return e-Math.abs(eM(i,e*2)-e)}function OZ(i,e,t){return i<=e?0:i>=t?1:(i=(i-e)/(t-e),i*i*(3-2*i))}function BZ(i,e,t){return i<=e?0:i>=t?1:(i=(i-e)/(t-e),i*i*i*(i*(i*6-15)+10))}function kZ(i,e){return i+Math.floor(Math.random()*(e-i+1))}function zZ(i,e){return i+Math.random()*(e-i)}function GZ(i){return i*(.5-Math.random())}function VZ(i){i!==void 0&&(wA=i);let e=wA+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function HZ(i){return i*Ud}function WZ(i){return i*uf}function $Z(i){return(i&i-1)===0&&i!==0}function qZ(i){return Math.pow(2,Math.ceil(Math.log(i)/Math.LN2))}function XZ(i){return Math.pow(2,Math.floor(Math.log(i)/Math.LN2))}function jZ(i,e,t,n,s){const r=Math.cos,o=Math.sin,a=r(t/2),c=o(t/2),l=r((e+n)/2),u=o((e+n)/2),h=r((e-n)/2),d=o((e-n)/2),f=r((n-e)/2),m=o((n-e)/2);switch(s){case"XYX":i.set(a*u,c*h,c*d,a*l);break;case"YZY":i.set(c*d,a*u,c*h,a*l);break;case"ZXZ":i.set(c*h,c*d,a*u,a*l);break;case"XZX":i.set(a*u,c*m,c*f,a*l);break;case"YXY":i.set(c*f,a*u,c*m,a*l);break;case"ZYZ":i.set(c*m,c*f,a*u,a*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+s)}}function Di(i,e){switch(e.constructor){case Float32Array:return i;case Uint32Array:return i/4294967295;case Uint16Array:return i/65535;case Uint8Array:return i/255;case Int32Array:return Math.max(i/2147483647,-1);case Int16Array:return Math.max(i/32767,-1);case Int8Array:return Math.max(i/127,-1);default:throw new Error("Invalid component type.")}}function St(i,e){switch(e.constructor){case Float32Array:return i;case Uint32Array:return Math.round(i*4294967295);case Uint16Array:return Math.round(i*65535);case Uint8Array:return Math.round(i*255);case Int32Array:return Math.round(i*2147483647);case Int16Array:return Math.round(i*32767);case Int8Array:return Math.round(i*127);default:throw new Error("Invalid component type.")}}const YZ={DEG2RAD:Ud,RAD2DEG:uf,generateUUID:zo,clamp:oi,euclideanModulo:eM,mapLinear:LZ,inverseLerp:IZ,lerp:Od,damp:FZ,pingpong:UZ,smoothstep:OZ,smootherstep:BZ,randInt:kZ,randFloat:zZ,randFloatSpread:GZ,seededRandom:VZ,degToRad:HZ,radToDeg:WZ,isPowerOfTwo:$Z,ceilPowerOfTwo:qZ,floorPowerOfTwo:XZ,setQuaternionFromProperEuler:jZ,normalize:St,denormalize:Di};class Bt{constructor(e=0,t=0){Bt.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6],this.y=s[1]*t+s[4]*n+s[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(oi(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),s=Math.sin(t),r=this.x-e.x,o=this.y-e.y;return this.x=r*n-o*s+e.x,this.y=r*s+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class es{constructor(e,t,n,s,r,o,a,c,l){es.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,s,r,o,a,c,l)}set(e,t,n,s,r,o,a,c,l){const u=this.elements;return u[0]=e,u[1]=s,u[2]=a,u[3]=t,u[4]=r,u[5]=c,u[6]=n,u[7]=o,u[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,s=t.elements,r=this.elements,o=n[0],a=n[3],c=n[6],l=n[1],u=n[4],h=n[7],d=n[2],f=n[5],m=n[8],_=s[0],g=s[3],p=s[6],y=s[1],x=s[4],v=s[7],S=s[2],M=s[5],E=s[8];return r[0]=o*_+a*y+c*S,r[3]=o*g+a*x+c*M,r[6]=o*p+a*v+c*E,r[1]=l*_+u*y+h*S,r[4]=l*g+u*x+h*M,r[7]=l*p+u*v+h*E,r[2]=d*_+f*y+m*S,r[5]=d*g+f*x+m*M,r[8]=d*p+f*v+m*E,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],s=e[2],r=e[3],o=e[4],a=e[5],c=e[6],l=e[7],u=e[8];return t*o*u-t*a*l-n*r*u+n*a*c+s*r*l-s*o*c}invert(){const e=this.elements,t=e[0],n=e[1],s=e[2],r=e[3],o=e[4],a=e[5],c=e[6],l=e[7],u=e[8],h=u*o-a*l,d=a*c-u*r,f=l*r-o*c,m=t*h+n*d+s*f;if(m===0)return this.set(0,0,0,0,0,0,0,0,0);const _=1/m;return e[0]=h*_,e[1]=(s*l-u*n)*_,e[2]=(a*n-s*o)*_,e[3]=d*_,e[4]=(u*t-s*c)*_,e[5]=(s*r-a*t)*_,e[6]=f*_,e[7]=(n*c-l*t)*_,e[8]=(o*t-n*r)*_,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,s,r,o,a){const c=Math.cos(r),l=Math.sin(r);return this.set(n*c,n*l,-n*(c*o+l*a)+o+e,-s*l,s*c,-s*(-l*o+c*a)+a+t,0,0,1),this}scale(e,t){return this.premultiply(av.makeScale(e,t)),this}rotate(e){return this.premultiply(av.makeRotation(-e)),this}translate(e,t){return this.premultiply(av.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let s=0;s<9;s++)if(t[s]!==n[s])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const av=new es;function ZZ(i){for(let e=i.length-1;e>=0;--e)if(i[e]>=65535)return!0;return!1}function cS(i){return document.createElementNS("http://www.w3.org/1999/xhtml",i)}function KZ(){const i=cS("canvas");return i.style.display="block",i}const AA={};function QZ(i){i in AA||(AA[i]=!0,console.warn(i))}const Fn={enabled:!0,workingColorSpace:Ba,spaces:{},convert:function(i,e,t){return this.enabled===!1||e===t||!e||!t||(this.spaces[e].transfer===lf&&(i.r=Go(i.r),i.g=Go(i.g),i.b=Go(i.b)),this.spaces[e].primaries!==this.spaces[t].primaries&&(i.applyMatrix3(this.spaces[e].toXYZ),i.applyMatrix3(this.spaces[t].fromXYZ)),this.spaces[t].transfer===lf&&(i.r=Gu(i.r),i.g=Gu(i.g),i.b=Gu(i.b))),i},fromWorkingColorSpace:function(i,e){return this.convert(i,this.workingColorSpace,e)},toWorkingColorSpace:function(i,e){return this.convert(i,e,this.workingColorSpace)},getPrimaries:function(i){return this.spaces[i].primaries},getTransfer:function(i){return i===il?b2:this.spaces[i].transfer},getLuminanceCoefficients:function(i,e=this.workingColorSpace){return i.fromArray(this.spaces[e].luminanceCoefficients)},define:function(i){Object.assign(this.spaces,i)},_getMatrix:function(i,e,t){return i.copy(this.spaces[e].toXYZ).multiply(this.spaces[t].fromXYZ)},_getDrawingBufferColorSpace:function(i){return this.spaces[i].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(i=this.workingColorSpace){return this.spaces[i].workingColorSpaceConfig.unpackColorSpace}};function Go(i){return i<.04045?i*.0773993808:Math.pow(i*.9478672986+.0521327014,2.4)}function Gu(i){return i<.0031308?i*12.92:1.055*Math.pow(i,.41666)-.055}const CA=[.64,.33,.3,.6,.15,.06],RA=[.2126,.7152,.0722],NA=[.3127,.329],PA=new es().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),DA=new es().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);Fn.define({[Ba]:{primaries:CA,whitePoint:NA,transfer:b2,toXYZ:PA,fromXYZ:DA,luminanceCoefficients:RA,workingColorSpaceConfig:{unpackColorSpace:ht},outputColorSpaceConfig:{drawingBufferColorSpace:ht}},[ht]:{primaries:CA,whitePoint:NA,transfer:lf,toXYZ:PA,fromXYZ:DA,luminanceCoefficients:RA,outputColorSpaceConfig:{drawingBufferColorSpace:ht}}});let Xl;class JZ{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Xl===void 0&&(Xl=cS("canvas")),Xl.width=e.width,Xl.height=e.height;const n=Xl.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Xl}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=cS("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const s=n.getImageData(0,0,e.width,e.height),r=s.data;for(let o=0;o<r.length;o++)r[o]=Go(r[o]/255)*255;return n.putImageData(s,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(Go(t[n]/255)*255):t[n]=Go(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let eK=0;class N2{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:eK++}),this.uuid=zo(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},s=this.data;if(s!==null){let r;if(Array.isArray(s)){r=[];for(let o=0,a=s.length;o<a;o++)s[o].isDataTexture?r.push(cv(s[o].image)):r.push(cv(s[o]))}else r=cv(s);n.url=r}return t||(e.images[this.uuid]=n),n}}function cv(i){return typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&i instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&i instanceof ImageBitmap?JZ.getDataURL(i):i.data?{data:Array.from(i.data),width:i.width,height:i.height,type:i.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let tK=0;class Ui extends Ih{constructor(e=Ui.DEFAULT_IMAGE,t=Ui.DEFAULT_MAPPING,n=yu,s=yu,r=xs,o=Bo,a=Lh,c=Oa,l=Ui.DEFAULT_ANISOTROPY,u=il){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:tK++}),this.uuid=zo(),this.name="",this.source=new N2(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=s,this.magFilter=r,this.minFilter=o,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=c,this.offset=new Bt(0,0),this.repeat=new Bt(1,1),this.center=new Bt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new es,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Xb)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Og:e.x=e.x-Math.floor(e.x);break;case yu:e.x=e.x<0?0:1;break;case Bg:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Og:e.y=e.y-Math.floor(e.y);break;case yu:e.y=e.y<0?0:1;break;case Bg:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}Ui.DEFAULT_IMAGE=null;Ui.DEFAULT_MAPPING=Xb;Ui.DEFAULT_ANISOTROPY=1;class Yt{constructor(e=0,t=0,n=0,s=1){Yt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=s}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,s){return this.x=e,this.y=t,this.z=n,this.w=s,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,s=this.z,r=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*s+o[12]*r,this.y=o[1]*t+o[5]*n+o[9]*s+o[13]*r,this.z=o[2]*t+o[6]*n+o[10]*s+o[14]*r,this.w=o[3]*t+o[7]*n+o[11]*s+o[15]*r,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,s,r;const c=e.elements,l=c[0],u=c[4],h=c[8],d=c[1],f=c[5],m=c[9],_=c[2],g=c[6],p=c[10];if(Math.abs(u-d)<.01&&Math.abs(h-_)<.01&&Math.abs(m-g)<.01){if(Math.abs(u+d)<.1&&Math.abs(h+_)<.1&&Math.abs(m+g)<.1&&Math.abs(l+f+p-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const x=(l+1)/2,v=(f+1)/2,S=(p+1)/2,M=(u+d)/4,E=(h+_)/4,w=(m+g)/4;return x>v&&x>S?x<.01?(n=0,s=.707106781,r=.707106781):(n=Math.sqrt(x),s=M/n,r=E/n):v>S?v<.01?(n=.707106781,s=0,r=.707106781):(s=Math.sqrt(v),n=M/s,r=w/s):S<.01?(n=.707106781,s=.707106781,r=0):(r=Math.sqrt(S),n=E/r,s=w/r),this.set(n,s,r,t),this}let y=Math.sqrt((g-m)*(g-m)+(h-_)*(h-_)+(d-u)*(d-u));return Math.abs(y)<.001&&(y=1),this.x=(g-m)/y,this.y=(h-_)/y,this.z=(d-u)/y,this.w=Math.acos((l+f+p-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Fh extends Ih{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Yt(0,0,e,t),this.scissorTest=!1,this.viewport=new Yt(0,0,e,t);const s={width:e,height:t,depth:1};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:xs,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},n);const r=new Ui(s,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);r.flipY=!1,r.generateMipmaps=n.generateMipmaps,r.internalFormat=n.internalFormat,this.textures=[];const o=n.count;for(let a=0;a<o;a++)this.textures[a]=r.clone(),this.textures[a].isRenderTargetTexture=!0;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let s=0,r=this.textures.length;s<r;s++)this.textures[s].image.width=e,this.textures[s].image.height=t,this.textures[s].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let n=0,s=e.textures.length;n<s;n++)this.textures[n]=e.textures[n].clone(),this.textures[n].isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new N2(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class nK extends Fh{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class iK extends Ui{constructor(e=null,t=1,n=1,s=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:s},this.magFilter=Si,this.minFilter=Si,this.wrapR=yu,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class kf{constructor(e=0,t=0,n=0,s=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=s}static slerpFlat(e,t,n,s,r,o,a){let c=n[s+0],l=n[s+1],u=n[s+2],h=n[s+3];const d=r[o+0],f=r[o+1],m=r[o+2],_=r[o+3];if(a===0){e[t+0]=c,e[t+1]=l,e[t+2]=u,e[t+3]=h;return}if(a===1){e[t+0]=d,e[t+1]=f,e[t+2]=m,e[t+3]=_;return}if(h!==_||c!==d||l!==f||u!==m){let g=1-a;const p=c*d+l*f+u*m+h*_,y=p>=0?1:-1,x=1-p*p;if(x>Number.EPSILON){const S=Math.sqrt(x),M=Math.atan2(S,p*y);g=Math.sin(g*M)/S,a=Math.sin(a*M)/S}const v=a*y;if(c=c*g+d*v,l=l*g+f*v,u=u*g+m*v,h=h*g+_*v,g===1-a){const S=1/Math.sqrt(c*c+l*l+u*u+h*h);c*=S,l*=S,u*=S,h*=S}}e[t]=c,e[t+1]=l,e[t+2]=u,e[t+3]=h}static multiplyQuaternionsFlat(e,t,n,s,r,o){const a=n[s],c=n[s+1],l=n[s+2],u=n[s+3],h=r[o],d=r[o+1],f=r[o+2],m=r[o+3];return e[t]=a*m+u*h+c*f-l*d,e[t+1]=c*m+u*d+l*h-a*f,e[t+2]=l*m+u*f+a*d-c*h,e[t+3]=u*m-a*h-c*d-l*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,s){return this._x=e,this._y=t,this._z=n,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,s=e._y,r=e._z,o=e._order,a=Math.cos,c=Math.sin,l=a(n/2),u=a(s/2),h=a(r/2),d=c(n/2),f=c(s/2),m=c(r/2);switch(o){case"XYZ":this._x=d*u*h+l*f*m,this._y=l*f*h-d*u*m,this._z=l*u*m+d*f*h,this._w=l*u*h-d*f*m;break;case"YXZ":this._x=d*u*h+l*f*m,this._y=l*f*h-d*u*m,this._z=l*u*m-d*f*h,this._w=l*u*h+d*f*m;break;case"ZXY":this._x=d*u*h-l*f*m,this._y=l*f*h+d*u*m,this._z=l*u*m+d*f*h,this._w=l*u*h-d*f*m;break;case"ZYX":this._x=d*u*h-l*f*m,this._y=l*f*h+d*u*m,this._z=l*u*m-d*f*h,this._w=l*u*h+d*f*m;break;case"YZX":this._x=d*u*h+l*f*m,this._y=l*f*h+d*u*m,this._z=l*u*m-d*f*h,this._w=l*u*h-d*f*m;break;case"XZY":this._x=d*u*h-l*f*m,this._y=l*f*h-d*u*m,this._z=l*u*m+d*f*h,this._w=l*u*h+d*f*m;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,s=Math.sin(n);return this._x=e.x*s,this._y=e.y*s,this._z=e.z*s,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],s=t[4],r=t[8],o=t[1],a=t[5],c=t[9],l=t[2],u=t[6],h=t[10],d=n+a+h;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(u-c)*f,this._y=(r-l)*f,this._z=(o-s)*f}else if(n>a&&n>h){const f=2*Math.sqrt(1+n-a-h);this._w=(u-c)/f,this._x=.25*f,this._y=(s+o)/f,this._z=(r+l)/f}else if(a>h){const f=2*Math.sqrt(1+a-n-h);this._w=(r-l)/f,this._x=(s+o)/f,this._y=.25*f,this._z=(c+u)/f}else{const f=2*Math.sqrt(1+h-n-a);this._w=(o-s)/f,this._x=(r+l)/f,this._y=(c+u)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(oi(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const s=Math.min(1,t/n);return this.slerp(e,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,s=e._y,r=e._z,o=e._w,a=t._x,c=t._y,l=t._z,u=t._w;return this._x=n*u+o*a+s*l-r*c,this._y=s*u+o*c+r*a-n*l,this._z=r*u+o*l+n*c-s*a,this._w=o*u-n*a-s*c-r*l,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,s=this._y,r=this._z,o=this._w;let a=o*e._w+n*e._x+s*e._y+r*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=n,this._y=s,this._z=r,this;const c=1-a*a;if(c<=Number.EPSILON){const f=1-t;return this._w=f*o+t*this._w,this._x=f*n+t*this._x,this._y=f*s+t*this._y,this._z=f*r+t*this._z,this.normalize(),this}const l=Math.sqrt(c),u=Math.atan2(l,a),h=Math.sin((1-t)*u)/l,d=Math.sin(t*u)/l;return this._w=o*h+this._w*d,this._x=n*h+this._x*d,this._y=s*h+this._y*d,this._z=r*h+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),s=Math.sqrt(1-n),r=Math.sqrt(n);return this.set(s*Math.sin(e),s*Math.cos(e),r*Math.sin(t),r*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class fe{constructor(e=0,t=0,n=0){fe.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(LA.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(LA.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,s=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*s,this.y=r[1]*t+r[4]*n+r[7]*s,this.z=r[2]*t+r[5]*n+r[8]*s,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,s=this.z,r=e.elements,o=1/(r[3]*t+r[7]*n+r[11]*s+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*s+r[12])*o,this.y=(r[1]*t+r[5]*n+r[9]*s+r[13])*o,this.z=(r[2]*t+r[6]*n+r[10]*s+r[14])*o,this}applyQuaternion(e){const t=this.x,n=this.y,s=this.z,r=e.x,o=e.y,a=e.z,c=e.w,l=2*(o*s-a*n),u=2*(a*t-r*s),h=2*(r*n-o*t);return this.x=t+c*l+o*h-a*u,this.y=n+c*u+a*l-r*h,this.z=s+c*h+r*u-o*l,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,s=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*s,this.y=r[1]*t+r[5]*n+r[9]*s,this.z=r[2]*t+r[6]*n+r[10]*s,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,s=e.y,r=e.z,o=t.x,a=t.y,c=t.z;return this.x=s*c-r*a,this.y=r*o-n*c,this.z=n*a-s*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return lv.copy(this).projectOnVector(e),this.sub(lv)}reflect(e){return this.sub(lv.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(oi(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,s=this.z-e.z;return t*t+n*n+s*s}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const s=Math.sin(t)*e;return this.x=s*Math.sin(n),this.y=Math.cos(t)*e,this.z=s*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),s=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=s,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const lv=new fe,LA=new kf;class zf{constructor(e=new fe(1/0,1/0,1/0),t=new fe(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(Ws.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(Ws.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Ws.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const r=n.getAttribute("position");if(t===!0&&r!==void 0&&e.isInstancedMesh!==!0)for(let o=0,a=r.count;o<a;o++)e.isMesh===!0?e.getVertexPosition(o,Ws):Ws.fromBufferAttribute(r,o),Ws.applyMatrix4(e.matrixWorld),this.expandByPoint(Ws);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),Xp.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),Xp.copy(n.boundingBox)),Xp.applyMatrix4(e.matrixWorld),this.union(Xp)}const s=e.children;for(let r=0,o=s.length;r<o;r++)this.expandByObject(s[r],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,Ws),Ws.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(sd),jp.subVectors(this.max,sd),jl.subVectors(e.a,sd),Yl.subVectors(e.b,sd),Zl.subVectors(e.c,sd),ma.subVectors(Yl,jl),ga.subVectors(Zl,Yl),dc.subVectors(jl,Zl);let t=[0,-ma.z,ma.y,0,-ga.z,ga.y,0,-dc.z,dc.y,ma.z,0,-ma.x,ga.z,0,-ga.x,dc.z,0,-dc.x,-ma.y,ma.x,0,-ga.y,ga.x,0,-dc.y,dc.x,0];return!uv(t,jl,Yl,Zl,jp)||(t=[1,0,0,0,1,0,0,0,1],!uv(t,jl,Yl,Zl,jp))?!1:(Yp.crossVectors(ma,ga),t=[Yp.x,Yp.y,Yp.z],uv(t,jl,Yl,Zl,jp))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Ws).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Ws).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(ao[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),ao[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),ao[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),ao[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),ao[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),ao[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),ao[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),ao[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(ao),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const ao=[new fe,new fe,new fe,new fe,new fe,new fe,new fe,new fe],Ws=new fe,Xp=new zf,jl=new fe,Yl=new fe,Zl=new fe,ma=new fe,ga=new fe,dc=new fe,sd=new fe,jp=new fe,Yp=new fe,fc=new fe;function uv(i,e,t,n,s){for(let r=0,o=i.length-3;r<=o;r+=3){fc.fromArray(i,r);const a=s.x*Math.abs(fc.x)+s.y*Math.abs(fc.y)+s.z*Math.abs(fc.z),c=e.dot(fc),l=t.dot(fc),u=n.dot(fc);if(Math.max(-Math.max(c,l,u),Math.min(c,l,u))>a)return!1}return!0}const sK=new zf,rd=new fe,hv=new fe;class tM{constructor(e=new fe,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):sK.setFromPoints(e).getCenter(n);let s=0;for(let r=0,o=e.length;r<o;r++)s=Math.max(s,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(s),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;rd.subVectors(e,this.center);const t=rd.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),s=(n-this.radius)*.5;this.center.addScaledVector(rd,s/n),this.radius+=s}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(hv.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(rd.copy(e.center).add(hv)),this.expandByPoint(rd.copy(e.center).sub(hv))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const co=new fe,dv=new fe,Zp=new fe,_a=new fe,fv=new fe,Kp=new fe,pv=new fe;class rK{constructor(e=new fe,t=new fe(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,co)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=co.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(co.copy(this.origin).addScaledVector(this.direction,t),co.distanceToSquared(e))}distanceSqToSegment(e,t,n,s){dv.copy(e).add(t).multiplyScalar(.5),Zp.copy(t).sub(e).normalize(),_a.copy(this.origin).sub(dv);const r=e.distanceTo(t)*.5,o=-this.direction.dot(Zp),a=_a.dot(this.direction),c=-_a.dot(Zp),l=_a.lengthSq(),u=Math.abs(1-o*o);let h,d,f,m;if(u>0)if(h=o*c-a,d=o*a-c,m=r*u,h>=0)if(d>=-m)if(d<=m){const _=1/u;h*=_,d*=_,f=h*(h+o*d+2*a)+d*(o*h+d+2*c)+l}else d=r,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*c)+l;else d=-r,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*c)+l;else d<=-m?(h=Math.max(0,-(-o*r+a)),d=h>0?-r:Math.min(Math.max(-r,-c),r),f=-h*h+d*(d+2*c)+l):d<=m?(h=0,d=Math.min(Math.max(-r,-c),r),f=d*(d+2*c)+l):(h=Math.max(0,-(o*r+a)),d=h>0?r:Math.min(Math.max(-r,-c),r),f=-h*h+d*(d+2*c)+l);else d=o>0?-r:r,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*c)+l;return n&&n.copy(this.origin).addScaledVector(this.direction,h),s&&s.copy(dv).addScaledVector(Zp,d),f}intersectSphere(e,t){co.subVectors(e.center,this.origin);const n=co.dot(this.direction),s=co.dot(co)-n*n,r=e.radius*e.radius;if(s>r)return null;const o=Math.sqrt(r-s),a=n-o,c=n+o;return c<0?null:a<0?this.at(c,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,s,r,o,a,c;const l=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,d=this.origin;return l>=0?(n=(e.min.x-d.x)*l,s=(e.max.x-d.x)*l):(n=(e.max.x-d.x)*l,s=(e.min.x-d.x)*l),u>=0?(r=(e.min.y-d.y)*u,o=(e.max.y-d.y)*u):(r=(e.max.y-d.y)*u,o=(e.min.y-d.y)*u),n>o||r>s||((r>n||isNaN(n))&&(n=r),(o<s||isNaN(s))&&(s=o),h>=0?(a=(e.min.z-d.z)*h,c=(e.max.z-d.z)*h):(a=(e.max.z-d.z)*h,c=(e.min.z-d.z)*h),n>c||a>s)||((a>n||n!==n)&&(n=a),(c<s||s!==s)&&(s=c),s<0)?null:this.at(n>=0?n:s,t)}intersectsBox(e){return this.intersectBox(e,co)!==null}intersectTriangle(e,t,n,s,r){fv.subVectors(t,e),Kp.subVectors(n,e),pv.crossVectors(fv,Kp);let o=this.direction.dot(pv),a;if(o>0){if(s)return null;a=1}else if(o<0)a=-1,o=-o;else return null;_a.subVectors(this.origin,e);const c=a*this.direction.dot(Kp.crossVectors(_a,Kp));if(c<0)return null;const l=a*this.direction.dot(fv.cross(_a));if(l<0||c+l>o)return null;const u=-a*_a.dot(pv);return u<0?null:this.at(u/o,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class _n{constructor(e,t,n,s,r,o,a,c,l,u,h,d,f,m,_,g){_n.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,s,r,o,a,c,l,u,h,d,f,m,_,g)}set(e,t,n,s,r,o,a,c,l,u,h,d,f,m,_,g){const p=this.elements;return p[0]=e,p[4]=t,p[8]=n,p[12]=s,p[1]=r,p[5]=o,p[9]=a,p[13]=c,p[2]=l,p[6]=u,p[10]=h,p[14]=d,p[3]=f,p[7]=m,p[11]=_,p[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new _n().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,s=1/Kl.setFromMatrixColumn(e,0).length(),r=1/Kl.setFromMatrixColumn(e,1).length(),o=1/Kl.setFromMatrixColumn(e,2).length();return t[0]=n[0]*s,t[1]=n[1]*s,t[2]=n[2]*s,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,s=e.y,r=e.z,o=Math.cos(n),a=Math.sin(n),c=Math.cos(s),l=Math.sin(s),u=Math.cos(r),h=Math.sin(r);if(e.order==="XYZ"){const d=o*u,f=o*h,m=a*u,_=a*h;t[0]=c*u,t[4]=-c*h,t[8]=l,t[1]=f+m*l,t[5]=d-_*l,t[9]=-a*c,t[2]=_-d*l,t[6]=m+f*l,t[10]=o*c}else if(e.order==="YXZ"){const d=c*u,f=c*h,m=l*u,_=l*h;t[0]=d+_*a,t[4]=m*a-f,t[8]=o*l,t[1]=o*h,t[5]=o*u,t[9]=-a,t[2]=f*a-m,t[6]=_+d*a,t[10]=o*c}else if(e.order==="ZXY"){const d=c*u,f=c*h,m=l*u,_=l*h;t[0]=d-_*a,t[4]=-o*h,t[8]=m+f*a,t[1]=f+m*a,t[5]=o*u,t[9]=_-d*a,t[2]=-o*l,t[6]=a,t[10]=o*c}else if(e.order==="ZYX"){const d=o*u,f=o*h,m=a*u,_=a*h;t[0]=c*u,t[4]=m*l-f,t[8]=d*l+_,t[1]=c*h,t[5]=_*l+d,t[9]=f*l-m,t[2]=-l,t[6]=a*c,t[10]=o*c}else if(e.order==="YZX"){const d=o*c,f=o*l,m=a*c,_=a*l;t[0]=c*u,t[4]=_-d*h,t[8]=m*h+f,t[1]=h,t[5]=o*u,t[9]=-a*u,t[2]=-l*u,t[6]=f*h+m,t[10]=d-_*h}else if(e.order==="XZY"){const d=o*c,f=o*l,m=a*c,_=a*l;t[0]=c*u,t[4]=-h,t[8]=l*u,t[1]=d*h+_,t[5]=o*u,t[9]=f*h-m,t[2]=m*h-f,t[6]=a*u,t[10]=_*h+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(oK,e,aK)}lookAt(e,t,n){const s=this.elements;return cs.subVectors(e,t),cs.lengthSq()===0&&(cs.z=1),cs.normalize(),va.crossVectors(n,cs),va.lengthSq()===0&&(Math.abs(n.z)===1?cs.x+=1e-4:cs.z+=1e-4,cs.normalize(),va.crossVectors(n,cs)),va.normalize(),Qp.crossVectors(cs,va),s[0]=va.x,s[4]=Qp.x,s[8]=cs.x,s[1]=va.y,s[5]=Qp.y,s[9]=cs.y,s[2]=va.z,s[6]=Qp.z,s[10]=cs.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,s=t.elements,r=this.elements,o=n[0],a=n[4],c=n[8],l=n[12],u=n[1],h=n[5],d=n[9],f=n[13],m=n[2],_=n[6],g=n[10],p=n[14],y=n[3],x=n[7],v=n[11],S=n[15],M=s[0],E=s[4],w=s[8],b=s[12],T=s[1],C=s[5],D=s[9],P=s[13],N=s[2],L=s[6],U=s[10],B=s[14],k=s[3],$=s[7],z=s[11],Y=s[15];return r[0]=o*M+a*T+c*N+l*k,r[4]=o*E+a*C+c*L+l*$,r[8]=o*w+a*D+c*U+l*z,r[12]=o*b+a*P+c*B+l*Y,r[1]=u*M+h*T+d*N+f*k,r[5]=u*E+h*C+d*L+f*$,r[9]=u*w+h*D+d*U+f*z,r[13]=u*b+h*P+d*B+f*Y,r[2]=m*M+_*T+g*N+p*k,r[6]=m*E+_*C+g*L+p*$,r[10]=m*w+_*D+g*U+p*z,r[14]=m*b+_*P+g*B+p*Y,r[3]=y*M+x*T+v*N+S*k,r[7]=y*E+x*C+v*L+S*$,r[11]=y*w+x*D+v*U+S*z,r[15]=y*b+x*P+v*B+S*Y,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],s=e[8],r=e[12],o=e[1],a=e[5],c=e[9],l=e[13],u=e[2],h=e[6],d=e[10],f=e[14],m=e[3],_=e[7],g=e[11],p=e[15];return m*(+r*c*h-s*l*h-r*a*d+n*l*d+s*a*f-n*c*f)+_*(+t*c*f-t*l*d+r*o*d-s*o*f+s*l*u-r*c*u)+g*(+t*l*h-t*a*f-r*o*h+n*o*f+r*a*u-n*l*u)+p*(-s*a*u-t*c*h+t*a*d+s*o*h-n*o*d+n*c*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const s=this.elements;return e.isVector3?(s[12]=e.x,s[13]=e.y,s[14]=e.z):(s[12]=e,s[13]=t,s[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],s=e[2],r=e[3],o=e[4],a=e[5],c=e[6],l=e[7],u=e[8],h=e[9],d=e[10],f=e[11],m=e[12],_=e[13],g=e[14],p=e[15],y=h*g*l-_*d*l+_*c*f-a*g*f-h*c*p+a*d*p,x=m*d*l-u*g*l-m*c*f+o*g*f+u*c*p-o*d*p,v=u*_*l-m*h*l+m*a*f-o*_*f-u*a*p+o*h*p,S=m*h*c-u*_*c-m*a*d+o*_*d+u*a*g-o*h*g,M=t*y+n*x+s*v+r*S;if(M===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const E=1/M;return e[0]=y*E,e[1]=(_*d*r-h*g*r-_*s*f+n*g*f+h*s*p-n*d*p)*E,e[2]=(a*g*r-_*c*r+_*s*l-n*g*l-a*s*p+n*c*p)*E,e[3]=(h*c*r-a*d*r-h*s*l+n*d*l+a*s*f-n*c*f)*E,e[4]=x*E,e[5]=(u*g*r-m*d*r+m*s*f-t*g*f-u*s*p+t*d*p)*E,e[6]=(m*c*r-o*g*r-m*s*l+t*g*l+o*s*p-t*c*p)*E,e[7]=(o*d*r-u*c*r+u*s*l-t*d*l-o*s*f+t*c*f)*E,e[8]=v*E,e[9]=(m*h*r-u*_*r-m*n*f+t*_*f+u*n*p-t*h*p)*E,e[10]=(o*_*r-m*a*r+m*n*l-t*_*l-o*n*p+t*a*p)*E,e[11]=(u*a*r-o*h*r-u*n*l+t*h*l+o*n*f-t*a*f)*E,e[12]=S*E,e[13]=(u*_*s-m*h*s+m*n*d-t*_*d-u*n*g+t*h*g)*E,e[14]=(m*a*s-o*_*s-m*n*c+t*_*c+o*n*g-t*a*g)*E,e[15]=(o*h*s-u*a*s+u*n*c-t*h*c-o*n*d+t*a*d)*E,this}scale(e){const t=this.elements,n=e.x,s=e.y,r=e.z;return t[0]*=n,t[4]*=s,t[8]*=r,t[1]*=n,t[5]*=s,t[9]*=r,t[2]*=n,t[6]*=s,t[10]*=r,t[3]*=n,t[7]*=s,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],s=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,s))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),s=Math.sin(t),r=1-n,o=e.x,a=e.y,c=e.z,l=r*o,u=r*a;return this.set(l*o+n,l*a-s*c,l*c+s*a,0,l*a+s*c,u*a+n,u*c-s*o,0,l*c-s*a,u*c+s*o,r*c*c+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,s,r,o){return this.set(1,n,r,0,e,1,o,0,t,s,1,0,0,0,0,1),this}compose(e,t,n){const s=this.elements,r=t._x,o=t._y,a=t._z,c=t._w,l=r+r,u=o+o,h=a+a,d=r*l,f=r*u,m=r*h,_=o*u,g=o*h,p=a*h,y=c*l,x=c*u,v=c*h,S=n.x,M=n.y,E=n.z;return s[0]=(1-(_+p))*S,s[1]=(f+v)*S,s[2]=(m-x)*S,s[3]=0,s[4]=(f-v)*M,s[5]=(1-(d+p))*M,s[6]=(g+y)*M,s[7]=0,s[8]=(m+x)*E,s[9]=(g-y)*E,s[10]=(1-(d+_))*E,s[11]=0,s[12]=e.x,s[13]=e.y,s[14]=e.z,s[15]=1,this}decompose(e,t,n){const s=this.elements;let r=Kl.set(s[0],s[1],s[2]).length();const o=Kl.set(s[4],s[5],s[6]).length(),a=Kl.set(s[8],s[9],s[10]).length();this.determinant()<0&&(r=-r),e.x=s[12],e.y=s[13],e.z=s[14],$s.copy(this);const l=1/r,u=1/o,h=1/a;return $s.elements[0]*=l,$s.elements[1]*=l,$s.elements[2]*=l,$s.elements[4]*=u,$s.elements[5]*=u,$s.elements[6]*=u,$s.elements[8]*=h,$s.elements[9]*=h,$s.elements[10]*=h,t.setFromRotationMatrix($s),n.x=r,n.y=o,n.z=a,this}makePerspective(e,t,n,s,r,o,a=ar){const c=this.elements,l=2*r/(t-e),u=2*r/(n-s),h=(t+e)/(t-e),d=(n+s)/(n-s);let f,m;if(a===ar)f=-(o+r)/(o-r),m=-2*o*r/(o-r);else if(a===sl)f=-o/(o-r),m=-o*r/(o-r);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return c[0]=l,c[4]=0,c[8]=h,c[12]=0,c[1]=0,c[5]=u,c[9]=d,c[13]=0,c[2]=0,c[6]=0,c[10]=f,c[14]=m,c[3]=0,c[7]=0,c[11]=-1,c[15]=0,this}makeOrthographic(e,t,n,s,r,o,a=ar){const c=this.elements,l=1/(t-e),u=1/(n-s),h=1/(o-r),d=(t+e)*l,f=(n+s)*u;let m,_;if(a===ar)m=(o+r)*h,_=-2*h;else if(a===sl)m=r*h,_=-1*h;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return c[0]=2*l,c[4]=0,c[8]=0,c[12]=-d,c[1]=0,c[5]=2*u,c[9]=0,c[13]=-f,c[2]=0,c[6]=0,c[10]=_,c[14]=-m,c[3]=0,c[7]=0,c[11]=0,c[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let s=0;s<16;s++)if(t[s]!==n[s])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const Kl=new fe,$s=new _n,oK=new fe(0,0,0),aK=new fe(1,1,1),va=new fe,Qp=new fe,cs=new fe,IA=new _n,FA=new kf;class mr{constructor(e=0,t=0,n=0,s=mr.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=s}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,s=this._order){return this._x=e,this._y=t,this._z=n,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const s=e.elements,r=s[0],o=s[4],a=s[8],c=s[1],l=s[5],u=s[9],h=s[2],d=s[6],f=s[10];switch(t){case"XYZ":this._y=Math.asin(oi(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,f),this._z=Math.atan2(-o,r)):(this._x=Math.atan2(d,l),this._z=0);break;case"YXZ":this._x=Math.asin(-oi(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-h,r),this._z=0);break;case"ZXY":this._x=Math.asin(oi(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-h,f),this._z=Math.atan2(-o,l)):(this._y=0,this._z=Math.atan2(c,r));break;case"ZYX":this._y=Math.asin(-oi(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(c,r)):(this._x=0,this._z=Math.atan2(-o,l));break;case"YZX":this._z=Math.asin(oi(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-u,l),this._y=Math.atan2(-h,r)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-oi(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,l),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-u,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return IA.makeRotationFromQuaternion(e),this.setFromRotationMatrix(IA,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return FA.setFromEuler(this),this.setFromQuaternion(FA,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}mr.DEFAULT_ORDER="XYZ";class cK{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let lK=0;const UA=new fe,Ql=new kf,lo=new _n,Jp=new fe,od=new fe,uK=new fe,hK=new kf,OA=new fe(1,0,0),BA=new fe(0,1,0),kA=new fe(0,0,1),zA={type:"added"},dK={type:"removed"},Jl={type:"childadded",child:null},mv={type:"childremoved",child:null};class ni extends Ih{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:lK++}),this.uuid=zo(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=ni.DEFAULT_UP.clone();const e=new fe,t=new mr,n=new kf,s=new fe(1,1,1);function r(){n.setFromEuler(t,!1)}function o(){t.setFromQuaternion(n,void 0,!1)}t._onChange(r),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new _n},normalMatrix:{value:new es}}),this.matrix=new _n,this.matrixWorld=new _n,this.matrixAutoUpdate=ni.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=ni.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new cK,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Ql.setFromAxisAngle(e,t),this.quaternion.multiply(Ql),this}rotateOnWorldAxis(e,t){return Ql.setFromAxisAngle(e,t),this.quaternion.premultiply(Ql),this}rotateX(e){return this.rotateOnAxis(OA,e)}rotateY(e){return this.rotateOnAxis(BA,e)}rotateZ(e){return this.rotateOnAxis(kA,e)}translateOnAxis(e,t){return UA.copy(e).applyQuaternion(this.quaternion),this.position.add(UA.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(OA,e)}translateY(e){return this.translateOnAxis(BA,e)}translateZ(e){return this.translateOnAxis(kA,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(lo.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Jp.copy(e):Jp.set(e,t,n);const s=this.parent;this.updateWorldMatrix(!0,!1),od.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?lo.lookAt(od,Jp,this.up):lo.lookAt(Jp,od,this.up),this.quaternion.setFromRotationMatrix(lo),s&&(lo.extractRotation(s.matrixWorld),Ql.setFromRotationMatrix(lo),this.quaternion.premultiply(Ql.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(zA),Jl.child=e,this.dispatchEvent(Jl),Jl.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(dK),mv.child=e,this.dispatchEvent(mv),mv.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),lo.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),lo.multiply(e.parent.matrixWorld)),e.applyMatrix4(lo),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(zA),Jl.child=e,this.dispatchEvent(Jl),Jl.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,s=this.children.length;n<s;n++){const o=this.children[n].getObjectByProperty(e,t);if(o!==void 0)return o}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const s=this.children;for(let r=0,o=s.length;r<o;r++)s[r].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(od,e,uK),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(od,hK,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,s=t.length;n<s;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,s=t.length;n<s;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,s=t.length;n<s;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const s=this.children;for(let r=0,o=s.length;r<o;r++)s[r].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),s.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(s.type="BatchedMesh",s.perObjectFrustumCulled=this.perObjectFrustumCulled,s.sortObjects=this.sortObjects,s.drawRanges=this._drawRanges,s.reservedRanges=this._reservedRanges,s.visibility=this._visibility,s.active=this._active,s.bounds=this._bounds.map(a=>({boxInitialized:a.boxInitialized,boxMin:a.box.min.toArray(),boxMax:a.box.max.toArray(),sphereInitialized:a.sphereInitialized,sphereRadius:a.sphere.radius,sphereCenter:a.sphere.center.toArray()})),s.maxInstanceCount=this._maxInstanceCount,s.maxVertexCount=this._maxVertexCount,s.maxIndexCount=this._maxIndexCount,s.geometryInitialized=this._geometryInitialized,s.geometryCount=this._geometryCount,s.matricesTexture=this._matricesTexture.toJSON(e),this._colorsTexture!==null&&(s.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(s.boundingSphere={center:s.boundingSphere.center.toArray(),radius:s.boundingSphere.radius}),this.boundingBox!==null&&(s.boundingBox={min:s.boundingBox.min.toArray(),max:s.boundingBox.max.toArray()}));function r(a,c){return a[c.uuid]===void 0&&(a[c.uuid]=c.toJSON(e)),c.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=r(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const c=a.shapes;if(Array.isArray(c))for(let l=0,u=c.length;l<u;l++){const h=c[l];r(e.shapes,h)}else r(e.shapes,c)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let c=0,l=this.material.length;c<l;c++)a.push(r(e.materials,this.material[c]));s.material=a}else s.material=r(e.materials,this.material);if(this.children.length>0){s.children=[];for(let a=0;a<this.children.length;a++)s.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){s.animations=[];for(let a=0;a<this.animations.length;a++){const c=this.animations[a];s.animations.push(r(e.animations,c))}}if(t){const a=o(e.geometries),c=o(e.materials),l=o(e.textures),u=o(e.images),h=o(e.shapes),d=o(e.skeletons),f=o(e.animations),m=o(e.nodes);a.length>0&&(n.geometries=a),c.length>0&&(n.materials=c),l.length>0&&(n.textures=l),u.length>0&&(n.images=u),h.length>0&&(n.shapes=h),d.length>0&&(n.skeletons=d),f.length>0&&(n.animations=f),m.length>0&&(n.nodes=m)}return n.object=s,n;function o(a){const c=[];for(const l in a){const u=a[l];delete u.metadata,c.push(u)}return c}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const s=e.children[n];this.add(s.clone())}return this}}ni.DEFAULT_UP=new fe(0,1,0);ni.DEFAULT_MATRIX_AUTO_UPDATE=!0;ni.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const qs=new fe,uo=new fe,gv=new fe,ho=new fe,eu=new fe,tu=new fe,GA=new fe,_v=new fe,vv=new fe,xv=new fe,yv=new Yt,Sv=new Yt,bv=new Yt;class tr{constructor(e=new fe,t=new fe,n=new fe){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,s){s.subVectors(n,t),qs.subVectors(e,t),s.cross(qs);const r=s.lengthSq();return r>0?s.multiplyScalar(1/Math.sqrt(r)):s.set(0,0,0)}static getBarycoord(e,t,n,s,r){qs.subVectors(s,t),uo.subVectors(n,t),gv.subVectors(e,t);const o=qs.dot(qs),a=qs.dot(uo),c=qs.dot(gv),l=uo.dot(uo),u=uo.dot(gv),h=o*l-a*a;if(h===0)return r.set(0,0,0),null;const d=1/h,f=(l*c-a*u)*d,m=(o*u-a*c)*d;return r.set(1-f-m,m,f)}static containsPoint(e,t,n,s){return this.getBarycoord(e,t,n,s,ho)===null?!1:ho.x>=0&&ho.y>=0&&ho.x+ho.y<=1}static getInterpolation(e,t,n,s,r,o,a,c){return this.getBarycoord(e,t,n,s,ho)===null?(c.x=0,c.y=0,"z"in c&&(c.z=0),"w"in c&&(c.w=0),null):(c.setScalar(0),c.addScaledVector(r,ho.x),c.addScaledVector(o,ho.y),c.addScaledVector(a,ho.z),c)}static getInterpolatedAttribute(e,t,n,s,r,o){return yv.setScalar(0),Sv.setScalar(0),bv.setScalar(0),yv.fromBufferAttribute(e,t),Sv.fromBufferAttribute(e,n),bv.fromBufferAttribute(e,s),o.setScalar(0),o.addScaledVector(yv,r.x),o.addScaledVector(Sv,r.y),o.addScaledVector(bv,r.z),o}static isFrontFacing(e,t,n,s){return qs.subVectors(n,t),uo.subVectors(e,t),qs.cross(uo).dot(s)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,s){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[s]),this}setFromAttributeAndIndices(e,t,n,s){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,s),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return qs.subVectors(this.c,this.b),uo.subVectors(this.a,this.b),qs.cross(uo).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return tr.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return tr.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,s,r){return tr.getInterpolation(e,this.a,this.b,this.c,t,n,s,r)}containsPoint(e){return tr.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return tr.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,s=this.b,r=this.c;let o,a;eu.subVectors(s,n),tu.subVectors(r,n),_v.subVectors(e,n);const c=eu.dot(_v),l=tu.dot(_v);if(c<=0&&l<=0)return t.copy(n);vv.subVectors(e,s);const u=eu.dot(vv),h=tu.dot(vv);if(u>=0&&h<=u)return t.copy(s);const d=c*h-u*l;if(d<=0&&c>=0&&u<=0)return o=c/(c-u),t.copy(n).addScaledVector(eu,o);xv.subVectors(e,r);const f=eu.dot(xv),m=tu.dot(xv);if(m>=0&&f<=m)return t.copy(r);const _=f*l-c*m;if(_<=0&&l>=0&&m<=0)return a=l/(l-m),t.copy(n).addScaledVector(tu,a);const g=u*m-f*h;if(g<=0&&h-u>=0&&f-m>=0)return GA.subVectors(r,s),a=(h-u)/(h-u+(f-m)),t.copy(s).addScaledVector(GA,a);const p=1/(g+_+d);return o=_*p,a=d*p,t.copy(n).addScaledVector(eu,o).addScaledVector(tu,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const P2={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},xa={h:0,s:0,l:0},em={h:0,s:0,l:0};function Mv(i,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?i+(e-i)*6*t:t<1/2?e:t<2/3?i+(e-i)*6*(2/3-t):i}class Zt{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const s=e;s&&s.isColor?this.copy(s):typeof s=="number"?this.setHex(s):typeof s=="string"&&this.setStyle(s)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=ht){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Fn.toWorkingColorSpace(this,t),this}setRGB(e,t,n,s=Fn.workingColorSpace){return this.r=e,this.g=t,this.b=n,Fn.toWorkingColorSpace(this,s),this}setHSL(e,t,n,s=Fn.workingColorSpace){if(e=eM(e,1),t=oi(t,0,1),n=oi(n,0,1),t===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+t):n+t-n*t,o=2*n-r;this.r=Mv(o,r,e+1/3),this.g=Mv(o,r,e),this.b=Mv(o,r,e-1/3)}return Fn.toWorkingColorSpace(this,s),this}setStyle(e,t=ht){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let s;if(s=/^(\w+)\(([^\)]*)\)/.exec(e)){let r;const o=s[1],a=s[2];switch(o){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,t);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,t);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=s[1],o=r.length;if(o===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,t);if(o===6)return this.setHex(parseInt(r,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=ht){const n=P2[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Go(e.r),this.g=Go(e.g),this.b=Go(e.b),this}copyLinearToSRGB(e){return this.r=Gu(e.r),this.g=Gu(e.g),this.b=Gu(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=ht){return Fn.fromWorkingColorSpace(_i.copy(this),e),Math.round(oi(_i.r*255,0,255))*65536+Math.round(oi(_i.g*255,0,255))*256+Math.round(oi(_i.b*255,0,255))}getHexString(e=ht){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Fn.workingColorSpace){Fn.fromWorkingColorSpace(_i.copy(this),t);const n=_i.r,s=_i.g,r=_i.b,o=Math.max(n,s,r),a=Math.min(n,s,r);let c,l;const u=(a+o)/2;if(a===o)c=0,l=0;else{const h=o-a;switch(l=u<=.5?h/(o+a):h/(2-o-a),o){case n:c=(s-r)/h+(s<r?6:0);break;case s:c=(r-n)/h+2;break;case r:c=(n-s)/h+4;break}c/=6}return e.h=c,e.s=l,e.l=u,e}getRGB(e,t=Fn.workingColorSpace){return Fn.fromWorkingColorSpace(_i.copy(this),t),e.r=_i.r,e.g=_i.g,e.b=_i.b,e}getStyle(e=ht){Fn.fromWorkingColorSpace(_i.copy(this),e);const t=_i.r,n=_i.g,s=_i.b;return e!==ht?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${s.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(s*255)})`}offsetHSL(e,t,n){return this.getHSL(xa),this.setHSL(xa.h+e,xa.s+t,xa.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(xa),e.getHSL(em);const n=Od(xa.h,em.h,t),s=Od(xa.s,em.s,t),r=Od(xa.l,em.l,t);return this.setHSL(n,s,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,s=this.b,r=e.elements;return this.r=r[0]*t+r[3]*n+r[6]*s,this.g=r[1]*t+r[4]*n+r[7]*s,this.b=r[2]*t+r[5]*n+r[8]*s,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const _i=new Zt;Zt.NAMES=P2;let fK=0;class Ki extends Ih{static get type(){return"Material"}get type(){return this.constructor.type}set type(e){}constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:fK++}),this.uuid=zo(),this.name="",this.blending=Ua,this.side=ch,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Ig,this.blendDst=Fg,this.blendEquation=Ca,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Zt(0,0,0),this.blendAlpha=0,this.depthFunc=Ug,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=aS,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Sc,this.stencilZFail=Sc,this.stencilZPass=Sc,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const s=this[t];if(s===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}s&&s.isColor?s.set(n):s&&s.isVector3&&n&&n.isVector3?s.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Ua&&(n.blending=this.blending),this.side!==ch&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==Ig&&(n.blendSrc=this.blendSrc),this.blendDst!==Fg&&(n.blendDst=this.blendDst),this.blendEquation!==Ca&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==Ug&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==aS&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Sc&&(n.stencilFail=this.stencilFail),this.stencilZFail!==Sc&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==Sc&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function s(r){const o=[];for(const a in r){const c=r[a];delete c.metadata,o.push(c)}return o}if(t){const r=s(e.textures),o=s(e.images);r.length>0&&(n.textures=r),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const s=t.length;n=new Array(s);for(let r=0;r!==s;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class T_ extends Ki{static get type(){return"MeshBasicMaterial"}constructor(e){super(),this.isMeshBasicMaterial=!0,this.color=new Zt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new mr,this.combine=M_,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Ao=pK();function pK(){const i=new ArrayBuffer(4),e=new Float32Array(i),t=new Uint32Array(i),n=new Uint32Array(512),s=new Uint32Array(512);for(let c=0;c<256;++c){const l=c-127;l<-27?(n[c]=0,n[c|256]=32768,s[c]=24,s[c|256]=24):l<-14?(n[c]=1024>>-l-14,n[c|256]=1024>>-l-14|32768,s[c]=-l-1,s[c|256]=-l-1):l<=15?(n[c]=l+15<<10,n[c|256]=l+15<<10|32768,s[c]=13,s[c|256]=13):l<128?(n[c]=31744,n[c|256]=64512,s[c]=24,s[c|256]=24):(n[c]=31744,n[c|256]=64512,s[c]=13,s[c|256]=13)}const r=new Uint32Array(2048),o=new Uint32Array(64),a=new Uint32Array(64);for(let c=1;c<1024;++c){let l=c<<13,u=0;for(;!(l&8388608);)l<<=1,u-=8388608;l&=-8388609,u+=947912704,r[c]=l|u}for(let c=1024;c<2048;++c)r[c]=939524096+(c-1024<<13);for(let c=1;c<31;++c)o[c]=c<<23;o[31]=1199570944,o[32]=2147483648;for(let c=33;c<63;++c)o[c]=2147483648+(c-32<<23);o[63]=3347054592;for(let c=1;c<64;++c)c!==32&&(a[c]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:s,mantissaTable:r,exponentTable:o,offsetTable:a}}function ls(i){Math.abs(i)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),i=oi(i,-65504,65504),Ao.floatView[0]=i;const e=Ao.uint32View[0],t=e>>23&511;return Ao.baseTable[t]+((e&8388607)>>Ao.shiftTable[t])}function tm(i){const e=i>>10;return Ao.uint32View[0]=Ao.mantissaTable[Ao.offsetTable[e]+(i&1023)]+Ao.exponentTable[e],Ao.floatView[0]}const Ln=new fe,nm=new Bt;class Ls{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=kg,this.updateRanges=[],this.gpuType=gs,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let s=0,r=this.itemSize;s<r;s++)this.array[e+s]=t.array[n+s];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)nm.fromBufferAttribute(this,t),nm.applyMatrix3(e),this.setXY(t,nm.x,nm.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)Ln.fromBufferAttribute(this,t),Ln.applyMatrix3(e),this.setXYZ(t,Ln.x,Ln.y,Ln.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)Ln.fromBufferAttribute(this,t),Ln.applyMatrix4(e),this.setXYZ(t,Ln.x,Ln.y,Ln.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Ln.fromBufferAttribute(this,t),Ln.applyNormalMatrix(e),this.setXYZ(t,Ln.x,Ln.y,Ln.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Ln.fromBufferAttribute(this,t),Ln.transformDirection(e),this.setXYZ(t,Ln.x,Ln.y,Ln.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=Di(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=St(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Di(t,this.array)),t}setX(e,t){return this.normalized&&(t=St(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Di(t,this.array)),t}setY(e,t){return this.normalized&&(t=St(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Di(t,this.array)),t}setZ(e,t){return this.normalized&&(t=St(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Di(t,this.array)),t}setW(e,t){return this.normalized&&(t=St(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=St(t,this.array),n=St(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,s){return e*=this.itemSize,this.normalized&&(t=St(t,this.array),n=St(n,this.array),s=St(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=s,this}setXYZW(e,t,n,s,r){return e*=this.itemSize,this.normalized&&(t=St(t,this.array),n=St(n,this.array),s=St(s,this.array),r=St(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=s,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==kg&&(e.usage=this.usage),e}}class D2 extends Ls{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class L2 extends Ls{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class I2 extends Ls{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=tm(this.array[e*this.itemSize]);return this.normalized&&(t=Di(t,this.array)),t}setX(e,t){return this.normalized&&(t=St(t,this.array)),this.array[e*this.itemSize]=ls(t),this}getY(e){let t=tm(this.array[e*this.itemSize+1]);return this.normalized&&(t=Di(t,this.array)),t}setY(e,t){return this.normalized&&(t=St(t,this.array)),this.array[e*this.itemSize+1]=ls(t),this}getZ(e){let t=tm(this.array[e*this.itemSize+2]);return this.normalized&&(t=Di(t,this.array)),t}setZ(e,t){return this.normalized&&(t=St(t,this.array)),this.array[e*this.itemSize+2]=ls(t),this}getW(e){let t=tm(this.array[e*this.itemSize+3]);return this.normalized&&(t=Di(t,this.array)),t}setW(e,t){return this.normalized&&(t=St(t,this.array)),this.array[e*this.itemSize+3]=ls(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=St(t,this.array),n=St(n,this.array)),this.array[e+0]=ls(t),this.array[e+1]=ls(n),this}setXYZ(e,t,n,s){return e*=this.itemSize,this.normalized&&(t=St(t,this.array),n=St(n,this.array),s=St(s,this.array)),this.array[e+0]=ls(t),this.array[e+1]=ls(n),this.array[e+2]=ls(s),this}setXYZW(e,t,n,s,r){return e*=this.itemSize,this.normalized&&(t=St(t,this.array),n=St(n,this.array),s=St(s,this.array),r=St(r,this.array)),this.array[e+0]=ls(t),this.array[e+1]=ls(n),this.array[e+2]=ls(s),this.array[e+3]=ls(r),this}}class Vo extends Ls{constructor(e,t,n){super(new Float32Array(e),t,n)}}let mK=0;const Ts=new _n,Tv=new ni,nu=new fe,us=new zf,ad=new zf,Jn=new fe;class fl extends Ih{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:mK++}),this.uuid=zo(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(ZZ(e)?L2:D2)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new es().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}const s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(e),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Ts.makeRotationFromQuaternion(e),this.applyMatrix4(Ts),this}rotateX(e){return Ts.makeRotationX(e),this.applyMatrix4(Ts),this}rotateY(e){return Ts.makeRotationY(e),this.applyMatrix4(Ts),this}rotateZ(e){return Ts.makeRotationZ(e),this.applyMatrix4(Ts),this}translate(e,t,n){return Ts.makeTranslation(e,t,n),this.applyMatrix4(Ts),this}scale(e,t,n){return Ts.makeScale(e,t,n),this.applyMatrix4(Ts),this}lookAt(e){return Tv.lookAt(e),Tv.updateMatrix(),this.applyMatrix4(Tv.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(nu).negate(),this.translate(nu.x,nu.y,nu.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const n=[];for(let s=0,r=e.length;s<r;s++){const o=e[s];n.push(o.x,o.y,o.z||0)}this.setAttribute("position",new Vo(n,3))}else{for(let n=0,s=t.count;n<s;n++){const r=e[n];t.setXYZ(n,r.x,r.y,r.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new zf);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new fe(-1/0,-1/0,-1/0),new fe(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,s=t.length;n<s;n++){const r=t[n];us.setFromBufferAttribute(r),this.morphTargetsRelative?(Jn.addVectors(this.boundingBox.min,us.min),this.boundingBox.expandByPoint(Jn),Jn.addVectors(this.boundingBox.max,us.max),this.boundingBox.expandByPoint(Jn)):(this.boundingBox.expandByPoint(us.min),this.boundingBox.expandByPoint(us.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new tM);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new fe,1/0);return}if(e){const n=this.boundingSphere.center;if(us.setFromBufferAttribute(e),t)for(let r=0,o=t.length;r<o;r++){const a=t[r];ad.setFromBufferAttribute(a),this.morphTargetsRelative?(Jn.addVectors(us.min,ad.min),us.expandByPoint(Jn),Jn.addVectors(us.max,ad.max),us.expandByPoint(Jn)):(us.expandByPoint(ad.min),us.expandByPoint(ad.max))}us.getCenter(n);let s=0;for(let r=0,o=e.count;r<o;r++)Jn.fromBufferAttribute(e,r),s=Math.max(s,n.distanceToSquared(Jn));if(t)for(let r=0,o=t.length;r<o;r++){const a=t[r],c=this.morphTargetsRelative;for(let l=0,u=a.count;l<u;l++)Jn.fromBufferAttribute(a,l),c&&(nu.fromBufferAttribute(e,l),Jn.add(nu)),s=Math.max(s,n.distanceToSquared(Jn))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.position,s=t.normal,r=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Ls(new Float32Array(4*n.count),4));const o=this.getAttribute("tangent"),a=[],c=[];for(let w=0;w<n.count;w++)a[w]=new fe,c[w]=new fe;const l=new fe,u=new fe,h=new fe,d=new Bt,f=new Bt,m=new Bt,_=new fe,g=new fe;function p(w,b,T){l.fromBufferAttribute(n,w),u.fromBufferAttribute(n,b),h.fromBufferAttribute(n,T),d.fromBufferAttribute(r,w),f.fromBufferAttribute(r,b),m.fromBufferAttribute(r,T),u.sub(l),h.sub(l),f.sub(d),m.sub(d);const C=1/(f.x*m.y-m.x*f.y);isFinite(C)&&(_.copy(u).multiplyScalar(m.y).addScaledVector(h,-f.y).multiplyScalar(C),g.copy(h).multiplyScalar(f.x).addScaledVector(u,-m.x).multiplyScalar(C),a[w].add(_),a[b].add(_),a[T].add(_),c[w].add(g),c[b].add(g),c[T].add(g))}let y=this.groups;y.length===0&&(y=[{start:0,count:e.count}]);for(let w=0,b=y.length;w<b;++w){const T=y[w],C=T.start,D=T.count;for(let P=C,N=C+D;P<N;P+=3)p(e.getX(P+0),e.getX(P+1),e.getX(P+2))}const x=new fe,v=new fe,S=new fe,M=new fe;function E(w){S.fromBufferAttribute(s,w),M.copy(S);const b=a[w];x.copy(b),x.sub(S.multiplyScalar(S.dot(b))).normalize(),v.crossVectors(M,b);const C=v.dot(c[w])<0?-1:1;o.setXYZW(w,x.x,x.y,x.z,C)}for(let w=0,b=y.length;w<b;++w){const T=y[w],C=T.start,D=T.count;for(let P=C,N=C+D;P<N;P+=3)E(e.getX(P+0)),E(e.getX(P+1)),E(e.getX(P+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Ls(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let d=0,f=n.count;d<f;d++)n.setXYZ(d,0,0,0);const s=new fe,r=new fe,o=new fe,a=new fe,c=new fe,l=new fe,u=new fe,h=new fe;if(e)for(let d=0,f=e.count;d<f;d+=3){const m=e.getX(d+0),_=e.getX(d+1),g=e.getX(d+2);s.fromBufferAttribute(t,m),r.fromBufferAttribute(t,_),o.fromBufferAttribute(t,g),u.subVectors(o,r),h.subVectors(s,r),u.cross(h),a.fromBufferAttribute(n,m),c.fromBufferAttribute(n,_),l.fromBufferAttribute(n,g),a.add(u),c.add(u),l.add(u),n.setXYZ(m,a.x,a.y,a.z),n.setXYZ(_,c.x,c.y,c.z),n.setXYZ(g,l.x,l.y,l.z)}else for(let d=0,f=t.count;d<f;d+=3)s.fromBufferAttribute(t,d+0),r.fromBufferAttribute(t,d+1),o.fromBufferAttribute(t,d+2),u.subVectors(o,r),h.subVectors(s,r),u.cross(h),n.setXYZ(d+0,u.x,u.y,u.z),n.setXYZ(d+1,u.x,u.y,u.z),n.setXYZ(d+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Jn.fromBufferAttribute(e,t),Jn.normalize(),e.setXYZ(t,Jn.x,Jn.y,Jn.z)}toNonIndexed(){function e(a,c){const l=a.array,u=a.itemSize,h=a.normalized,d=new l.constructor(c.length*u);let f=0,m=0;for(let _=0,g=c.length;_<g;_++){a.isInterleavedBufferAttribute?f=c[_]*a.data.stride+a.offset:f=c[_]*u;for(let p=0;p<u;p++)d[m++]=l[f++]}return new Ls(d,u,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new fl,n=this.index.array,s=this.attributes;for(const a in s){const c=s[a],l=e(c,n);t.setAttribute(a,l)}const r=this.morphAttributes;for(const a in r){const c=[],l=r[a];for(let u=0,h=l.length;u<h;u++){const d=l[u],f=e(d,n);c.push(f)}t.morphAttributes[a]=c}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,c=o.length;a<c;a++){const l=o[a];t.addGroup(l.start,l.count,l.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const c=this.parameters;for(const l in c)c[l]!==void 0&&(e[l]=c[l]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const c in n){const l=n[c];e.data.attributes[c]=l.toJSON(e.data)}const s={};let r=!1;for(const c in this.morphAttributes){const l=this.morphAttributes[c],u=[];for(let h=0,d=l.length;h<d;h++){const f=l[h];u.push(f.toJSON(e.data))}u.length>0&&(s[c]=u,r=!0)}r&&(e.data.morphAttributes=s,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const s=e.attributes;for(const l in s){const u=s[l];this.setAttribute(l,u.clone(t))}const r=e.morphAttributes;for(const l in r){const u=[],h=r[l];for(let d=0,f=h.length;d<f;d++)u.push(h[d].clone(t));this.morphAttributes[l]=u}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let l=0,u=o.length;l<u;l++){const h=o[l];this.addGroup(h.start,h.count,h.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const c=e.boundingSphere;return c!==null&&(this.boundingSphere=c.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const VA=new _n,pc=new rK,im=new tM,HA=new fe,sm=new fe,rm=new fe,om=new fe,Ev=new fe,am=new fe,WA=new fe,cm=new fe;class rl extends ni{constructor(e=new fl,t=new T_){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const s=t[n[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=s.length;r<o;r++){const a=s[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}getVertexPosition(e,t){const n=this.geometry,s=n.attributes.position,r=n.morphAttributes.position,o=n.morphTargetsRelative;t.fromBufferAttribute(s,e);const a=this.morphTargetInfluences;if(r&&a){am.set(0,0,0);for(let c=0,l=r.length;c<l;c++){const u=a[c],h=r[c];u!==0&&(Ev.fromBufferAttribute(h,e),o?am.addScaledVector(Ev,u):am.addScaledVector(Ev.sub(t),u))}t.add(am)}return t}raycast(e,t){const n=this.geometry,s=this.material,r=this.matrixWorld;s!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),im.copy(n.boundingSphere),im.applyMatrix4(r),pc.copy(e.ray).recast(e.near),!(im.containsPoint(pc.origin)===!1&&(pc.intersectSphere(im,HA)===null||pc.origin.distanceToSquared(HA)>(e.far-e.near)**2))&&(VA.copy(r).invert(),pc.copy(e.ray).applyMatrix4(VA),!(n.boundingBox!==null&&pc.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,pc)))}_computeIntersections(e,t,n){let s;const r=this.geometry,o=this.material,a=r.index,c=r.attributes.position,l=r.attributes.uv,u=r.attributes.uv1,h=r.attributes.normal,d=r.groups,f=r.drawRange;if(a!==null)if(Array.isArray(o))for(let m=0,_=d.length;m<_;m++){const g=d[m],p=o[g.materialIndex],y=Math.max(g.start,f.start),x=Math.min(a.count,Math.min(g.start+g.count,f.start+f.count));for(let v=y,S=x;v<S;v+=3){const M=a.getX(v),E=a.getX(v+1),w=a.getX(v+2);s=lm(this,p,e,n,l,u,h,M,E,w),s&&(s.faceIndex=Math.floor(v/3),s.face.materialIndex=g.materialIndex,t.push(s))}}else{const m=Math.max(0,f.start),_=Math.min(a.count,f.start+f.count);for(let g=m,p=_;g<p;g+=3){const y=a.getX(g),x=a.getX(g+1),v=a.getX(g+2);s=lm(this,o,e,n,l,u,h,y,x,v),s&&(s.faceIndex=Math.floor(g/3),t.push(s))}}else if(c!==void 0)if(Array.isArray(o))for(let m=0,_=d.length;m<_;m++){const g=d[m],p=o[g.materialIndex],y=Math.max(g.start,f.start),x=Math.min(c.count,Math.min(g.start+g.count,f.start+f.count));for(let v=y,S=x;v<S;v+=3){const M=v,E=v+1,w=v+2;s=lm(this,p,e,n,l,u,h,M,E,w),s&&(s.faceIndex=Math.floor(v/3),s.face.materialIndex=g.materialIndex,t.push(s))}}else{const m=Math.max(0,f.start),_=Math.min(c.count,f.start+f.count);for(let g=m,p=_;g<p;g+=3){const y=g,x=g+1,v=g+2;s=lm(this,o,e,n,l,u,h,y,x,v),s&&(s.faceIndex=Math.floor(g/3),t.push(s))}}}}function gK(i,e,t,n,s,r,o,a){let c;if(e.side===pr?c=n.intersectTriangle(o,r,s,!0,a):c=n.intersectTriangle(s,r,o,e.side===ch,a),c===null)return null;cm.copy(a),cm.applyMatrix4(i.matrixWorld);const l=t.ray.origin.distanceTo(cm);return l<t.near||l>t.far?null:{distance:l,point:cm.clone(),object:i}}function lm(i,e,t,n,s,r,o,a,c,l){i.getVertexPosition(a,sm),i.getVertexPosition(c,rm),i.getVertexPosition(l,om);const u=gK(i,e,t,n,sm,rm,om,WA);if(u){const h=new fe;tr.getBarycoord(WA,sm,rm,om,h),s&&(u.uv=tr.getInterpolatedAttribute(s,a,c,l,h,new Bt)),r&&(u.uv1=tr.getInterpolatedAttribute(r,a,c,l,h,new Bt)),o&&(u.normal=tr.getInterpolatedAttribute(o,a,c,l,h,new fe),u.normal.dot(n.direction)>0&&u.normal.multiplyScalar(-1));const d={a,b:c,c:l,normal:new fe,materialIndex:0};tr.getNormal(sm,rm,om,d.normal),u.face=d,u.barycoord=h}return u}class Gf extends fl{constructor(e=1,t=1,n=1,s=1,r=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:s,heightSegments:r,depthSegments:o};const a=this;s=Math.floor(s),r=Math.floor(r),o=Math.floor(o);const c=[],l=[],u=[],h=[];let d=0,f=0;m("z","y","x",-1,-1,n,t,e,o,r,0),m("z","y","x",1,-1,n,t,-e,o,r,1),m("x","z","y",1,1,e,n,t,s,o,2),m("x","z","y",1,-1,e,n,-t,s,o,3),m("x","y","z",1,-1,e,t,n,s,r,4),m("x","y","z",-1,-1,e,t,-n,s,r,5),this.setIndex(c),this.setAttribute("position",new Vo(l,3)),this.setAttribute("normal",new Vo(u,3)),this.setAttribute("uv",new Vo(h,2));function m(_,g,p,y,x,v,S,M,E,w,b){const T=v/E,C=S/w,D=v/2,P=S/2,N=M/2,L=E+1,U=w+1;let B=0,k=0;const $=new fe;for(let z=0;z<U;z++){const Y=z*C-P;for(let ne=0;ne<L;ne++){const te=ne*T-D;$[_]=te*y,$[g]=Y*x,$[p]=N,l.push($.x,$.y,$.z),$[_]=0,$[g]=0,$[p]=M>0?1:-1,u.push($.x,$.y,$.z),h.push(ne/E),h.push(1-z/w),B+=1}}for(let z=0;z<w;z++)for(let Y=0;Y<E;Y++){const ne=d+Y+L*z,te=d+Y+L*(z+1),V=d+(Y+1)+L*(z+1),H=d+(Y+1)+L*z;c.push(ne,te,H),c.push(te,V,H),k+=6}a.addGroup(f,k,b),f+=k,d+=B}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Gf(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function F2(i){const e={};for(const t in i){e[t]={};for(const n in i[t]){const s=i[t][n];s&&(s.isColor||s.isMatrix3||s.isMatrix4||s.isVector2||s.isVector3||s.isVector4||s.isTexture||s.isQuaternion)?s.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=s.clone():Array.isArray(s)?e[t][n]=s.slice():e[t][n]=s}}return e}function _K(i){const e=[];for(let t=0;t<i.length;t++)e.push(i[t].clone());return e}var vK=`
void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}
`,xK=`
void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}
`;class yK extends Ki{static get type(){return"ShaderMaterial"}constructor(e){super(),this.isShaderMaterial=!0,this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=vK,this.fragmentShader=xK,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=F2(e.uniforms),this.uniformsGroups=_K(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const s in this.uniforms){const o=this.uniforms[s].value;o&&o.isTexture?t.uniforms[s]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[s]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[s]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[s]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[s]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[s]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[s]={type:"m4",value:o.toArray()}:t.uniforms[s]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const s in this.extensions)this.extensions[s]===!0&&(n[s]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class U2 extends ni{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new _n,this.projectionMatrix=new _n,this.projectionMatrixInverse=new _n,this.coordinateSystem=ar}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const ya=new fe,$A=new Bt,qA=new Bt;class So extends U2{constructor(e=50,t=1,n=.1,s=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=s,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=uf*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Ud*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return uf*2*Math.atan(Math.tan(Ud*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){ya.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(ya.x,ya.y).multiplyScalar(-e/ya.z),ya.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(ya.x,ya.y).multiplyScalar(-e/ya.z)}getViewSize(e,t){return this.getViewBounds(e,$A,qA),t.subVectors(qA,$A)}setViewOffset(e,t,n,s,r,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=s,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Ud*.5*this.fov)/this.zoom,n=2*t,s=this.aspect*n,r=-.5*s;const o=this.view;if(this.view!==null&&this.view.enabled){const c=o.fullWidth,l=o.fullHeight;r+=o.offsetX*s/c,t-=o.offsetY*n/l,s*=o.width/c,n*=o.height/l}const a=this.filmOffset;a!==0&&(r+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+s,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const iu=-90,su=1;class O2 extends ni{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const s=new So(iu,su,e,t);s.layers=this.layers,this.add(s);const r=new So(iu,su,e,t);r.layers=this.layers,this.add(r);const o=new So(iu,su,e,t);o.layers=this.layers,this.add(o);const a=new So(iu,su,e,t);a.layers=this.layers,this.add(a);const c=new So(iu,su,e,t);c.layers=this.layers,this.add(c);const l=new So(iu,su,e,t);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,s,r,o,a,c]=t;for(const l of t)this.remove(l);if(e===ar)n.up.set(0,1,0),n.lookAt(1,0,0),s.up.set(0,1,0),s.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),c.up.set(0,1,0),c.lookAt(0,0,-1);else if(e===sl)n.up.set(0,-1,0),n.lookAt(-1,0,0),s.up.set(0,-1,0),s.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),c.up.set(0,-1,0),c.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const l of t)this.add(l),l.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:s}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[r,o,a,c,l,u]=this.children,h=e.getRenderTarget(),d=e.getActiveCubeFace(),f=e.getActiveMipmapLevel(),m=e.xr.enabled;e.xr.enabled=!1;const _=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,s),e.render(t,r),e.setRenderTarget(n,1,s),e.render(t,o),e.setRenderTarget(n,2,s),e.render(t,a),e.setRenderTarget(n,3,s),e.render(t,c),e.setRenderTarget(n,4,s),e.render(t,l),n.texture.generateMipmaps=_,e.setRenderTarget(n,5,s),e.render(t,u),e.setRenderTarget(h,d,f),e.xr.enabled=m,n.texture.needsPMREMUpdate=!0}}class nM extends Ui{constructor(e,t,n,s,r,o,a,c,l,u){e=e!==void 0?e:[],t=t!==void 0?t:nl,super(e,t,n,s,r,o,a,c,l,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class SK extends nK{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},s=[n,n,n,n,n,n];this.texture=new nM(s,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:xs}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},s=new Gf(5,5,5),r=new yK({name:"CubemapFromEquirect",uniforms:F2(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:pr,blending:lh});r.uniforms.tEquirect.value=t;const o=new rl(s,r),a=t.minFilter;return t.minFilter===Bo&&(t.minFilter=xs),new O2(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,n,s){const r=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,s);e.setRenderTarget(r)}}class B2 extends ni{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new mr,this.environmentIntensity=1,this.environmentRotation=new mr,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class k2{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=kg,this.updateRanges=[],this.version=0,this.uuid=zo()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let s=0,r=this.stride;s<r;s++)this.array[e+s]=t.array[n+s];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=zo()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=zo()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Ti=new fe;class iM{constructor(e,t,n,s=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=s}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Ti.fromBufferAttribute(this,t),Ti.applyMatrix4(e),this.setXYZ(t,Ti.x,Ti.y,Ti.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Ti.fromBufferAttribute(this,t),Ti.applyNormalMatrix(e),this.setXYZ(t,Ti.x,Ti.y,Ti.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Ti.fromBufferAttribute(this,t),Ti.transformDirection(e),this.setXYZ(t,Ti.x,Ti.y,Ti.z);return this}getComponent(e,t){let n=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(n=Di(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=St(n,this.array)),this.data.array[e*this.data.stride+this.offset+t]=n,this}setX(e,t){return this.normalized&&(t=St(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=St(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=St(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=St(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Di(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Di(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Di(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Di(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=St(t,this.array),n=St(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=St(t,this.array),n=St(n,this.array),s=St(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=s,this}setXYZW(e,t,n,s,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=St(t,this.array),n=St(n,this.array),s=St(s,this.array),r=St(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=s,this.data.array[e+3]=r,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const s=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[s+r])}return new Ls(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new iM(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const s=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[s+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class z2 extends Ki{static get type(){return"SpriteMaterial"}constructor(e){super(),this.isSpriteMaterial=!0,this.color=new Zt(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}class bK extends Ui{constructor(e=null,t=1,n=1,s,r,o,a,c,l=Si,u=Si,h,d){super(null,o,a,c,l,u,s,r,h,d),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class MK extends Ls{constructor(e,t,n,s=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=s}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const wv=new fe,TK=new fe,EK=new es;class Ea{constructor(e=new fe(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,s){return this.normal.set(e,t,n),this.constant=s,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const s=wv.subVectors(n,t).cross(TK.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(s,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(wv),s=this.normal.dot(n);if(s===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/s;return r<0||r>1?null:t.copy(e.start).addScaledVector(n,r)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||EK.getNormalMatrix(e),s=this.coplanarPoint(wv).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-s.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const mc=new tM,um=new fe;class G2{constructor(e=new Ea,t=new Ea,n=new Ea,s=new Ea,r=new Ea,o=new Ea){this.planes=[e,t,n,s,r,o]}set(e,t,n,s,r,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(s),a[4].copy(r),a[5].copy(o),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=ar){const n=this.planes,s=e.elements,r=s[0],o=s[1],a=s[2],c=s[3],l=s[4],u=s[5],h=s[6],d=s[7],f=s[8],m=s[9],_=s[10],g=s[11],p=s[12],y=s[13],x=s[14],v=s[15];if(n[0].setComponents(c-r,d-l,g-f,v-p).normalize(),n[1].setComponents(c+r,d+l,g+f,v+p).normalize(),n[2].setComponents(c+o,d+u,g+m,v+y).normalize(),n[3].setComponents(c-o,d-u,g-m,v-y).normalize(),n[4].setComponents(c-a,d-h,g-_,v-x).normalize(),t===ar)n[5].setComponents(c+a,d+h,g+_,v+x).normalize();else if(t===sl)n[5].setComponents(a,h,_,x).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),mc.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),mc.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(mc)}intersectsSprite(e){return mc.center.set(0,0,0),mc.radius=.7071067811865476,mc.applyMatrix4(e.matrixWorld),this.intersectsSphere(mc)}intersectsSphere(e){const t=this.planes,n=e.center,s=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(n)<s)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const s=t[n];if(um.x=s.normal.x>0?e.max.x:e.min.x,um.y=s.normal.y>0?e.max.y:e.min.y,um.z=s.normal.z>0?e.max.z:e.min.z,s.distanceToPoint(um)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}class sM extends Ki{static get type(){return"LineBasicMaterial"}constructor(e){super(),this.isLineBasicMaterial=!0,this.color=new Zt(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}class V2 extends Ki{static get type(){return"PointsMaterial"}constructor(e){super(),this.isPointsMaterial=!0,this.color=new Zt(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}class wK extends Ui{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=Si,this.minFilter=Si,this.generateMipmaps=!1,this.needsUpdate=!0}}class Uh extends Ui{constructor(e,t,n,s,r,o,a,c,l,u=Vc){if(u!==Vc&&u!==hh)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&u===Vc&&(n=ri),n===void 0&&u===hh&&(n=Bf),super(null,s,r,o,a,c,u,n,l),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=a!==void 0?a:Si,this.minFilter=c!==void 0?c:Si,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class rM extends fl{constructor(e=1,t=32,n=16,s=0,r=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:s,phiLength:r,thetaStart:o,thetaLength:a},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const c=Math.min(o+a,Math.PI);let l=0;const u=[],h=new fe,d=new fe,f=[],m=[],_=[],g=[];for(let p=0;p<=n;p++){const y=[],x=p/n;let v=0;p===0&&o===0?v=.5/t:p===n&&c===Math.PI&&(v=-.5/t);for(let S=0;S<=t;S++){const M=S/t;h.x=-e*Math.cos(s+M*r)*Math.sin(o+x*a),h.y=e*Math.cos(o+x*a),h.z=e*Math.sin(s+M*r)*Math.sin(o+x*a),m.push(h.x,h.y,h.z),d.copy(h).normalize(),_.push(d.x,d.y,d.z),g.push(M+v,1-x),y.push(l++)}u.push(y)}for(let p=0;p<n;p++)for(let y=0;y<t;y++){const x=u[p][y+1],v=u[p][y],S=u[p+1][y],M=u[p+1][y+1];(p!==0||o>0)&&f.push(x,v,M),(p!==n-1||c<Math.PI)&&f.push(v,S,M)}this.setIndex(f),this.setAttribute("position",new Vo(m,3)),this.setAttribute("normal",new Vo(_,3)),this.setAttribute("uv",new Vo(g,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new rM(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class H2 extends Ki{static get type(){return"ShadowMaterial"}constructor(e){super(),this.isShadowMaterial=!0,this.color=new Zt(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class oM extends Ki{static get type(){return"MeshStandardMaterial"}constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.color=new Zt(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Zt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=$a,this.normalScale=new Bt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new mr,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class W2 extends oM{static get type(){return"MeshPhysicalMaterial"}constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Bt(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return oi(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Zt(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Zt(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Zt(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class $2 extends Ki{static get type(){return"MeshPhongMaterial"}constructor(e){super(),this.isMeshPhongMaterial=!0,this.color=new Zt(16777215),this.specular=new Zt(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Zt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=$a,this.normalScale=new Bt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new mr,this.combine=M_,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class q2 extends Ki{static get type(){return"MeshToonMaterial"}constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.color=new Zt(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Zt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=$a,this.normalScale=new Bt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class X2 extends Ki{static get type(){return"MeshNormalMaterial"}constructor(e){super(),this.isMeshNormalMaterial=!0,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=$a,this.normalScale=new Bt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class j2 extends Ki{static get type(){return"MeshLambertMaterial"}constructor(e){super(),this.isMeshLambertMaterial=!0,this.color=new Zt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Zt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=$a,this.normalScale=new Bt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new mr,this.combine=M_,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Y2 extends Ki{static get type(){return"MeshMatcapMaterial"}constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.color=new Zt(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=$a,this.normalScale=new Bt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Z2 extends sM{static get type(){return"LineDashedMaterial"}constructor(e){super(),this.isLineDashedMaterial=!0,this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}class pl extends ni{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Zt(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}class AK extends pl{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(ni.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Zt(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const Av=new _n,XA=new fe,jA=new fe;class aM{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Bt(512,512),this.map=null,this.mapPass=null,this.matrix=new _n,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new G2,this._frameExtents=new Bt(1,1),this._viewportCount=1,this._viewports=[new Yt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;XA.setFromMatrixPosition(e.matrixWorld),t.position.copy(XA),jA.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(jA),t.updateMatrixWorld(),Av.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Av),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Av)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class CK extends aM{constructor(){super(new So(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=uf*2*e.angle*this.focus,s=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;(n!==t.fov||s!==t.aspect||r!==t.far)&&(t.fov=n,t.aspect=s,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class K2 extends pl{constructor(e,t,n=0,s=Math.PI/3,r=0,o=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(ni.DEFAULT_UP),this.updateMatrix(),this.target=new ni,this.distance=n,this.angle=s,this.penumbra=r,this.decay=o,this.map=null,this.shadow=new CK}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const YA=new _n,cd=new fe,Cv=new fe;class RK extends aM{constructor(){super(new So(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new Bt(4,2),this._viewportCount=6,this._viewports=[new Yt(2,1,1,1),new Yt(0,1,1,1),new Yt(3,1,1,1),new Yt(1,1,1,1),new Yt(3,0,1,1),new Yt(1,0,1,1)],this._cubeDirections=[new fe(1,0,0),new fe(-1,0,0),new fe(0,0,1),new fe(0,0,-1),new fe(0,1,0),new fe(0,-1,0)],this._cubeUps=[new fe(0,1,0),new fe(0,1,0),new fe(0,1,0),new fe(0,1,0),new fe(0,0,1),new fe(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,s=this.matrix,r=e.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),cd.setFromMatrixPosition(e.matrixWorld),n.position.copy(cd),Cv.copy(n.position),Cv.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Cv),n.updateMatrixWorld(),s.makeTranslation(-cd.x,-cd.y,-cd.z),YA.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(YA)}}class NK extends pl{constructor(e,t,n=0,s=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=s,this.shadow=new RK}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class cM extends U2{constructor(e=-1,t=1,n=1,s=-1,r=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=s,this.near=r,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,s,r,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=s,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,s=(this.top+this.bottom)/2;let r=n-e,o=n+e,a=s+t,c=s-t;if(this.view!==null&&this.view.enabled){const l=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=l*this.view.offsetX,o=r+l*this.view.width,a-=u*this.view.offsetY,c=a-u*this.view.height}this.projectionMatrix.makeOrthographic(r,o,a,c,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}class PK extends aM{constructor(){super(new cM(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class DK extends pl{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(ni.DEFAULT_UP),this.updateMatrix(),this.target=new ni,this.shadow=new PK}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class LK extends pl{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class IK extends pl{constructor(e,t,n=10,s=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=s}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class FK{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new fe)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,s=e.y,r=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*s),t.addScaledVector(o[2],.488603*r),t.addScaledVector(o[3],.488603*n),t.addScaledVector(o[4],1.092548*(n*s)),t.addScaledVector(o[5],1.092548*(s*r)),t.addScaledVector(o[6],.315392*(3*r*r-1)),t.addScaledVector(o[7],1.092548*(n*r)),t.addScaledVector(o[8],.546274*(n*n-s*s)),t}getIrradianceAt(e,t){const n=e.x,s=e.y,r=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],2*.511664*s),t.addScaledVector(o[2],2*.511664*r),t.addScaledVector(o[3],2*.511664*n),t.addScaledVector(o[4],2*.429043*n*s),t.addScaledVector(o[5],2*.429043*s*r),t.addScaledVector(o[6],.743125*r*r-.247708),t.addScaledVector(o[7],2*.429043*n*r),t.addScaledVector(o[8],.429043*(n*n-s*s)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let s=0;s<9;s++)n[s].fromArray(e,t+s*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let s=0;s<9;s++)n[s].toArray(e,t+s*3);return e}static getBasisAt(e,t){const n=e.x,s=e.y,r=e.z;t[0]=.282095,t[1]=.488603*s,t[2]=.488603*r,t[3]=.488603*n,t[4]=1.092548*n*s,t[5]=1.092548*s*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*n*r,t[8]=.546274*(n*n-s*s)}}class UK extends pl{constructor(e=new FK,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class OK extends k2{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}const BK=["alphaMap","alphaTest","anisotropy","anisotropyMap","anisotropyRotation","aoMap","attenuationColor","attenuationDistance","bumpMap","clearcoat","clearcoatMap","clearcoatNormalMap","clearcoatNormalScale","clearcoatRoughness","color","dispersion","displacementMap","emissive","emissiveMap","envMap","gradientMap","ior","iridescence","iridescenceIOR","iridescenceMap","iridescenceThicknessMap","lightMap","map","matcap","metalness","metalnessMap","normalMap","normalScale","opacity","roughness","roughnessMap","sheen","sheenColor","sheenColorMap","sheenRoughnessMap","shininess","specular","specularColor","specularColorMap","specularIntensity","specularIntensityMap","specularMap","thickness","transmission","transmissionMap"];class kK{constructor(e){this.renderObjects=new WeakMap,this.hasNode=this.containsNode(e),this.hasAnimation=e.object.isSkinnedMesh===!0,this.refreshUniforms=BK,this.renderId=0}firstInitialization(e){return this.renderObjects.has(e)===!1?(this.getRenderObjectData(e),!0):!1}getRenderObjectData(e){let t=this.renderObjects.get(e);if(t===void 0){const{geometry:n,material:s}=e;if(t={material:this.getMaterialData(s),geometry:{attributes:this.getAttributesData(n.attributes),indexVersion:n.index?n.index.version:null,drawRange:{start:n.drawRange.start,count:n.drawRange.count}},worldMatrix:e.object.matrixWorld.clone()},e.object.center&&(t.center=e.object.center.clone()),e.object.morphTargetInfluences&&(t.morphTargetInfluences=e.object.morphTargetInfluences.slice()),e.bundle!==null&&(t.version=e.bundle.version),t.material.transmission>0){const{width:r,height:o}=e.context;t.bufferWidth=r,t.bufferHeight=o}this.renderObjects.set(e,t)}return t}getAttributesData(e){const t={};for(const n in e){const s=e[n];t[n]={version:s.version}}return t}containsNode(e){const t=e.material;for(const n in t)if(t[n]&&t[n].isNode)return!0;return e.renderer.nodes.modelViewMatrix!==null||e.renderer.nodes.modelNormalViewMatrix!==null}getMaterialData(e){const t={};for(const n of this.refreshUniforms){const s=e[n];s!=null&&(typeof s=="object"&&s.clone!==void 0?s.isTexture===!0?t[n]={id:s.id,version:s.version}:t[n]=s.clone():t[n]=s)}return t}equals(e){const{object:t,material:n,geometry:s}=e,r=this.getRenderObjectData(e);if(r.worldMatrix.equals(t.matrixWorld)!==!0)return r.worldMatrix.copy(t.matrixWorld),!1;const o=r.material;for(const _ in o){const g=o[_],p=n[_];if(g.equals!==void 0){if(g.equals(p)===!1)return g.copy(p),!1}else if(p.isTexture===!0){if(g.id!==p.id||g.version!==p.version)return g.id=p.id,g.version=p.version,!1}else if(g!==p)return o[_]=p,!1}if(o.transmission>0){const{width:_,height:g}=e.context;if(r.bufferWidth!==_||r.bufferHeight!==g)return r.bufferWidth=_,r.bufferHeight=g,!1}const a=r.geometry,c=s.attributes,l=a.attributes,u=Object.keys(l),h=Object.keys(c);if(u.length!==h.length)return r.geometry.attributes=this.getAttributesData(c),!1;for(const _ of u){const g=l[_],p=c[_];if(p===void 0)return delete l[_],!1;if(g.version!==p.version)return g.version=p.version,!1}const d=s.index,f=a.indexVersion,m=d?d.version:null;if(f!==m)return a.indexVersion=m,!1;if(a.drawRange.start!==s.drawRange.start||a.drawRange.count!==s.drawRange.count)return a.drawRange.start=s.drawRange.start,a.drawRange.count=s.drawRange.count,!1;if(r.morphTargetInfluences){let _=!1;for(let g=0;g<r.morphTargetInfluences.length;g++)r.morphTargetInfluences[g]!==t.morphTargetInfluences[g]&&(_=!0);if(_)return!0}return r.center&&r.center.equals(t.center)===!1?(r.center.copy(t.center),!0):(e.bundle!==null&&(r.version=e.bundle.version),!0)}needsRefresh(e,t){if(this.hasNode||this.hasAnimation||this.firstInitialization(e))return!0;const{renderId:n}=t;if(this.renderId!==n)return this.renderId=n,!0;const s=e.object.static===!0,r=e.bundle!==null&&e.bundle.static===!0&&this.getRenderObjectData(e).version===e.bundle.version;return s||r?!1:this.equals(e)!==!0}}function hf(i,e=0){let t=3735928559^e,n=1103547991^e;if(i instanceof Array)for(let s=0,r;s<i.length;s++)r=i[s],t=Math.imul(t^r,2654435761),n=Math.imul(n^r,1597334677);else for(let s=0,r;s<i.length;s++)r=i.charCodeAt(s),t=Math.imul(t^r,2654435761),n=Math.imul(n^r,1597334677);return t=Math.imul(t^t>>>16,2246822507),t^=Math.imul(n^n>>>13,3266489909),n=Math.imul(n^n>>>16,2246822507),n^=Math.imul(t^t>>>13,3266489909),4294967296*(2097151&n)+(t>>>0)}const zK=i=>hf(i),Q2=i=>hf(i),zg=(...i)=>hf(i);function J2(i,e=!1){const t=[];i.isNode===!0&&(t.push(i.id),i=i.getSelf());for(const{property:n,childNode:s}of Gg(i))t.push(t,hf(n.slice(0,-4)),s.getCacheKey(e));return hf(t)}function*Gg(i,e=!1){for(const t in i){if(t.startsWith("_")===!0)continue;const n=i[t];if(Array.isArray(n)===!0)for(let s=0;s<n.length;s++){const r=n[s];r&&(r.isNode===!0||e&&typeof r.toJSON=="function")&&(yield{property:t,index:s,childNode:r})}else if(n&&n.isNode===!0)yield{property:t,childNode:n};else if(typeof n=="object")for(const s in n){const r=n[s];r&&(r.isNode===!0||e&&typeof r.toJSON=="function")&&(yield{property:t,index:s,childNode:r})}}}function Vg(i){if(i==null)return null;const e=typeof i;return i.isNode===!0?"node":e==="number"?"float":e==="boolean"?"bool":e==="string"?"string":e==="function"?"shader":i.isVector2===!0?"vec2":i.isVector3===!0?"vec3":i.isVector4===!0?"vec4":i.isMatrix3===!0?"mat3":i.isMatrix4===!0?"mat4":i.isColor===!0?"color":i instanceof ArrayBuffer?"ArrayBuffer":null}function eD(i,...e){const t=i?i.slice(-4):void 0;return e.length===1&&(t==="vec2"?e=[e[0],e[0]]:t==="vec3"?e=[e[0],e[0],e[0]]:t==="vec4"&&(e=[e[0],e[0],e[0],e[0]])),i==="color"?new Zt(...e):t==="vec2"?new Bt(...e):t==="vec3"?new fe(...e):t==="vec4"?new Yt(...e):t==="mat3"?new es(...e):t==="mat4"?new _n(...e):i==="bool"?e[0]||!1:i==="float"||i==="int"||i==="uint"?e[0]||0:i==="string"?e[0]||"":i==="ArrayBuffer"?VK(e[0]):null}function GK(i){let e="";const t=new Uint8Array(i);for(let n=0;n<t.length;n++)e+=String.fromCharCode(t[n]);return btoa(e)}function VK(i){return Uint8Array.from(atob(i),e=>e.charCodeAt(0)).buffer}const ZA={VERTEX:"vertex",FRAGMENT:"fragment"},At={NONE:"none",FRAME:"frame",RENDER:"render",OBJECT:"object"},HK=["fragment","vertex"],KA=["setup","analyze","generate"],QA=[...HK,"compute"],Oh=["x","y","z","w"];let WK=0;class bt extends Ih{static get type(){return"Node"}constructor(e=null){super(),this.nodeType=e,this.updateType=At.NONE,this.updateBeforeType=At.NONE,this.updateAfterType=At.NONE,this.uuid=YZ.generateUUID(),this.version=0,this._cacheKey=null,this._cacheKeyVersion=0,this.global=!1,this.isNode=!0,Object.defineProperty(this,"id",{value:WK++})}set needsUpdate(e){e===!0&&this.version++}get type(){return this.constructor.type}onUpdate(e,t){return this.updateType=t,this.update=e.bind(this.getSelf()),this}onFrameUpdate(e){return this.onUpdate(e,At.FRAME)}onRenderUpdate(e){return this.onUpdate(e,At.RENDER)}onObjectUpdate(e){return this.onUpdate(e,At.OBJECT)}onReference(e){return this.updateReference=e.bind(this.getSelf()),this}getSelf(){return this.self||this}updateReference(){return this}isGlobal(){return this.global}*getChildren(){for(const{childNode:e}of Gg(this))yield e}dispose(){this.dispatchEvent({type:"dispose"})}traverse(e){e(this);for(const t of this.getChildren())t.traverse(e)}getCacheKey(e=!1){return e=e||this.version!==this._cacheKeyVersion,(e===!0||this._cacheKey===null)&&(this._cacheKey=J2(this,e),this._cacheKeyVersion=this.version),this._cacheKey}getScope(){return this}getHash(){return this.uuid}getUpdateType(){return this.updateType}getUpdateBeforeType(){return this.updateBeforeType}getUpdateAfterType(){return this.updateAfterType}getElementType(e){const t=this.getNodeType(e);return e.getElementType(t)}getNodeType(e){const t=e.getNodeProperties(this);return t.outputNode?t.outputNode.getNodeType(e):this.nodeType}getShared(e){const t=this.getHash(e);return e.getNodeFromHash(t)||this}setup(e){const t=e.getNodeProperties(this);let n=0;for(const s of this.getChildren())t["node"+n++]=s;return null}analyze(e){if(e.increaseUsage(this)===1){const n=e.getNodeProperties(this);for(const s of Object.values(n))s&&s.isNode===!0&&s.build(e)}}generate(e,t){const{outputNode:n}=e.getNodeProperties(this);if(n&&n.isNode===!0)return n.build(e,t)}updateBefore(){console.warn("Abstract function.")}updateAfter(){console.warn("Abstract function.")}update(){console.warn("Abstract function.")}build(e,t=null){const n=this.getShared(e);if(this!==n)return n.build(e,t);e.addNode(this),e.addChain(this);let s=null;const r=e.getBuildStage();if(r==="setup"){this.updateReference(e);const o=e.getNodeProperties(this);if(o.initialized!==!0){const a=e.stack.nodes.length;o.initialized=!0,o.outputNode=this.setup(e),o.outputNode!==null&&e.stack.nodes.length;for(const c of Object.values(o))c&&c.isNode===!0&&c.build(e)}}else if(r==="analyze")this.analyze(e);else if(r==="generate")if(this.generate.length===1){const a=this.getNodeType(e),c=e.getDataFromNode(this);s=c.snippet,s===void 0?(s=this.generate(e)||"",c.snippet=s):c.flowCodes!==void 0&&e.context.nodeBlock!==void 0&&e.addFlowCodeHierarchy(this,e.context.nodeBlock),s=e.format(s,a,t)}else s=this.generate(e,t)||"";return e.removeChain(this),e.addSequentialNode(this),s}getSerializeChildren(){return Gg(this)}serialize(e){const t=this.getSerializeChildren(),n={};for(const{property:s,index:r,childNode:o}of t)r!==void 0?(n[s]===void 0&&(n[s]=Number.isInteger(r)?[]:{}),n[s][r]=o.toJSON(e.meta).uuid):n[s]=o.toJSON(e.meta).uuid;Object.keys(n).length>0&&(e.inputNodes=n)}deserialize(e){if(e.inputNodes!==void 0){const t=e.meta.nodes;for(const n in e.inputNodes)if(Array.isArray(e.inputNodes[n])){const s=[];for(const r of e.inputNodes[n])s.push(t[r]);this[n]=s}else if(typeof e.inputNodes[n]=="object"){const s={};for(const r in e.inputNodes[n]){const o=e.inputNodes[n][r];s[r]=t[o]}this[n]=s}else{const s=e.inputNodes[n];this[n]=t[s]}}}toJSON(e){const{uuid:t,type:n}=this,s=e===void 0||typeof e=="string";s&&(e={textures:{},images:{},nodes:{}});let r=e.nodes[t];r===void 0&&(r={uuid:t,type:n,meta:e,metadata:{version:4.6,type:"Node",generator:"Node.toJSON"}},s!==!0&&(e.nodes[r.uuid]=r),this.serialize(r),delete r.meta);function o(a){const c=[];for(const l in a){const u=a[l];delete u.metadata,c.push(u)}return c}if(s){const a=o(e.textures),c=o(e.images),l=o(e.nodes);a.length>0&&(r.textures=a),c.length>0&&(r.images=c),l.length>0&&(r.nodes=l)}return r}}class Vf extends bt{static get type(){return"ArrayElementNode"}constructor(e,t){super(),this.node=e,this.indexNode=t,this.isArrayElementNode=!0}getNodeType(e){return this.node.getElementType(e)}generate(e){const t=this.node.build(e),n=this.indexNode.build(e,"uint");return`${t}[ ${n} ]`}}class tD extends bt{static get type(){return"ConvertNode"}constructor(e,t){super(),this.node=e,this.convertTo=t}getNodeType(e){const t=this.node.getNodeType(e);let n=null;for(const s of this.convertTo.split("|"))(n===null||e.getTypeLength(t)===e.getTypeLength(s))&&(n=s);return n}serialize(e){super.serialize(e),e.convertTo=this.convertTo}deserialize(e){super.deserialize(e),this.convertTo=e.convertTo}generate(e,t){const n=this.node,s=this.getNodeType(e),r=n.build(e,s);return e.format(r,s,t)}}class Gn extends bt{static get type(){return"TempNode"}constructor(e){super(e),this.isTempNode=!0}hasDependencies(e){return e.getDataFromNode(this).usageCount>1}build(e,t){if(e.getBuildStage()==="generate"){const s=e.getVectorType(this.getNodeType(e,t)),r=e.getDataFromNode(this);if(r.propertyName!==void 0)return e.format(r.propertyName,s,t);if(s!=="void"&&t!=="void"&&this.hasDependencies(e)){const o=super.build(e,s),a=e.getVarFromNode(this,null,s),c=e.getPropertyName(a);return e.addLineFlowCode(`${c} = ${o}`,this),r.snippet=o,r.propertyName=c,e.format(r.propertyName,s,t)}}return super.build(e,t)}}class $K extends Gn{static get type(){return"JoinNode"}constructor(e=[],t=null){super(t),this.nodes=e}getNodeType(e){return this.nodeType!==null?e.getVectorType(this.nodeType):e.getTypeFromLength(this.nodes.reduce((t,n)=>t+e.getTypeLength(n.getNodeType(e)),0))}generate(e,t){const n=this.getNodeType(e),s=this.nodes,r=e.getComponentType(n),o=[];for(const c of s){let l=c.build(e);const u=e.getComponentType(c.getNodeType(e));u!==r&&(l=e.format(l,u,r)),o.push(l)}const a=`${e.getType(n)}( ${o.join(", ")} )`;return e.format(a,n,t)}}const qK=Oh.join("");class JA extends bt{static get type(){return"SplitNode"}constructor(e,t="x"){super(),this.node=e,this.components=t,this.isSplitNode=!0}getVectorLength(){let e=this.components.length;for(const t of this.components)e=Math.max(Oh.indexOf(t)+1,e);return e}getComponentType(e){return e.getComponentType(this.node.getNodeType(e))}getNodeType(e){return e.getTypeFromLength(this.components.length,this.getComponentType(e))}generate(e,t){const n=this.node,s=e.getTypeLength(n.getNodeType(e));let r=null;if(s>1){let o=null;this.getVectorLength()>=s&&(o=e.getTypeFromLength(this.getVectorLength(),this.getComponentType(e)));const c=n.build(e,o);this.components.length===s&&this.components===qK.slice(0,this.components.length)?r=e.format(c,o,t):r=e.format(`${c}.${this.components}`,this.getNodeType(e),t)}else r=n.build(e,t);return r}serialize(e){super.serialize(e),e.components=this.components}deserialize(e){super.deserialize(e),this.components=e.components}}class XK extends Gn{static get type(){return"SetNode"}constructor(e,t,n){super(),this.sourceNode=e,this.components=t,this.targetNode=n}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{sourceNode:t,components:n,targetNode:s}=this,r=this.getNodeType(e),o=e.getTypeFromLength(n.length,s.getNodeType(e)),a=s.build(e,o),c=t.build(e,r),l=e.getTypeLength(r),u=[];for(let h=0;h<l;h++){const d=Oh[h];d===n[0]?(u.push(a),h+=n.length-1):u.push(c+"."+d)}return`${e.getType(r)}( ${u.join(", ")} )`}}class jK extends Gn{static get type(){return"FlipNode"}constructor(e,t){super(),this.sourceNode=e,this.components=t}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{components:t,sourceNode:n}=this,s=this.getNodeType(e),r=n.build(e),o=e.getVarFromNode(this),a=e.getPropertyName(o);e.addLineFlowCode(a+" = "+r,this);const c=e.getTypeLength(s),l=[];let u=0;for(let h=0;h<c;h++){const d=Oh[h];d===t[u]?(l.push("1.0 - "+(a+"."+d)),u++):l.push(a+"."+d)}return`${e.getType(s)}( ${l.join(", ")} )`}}class lM extends bt{static get type(){return"InputNode"}constructor(e,t=null){super(t),this.isInputNode=!0,this.value=e,this.precision=null}getNodeType(){return this.nodeType===null?Vg(this.value):this.nodeType}getInputType(e){return this.getNodeType(e)}setPrecision(e){return this.precision=e,this}serialize(e){super.serialize(e),e.value=this.value,this.value&&this.value.toArray&&(e.value=this.value.toArray()),e.valueType=Vg(this.value),e.nodeType=this.nodeType,e.valueType==="ArrayBuffer"&&(e.value=GK(e.value)),e.precision=this.precision}deserialize(e){super.deserialize(e),this.nodeType=e.nodeType,this.value=Array.isArray(e.value)?eD(e.valueType,...e.value):e.value,this.precision=e.precision||null,this.value&&this.value.fromArray&&(this.value=this.value.fromArray(e.value))}generate(){console.warn("Abstract function.")}}class Qo extends lM{static get type(){return"ConstNode"}constructor(e,t=null){super(e,t),this.isConstNode=!0}generateConst(e){return e.generateConst(this.getNodeType(e),this.value)}generate(e,t){const n=this.getNodeType(e);return e.format(this.generateConst(e),n,t)}}let dh=null;const Mu=new Map;function Me(i,e){if(Mu.has(i)){console.warn(`Redefinition of method chaining ${i}`);return}if(typeof e!="function")throw new Error(`Node element ${i} is not a function`);Mu.set(i,e)}const nD=i=>i.replace(/r|s/g,"x").replace(/g|t/g,"y").replace(/b|p/g,"z").replace(/a|q/g,"w"),e1=i=>nD(i).split("").sort().join(""),iD={setup(i,e){const t=e.shift();return i(A_(t),...e)},get(i,e,t){if(typeof e=="string"&&i[e]===void 0){if(i.isStackNode!==!0&&e==="assign")return(...n)=>(dh.assign(t,...n),t);if(Mu.has(e)){const n=Mu.get(e);return i.isStackNode?(...s)=>t.add(n(...s)):(...s)=>n(t,...s)}else{if(e==="self")return i;if(e.endsWith("Assign")&&Mu.has(e.slice(0,e.length-6))){const n=Mu.get(e.slice(0,e.length-6));return i.isStackNode?(...s)=>t.assign(s[0],n(...s)):(...s)=>t.assign(n(t,...s))}else{if(/^[xyzwrgbastpq]{1,4}$/.test(e)===!0)return e=nD(e),Ve(new JA(t,e));if(/^set[XYZWRGBASTPQ]{1,4}$/.test(e)===!0)return e=e1(e.slice(3).toLowerCase()),n=>Ve(new XK(i,e,n));if(/^flip[XYZWRGBASTPQ]{1,4}$/.test(e)===!0)return e=e1(e.slice(4).toLowerCase()),()=>Ve(new jK(Ve(i),e));if(e==="width"||e==="height"||e==="depth")return e==="width"?e="x":e==="height"?e="y":e==="depth"&&(e="z"),Ve(new JA(i,e));if(/^\d+$/.test(e)===!0)return Ve(new Vf(t,new Qo(Number(e),"uint")))}}}return Reflect.get(i,e,t)},set(i,e,t,n){return typeof e=="string"&&i[e]===void 0&&(/^[xyzwrgbastpq]{1,4}$/.test(e)===!0||e==="width"||e==="height"||e==="depth"||/^\d+$/.test(e)===!0)?(n[e].assign(t),!0):Reflect.set(i,e,t,n)}},Rv=new WeakMap,t1=new WeakMap,YK=function(i,e=null){const t=Vg(i);if(t==="node"){let n=Rv.get(i);return n===void 0&&(n=new Proxy(i,iD),Rv.set(i,n),Rv.set(n,n)),n}else{if(e===null&&(t==="float"||t==="boolean")||t&&t!=="shader"&&t!=="string")return Ve(lS(i,e));if(t==="shader")return Ze(i)}return i},ZK=function(i,e=null){for(const t in i)i[t]=Ve(i[t],e);return i},KK=function(i,e=null){const t=i.length;for(let n=0;n<t;n++)i[n]=Ve(i[n],e);return i},QK=function(i,e=null,t=null,n=null){const s=r=>Ve(n!==null?Object.assign(r,n):r);return e===null?(...r)=>s(new i(...Vu(r))):t!==null?(t=Ve(t),(...r)=>s(new i(e,...Vu(r),t))):(...r)=>s(new i(e,...Vu(r)))},JK=function(i,...e){return Ve(new i(...Vu(e)))};class eQ extends bt{constructor(e,t){super(),this.shaderNode=e,this.inputNodes=t}getNodeType(e){return this.shaderNode.nodeType||this.getOutputNode(e).getNodeType(e)}call(e){const{shaderNode:t,inputNodes:n}=this,s=e.getNodeProperties(t);if(s.onceOutput)return s.onceOutput;let r=null;if(t.layout){let o=t1.get(e.constructor);o===void 0&&(o=new WeakMap,t1.set(e.constructor,o));let a=o.get(t);a===void 0&&(a=Ve(e.buildFunctionNode(t)),o.set(t,a)),e.currentFunctionNode!==null&&e.currentFunctionNode.includes.push(a),r=Ve(a.call(n))}else{const o=t.jsFunc,a=n!==null?o(n,e):o(e);r=Ve(a)}return t.once&&(s.onceOutput=r),r}getOutputNode(e){const t=e.getNodeProperties(this);return t.outputNode===null&&(t.outputNode=this.setupOutput(e)),t.outputNode}setup(e){return this.getOutputNode(e)}setupOutput(e){return e.addStack(),e.stack.outputNode=this.call(e),e.removeStack()}generate(e,t){return this.getOutputNode(e).build(e,t)}}class tQ extends bt{constructor(e,t){super(t),this.jsFunc=e,this.layout=null,this.global=!0,this.once=!1}setLayout(e){return this.layout=e,this}call(e=null){return A_(e),Ve(new eQ(this,e))}setup(){return this.call()}}const nQ=[!1,!0],iQ=[0,1,2,3],sQ=[-1,-2],sD=[.5,1.5,1/3,1e-6,1e6,Math.PI,Math.PI*2,1/Math.PI,2/Math.PI,1/(Math.PI*2),Math.PI/2],uM=new Map;for(const i of nQ)uM.set(i,new Qo(i));const hM=new Map;for(const i of iQ)hM.set(i,new Qo(i,"uint"));const dM=new Map([...hM].map(i=>new Qo(i.value,"int")));for(const i of sQ)dM.set(i,new Qo(i,"int"));const E_=new Map([...dM].map(i=>new Qo(i.value)));for(const i of sD)E_.set(i,new Qo(i));for(const i of sD)E_.set(-i,new Qo(-i));const w_={bool:uM,uint:hM,ints:dM,float:E_},n1=new Map([...uM,...E_]),lS=(i,e)=>n1.has(i)?n1.get(i):i.isNode===!0?i:new Qo(i,e),rQ=i=>{try{return i.getNodeType()}catch{return}},Vn=function(i,e=null){return(...t)=>{if((t.length===0||!["bool","float","int","uint"].includes(i)&&t.every(s=>typeof s!="object"))&&(t=[eD(i,...t)]),t.length===1&&e!==null&&e.has(t[0]))return Ve(e.get(t[0]));if(t.length===1){const s=lS(t[0],i);return rQ(s)===i?Ve(s):Ve(new tD(s,i))}const n=t.map(s=>lS(s));return Ve(new $K(n,i))}},i1=i=>typeof i=="object"&&i!==null?i.value:i,oQ=i=>i!=null?i.nodeType||i.convertTo||(typeof i=="string"?i:null):null;function Zm(i,e){return new Proxy(new tQ(i,e),iD)}const Ve=(i,e=null)=>YK(i,e),A_=(i,e=null)=>new ZK(i,e),Vu=(i,e=null)=>new KK(i,e),Pe=(...i)=>new QK(...i),We=(...i)=>new JK(...i),Ze=(i,e)=>{const t=new Zm(i,e),n=(...s)=>{let r;return A_(s),s[0]&&s[0].isNode?r=[...s]:r=s[0],t.call(r)};return n.shaderNode=t,n.setLayout=s=>(t.setLayout(s),n),n.once=()=>(t.once=!0,n),n};Me("toGlobal",i=>(i.global=!0,i));const Hg=i=>{dh=i},rD=()=>dh,li=(...i)=>dh.If(...i);function aQ(i){return dh&&dh.add(i),i}Me("append",aQ);const cQ=new Vn("color"),Ae=new Vn("float",w_.float),Mn=new Vn("int",w_.ints),lQ=new Vn("uint",w_.uint),uQ=new Vn("bool",w_.bool),Je=new Vn("vec2"),bo=new Vn("ivec2"),hQ=new Vn("uvec2"),dQ=new Vn("bvec2"),Te=new Vn("vec3"),fQ=new Vn("ivec3"),pQ=new Vn("uvec3"),mQ=new Vn("bvec3"),xt=new Vn("vec4"),gQ=new Vn("ivec4"),_Q=new Vn("uvec4"),vQ=new Vn("bvec4"),fM=new Vn("mat2"),Bi=new Vn("mat3"),Hu=new Vn("mat4");Me("toColor",cQ);Me("toFloat",Ae);Me("toInt",Mn);Me("toUint",lQ);Me("toBool",uQ);Me("toVec2",Je);Me("toIVec2",bo);Me("toUVec2",hQ);Me("toBVec2",dQ);Me("toVec3",Te);Me("toIVec3",fQ);Me("toUVec3",pQ);Me("toBVec3",mQ);Me("toVec4",xt);Me("toIVec4",gQ);Me("toUVec4",_Q);Me("toBVec4",vQ);Me("toMat2",fM);Me("toMat3",Bi);Me("toMat4",Hu);const xQ=Pe(Vf),yQ=(i,e)=>Ve(new tD(Ve(i),e));Me("element",xQ);Me("convert",yQ);class oD extends bt{static get type(){return"UniformGroupNode"}constructor(e,t=!1,n=1){super("string"),this.name=e,this.version=0,this.shared=t,this.order=n,this.isUniformGroup=!0}set needsUpdate(e){e===!0&&this.version++}serialize(e){super.serialize(e),e.name=this.name,e.version=this.version,e.shared=this.shared}deserialize(e){super.deserialize(e),this.name=e.name,this.version=e.version,this.shared=e.shared}}const SQ=i=>new oD(i),aD=(i,e=0)=>new oD(i,!0,e),bQ=aD("frame"),Ft=aD("render"),cD=SQ("object");class Hf extends lM{static get type(){return"UniformNode"}constructor(e,t=null){super(e,t),this.isUniformNode=!0,this.name="",this.groupNode=cD}label(e){return this.name=e,this}setGroup(e){return this.groupNode=e,this}getGroup(){return this.groupNode}getUniformHash(e){return this.getHash(e)}onUpdate(e,t){const n=this.getSelf();return e=e.bind(n),super.onUpdate(s=>{const r=e(s,n);r!==void 0&&(this.value=r)},t)}generate(e,t){const n=this.getNodeType(e),s=this.getUniformHash(e);let r=e.getNodeFromHash(s);r===void 0&&(e.setHashNode(this,s),r=this);const o=r.getInputType(e),a=e.getUniformFromNode(r,o,e.shaderStage,this.name||e.context.label),c=e.getPropertyName(a);return e.context.label!==void 0&&delete e.context.label,e.format(c,n,t)}}const yt=(i,e)=>{const t=oQ(e||i),n=i&&i.isNode===!0?i.node&&i.node.value||i.value:i;return Ve(new Hf(n,t))};class Kt extends bt{static get type(){return"PropertyNode"}constructor(e,t=null,n=!1){super(e),this.name=t,this.varying=n,this.isPropertyNode=!0}getHash(e){return this.name||super.getHash(e)}isGlobal(){return!0}generate(e){let t;return this.varying===!0?(t=e.getVaryingFromNode(this,this.name),t.needsInterpolation=!0):t=e.getVarFromNode(this,this.name),e.getPropertyName(t)}}const mu=(i,e)=>Ve(new Kt(i,e)),Wg=(i,e)=>Ve(new Kt(i,e,!0)),$t=We(Kt,"vec4","DiffuseColor"),s1=We(Kt,"vec3","EmissiveColor"),Co=We(Kt,"float","Roughness"),$g=We(Kt,"float","Metalness"),uS=We(Kt,"float","Clearcoat"),qg=We(Kt,"float","ClearcoatRoughness"),Tu=We(Kt,"vec3","Sheen"),pM=We(Kt,"float","SheenRoughness"),mM=We(Kt,"float","Iridescence"),lD=We(Kt,"float","IridescenceIOR"),uD=We(Kt,"float","IridescenceThickness"),hS=We(Kt,"float","AlphaT"),bc=We(Kt,"float","Anisotropy"),Km=We(Kt,"vec3","AnisotropyT"),Wu=We(Kt,"vec3","AnisotropyB"),fs=We(Kt,"color","SpecularColor"),Xg=We(Kt,"float","SpecularF90"),dS=We(Kt,"float","Shininess"),MQ=We(Kt,"vec4","Output"),Nv=We(Kt,"float","dashSize"),r1=We(Kt,"float","gapSize"),Qm=We(Kt,"float","IOR"),fS=We(Kt,"float","Transmission"),hD=We(Kt,"float","Thickness"),dD=We(Kt,"float","AttenuationDistance"),fD=We(Kt,"color","AttenuationColor"),pD=We(Kt,"float","Dispersion");class TQ extends Gn{static get type(){return"AssignNode"}constructor(e,t){super(),this.targetNode=e,this.sourceNode=t}hasDependencies(){return!1}getNodeType(e,t){return t!=="void"?this.targetNode.getNodeType(e):"void"}needsSplitAssign(e){const{targetNode:t}=this;if(e.isAvailable("swizzleAssign")===!1&&t.isSplitNode&&t.components.length>1){const n=e.getTypeLength(t.node.getNodeType(e));return Oh.join("").slice(0,n)!==t.components}return!1}generate(e,t){const{targetNode:n,sourceNode:s}=this,r=this.needsSplitAssign(e),o=n.getNodeType(e),a=n.context({assign:!0}).build(e),c=s.build(e,o),l=s.getNodeType(e),u=e.getDataFromNode(this);let h;if(u.initialized===!0)t!=="void"&&(h=a);else if(r){const d=e.getVarFromNode(this,null,o),f=e.getPropertyName(d);e.addLineFlowCode(`${f} = ${c}`,this);const m=n.node.context({assign:!0}).build(e);for(let _=0;_<n.components.length;_++){const g=n.components[_];e.addLineFlowCode(`${m}.${g} = ${f}[ ${_} ]`,this)}t!=="void"&&(h=a)}else h=`${a} = ${c}`,(t==="void"||l==="void")&&(e.addLineFlowCode(h,this),t!=="void"&&(h=a));return u.initialized=!0,e.format(h,o,t)}}const EQ=Pe(TQ);Me("assign",EQ);class wQ extends Gn{static get type(){return"FunctionCallNode"}constructor(e=null,t={}){super(),this.functionNode=e,this.parameters=t}setParameters(e){return this.parameters=e,this}getParameters(){return this.parameters}getNodeType(e){return this.functionNode.getNodeType(e)}generate(e){const t=[],n=this.functionNode,s=n.getInputs(e),r=this.parameters,o=(c,l)=>{const u=l.type,h=u==="pointer";let d;return h?d="&"+c.build(e):d=c.build(e,u),d};if(Array.isArray(r))for(let c=0;c<r.length;c++)t.push(o(r[c],s[c]));else for(const c of s){const l=r[c.name];if(l!==void 0)t.push(o(l,c));else throw new Error(`FunctionCallNode: Input '${c.name}' not found in FunctionNode.`)}return`${n.build(e,"property")}( ${t.join(", ")} )`}}const AQ=(i,...e)=>(e=e.length>1||e[0]&&e[0].isNode===!0?Vu(e):A_(e[0]),Ve(new wQ(Ve(i),e)));Me("call",AQ);class vn extends Gn{static get type(){return"OperatorNode"}constructor(e,t,n,...s){if(super(),s.length>0){let r=new vn(e,t,n);for(let o=0;o<s.length-1;o++)r=new vn(e,r,s[o]);t=r,n=s[s.length-1]}this.op=e,this.aNode=t,this.bNode=n}getNodeType(e,t){const n=this.op,s=this.aNode,r=this.bNode,o=s.getNodeType(e),a=typeof r<"u"?r.getNodeType(e):null;if(o==="void"||a==="void")return"void";if(n==="%")return o;if(n==="~"||n==="&"||n==="|"||n==="^"||n===">>"||n==="<<")return e.getIntegerType(o);if(n==="!"||n==="=="||n==="&&"||n==="||"||n==="^^")return"bool";if(n==="<"||n===">"||n==="<="||n===">="){const c=t?e.getTypeLength(t):Math.max(e.getTypeLength(o),e.getTypeLength(a));return c>1?`bvec${c}`:"bool"}else return o==="float"&&e.isMatrix(a)?a:e.isMatrix(o)&&e.isVector(a)?e.getVectorFromMatrix(o):e.isVector(o)&&e.isMatrix(a)?e.getVectorFromMatrix(a):e.getTypeLength(a)>e.getTypeLength(o)?a:o}generate(e,t){const n=this.op,s=this.aNode,r=this.bNode,o=this.getNodeType(e,t);let a=null,c=null;o!=="void"?(a=s.getNodeType(e),c=typeof r<"u"?r.getNodeType(e):null,n==="<"||n===">"||n==="<="||n===">="||n==="=="?e.isVector(a)?c=a:a!==c&&(a=c="float"):n===">>"||n==="<<"?(a=o,c=e.changeComponentType(c,"uint")):e.isMatrix(a)&&e.isVector(c)?c=e.getVectorFromMatrix(a):e.isVector(a)&&e.isMatrix(c)?a=e.getVectorFromMatrix(c):a=c=o):a=c=o;const l=s.build(e,a),u=typeof r<"u"?r.build(e,c):null,h=e.getTypeLength(t),d=e.getFunctionOperator(n);if(t!=="void")return n==="<"&&h>1?e.useComparisonMethod?e.format(`${e.getMethod("lessThan",t)}( ${l}, ${u} )`,o,t):e.format(`( ${l} < ${u} )`,o,t):n==="<="&&h>1?e.useComparisonMethod?e.format(`${e.getMethod("lessThanEqual",t)}( ${l}, ${u} )`,o,t):e.format(`( ${l} <= ${u} )`,o,t):n===">"&&h>1?e.useComparisonMethod?e.format(`${e.getMethod("greaterThan",t)}( ${l}, ${u} )`,o,t):e.format(`( ${l} > ${u} )`,o,t):n===">="&&h>1?e.useComparisonMethod?e.format(`${e.getMethod("greaterThanEqual",t)}( ${l}, ${u} )`,o,t):e.format(`( ${l} >= ${u} )`,o,t):n==="!"||n==="~"?e.format(`(${n}${l})`,a,t):d?e.format(`${d}( ${l}, ${u} )`,o,t):e.format(`( ${l} ${n} ${u} )`,o,t);if(a!=="void")return d?e.format(`${d}( ${l}, ${u} )`,o,t):e.format(`${l} ${n} ${u}`,o,t)}serialize(e){super.serialize(e),e.op=this.op}deserialize(e){super.deserialize(e),this.op=e.op}}const ki=Pe(vn,"+"),ms=Pe(vn,"-"),Dt=Pe(vn,"*"),qa=Pe(vn,"/"),mD=Pe(vn,"%"),CQ=Pe(vn,"=="),RQ=Pe(vn,"!="),NQ=Pe(vn,"<"),PQ=Pe(vn,">"),DQ=Pe(vn,"<="),LQ=Pe(vn,">="),IQ=Pe(vn,"&&"),FQ=Pe(vn,"||"),UQ=Pe(vn,"!"),OQ=Pe(vn,"^^"),BQ=Pe(vn,"&"),kQ=Pe(vn,"~"),zQ=Pe(vn,"|"),GQ=Pe(vn,"^"),VQ=Pe(vn,"<<"),HQ=Pe(vn,">>");Me("add",ki);Me("sub",ms);Me("mul",Dt);Me("div",qa);Me("modInt",mD);Me("equal",CQ);Me("notEqual",RQ);Me("lessThan",NQ);Me("greaterThan",PQ);Me("lessThanEqual",DQ);Me("greaterThanEqual",LQ);Me("and",IQ);Me("or",FQ);Me("not",UQ);Me("xor",OQ);Me("bitAnd",BQ);Me("bitNot",kQ);Me("bitOr",zQ);Me("bitXor",GQ);Me("shiftLeft",VQ);Me("shiftRight",HQ);const WQ=(...i)=>(console.warn("TSL.OperatorNode: .remainder() has been renamed to .modInt()."),mD(...i));Me("remainder",WQ);class ae extends Gn{static get type(){return"MathNode"}constructor(e,t,n=null,s=null){super(),this.method=e,this.aNode=t,this.bNode=n,this.cNode=s}getInputType(e){const t=this.aNode.getNodeType(e),n=this.bNode?this.bNode.getNodeType(e):null,s=this.cNode?this.cNode.getNodeType(e):null,r=e.isMatrix(t)?0:e.getTypeLength(t),o=e.isMatrix(n)?0:e.getTypeLength(n),a=e.isMatrix(s)?0:e.getTypeLength(s);return r>o&&r>a?t:o>a?n:a>r?s:t}getNodeType(e){const t=this.method;return t===ae.LENGTH||t===ae.DISTANCE||t===ae.DOT?"float":t===ae.CROSS?"vec3":t===ae.ALL?"bool":t===ae.EQUALS?e.changeComponentType(this.aNode.getNodeType(e),"bool"):t===ae.MOD?this.aNode.getNodeType(e):this.getInputType(e)}generate(e,t){const n=this.method,s=this.getNodeType(e),r=this.getInputType(e),o=this.aNode,a=this.bNode,c=this.cNode,l=e.renderer.isWebGLRenderer===!0;if(n===ae.TRANSFORM_DIRECTION){let u=o,h=a;e.isMatrix(u.getNodeType(e))?h=xt(Te(h),0):u=xt(Te(u),0);const d=Dt(u,h).xyz;return ff(d).build(e,t)}else{if(n===ae.NEGATE)return e.format("( - "+o.build(e,r)+" )",s,t);if(n===ae.ONE_MINUS)return ms(1,o).build(e,t);if(n===ae.RECIPROCAL)return qa(1,o).build(e,t);if(n===ae.DIFFERENCE)return Qs(ms(o,a)).build(e,t);{const u=[];return n===ae.CROSS||n===ae.MOD?u.push(o.build(e,s),a.build(e,s)):l&&n===ae.STEP?u.push(o.build(e,e.getTypeLength(o.getNodeType(e))===1?"float":r),a.build(e,r)):l&&(n===ae.MIN||n===ae.MAX)||n===ae.MOD?u.push(o.build(e,r),a.build(e,e.getTypeLength(a.getNodeType(e))===1?"float":r)):n===ae.REFRACT?u.push(o.build(e,r),a.build(e,r),c.build(e,"float")):n===ae.MIX?u.push(o.build(e,r),a.build(e,r),c.build(e,e.getTypeLength(c.getNodeType(e))===1?"float":r)):(u.push(o.build(e,r)),a!==null&&u.push(a.build(e,r)),c!==null&&u.push(c.build(e,r))),e.format(`${e.getMethod(n,s)}( ${u.join(", ")} )`,s,t)}}}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}ae.ALL="all";ae.ANY="any";ae.EQUALS="equals";ae.RADIANS="radians";ae.DEGREES="degrees";ae.EXP="exp";ae.EXP2="exp2";ae.LOG="log";ae.LOG2="log2";ae.SQRT="sqrt";ae.INVERSE_SQRT="inversesqrt";ae.FLOOR="floor";ae.CEIL="ceil";ae.NORMALIZE="normalize";ae.FRACT="fract";ae.SIN="sin";ae.COS="cos";ae.TAN="tan";ae.ASIN="asin";ae.ACOS="acos";ae.ATAN="atan";ae.ABS="abs";ae.SIGN="sign";ae.LENGTH="length";ae.NEGATE="negate";ae.ONE_MINUS="oneMinus";ae.DFDX="dFdx";ae.DFDY="dFdy";ae.ROUND="round";ae.RECIPROCAL="reciprocal";ae.TRUNC="trunc";ae.FWIDTH="fwidth";ae.BITCAST="bitcast";ae.TRANSPOSE="transpose";ae.ATAN2="atan2";ae.MIN="min";ae.MAX="max";ae.MOD="mod";ae.STEP="step";ae.REFLECT="reflect";ae.DISTANCE="distance";ae.DIFFERENCE="difference";ae.DOT="dot";ae.CROSS="cross";ae.POW="pow";ae.TRANSFORM_DIRECTION="transformDirection";ae.MIX="mix";ae.CLAMP="clamp";ae.REFRACT="refract";ae.SMOOTHSTEP="smoothstep";ae.FACEFORWARD="faceforward";const $Q=Ae(1e-6),qQ=Ae(Math.PI),gD=Pe(ae,ae.ALL),XQ=Pe(ae,ae.ANY),jQ=Pe(ae,ae.EQUALS),YQ=Pe(ae,ae.RADIANS),ZQ=Pe(ae,ae.DEGREES),_D=Pe(ae,ae.EXP),df=Pe(ae,ae.EXP2),vD=Pe(ae,ae.LOG),Ho=Pe(ae,ae.LOG2),gM=Pe(ae,ae.SQRT),KQ=Pe(ae,ae.INVERSE_SQRT),Hc=Pe(ae,ae.FLOOR),_M=Pe(ae,ae.CEIL),ff=Pe(ae,ae.NORMALIZE),Qa=Pe(ae,ae.FRACT),Ks=Pe(ae,ae.SIN),wa=Pe(ae,ae.COS),QQ=Pe(ae,ae.TAN),JQ=Pe(ae,ae.ASIN),eJ=Pe(ae,ae.ACOS),tJ=Pe(ae,ae.ATAN),Qs=Pe(ae,ae.ABS),xD=Pe(ae,ae.SIGN),ka=Pe(ae,ae.LENGTH),nJ=Pe(ae,ae.NEGATE),iJ=Pe(ae,ae.ONE_MINUS),yD=Pe(ae,ae.DFDX),SD=Pe(ae,ae.DFDY),sJ=Pe(ae,ae.ROUND),rJ=Pe(ae,ae.RECIPROCAL),oJ=Pe(ae,ae.TRUNC),aJ=Pe(ae,ae.FWIDTH);ae.BITCAST;const cJ=Pe(ae,ae.TRANSPOSE),lJ=Pe(ae,ae.ATAN2),pf=Pe(ae,ae.MIN),Fs=Pe(ae,ae.MAX),bD=Pe(ae,ae.MOD),MD=Pe(ae,ae.STEP),uJ=Pe(ae,ae.REFLECT),hJ=Pe(ae,ae.DISTANCE),dJ=Pe(ae,ae.DIFFERENCE),vM=Pe(ae,ae.DOT),TD=Pe(ae,ae.CROSS),C_=Pe(ae,ae.POW),ED=Pe(ae,ae.POW,2),fJ=Pe(ae,ae.POW,3),pJ=Pe(ae,ae.POW,4),mJ=Pe(ae,ae.TRANSFORM_DIRECTION),gJ=i=>Dt(xD(i),C_(Qs(i),1/3)),_J=i=>vM(i,i),ln=Pe(ae,ae.MIX),qo=(i,e=0,t=1)=>Ve(new ae(ae.CLAMP,Ve(i),Ve(e),Ve(t))),vJ=i=>qo(i),wD=Pe(ae,ae.REFRACT),ol=Pe(ae,ae.SMOOTHSTEP),xJ=Pe(ae,ae.FACEFORWARD),yJ=Ze(([i])=>{const n=43758.5453,s=vM(i.xy,Je(12.9898,78.233)),r=bD(s,qQ);return Qa(Ks(r).mul(n))}),SJ=(i,e,t)=>ln(e,t,i),bJ=(i,e,t)=>ol(e,t,i);Me("all",gD);Me("any",XQ);Me("equals",jQ);Me("radians",YQ);Me("degrees",ZQ);Me("exp",_D);Me("exp2",df);Me("log",vD);Me("log2",Ho);Me("sqrt",gM);Me("inverseSqrt",KQ);Me("floor",Hc);Me("ceil",_M);Me("normalize",ff);Me("fract",Qa);Me("sin",Ks);Me("cos",wa);Me("tan",QQ);Me("asin",JQ);Me("acos",eJ);Me("atan",tJ);Me("abs",Qs);Me("sign",xD);Me("length",ka);Me("lengthSq",_J);Me("negate",nJ);Me("oneMinus",iJ);Me("dFdx",yD);Me("dFdy",SD);Me("round",sJ);Me("reciprocal",rJ);Me("trunc",oJ);Me("fwidth",aJ);Me("atan2",lJ);Me("min",pf);Me("max",Fs);Me("mod",bD);Me("step",MD);Me("reflect",uJ);Me("distance",hJ);Me("dot",vM);Me("cross",TD);Me("pow",C_);Me("pow2",ED);Me("pow3",fJ);Me("pow4",pJ);Me("transformDirection",mJ);Me("mix",SJ);Me("clamp",qo);Me("refract",wD);Me("smoothstep",bJ);Me("faceForward",xJ);Me("difference",dJ);Me("saturate",vJ);Me("cbrt",gJ);Me("transpose",cJ);Me("rand",yJ);class MJ extends bt{static get type(){return"ConditionalNode"}constructor(e,t,n=null){super(),this.condNode=e,this.ifNode=t,this.elseNode=n}getNodeType(e){const t=this.ifNode.getNodeType(e);if(this.elseNode!==null){const n=this.elseNode.getNodeType(e);if(e.getTypeLength(n)>e.getTypeLength(t))return n}return t}setup(e){const t=this.condNode.cache(),n=this.ifNode.cache(),s=this.elseNode?this.elseNode.cache():null,r=e.context.nodeBlock;e.getDataFromNode(n).parentNodeBlock=r,s!==null&&(e.getDataFromNode(s).parentNodeBlock=r);const o=e.getNodeProperties(this);o.condNode=t,o.ifNode=n.context({nodeBlock:n}),o.elseNode=s?s.context({nodeBlock:s}):null}generate(e,t){const n=this.getNodeType(e),s=e.getDataFromNode(this);if(s.nodeProperty!==void 0)return s.nodeProperty;const{condNode:r,ifNode:o,elseNode:a}=e.getNodeProperties(this),c=t!=="void",l=c?mu(n).build(e):"";s.nodeProperty=l;const u=r.build(e,"bool");e.addFlowCode(`
${e.tab}if ( ${u} ) {

`).addFlowTab();let h=o.build(e,n);if(h&&(c?h=l+" = "+h+";":h="return "+h+";"),e.removeFlowTab().addFlowCode(e.tab+"	"+h+`

`+e.tab+"}"),a!==null){e.addFlowCode(` else {

`).addFlowTab();let d=a.build(e,n);d&&(c?d=l+" = "+d+";":d="return "+d+";"),e.removeFlowTab().addFlowCode(e.tab+"	"+d+`

`+e.tab+`}

`)}else e.addFlowCode(`

`);return e.format(l,n,t)}}const $i=Pe(MJ);Me("select",$i);const TJ=(...i)=>(console.warn("TSL.ConditionalNode: cond() has been renamed to select()."),$i(...i));Me("cond",TJ);class AD extends bt{static get type(){return"ContextNode"}constructor(e,t={}){super(),this.isContextNode=!0,this.node=e,this.value=t}getScope(){return this.node.getScope()}getNodeType(e){return this.node.getNodeType(e)}analyze(e){this.node.build(e)}setup(e){const t=e.getContext();e.setContext({...e.context,...this.value});const n=this.node.build(e);return e.setContext(t),n}generate(e,t){const n=e.getContext();e.setContext({...e.context,...this.value});const s=this.node.build(e,t);return e.setContext(n),s}}const xM=Pe(AD),EJ=(i,e)=>xM(i,{label:e});Me("context",xM);Me("label",EJ);class wJ extends bt{static get type(){return"VarNode"}constructor(e,t=null){super(),this.node=e,this.name=t,this.global=!0,this.isVarNode=!0}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}generate(e){const{node:t,name:n}=this,s=e.getVarFromNode(this,n,e.getVectorType(this.getNodeType(e))),r=e.getPropertyName(s),o=t.build(e,s.type);return e.addLineFlowCode(`${r} = ${o}`,this),r}}const CD=Pe(wJ);Me("toVar",(...i)=>CD(...i).append());const AJ=i=>(console.warn('TSL: "temp" is deprecated. Use ".toVar()" instead.'),CD(i));Me("temp",AJ);class CJ extends bt{static get type(){return"VaryingNode"}constructor(e,t=null){super(),this.node=e,this.name=t,this.isVaryingNode=!0}isGlobal(){return!0}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}setupVarying(e){const t=e.getNodeProperties(this);let n=t.varying;if(n===void 0){const s=this.name,r=this.getNodeType(e);t.varying=n=e.getVaryingFromNode(this,s,r),t.node=this.node}return n.needsInterpolation||(n.needsInterpolation=e.shaderStage==="fragment"),n}setup(e){this.setupVarying(e)}analyze(e){return this.setupVarying(e),this.node.analyze(e)}generate(e){const t=e.getNodeProperties(this),n=this.setupVarying(e);if(t.propertyName===void 0){const s=this.getNodeType(e),r=e.getPropertyName(n,ZA.VERTEX);e.flowNodeFromShaderStage(ZA.VERTEX,this.node,s,r),t.propertyName=r}return e.getPropertyName(n)}}const Jo=Pe(CJ);Me("varying",Jo);const RJ=Ze(([i])=>{const e=i.mul(.9478672986).add(.0521327014).pow(2.4),t=i.mul(.0773993808),n=i.lessThanEqual(.04045);return ln(e,t,n)}).setLayout({name:"sRGBTransferEOTF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),NJ=Ze(([i])=>{const e=i.pow(.41666).mul(1.055).sub(.055),t=i.mul(12.92),n=i.lessThanEqual(.0031308);return ln(e,t,n)}).setLayout({name:"sRGBTransferOETF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),Wf="WorkingColorSpace",yM="OutputColorSpace";class R_ extends Gn{static get type(){return"ColorSpaceNode"}constructor(e,t,n){super("vec4"),this.colorNode=e,this.source=t,this.target=n}resolveColorSpace(e,t){return t===Wf?Fn.workingColorSpace:t===yM?e.context.outputColorSpace||e.renderer.outputColorSpace:t}setup(e){const{colorNode:t}=this,n=this.resolveColorSpace(e,this.source),s=this.resolveColorSpace(e,this.target);let r=t;return Fn.enabled===!1||n===s||!n||!s||(Fn.getTransfer(n)===lf&&(r=xt(RJ(r.rgb),r.a)),Fn.getPrimaries(n)!==Fn.getPrimaries(s)&&(r=xt(Bi(Fn._getMatrix(new es,n,s)).mul(r.rgb),r.a)),Fn.getTransfer(s)===lf&&(r=xt(NJ(r.rgb),r.a))),r}}const PJ=i=>Ve(new R_(Ve(i),Wf,yM)),DJ=i=>Ve(new R_(Ve(i),yM,Wf)),LJ=(i,e)=>Ve(new R_(Ve(i),Wf,e)),RD=(i,e)=>Ve(new R_(Ve(i),e,Wf));Me("toOutputColorSpace",PJ);Me("toWorkingColorSpace",DJ);Me("workingToColorSpace",LJ);Me("colorSpaceToWorking",RD);let IJ=class extends Vf{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),n=this.referenceNode.getNodeType(),s=this.getNodeType();return e.format(t,n,s)}};class ND extends bt{static get type(){return"ReferenceBaseNode"}constructor(e,t,n=null,s=null){super(),this.property=e,this.uniformType=t,this.object=n,this.count=s,this.properties=e.split("."),this.reference=n,this.node=null,this.group=null,this.updateType=At.OBJECT}setGroup(e){return this.group=e,this}element(e){return Ve(new IJ(this,Ve(e)))}setNodeType(e){const t=yt(null,e).getSelf();this.group!==null&&t.setGroup(this.group),this.node=t}getNodeType(e){return this.node===null&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let n=e[t[0]];for(let s=1;s<t.length;s++)n=n[t[s]];return n}updateReference(e){return this.reference=this.object!==null?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){this.node===null&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}const FJ=(i,e,t)=>Ve(new ND(i,e,t));class UJ extends ND{static get type(){return"RendererReferenceNode"}constructor(e,t,n=null){super(e,t,n),this.renderer=n,this.setGroup(Ft)}updateReference(e){return this.reference=this.renderer!==null?this.renderer:e.renderer,this.reference}}const OJ=(i,e,t)=>Ve(new UJ(i,e,t));class BJ extends Gn{static get type(){return"ToneMappingNode"}constructor(e,t=zJ,n=null){super("vec3"),this.toneMapping=e,this.exposureNode=t,this.colorNode=n}getCacheKey(){return zg(super.getCacheKey(),this.toneMapping)}setup(e){const t=this.colorNode||e.context.color,n=this.toneMapping;if(n===ku)return t;let s=null;const r=e.renderer.library.getToneMappingFunction(n);return r!==null?s=xt(r(t.rgb,this.exposureNode),t.a):(console.error("ToneMappingNode: Unsupported Tone Mapping configuration.",n),s=t),s}}const kJ=(i,e,t)=>Ve(new BJ(i,Ve(e),Ve(t))),zJ=OJ("toneMappingExposure","float");Me("toneMapping",(i,e,t)=>kJ(e,t,i));class GJ extends lM{static get type(){return"BufferAttributeNode"}constructor(e,t=null,n=0,s=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferStride=n,this.bufferOffset=s,this.usage=kg,this.instanced=!1,this.attribute=null,this.global=!0,e&&e.isBufferAttribute===!0&&(this.attribute=e,this.usage=e.usage,this.instanced=e.isInstancedBufferAttribute)}getHash(e){if(this.bufferStride===0&&this.bufferOffset===0){let t=e.globalCache.getData(this.value);return t===void 0&&(t={node:this},e.globalCache.setData(this.value,t)),t.node.uuid}return this.uuid}getNodeType(e){return this.bufferType===null&&(this.bufferType=e.getTypeFromAttribute(this.attribute)),this.bufferType}setup(e){if(this.attribute!==null)return;const t=this.getNodeType(e),n=this.value,s=e.getTypeLength(t),r=this.bufferStride||s,o=this.bufferOffset,a=n.isInterleavedBuffer===!0?n:new k2(n,r),c=new iM(a,s,o);a.setUsage(this.usage),this.attribute=c,this.attribute.isInstancedBufferAttribute=this.instanced}generate(e){const t=this.getNodeType(e),n=e.getBufferAttributeFromNode(this,t),s=e.getPropertyName(n);let r=null;return e.shaderStage==="vertex"||e.shaderStage==="compute"?(this.name=s,r=s):r=Jo(this).build(e,t),r}getInputType(){return"bufferAttribute"}setUsage(e){return this.usage=e,this.attribute&&this.attribute.isBufferAttribute===!0&&(this.attribute.usage=e),this}setInstanced(e){return this.instanced=e,this}}const SM=(i,e,t,n)=>Ve(new GJ(i,e,t,n)),VJ=(i,e,t,n)=>SM(i,e,t,n).setUsage(bu),o1=(i,e,t,n)=>SM(i,e,t,n).setInstanced(!0),a1=(i,e,t,n)=>VJ(i,e,t,n).setInstanced(!0);Me("toAttribute",i=>SM(i.value));class HJ extends bt{static get type(){return"ComputeNode"}constructor(e,t,n=[64]){super("void"),this.isComputeNode=!0,this.computeNode=e,this.count=t,this.workgroupSize=n,this.dispatchCount=0,this.version=1,this.updateBeforeType=At.OBJECT,this.onInitFunction=null,this.updateDispatchCount()}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}updateDispatchCount(){const{count:e,workgroupSize:t}=this;let n=t[0];for(let s=1;s<t.length;s++)n*=t[s];this.dispatchCount=Math.ceil(e/n)}onInit(e){return this.onInitFunction=e,this}updateBefore({renderer:e}){e.compute(this)}generate(e){const{shaderStage:t}=e;if(t==="compute"){const n=this.computeNode.build(e,"void");n!==""&&e.addLineFlowCode(n,this)}}}const WJ=(i,e,t)=>Ve(new HJ(Ve(i),e,t));Me("compute",WJ);class $J extends bt{static get type(){return"CacheNode"}constructor(e,t=!0){super(),this.node=e,this.parent=t,this.isCacheNode=!0}getNodeType(e){return this.node.getNodeType(e)}build(e,...t){const n=e.getCache(),s=e.getCacheFromNode(this,this.parent);e.setCache(s);const r=this.node.build(e,...t);return e.setCache(n),r}}const Jm=(i,...e)=>Ve(new $J(Ve(i),...e));Me("cache",Jm);class qJ extends bt{static get type(){return"BypassNode"}constructor(e,t){super(),this.isBypassNode=!0,this.outputNode=e,this.callNode=t}getNodeType(e){return this.outputNode.getNodeType(e)}generate(e){const t=this.callNode.build(e,"void");return t!==""&&e.addLineFlowCode(t,this),this.outputNode.build(e)}}const XJ=Pe(qJ);Me("bypass",XJ);class PD extends bt{static get type(){return"RemapNode"}constructor(e,t,n,s=Ae(0),r=Ae(1)){super(),this.node=e,this.inLowNode=t,this.inHighNode=n,this.outLowNode=s,this.outHighNode=r,this.doClamp=!0}setup(){const{node:e,inLowNode:t,inHighNode:n,outLowNode:s,outHighNode:r,doClamp:o}=this;let a=e.sub(t).div(n.sub(t));return o===!0&&(a=a.clamp()),a.mul(r.sub(s)).add(s)}}const jJ=Pe(PD,null,null,{doClamp:!1}),YJ=Pe(PD);Me("remap",jJ);Me("remapClamp",YJ);class ZJ extends bt{static get type(){return"ExpressionNode"}constructor(e="",t="void"){super(t),this.snippet=e}generate(e,t){const n=this.getNodeType(e),s=this.snippet;if(n==="void")e.addLineFlowCode(s,this);else return e.format(`( ${s} )`,n,t)}}const mf=Pe(ZJ),KJ=i=>(i?$i(i,mf("discard")):mf("discard")).append();Me("discard",KJ);class QJ extends Gn{static get type(){return"RenderOutputNode"}constructor(e,t,n){super("vec4"),this.colorNode=e,this.toneMapping=t,this.outputColorSpace=n,this.isRenderOutput=!0}setup({context:e}){let t=this.colorNode||e.color;const n=(this.toneMapping!==null?this.toneMapping:e.toneMapping)||ku,s=(this.outputColorSpace!==null?this.outputColorSpace:e.outputColorSpace)||il;return n!==ku&&(t=t.toneMapping(n)),s!==il&&s!==Fn.workingColorSpace&&(t=t.workingToColorSpace(s)),t}}const JJ=(i,e=null,t=null)=>Ve(new QJ(Ve(i),e,t));Me("renderOutput",JJ);class eee extends bt{static get type(){return"AttributeNode"}constructor(e,t=null){super(t),this.global=!0,this._attributeName=e}getHash(e){return this.getAttributeName(e)}getNodeType(e){let t=this.nodeType;if(t===null){const n=this.getAttributeName(e);if(e.hasGeometryAttribute(n)){const s=e.geometry.getAttribute(n);t=e.getTypeFromAttribute(s)}else t="float"}return t}setAttributeName(e){return this._attributeName=e,this}getAttributeName(){return this._attributeName}generate(e){const t=this.getAttributeName(e),n=this.getNodeType(e);if(e.hasGeometryAttribute(t)===!0){const r=e.geometry.getAttribute(t),o=e.getTypeFromAttribute(r),a=e.getAttribute(t,o);return e.shaderStage==="vertex"?e.format(a.name,o,n):Jo(this).build(e,n)}else return console.warn(`AttributeNode: Vertex attribute "${t}" not found on geometry.`),e.generateConst(n)}serialize(e){super.serialize(e),e.global=this.global,e._attributeName=this._attributeName}deserialize(e){super.deserialize(e),this.global=e.global,this._attributeName=e._attributeName}}const Xo=(i,e)=>Ve(new eee(i,e)),N_=i=>Xo("uv"+(i>0?i:""),"vec2");class tee extends bt{static get type(){return"TextureSizeNode"}constructor(e,t=null){super("uvec2"),this.isTextureSizeNode=!0,this.textureNode=e,this.levelNode=t}generate(e,t){const n=this.textureNode.build(e,"property"),s=this.levelNode===null?"0":this.levelNode.build(e,"int");return e.format(`${e.getMethod("textureDimensions")}( ${n}, ${s} )`,this.getNodeType(e),t)}}const Bd=Pe(tee);class nee extends Hf{static get type(){return"MaxMipLevelNode"}constructor(e){super(0),this._textureNode=e,this.updateType=At.FRAME}get textureNode(){return this._textureNode}get texture(){return this._textureNode.value}update(){const e=this.texture,t=e.images,n=t&&t.length>0?t[0]&&t[0].image||t[0]:e.image;if(n&&n.width!==void 0){const{width:s,height:r}=n;this.value=Math.log2(Math.max(s,r))}}}const iee=Pe(nee);class $f extends Hf{static get type(){return"TextureNode"}constructor(e,t=null,n=null,s=null){super(e),this.isTextureNode=!0,this.uvNode=t,this.levelNode=n,this.biasNode=s,this.compareNode=null,this.depthNode=null,this.gradNode=null,this.sampler=!0,this.updateMatrix=!1,this.updateType=At.NONE,this.referenceNode=null,this._value=e,this._matrixUniform=null,this.setUpdateMatrix(t===null)}set value(e){this.referenceNode?this.referenceNode.value=e:this._value=e}get value(){return this.referenceNode?this.referenceNode.value:this._value}getUniformHash(){return this.value.uuid}getNodeType(){return this.value.isDepthTexture===!0?"float":this.value.type===ri?"uvec4":this.value.type===Ni?"ivec4":"vec4"}getInputType(){return"texture"}getDefaultUV(){return N_(this.value.channel)}updateReference(){return this.value}getTransformedUV(e){return this._matrixUniform===null&&(this._matrixUniform=yt(this.value.matrix)),this._matrixUniform.mul(Te(e,1)).xy}setUpdateMatrix(e){return this.updateMatrix=e,this.updateType=e?At.FRAME:At.NONE,this}setupUV(e,t){const n=this.value;return e.isFlipY()&&(n.isRenderTargetTexture===!0||n.isFramebufferTexture===!0||n.isDepthTexture===!0)&&(this.sampler?t=t.flipY():t=t.setY(Mn(Bd(this,this.levelNode).y).sub(t.y).sub(1))),t}setup(e){const t=e.getNodeProperties(this);t.referenceNode=this.referenceNode;let n=this.uvNode;(n===null||e.context.forceUVContext===!0)&&e.context.getUV&&(n=e.context.getUV(this)),n||(n=this.getDefaultUV()),this.updateMatrix===!0&&(n=this.getTransformedUV(n)),n=this.setupUV(e,n);let s=this.levelNode;s===null&&e.context.getTextureLevel&&(s=e.context.getTextureLevel(this)),t.uvNode=n,t.levelNode=s,t.biasNode=this.biasNode,t.compareNode=this.compareNode,t.gradNode=this.gradNode,t.depthNode=this.depthNode}generateUV(e,t){return t.build(e,this.sampler===!0?"vec2":"ivec2")}generateSnippet(e,t,n,s,r,o,a,c){const l=this.value;let u;return s?u=e.generateTextureLevel(l,t,n,s,o):r?u=e.generateTextureBias(l,t,n,r,o):c?u=e.generateTextureGrad(l,t,n,c,o):a?u=e.generateTextureCompare(l,t,n,a,o):this.sampler===!1?u=e.generateTextureLoad(l,t,n,o):u=e.generateTexture(l,t,n,o),u}generate(e,t){const n=e.getNodeProperties(this),s=this.value;if(!s||s.isTexture!==!0)throw new Error("TextureNode: Need a three.js texture.");const r=super.generate(e,"property");if(t==="sampler")return r+"_sampler";if(e.isReference(t))return r;{const o=e.getDataFromNode(this);let a=o.propertyName;if(a===void 0){const{uvNode:u,levelNode:h,biasNode:d,compareNode:f,depthNode:m,gradNode:_}=n,g=this.generateUV(e,u),p=h?h.build(e,"float"):null,y=d?d.build(e,"float"):null,x=m?m.build(e,"int"):null,v=f?f.build(e,"float"):null,S=_?[_[0].build(e,"vec2"),_[1].build(e,"vec2")]:null,M=e.getVarFromNode(this);a=e.getPropertyName(M);const E=this.generateSnippet(e,r,g,p,y,x,v,S);e.addLineFlowCode(`${a} = ${E}`,this),o.snippet=E,o.propertyName=a}let c=a;const l=this.getNodeType(e);return e.needsToWorkingColorSpace(s)&&(c=RD(mf(c,l),s.colorSpace).setup(e).build(e,l)),e.format(c,l,t)}}setSampler(e){return this.sampler=e,this}getSampler(){return this.sampler}uv(e){const t=this.clone();return t.uvNode=Ve(e),t.referenceNode=this.getSelf(),Ve(t)}blur(e){const t=this.clone();return t.biasNode=Ve(e).mul(iee(t)),t.referenceNode=this.getSelf(),Ve(t)}level(e){const t=this.clone();return t.levelNode=Ve(e),t.referenceNode=this.getSelf(),Ve(t)}size(e){return Bd(this,e)}bias(e){const t=this.clone();return t.biasNode=Ve(e),t.referenceNode=this.getSelf(),Ve(t)}compare(e){const t=this.clone();return t.compareNode=Ve(e),t.referenceNode=this.getSelf(),Ve(t)}grad(e,t){const n=this.clone();return n.gradNode=[Ve(e),Ve(t)],n.referenceNode=this.getSelf(),Ve(n)}depth(e){const t=this.clone();return t.depthNode=Ve(e),t.referenceNode=this.getSelf(),Ve(t)}serialize(e){super.serialize(e),e.value=this.value.toJSON(e.meta).uuid,e.sampler=this.sampler,e.updateMatrix=this.updateMatrix,e.updateType=this.updateType}deserialize(e){super.deserialize(e),this.value=e.meta.textures[e.value],this.sampler=e.sampler,this.updateMatrix=e.updateMatrix,this.updateType=e.updateType}update(){const e=this.value,t=this._matrixUniform;t!==null&&(t.value=e.matrix),e.matrixAutoUpdate===!0&&e.updateMatrix()}clone(){const e=new this.constructor(this.value,this.uvNode,this.levelNode,this.biasNode);return e.sampler=this.sampler,e}}const Tn=Pe($f),js=(...i)=>Tn(...i).setSampler(!1),Rc=yt("float").label("cameraNear").setGroup(Ft).onRenderUpdate(({camera:i})=>i.near),Nc=yt("float").label("cameraFar").setGroup(Ft).onRenderUpdate(({camera:i})=>i.far),jg=yt("mat4").label("cameraProjectionMatrix").setGroup(Ft).onRenderUpdate(({camera:i})=>i.projectionMatrix),ea=yt("mat4").label("cameraViewMatrix").setGroup(Ft).onRenderUpdate(({camera:i})=>i.matrixWorldInverse),see=yt(new fe).label("cameraPosition").setGroup(Ft).onRenderUpdate(({camera:i},e)=>e.value.setFromMatrixPosition(i.matrixWorld));class Ht extends bt{static get type(){return"Object3DNode"}constructor(e,t=null){super(),this.scope=e,this.object3d=t,this.updateType=At.OBJECT,this._uniformNode=new Hf(null)}getNodeType(){const e=this.scope;if(e===Ht.WORLD_MATRIX)return"mat4";if(e===Ht.POSITION||e===Ht.VIEW_POSITION||e===Ht.DIRECTION||e===Ht.SCALE)return"vec3"}update(e){const t=this.object3d,n=this._uniformNode,s=this.scope;if(s===Ht.WORLD_MATRIX)n.value=t.matrixWorld;else if(s===Ht.POSITION)n.value=n.value||new fe,n.value.setFromMatrixPosition(t.matrixWorld);else if(s===Ht.SCALE)n.value=n.value||new fe,n.value.setFromMatrixScale(t.matrixWorld);else if(s===Ht.DIRECTION)n.value=n.value||new fe,t.getWorldDirection(n.value);else if(s===Ht.VIEW_POSITION){const r=e.camera;n.value=n.value||new fe,n.value.setFromMatrixPosition(t.matrixWorld),n.value.applyMatrix4(r.matrixWorldInverse)}}generate(e){const t=this.scope;return t===Ht.WORLD_MATRIX?this._uniformNode.nodeType="mat4":(t===Ht.POSITION||t===Ht.VIEW_POSITION||t===Ht.DIRECTION||t===Ht.SCALE)&&(this._uniformNode.nodeType="vec3"),this._uniformNode.build(e)}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}Ht.WORLD_MATRIX="worldMatrix";Ht.POSITION="position";Ht.SCALE="scale";Ht.VIEW_POSITION="viewPosition";Ht.DIRECTION="direction";Ht.DIRECTION;Ht.WORLD_MATRIX;Ht.POSITION;Ht.SCALE;Ht.VIEW_POSITION;class Or extends Ht{static get type(){return"ModelNode"}constructor(e){super(e)}update(e){this.object3d=e.object,super.update(e)}}Or.DIRECTION;const al=We(Or,Or.WORLD_MATRIX);Or.POSITION;Or.SCALE;Or.VIEW_POSITION;const ree=yt(new es).onObjectUpdate(({object:i},e)=>e.value.getNormalMatrix(i.matrixWorld)),P_=ea.mul(al).toVar("modelViewMatrix"),DD=Xo("position","vec3"),ui=DD.varying("positionLocal"),c1=DD.varying("positionPrevious"),pS=al.mul(ui).xyz.varying("v_positionWorld"),LD=ui.transformDirection(al).varying("v_positionWorldDirection").normalize().toVar("positionWorldDirection"),ai=P_.mul(ui).xyz.varying("v_positionView"),yn=ai.negate().varying("v_positionViewDirection").normalize().toVar("positionViewDirection");class oee extends bt{static get type(){return"FrontFacingNode"}constructor(){super("bool"),this.isFrontFacingNode=!0}generate(e){const{renderer:t,material:n}=e;return t.coordinateSystem===ar&&n.side===pr?"false":e.getFrontFacing()}}const aee=We(oee),D_=Ae(aee).mul(2).sub(1),ID=Xo("normal","vec3"),Br=Ze(i=>i.geometry.hasAttribute("normal")===!1?(console.warn('TSL.NormalNode: Vertex attribute "normal" not found on geometry.'),Te(0,1,0)):ID,"vec3").once()().toVar("normalLocal"),cee=ai.dFdx().cross(ai.dFdy()).normalize().toVar("normalFlat"),gr=Ze(i=>{let e;return i.material.flatShading===!0?e=cee:e=Jo(UD(Br),"v_normalView").normalize(),e},"vec3").once()().toVar("normalView"),FD=Jo(gr.transformDirection(ea),"v_normalWorld").normalize().toVar("normalWorld"),On=Ze(i=>i.context.setupNormal(),"vec3").once()().mul(D_).toVar("transformedNormalView"),bM=On.transformDirection(ea).toVar("transformedNormalWorld"),Td=Ze(i=>i.context.setupClearcoatNormal(),"vec3").once()().mul(D_).toVar("transformedClearcoatNormalView"),lee=Ze(([i,e=al])=>{const t=Bi(e),n=i.div(Te(t[0].dot(t[0]),t[1].dot(t[1]),t[2].dot(t[2])));return t.mul(n).xyz}),UD=Ze(([i],e)=>{const t=e.renderer.nodes.modelNormalViewMatrix;if(t!==null)return t.transformDirection(i);const n=ree.mul(i);return ea.transformDirection(n)}),uee=yt(0).onReference(({material:i})=>i).onRenderUpdate(({material:i})=>i.refractionRatio),hee=yn.negate().reflect(On),dee=yn.negate().refract(On,uee),fee=hee.transformDirection(ea).toVar("reflectVector"),pee=dee.transformDirection(ea).toVar("reflectVector");class mee extends $f{static get type(){return"CubeTextureNode"}constructor(e,t=null,n=null,s=null){super(e,t,n,s),this.isCubeTextureNode=!0}getInputType(){return"cubeTexture"}getDefaultUV(){const e=this.value;return e.mapping===nl?fee:e.mapping===uh?pee:(console.error('THREE.CubeTextureNode: Mapping "%s" not supported.',e.mapping),Te(0,0,0))}setUpdateMatrix(){}setupUV(e,t){const n=this.value;return e.renderer.coordinateSystem===sl||!n.isRenderTargetTexture?Te(t.x.negate(),t.yz):t}generateUV(e,t){return t.build(e,"vec3")}}const gf=Pe(mee);class OD extends Hf{static get type(){return"BufferNode"}constructor(e,t,n=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferCount=n}getElementType(e){return this.getNodeType(e)}getInputType(){return"buffer"}}const MM=(i,e,t)=>Ve(new OD(i,e,t));class gee extends Vf{static get type(){return"UniformArrayElementNode"}constructor(e,t){super(e,t),this.isArrayBufferElementNode=!0}generate(e){const t=super.generate(e),n=this.getNodeType();return e.format(t,"vec4",n)}}class _ee extends OD{static get type(){return"UniformArrayNode"}constructor(e,t=null){super(null,"vec4"),this.array=e,this.elementType=t,this._elementType=null,this._elementLength=0,this.updateType=At.RENDER,this.isArrayBufferNode=!0}getElementType(){return this.elementType||this._elementType}getElementLength(){return this._elementLength}update(){const{array:e,value:t}=this,n=this.getElementLength(),s=this.getElementType();if(n===1)for(let r=0;r<e.length;r++){const o=r*4;t[o]=e[r]}else if(s==="color")for(let r=0;r<e.length;r++){const o=r*4,a=e[r];t[o]=a.r,t[o+1]=a.g,t[o+2]=a.b||0}else for(let r=0;r<e.length;r++){const o=r*4,a=e[r];t[o]=a.x,t[o+1]=a.y,t[o+2]=a.z||0,t[o+3]=a.w||0}}setup(e){const t=this.array.length;this._elementType=this.elementType===null?Vg(this.array[0]):this.elementType,this._elementLength=e.getTypeLength(this._elementType);let n=Float32Array;return this._elementType.charAt(0)==="i"?n=Int32Array:this._elementType.charAt(0)==="u"&&(n=Uint32Array),this.value=new n(t*4),this.bufferCount=t,this.bufferType=e.changeComponentType("vec4",e.getComponentType(this._elementType)),super.setup(e)}element(e){return Ve(new gee(this,Ve(e)))}}const _f=(i,e)=>Ve(new _ee(i,e));class vee extends Vf{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),n=this.referenceNode.getNodeType(),s=this.getNodeType();return e.format(t,n,s)}}class TM extends bt{static get type(){return"ReferenceNode"}constructor(e,t,n=null,s=null){super(),this.property=e,this.uniformType=t,this.object=n,this.count=s,this.properties=e.split("."),this.reference=n,this.node=null,this.group=null,this.name=null,this.updateType=At.OBJECT}element(e){return Ve(new vee(this,Ve(e)))}setGroup(e){return this.group=e,this}label(e){return this.name=e,this}setNodeType(e){let t=null;this.count!==null?t=MM(null,e,this.count):Array.isArray(this.getValueFromReference())?t=_f(null,e):e==="texture"?t=Tn(null):e==="cubeTexture"?t=gf(null):t=yt(null,e),this.group!==null&&t.setGroup(this.group),this.name!==null&&t.label(this.name),this.node=t.getSelf()}getNodeType(e){return this.node===null&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let n=e[t[0]];for(let s=1;s<t.length;s++)n=n[t[s]];return n}updateReference(e){return this.reference=this.object!==null?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){this.node===null&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}const Sn=(i,e,t)=>Ve(new TM(i,e,t)),l1=(i,e,t,n)=>Ve(new TM(i,e,n,t));class xee extends TM{static get type(){return"MaterialReferenceNode"}constructor(e,t,n=null){super(e,t,n),this.material=n,this.isMaterialReferenceNode=!0}updateReference(e){return this.reference=this.material!==null?this.material:e.material,this.reference}}const Ra=(i,e,t)=>Ve(new xee(i,e,t)),BD=Ze(i=>(i.geometry.hasAttribute("tangent")===!1&&i.geometry.computeTangents(),Xo("tangent","vec4")))(),EM=BD.xyz.toVar("tangentLocal"),kD=P_.mul(xt(EM,0)).xyz.varying("v_tangentView").normalize().toVar("tangentView"),yee=i=>i.mul(BD.w).xyz,See=Jo(yee(gr.cross(kD)),"v_bitangentView").normalize().toVar("bitangentView"),Ed=Bi(kD,See,gr),bee=(()=>{let i=Wu.cross(yn);return i=i.cross(Wu).normalize(),i=ln(i,On,bc.mul(Co.oneMinus()).oneMinus().pow2().pow2()).normalize(),i})(),Mee=Ze(i=>{const{eye_pos:e,surf_norm:t,mapN:n,uv:s}=i,r=e.dFdx(),o=e.dFdy(),a=s.dFdx(),c=s.dFdy(),l=t,u=o.cross(l),h=l.cross(r),d=u.mul(a.x).add(h.mul(c.x)),f=u.mul(a.y).add(h.mul(c.y)),m=d.dot(d).max(f.dot(f)),_=D_.mul(m.inverseSqrt());return ki(d.mul(n.x,_),f.mul(n.y,_),l.mul(n.z)).normalize()});class Tee extends Gn{static get type(){return"NormalMapNode"}constructor(e,t=null){super("vec3"),this.node=e,this.scaleNode=t,this.normalMapType=$a}setup(e){const{normalMapType:t,scaleNode:n}=this;let s=this.node.mul(2).sub(1);n!==null&&(s=Te(s.xy.mul(n),s.z));let r=null;return t===vZ?r=UD(s):t===$a&&(e.hasGeometryAttribute("tangent")===!0?r=Ed.mul(s).normalize():r=Mee({eye_pos:ai,surf_norm:gr,mapN:s,uv:N_()})),r}}const u1=Pe(Tee),Eee=Ze(({textureNode:i,bumpScale:e})=>{const t=s=>i.cache().context({getUV:r=>s(r.uvNode||N_()),forceUVContext:!0}),n=Ae(t(s=>s));return Je(Ae(t(s=>s.add(s.dFdx()))).sub(n),Ae(t(s=>s.add(s.dFdy()))).sub(n)).mul(e)}),wee=Ze(i=>{const{surf_pos:e,surf_norm:t,dHdxy:n}=i,s=e.dFdx().normalize(),r=e.dFdy().normalize(),o=t,a=r.cross(o),c=o.cross(s),l=s.dot(a).mul(D_),u=l.sign().mul(n.x.mul(a).add(n.y.mul(c)));return l.abs().mul(t).sub(u).normalize()});class Aee extends Gn{static get type(){return"BumpMapNode"}constructor(e,t=null){super("vec3"),this.textureNode=e,this.scaleNode=t}setup(){const e=this.scaleNode!==null?this.scaleNode:1,t=Eee({textureNode:this.textureNode,bumpScale:e});return wee({surf_pos:ai,surf_norm:gr,dHdxy:t})}}const Cee=Pe(Aee),h1=new Map;class ve extends bt{static get type(){return"MaterialNode"}constructor(e){super(),this.scope=e}getCache(e,t){let n=h1.get(e);return n===void 0&&(n=Ra(e,t),h1.set(e,n)),n}getFloat(e){return this.getCache(e,"float")}getColor(e){return this.getCache(e,"color")}getTexture(e){return this.getCache(e==="map"?"map":e+"Map","texture")}setup(e){const t=e.context.material,n=this.scope;let s=null;if(n===ve.COLOR){const r=t.color!==void 0?this.getColor(n):Te();t.map&&t.map.isTexture===!0?s=r.mul(this.getTexture("map")):s=r}else if(n===ve.OPACITY){const r=this.getFloat(n);t.alphaMap&&t.alphaMap.isTexture===!0?s=r.mul(this.getTexture("alpha")):s=r}else if(n===ve.SPECULAR_STRENGTH)t.specularMap&&t.specularMap.isTexture===!0?s=this.getTexture("specular").r:s=Ae(1);else if(n===ve.SPECULAR_INTENSITY){const r=this.getFloat(n);t.specularMap?s=r.mul(this.getTexture(n).a):s=r}else if(n===ve.SPECULAR_COLOR){const r=this.getColor(n);t.specularColorMap&&t.specularColorMap.isTexture===!0?s=r.mul(this.getTexture(n).rgb):s=r}else if(n===ve.ROUGHNESS){const r=this.getFloat(n);t.roughnessMap&&t.roughnessMap.isTexture===!0?s=r.mul(this.getTexture(n).g):s=r}else if(n===ve.METALNESS){const r=this.getFloat(n);t.metalnessMap&&t.metalnessMap.isTexture===!0?s=r.mul(this.getTexture(n).b):s=r}else if(n===ve.EMISSIVE){const r=this.getFloat("emissiveIntensity"),o=this.getColor(n).mul(r);t.emissiveMap&&t.emissiveMap.isTexture===!0?s=o.mul(this.getTexture(n)):s=o}else if(n===ve.NORMAL)t.normalMap?(s=u1(this.getTexture("normal"),this.getCache("normalScale","vec2")),s.normalMapType=t.normalMapType):t.bumpMap?s=Cee(this.getTexture("bump").r,this.getFloat("bumpScale")):s=gr;else if(n===ve.CLEARCOAT){const r=this.getFloat(n);t.clearcoatMap&&t.clearcoatMap.isTexture===!0?s=r.mul(this.getTexture(n).r):s=r}else if(n===ve.CLEARCOAT_ROUGHNESS){const r=this.getFloat(n);t.clearcoatRoughnessMap&&t.clearcoatRoughnessMap.isTexture===!0?s=r.mul(this.getTexture(n).r):s=r}else if(n===ve.CLEARCOAT_NORMAL)t.clearcoatNormalMap?s=u1(this.getTexture(n),this.getCache(n+"Scale","vec2")):s=gr;else if(n===ve.SHEEN){const r=this.getColor("sheenColor").mul(this.getFloat("sheen"));t.sheenColorMap&&t.sheenColorMap.isTexture===!0?s=r.mul(this.getTexture("sheenColor").rgb):s=r}else if(n===ve.SHEEN_ROUGHNESS){const r=this.getFloat(n);t.sheenRoughnessMap&&t.sheenRoughnessMap.isTexture===!0?s=r.mul(this.getTexture(n).a):s=r,s=s.clamp(.07,1)}else if(n===ve.ANISOTROPY)if(t.anisotropyMap&&t.anisotropyMap.isTexture===!0){const r=this.getTexture(n);s=fM(ld.x,ld.y,ld.y.negate(),ld.x).mul(r.rg.mul(2).sub(Je(1)).normalize().mul(r.b))}else s=ld;else if(n===ve.IRIDESCENCE_THICKNESS){const r=Sn("1","float",t.iridescenceThicknessRange);if(t.iridescenceThicknessMap){const o=Sn("0","float",t.iridescenceThicknessRange);s=r.sub(o).mul(this.getTexture(n).g).add(o)}else s=r}else if(n===ve.TRANSMISSION){const r=this.getFloat(n);t.transmissionMap?s=r.mul(this.getTexture(n).r):s=r}else if(n===ve.THICKNESS){const r=this.getFloat(n);t.thicknessMap?s=r.mul(this.getTexture(n).g):s=r}else if(n===ve.IOR)s=this.getFloat(n);else if(n===ve.LIGHT_MAP)s=this.getTexture(n).rgb.mul(this.getFloat("lightMapIntensity"));else if(n===ve.AO_MAP)s=this.getTexture(n).r.sub(1).mul(this.getFloat("aoMapIntensity")).add(1);else{const r=this.getNodeType(e);s=this.getCache(n,r)}return s}}ve.ALPHA_TEST="alphaTest";ve.COLOR="color";ve.OPACITY="opacity";ve.SHININESS="shininess";ve.SPECULAR="specular";ve.SPECULAR_STRENGTH="specularStrength";ve.SPECULAR_INTENSITY="specularIntensity";ve.SPECULAR_COLOR="specularColor";ve.REFLECTIVITY="reflectivity";ve.ROUGHNESS="roughness";ve.METALNESS="metalness";ve.NORMAL="normal";ve.CLEARCOAT="clearcoat";ve.CLEARCOAT_ROUGHNESS="clearcoatRoughness";ve.CLEARCOAT_NORMAL="clearcoatNormal";ve.EMISSIVE="emissive";ve.ROTATION="rotation";ve.SHEEN="sheen";ve.SHEEN_ROUGHNESS="sheenRoughness";ve.ANISOTROPY="anisotropy";ve.IRIDESCENCE="iridescence";ve.IRIDESCENCE_IOR="iridescenceIOR";ve.IRIDESCENCE_THICKNESS="iridescenceThickness";ve.IOR="ior";ve.TRANSMISSION="transmission";ve.THICKNESS="thickness";ve.ATTENUATION_DISTANCE="attenuationDistance";ve.ATTENUATION_COLOR="attenuationColor";ve.LINE_SCALE="scale";ve.LINE_DASH_SIZE="dashSize";ve.LINE_GAP_SIZE="gapSize";ve.LINE_WIDTH="linewidth";ve.LINE_DASH_OFFSET="dashOffset";ve.POINT_WIDTH="pointWidth";ve.DISPERSION="dispersion";ve.LIGHT_MAP="light";ve.AO_MAP="ao";const Ree=We(ve,ve.ALPHA_TEST),Nee=We(ve,ve.COLOR),Pee=We(ve,ve.SHININESS),Dee=We(ve,ve.EMISSIVE),zD=We(ve,ve.OPACITY),Lee=We(ve,ve.SPECULAR),d1=We(ve,ve.SPECULAR_INTENSITY),Iee=We(ve,ve.SPECULAR_COLOR),eg=We(ve,ve.SPECULAR_STRENGTH),Pv=We(ve,ve.REFLECTIVITY),Fee=We(ve,ve.ROUGHNESS),Uee=We(ve,ve.METALNESS),Oee=We(ve,ve.NORMAL).context({getUV:null}),Bee=We(ve,ve.CLEARCOAT),kee=We(ve,ve.CLEARCOAT_ROUGHNESS),zee=We(ve,ve.CLEARCOAT_NORMAL).context({getUV:null}),Gee=We(ve,ve.ROTATION),Vee=We(ve,ve.SHEEN),Hee=We(ve,ve.SHEEN_ROUGHNESS),Wee=We(ve,ve.ANISOTROPY),$ee=We(ve,ve.IRIDESCENCE),qee=We(ve,ve.IRIDESCENCE_IOR),Xee=We(ve,ve.IRIDESCENCE_THICKNESS),jee=We(ve,ve.TRANSMISSION),Yee=We(ve,ve.THICKNESS),Zee=We(ve,ve.IOR),Kee=We(ve,ve.ATTENUATION_DISTANCE),Qee=We(ve,ve.ATTENUATION_COLOR),Jee=We(ve,ve.LINE_SCALE),ete=We(ve,ve.LINE_DASH_SIZE),tte=We(ve,ve.LINE_GAP_SIZE);ve.LINE_WIDTH;ve.LINE_DASH_OFFSET;ve.POINT_WIDTH;const nte=We(ve,ve.DISPERSION),GD=We(ve,ve.LIGHT_MAP),ite=We(ve,ve.AO_MAP),ld=yt(new Bt).onReference(function(i){return i.material}).onRenderUpdate(function({material:i}){this.value.set(i.anisotropy*Math.cos(i.anisotropyRotation),i.anisotropy*Math.sin(i.anisotropyRotation))});class ste extends Gn{static get type(){return"ModelViewProjectionNode"}constructor(e=null){super("vec4"),this.positionNode=e}setup(e){if(e.shaderStage==="fragment")return Jo(e.context.mvp);const t=this.positionNode||ui,n=e.renderer.nodes.modelViewMatrix||P_;return jg.mul(n).mul(t)}}const mS=Pe(ste);class un extends bt{static get type(){return"IndexNode"}constructor(e){super("uint"),this.scope=e,this.isInstanceIndexNode=!0}generate(e){const t=this.getNodeType(e),n=this.scope;let s;if(n===un.VERTEX)s=e.getVertexIndex();else if(n===un.INSTANCE)s=e.getInstanceIndex();else if(n===un.DRAW)s=e.getDrawIndex();else if(n===un.INVOCATION_LOCAL)s=e.getInvocationLocalIndex();else if(n===un.INVOCATION_SUBGROUP)s=e.getInvocationSubgroupIndex();else if(n===un.SUBGROUP)s=e.getSubgroupIndex();else throw new Error("THREE.IndexNode: Unknown scope: "+n);let r;return e.shaderStage==="vertex"||e.shaderStage==="compute"?r=s:r=Jo(this).build(e,t),r}}un.VERTEX="vertex";un.INSTANCE="instance";un.SUBGROUP="subgroup";un.INVOCATION_LOCAL="invocationLocal";un.INVOCATION_SUBGROUP="invocationSubgroup";un.DRAW="draw";const rte=We(un,un.VERTEX),wM=We(un,un.INSTANCE);un.SUBGROUP;un.INVOCATION_SUBGROUP;un.INVOCATION_LOCAL;const ote=We(un,un.DRAW);class ate extends bt{static get type(){return"InstanceNode"}constructor(e){super("void"),this.instanceMesh=e,this.instanceMatrixNode=null,this.instanceColorNode=null,this.updateType=At.FRAME,this.buffer=null,this.bufferColor=null}setup(e){let t=this.instanceMatrixNode,n=this.instanceColorNode;const s=this.instanceMesh;if(t===null){const a=s.instanceMatrix;if(s.count<=1e3)t=MM(a.array,"mat4",Math.max(s.count,1)).element(wM);else{const c=new OK(a.array,16,1);this.buffer=c;const l=a.usage===bu?a1:o1,u=[l(c,"vec4",16,0),l(c,"vec4",16,4),l(c,"vec4",16,8),l(c,"vec4",16,12)];t=Hu(...u)}this.instanceMatrixNode=t}const r=s.instanceColor;if(r&&n===null){const a=new MK(r.array,3),c=r.usage===bu?a1:o1;this.bufferColor=a,n=Te(c(a,"vec3",3,0)),this.instanceColorNode=n}const o=t.mul(ui).xyz;if(ui.assign(o),e.hasGeometryAttribute("normal")){const a=lee(Br,t);Br.assign(a)}this.instanceColorNode!==null&&Wg("vec3","vInstanceColor").assign(this.instanceColorNode)}update(){this.instanceMesh.instanceMatrix.usage!==bu&&this.buffer!=null&&this.instanceMesh.instanceMatrix.version!==this.buffer.version&&(this.buffer.version=this.instanceMesh.instanceMatrix.version),this.instanceMesh.instanceColor&&this.instanceMesh.instanceColor.usage!==bu&&this.bufferColor!=null&&this.instanceMesh.instanceColor.version!==this.bufferColor.version&&(this.bufferColor.version=this.instanceMesh.instanceColor.version)}}const cte=Pe(ate);class lte extends bt{static get type(){return"BatchNode"}constructor(e){super("void"),this.batchMesh=e,this.batchingIdNode=null}setup(e){this.batchingIdNode===null&&(e.getDrawIndex()===null?this.batchingIdNode=wM:this.batchingIdNode=ote);const n=Ze(([m])=>{const _=Bd(js(this.batchMesh._indirectTexture),0),g=Mn(m).modInt(Mn(_)),p=Mn(m).div(Mn(_));return js(this.batchMesh._indirectTexture,bo(g,p)).x}).setLayout({name:"getIndirectIndex",type:"uint",inputs:[{name:"id",type:"int"}]})(Mn(this.batchingIdNode)),s=this.batchMesh._matricesTexture,r=Bd(js(s),0),o=Ae(n).mul(4).toInt().toVar(),a=o.modInt(r),c=o.div(Mn(r)),l=Hu(js(s,bo(a,c)),js(s,bo(a.add(1),c)),js(s,bo(a.add(2),c)),js(s,bo(a.add(3),c))),u=this.batchMesh._colorsTexture;if(u!==null){const _=Ze(([g])=>{const p=Bd(js(u),0).x,y=g,x=y.modInt(p),v=y.div(p);return js(u,bo(x,v)).rgb}).setLayout({name:"getBatchingColor",type:"vec3",inputs:[{name:"id",type:"int"}]})(n);Wg("vec3","vBatchColor").assign(_)}const h=Bi(l);ui.assign(l.mul(ui));const d=Br.div(Te(h[0].dot(h[0]),h[1].dot(h[1]),h[2].dot(h[2]))),f=h.mul(d).xyz;Br.assign(f),e.hasGeometryAttribute("tangent")&&EM.mulAssign(h)}}const ute=Pe(lte),f1=new WeakMap;class hte extends bt{static get type(){return"SkinningNode"}constructor(e,t=!1){super("void"),this.skinnedMesh=e,this.useReference=t,this.updateType=At.OBJECT,this.skinIndexNode=Xo("skinIndex","uvec4"),this.skinWeightNode=Xo("skinWeight","vec4");let n,s,r;t?(n=Sn("bindMatrix","mat4"),s=Sn("bindMatrixInverse","mat4"),r=l1("skeleton.boneMatrices","mat4",e.skeleton.bones.length)):(n=yt(e.bindMatrix,"mat4"),s=yt(e.bindMatrixInverse,"mat4"),r=MM(e.skeleton.boneMatrices,"mat4",e.skeleton.bones.length)),this.bindMatrixNode=n,this.bindMatrixInverseNode=s,this.boneMatricesNode=r,this.previousBoneMatricesNode=null}getSkinnedPosition(e=this.boneMatricesNode,t=ui){const{skinIndexNode:n,skinWeightNode:s,bindMatrixNode:r,bindMatrixInverseNode:o}=this,a=e.element(n.x),c=e.element(n.y),l=e.element(n.z),u=e.element(n.w),h=r.mul(t),d=ki(a.mul(s.x).mul(h),c.mul(s.y).mul(h),l.mul(s.z).mul(h),u.mul(s.w).mul(h));return o.mul(d).xyz}getSkinnedNormal(e=this.boneMatricesNode,t=Br){const{skinIndexNode:n,skinWeightNode:s,bindMatrixNode:r,bindMatrixInverseNode:o}=this,a=e.element(n.x),c=e.element(n.y),l=e.element(n.z),u=e.element(n.w);let h=ki(s.x.mul(a),s.y.mul(c),s.z.mul(l),s.w.mul(u));return h=o.mul(h).mul(r),h.transformDirection(t).xyz}getPreviousSkinnedPosition(e){const t=e.object;return this.previousBoneMatricesNode===null&&(t.skeleton.previousBoneMatrices=new Float32Array(t.skeleton.boneMatrices),this.previousBoneMatricesNode=l1("skeleton.previousBoneMatrices","mat4",t.skeleton.bones.length)),this.getSkinnedPosition(this.previousBoneMatricesNode,c1)}needsPreviousBoneMatrices(e){const t=e.renderer.getMRT();return t&&t.has("velocity")}setup(e){this.needsPreviousBoneMatrices(e)&&c1.assign(this.getPreviousSkinnedPosition(e));const t=this.getSkinnedPosition();if(ui.assign(t),e.hasGeometryAttribute("normal")){const n=this.getSkinnedNormal();Br.assign(n),e.hasGeometryAttribute("tangent")&&EM.assign(n)}}generate(e,t){if(t!=="void")return ui.build(e,t)}update(e){const n=(this.useReference?e.object:this.skinnedMesh).skeleton;f1.get(n)!==e.frameId&&(f1.set(n,e.frameId),this.previousBoneMatricesNode!==null&&n.previousBoneMatrices.set(n.boneMatrices),n.update())}}const dte=i=>Ve(new hte(i,!0));class fte extends bt{static get type(){return"LoopNode"}constructor(e=[]){super(),this.params=e}getVarName(e){return String.fromCharCode("i".charCodeAt()+e)}getProperties(e){const t=e.getNodeProperties(this);if(t.stackNode!==void 0)return t;const n={};for(let r=0,o=this.params.length-1;r<o;r++){const a=this.params[r],c=a.isNode!==!0&&a.name||this.getVarName(r),l=a.isNode!==!0&&a.type||"int";n[c]=mf(c,l)}const s=e.addStack();return t.returnsNode=this.params[this.params.length-1](n,s,e),t.stackNode=s,e.removeStack(),t}getNodeType(e){const{returnsNode:t}=this.getProperties(e);return t?t.getNodeType(e):"void"}setup(e){this.getProperties(e)}generate(e){const t=this.getProperties(e),n=this.params,s=t.stackNode;for(let a=0,c=n.length-1;a<c;a++){const l=n[a];let u=null,h=null,d=null,f=null,m=null,_=null;l.isNode?(f="int",d=this.getVarName(a),u="0",h=l.build(e,f),m="<"):(f=l.type||"int",d=l.name||this.getVarName(a),u=l.start,h=l.end,m=l.condition,_=l.update,typeof u=="number"?u=e.generateConst(f,u):u&&u.isNode&&(u=u.build(e,f)),typeof h=="number"?h=e.generateConst(f,h):h&&h.isNode&&(h=h.build(e,f)),u!==void 0&&h===void 0?(u=u+" - 1",h="0",m=">="):h!==void 0&&u===void 0&&(u="0",m="<"),m===void 0&&(Number(u)>Number(h)?m=">=":m="<"));const g={start:u,end:h,condition:m},p=g.start,y=g.end;let x="",v="",S="";_||(f==="int"||f==="uint"?m.includes("<")?_="++":_="--":m.includes("<")?_="+= 1.":_="-= 1."),x+=e.getVar(f,d)+" = "+p,v+=d+" "+m+" "+y,S+=d+" "+_;const M=`for ( ${x}; ${v}; ${S} )`;e.addFlowCode((a===0?`
`:"")+e.tab+M+` {

`).addFlowTab()}const r=s.build(e,"void"),o=t.returnsNode?t.returnsNode.build(e):"";e.removeFlowTab().addFlowCode(`
`+e.tab+r);for(let a=0,c=this.params.length-1;a<c;a++)e.addFlowCode((a===0?"":e.tab)+`}

`).removeFlowTab();return e.addFlowTab(),o}}const Rr=(...i)=>Ve(new fte(Vu(i,"int"))).append(),pte=()=>mf("break").append(),Dv=new WeakMap,hs=new Yt,p1=Ze(({bufferMap:i,influence:e,stride:t,width:n,depth:s,offset:r})=>{const o=Mn(rte).mul(t).add(r),a=o.div(n),c=o.sub(a.mul(n));return js(i,bo(c,a)).depth(s).mul(e)});function mte(i){const e=i.morphAttributes.position!==void 0,t=i.morphAttributes.normal!==void 0,n=i.morphAttributes.color!==void 0,s=i.morphAttributes.position||i.morphAttributes.normal||i.morphAttributes.color,r=s!==void 0?s.length:0;let o=Dv.get(i);if(o===void 0||o.count!==r){let y=function(){g.dispose(),Dv.delete(i),i.removeEventListener("dispose",y)};var a=y;o!==void 0&&o.texture.dispose();const c=i.morphAttributes.position||[],l=i.morphAttributes.normal||[],u=i.morphAttributes.color||[];let h=0;e===!0&&(h=1),t===!0&&(h=2),n===!0&&(h=3);let d=i.attributes.position.count*h,f=1;const m=4096;d>m&&(f=Math.ceil(d/m),d=m);const _=new Float32Array(d*f*4*r),g=new iK(_,d,f,r);g.type=gs,g.needsUpdate=!0;const p=h*4;for(let x=0;x<r;x++){const v=c[x],S=l[x],M=u[x],E=d*f*4*x;for(let w=0;w<v.count;w++){const b=w*p;e===!0&&(hs.fromBufferAttribute(v,w),_[E+b+0]=hs.x,_[E+b+1]=hs.y,_[E+b+2]=hs.z,_[E+b+3]=0),t===!0&&(hs.fromBufferAttribute(S,w),_[E+b+4]=hs.x,_[E+b+5]=hs.y,_[E+b+6]=hs.z,_[E+b+7]=0),n===!0&&(hs.fromBufferAttribute(M,w),_[E+b+8]=hs.x,_[E+b+9]=hs.y,_[E+b+10]=hs.z,_[E+b+11]=M.itemSize===4?hs.w:1)}}o={count:r,texture:g,stride:h,size:new Bt(d,f)},Dv.set(i,o),i.addEventListener("dispose",y)}return o}class gte extends bt{static get type(){return"MorphNode"}constructor(e){super("void"),this.mesh=e,this.morphBaseInfluence=yt(1),this.updateType=At.OBJECT}setup(e){const{geometry:t}=e,n=t.morphAttributes.position!==void 0,s=t.hasAttribute("normal")&&t.morphAttributes.normal!==void 0,r=t.morphAttributes.position||t.morphAttributes.normal||t.morphAttributes.color,o=r!==void 0?r.length:0,{texture:a,stride:c,size:l}=mte(t);n===!0&&ui.mulAssign(this.morphBaseInfluence),s===!0&&Br.mulAssign(this.morphBaseInfluence);const u=Mn(l.width);Rr(o,({i:h})=>{const d=Ae(0).toVar();this.mesh.count>1&&this.mesh.morphTexture!==null&&this.mesh.morphTexture!==void 0?d.assign(js(this.mesh.morphTexture,bo(Mn(h).add(1),Mn(wM))).r):d.assign(Sn("morphTargetInfluences","float").element(h).toVar()),n===!0&&ui.addAssign(p1({bufferMap:a,influence:d,stride:c,width:u,depth:h,offset:Mn(0)})),s===!0&&Br.addAssign(p1({bufferMap:a,influence:d,stride:c,width:u,depth:h,offset:Mn(1)}))})}update(){const e=this.morphBaseInfluence;this.mesh.geometry.morphTargetsRelative?e.value=1:e.value=1-this.mesh.morphTargetInfluences.reduce((t,n)=>t+n,0)}}const _te=Pe(gte);class Bh extends bt{static get type(){return"LightingNode"}constructor(){super("vec3"),this.isLightingNode=!0}generate(){console.warn("Abstract function.")}}class vte extends Bh{static get type(){return"AONode"}constructor(e=null){super(),this.aoNode=e}setup(e){e.context.ambientOcclusion.mulAssign(this.aoNode)}}class xte extends AD{static get type(){return"LightingContextNode"}constructor(e,t=null,n=null,s=null){super(e),this.lightingModel=t,this.backdropNode=n,this.backdropAlphaNode=s,this._value=null}getContext(){const{backdropNode:e,backdropAlphaNode:t}=this,n=Te().toVar("directDiffuse"),s=Te().toVar("directSpecular"),r=Te().toVar("indirectDiffuse"),o=Te().toVar("indirectSpecular"),a={directDiffuse:n,directSpecular:s,indirectDiffuse:r,indirectSpecular:o};return{radiance:Te().toVar("radiance"),irradiance:Te().toVar("irradiance"),iblIrradiance:Te().toVar("iblIrradiance"),ambientOcclusion:Ae(1).toVar("ambientOcclusion"),reflectedLight:a,backdrop:e,backdropAlpha:t}}setup(e){return this.value=this._value||(this._value=this.getContext()),this.value.lightingModel=this.lightingModel||e.context.lightingModel,super.setup(e)}}const yte=Pe(xte);class Ste extends Bh{static get type(){return"IrradianceNode"}constructor(e){super(),this.node=e}setup(e){e.context.irradiance.addAssign(this.node)}}let ud,hd;class Un extends bt{static get type(){return"ScreenNode"}constructor(e){super(),this.scope=e,this.isViewportNode=!0}getNodeType(){return this.scope===Un.VIEWPORT?"vec4":"vec2"}getUpdateType(){let e=At.NONE;return(this.scope===Un.SIZE||this.scope===Un.VIEWPORT)&&(e=At.RENDER),this.updateType=e,e}update({renderer:e}){const t=e.getRenderTarget();this.scope===Un.VIEWPORT?t!==null?hd.copy(t.viewport):(e.getViewport(hd),hd.multiplyScalar(e.getPixelRatio())):t!==null?(ud.width=t.width,ud.height=t.height):e.getDrawingBufferSize(ud)}setup(){const e=this.scope;let t=null;return e===Un.SIZE?t=yt(ud||(ud=new Bt)):e===Un.VIEWPORT?t=yt(hd||(hd=new Yt)):t=Je(L_.div(gS)),t}generate(e){if(this.scope===Un.COORDINATE){let t=e.getFragCoord();if(e.isFlipY()){const n=e.getNodeProperties(gS).outputNode.build(e);t=`${e.getType("vec2")}( ${t}.x, ${n}.y - ${t}.y )`}return t}return super.generate(e)}}Un.COORDINATE="coordinate";Un.VIEWPORT="viewport";Un.SIZE="size";Un.UV="uv";const vf=We(Un,Un.UV),gS=We(Un,Un.SIZE),L_=We(Un,Un.COORDINATE),VD=We(Un,Un.VIEWPORT);VD.zw;VD.xy;const dd=new Bt;class HD extends $f{static get type(){return"ViewportTextureNode"}constructor(e=vf,t=null,n=null){n===null&&(n=new wK,n.minFilter=Bo),super(n,e,t),this.generateMipmaps=!1,this.isOutputTextureNode=!0,this.updateBeforeType=At.FRAME}updateBefore(e){const t=e.renderer;t.getDrawingBufferSize(dd);const n=this.value;(n.image.width!==dd.width||n.image.height!==dd.height)&&(n.image.width=dd.width,n.image.height=dd.height,n.needsUpdate=!0);const s=n.generateMipmaps;n.generateMipmaps=this.generateMipmaps,t.copyFramebufferToTexture(n),n.generateMipmaps=s}clone(){const e=new this.constructor(this.uvNode,this.levelNode,this.value);return e.generateMipmaps=this.generateMipmaps,e}}const WD=Pe(HD,null,null,{generateMipmaps:!0});let Lv=null;class bte extends HD{static get type(){return"ViewportDepthTextureNode"}constructor(e=vf,t=null){Lv===null&&(Lv=new Uh),super(e,t,Lv)}}const Mte=Pe(bte);class qi extends bt{static get type(){return"ViewportDepthNode"}constructor(e,t=null){super("float"),this.scope=e,this.valueNode=t,this.isViewportDepthNode=!0}generate(e){const{scope:t}=this;return t===qi.DEPTH_BASE?e.getFragDepth():super.generate(e)}setup({camera:e}){const{scope:t}=this,n=this.valueNode;let s=null;if(t===qi.DEPTH_BASE)n!==null&&(s=XD().assign(n));else if(t===qi.DEPTH)e.isPerspectiveCamera?s=Tte(ai.z,Rc,Nc):s=kd(ai.z,Rc,Nc);else if(t===qi.LINEAR_DEPTH)if(n!==null)if(e.isPerspectiveCamera){const r=$D(n,Rc,Nc);s=kd(r,Rc,Nc)}else s=n;else s=kd(ai.z,Rc,Nc);return s}}qi.DEPTH_BASE="depthBase";qi.DEPTH="depth";qi.LINEAR_DEPTH="linearDepth";const kd=(i,e,t)=>i.add(e).div(e.sub(t)),Tte=(i,e,t)=>e.add(i).mul(t).div(t.sub(e).mul(i)),$D=(i,e,t)=>e.mul(t).div(t.sub(e).mul(i).sub(t)),qD=(i,e,t)=>{e=e.max(1e-6).toVar();const n=Ho(i.div(e).add(1)),s=Ho(t.div(e).add(1));return n.div(s)},XD=Pe(qi,qi.DEPTH_BASE),jD=We(qi,qi.DEPTH),Ete=Pe(qi,qi.LINEAR_DEPTH);Mte();jD.assign=i=>XD(i);class Xa extends bt{static get type(){return"ClippingNode"}constructor(e=Xa.DEFAULT){super(),this.scope=e}setup(e){super.setup(e);const t=e.clippingContext,{localClipIntersection:n,localClippingCount:s,globalClippingCount:r}=t,o=r+s,a=n?o-s:o;return this.scope===Xa.ALPHA_TO_COVERAGE?this.setupAlphaToCoverage(t.planes,o,a):this.setupDefault(t.planes,o,a)}setupAlphaToCoverage(e,t,n){return Ze(()=>{const s=_f(e),r=mu("float","distanceToPlane"),o=mu("float","distanceToGradient"),a=mu("float","clipOpacity");a.assign(1);let c;if(Rr(n,({i:l})=>{c=s.element(l),r.assign(ai.dot(c.xyz).negate().add(c.w)),o.assign(r.fwidth().div(2)),a.mulAssign(ol(o.negate(),o,r)),a.equal(0).discard()}),n<t){const l=mu("float","unionclipOpacity");l.assign(1),Rr({start:n,end:t},({i:u})=>{c=s.element(u),r.assign(ai.dot(c.xyz).negate().add(c.w)),o.assign(r.fwidth().div(2)),l.mulAssign(ol(o.negate(),o,r).oneMinus())}),a.mulAssign(l.oneMinus())}$t.a.mulAssign(a),$t.a.equal(0).discard()})()}setupDefault(e,t,n){return Ze(()=>{const s=_f(e);let r;if(Rr(n,({i:o})=>{r=s.element(o),ai.dot(r.xyz).greaterThan(r.w).discard()}),n<t){const o=mu("bool","clipped");o.assign(!0),Rr({start:n,end:t},({i:a})=>{r=s.element(a),o.assign(ai.dot(r.xyz).greaterThan(r.w).and(o))}),o.discard()}})()}}Xa.ALPHA_TO_COVERAGE="alphaToCoverage";Xa.DEFAULT="default";const wte=()=>Ve(new Xa),Ate=()=>Ve(new Xa(Xa.ALPHA_TO_COVERAGE)),Cte=.05,m1=Ze(([i])=>Qa(Dt(1e4,Ks(Dt(17,i.x).add(Dt(.1,i.y)))).mul(ki(.1,Qs(Ks(Dt(13,i.y).add(i.x))))))),g1=Ze(([i])=>m1(Je(m1(i.xy),i.z))),Rte=Ze(([i])=>{const e=Fs(ka(yD(i.xyz)),ka(SD(i.xyz))).toVar("maxDeriv"),t=Ae(1).div(Ae(Cte).mul(e)).toVar("pixScale"),n=Je(df(Hc(Ho(t))),df(_M(Ho(t)))).toVar("pixScales"),s=Je(g1(Hc(n.x.mul(i.xyz))),g1(Hc(n.y.mul(i.xyz)))).toVar("alpha"),r=Qa(Ho(t)).toVar("lerpFactor"),o=ki(Dt(r.oneMinus(),s.x),Dt(r,s.y)).toVar("x"),a=pf(r,r.oneMinus()).toVar("a"),c=Te(o.mul(o).div(Dt(2,a).mul(ms(1,a))),o.sub(Dt(.5,a)).div(ms(1,a)),ms(1,ms(1,o).mul(ms(1,o)).div(Dt(2,a).mul(ms(1,a))))).toVar("cases"),l=o.lessThan(a.oneMinus()).select(o.lessThan(a).select(c.x,c.y),c.z);return qo(l,1e-6,1)});class zn extends Ki{static get type(){return"NodeMaterial"}constructor(){super(),this.isNodeMaterial=!0,this.type=this.constructor.type,this.forceSinglePass=!1,this.fog=!0,this.lights=!1,this.lightsNode=null,this.envNode=null,this.aoNode=null,this.colorNode=null,this.normalNode=null,this.opacityNode=null,this.backdropNode=null,this.backdropAlphaNode=null,this.alphaTestNode=null,this.positionNode=null,this.geometryNode=null,this.depthNode=null,this.shadowNode=null,this.shadowPositionNode=null,this.outputNode=null,this.mrtNode=null,this.fragmentNode=null,this.vertexNode=null}customProgramCacheKey(){return this.type+J2(this)}build(e){this.setup(e)}setupObserver(e){return new kK(e)}setup(e){e.context.setupNormal=()=>this.setupNormal(e),e.addStack(),e.stack.outputNode=this.vertexNode||this.setupPosition(e),this.geometryNode!==null&&(e.stack.outputNode=e.stack.outputNode.bypass(this.geometryNode)),e.addFlow("vertex",e.removeStack()),e.addStack();let t;const n=this.setupClipping(e);if(this.depthWrite===!0&&this.setupDepth(e),this.fragmentNode===null){this.setupDiffuseColor(e),this.setupVariants(e);const s=this.setupLighting(e);n!==null&&e.stack.add(n);const r=xt(s,$t.a).max(0);if(t=this.setupOutput(e,r),MQ.assign(t),this.outputNode!==null&&(t=this.outputNode),e.renderer.getRenderTarget()!==null){const a=e.renderer.getMRT(),c=this.mrtNode;a!==null?(t=a,c!==null&&(t=a.merge(c))):c!==null&&(t=c)}}else{let s=this.fragmentNode;s.isOutputStructNode!==!0&&(s=xt(s)),t=this.setupOutput(e,s)}e.stack.outputNode=t,e.addFlow("fragment",e.removeStack()),e.monitor=this.setupObserver(e)}setupClipping(e){if(e.clippingContext===null)return null;const{globalClippingCount:t,localClippingCount:n}=e.clippingContext;let s=null;if(t||n){const r=e.renderer.samples;this.alphaToCoverage&&r>1?s=Ate():e.stack.add(wte())}return s}setupDepth(e){const{renderer:t,camera:n}=e;let s=this.depthNode;if(s===null){const r=t.getMRT();r&&r.has("depth")?s=r.get("depth"):t.logarithmicDepthBuffer===!0&&(n.isPerspectiveCamera?s=qD(mS().w,Rc,Nc):s=kd(ai.z,Rc,Nc))}s!==null&&jD.assign(s).append()}setupPosition(e){const{object:t}=e,n=t.geometry;if(e.addStack(),(n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color)&&_te(t).append(),t.isSkinnedMesh===!0&&dte(t).append(),this.displacementMap){const r=Ra("displacementMap","texture"),o=Ra("displacementScale","float"),a=Ra("displacementBias","float");ui.addAssign(Br.normalize().mul(r.x.mul(o).add(a)))}t.isBatchedMesh&&ute(t).append(),t.instanceMatrix&&t.instanceMatrix.isInstancedBufferAttribute===!0&&cte(t).append(),this.positionNode!==null&&ui.assign(this.positionNode);const s=mS();return e.context.vertex=e.removeStack(),e.context.mvp=s,s}setupDiffuseColor({object:e,geometry:t}){let n=this.colorNode?xt(this.colorNode):Nee;this.vertexColors===!0&&t.hasAttribute("color")&&(n=xt(n.xyz.mul(Xo("color","vec3")),n.a)),e.instanceColor&&(n=Wg("vec3","vInstanceColor").mul(n)),e.isBatchedMesh&&e._colorsTexture&&(n=Wg("vec3","vBatchColor").mul(n)),$t.assign(n);const s=this.opacityNode?Ae(this.opacityNode):zD;if($t.a.assign($t.a.mul(s)),this.alphaTestNode!==null||this.alphaTest>0){const r=this.alphaTestNode!==null?Ae(this.alphaTestNode):Ree;$t.a.lessThanEqual(r).discard()}this.alphaHash===!0&&$t.a.lessThan(Rte(ui)).discard(),this.transparent===!1&&this.blending===Ua&&this.alphaToCoverage===!1&&$t.a.assign(1)}setupVariants(){}setupOutgoingLight(){return this.lights===!0?Te(0):$t.rgb}setupNormal(){return this.normalNode?Te(this.normalNode):Oee}setupEnvironment(){let e=null;return this.envNode?e=this.envNode:this.envMap&&(e=this.envMap.isCubeTexture?Ra("envMap","cubeTexture"):Ra("envMap","texture")),e}setupLightMap(e){let t=null;return e.material.lightMap&&(t=new Ste(GD)),t}setupLights(e){const t=[],n=this.setupEnvironment(e);n&&n.isLightingNode&&t.push(n);const s=this.setupLightMap(e);if(s&&s.isLightingNode&&t.push(s),this.aoNode!==null||e.material.aoMap){const o=this.aoNode!==null?this.aoNode:ite;t.push(new vte(o))}let r=this.lightsNode||e.lightsNode;return t.length>0&&(r=e.renderer.lighting.createNode([...r.getLights(),...t])),r}setupLightingModel(){}setupLighting(e){const{material:t}=e,{backdropNode:n,backdropAlphaNode:s,emissiveNode:r}=this,a=this.lights===!0||this.lightsNode!==null?this.setupLights(e):null;let c=this.setupOutgoingLight(e);if(a&&a.getScope().hasLights){const l=this.setupLightingModel(e);c=yte(a,l,n,s)}else n!==null&&(c=Te(s!==null?ln(c,n,s):n));return(r&&r.isNode===!0||t.emissive&&t.emissive.isColor===!0)&&(s1.assign(Te(r||Dee)),c=c.add(s1)),c}setupOutput(e,t){if(this.fog===!0){const n=e.fogNode;n&&(t=xt(n.mix(t.rgb,n.colorNode),t.a))}return t}setDefaultValues(e){for(const n in e){const s=e[n];this[n]===void 0&&(this[n]=s,s&&s.clone&&(this[n]=s.clone()))}const t=Object.getOwnPropertyDescriptors(e.constructor.prototype);for(const n in t)Object.getOwnPropertyDescriptor(this.constructor.prototype,n)===void 0&&t[n].get!==void 0&&Object.defineProperty(this.constructor.prototype,n,t[n])}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{},nodes:{}});const n=Ki.prototype.toJSON.call(this,e),s=Gg(this);n.inputNodes={};for(const{property:o,childNode:a}of s)n.inputNodes[o]=a.toJSON(e).uuid;function r(o){const a=[];for(const c in o){const l=o[c];delete l.metadata,a.push(l)}return a}if(t){const o=r(e.textures),a=r(e.images),c=r(e.nodes);o.length>0&&(n.textures=o),a.length>0&&(n.images=a),c.length>0&&(n.nodes=c)}return n}copy(e){return this.lightsNode=e.lightsNode,this.envNode=e.envNode,this.colorNode=e.colorNode,this.normalNode=e.normalNode,this.opacityNode=e.opacityNode,this.backdropNode=e.backdropNode,this.backdropAlphaNode=e.backdropAlphaNode,this.alphaTestNode=e.alphaTestNode,this.positionNode=e.positionNode,this.geometryNode=e.geometryNode,this.depthNode=e.depthNode,this.shadowNode=e.shadowNode,this.shadowPositionNode=e.shadowPositionNode,this.outputNode=e.outputNode,this.mrtNode=e.mrtNode,this.fragmentNode=e.fragmentNode,this.vertexNode=e.vertexNode,super.copy(e)}}const Nte=new sM;class Pte extends zn{static get type(){return"LineBasicNodeMaterial"}constructor(e){super(),this.isLineBasicNodeMaterial=!0,this.lights=!1,this.setDefaultValues(Nte),this.setValues(e)}}const Dte=new Z2;class Lte extends zn{static get type(){return"LineDashedNodeMaterial"}constructor(e){super(),this.isLineDashedNodeMaterial=!0,this.lights=!1,this.setDefaultValues(Dte),this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.setValues(e)}setupVariants(){const e=this.offsetNode,t=this.dashScaleNode?Ae(this.dashScaleNode):Jee,n=this.dashSizeNode?Ae(this.dashSizeNode):ete,s=this.dashSizeNode?Ae(this.dashGapNode):tte;Nv.assign(n),r1.assign(s);const r=Jo(Xo("lineDistance").mul(t));(e?r.add(e):r).mod(Nv.add(r1)).greaterThan(Nv).discard()}}const Ite=i=>Ve(i).mul(.5).add(.5),Fte=new X2;class Ute extends zn{static get type(){return"MeshNormalNodeMaterial"}constructor(e){super(),this.lights=!1,this.isMeshNormalNodeMaterial=!0,this.setDefaultValues(Fte),this.setValues(e)}setupDiffuseColor(){const e=this.opacityNode?Ae(this.opacityNode):zD;$t.assign(xt(Ite(On),e))}}class Ote extends Gn{static get type(){return"EquirectUVNode"}constructor(e=LD){super("vec2"),this.dirNode=e}setup(){const e=this.dirNode,t=e.z.atan2(e.x).mul(1/(Math.PI*2)).add(.5),n=e.y.clamp(-1,1).asin().mul(1/Math.PI).add(.5);return Je(t,n)}}const YD=Pe(Ote);class ZD extends SK{constructor(e=1,t={}){super(e,t),this.isCubeRenderTarget=!0}fromEquirectangularTexture(e,t){const n=t.minFilter,s=t.generateMipmaps;t.generateMipmaps=!0,this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const r=new Gf(5,5,5),o=YD(LD),a=new zn;a.colorNode=Tn(t,o,0),a.side=pr,a.blending=lh;const c=new rl(r,a),l=new B2;l.add(c),t.minFilter===Bo&&(t.minFilter=xs);const u=new O2(1,10,this),h=e.getMRT();return e.setMRT(null),u.update(e,l),e.setMRT(h),t.minFilter=n,t.currentGenerateMipmaps=s,c.geometry.dispose(),c.material.dispose(),this}}const zd=new WeakMap;class Bte extends Gn{static get type(){return"CubeMapNode"}constructor(e){super("vec3"),this.envNode=e,this._cubeTexture=null,this._cubeTextureNode=gf();const t=new nM;t.isRenderTargetTexture=!0,this._defaultTexture=t,this.updateBeforeType=At.RENDER}updateBefore(e){const{renderer:t,material:n}=e,s=this.envNode;if(s.isTextureNode||s.isMaterialReferenceNode){const r=s.isTextureNode?s.value:n[s.property];if(r&&r.isTexture){const o=r.mapping;if(o===Uf||o===Of){if(zd.has(r)){const a=zd.get(r);_1(a,r.mapping),this._cubeTexture=a}else{const a=r.image;if(kte(a)){const c=new ZD(a.height);c.fromEquirectangularTexture(t,r),_1(c.texture,r.mapping),this._cubeTexture=c.texture,zd.set(r,c.texture),r.addEventListener("dispose",KD)}else this._cubeTexture=this._defaultTexture}this._cubeTextureNode.value=this._cubeTexture}else this._cubeTextureNode=this.envNode}}}setup(e){return this.updateBefore(e),this._cubeTextureNode}}function kte(i){return i==null?!1:i.height>0}function KD(i){const e=i.target;e.removeEventListener("dispose",KD);const t=zd.get(e);t!==void 0&&(zd.delete(e),t.dispose())}function _1(i,e){e===Uf?i.mapping=nl:e===Of&&(i.mapping=uh)}const QD=Pe(Bte);class AM extends Bh{static get type(){return"BasicEnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){e.context.environment=QD(this.envNode)}}class zte extends Bh{static get type(){return"BasicLightMapNode"}constructor(e=null){super(),this.lightMapNode=e}setup(e){const t=Ae(1/Math.PI);e.context.irradianceLightMap=this.lightMapNode.mul(t)}}class I_{start(){}finish(){}direct(){}directRectArea(){}indirect(){}ambientOcclusion(){}}class JD extends I_{constructor(){super()}indirect(e,t,n){const s=e.ambientOcclusion,r=e.reflectedLight,o=n.context.irradianceLightMap;r.indirectDiffuse.assign(xt(0)),o?r.indirectDiffuse.addAssign(o):r.indirectDiffuse.addAssign(xt(1,1,1,0)),r.indirectDiffuse.mulAssign(s),r.indirectDiffuse.mulAssign($t.rgb)}finish(e,t,n){const s=n.material,r=e.outgoingLight,o=n.context.environment;if(o)switch(s.combine){case M_:r.rgb.assign(ln(r.rgb,r.rgb.mul(o.rgb),eg.mul(Pv)));break;case iZ:r.rgb.assign(ln(r.rgb,o.rgb,eg.mul(Pv)));break;case sZ:r.rgb.addAssign(o.rgb.mul(eg.mul(Pv)));break;default:console.warn("THREE.BasicLightingModel: Unsupported .combine value:",s.combine);break}}}const Gte=new T_;class Vte extends zn{static get type(){return"MeshBasicNodeMaterial"}constructor(e){super(),this.isMeshBasicNodeMaterial=!0,this.lights=!0,this.setDefaultValues(Gte),this.setValues(e)}setupNormal(){return gr}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new AM(t):null}setupLightMap(e){let t=null;return e.material.lightMap&&(t=new zte(GD)),t}setupOutgoingLight(){return $t.rgb}setupLightingModel(){return new JD}}const xf=Ze(({f0:i,f90:e,dotVH:t})=>{const n=t.mul(-5.55473).sub(6.98316).mul(t).exp2();return i.mul(n.oneMinus()).add(e.mul(n))}),fh=Ze(i=>i.diffuseColor.mul(1/Math.PI)),Hte=()=>Ae(.25),Wte=Ze(({dotNH:i})=>dS.mul(Ae(.5)).add(1).mul(Ae(1/Math.PI)).mul(i.pow(dS))),$te=Ze(({lightDirection:i})=>{const e=i.add(yn).normalize(),t=On.dot(e).clamp(),n=yn.dot(e).clamp(),s=xf({f0:fs,f90:1,dotVH:n}),r=Hte(),o=Wte({dotNH:t});return s.mul(r).mul(o)});class eL extends JD{constructor(e=!0){super(),this.specular=e}direct({lightDirection:e,lightColor:t,reflectedLight:n}){const r=On.dot(e).clamp().mul(t);n.directDiffuse.addAssign(r.mul(fh({diffuseColor:$t.rgb}))),this.specular===!0&&n.directSpecular.addAssign(r.mul($te({lightDirection:e})).mul(eg))}indirect({ambientOcclusion:e,irradiance:t,reflectedLight:n}){n.indirectDiffuse.addAssign(t.mul(fh({diffuseColor:$t}))),n.indirectDiffuse.mulAssign(e)}}const qte=new j2;class Xte extends zn{static get type(){return"MeshLambertNodeMaterial"}constructor(e){super(),this.isMeshLambertNodeMaterial=!0,this.lights=!0,this.setDefaultValues(qte),this.setValues(e)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new AM(t):null}setupLightingModel(){return new eL(!1)}}const jte=new $2;class Yte extends zn{static get type(){return"MeshPhongNodeMaterial"}constructor(e){super(),this.isMeshPhongNodeMaterial=!0,this.lights=!0,this.shininessNode=null,this.specularNode=null,this.setDefaultValues(jte),this.setValues(e)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new AM(t):null}setupLightingModel(){return new eL}setupVariants(){const e=(this.shininessNode?Ae(this.shininessNode):Pee).max(1e-4);dS.assign(e);const t=this.specularNode||Lee;fs.assign(t)}copy(e){return this.shininessNode=e.shininessNode,this.specularNode=e.specularNode,super.copy(e)}}const Zte=Ze(i=>{if(i.geometry.hasAttribute("normal")===!1)return Ae(0);const e=gr.dFdx().abs().max(gr.dFdy().abs());return e.x.max(e.y).max(e.z)}),tL=Ze(i=>{const{roughness:e}=i,t=Zte();let n=e.max(.0525);return n=n.add(t),n=n.min(1),n}),Kte=Ze(({alpha:i,dotNL:e,dotNV:t})=>{const n=i.pow2(),s=e.mul(n.add(n.oneMinus().mul(t.pow2())).sqrt()),r=t.mul(n.add(n.oneMinus().mul(e.pow2())).sqrt());return qa(.5,s.add(r).max($Q))}).setLayout({name:"V_GGX_SmithCorrelated",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNL",type:"float"},{name:"dotNV",type:"float"}]}),Qte=Ze(({alphaT:i,alphaB:e,dotTV:t,dotBV:n,dotTL:s,dotBL:r,dotNV:o,dotNL:a})=>{const c=a.mul(Te(i.mul(t),e.mul(n),o).length()),l=o.mul(Te(i.mul(s),e.mul(r),a).length());return qa(.5,c.add(l)).saturate()}).setLayout({name:"V_GGX_SmithCorrelated_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotTV",type:"float",qualifier:"in"},{name:"dotBV",type:"float",qualifier:"in"},{name:"dotTL",type:"float",qualifier:"in"},{name:"dotBL",type:"float",qualifier:"in"},{name:"dotNV",type:"float",qualifier:"in"},{name:"dotNL",type:"float",qualifier:"in"}]}),Jte=Ze(({alpha:i,dotNH:e})=>{const t=i.pow2(),n=e.pow2().mul(t.oneMinus()).oneMinus();return t.div(n.pow2()).mul(1/Math.PI)}).setLayout({name:"D_GGX",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNH",type:"float"}]}),ene=Ae(1/Math.PI),tne=Ze(({alphaT:i,alphaB:e,dotNH:t,dotTH:n,dotBH:s})=>{const r=i.mul(e),o=Te(e.mul(n),i.mul(s),r.mul(t)),a=o.dot(o),c=r.div(a);return ene.mul(r.mul(c.pow2()))}).setLayout({name:"D_GGX_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotNH",type:"float",qualifier:"in"},{name:"dotTH",type:"float",qualifier:"in"},{name:"dotBH",type:"float",qualifier:"in"}]}),v1=Ze(i=>{const{lightDirection:e,f0:t,f90:n,roughness:s,f:r,USE_IRIDESCENCE:o,USE_ANISOTROPY:a}=i,c=i.normalView||On,l=s.pow2(),u=e.add(yn).normalize(),h=c.dot(e).clamp(),d=c.dot(yn).clamp(),f=c.dot(u).clamp(),m=yn.dot(u).clamp();let _=xf({f0:t,f90:n,dotVH:m}),g,p;if(i1(o)&&(_=mM.mix(_,r)),i1(a)){const y=Km.dot(e),x=Km.dot(yn),v=Km.dot(u),S=Wu.dot(e),M=Wu.dot(yn),E=Wu.dot(u);g=Qte({alphaT:hS,alphaB:l,dotTV:x,dotBV:M,dotTL:y,dotBL:S,dotNV:d,dotNL:h}),p=tne({alphaT:hS,alphaB:l,dotNH:f,dotTH:v,dotBH:E})}else g=Kte({alpha:l,dotNL:h,dotNV:d}),p=Jte({alpha:l,dotNH:f});return _.mul(g).mul(p)}),nL=Ze(({roughness:i,dotNV:e})=>{const t=xt(-1,-.0275,-.572,.022),n=xt(1,.0425,1.04,-.04),s=i.mul(t).add(n),r=s.x.mul(s.x).min(e.mul(-9.28).exp2()).mul(s.x).add(s.y);return Je(-1.04,1.04).mul(r).add(s.zw)}).setLayout({name:"DFGApprox",type:"vec2",inputs:[{name:"roughness",type:"float"},{name:"dotNV",type:"vec3"}]}),iL=Ze(i=>{const{dotNV:e,specularColor:t,specularF90:n,roughness:s}=i,r=nL({dotNV:e,roughness:s});return t.mul(r.x).add(n.mul(r.y))}),nne=Ze(({f:i,f90:e,dotVH:t})=>{const n=t.oneMinus().saturate(),s=n.mul(n),r=n.mul(s,s).clamp(0,.9999);return i.sub(Te(e).mul(r)).div(r.oneMinus())}).setLayout({name:"Schlick_to_F0",type:"vec3",inputs:[{name:"f",type:"vec3"},{name:"f90",type:"float"},{name:"dotVH",type:"float"}]}),ine=Ze(({roughness:i,dotNH:e})=>{const t=i.pow2(),n=Ae(1).div(t),r=e.pow2().oneMinus().max(.0078125);return Ae(2).add(n).mul(r.pow(n.mul(.5))).div(2*Math.PI)}).setLayout({name:"D_Charlie",type:"float",inputs:[{name:"roughness",type:"float"},{name:"dotNH",type:"float"}]}),sne=Ze(({dotNV:i,dotNL:e})=>Ae(1).div(Ae(4).mul(e.add(i).sub(e.mul(i))))).setLayout({name:"V_Neubelt",type:"float",inputs:[{name:"dotNV",type:"float"},{name:"dotNL",type:"float"}]}),rne=Ze(({lightDirection:i})=>{const e=i.add(yn).normalize(),t=On.dot(i).clamp(),n=On.dot(yn).clamp(),s=On.dot(e).clamp(),r=ine({roughness:pM,dotNH:s}),o=sne({dotNV:n,dotNL:t});return Tu.mul(r).mul(o)}),one=Ze(({N:i,V:e,roughness:t})=>{const r=.0078125,o=i.dot(e).saturate(),a=Je(t,o.oneMinus().sqrt());return a.assign(a.mul(.984375).add(r)),a}).setLayout({name:"LTC_Uv",type:"vec2",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"roughness",type:"float"}]}),ane=Ze(({f:i})=>{const e=i.length();return Fs(e.mul(e).add(i.z).div(e.add(1)),0)}).setLayout({name:"LTC_ClippedSphereFormFactor",type:"float",inputs:[{name:"f",type:"vec3"}]}),hm=Ze(({v1:i,v2:e})=>{const t=i.dot(e),n=t.abs().toVar(),s=n.mul(.0145206).add(.4965155).mul(n).add(.8543985).toVar(),r=n.add(4.1616724).mul(n).add(3.417594).toVar(),o=s.div(r),a=t.greaterThan(0).select(o,Fs(t.mul(t).oneMinus(),1e-7).inverseSqrt().mul(.5).sub(o));return i.cross(e).mul(a)}).setLayout({name:"LTC_EdgeVectorFormFactor",type:"vec3",inputs:[{name:"v1",type:"vec3"},{name:"v2",type:"vec3"}]}),x1=Ze(({N:i,V:e,P:t,mInv:n,p0:s,p1:r,p2:o,p3:a})=>{const c=r.sub(s).toVar(),l=a.sub(s).toVar(),u=c.cross(l),h=Te().toVar();return li(u.dot(t.sub(s)).greaterThanEqual(0),()=>{const d=e.sub(i.mul(e.dot(i))).normalize(),f=i.cross(d).negate(),m=n.mul(Bi(d,f,i).transpose()).toVar(),_=m.mul(s.sub(t)).normalize().toVar(),g=m.mul(r.sub(t)).normalize().toVar(),p=m.mul(o.sub(t)).normalize().toVar(),y=m.mul(a.sub(t)).normalize().toVar(),x=Te(0).toVar();x.addAssign(hm({v1:_,v2:g})),x.addAssign(hm({v1:g,v2:p})),x.addAssign(hm({v1:p,v2:y})),x.addAssign(hm({v1:y,v2:_})),h.assign(Te(ane({f:x})))}),h}).setLayout({name:"LTC_Evaluate",type:"vec3",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"P",type:"vec3"},{name:"mInv",type:"mat3"},{name:"p0",type:"vec3"},{name:"p1",type:"vec3"},{name:"p2",type:"vec3"},{name:"p3",type:"vec3"}]}),F_=1/6,sL=i=>Dt(F_,Dt(i,Dt(i,i.negate().add(3)).sub(3)).add(1)),_S=i=>Dt(F_,Dt(i,Dt(i,Dt(3,i).sub(6))).add(4)),rL=i=>Dt(F_,Dt(i,Dt(i,Dt(-3,i).add(3)).add(3)).add(1)),vS=i=>Dt(F_,C_(i,3)),y1=i=>sL(i).add(_S(i)),S1=i=>rL(i).add(vS(i)),b1=i=>ki(-1,_S(i).div(sL(i).add(_S(i)))),M1=i=>ki(1,vS(i).div(rL(i).add(vS(i)))),T1=(i,e,t)=>{const n=i.uvNode,s=Dt(n,e.zw).add(.5),r=Hc(s),o=Qa(s),a=y1(o.x),c=S1(o.x),l=b1(o.x),u=M1(o.x),h=b1(o.y),d=M1(o.y),f=Je(r.x.add(l),r.y.add(h)).sub(.5).mul(e.xy),m=Je(r.x.add(u),r.y.add(h)).sub(.5).mul(e.xy),_=Je(r.x.add(l),r.y.add(d)).sub(.5).mul(e.xy),g=Je(r.x.add(u),r.y.add(d)).sub(.5).mul(e.xy),p=y1(o.y).mul(ki(a.mul(i.uv(f).level(t)),c.mul(i.uv(m).level(t)))),y=S1(o.y).mul(ki(a.mul(i.uv(_).level(t)),c.mul(i.uv(g).level(t))));return p.add(y)},cne=Ze(([i,e=Ae(3)])=>{const t=Je(i.size(Mn(e))),n=Je(i.size(Mn(e.add(1)))),s=qa(1,t),r=qa(1,n),o=T1(i,xt(s,t),Hc(e)),a=T1(i,xt(r,n),_M(e));return Qa(e).mix(o,a)}),E1=Ze(([i,e,t,n,s])=>{const r=Te(wD(e.negate(),ff(i),qa(1,n))),o=Te(ka(s[0].xyz),ka(s[1].xyz),ka(s[2].xyz));return ff(r).mul(t.mul(o))}).setLayout({name:"getVolumeTransmissionRay",type:"vec3",inputs:[{name:"n",type:"vec3"},{name:"v",type:"vec3"},{name:"thickness",type:"float"},{name:"ior",type:"float"},{name:"modelMatrix",type:"mat4"}]}),lne=Ze(([i,e])=>i.mul(qo(e.mul(2).sub(2),0,1))).setLayout({name:"applyIorToRoughness",type:"float",inputs:[{name:"roughness",type:"float"},{name:"ior",type:"float"}]}),une=WD(),hne=WD(),w1=Ze(([i,e,t],{material:n})=>{const r=(n.side==pr?une:hne).uv(i),o=Ho(gS.x).mul(lne(e,t));return cne(r,o)}),A1=Ze(([i,e,t])=>(li(t.notEqual(0),()=>{const n=vD(e).negate().div(t);return _D(n.negate().mul(i))}),Te(1))).setLayout({name:"volumeAttenuation",type:"vec3",inputs:[{name:"transmissionDistance",type:"float"},{name:"attenuationColor",type:"vec3"},{name:"attenuationDistance",type:"float"}]}),dne=Ze(([i,e,t,n,s,r,o,a,c,l,u,h,d,f,m])=>{let _,g;if(m){_=xt().toVar(),g=Te().toVar();const S=u.sub(1).mul(m.mul(.025)),M=Te(u.sub(S),u,u.add(S));Rr({start:0,end:3},({i:E})=>{const w=M.element(E),b=E1(i,e,h,w,a),T=o.add(b),C=l.mul(c.mul(xt(T,1))),D=Je(C.xy.div(C.w)).toVar();D.addAssign(1),D.divAssign(2),D.assign(Je(D.x,D.y.oneMinus()));const P=w1(D,t,w);_.element(E).assign(P.element(E)),_.a.addAssign(P.a),g.element(E).assign(n.element(E).mul(A1(ka(b),d,f).element(E)))}),_.a.divAssign(3)}else{const S=E1(i,e,h,u,a),M=o.add(S),E=l.mul(c.mul(xt(M,1))),w=Je(E.xy.div(E.w)).toVar();w.addAssign(1),w.divAssign(2),w.assign(Je(w.x,w.y.oneMinus())),_=w1(w,t,u),g=n.mul(A1(ka(S),d,f))}const p=g.rgb.mul(_.rgb),y=i.dot(e).clamp(),x=Te(iL({dotNV:y,specularColor:s,specularF90:r,roughness:t})),v=g.r.add(g.g,g.b).div(3);return xt(x.oneMinus().mul(p),_.a.oneMinus().mul(v).oneMinus())}),fne=Bi(3.2404542,-.969266,.0556434,-1.5371385,1.8760108,-.2040259,-.4985314,.041556,1.0572252),pne=i=>{const e=i.sqrt();return Te(1).add(e).div(Te(1).sub(e))},C1=(i,e)=>i.sub(e).div(i.add(e)).pow2(),mne=(i,e)=>{const t=i.mul(2*Math.PI*1e-9),n=Te(54856e-17,44201e-17,52481e-17),s=Te(1681e3,1795300,2208400),r=Te(43278e5,93046e5,66121e5),o=Ae(9747e-17*Math.sqrt(2*Math.PI*45282e5)).mul(t.mul(2239900).add(e.x).cos()).mul(t.pow2().mul(-45282e5).exp());let a=n.mul(r.mul(2*Math.PI).sqrt()).mul(s.mul(t).add(e).cos()).mul(t.pow2().negate().mul(r).exp());return a=Te(a.x.add(o),a.y,a.z).div(10685e-11),fne.mul(a)},gne=Ze(({outsideIOR:i,eta2:e,cosTheta1:t,thinFilmThickness:n,baseF0:s})=>{const r=ln(i,e,ol(0,.03,n)),a=i.div(r).pow2().mul(t.pow2().oneMinus()).oneMinus();li(a.lessThan(0),()=>Te(1));const c=a.sqrt(),l=C1(r,i),u=xf({f0:l,f90:1,dotVH:t}),h=u.oneMinus(),d=r.lessThan(i).select(Math.PI,0),f=Ae(Math.PI).sub(d),m=pne(s.clamp(0,.9999)),_=C1(m,r.toVec3()),g=xf({f0:_,f90:1,dotVH:c}),p=Te(m.x.lessThan(r).select(Math.PI,0),m.y.lessThan(r).select(Math.PI,0),m.z.lessThan(r).select(Math.PI,0)),y=r.mul(n,c,2),x=Te(f).add(p),v=u.mul(g).clamp(1e-5,.9999),S=v.sqrt(),M=h.pow2().mul(g).div(Te(1).sub(v)),w=u.add(M).toVar(),b=M.sub(h).toVar();return Rr({start:1,end:2,condition:"<=",name:"m"},({m:T})=>{b.mulAssign(S);const C=mne(Ae(T).mul(y),Ae(T).mul(x)).mul(2);w.addAssign(b.mul(C))}),w.max(Te(0))}).setLayout({name:"evalIridescence",type:"vec3",inputs:[{name:"outsideIOR",type:"float"},{name:"eta2",type:"float"},{name:"cosTheta1",type:"float"},{name:"thinFilmThickness",type:"float"},{name:"baseF0",type:"vec3"}]}),_ne=Ze(({normal:i,viewDir:e,roughness:t})=>{const n=i.dot(e).saturate(),s=t.pow2(),r=$i(t.lessThan(.25),Ae(-339.2).mul(s).add(Ae(161.4).mul(t)).sub(25.9),Ae(-8.48).mul(s).add(Ae(14.3).mul(t)).sub(9.95)),o=$i(t.lessThan(.25),Ae(44).mul(s).sub(Ae(23.7).mul(t)).add(3.26),Ae(1.97).mul(s).sub(Ae(3.27).mul(t)).add(.72));return $i(t.lessThan(.25),0,Ae(.1).mul(t).sub(.025)).add(r.mul(n).add(o).exp()).mul(1/Math.PI).saturate()}),Iv=Te(.04),Fv=Ae(1);class oL extends I_{constructor(e=!1,t=!1,n=!1,s=!1,r=!1,o=!1){super(),this.clearcoat=e,this.sheen=t,this.iridescence=n,this.anisotropy=s,this.transmission=r,this.dispersion=o,this.clearcoatRadiance=null,this.clearcoatSpecularDirect=null,this.clearcoatSpecularIndirect=null,this.sheenSpecularDirect=null,this.sheenSpecularIndirect=null,this.iridescenceFresnel=null,this.iridescenceF0=null}start(e){if(this.clearcoat===!0&&(this.clearcoatRadiance=Te().toVar("clearcoatRadiance"),this.clearcoatSpecularDirect=Te().toVar("clearcoatSpecularDirect"),this.clearcoatSpecularIndirect=Te().toVar("clearcoatSpecularIndirect")),this.sheen===!0&&(this.sheenSpecularDirect=Te().toVar("sheenSpecularDirect"),this.sheenSpecularIndirect=Te().toVar("sheenSpecularIndirect")),this.iridescence===!0){const t=On.dot(yn).clamp();this.iridescenceFresnel=gne({outsideIOR:Ae(1),eta2:lD,cosTheta1:t,thinFilmThickness:uD,baseF0:fs}),this.iridescenceF0=nne({f:this.iridescenceFresnel,f90:1,dotVH:t})}if(this.transmission===!0){const t=pS,n=see.sub(pS).normalize(),s=bM;e.backdrop=dne(s,n,Co,$t,fs,Xg,t,al,ea,jg,Qm,hD,fD,dD,this.dispersion?pD:null),e.backdropAlpha=fS,$t.a.mulAssign(ln(1,e.backdrop.a,fS))}}computeMultiscattering(e,t,n){const s=On.dot(yn).clamp(),r=nL({roughness:Co,dotNV:s}),a=(this.iridescenceF0?mM.mix(fs,this.iridescenceF0):fs).mul(r.x).add(n.mul(r.y)),l=r.x.add(r.y).oneMinus(),u=fs.add(fs.oneMinus().mul(.047619)),h=a.mul(u).div(l.mul(u).oneMinus());e.addAssign(a),t.addAssign(h.mul(l))}direct({lightDirection:e,lightColor:t,reflectedLight:n}){const r=On.dot(e).clamp().mul(t);if(this.sheen===!0&&this.sheenSpecularDirect.addAssign(r.mul(rne({lightDirection:e}))),this.clearcoat===!0){const a=Td.dot(e).clamp().mul(t);this.clearcoatSpecularDirect.addAssign(a.mul(v1({lightDirection:e,f0:Iv,f90:Fv,roughness:qg,normalView:Td})))}n.directDiffuse.addAssign(r.mul(fh({diffuseColor:$t.rgb}))),n.directSpecular.addAssign(r.mul(v1({lightDirection:e,f0:fs,f90:1,roughness:Co,iridescence:this.iridescence,f:this.iridescenceFresnel,USE_IRIDESCENCE:this.iridescence,USE_ANISOTROPY:this.anisotropy})))}directRectArea({lightColor:e,lightPosition:t,halfWidth:n,halfHeight:s,reflectedLight:r,ltc_1:o,ltc_2:a}){const c=t.add(n).sub(s),l=t.sub(n).sub(s),u=t.sub(n).add(s),h=t.add(n).add(s),d=On,f=yn,m=ai.toVar(),_=one({N:d,V:f,roughness:Co}),g=o.uv(_).toVar(),p=a.uv(_).toVar(),y=Bi(Te(g.x,0,g.y),Te(0,1,0),Te(g.z,0,g.w)).toVar(),x=fs.mul(p.x).add(fs.oneMinus().mul(p.y)).toVar();r.directSpecular.addAssign(e.mul(x).mul(x1({N:d,V:f,P:m,mInv:y,p0:c,p1:l,p2:u,p3:h}))),r.directDiffuse.addAssign(e.mul($t).mul(x1({N:d,V:f,P:m,mInv:Bi(1,0,0,0,1,0,0,0,1),p0:c,p1:l,p2:u,p3:h})))}indirect(e,t,n){this.indirectDiffuse(e,t,n),this.indirectSpecular(e,t,n),this.ambientOcclusion(e,t,n)}indirectDiffuse({irradiance:e,reflectedLight:t}){t.indirectDiffuse.addAssign(e.mul(fh({diffuseColor:$t})))}indirectSpecular({radiance:e,iblIrradiance:t,reflectedLight:n}){if(this.sheen===!0&&this.sheenSpecularIndirect.addAssign(t.mul(Tu,_ne({normal:On,viewDir:yn,roughness:pM}))),this.clearcoat===!0){const l=Td.dot(yn).clamp(),u=iL({dotNV:l,specularColor:Iv,specularF90:Fv,roughness:qg});this.clearcoatSpecularIndirect.addAssign(this.clearcoatRadiance.mul(u))}const s=Te().toVar("singleScattering"),r=Te().toVar("multiScattering"),o=t.mul(1/Math.PI);this.computeMultiscattering(s,r,Xg);const a=s.add(r),c=$t.mul(a.r.max(a.g).max(a.b).oneMinus());n.indirectSpecular.addAssign(e.mul(s)),n.indirectSpecular.addAssign(r.mul(o)),n.indirectDiffuse.addAssign(c.mul(o))}ambientOcclusion({ambientOcclusion:e,reflectedLight:t}){const s=On.dot(yn).clamp().add(e),r=Co.mul(-16).oneMinus().negate().exp2(),o=e.sub(s.pow(r).oneMinus()).clamp();this.clearcoat===!0&&this.clearcoatSpecularIndirect.mulAssign(e),this.sheen===!0&&this.sheenSpecularIndirect.mulAssign(e),t.indirectDiffuse.mulAssign(e),t.indirectSpecular.mulAssign(o)}finish(e){const{outgoingLight:t}=e;if(this.clearcoat===!0){const n=Td.dot(yn).clamp(),s=xf({dotVH:n,f0:Iv,f90:Fv}),r=t.mul(uS.mul(s).oneMinus()).add(this.clearcoatSpecularDirect.add(this.clearcoatSpecularIndirect).mul(uS));t.assign(r)}if(this.sheen===!0){const n=Tu.r.max(Tu.g).max(Tu.b).mul(.157).oneMinus(),s=t.mul(n).add(this.sheenSpecularDirect,this.sheenSpecularIndirect);t.assign(s)}}}const R1=Ae(1),xS=Ae(-2),dm=Ae(.8),Uv=Ae(-1),fm=Ae(.4),Ov=Ae(2),pm=Ae(.305),Bv=Ae(3),N1=Ae(.21),vne=Ae(4),P1=Ae(4),xne=Ae(16),yne=Ze(([i])=>{const e=Te(Qs(i)).toVar(),t=Ae(-1).toVar();return li(e.x.greaterThan(e.z),()=>{li(e.x.greaterThan(e.y),()=>{t.assign($i(i.x.greaterThan(0),0,3))}).Else(()=>{t.assign($i(i.y.greaterThan(0),1,4))})}).Else(()=>{li(e.z.greaterThan(e.y),()=>{t.assign($i(i.z.greaterThan(0),2,5))}).Else(()=>{t.assign($i(i.y.greaterThan(0),1,4))})}),t}).setLayout({name:"getFace",type:"float",inputs:[{name:"direction",type:"vec3"}]}),Sne=Ze(([i,e])=>{const t=Je().toVar();return li(e.equal(0),()=>{t.assign(Je(i.z,i.y).div(Qs(i.x)))}).ElseIf(e.equal(1),()=>{t.assign(Je(i.x.negate(),i.z.negate()).div(Qs(i.y)))}).ElseIf(e.equal(2),()=>{t.assign(Je(i.x.negate(),i.y).div(Qs(i.z)))}).ElseIf(e.equal(3),()=>{t.assign(Je(i.z.negate(),i.y).div(Qs(i.x)))}).ElseIf(e.equal(4),()=>{t.assign(Je(i.x.negate(),i.z).div(Qs(i.y)))}).Else(()=>{t.assign(Je(i.x,i.y).div(Qs(i.z)))}),Dt(.5,t.add(1))}).setLayout({name:"getUV",type:"vec2",inputs:[{name:"direction",type:"vec3"},{name:"face",type:"float"}]}),bne=Ze(([i])=>{const e=Ae(0).toVar();return li(i.greaterThanEqual(dm),()=>{e.assign(R1.sub(i).mul(Uv.sub(xS)).div(R1.sub(dm)).add(xS))}).ElseIf(i.greaterThanEqual(fm),()=>{e.assign(dm.sub(i).mul(Ov.sub(Uv)).div(dm.sub(fm)).add(Uv))}).ElseIf(i.greaterThanEqual(pm),()=>{e.assign(fm.sub(i).mul(Bv.sub(Ov)).div(fm.sub(pm)).add(Ov))}).ElseIf(i.greaterThanEqual(N1),()=>{e.assign(pm.sub(i).mul(vne.sub(Bv)).div(pm.sub(N1)).add(Bv))}).Else(()=>{e.assign(Ae(-2).mul(Ho(Dt(1.16,i))))}),e}).setLayout({name:"roughnessToMip",type:"float",inputs:[{name:"roughness",type:"float"}]}),Mne=Ze(([i,e])=>{const t=i.toVar();t.assign(Dt(2,t).sub(1));const n=Te(t,1).toVar();return li(e.equal(0),()=>{n.assign(n.zyx)}).ElseIf(e.equal(1),()=>{n.assign(n.xzy),n.xz.mulAssign(-1)}).ElseIf(e.equal(2),()=>{n.x.mulAssign(-1)}).ElseIf(e.equal(3),()=>{n.assign(n.zyx),n.xz.mulAssign(-1)}).ElseIf(e.equal(4),()=>{n.assign(n.xzy),n.xy.mulAssign(-1)}).ElseIf(e.equal(5),()=>{n.z.mulAssign(-1)}),n}).setLayout({name:"getDirection",type:"vec3",inputs:[{name:"uv",type:"vec2"},{name:"face",type:"float"}]}),Tne=Ze(([i,e,t,n,s,r])=>{const o=Ae(t),a=Te(e),c=qo(bne(o),xS,r),l=Qa(c),u=Hc(c),h=Te(yS(i,a,u,n,s,r)).toVar();return li(l.notEqual(0),()=>{const d=Te(yS(i,a,u.add(1),n,s,r)).toVar();h.assign(ln(h,d,l))}),h}),yS=Ze(([i,e,t,n,s,r])=>{const o=Ae(t).toVar(),a=Te(e),c=Ae(yne(a)).toVar(),l=Ae(Fs(P1.sub(o),0)).toVar();o.assign(Fs(o,P1));const u=Ae(df(o)).toVar(),h=Je(Sne(a,c).mul(u.sub(2)).add(1)).toVar();return li(c.greaterThan(2),()=>{h.y.addAssign(u),c.subAssign(3)}),h.x.addAssign(c.mul(u)),h.x.addAssign(l.mul(Dt(3,xne))),h.y.addAssign(Dt(4,df(r).sub(u))),h.x.mulAssign(n),h.y.mulAssign(s),i.uv(h).grad(Je(),Je())}),kv=Ze(({envMap:i,mipInt:e,outputDirection:t,theta:n,axis:s,CUBEUV_TEXEL_WIDTH:r,CUBEUV_TEXEL_HEIGHT:o,CUBEUV_MAX_MIP:a})=>{const c=wa(n),l=t.mul(c).add(s.cross(t).mul(Ks(n))).add(s.mul(s.dot(t).mul(c.oneMinus())));return yS(i,l,e,r,o,a)}),Ene=Ze(({n:i,latitudinal:e,poleAxis:t,outputDirection:n,weights:s,samples:r,dTheta:o,mipInt:a,envMap:c,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:u,CUBEUV_MAX_MIP:h})=>{const d=Te($i(e,t,TD(t,n))).toVar();li(gD(d.equals(Te(0))),()=>{d.assign(Te(n.z,0,n.x.negate()))}),d.assign(ff(d));const f=Te().toVar();return f.addAssign(s.element(Mn(0)).mul(kv({theta:0,axis:d,outputDirection:n,mipInt:a,envMap:c,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:u,CUBEUV_MAX_MIP:h}))),Rr({start:Mn(1),end:i},({i:m})=>{li(m.greaterThanEqual(r),()=>{pte()});const _=Ae(o.mul(Ae(m))).toVar();f.addAssign(s.element(m).mul(kv({theta:_.mul(-1),axis:d,outputDirection:n,mipInt:a,envMap:c,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:u,CUBEUV_MAX_MIP:h}))),f.addAssign(s.element(m).mul(kv({theta:_,axis:d,outputDirection:n,mipInt:a,envMap:c,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:u,CUBEUV_MAX_MIP:h})))}),xt(f,1)});let Yg=null;const D1=new WeakMap;function wne(i){const e=Math.log2(i)-2,t=1/i;return{texelWidth:1/(3*Math.max(Math.pow(2,e),7*16)),texelHeight:t,maxMip:e}}function Ane(i){let e=D1.get(i);if((e!==void 0?e.pmremVersion:-1)!==i.pmremVersion){const n=i.image;if(i.isCubeTexture)if(Rne(n))e=Yg.fromCubemap(i,e);else return null;else if(Nne(n))e=Yg.fromEquirectangular(i,e);else return null;e.pmremVersion=i.pmremVersion,D1.set(i,e)}return e.texture}class Cne extends Gn{static get type(){return"PMREMNode"}constructor(e,t=null,n=null){super("vec3"),this._value=e,this._pmrem=null,this.uvNode=t,this.levelNode=n,this._generator=null;const s=new Ui;s.isRenderTargetTexture=!0,this._texture=Tn(s),this._width=yt(0),this._height=yt(0),this._maxMip=yt(0),this.updateBeforeType=At.RENDER}set value(e){this._value=e,this._pmrem=null}get value(){return this._value}updateFromTexture(e){const t=wne(e.image.height);this._texture.value=e,this._width.value=t.texelWidth,this._height.value=t.texelHeight,this._maxMip.value=t.maxMip}updateBefore(){let e=this._pmrem;const t=e?e.pmremVersion:-1,n=this._value;t!==n.pmremVersion&&(n.isPMREMTexture===!0?e=n:e=Ane(n),e!==null&&(this._pmrem=e,this.updateFromTexture(e)))}setup(e){Yg===null&&(Yg=e.createPMREMGenerator()),this.updateBefore(e);let t=this.uvNode;t===null&&e.context.getUV&&(t=e.context.getUV(this));const n=this.value;e.renderer.coordinateSystem===ar&&n.isPMREMTexture!==!0&&n.isRenderTargetTexture===!0&&(t=Te(t.x.negate(),t.yz));let s=this.levelNode;return s===null&&e.context.getTextureLevel&&(s=e.context.getTextureLevel(this)),Tne(this._texture,t,s,this._width,this._height,this._maxMip)}}function Rne(i){if(i==null)return!1;let e=0;const t=6;for(let n=0;n<t;n++)i[n]!==void 0&&e++;return e===t}function Nne(i){return i==null?!1:i.height>0}const aL=Pe(Cne),L1=new WeakMap;class Pne extends Bh{static get type(){return"EnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){const{material:t}=e;let n=this.envNode;if(n.isTextureNode||n.isMaterialReferenceNode){const f=n.isTextureNode?n.value:t[n.property];let m=L1.get(f);m===void 0&&(m=aL(f),L1.set(f,m)),n=m}const r=t.envMap?Sn("envMapIntensity","float",e.material):Sn("environmentIntensity","float",e.scene),a=t.useAnisotropy===!0||t.anisotropy>0?bee:On,c=n.context(I1(Co,a)).mul(r),l=n.context(Dne(bM)).mul(Math.PI).mul(r),u=Jm(c),h=Jm(l);e.context.radiance.addAssign(u),e.context.iblIrradiance.addAssign(h);const d=e.context.lightingModel.clearcoatRadiance;if(d){const f=n.context(I1(qg,Td)).mul(r),m=Jm(f);d.addAssign(m)}}}const I1=(i,e)=>{let t=null;return{getUV:()=>(t===null&&(t=yn.negate().reflect(e),t=i.mul(i).mix(t,e).normalize(),t=t.transformDirection(ea)),t),getTextureLevel:()=>i}},Dne=i=>({getUV:()=>i,getTextureLevel:()=>Ae(1)}),Lne=new oM;class cL extends zn{static get type(){return"MeshStandardNodeMaterial"}constructor(e){super(),this.isMeshStandardNodeMaterial=!0,this.lights=!0,this.emissiveNode=null,this.metalnessNode=null,this.roughnessNode=null,this.setDefaultValues(Lne),this.setValues(e)}setupEnvironment(e){let t=super.setupEnvironment(e);return t===null&&e.environmentNode&&(t=e.environmentNode),t?new Pne(t):null}setupLightingModel(){return new oL}setupSpecular(){const e=ln(Te(.04),$t.rgb,$g);fs.assign(e),Xg.assign(1)}setupVariants(){const e=this.metalnessNode?Ae(this.metalnessNode):Uee;$g.assign(e);let t=this.roughnessNode?Ae(this.roughnessNode):Fee;t=tL({roughness:t}),Co.assign(t),this.setupSpecular(),$t.assign(xt($t.rgb.mul(e.oneMinus()),$t.a))}copy(e){return this.emissiveNode=e.emissiveNode,this.metalnessNode=e.metalnessNode,this.roughnessNode=e.roughnessNode,super.copy(e)}}const Ine=new W2;class Fne extends cL{static get type(){return"MeshPhysicalNodeMaterial"}constructor(e){super(),this.isMeshPhysicalNodeMaterial=!0,this.clearcoatNode=null,this.clearcoatRoughnessNode=null,this.clearcoatNormalNode=null,this.sheenNode=null,this.sheenRoughnessNode=null,this.iridescenceNode=null,this.iridescenceIORNode=null,this.iridescenceThicknessNode=null,this.specularIntensityNode=null,this.specularColorNode=null,this.iorNode=null,this.transmissionNode=null,this.thicknessNode=null,this.attenuationDistanceNode=null,this.attenuationColorNode=null,this.dispersionNode=null,this.anisotropyNode=null,this.setDefaultValues(Ine),this.setValues(e)}get useClearcoat(){return this.clearcoat>0||this.clearcoatNode!==null}get useIridescence(){return this.iridescence>0||this.iridescenceNode!==null}get useSheen(){return this.sheen>0||this.sheenNode!==null}get useAnisotropy(){return this.anisotropy>0||this.anisotropyNode!==null}get useTransmission(){return this.transmission>0||this.transmissionNode!==null}get useDispersion(){return this.dispersion>0||this.dispersionNode!==null}setupSpecular(){const e=this.iorNode?Ae(this.iorNode):Zee;Qm.assign(e),fs.assign(ln(pf(ED(Qm.sub(1).div(Qm.add(1))).mul(Iee),Te(1)).mul(d1),$t.rgb,$g)),Xg.assign(ln(d1,1,$g))}setupLightingModel(){return new oL(this.useClearcoat,this.useSheen,this.useIridescence,this.useAnisotropy,this.useTransmission,this.useDispersion)}setupVariants(e){if(super.setupVariants(e),this.useClearcoat){const t=this.clearcoatNode?Ae(this.clearcoatNode):Bee,n=this.clearcoatRoughnessNode?Ae(this.clearcoatRoughnessNode):kee;uS.assign(t),qg.assign(tL({roughness:n}))}if(this.useSheen){const t=this.sheenNode?Te(this.sheenNode):Vee,n=this.sheenRoughnessNode?Ae(this.sheenRoughnessNode):Hee;Tu.assign(t),pM.assign(n)}if(this.useIridescence){const t=this.iridescenceNode?Ae(this.iridescenceNode):$ee,n=this.iridescenceIORNode?Ae(this.iridescenceIORNode):qee,s=this.iridescenceThicknessNode?Ae(this.iridescenceThicknessNode):Xee;mM.assign(t),lD.assign(n),uD.assign(s)}if(this.useAnisotropy){const t=(this.anisotropyNode?Je(this.anisotropyNode):Wee).toVar();bc.assign(t.length()),li(bc.equal(0),()=>{t.assign(Je(1,0))}).Else(()=>{t.divAssign(Je(bc)),bc.assign(bc.saturate())}),hS.assign(bc.pow2().mix(Co.pow2(),1)),Km.assign(Ed[0].mul(t.x).add(Ed[1].mul(t.y))),Wu.assign(Ed[1].mul(t.x).sub(Ed[0].mul(t.y)))}if(this.useTransmission){const t=this.transmissionNode?Ae(this.transmissionNode):jee,n=this.thicknessNode?Ae(this.thicknessNode):Yee,s=this.attenuationDistanceNode?Ae(this.attenuationDistanceNode):Kee,r=this.attenuationColorNode?Te(this.attenuationColorNode):Qee;if(fS.assign(t),hD.assign(n),dD.assign(s),fD.assign(r),this.useDispersion){const o=this.dispersionNode?Ae(this.dispersionNode):nte;pD.assign(o)}}}setupClearcoatNormal(){return this.clearcoatNormalNode?Te(this.clearcoatNormalNode):zee}setup(e){e.context.setupClearcoatNormal=()=>this.setupClearcoatNormal(e),super.setup(e)}copy(e){return this.clearcoatNode=e.clearcoatNode,this.clearcoatRoughnessNode=e.clearcoatRoughnessNode,this.clearcoatNormalNode=e.clearcoatNormalNode,this.sheenNode=e.sheenNode,this.sheenRoughnessNode=e.sheenRoughnessNode,this.iridescenceNode=e.iridescenceNode,this.iridescenceIORNode=e.iridescenceIORNode,this.iridescenceThicknessNode=e.iridescenceThicknessNode,this.specularIntensityNode=e.specularIntensityNode,this.specularColorNode=e.specularColorNode,this.transmissionNode=e.transmissionNode,this.thicknessNode=e.thicknessNode,this.attenuationDistanceNode=e.attenuationDistanceNode,this.attenuationColorNode=e.attenuationColorNode,this.dispersionNode=e.dispersionNode,this.anisotropyNode=e.anisotropyNode,super.copy(e)}}const Une=Ze(({normal:i,lightDirection:e,builder:t})=>{const n=i.dot(e),s=Je(n.mul(.5).add(.5),0);if(t.material.gradientMap){const r=Ra("gradientMap","texture").context({getUV:()=>s});return Te(r.r)}else{const r=s.fwidth().mul(.5);return ln(Te(.7),Te(1),ol(Ae(.7).sub(r.x),Ae(.7).add(r.x),s.x))}});class One extends I_{direct({lightDirection:e,lightColor:t,reflectedLight:n},s,r){const o=Une({normal:ID,lightDirection:e,builder:r}).mul(t);n.directDiffuse.addAssign(o.mul(fh({diffuseColor:$t.rgb})))}indirect({ambientOcclusion:e,irradiance:t,reflectedLight:n}){n.indirectDiffuse.addAssign(t.mul(fh({diffuseColor:$t}))),n.indirectDiffuse.mulAssign(e)}}const Bne=new q2;class kne extends zn{static get type(){return"MeshToonNodeMaterial"}constructor(e){super(),this.isMeshToonNodeMaterial=!0,this.lights=!0,this.setDefaultValues(Bne),this.setValues(e)}setupLightingModel(){return new One}}class zne extends Gn{static get type(){return"MatcapUVNode"}constructor(){super("vec2")}setup(){const e=Te(yn.z,0,yn.x.negate()).normalize(),t=yn.cross(e);return Je(e.dot(On),t.dot(On)).mul(.495).add(.5)}}const Gne=We(zne),Vne=new Y2;class Hne extends zn{static get type(){return"MeshMatcapNodeMaterial"}constructor(e){super(),this.lights=!1,this.isMeshMatcapNodeMaterial=!0,this.setDefaultValues(Vne),this.setValues(e)}setupVariants(e){const t=Gne;let n;e.material.matcap?n=Ra("matcap","texture").context({getUV:()=>t}):n=Te(ln(.2,.8,t.y)),$t.rgb.mulAssign(n.rgb)}}const Wne=new V2;class $ne extends zn{static get type(){return"PointsNodeMaterial"}constructor(e){super(),this.isPointsNodeMaterial=!0,this.lights=!1,this.transparent=!0,this.sizeNode=null,this.setDefaultValues(Wne),this.setValues(e)}copy(e){return this.sizeNode=e.sizeNode,super.copy(e)}}class qne extends Gn{static get type(){return"RotateNode"}constructor(e,t){super(),this.positionNode=e,this.rotationNode=t}getNodeType(e){return this.positionNode.getNodeType(e)}setup(e){const{rotationNode:t,positionNode:n}=this;if(this.getNodeType(e)==="vec2"){const r=t.cos(),o=t.sin();return fM(r,o,o.negate(),r).mul(n)}else{const r=t,o=Hu(xt(1,0,0,0),xt(0,wa(r.x),Ks(r.x).negate(),0),xt(0,Ks(r.x),wa(r.x),0),xt(0,0,0,1)),a=Hu(xt(wa(r.y),0,Ks(r.y),0),xt(0,1,0,0),xt(Ks(r.y).negate(),0,wa(r.y),0),xt(0,0,0,1)),c=Hu(xt(wa(r.z),Ks(r.z).negate(),0,0),xt(Ks(r.z),wa(r.z),0,0),xt(0,0,1,0),xt(0,0,0,1));return o.mul(a).mul(c).mul(xt(n,1)).xyz}}}const Xne=Pe(qne),jne=new z2;class Yne extends zn{static get type(){return"SpriteNodeMaterial"}constructor(e){super(),this.isSpriteNodeMaterial=!0,this.lights=!1,this._useSizeAttenuation=!0,this.positionNode=null,this.rotationNode=null,this.scaleNode=null,this.setDefaultValues(jne),this.setValues(e)}setupPosition({object:e,camera:t,context:n}){const s=this.sizeAttenuation,{positionNode:r,rotationNode:o,scaleNode:a}=this,c=ui;let l=P_.mul(Te(r||0)),u=Je(al[0].xyz.length(),al[1].xyz.length());if(a!==null&&(u=u.mul(a)),!s)if(t.isPerspectiveCamera)u=u.mul(l.z.negate());else{const _=Ae(2).div(jg.element(1).element(1));u=u.mul(_.mul(2))}let h=c.xy;if(e.center&&e.center.isVector2===!0){const _=FJ("center","vec2");h=h.sub(_.sub(.5))}h=h.mul(u);const d=Ae(o||Gee),f=Xne(h,d);l=xt(l.xy.add(f),l.zw);const m=jg.mul(l);return n.vertex=c,m}copy(e){return this.positionNode=e.positionNode,this.rotationNode=e.rotationNode,this.scaleNode=e.scaleNode,super.copy(e)}get sizeAttenuation(){return this._useSizeAttenuation}set sizeAttenuation(e){this._useSizeAttenuation!==e&&(this._useSizeAttenuation=e,this.needsUpdate=!0)}}class Zne extends I_{constructor(){super(),this.shadowNode=Ae(1).toVar("shadowMask")}direct({shadowMask:e}){this.shadowNode.mulAssign(e)}finish(e){$t.a.mulAssign(this.shadowNode.oneMinus()),e.outgoingLight.rgb.assign($t.rgb)}}const Kne=new H2;class Qne extends zn{static get type(){return"ShadowNodeMaterial"}constructor(e){super(),this.isShadowNodeMaterial=!0,this.lights=!0,this.setDefaultValues(Kne),this.setValues(e)}setupLightingModel(){return new Zne}}Ze(({texture:i,uv:e})=>{const n=Te().toVar();return li(e.x.lessThan(1e-4),()=>{n.assign(Te(1,0,0))}).ElseIf(e.y.lessThan(1e-4),()=>{n.assign(Te(0,1,0))}).ElseIf(e.z.lessThan(1e-4),()=>{n.assign(Te(0,0,1))}).ElseIf(e.x.greaterThan(1-1e-4),()=>{n.assign(Te(-1,0,0))}).ElseIf(e.y.greaterThan(1-1e-4),()=>{n.assign(Te(0,-1,0))}).ElseIf(e.z.greaterThan(1-1e-4),()=>{n.assign(Te(0,0,-1))}).Else(()=>{const r=i.uv(e.add(Te(-.01,0,0))).r.sub(i.uv(e.add(Te(.01,0,0))).r),o=i.uv(e.add(Te(0,-.01,0))).r.sub(i.uv(e.add(Te(0,.01,0))).r),a=i.uv(e.add(Te(0,0,-.01))).r.sub(i.uv(e.add(Te(0,0,.01))).r);n.assign(Te(r,o,a))}),n.normalize()});class Jne{constructor(e,t){this.nodes=e,this.info=t,this.animationLoop=null,this.requestId=null,this._init()}_init(){const e=(t,n)=>{this.requestId=self.requestAnimationFrame(e),this.info.autoReset===!0&&this.info.reset(),this.nodes.nodeFrame.update(),this.info.frame=this.nodes.nodeFrame.frameId,this.animationLoop!==null&&this.animationLoop(t,n)};e()}dispose(){self.cancelAnimationFrame(this.requestId),this.requestId=null}setAnimationLoop(e){this.animationLoop=e}}class kr{constructor(){this.weakMap=new WeakMap}get(e){let t=this.weakMap;for(let n=0;n<e.length;n++)if(t=t.get(e[n]),t===void 0)return;return t.get(e[e.length-1])}set(e,t){let n=this.weakMap;for(let s=0;s<e.length;s++){const r=e[s];n.has(r)===!1&&n.set(r,new WeakMap),n=n.get(r)}return n.set(e[e.length-1],t)}delete(e){let t=this.weakMap;for(let n=0;n<e.length;n++)if(t=t.get(e[n]),t===void 0)return!1;return t.delete(e[e.length-1])}}const zv=new Ea;class SS{constructor(){this.version=0,this.globalClippingCount=0,this.localClippingCount=0,this.localClippingEnabled=!1,this.localClipIntersection=!1,this.planes=[],this.parentVersion=0,this.viewNormalMatrix=new es,this.cacheKey=0}projectPlanes(e,t){const n=e.length,s=this.planes;for(let r=0;r<n;r++){zv.copy(e[r]).applyMatrix4(this.viewMatrix,this.viewNormalMatrix);const o=s[t+r],a=zv.normal;o.x=-a.x,o.y=-a.y,o.z=-a.z,o.w=zv.constant}}updateGlobal(e,t){const n=e.clippingPlanes;this.viewMatrix=t.matrixWorldInverse,this.viewNormalMatrix.getNormalMatrix(this.viewMatrix);let s=!1;if(Array.isArray(n)&&n.length!==0){const r=n.length;if(r!==this.globalClippingCount){const o=[];for(let a=0;a<r;a++)o.push(new Yt);this.globalClippingCount=r,this.planes=o,s=!0}this.projectPlanes(n,0)}else this.globalClippingCount!==0&&(this.globalClippingCount=0,this.planes=[],s=!0);e.localClippingEnabled!==this.localClippingEnabled&&(this.localClippingEnabled=e.localClippingEnabled,s=!0),s&&(this.version++,this.cacheKey=zg(this.globalClippingCount,this.localClippingEnabled===!0?1:0))}update(e,t){let n=!1;if(this!==e&&e.version!==this.parentVersion&&(this.globalClippingCount=t.isShadowNodeMaterial?0:e.globalClippingCount,this.localClippingEnabled=e.localClippingEnabled,this.planes=Array.from(e.planes),this.parentVersion=e.version,this.viewMatrix=e.viewMatrix,this.viewNormalMatrix=e.viewNormalMatrix,n=!0),this.localClippingEnabled){const s=t.clippingPlanes;if(Array.isArray(s)&&s.length!==0){const r=s.length,o=this.planes,a=this.globalClippingCount;if(n||r!==this.localClippingCount){o.length=a+r;for(let c=0;c<r;c++)o[a+c]=new Yt;this.localClippingCount=r,n=!0}this.projectPlanes(s,a)}else this.localClippingCount!==0&&(this.localClippingCount=0,n=!0);this.localClipIntersection!==t.clipIntersection&&(this.localClipIntersection=t.clipIntersection,n=!0)}n&&(this.version+=e.version,this.cacheKey=zg(e.cacheKey,this.localClippingCount,this.localClipIntersection===!0?1:0))}}let eie=0;function tie(i){const e=Object.keys(i);let t=Object.getPrototypeOf(i);for(;t;){const n=Object.getOwnPropertyDescriptors(t);for(const s in n)if(n[s]!==void 0){const r=n[s];r&&typeof r.get=="function"&&e.push(s)}t=Object.getPrototypeOf(t)}return e}class nie{constructor(e,t,n,s,r,o,a,c,l){this._nodes=e,this._geometries=t,this.id=eie++,this.renderer=n,this.object=s,this.material=r,this.scene=o,this.camera=a,this.lightsNode=c,this.context=l,this.geometry=s.geometry,this.version=r.version,this.drawRange=null,this.attributes=null,this.pipeline=null,this.vertexBuffers=null,this.drawParams=null,this.bundle=null,this.updateClipping(l.clippingContext),this.clippingContextVersion=this.clippingContext.version,this.initialNodesCacheKey=this.getDynamicCacheKey(),this.initialCacheKey=this.getCacheKey(),this._nodeBuilderState=null,this._bindings=null,this._monitor=null,this.onDispose=null,this.isRenderObject=!0,this.onMaterialDispose=()=>{this.dispose()},this.material.addEventListener("dispose",this.onMaterialDispose)}updateClipping(e){const t=this.material;let n=this.clippingContext;Array.isArray(t.clippingPlanes)?((n===e||!n)&&(n=new SS,this.clippingContext=n),n.update(e,t)):this.clippingContext!==e&&(this.clippingContext=e)}get clippingNeedsUpdate(){return this.clippingContext.version===this.clippingContextVersion?!1:(this.clippingContextVersion=this.clippingContext.version,!0)}getNodeBuilderState(){return this._nodeBuilderState||(this._nodeBuilderState=this._nodes.getForRender(this))}getMonitor(){return this._monitor||(this._monitor=this.getNodeBuilderState().monitor)}getBindings(){return this._bindings||(this._bindings=this.getNodeBuilderState().createBindings())}getIndex(){return this._geometries.getIndex(this)}getIndirect(){return this._geometries.getIndirect(this)}getChainArray(){return[this.object,this.material,this.context,this.lightsNode]}getAttributes(){if(this.attributes!==null)return this.attributes;const e=this.getNodeBuilderState().nodeAttributes,t=this.geometry,n=[],s=new Set;for(const r of e){const o=r.node&&r.node.attribute?r.node.attribute:t.getAttribute(r.name);if(o===void 0)continue;n.push(o);const a=o.isInterleavedBufferAttribute?o.data:o;s.add(a)}return this.attributes=n,this.vertexBuffers=Array.from(s.values()),n}getVertexBuffers(){return this.vertexBuffers===null&&this.getAttributes(),this.vertexBuffers}getDrawParameters(){const{object:e,material:t,geometry:n,group:s,drawRange:r}=this,o=this.drawParams||(this.drawParams={vertexCount:0,firstVertex:0,instanceCount:0,firstInstance:0}),a=this.getIndex(),c=a!==null,l=n.isInstancedBufferGeometry?n.instanceCount:e.count>1?e.count:1;if(l===0)return null;if(o.instanceCount=l,e.isBatchedMesh===!0)return o;let u=1;t.wireframe===!0&&!e.isPoints&&!e.isLineSegments&&!e.isLine&&!e.isLineLoop&&(u=2);let h=r.start*u,d=(r.start+r.count)*u;s!==null&&(h=Math.max(h,s.start*u),d=Math.min(d,(s.start+s.count)*u));const f=n.attributes.position;let m=1/0;c?m=a.count:f!=null&&(m=f.count),h=Math.max(h,0),d=Math.min(d,m);const _=d-h;return _<0||_===1/0?null:(o.vertexCount=_,o.firstVertex=h,o)}getGeometryCacheKey(){const{geometry:e}=this;let t="";for(const n of Object.keys(e.attributes).sort()){const s=e.attributes[n];t+=n+",",s.data&&(t+=s.data.stride+","),s.offset&&(t+=s.offset+","),s.itemSize&&(t+=s.itemSize+","),s.normalized&&(t+="n,")}return e.index&&(t+="index,"),t}getMaterialCacheKey(){const{object:e,material:t}=this;let n=t.customProgramCacheKey();for(const s of tie(t)){if(/^(is[A-Z]|_)|^(visible|version|uuid|name|opacity|userData)$/.test(s))continue;const r=t[s];let o;if(r!==null){const a=typeof r;a==="number"?o=r!==0?"1":"0":a==="object"?(o="{",r.isTexture&&(o+=r.mapping),o+="}"):o=String(r)}else o=String(r);n+=o+","}return n+=this.clippingContext.cacheKey+",",e.geometry&&(n+=this.getGeometryCacheKey()),e.skeleton&&(n+=e.skeleton.bones.length+","),e.morphTargetInfluences&&(n+=e.morphTargetInfluences.length+","),e.isBatchedMesh&&(n+=e._matricesTexture.uuid+",",e._colorsTexture!==null&&(n+=e._colorsTexture.uuid+",")),e.count>1&&(n+=e.uuid+","),zK(n)}get needsUpdate(){return this.initialNodesCacheKey!==this.getDynamicCacheKey()||this.clippingNeedsUpdate}getDynamicCacheKey(){let e=this._nodes.getCacheKey(this.scene,this.lightsNode);return this.object.receiveShadow&&(e+=1),e}getCacheKey(){return this.getMaterialCacheKey()+this.getDynamicCacheKey()}dispose(){this.material.removeEventListener("dispose",this.onMaterialDispose),this.onDispose()}}const ru=[];class iie{constructor(e,t,n,s,r,o){this.renderer=e,this.nodes=t,this.geometries=n,this.pipelines=s,this.bindings=r,this.info=o,this.chainMaps={}}get(e,t,n,s,r,o,a){const c=this.getChainMap(a);ru[0]=e,ru[1]=t,ru[2]=o,ru[3]=r;let l=c.get(ru);return l===void 0?(l=this.createRenderObject(this.nodes,this.geometries,this.renderer,e,t,n,s,r,o,a),c.set(ru,l)):(l.updateClipping(o.clippingContext),(l.version!==t.version||l.needsUpdate)&&(l.initialCacheKey!==l.getCacheKey()?(l.dispose(),l=this.get(e,t,n,s,r,o,a)):l.version=t.version)),l}getChainMap(e="default"){return this.chainMaps[e]||(this.chainMaps[e]=new kr)}dispose(){this.chainMaps={}}createRenderObject(e,t,n,s,r,o,a,c,l,u){const h=this.getChainMap(u),d=new nie(e,t,n,s,r,o,a,c,l);return d.onDispose=()=>{this.pipelines.delete(d),this.bindings.delete(d),this.nodes.delete(d),h.delete(d.getChainArray())},d}}class Ja{constructor(){this.data=new WeakMap}get(e){let t=this.data.get(e);return t===void 0&&(t={},this.data.set(e,t)),t}delete(e){let t;return this.data.has(e)&&(t=this.data.get(e),this.data.delete(e)),t}has(e){return this.data.has(e)}dispose(){this.data=new WeakMap}}const Nr={VERTEX:1,INDEX:2,STORAGE:3,INDIRECT:4},Na=16,sie=211,rie=212;class oie extends Ja{constructor(e){super(),this.backend=e}delete(e){const t=super.delete(e);return t!==void 0&&this.backend.destroyAttribute(e),t}update(e,t){const n=this.get(e);if(n.version===void 0)t===Nr.VERTEX?this.backend.createAttribute(e):t===Nr.INDEX?this.backend.createIndexAttribute(e):t===Nr.STORAGE?this.backend.createStorageAttribute(e):t===Nr.INDIRECT&&this.backend.createIndirectStorageAttribute(e),n.version=this._getBufferAttribute(e).version;else{const s=this._getBufferAttribute(e);(n.version<s.version||s.usage===bu)&&(this.backend.updateAttribute(e),n.version=s.version)}}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}function aie(i){for(let e=i.length-1;e>=0;--e)if(i[e]>=65535)return!0;return!1}function lL(i){return i.index!==null?i.index.version:i.attributes.position.version}function F1(i){const e=[],t=i.index,n=i.attributes.position;if(t!==null){const r=t.array;for(let o=0,a=r.length;o<a;o+=3){const c=r[o+0],l=r[o+1],u=r[o+2];e.push(c,l,l,u,u,c)}}else{const r=n.array;for(let o=0,a=r.length/3-1;o<a;o+=3){const c=o+0,l=o+1,u=o+2;e.push(c,l,l,u,u,c)}}const s=new(aie(e)?L2:D2)(e,1);return s.version=lL(i),s}class cie extends Ja{constructor(e,t){super(),this.attributes=e,this.info=t,this.wireframes=new WeakMap,this.attributeCall=new WeakMap}has(e){const t=e.geometry;return super.has(t)&&this.get(t).initialized===!0}updateForRender(e){this.has(e)===!1&&this.initGeometry(e),this.updateAttributes(e)}initGeometry(e){const t=e.geometry,n=this.get(t);n.initialized=!0,this.info.memory.geometries++;const s=()=>{this.info.memory.geometries--;const r=t.index,o=e.getAttributes();r!==null&&this.attributes.delete(r);for(const c of o)this.attributes.delete(c);const a=this.wireframes.get(t);a!==void 0&&this.attributes.delete(a),t.removeEventListener("dispose",s)};t.addEventListener("dispose",s)}updateAttributes(e){const t=e.getAttributes();for(const r of t)r.isStorageBufferAttribute||r.isStorageInstancedBufferAttribute?this.updateAttribute(r,Nr.STORAGE):this.updateAttribute(r,Nr.VERTEX);const n=this.getIndex(e);n!==null&&this.updateAttribute(n,Nr.INDEX);const s=e.geometry.indirect;s!==null&&this.updateAttribute(s,Nr.INDIRECT)}updateAttribute(e,t){const n=this.info.render.calls;e.isInterleavedBufferAttribute?this.attributeCall.get(e)===void 0?(this.attributes.update(e,t),this.attributeCall.set(e,n)):this.attributeCall.get(e.data)!==n&&(this.attributes.update(e,t),this.attributeCall.set(e.data,n),this.attributeCall.set(e,n)):this.attributeCall.get(e)!==n&&(this.attributes.update(e,t),this.attributeCall.set(e,n))}getIndirect(e){return e.geometry.indirect}getIndex(e){const{geometry:t,material:n}=e;let s=t.index;if(n.wireframe===!0){const r=this.wireframes;let o=r.get(t);o===void 0?(o=F1(t),r.set(t,o)):o.version!==lL(t)&&(this.attributes.delete(o),o=F1(t),r.set(t,o)),s=o}return s}}class lie{constructor(){this.autoReset=!0,this.frame=0,this.calls=0,this.render={calls:0,frameCalls:0,drawCalls:0,triangles:0,points:0,lines:0,timestamp:0,previousFrameCalls:0,timestampCalls:0},this.compute={calls:0,frameCalls:0,timestamp:0,previousFrameCalls:0,timestampCalls:0},this.memory={geometries:0,textures:0}}update(e,t,n){this.render.drawCalls++,e.isMesh||e.isSprite?this.render.triangles+=n*(t/3):e.isPoints?this.render.points+=n*t:e.isLineSegments?this.render.lines+=n*(t/2):e.isLine?this.render.lines+=n*(t-1):console.error("THREE.WebGPUInfo: Unknown object type.")}updateTimestamp(e,t){this[e].timestampCalls===0&&(this[e].timestamp=0),this[e].timestamp+=t,this[e].timestampCalls++,this[e].timestampCalls>=this[e].previousFrameCalls&&(this[e].timestampCalls=0)}reset(){const e=this.render.frameCalls;this.render.previousFrameCalls=e;const t=this.compute.frameCalls;this.compute.previousFrameCalls=t,this.render.drawCalls=0,this.render.frameCalls=0,this.compute.frameCalls=0,this.render.triangles=0,this.render.points=0,this.render.lines=0}dispose(){this.reset(),this.calls=0,this.render.calls=0,this.compute.calls=0,this.render.timestamp=0,this.compute.timestamp=0,this.memory.geometries=0,this.memory.textures=0}}class uL{constructor(e){this.cacheKey=e,this.usedTimes=0}}class uie extends uL{constructor(e,t,n){super(e),this.vertexProgram=t,this.fragmentProgram=n}}class hie extends uL{constructor(e,t){super(e),this.computeProgram=t,this.isComputePipeline=!0}}let die=0;class Gv{constructor(e,t,n=null,s=null){this.id=die++,this.code=e,this.stage=t,this.transforms=n,this.attributes=s,this.usedTimes=0}}class fie extends Ja{constructor(e,t){super(),this.backend=e,this.nodes=t,this.bindings=null,this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}getForCompute(e,t){const{backend:n}=this,s=this.get(e);if(this._needsComputeUpdate(e)){const r=s.pipeline;r&&(r.usedTimes--,r.computeProgram.usedTimes--);const o=this.nodes.getForCompute(e);let a=this.programs.compute.get(o.computeShader);a===void 0&&(r&&r.computeProgram.usedTimes===0&&this._releaseProgram(r.computeProgram),a=new Gv(o.computeShader,"compute",o.transforms,o.nodeAttributes),this.programs.compute.set(o.computeShader,a),n.createProgram(a));const c=this._getComputeCacheKey(e,a);let l=this.caches.get(c);l===void 0&&(r&&r.usedTimes===0&&this._releasePipeline(r),l=this._getComputePipeline(e,a,c,t)),l.usedTimes++,a.usedTimes++,s.version=e.version,s.pipeline=l}return s.pipeline}getForRender(e,t=null){const{backend:n}=this,s=this.get(e);if(this._needsRenderUpdate(e)){const r=s.pipeline;r&&(r.usedTimes--,r.vertexProgram.usedTimes--,r.fragmentProgram.usedTimes--);const o=e.getNodeBuilderState();let a=this.programs.vertex.get(o.vertexShader);a===void 0&&(r&&r.vertexProgram.usedTimes===0&&this._releaseProgram(r.vertexProgram),a=new Gv(o.vertexShader,"vertex"),this.programs.vertex.set(o.vertexShader,a),n.createProgram(a));let c=this.programs.fragment.get(o.fragmentShader);c===void 0&&(r&&r.fragmentProgram.usedTimes===0&&this._releaseProgram(r.fragmentProgram),c=new Gv(o.fragmentShader,"fragment"),this.programs.fragment.set(o.fragmentShader,c),n.createProgram(c));const l=this._getRenderCacheKey(e,a,c);let u=this.caches.get(l);u===void 0?(r&&r.usedTimes===0&&this._releasePipeline(r),u=this._getRenderPipeline(e,a,c,l,t)):e.pipeline=u,u.usedTimes++,a.usedTimes++,c.usedTimes++,s.pipeline=u}return s.pipeline}delete(e){const t=this.get(e).pipeline;return t&&(t.usedTimes--,t.usedTimes===0&&this._releasePipeline(t),t.isComputePipeline?(t.computeProgram.usedTimes--,t.computeProgram.usedTimes===0&&this._releaseProgram(t.computeProgram)):(t.fragmentProgram.usedTimes--,t.vertexProgram.usedTimes--,t.vertexProgram.usedTimes===0&&this._releaseProgram(t.vertexProgram),t.fragmentProgram.usedTimes===0&&this._releaseProgram(t.fragmentProgram))),super.delete(e)}dispose(){super.dispose(),this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}updateForRender(e){this.getForRender(e)}_getComputePipeline(e,t,n,s){n=n||this._getComputeCacheKey(e,t);let r=this.caches.get(n);return r===void 0&&(r=new hie(n,t),this.caches.set(n,r),this.backend.createComputePipeline(r,s)),r}_getRenderPipeline(e,t,n,s,r){s=s||this._getRenderCacheKey(e,t,n);let o=this.caches.get(s);return o===void 0&&(o=new uie(s,t,n),this.caches.set(s,o),e.pipeline=o,this.backend.createRenderPipeline(e,r)),o}_getComputeCacheKey(e,t){return e.id+","+t.id}_getRenderCacheKey(e,t,n){return t.id+","+n.id+","+this.backend.getRenderCacheKey(e)}_releasePipeline(e){this.caches.delete(e.cacheKey)}_releaseProgram(e){const t=e.code,n=e.stage;this.programs[n].delete(t)}_needsComputeUpdate(e){const t=this.get(e);return t.pipeline===void 0||t.version!==e.version}_needsRenderUpdate(e){return this.get(e).pipeline===void 0||this.backend.needsRenderUpdate(e)}}class pie extends Ja{constructor(e,t,n,s,r,o){super(),this.backend=e,this.textures=n,this.pipelines=r,this.attributes=s,this.nodes=t,this.info=o,this.pipelines.bindings=this}getForRender(e){const t=e.getBindings();for(const n of t){const s=this.get(n);s.bindGroup===void 0&&(this._init(n),this.backend.createBindings(n,t),s.bindGroup=n)}return t}getForCompute(e){const t=this.nodes.getForCompute(e).bindings;for(const n of t){const s=this.get(n);s.bindGroup===void 0&&(this._init(n),this.backend.createBindings(n,t),s.bindGroup=n)}return t}updateForCompute(e){this._updateBindings(this.getForCompute(e))}updateForRender(e){this._updateBindings(this.getForRender(e))}_updateBindings(e){for(const t of e)this._update(t,e)}_init(e){for(const t of e.bindings)if(t.isSampledTexture)this.textures.updateTexture(t.texture);else if(t.isStorageBuffer){const n=t.attribute,s=n.isIndirectStorageBufferAttribute?Nr.INDIRECT:Nr.STORAGE;this.attributes.update(n,s)}}_update(e,t){const{backend:n}=this;let s=!1;for(const r of e.bindings)if(!(r.isNodeUniformsGroup&&!this.nodes.updateGroup(r))){if(r.isUniformBuffer)r.update()&&n.updateBinding(r);else if(r.isSampler)r.update();else if(r.isSampledTexture){r.needsBindingsUpdate(this.textures.get(r.texture).generation)&&(s=!0);const o=r.update(),a=r.texture;o&&this.textures.updateTexture(a);const c=n.get(a);if(n.isWebGPUBackend===!0&&c.texture===void 0&&c.externalTexture===void 0&&(console.error("Bindings._update: binding should be available:",r,o,a,r.textureNode.value,s),this.textures.updateTexture(a),s=!0),a.isStorageTexture===!0){const l=this.get(a);r.store===!0?l.needsMipmap=!0:this.textures.needsMipmaps(a)&&l.needsMipmap===!0&&(this.backend.generateMipmaps(a),l.needsMipmap=!1)}}}s===!0&&this.backend.updateBindings(e,t)}}function mie(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.material.id!==e.material.id?i.material.id-e.material.id:i.z!==e.z?i.z-e.z:i.id-e.id}function U1(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.z!==e.z?e.z-i.z:i.id-e.id}function O1(i){return(i.transmission>0||i.transmissionNode)&&i.side===Bu&&i.forceSinglePass===!1}class gie{constructor(e,t,n){this.renderItems=[],this.renderItemsIndex=0,this.opaque=[],this.transparentDoublePass=[],this.transparent=[],this.bundles=[],this.lightsNode=e.getNode(t,n),this.lightsArray=[],this.scene=t,this.camera=n,this.occlusionQueryCount=0}begin(){return this.renderItemsIndex=0,this.opaque.length=0,this.transparentDoublePass.length=0,this.transparent.length=0,this.bundles.length=0,this.lightsArray.length=0,this.occlusionQueryCount=0,this}getNextRenderItem(e,t,n,s,r,o){let a=this.renderItems[this.renderItemsIndex];return a===void 0?(a={id:e.id,object:e,geometry:t,material:n,groupOrder:s,renderOrder:e.renderOrder,z:r,group:o},this.renderItems[this.renderItemsIndex]=a):(a.id=e.id,a.object=e,a.geometry=t,a.material=n,a.groupOrder=s,a.renderOrder=e.renderOrder,a.z=r,a.group=o),this.renderItemsIndex++,a}push(e,t,n,s,r,o){const a=this.getNextRenderItem(e,t,n,s,r,o);e.occlusionTest===!0&&this.occlusionQueryCount++,n.transparent===!0||n.transmission>0?(O1(n)&&this.transparentDoublePass.push(a),this.transparent.push(a)):this.opaque.push(a)}unshift(e,t,n,s,r,o){const a=this.getNextRenderItem(e,t,n,s,r,o);n.transparent===!0||n.transmission>0?(O1(n)&&this.transparentDoublePass.unshift(a),this.transparent.unshift(a)):this.opaque.unshift(a)}pushBundle(e){this.bundles.push(e)}pushLight(e){this.lightsArray.push(e)}sort(e,t){this.opaque.length>1&&this.opaque.sort(e||mie),this.transparentDoublePass.length>1&&this.transparentDoublePass.sort(t||U1),this.transparent.length>1&&this.transparent.sort(t||U1)}finish(){this.lightsNode.setLights(this.lightsArray);for(let e=this.renderItemsIndex,t=this.renderItems.length;e<t;e++){const n=this.renderItems[e];if(n.id===null)break;n.id=null,n.object=null,n.geometry=null,n.material=null,n.groupOrder=null,n.renderOrder=null,n.z=null,n.group=null}}}class _ie{constructor(e){this.lighting=e,this.lists=new kr}get(e,t){const n=this.lists,s=[e,t];let r=n.get(s);return r===void 0&&(r=new gie(this.lighting,e,t),n.set(s,r)),r}dispose(){this.lists=new kr}}let vie=0;class xie{constructor(){this.id=vie++,this.color=!0,this.clearColor=!0,this.clearColorValue={r:0,g:0,b:0,a:1},this.depth=!0,this.clearDepth=!0,this.clearDepthValue=1,this.stencil=!1,this.clearStencil=!0,this.clearStencilValue=1,this.viewport=!1,this.viewportValue=new Yt,this.scissor=!1,this.scissorValue=new Yt,this.textures=null,this.depthTexture=null,this.activeCubeFace=0,this.sampleCount=1,this.width=0,this.height=0,this.isRenderContext=!0}getCacheKey(){return hL(this)}}function hL(i){const{textures:e,activeCubeFace:t}=i,n=[t];for(const s of e)n.push(s.id);return Q2(n)}class yie{constructor(){this.chainMaps={}}get(e,t,n=null){const s=[e,t];let r;if(n===null)r="default";else{const c=n.texture.format;r=`${n.textures.length}:${c}:${n.samples}:${n.depthBuffer}:${n.stencilBuffer}`}const o=this.getChainMap(r);let a=o.get(s);return a===void 0&&(a=new xie,o.set(s,a)),n!==null&&(a.sampleCount=n.samples===0?1:n.samples),a}getChainMap(e){return this.chainMaps[e]||(this.chainMaps[e]=new kr)}dispose(){this.chainMaps={}}}const Sie=new fe;class bie extends Ja{constructor(e,t,n){super(),this.renderer=e,this.backend=t,this.info=n}updateRenderTarget(e,t=0){const n=this.get(e),s=e.samples===0?1:e.samples,r=n.depthTextureMips||(n.depthTextureMips={}),o=e.textures,a=this.getSize(o[0]),c=a.width>>t,l=a.height>>t;let u=e.depthTexture||r[t];const h=e.depthBuffer===!0||e.stencilBuffer===!0;let d=!1;u===void 0&&h&&(u=new Uh,u.format=e.stencilBuffer?hh:Vc,u.type=e.stencilBuffer?Bf:ri,u.image.width=c,u.image.height=l,r[t]=u),(n.width!==a.width||a.height!==n.height)&&(d=!0,u&&(u.needsUpdate=!0,u.image.width=c,u.image.height=l)),n.width=a.width,n.height=a.height,n.textures=o,n.depthTexture=u||null,n.depth=e.depthBuffer,n.stencil=e.stencilBuffer,n.renderTarget=e,n.sampleCount!==s&&(d=!0,u&&(u.needsUpdate=!0),n.sampleCount=s);const f={sampleCount:s};for(let m=0;m<o.length;m++){const _=o[m];d&&(_.needsUpdate=!0),this.updateTexture(_,f)}if(u&&this.updateTexture(u,f),n.initialized!==!0){n.initialized=!0;const m=()=>{e.removeEventListener("dispose",m);for(let _=0;_<o.length;_++)this._destroyTexture(o[_]);u&&this._destroyTexture(u),this.delete(e)};e.addEventListener("dispose",m)}}updateTexture(e,t={}){const n=this.get(e);if(n.initialized===!0&&n.version===e.version)return;const s=e.isRenderTargetTexture||e.isDepthTexture||e.isFramebufferTexture,r=this.backend;if(s&&n.initialized===!0&&(r.destroySampler(e),r.destroyTexture(e)),e.isFramebufferTexture){const l=this.renderer.getRenderTarget();l?e.type=l.texture.type:e.type=Oa}const{width:o,height:a,depth:c}=this.getSize(e);if(t.width=o,t.height=a,t.depth=c,t.needsMipmaps=this.needsMipmaps(e),t.levels=t.needsMipmaps?this.getMipLevels(e,o,a):1,s||e.isStorageTexture===!0)r.createSampler(e),r.createTexture(e,t),n.generation=e.version;else if(n.initialized!==!0&&r.createSampler(e),e.version>0){const u=e.image;if(u===void 0)console.warn("THREE.Renderer: Texture marked for update but image is undefined.");else if(u.complete===!1)console.warn("THREE.Renderer: Texture marked for update but image is incomplete.");else{if(e.images){const h=[];for(const d of e.images)h.push(d);t.images=h}else t.image=u;(n.isDefaultTexture===void 0||n.isDefaultTexture===!0)&&(r.createTexture(e,t),n.isDefaultTexture=!1,n.generation=e.version),e.source.dataReady===!0&&r.updateTexture(e,t),t.needsMipmaps&&e.mipmaps.length===0&&r.generateMipmaps(e)}}else r.createDefaultTexture(e),n.isDefaultTexture=!0,n.generation=e.version;if(n.initialized!==!0){n.initialized=!0,n.generation=e.version,this.info.memory.textures++;const l=()=>{e.removeEventListener("dispose",l),this._destroyTexture(e),this.info.memory.textures--};e.addEventListener("dispose",l)}n.version=e.version}getSize(e,t=Sie){let n=e.images?e.images[0]:e.image;return n?(n.image!==void 0&&(n=n.image),t.width=n.width,t.height=n.height,t.depth=e.isCubeTexture?6:n.depth||1):t.width=t.height=t.depth=1,t}getMipLevels(e,t,n){let s;return e.isCompressedTexture?s=e.mipmaps.length:s=Math.floor(Math.log2(Math.max(t,n)))+1,s}needsMipmaps(e){return this.isEnvironmentTexture(e)||e.isCompressedTexture===!0||e.generateMipmaps}isEnvironmentTexture(e){const t=e.mapping;return t===Uf||t===Of||t===nl||t===uh}_destroyTexture(e){this.backend.destroySampler(e),this.backend.destroyTexture(e),this.delete(e)}}class CM extends Zt{constructor(e,t,n,s=1){super(e,t,n),this.a=s}set(e,t,n,s=1){return this.a=s,super.set(e,t,n)}copy(e){return e.a!==void 0&&(this.a=e.a),super.copy(e)}clone(){return new this.constructor(this.r,this.g,this.b,this.a)}}class Mie extends Kt{static get type(){return"ParameterNode"}constructor(e,t=null){super(e,t),this.isParameterNode=!0}getHash(){return this.uuid}generate(){return this.name}}class Tie extends bt{static get type(){return"StackNode"}constructor(e=null){super(),this.nodes=[],this.outputNode=null,this.parent=e,this._currentCond=null,this.isStackNode=!0}getNodeType(e){return this.outputNode?this.outputNode.getNodeType(e):"void"}add(e){return this.nodes.push(e),this}If(e,t){const n=new Zm(t);return this._currentCond=$i(e,n),this.add(this._currentCond)}ElseIf(e,t){const n=new Zm(t),s=$i(e,n);return this._currentCond.elseNode=s,this._currentCond=s,this}Else(e){return this._currentCond.elseNode=new Zm(e),this}build(e,...t){const n=rD();Hg(this);for(const s of this.nodes)s.build(e,"void");return Hg(n),this.outputNode?this.outputNode.build(e,...t):super.build(e,...t)}else(...e){return console.warn("TSL.StackNode: .else() has been renamed to .Else()."),this.Else(...e)}elseif(...e){return console.warn("TSL.StackNode: .elseif() has been renamed to .ElseIf()."),this.ElseIf(...e)}}const Vv=Pe(Tie);new Ea;new fe;new fe;new fe;new _n;new fe(0,0,-1);new Yt;new fe;new fe;new Yt;new Bt;const Eie=new Fh;vf.flipX();Eie.depthTexture=new Uh(1,1);const Hv=new cM(-1,1,1,-1,0,1);class wie extends fl{constructor(e=!1){super();const t=e===!1?[0,-1,0,1,2,1]:[0,2,0,0,2,0];this.setAttribute("position",new Vo([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new Vo(t,2))}}const Aie=new wie;class dL extends rl{constructor(e=null){super(Aie,e),this.camera=Hv,this.isQuadMesh=!0}renderAsync(e){return e.renderAsync(this,Hv)}render(e){e.render(this,Hv)}}const fd=new mr,Wv=new _n;class Xi extends bt{static get type(){return"SceneNode"}constructor(e=Xi.BACKGROUND_BLURRINESS,t=null){super(),this.scope=e,this.scene=t}setup(e){const t=this.scope,n=this.scene!==null?this.scene:e.scene;let s;return t===Xi.BACKGROUND_BLURRINESS?s=Sn("backgroundBlurriness","float",n):t===Xi.BACKGROUND_INTENSITY?s=Sn("backgroundIntensity","float",n):t===Xi.BACKGROUND_ROTATION?s=yt("mat4").label("backgroundRotation").setGroup(Ft).onRenderUpdate(()=>{const r=n.background;return r!==null&&r.isTexture&&r.mapping!==Xb?(fd.copy(n.backgroundRotation),fd.x*=-1,fd.y*=-1,fd.z*=-1,Wv.makeRotationFromEuler(fd)):Wv.identity(),Wv}):console.error("THREE.SceneNode: Unknown scope:",t),s}}Xi.BACKGROUND_BLURRINESS="backgroundBlurriness";Xi.BACKGROUND_INTENSITY="backgroundIntensity";Xi.BACKGROUND_ROTATION="backgroundRotation";const Cie=We(Xi,Xi.BACKGROUND_BLURRINESS),B1=We(Xi,Xi.BACKGROUND_INTENSITY),Rie=We(Xi,Xi.BACKGROUND_ROTATION),Eu={PointList:"point-list",LineList:"line-list",LineStrip:"line-strip",TriangleList:"triangle-list",TriangleStrip:"triangle-strip"},ii={Never:"never",Less:"less",Equal:"equal",LessEqual:"less-equal",Greater:"greater",NotEqual:"not-equal",GreaterEqual:"greater-equal",Always:"always"},si={Store:"store",Discard:"discard"},In={Load:"load",Clear:"clear"},$v={CCW:"ccw",CW:"cw"},qv={None:"none",Front:"front",Back:"back"},ph={Uint16:"uint16",Uint32:"uint32"},K={R8Unorm:"r8unorm",R8Snorm:"r8snorm",R8Uint:"r8uint",R8Sint:"r8sint",R16Uint:"r16uint",R16Sint:"r16sint",R16Float:"r16float",RG8Unorm:"rg8unorm",RG8Snorm:"rg8snorm",RG8Uint:"rg8uint",RG8Sint:"rg8sint",R32Uint:"r32uint",R32Sint:"r32sint",R32Float:"r32float",RG16Uint:"rg16uint",RG16Sint:"rg16sint",RG16Float:"rg16float",RGBA8Unorm:"rgba8unorm",RGBA8UnormSRGB:"rgba8unorm-srgb",RGBA8Snorm:"rgba8snorm",RGBA8Uint:"rgba8uint",RGBA8Sint:"rgba8sint",BGRA8Unorm:"bgra8unorm",BGRA8UnormSRGB:"bgra8unorm-srgb",RGB9E5UFloat:"rgb9e5ufloat",RGB10A2Unorm:"rgb10a2unorm",RG11B10uFloat:"rgb10a2unorm",RG32Uint:"rg32uint",RG32Sint:"rg32sint",RG32Float:"rg32float",RGBA16Uint:"rgba16uint",RGBA16Sint:"rgba16sint",RGBA16Float:"rgba16float",RGBA32Uint:"rgba32uint",RGBA32Sint:"rgba32sint",RGBA32Float:"rgba32float",Stencil8:"stencil8",Depth16Unorm:"depth16unorm",Depth24Plus:"depth24plus",Depth24PlusStencil8:"depth24plus-stencil8",Depth32Float:"depth32float",Depth32FloatStencil8:"depth32float-stencil8",BC1RGBAUnorm:"bc1-rgba-unorm",BC1RGBAUnormSRGB:"bc1-rgba-unorm-srgb",BC2RGBAUnorm:"bc2-rgba-unorm",BC2RGBAUnormSRGB:"bc2-rgba-unorm-srgb",BC3RGBAUnorm:"bc3-rgba-unorm",BC3RGBAUnormSRGB:"bc3-rgba-unorm-srgb",BC4RUnorm:"bc4-r-unorm",BC4RSnorm:"bc4-r-snorm",BC5RGUnorm:"bc5-rg-unorm",BC5RGSnorm:"bc5-rg-snorm",BC6HRGBUFloat:"bc6h-rgb-ufloat",BC6HRGBFloat:"bc6h-rgb-float",BC7RGBAUnorm:"bc7-rgba-unorm",BC7RGBAUnormSRGB:"bc7-rgba-srgb",ETC2RGB8Unorm:"etc2-rgb8unorm",ETC2RGB8UnormSRGB:"etc2-rgb8unorm-srgb",ETC2RGB8A1Unorm:"etc2-rgb8a1unorm",ETC2RGB8A1UnormSRGB:"etc2-rgb8a1unorm-srgb",ETC2RGBA8Unorm:"etc2-rgba8unorm",ETC2RGBA8UnormSRGB:"etc2-rgba8unorm-srgb",EACR11Unorm:"eac-r11unorm",EACR11Snorm:"eac-r11snorm",EACRG11Unorm:"eac-rg11unorm",EACRG11Snorm:"eac-rg11snorm",ASTC4x4Unorm:"astc-4x4-unorm",ASTC4x4UnormSRGB:"astc-4x4-unorm-srgb",ASTC5x4Unorm:"astc-5x4-unorm",ASTC5x4UnormSRGB:"astc-5x4-unorm-srgb",ASTC5x5Unorm:"astc-5x5-unorm",ASTC5x5UnormSRGB:"astc-5x5-unorm-srgb",ASTC6x5Unorm:"astc-6x5-unorm",ASTC6x5UnormSRGB:"astc-6x5-unorm-srgb",ASTC6x6Unorm:"astc-6x6-unorm",ASTC6x6UnormSRGB:"astc-6x6-unorm-srgb",ASTC8x5Unorm:"astc-8x5-unorm",ASTC8x5UnormSRGB:"astc-8x5-unorm-srgb",ASTC8x6Unorm:"astc-8x6-unorm",ASTC8x6UnormSRGB:"astc-8x6-unorm-srgb",ASTC8x8Unorm:"astc-8x8-unorm",ASTC8x8UnormSRGB:"astc-8x8-unorm-srgb",ASTC10x5Unorm:"astc-10x5-unorm",ASTC10x5UnormSRGB:"astc-10x5-unorm-srgb",ASTC10x6Unorm:"astc-10x6-unorm",ASTC10x6UnormSRGB:"astc-10x6-unorm-srgb",ASTC10x8Unorm:"astc-10x8-unorm",ASTC10x8UnormSRGB:"astc-10x8-unorm-srgb",ASTC10x10Unorm:"astc-10x10-unorm",ASTC10x10UnormSRGB:"astc-10x10-unorm-srgb",ASTC12x10Unorm:"astc-12x10-unorm",ASTC12x10UnormSRGB:"astc-12x10-unorm-srgb",ASTC12x12Unorm:"astc-12x12-unorm",ASTC12x12UnormSRGB:"astc-12x12-unorm-srgb"},Xv={ClampToEdge:"clamp-to-edge",Repeat:"repeat",MirrorRepeat:"mirror-repeat"},Pc={Linear:"linear",Nearest:"nearest"},vt={Zero:"zero",One:"one",Src:"src",OneMinusSrc:"one-minus-src",SrcAlpha:"src-alpha",OneMinusSrcAlpha:"one-minus-src-alpha",Dst:"dst",OneMinusDstColor:"one-minus-dst",DstAlpha:"dst-alpha",OneMinusDstAlpha:"one-minus-dst-alpha",SrcAlphaSaturated:"src-alpha-saturated",Constant:"constant",OneMinusConstant:"one-minus-constant"},gc={Add:"add",Subtract:"subtract",ReverseSubtract:"reverse-subtract",Min:"min",Max:"max"},k1={None:0,Red:1,Green:2,Blue:4,Alpha:8,All:15},Sa={Keep:"keep",Zero:"zero",Replace:"replace",Invert:"invert",IncrementClamp:"increment-clamp",DecrementClamp:"decrement-clamp",IncrementWrap:"increment-wrap",DecrementWrap:"decrement-wrap"},bS={Uniform:"uniform",Storage:"storage",ReadOnlyStorage:"read-only-storage"},z1={WriteOnly:"write-only",ReadOnly:"read-only",ReadWrite:"read-write"},pd={Float:"float",UnfilterableFloat:"unfilterable-float",Depth:"depth",SInt:"sint",UInt:"uint"},G1={OneD:"1d",TwoD:"2d",ThreeD:"3d"},Es={OneD:"1d",TwoD:"2d",TwoDArray:"2d-array",Cube:"cube",CubeArray:"cube-array",ThreeD:"3d"},Nie={All:"all",StencilOnly:"stencil-only",DepthOnly:"depth-only"},mm={Vertex:"vertex",Instance:"instance"},MS={DepthClipControl:"depth-clip-control",Depth32FloatStencil8:"depth32float-stencil8",TextureCompressionBC:"texture-compression-bc",TextureCompressionETC2:"texture-compression-etc2",TextureCompressionASTC:"texture-compression-astc",TimestampQuery:"timestamp-query",IndirectFirstInstance:"indirect-first-instance",ShaderF16:"shader-f16",RG11B10UFloat:"rg11b10ufloat-renderable",BGRA8UNormStorage:"bgra8unorm-storage",Float32Filterable:"float32-filterable",ClipDistances:"clip-distances",DualSourceBlending:"dual-source-blending",Subgroups:"subgroups"},Pie=new Bt;class Die extends $f{static get type(){return"PassTextureNode"}constructor(e,t){super(t),this.passNode=e,this.setUpdateMatrix(!1)}setup(e){return e.object.isQuadMesh&&this.passNode.build(e),super.setup(e)}clone(){return new this.constructor(this.passNode,this.value)}}class V1 extends Die{static get type(){return"PassMultipleTextureNode"}constructor(e,t,n=!1){super(e,null),this.textureName=t,this.previousTexture=n}updateTexture(){this.value=this.previousTexture?this.passNode.getPreviousTexture(this.textureName):this.passNode.getTexture(this.textureName)}setup(e){return this.updateTexture(),super.setup(e)}clone(){return new this.constructor(this.passNode,this.textureName,this.previousTexture)}}class U_ extends Gn{static get type(){return"PassNode"}constructor(e,t,n,s={}){super("vec4"),this.scope=e,this.scene=t,this.camera=n,this.options=s,this._pixelRatio=1,this._width=1,this._height=1;const r=new Uh;r.isRenderTargetTexture=!0,r.name="depth";const o=new Fh(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:ko,...s});o.texture.name="output",o.depthTexture=r,this.renderTarget=o,this.updateBeforeType=At.FRAME,this._textures={output:o.texture,depth:r},this._textureNodes={},this._linearDepthNodes={},this._viewZNodes={},this._previousTextures={},this._previousTextureNodes={},this._cameraNear=yt(0),this._cameraFar=yt(0),this._mrt=null,this.isPassNode=!0}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}isGlobal(){return!0}getTexture(e){let t=this._textures[e];return t===void 0&&(t=this.renderTarget.texture.clone(),t.isRenderTargetTexture=!0,t.name=e,this._textures[e]=t,this.renderTarget.textures.push(t)),t}getPreviousTexture(e){let t=this._previousTextures[e];return t===void 0&&(t=this.getTexture(e).clone(),t.isRenderTargetTexture=!0,this._previousTextures[e]=t),t}toggleTexture(e){const t=this._previousTextures[e];if(t!==void 0){const n=this._textures[e],s=this.renderTarget.textures.indexOf(n);this.renderTarget.textures[s]=t,this._textures[e]=t,this._previousTextures[e]=n,this._textureNodes[e].updateTexture(),this._previousTextureNodes[e].updateTexture()}}getTextureNode(e="output"){let t=this._textureNodes[e];return t===void 0&&(t=Ve(new V1(this,e)),t.updateTexture(),this._textureNodes[e]=t),t}getPreviousTextureNode(e="output"){let t=this._previousTextureNodes[e];return t===void 0&&(this._textureNodes[e]===void 0&&this.getTextureNode(e),t=Ve(new V1(this,e,!0)),t.updateTexture(),this._previousTextureNodes[e]=t),t}getViewZNode(e="depth"){let t=this._viewZNodes[e];if(t===void 0){const n=this._cameraNear,s=this._cameraFar;this._viewZNodes[e]=t=$D(this.getTextureNode(e),n,s)}return t}getLinearDepthNode(e="depth"){let t=this._linearDepthNodes[e];if(t===void 0){const n=this._cameraNear,s=this._cameraFar,r=this.getViewZNode(e);this._linearDepthNodes[e]=t=kd(r,n,s)}return t}setup({renderer:e}){return this.renderTarget.samples=this.options.samples===void 0?e.samples:this.options.samples,e.backend.isWebGLBackend===!0&&(this.renderTarget.samples=0),this.renderTarget.depthTexture.isMultisampleRenderTargetTexture=this.renderTarget.samples>1,this.scope===U_.COLOR?this.getTextureNode():this.getLinearDepthNode()}updateBefore(e){const{renderer:t}=e,{scene:n,camera:s}=this;this._pixelRatio=t.getPixelRatio();const r=t.getSize(Pie);this.setSize(r.width,r.height);const o=t.getRenderTarget(),a=t.getMRT();this._cameraNear.value=s.near,this._cameraFar.value=s.far;for(const c in this._previousTextures)this.toggleTexture(c);t.setRenderTarget(this.renderTarget),t.setMRT(this._mrt),t.render(n,s),t.setRenderTarget(o),t.setMRT(a)}setSize(e,t){this._width=e,this._height=t;const n=this._width*this._pixelRatio,s=this._height*this._pixelRatio;this.renderTarget.setSize(n,s)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget.dispose()}}U_.COLOR="color";U_.DEPTH="depth";const Lie=Ze(([i,e])=>i.mul(e).clamp()).setLayout({name:"linearToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),Iie=Ze(([i,e])=>(i=i.mul(e),i.div(i.add(1)).clamp())).setLayout({name:"reinhardToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),Fie=Ze(([i,e])=>{i=i.mul(e),i=i.sub(.004).max(0);const t=i.mul(i.mul(6.2).add(.5)),n=i.mul(i.mul(6.2).add(1.7)).add(.06);return t.div(n).pow(2.2)}).setLayout({name:"cineonToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),Uie=Ze(([i])=>{const e=i.mul(i.add(.0245786)).sub(90537e-9),t=i.mul(i.add(.432951).mul(.983729)).add(.238081);return e.div(t)}),Oie=Ze(([i,e])=>{const t=Bi(.59719,.35458,.04823,.076,.90834,.01566,.0284,.13383,.83777),n=Bi(1.60475,-.53108,-.07367,-.10208,1.10813,-.00605,-.00327,-.07276,1.07602);return i=i.mul(e).div(.6),i=t.mul(i),i=Uie(i),i=n.mul(i),i.clamp()}).setLayout({name:"acesFilmicToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),Bie=Bi(Te(1.6605,-.1246,-.0182),Te(-.5876,1.1329,-.1006),Te(-.0728,-.0083,1.1187)),kie=Bi(Te(.6274,.0691,.0164),Te(.3293,.9195,.088),Te(.0433,.0113,.8956)),zie=Ze(([i])=>{const e=Te(i).toVar(),t=Te(e.mul(e)).toVar(),n=Te(t.mul(t)).toVar();return Ae(15.5).mul(n.mul(t)).sub(Dt(40.14,n.mul(e))).add(Dt(31.96,n).sub(Dt(6.868,t.mul(e))).add(Dt(.4298,t).add(Dt(.1191,e).sub(.00232))))}),Gie=Ze(([i,e])=>{const t=Te(i).toVar(),n=Bi(Te(.856627153315983,.137318972929847,.11189821299995),Te(.0951212405381588,.761241990602591,.0767994186031903),Te(.0482516061458583,.101439036467562,.811302368396859)),s=Bi(Te(1.1271005818144368,-.1413297634984383,-.14132976349843826),Te(-.11060664309660323,1.157823702216272,-.11060664309660294),Te(-.016493938717834573,-.016493938717834257,1.2519364065950405)),r=Ae(-12.47393),o=Ae(4.026069);return t.mulAssign(e),t.assign(kie.mul(t)),t.assign(n.mul(t)),t.assign(Fs(t,1e-10)),t.assign(Ho(t)),t.assign(t.sub(r).div(o.sub(r))),t.assign(qo(t,0,1)),t.assign(zie(t)),t.assign(s.mul(t)),t.assign(C_(Fs(Te(0),t),Te(2.2))),t.assign(Bie.mul(t)),t.assign(qo(t,0,1)),t}).setLayout({name:"agxToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),Vie=Ze(([i,e])=>{const t=Ae(.76),n=Ae(.15);i=i.mul(e);const s=pf(i.r,pf(i.g,i.b)),r=$i(s.lessThan(.08),s.sub(Dt(6.25,s.mul(s))),.04);i.subAssign(r);const o=Fs(i.r,Fs(i.g,i.b));li(o.lessThan(t),()=>i);const a=ms(1,t),c=ms(1,a.mul(a).div(o.add(a.sub(t))));i.mulAssign(c.div(o));const l=ms(1,qa(1,n.mul(o.sub(c)).add(1)));return ln(i,Te(c),l)}).setLayout({name:"neutralToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]});class vi extends bt{static get type(){return"CodeNode"}constructor(e="",t=[],n=""){super("code"),this.isCodeNode=!0,this.code=e,this.language=n,this.includes=t}isGlobal(){return!0}setIncludes(e){return this.includes=e,this}getIncludes(){return this.includes}generate(e){const t=this.getIncludes(e);for(const s of t)s.build(e);const n=e.getCodeFromNode(this,this.getNodeType(e));return n.code=this.code,n.code}serialize(e){super.serialize(e),e.code=this.code,e.language=this.language}deserialize(e){super.deserialize(e),this.code=e.code,this.language=e.language}}class Hie extends vi{static get type(){return"FunctionNode"}constructor(e="",t=[],n=""){super(e,t,n)}getNodeType(e){return this.getNodeFunction(e).type}getInputs(e){return this.getNodeFunction(e).inputs}getNodeFunction(e){const t=e.getDataFromNode(this);let n=t.nodeFunction;return n===void 0&&(n=e.parser.parseFunction(this.code),t.nodeFunction=n),n}generate(e,t){super.generate(e);const n=this.getNodeFunction(e),s=n.name,r=n.type,o=e.getCodeFromNode(this,r);s!==""&&(o.name=s);const a=e.getPropertyName(o),c=this.getNodeFunction(e).getCode(a);return o.code=c+`
`,t==="property"?a:e.format(`${a}()`,r,t)}}class Wie extends Map{get(e,t=null,...n){if(this.has(e))return super.get(e);if(t!==null){const s=t(...n);return this.set(e,s),s}}}new Wie;class fL extends bt{static get type(){return"FogNode"}constructor(e,t){super("float"),this.isFogNode=!0,this.colorNode=e,this.factorNode=t}getViewZNode(e){let t;const n=e.context.getViewZ;return n!==void 0&&(t=n(this)),(t||ai.z).negate()}setup(){return this.factorNode}}class $ie extends fL{static get type(){return"FogRangeNode"}constructor(e,t,n){super(e),this.isFogRangeNode=!0,this.nearNode=t,this.farNode=n}setup(e){const t=this.getViewZNode(e);return ol(this.nearNode,this.farNode,t)}}const qie=Pe($ie);class Xie extends fL{static get type(){return"FogExp2Node"}constructor(e,t){super(e),this.isFogExp2Node=!0,this.densityNode=t}setup(e){const t=this.getViewZNode(e),n=this.densityNode;return n.mul(n,t,t).negate().exp().oneMinus()}}const jie=Pe(Xie);class Yie extends bt{constructor(e){super(),this.scope=e}generate(e){const{scope:t}=this,{renderer:n}=e;n.backend.isWebGLBackend===!0?e.addFlowCode(`	// ${t}Barrier 
`):e.addLineFlowCode(`${t}Barrier()`,this)}}Pe(Yie);class qr extends Gn{static get type(){return"AtomicFunctionNode"}constructor(e,t,n,s=null){super("uint"),this.method=e,this.pointerNode=t,this.valueNode=n,this.storeNode=s}getInputType(e){return this.pointerNode.getNodeType(e)}getNodeType(e){return this.getInputType(e)}generate(e){const t=this.method,n=this.getNodeType(e),s=this.getInputType(e),r=this.pointerNode,o=this.valueNode,a=[];a.push(`&${r.build(e,s)}`),a.push(o.build(e,s));const c=`${e.getMethod(t,n)}( ${a.join(", ")} )`;if(this.storeNode!==null){const l=this.storeNode.build(e,s);e.addLineFlowCode(`${l} = ${c}`,this)}else e.addLineFlowCode(c,this)}}qr.ATOMIC_LOAD="atomicLoad";qr.ATOMIC_STORE="atomicStore";qr.ATOMIC_ADD="atomicAdd";qr.ATOMIC_SUB="atomicSub";qr.ATOMIC_MAX="atomicMax";qr.ATOMIC_MIN="atomicMin";qr.ATOMIC_AND="atomicAnd";qr.ATOMIC_OR="atomicOr";qr.ATOMIC_XOR="atomicXor";Pe(qr);let gm;function RM(i){gm=gm||new WeakMap;let e=gm.get(i);return e===void 0&&gm.set(i,e={}),e}function pL(i){const e=RM(i);return e.position||(e.position=yt(new fe).setGroup(Ft).onRenderUpdate((t,n)=>n.value.setFromMatrixPosition(i.matrixWorld)))}function Zie(i){const e=RM(i);return e.targetPosition||(e.targetPosition=yt(new fe).setGroup(Ft).onRenderUpdate((t,n)=>n.value.setFromMatrixPosition(i.target.matrixWorld)))}function NM(i){const e=RM(i);return e.viewPosition||(e.viewPosition=yt(new fe).setGroup(Ft).onRenderUpdate(({camera:t},n)=>{n.value=n.value||new fe,n.value.setFromMatrixPosition(i.matrixWorld),n.value.applyMatrix4(t.matrixWorldInverse)}))}const mL=i=>ea.transformDirection(pL(i).sub(Zie(i))),Kie=i=>i.sort((e,t)=>e.id-t.id),Qie=(i,e)=>{for(const t of e)if(t.isAnalyticLightNode&&t.light.id===i)return t;return null},jv=new WeakMap;class gL extends bt{static get type(){return"LightsNode"}constructor(){super("vec3"),this.totalDiffuseNode=Te().toVar("totalDiffuse"),this.totalSpecularNode=Te().toVar("totalSpecular"),this.outgoingLightNode=Te().toVar("outgoingLight"),this._lights=[],this._lightNodes=null,this._lightNodesHash=null,this.global=!0}getHash(e){if(this._lightNodesHash===null){this._lightNodes===null&&this.setupLightsNode(e);const t=[];for(const n of this._lightNodes)t.push(n.getSelf().getHash());this._lightNodesHash="lights-"+t.join(",")}return this._lightNodesHash}analyze(e){const t=e.getDataFromNode(this);for(const n of t.nodes)n.build(e)}setupLightsNode(e){const t=[],n=this._lightNodes,s=Kie(this._lights),r=e.renderer.library;for(const o of s)if(o.isNode)t.push(Ve(o));else{let a=null;if(n!==null&&(a=Qie(o.id,n)),a===null){const c=r.getLightNodeClass(o.constructor);if(c===null){console.warn(`LightsNode.setupNodeLights: Light node not found for ${o.constructor.name}`);continue}let l=null;jv.has(o)?l=jv.get(o):(l=Ve(new c(o)),jv.set(o,l)),t.push(l)}}this._lightNodes=t}setupLights(e,t){for(const n of t)n.build(e)}setup(e){this._lightNodes===null&&this.setupLightsNode(e);const t=e.context,n=t.lightingModel;let s=this.outgoingLightNode;if(n){const{_lightNodes:r,totalDiffuseNode:o,totalSpecularNode:a}=this;t.outgoingLight=s;const c=e.addStack(),l=e.getDataFromNode(this);l.nodes=c.nodes,n.start(t,c,e),this.setupLights(e,r),n.indirect(t,c,e);const{backdrop:u,backdropAlpha:h}=t,{directDiffuse:d,directSpecular:f,indirectDiffuse:m,indirectSpecular:_}=t.reflectedLight;let g=d.add(m);u!==null&&(h!==null?g=Te(h.mix(g,u)):g=Te(u),t.material.transparent=!0),o.assign(g),a.assign(f.add(_)),s.assign(o.add(a)),n.finish(t,c,e),s=s.bypass(e.removeStack())}return s}setLights(e){return this._lights=e,this._lightNodes=null,this._lightNodesHash=null,this}getLights(){return this._lights}get hasLights(){return this._lights.length>0}}const Jie=Ze(({depthTexture:i,shadowCoord:e})=>Tn(i,e.xy).compare(e.z)),ese=Ze(({depthTexture:i,shadowCoord:e,shadow:t})=>{const n=(_,g)=>Tn(i,_).compare(g),s=Sn("mapSize","vec2",t).setGroup(Ft),r=Sn("radius","float",t).setGroup(Ft),o=Je(1).div(s),a=o.x.negate().mul(r),c=o.y.negate().mul(r),l=o.x.mul(r),u=o.y.mul(r),h=a.div(2),d=c.div(2),f=l.div(2),m=u.div(2);return ki(n(e.xy.add(Je(a,c)),e.z),n(e.xy.add(Je(0,c)),e.z),n(e.xy.add(Je(l,c)),e.z),n(e.xy.add(Je(h,d)),e.z),n(e.xy.add(Je(0,d)),e.z),n(e.xy.add(Je(f,d)),e.z),n(e.xy.add(Je(a,0)),e.z),n(e.xy.add(Je(h,0)),e.z),n(e.xy,e.z),n(e.xy.add(Je(f,0)),e.z),n(e.xy.add(Je(l,0)),e.z),n(e.xy.add(Je(h,m)),e.z),n(e.xy.add(Je(0,m)),e.z),n(e.xy.add(Je(f,m)),e.z),n(e.xy.add(Je(a,u)),e.z),n(e.xy.add(Je(0,u)),e.z),n(e.xy.add(Je(l,u)),e.z)).mul(1/17)}),tse=Ze(({depthTexture:i,shadowCoord:e,shadow:t})=>{const n=(u,h)=>Tn(i,u).compare(h),s=Sn("mapSize","vec2",t).setGroup(Ft),r=Je(1).div(s),o=r.x,a=r.y,c=e.xy,l=Qa(c.mul(s).add(.5));return c.subAssign(l.mul(r)),ki(n(c,e.z),n(c.add(Je(o,0)),e.z),n(c.add(Je(0,a)),e.z),n(c.add(r),e.z),ln(n(c.add(Je(o.negate(),0)),e.z),n(c.add(Je(o.mul(2),0)),e.z),l.x),ln(n(c.add(Je(o.negate(),a)),e.z),n(c.add(Je(o.mul(2),a)),e.z),l.x),ln(n(c.add(Je(0,a.negate())),e.z),n(c.add(Je(0,a.mul(2))),e.z),l.y),ln(n(c.add(Je(o,a.negate())),e.z),n(c.add(Je(o,a.mul(2))),e.z),l.y),ln(ln(n(c.add(Je(o.negate(),a.negate())),e.z),n(c.add(Je(o.mul(2),a.negate())),e.z),l.x),ln(n(c.add(Je(o.negate(),a.mul(2))),e.z),n(c.add(Je(o.mul(2),a.mul(2))),e.z),l.x),l.y)).mul(1/9)}),nse=Ze(({depthTexture:i,shadowCoord:e})=>{const t=Ae(1).toVar(),n=Tn(i).uv(e.xy).rg,s=MD(e.z,n.x);return li(s.notEqual(Ae(1)),()=>{const r=e.z.sub(n.x),o=Fs(0,n.y.mul(n.y));let a=o.div(o.add(r.mul(r)));a=qo(ms(a,.3).div(.95-.3)),t.assign(qo(Fs(s,a)))}),t}),ise=Ze(({samples:i,radius:e,size:t,shadowPass:n})=>{const s=Ae(0).toVar(),r=Ae(0).toVar(),o=i.lessThanEqual(Ae(1)).select(Ae(0),Ae(2).div(i.sub(1))),a=i.lessThanEqual(Ae(1)).select(Ae(0),Ae(-1));Rr({start:Mn(0),end:Mn(i),type:"int",condition:"<"},({i:l})=>{const u=a.add(Ae(l).mul(o)),h=n.uv(ki(L_.xy,Je(0,u).mul(e)).div(t)).x;s.addAssign(h),r.addAssign(h.mul(h))}),s.divAssign(i),r.divAssign(i);const c=gM(r.sub(s.mul(s)));return Je(s,c)}),sse=Ze(({samples:i,radius:e,size:t,shadowPass:n})=>{const s=Ae(0).toVar(),r=Ae(0).toVar(),o=i.lessThanEqual(Ae(1)).select(Ae(0),Ae(2).div(i.sub(1))),a=i.lessThanEqual(Ae(1)).select(Ae(0),Ae(-1));Rr({start:Mn(0),end:Mn(i),type:"int",condition:"<"},({i:l})=>{const u=a.add(Ae(l).mul(o)),h=n.uv(ki(L_.xy,Je(u,0).mul(e)).div(t));s.addAssign(h.x),r.addAssign(ki(h.y.mul(h.y),h.x.mul(h.x)))}),s.divAssign(i),r.divAssign(i);const c=gM(r.sub(s.mul(s)));return Je(s,c)}),rse=[Jie,ese,tse,nse];let ou=null;const _m=new dL;class ose extends bt{static get type(){return"ShadowNode"}constructor(e,t=null){super(),this.light=e,this.shadow=t||e.shadow,this.shadowMap=null,this.vsmShadowMapVertical=null,this.vsmShadowMapHorizontal=null,this.vsmMaterialVertical=null,this.vsmMaterialHorizontal=null,this.updateBeforeType=At.RENDER,this._node=null,this.isShadowNode=!0}setupShadow(e){const{object:t,renderer:n}=e;ou===null&&(ou=new zn,ou.fragmentNode=xt(0,0,0,1),ou.isShadowNodeMaterial=!0,ou.name="ShadowMaterial");const s=this.shadow,r=n.shadowMap.type,o=new Uh(s.mapSize.width,s.mapSize.height);o.compareFunction=Jb;const a=e.createRenderTarget(s.mapSize.width,s.mapSize.height);if(a.depthTexture=o,s.camera.updateProjectionMatrix(),r===qp){o.compareFunction=null,this.vsmShadowMapVertical=e.createRenderTarget(s.mapSize.width,s.mapSize.height,{format:cf,type:ko}),this.vsmShadowMapHorizontal=e.createRenderTarget(s.mapSize.width,s.mapSize.height,{format:cf,type:ko});const y=Tn(o),x=Tn(this.vsmShadowMapVertical.texture),v=Sn("blurSamples","float",s).setGroup(Ft),S=Sn("radius","float",s).setGroup(Ft),M=Sn("mapSize","vec2",s).setGroup(Ft);let E=this.vsmMaterialVertical||(this.vsmMaterialVertical=new zn);E.fragmentNode=ise({samples:v,radius:S,size:M,shadowPass:y}).context(e.getSharedContext()),E.name="VSMVertical",E=this.vsmMaterialHorizontal||(this.vsmMaterialHorizontal=new zn),E.fragmentNode=sse({samples:v,radius:S,size:M,shadowPass:x}).context(e.getSharedContext()),E.name="VSMHorizontal"}const c=Sn("intensity","float",s).setGroup(Ft),l=Sn("bias","float",s).setGroup(Ft),u=Sn("normalBias","float",s).setGroup(Ft),h=t.material.shadowPositionNode||pS;let d=yt(s.matrix).setGroup(Ft).mul(h.add(bM.mul(u))),f;if(s.camera.isOrthographicCamera||n.logarithmicDepthBuffer!==!0)d=d.xyz.div(d.w),f=d.z,n.coordinateSystem===sl&&(f=f.mul(2).sub(1));else{const y=d.w;d=d.xy.div(y);const x=yt("float").onRenderUpdate(()=>s.camera.near),v=yt("float").onRenderUpdate(()=>s.camera.far);f=qD(y,x,v)}d=Te(d.x,d.y.oneMinus(),f.add(l));const m=d.x.greaterThanEqual(0).and(d.x.lessThanEqual(1)).and(d.y.greaterThanEqual(0)).and(d.y.lessThanEqual(1)).and(d.z.lessThanEqual(1)),_=s.filterNode||rse[n.shadowMap.type]||null;if(_===null)throw new Error("THREE.WebGPURenderer: Shadow map type not supported yet.");const g=Tn(a.texture,d),p=m.select(_({depthTexture:r===qp?this.vsmShadowMapHorizontal.texture:o,shadowCoord:d,shadow:s}),Ae(1));return this.shadowMap=a,this.shadow.map=a,ln(1,p.rgb.mix(g,1),c.mul(g.a))}setup(e){if(e.renderer.shadowMap.enabled!==!1)return this._node!==null?this._node:this._node=this.setupShadow(e)}updateShadow(e){const{shadowMap:t,light:n,shadow:s}=this,{renderer:r,scene:o,camera:a}=e,c=r.shadowMap.type,l=t.depthTexture.version;this._depthVersionCached=l;const u=o.overrideMaterial;o.overrideMaterial=ou,t.setSize(s.mapSize.width,s.mapSize.height),s.updateMatrices(n),s.camera.layers.mask=a.layers.mask;const h=r.getRenderTarget(),d=r.getRenderObjectFunction();r.setRenderObjectFunction((f,...m)=>{(f.castShadow===!0||f.receiveShadow&&c===qp)&&r.renderObject(f,...m)}),r.setRenderTarget(t),r.render(o,s.camera),r.setRenderObjectFunction(d),n.isPointLight!==!0&&c===qp&&this.vsmPass(r),r.setRenderTarget(h),o.overrideMaterial=u}vsmPass(e){const{shadow:t}=this;this.vsmShadowMapVertical.setSize(t.mapSize.width,t.mapSize.height),this.vsmShadowMapHorizontal.setSize(t.mapSize.width,t.mapSize.height),e.setRenderTarget(this.vsmShadowMapVertical),_m.material=this.vsmMaterialVertical,_m.render(e),e.setRenderTarget(this.vsmShadowMapHorizontal),_m.material=this.vsmMaterialHorizontal,_m.render(e)}dispose(){this.shadowMap.dispose(),this.shadowMap=null,this.vsmShadowMapVertical!==null&&(this.vsmShadowMapVertical.dispose(),this.vsmShadowMapVertical=null,this.vsmMaterialVertical.dispose(),this.vsmMaterialVertical=null),this.vsmShadowMapHorizontal!==null&&(this.vsmShadowMapHorizontal.dispose(),this.vsmShadowMapHorizontal=null,this.vsmMaterialHorizontal.dispose(),this.vsmMaterialHorizontal=null),this.updateBeforeType=At.NONE}updateBefore(e){const{shadow:t}=this;(t.needsUpdate||t.autoUpdate)&&(this.updateShadow(e),this.shadowMap.depthTexture.version===this._depthVersionCached&&(t.needsUpdate=!1))}}const ase=(i,e)=>Ve(new ose(i,e));class ml extends Bh{static get type(){return"AnalyticLightNode"}constructor(e=null){super(),this.updateType=At.FRAME,this.light=e,this.color=new Zt,this.colorNode=yt(this.color).setGroup(Ft),this.baseColorNode=null,this.shadowNode=null,this.shadowColorNode=null,this.isAnalyticLightNode=!0}getCacheKey(){return zg(super.getCacheKey(),this.light.id,this.light.castShadow?1:0)}getHash(){return this.light.uuid}setupShadow(e){const{renderer:t}=e;if(t.shadowMap.enabled===!1)return;let n=this.shadowColorNode;if(n===null){const s=this.light.shadow.shadowNode;let r;s!==void 0?r=Ve(s):r=ase(this.light),this.shadowNode=r,this.shadowColorNode=n=this.colorNode.mul(r),this.baseColorNode=this.colorNode}this.colorNode=n}setup(e){this.colorNode=this.baseColorNode||this.colorNode,this.light.castShadow?e.object.receiveShadow&&this.setupShadow(e):this.shadowNode!==null&&this.shadowNode.dispose()}update(){const{light:e}=this;this.color.copy(e.color).multiplyScalar(e.intensity)}}const _L=Ze(i=>{const{lightDistance:e,cutoffDistance:t,decayExponent:n}=i,s=e.pow(n).max(.01).reciprocal();return t.greaterThan(0).select(s.mul(e.div(t).pow4().oneMinus().clamp().pow2()),s)}),cse=Ze(({color:i,lightViewPosition:e,cutoffDistance:t,decayExponent:n},s)=>{const r=s.context.lightingModel,o=e.sub(ai),a=o.normalize(),c=o.length(),l=_L({lightDistance:c,cutoffDistance:t,decayExponent:n}),u=i.mul(l),h=s.context.reflectedLight;r.direct({lightDirection:a,lightColor:u,reflectedLight:h},s.stack,s)});class lse extends ml{static get type(){return"PointLightNode"}constructor(e=null){super(e),this.cutoffDistanceNode=yt(0).setGroup(Ft),this.decayExponentNode=yt(0).setGroup(Ft)}update(e){const{light:t}=this;super.update(e),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}setup(){cse({color:this.colorNode,lightViewPosition:NM(this.light),cutoffDistance:this.cutoffDistanceNode,decayExponent:this.decayExponentNode}).append()}}const use=Ze(([i,e])=>{const t=i.x,n=i.y,s=i.z;let r=e.element(0).mul(.886227);return r=r.add(e.element(1).mul(2*.511664).mul(n)),r=r.add(e.element(2).mul(2*.511664).mul(s)),r=r.add(e.element(3).mul(2*.511664).mul(t)),r=r.add(e.element(4).mul(2*.429043).mul(t).mul(n)),r=r.add(e.element(5).mul(2*.429043).mul(n).mul(s)),r=r.add(e.element(6).mul(s.mul(s).mul(.743125).sub(.247708))),r=r.add(e.element(7).mul(2*.429043).mul(t).mul(s)),r=r.add(e.element(8).mul(.429043).mul(Dt(t,t).sub(Dt(n,n)))),r}),fo=new CM;class hse extends Ja{constructor(e,t){super(),this.renderer=e,this.nodes=t}update(e,t,n){const s=this.renderer,r=this.nodes.getBackgroundNode(e)||e.background;let o=!1;if(r===null)s._clearColor.getRGB(fo,Ba),fo.a=s._clearColor.a;else if(r.isColor===!0)r.getRGB(fo,Ba),fo.a=1,o=!0;else if(r.isNode===!0){const a=this.get(e),c=r;fo.copy(s._clearColor);let l=a.backgroundMesh;if(l===void 0){const h=xM(xt(c).mul(B1),{getUV:()=>Rie.mul(FD),getTextureLevel:()=>Cie});let d=mS();d=d.setZ(d.w);const f=new zn;f.name="Background.material",f.side=pr,f.depthTest=!1,f.depthWrite=!1,f.fog=!1,f.lights=!1,f.vertexNode=d,f.colorNode=h,a.backgroundMeshNode=h,a.backgroundMesh=l=new rl(new rM(1,32,32),f),l.frustumCulled=!1,l.name="Background.mesh",l.onBeforeRender=function(m,_,g){this.matrixWorld.copyPosition(g.matrixWorld)}}const u=c.getCacheKey();a.backgroundCacheKey!==u&&(a.backgroundMeshNode.node=xt(c).mul(B1),a.backgroundMeshNode.needsUpdate=!0,l.material.needsUpdate=!0,a.backgroundCacheKey=u),t.unshift(l,l.geometry,l.material,0,0,null)}else console.error("THREE.Renderer: Unsupported background configuration.",r);if(s.autoClear===!0||o===!0){const a=n.clearColorValue;a.r=fo.r,a.g=fo.g,a.b=fo.b,a.a=fo.a,(s.backend.isWebGLBackend===!0||s.alpha===!0)&&(a.r*=a.a,a.g*=a.a,a.b*=a.a),n.depthClearValue=s._clearDepth,n.stencilClearValue=s._clearStencil,n.clearColor=s.autoClearColor===!0,n.clearDepth=s.autoClearDepth===!0,n.clearStencil=s.autoClearStencil===!0}else n.clearColor=!1,n.clearDepth=!1,n.clearStencil=!1}}let dse=0;class TS{constructor(e="",t=[],n=0,s=[]){this.name=e,this.bindings=t,this.index=n,this.bindingsReference=s,this.id=dse++}}class fse{constructor(e,t,n,s,r,o,a,c,l,u=[]){this.vertexShader=e,this.fragmentShader=t,this.computeShader=n,this.transforms=u,this.nodeAttributes=s,this.bindings=r,this.updateNodes=o,this.updateBeforeNodes=a,this.updateAfterNodes=c,this.monitor=l,this.usedTimes=0}createBindings(){const e=[];for(const t of this.bindings)if(t.bindings[0].groupNode.shared!==!0){const s=new TS(t.name,[],t.index,t);e.push(s);for(const r of t.bindings)s.bindings.push(r.clone())}else e.push(t);return e}}class H1{constructor(e,t,n=null){this.isNodeAttribute=!0,this.name=e,this.type=t,this.node=n}}class pse{constructor(e,t,n){this.isNodeUniform=!0,this.name=e,this.type=t,this.node=n.getSelf()}get value(){return this.node.value}set value(e){this.node.value=e}get id(){return this.node.id}get groupNode(){return this.node.groupNode}}class vL{constructor(e,t){this.isNodeVar=!0,this.name=e,this.type=t}}class mse extends vL{constructor(e,t){super(e,t),this.needsInterpolation=!1,this.isNodeVarying=!0}}class gse{constructor(e,t,n=""){this.name=e,this.type=t,this.code=n,Object.defineProperty(this,"isNodeCode",{value:!0})}}let _se=0;class Yv{constructor(e=null){this.id=_se++,this.nodesData=new WeakMap,this.parent=e}getData(e){let t=this.nodesData.get(e);return t===void 0&&this.parent!==null&&(t=this.parent.getData(e)),t}setData(e,t){this.nodesData.set(e,t)}}class gl{constructor(e,t){this.name=e,this.value=t,this.boundary=0,this.itemSize=0,this.offset=0}setValue(e){this.value=e}getValue(){return this.value}}class vse extends gl{constructor(e,t=0){super(e,t),this.isNumberUniform=!0,this.boundary=4,this.itemSize=1}}class xse extends gl{constructor(e,t=new Bt){super(e,t),this.isVector2Uniform=!0,this.boundary=8,this.itemSize=2}}class yse extends gl{constructor(e,t=new fe){super(e,t),this.isVector3Uniform=!0,this.boundary=16,this.itemSize=3}}class Sse extends gl{constructor(e,t=new Yt){super(e,t),this.isVector4Uniform=!0,this.boundary=16,this.itemSize=4}}class bse extends gl{constructor(e,t=new Zt){super(e,t),this.isColorUniform=!0,this.boundary=16,this.itemSize=3}}class Mse extends gl{constructor(e,t=new es){super(e,t),this.isMatrix3Uniform=!0,this.boundary=48,this.itemSize=12}}class Tse extends gl{constructor(e,t=new _n){super(e,t),this.isMatrix4Uniform=!0,this.boundary=64,this.itemSize=16}}class Ese extends vse{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class wse extends xse{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class Ase extends yse{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class Cse extends Sse{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class Rse extends bse{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class Nse extends Mse{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class Pse extends Tse{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}const wu=4,W1=[.125,.215,.35,.446,.526,.582],Dc=20,Zv=new cM(-1,1,1,-1,0,1),Dse=new So(90,1),$1=new Zt;let Kv=null,Qv=0,Jv=0;const Mc=(1+Math.sqrt(5))/2,au=1/Mc,q1=[new fe(-Mc,au,0),new fe(Mc,au,0),new fe(-au,0,Mc),new fe(au,0,Mc),new fe(0,Mc,-au),new fe(0,Mc,au),new fe(-1,1,-1),new fe(1,1,-1),new fe(-1,1,1),new fe(1,1,1)],Lse=[3,1,5,0,4,2],ex=Mne(N_(),Xo("faceIndex")).normalize(),PM=Te(ex.x,ex.y.negate(),ex.z);class Ise{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._lodMeshes=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._backgroundBox=null}fromScene(e,t=0,n=.1,s=100){Kv=this._renderer.getRenderTarget(),Qv=this._renderer.getActiveCubeFace(),Jv=this._renderer.getActiveMipmapLevel(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(e,n,s,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}async compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=j1(),await this._compileMaterial(this._cubemapMaterial))}async compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Y1(),await this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose(),this._backgroundBox!==null&&(this._backgroundBox.geometry.dispose(),this._backgroundBox.material.dispose())}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Kv,Qv,Jv),e.scissorTest=!1,vm(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===nl||e.mapping===uh?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Kv=this._renderer.getRenderTarget(),Qv=this._renderer.getActiveCubeFace(),Jv=this._renderer.getActiveMipmapLevel();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:xs,minFilter:xs,generateMipmaps:!1,type:ko,format:Lh,colorSpace:Ba},s=X1(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=X1(e,t,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas,lodMeshes:this._lodMeshes}=Fse(r)),this._blurMaterial=Use(r,e,t)}return s}async _compileMaterial(e){const t=new rl(this._lodPlanes[0],e);await this._renderer.compile(t,Zv)}_sceneToCubeUV(e,t,n,s){const r=Dse;r.near=t,r.far=n;const o=[-1,1,-1,-1,-1,-1],a=[1,1,1,-1,-1,-1],c=this._renderer,l=c.autoClear;c.getClearColor($1),c.autoClear=!1;let u=this._backgroundBox;if(u===null){const f=new T_({name:"PMREM.Background",side:pr,depthWrite:!1,depthTest:!1});u=new rl(new Gf,f)}let h=!1;const d=e.background;d?d.isColor&&(u.material.color.copy(d),e.background=null,h=!0):(u.material.color.copy($1),h=!0),c.setRenderTarget(s),c.clear(),h&&c.render(u,r);for(let f=0;f<6;f++){const m=f%3;m===0?(r.up.set(0,o[f],0),r.lookAt(a[f],0,0)):m===1?(r.up.set(0,0,o[f]),r.lookAt(0,a[f],0)):(r.up.set(0,o[f],0),r.lookAt(0,0,a[f]));const _=this._cubeSize;vm(s,m*_,f>2?_:0,_,_),c.render(e,r)}c.autoClear=l,e.background=d}_textureToCubeUV(e,t){const n=this._renderer,s=e.mapping===nl||e.mapping===uh;s?this._cubemapMaterial===null&&(this._cubemapMaterial=j1(e)):this._equirectMaterial===null&&(this._equirectMaterial=Y1(e));const r=s?this._cubemapMaterial:this._equirectMaterial;r.fragmentNode.value=e;const o=this._lodMeshes[0];o.material=r;const a=this._cubeSize;vm(t,0,0,3*a,2*a),n.setRenderTarget(t),n.render(o,Zv)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;const s=this._lodPlanes.length;for(let r=1;r<s;r++){const o=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),a=q1[(s-r-1)%q1.length];this._blur(e,r-1,r,o,a)}t.autoClear=n}_blur(e,t,n,s,r){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,s,"latitudinal",r),this._halfBlur(o,e,n,n,s,"longitudinal",r)}_halfBlur(e,t,n,s,r,o,a){const c=this._renderer,l=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,h=this._lodMeshes[s];h.material=l;const d=l.uniforms,f=this._sizeLods[n]-1,m=isFinite(r)?Math.PI/(2*f):2*Math.PI/(2*Dc-1),_=r/m,g=isFinite(r)?1+Math.floor(u*_):Dc;g>Dc&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${Dc}`);const p=[];let y=0;for(let E=0;E<Dc;++E){const w=E/_,b=Math.exp(-w*w/2);p.push(b),E===0?y+=b:E<g&&(y+=2*b)}for(let E=0;E<p.length;E++)p[E]=p[E]/y;e.texture.frame=(e.texture.frame||0)+1,d.envMap.value=e.texture,d.samples.value=g,d.weights.array=p,d.latitudinal.value=o==="latitudinal"?1:0,a&&(d.poleAxis.value=a);const{_lodMax:x}=this;d.dTheta.value=m,d.mipInt.value=x-n;const v=this._sizeLods[s],S=3*v*(s>x-wu?s-x+wu:0),M=4*(this._cubeSize-v);vm(t,S,M,3*v,2*v),c.setRenderTarget(t),c.render(h,Zv)}}function Fse(i){const e=[],t=[],n=[],s=[];let r=i;const o=i-wu+1+W1.length;for(let a=0;a<o;a++){const c=Math.pow(2,r);t.push(c);let l=1/c;a>i-wu?l=W1[a-i+wu-1]:a===0&&(l=0),n.push(l);const u=1/(c-2),h=-u,d=1+u,f=[h,h,d,h,d,d,h,h,d,d,h,d],m=6,_=6,g=3,p=2,y=1,x=new Float32Array(g*_*m),v=new Float32Array(p*_*m),S=new Float32Array(y*_*m);for(let E=0;E<m;E++){const w=E%3*2/3-1,b=E>2?0:-1,T=[w,b,0,w+2/3,b,0,w+2/3,b+1,0,w,b,0,w+2/3,b+1,0,w,b+1,0],C=Lse[E];x.set(T,g*_*C),v.set(f,p*_*C);const D=[C,C,C,C,C,C];S.set(D,y*_*C)}const M=new fl;M.setAttribute("position",new Ls(x,g)),M.setAttribute("uv",new Ls(v,p)),M.setAttribute("faceIndex",new Ls(S,y)),e.push(M),s.push(new rl(M,null)),r>wu&&r--}return{lodPlanes:e,sizeLods:t,sigmas:n,lodMeshes:s}}function X1(i,e,t){const n=new Fh(i,e,t);return n.texture.mapping=Vy,n.texture.name="PMREM.cubeUv",n.texture.isPMREMTexture=!0,n.scissorTest=!0,n}function vm(i,e,t,n,s){i.viewport.set(e,t,n,s),i.scissor.set(e,t,n,s)}function DM(i){const e=new zn;return e.depthTest=!1,e.depthWrite=!1,e.blending=lh,e.name=`PMREM_${i}`,e}function Use(i,e,t){const n=_f(new Array(Dc).fill(0)),s=yt(new fe(0,1,0)),r=yt(0),o=Ae(Dc),a=yt(0),c=yt(1),l=Tn(null),u=yt(0),h=Ae(1/e),d=Ae(1/t),f=Ae(i),m={n:o,latitudinal:a,weights:n,poleAxis:s,outputDirection:PM,dTheta:r,samples:c,envMap:l,mipInt:u,CUBEUV_TEXEL_WIDTH:h,CUBEUV_TEXEL_HEIGHT:d,CUBEUV_MAX_MIP:f},_=DM("blur");return _.uniforms=m,_.fragmentNode=Ene({...m,latitudinal:a.equal(1)}),_}function j1(i){const e=DM("cubemap");return e.fragmentNode=gf(i,PM),e}function Y1(i){const e=DM("equirect");return e.fragmentNode=Tn(i,YD(PM),0),e}const Z1=new WeakMap,Ose=new Map([[2,"vec2"],[3,"vec3"],[4,"vec4"],[9,"mat3"],[16,"mat4"]]),Bse=new Map([[Int8Array,"int"],[Int16Array,"int"],[Int32Array,"int"],[Uint8Array,"uint"],[Uint16Array,"uint"],[Uint32Array,"uint"],[Float32Array,"float"]]),xm=i=>/e/g.test(i)?String(i).replace(/\+/g,""):(i=Number(i),i+(i%1?"":".0"));class xL{constructor(e,t,n){this.object=e,this.material=e&&e.material||null,this.geometry=e&&e.geometry||null,this.renderer=t,this.parser=n,this.scene=null,this.camera=null,this.nodes=[],this.sequentialNodes=[],this.updateNodes=[],this.updateBeforeNodes=[],this.updateAfterNodes=[],this.hashNodes={},this.monitor=null,this.lightsNode=null,this.environmentNode=null,this.fogNode=null,this.clippingContext=null,this.vertexShader=null,this.fragmentShader=null,this.computeShader=null,this.flowNodes={vertex:[],fragment:[],compute:[]},this.flowCode={vertex:"",fragment:"",compute:""},this.uniforms={vertex:[],fragment:[],compute:[],index:0},this.structs={vertex:[],fragment:[],compute:[],index:0},this.bindings={vertex:{},fragment:{},compute:{}},this.bindingsIndexes={},this.bindGroups=null,this.attributes=[],this.bufferAttributes=[],this.varyings=[],this.codes={},this.vars={},this.flow={code:""},this.chaining=[],this.stack=Vv(),this.stacks=[],this.tab="	",this.currentFunctionNode=null,this.context={material:this.material},this.cache=new Yv,this.globalCache=this.cache,this.flowsData=new WeakMap,this.shaderStage=null,this.buildStage=null,this.useComparisonMethod=!1}getBindGroupsCache(){let e=Z1.get(this.renderer);return e===void 0&&(e=new kr,Z1.set(this.renderer,e)),e}createRenderTarget(e,t,n){return new Fh(e,t,n)}createCubeRenderTarget(e,t){return new ZD(e,t)}createPMREMGenerator(){return new Ise(this.renderer)}includes(e){return this.nodes.includes(e)}_getBindGroup(e,t){const n=this.getBindGroupsCache(),s=[];let r=!0;for(const a of t)s.push(a),r=r&&a.groupNode.shared!==!0;let o;return r?(o=n.get(s),o===void 0&&(o=new TS(e,s,this.bindingsIndexes[e].group,s),n.set(s,o))):o=new TS(e,s,this.bindingsIndexes[e].group,s),o}getBindGroupArray(e,t){const n=this.bindings[t];let s=n[e];return s===void 0&&(this.bindingsIndexes[e]===void 0&&(this.bindingsIndexes[e]={binding:0,group:Object.keys(this.bindingsIndexes).length}),n[e]=s=[]),s}getBindings(){let e=this.bindGroups;if(e===null){const t={},n=this.bindings;for(const s of QA)for(const r in n[s]){const o=n[s][r];(t[r]||(t[r]=[])).push(...o)}e=[];for(const s in t){const r=t[s],o=this._getBindGroup(s,r);e.push(o)}this.bindGroups=e}return e}sortBindingGroups(){const e=this.getBindings();e.sort((t,n)=>t.bindings[0].groupNode.order-n.bindings[0].groupNode.order);for(let t=0;t<e.length;t++){const n=e[t];this.bindingsIndexes[n.name].group=t,n.index=t}}setHashNode(e,t){this.hashNodes[t]=e}addNode(e){this.nodes.includes(e)===!1&&(this.nodes.push(e),this.setHashNode(e,e.getHash(this)))}addSequentialNode(e){this.sequentialNodes.includes(e)===!1&&this.sequentialNodes.push(e)}buildUpdateNodes(){for(const e of this.nodes)e.getUpdateType()!==At.NONE&&this.updateNodes.push(e.getSelf());for(const e of this.sequentialNodes){const t=e.getUpdateBeforeType(),n=e.getUpdateAfterType();t!==At.NONE&&this.updateBeforeNodes.push(e.getSelf()),n!==At.NONE&&this.updateAfterNodes.push(e.getSelf())}}get currentNode(){return this.chaining[this.chaining.length-1]}isFilteredTexture(e){return e.magFilter===xs||e.magFilter===Wy||e.magFilter===zu||e.magFilter===Bo||e.minFilter===xs||e.minFilter===Wy||e.minFilter===zu||e.minFilter===Bo}addChain(e){this.chaining.push(e)}removeChain(e){if(this.chaining.pop()!==e)throw new Error("NodeBuilder: Invalid node chaining!")}getMethod(e){return e}getNodeFromHash(e){return this.hashNodes[e]}addFlow(e,t){return this.flowNodes[e].push(t),t}setContext(e){this.context=e}getContext(){return this.context}getSharedContext(){return{...this.context},this.context}setCache(e){this.cache=e}getCache(){return this.cache}getCacheFromNode(e,t=!0){const n=this.getDataFromNode(e);return n.cache===void 0&&(n.cache=new Yv(t?this.getCache():null)),n.cache}isAvailable(){return!1}getVertexIndex(){console.warn("Abstract function.")}getInstanceIndex(){console.warn("Abstract function.")}getDrawIndex(){console.warn("Abstract function.")}getFrontFacing(){console.warn("Abstract function.")}getFragCoord(){console.warn("Abstract function.")}isFlipY(){return!1}increaseUsage(e){const t=this.getDataFromNode(e);return t.usageCount=t.usageCount===void 0?1:t.usageCount+1,t.usageCount}generateTexture(){console.warn("Abstract function.")}generateTextureLod(){console.warn("Abstract function.")}generateConst(e,t=null){if(t===null&&(e==="float"||e==="int"||e==="uint"?t=0:e==="bool"?t=!1:e==="color"?t=new Zt:e==="vec2"?t=new Bt:e==="vec3"?t=new fe:e==="vec4"&&(t=new Yt)),e==="float")return xm(t);if(e==="int")return`${Math.round(t)}`;if(e==="uint")return t>=0?`${Math.round(t)}u`:"0u";if(e==="bool")return t?"true":"false";if(e==="color")return`${this.getType("vec3")}( ${xm(t.r)}, ${xm(t.g)}, ${xm(t.b)} )`;const n=this.getTypeLength(e),s=this.getComponentType(e),r=o=>this.generateConst(s,o);if(n===2)return`${this.getType(e)}( ${r(t.x)}, ${r(t.y)} )`;if(n===3)return`${this.getType(e)}( ${r(t.x)}, ${r(t.y)}, ${r(t.z)} )`;if(n===4)return`${this.getType(e)}( ${r(t.x)}, ${r(t.y)}, ${r(t.z)}, ${r(t.w)} )`;if(n>4&&t&&(t.isMatrix3||t.isMatrix4))return`${this.getType(e)}( ${t.elements.map(r).join(", ")} )`;if(n>4)return`${this.getType(e)}()`;throw new Error(`NodeBuilder: Type '${e}' not found in generate constant attempt.`)}getType(e){return e==="color"?"vec3":e}hasGeometryAttribute(e){return this.geometry&&this.geometry.getAttribute(e)!==void 0}getAttribute(e,t){const n=this.attributes;for(const r of n)if(r.name===e)return r;const s=new H1(e,t);return n.push(s),s}getPropertyName(e){return e.name}isVector(e){return/vec\d/.test(e)}isMatrix(e){return/mat\d/.test(e)}isReference(e){return e==="void"||e==="property"||e==="sampler"||e==="texture"||e==="cubeTexture"||e==="storageTexture"||e==="depthTexture"||e==="texture3D"}needsToWorkingColorSpace(){return!1}getComponentTypeFromTexture(e){const t=e.type;if(e.isDataTexture){if(t===Ni)return"int";if(t===ri)return"uint"}return"float"}getElementType(e){return e==="mat2"?"vec2":e==="mat3"?"vec3":e==="mat4"?"vec4":this.getComponentType(e)}getComponentType(e){if(e=this.getVectorType(e),e==="float"||e==="bool"||e==="int"||e==="uint")return e;const t=/(b|i|u|)(vec|mat)([2-4])/.exec(e);return t===null?null:t[1]==="b"?"bool":t[1]==="i"?"int":t[1]==="u"?"uint":"float"}getVectorType(e){return e==="color"?"vec3":e==="texture"||e==="cubeTexture"||e==="storageTexture"||e==="texture3D"?"vec4":e}getTypeFromLength(e,t="float"){if(e===1)return t;const n=Ose.get(e);return(t==="float"?"":t[0])+n}getTypeFromArray(e){return Bse.get(e.constructor)}getTypeFromAttribute(e){let t=e;e.isInterleavedBufferAttribute&&(t=e.data);const n=t.array,s=e.itemSize,r=e.normalized;let o;return!(e instanceof I2)&&r!==!0&&(o=this.getTypeFromArray(n)),this.getTypeFromLength(s,o)}getTypeLength(e){const t=this.getVectorType(e),n=/vec([2-4])/.exec(t);return n!==null?Number(n[1]):t==="float"||t==="bool"||t==="int"||t==="uint"?1:/mat2/.test(e)===!0?4:/mat3/.test(e)===!0?9:/mat4/.test(e)===!0?16:0}getVectorFromMatrix(e){return e.replace("mat","vec")}changeComponentType(e,t){return this.getTypeFromLength(this.getTypeLength(e),t)}getIntegerType(e){const t=this.getComponentType(e);return t==="int"||t==="uint"?e:this.changeComponentType(e,"int")}addStack(){return this.stack=Vv(this.stack),this.stacks.push(rD()||this.stack),Hg(this.stack),this.stack}removeStack(){const e=this.stack;return this.stack=e.parent,Hg(this.stacks.pop()),e}getDataFromNode(e,t=this.shaderStage,n=null){n=n===null?e.isGlobal(this)?this.globalCache:this.cache:n;let s=n.getData(e);return s===void 0&&(s={},n.setData(e,s)),s[t]===void 0&&(s[t]={}),s[t]}getNodeProperties(e,t="any"){const n=this.getDataFromNode(e,t);return n.properties||(n.properties={outputNode:null})}getBufferAttributeFromNode(e,t){const n=this.getDataFromNode(e);let s=n.bufferAttribute;if(s===void 0){const r=this.uniforms.index++;s=new H1("nodeAttribute"+r,t,e),this.bufferAttributes.push(s),n.bufferAttribute=s}return s}getStructTypeFromNode(e,t=this.shaderStage){const n=this.getDataFromNode(e,t);if(n.structType===void 0){const s=this.structs.index++;e.name=`StructType${s}`,this.structs[t].push(e),n.structType=e}return e}getUniformFromNode(e,t,n=this.shaderStage,s=null){const r=this.getDataFromNode(e,n,this.globalCache);let o=r.uniform;if(o===void 0){const a=this.uniforms.index++;o=new pse(s||"nodeUniform"+a,t,e),this.uniforms[n].push(o),r.uniform=o}return o}getVarFromNode(e,t=null,n=e.getNodeType(this),s=this.shaderStage){const r=this.getDataFromNode(e,s);let o=r.variable;if(o===void 0){const a=this.vars[s]||(this.vars[s]=[]);t===null&&(t="nodeVar"+a.length),o=new vL(t,n),a.push(o),r.variable=o}return o}getVaryingFromNode(e,t=null,n=e.getNodeType(this)){const s=this.getDataFromNode(e,"any");let r=s.varying;if(r===void 0){const o=this.varyings,a=o.length;t===null&&(t="nodeVarying"+a),r=new mse(t,n),o.push(r),s.varying=r}return r}getCodeFromNode(e,t,n=this.shaderStage){const s=this.getDataFromNode(e);let r=s.code;if(r===void 0){const o=this.codes[n]||(this.codes[n]=[]),a=o.length;r=new gse("nodeCode"+a,t),o.push(r),s.code=r}return r}addFlowCodeHierarchy(e,t){const{flowCodes:n,flowCodeBlock:s}=this.getDataFromNode(e);let r=!0,o=t;for(;o;){if(s.get(o)===!0){r=!1;break}o=this.getDataFromNode(o).parentNodeBlock}if(r)for(const a of n)this.addLineFlowCode(a)}addLineFlowCodeBlock(e,t,n){const s=this.getDataFromNode(e),r=s.flowCodes||(s.flowCodes=[]),o=s.flowCodeBlock||(s.flowCodeBlock=new WeakMap);r.push(t),o.set(n,!0)}addLineFlowCode(e,t=null){return e===""?this:(t!==null&&this.context.nodeBlock&&this.addLineFlowCodeBlock(t,e,this.context.nodeBlock),e=this.tab+e,/;\s*$/.test(e)||(e=e+`;
`),this.flow.code+=e,this)}addFlowCode(e){return this.flow.code+=e,this}addFlowTab(){return this.tab+="	",this}removeFlowTab(){return this.tab=this.tab.slice(0,-1),this}getFlowData(e){return this.flowsData.get(e)}flowNode(e){const t=e.getNodeType(this),n=this.flowChildNode(e,t);return this.flowsData.set(e,n),n}buildFunctionNode(e){const t=new Hie,n=this.currentFunctionNode;return this.currentFunctionNode=t,t.code=this.buildFunctionCode(e),this.currentFunctionNode=n,t}flowShaderNode(e){const t=e.layout,n={[Symbol.iterator](){let o=0;const a=Object.values(this);return{next:()=>({value:a[o],done:o++>=a.length})}}};for(const o of t.inputs)n[o.name]=new Mie(o.type,o.name);e.layout=null;const s=e.call(n),r=this.flowStagesNode(s,t.type);return e.layout=t,r}flowStagesNode(e,t=null){const n=this.flow,s=this.vars,r=this.cache,o=this.buildStage,a=this.stack,c={code:""};this.flow=c,this.vars={},this.cache=new Yv,this.stack=Vv();for(const l of KA)this.setBuildStage(l),c.result=e.build(this,t);return c.vars=this.getVars(this.shaderStage),this.flow=n,this.vars=s,this.cache=r,this.stack=a,this.setBuildStage(o),c}getFunctionOperator(){return null}flowChildNode(e,t=null){const n=this.flow,s={code:""};return this.flow=s,s.result=e.build(this,t),this.flow=n,s}flowNodeFromShaderStage(e,t,n=null,s=null){const r=this.shaderStage;this.setShaderStage(e);const o=this.flowChildNode(t,n);return s!==null&&(o.code+=`${this.tab+s} = ${o.result};
`),this.flowCode[e]=this.flowCode[e]+o.code,this.setShaderStage(r),o}getAttributesArray(){return this.attributes.concat(this.bufferAttributes)}getAttributes(){console.warn("Abstract function.")}getVaryings(){console.warn("Abstract function.")}getVar(e,t){return`${this.getType(e)} ${t}`}getVars(e){let t="";const n=this.vars[e];if(n!==void 0)for(const s of n)t+=`${this.getVar(s.type,s.name)}; `;return t}getUniforms(){console.warn("Abstract function.")}getCodes(e){const t=this.codes[e];let n="";if(t!==void 0)for(const s of t)n+=s.code+`
`;return n}getHash(){return this.vertexShader+this.fragmentShader+this.computeShader}setShaderStage(e){this.shaderStage=e}getShaderStage(){return this.shaderStage}setBuildStage(e){this.buildStage=e}getBuildStage(){return this.buildStage}buildCode(){console.warn("Abstract function.")}build(){const{object:e,material:t,renderer:n}=this;if(t!==null){let s=n.library.fromMaterial(t);s===null&&(console.error(`NodeMaterial: Material "${t.type}" is not compatible.`),s=new zn),s.build(this)}else this.addFlow("compute",e);for(const s of KA){this.setBuildStage(s),this.context.vertex&&this.context.vertex.isNode&&this.flowNodeFromShaderStage("vertex",this.context.vertex);for(const r of QA){this.setShaderStage(r);const o=this.flowNodes[r];for(const a of o)s==="generate"?this.flowNode(a):a.build(this)}}return this.setBuildStage(null),this.setShaderStage(null),this.buildCode(),this.buildUpdateNodes(),this}getNodeUniform(e,t){if(t==="float"||t==="int"||t==="uint")return new Ese(e);if(t==="vec2"||t==="ivec2"||t==="uvec2")return new wse(e);if(t==="vec3"||t==="ivec3"||t==="uvec3")return new Ase(e);if(t==="vec4"||t==="ivec4"||t==="uvec4")return new Cse(e);if(t==="color")return new Rse(e);if(t==="mat3")return new Nse(e);if(t==="mat4")return new Pse(e);throw new Error(`Uniform "${t}" not declared.`)}createNodeMaterial(e="NodeMaterial"){throw new Error(`THREE.NodeBuilder: createNodeMaterial() was deprecated. Use new ${e}() instead.`)}format(e,t,n){if(t=this.getVectorType(t),n=this.getVectorType(n),t===n||n===null||this.isReference(n))return e;const s=this.getTypeLength(t),r=this.getTypeLength(n);return s===16&&r===9?`${this.getType(n)}(${e}[0].xyz, ${e}[1].xyz, ${e}[2].xyz)`:s===9&&r===4?`${this.getType(n)}(${e}[0].xy, ${e}[1].xy)`:s>4||r>4||r===0?e:s===r?`${this.getType(n)}( ${e} )`:s>r?this.format(`${e}.${"xyz".slice(0,r)}`,this.getTypeFromLength(r,this.getComponentType(t)),n):r===4&&s>1?`${this.getType(n)}( ${this.format(e,t,"vec3")}, 1.0 )`:s===2?`${this.getType(n)}( ${this.format(e,t,"vec2")}, 0.0 )`:(s===1&&r>1&&t!==this.getComponentType(n)&&(e=`${this.getType(this.getComponentType(n))}( ${e} )`),`${this.getType(n)}( ${e} )`)}getSignature(){return`// Three.js r${b_} - Node System
`}}class K1{constructor(){this.time=0,this.deltaTime=0,this.frameId=0,this.renderId=0,this.startTime=null,this.updateMap=new WeakMap,this.updateBeforeMap=new WeakMap,this.updateAfterMap=new WeakMap,this.renderer=null,this.material=null,this.camera=null,this.object=null,this.scene=null}_getMaps(e,t){let n=e.get(t);return n===void 0&&(n={renderMap:new WeakMap,frameMap:new WeakMap},e.set(t,n)),n}updateBeforeNode(e){const t=e.getUpdateBeforeType(),n=e.updateReference(this);if(t===At.FRAME){const{frameMap:s}=this._getMaps(this.updateBeforeMap,n);s.get(n)!==this.frameId&&e.updateBefore(this)!==!1&&s.set(n,this.frameId)}else if(t===At.RENDER){const{renderMap:s}=this._getMaps(this.updateBeforeMap,n);s.get(n)!==this.renderId&&e.updateBefore(this)!==!1&&s.set(n,this.renderId)}else t===At.OBJECT&&e.updateBefore(this)}updateAfterNode(e){const t=e.getUpdateAfterType(),n=e.updateReference(this);if(t===At.FRAME){const{frameMap:s}=this._getMaps(this.updateAfterMap,n);s.get(n)!==this.frameId&&e.updateAfter(this)!==!1&&s.set(n,this.frameId)}else if(t===At.RENDER){const{renderMap:s}=this._getMaps(this.updateAfterMap,n);s.get(n)!==this.renderId&&e.updateAfter(this)!==!1&&s.set(n,this.renderId)}else t===At.OBJECT&&e.updateAfter(this)}updateNode(e){const t=e.getUpdateType(),n=e.updateReference(this);if(t===At.FRAME){const{frameMap:s}=this._getMaps(this.updateMap,n);s.get(n)!==this.frameId&&e.update(this)!==!1&&s.set(n,this.frameId)}else if(t===At.RENDER){const{renderMap:s}=this._getMaps(this.updateMap,n);s.get(n)!==this.renderId&&e.update(this)!==!1&&s.set(n,this.renderId)}else t===At.OBJECT&&e.update(this)}update(){this.frameId++,this.lastTime===void 0&&(this.lastTime=performance.now()),this.deltaTime=(performance.now()-this.lastTime)/1e3,this.lastTime=performance.now(),this.time+=this.deltaTime}}class LM{constructor(e,t,n=null,s="",r=!1){this.type=e,this.name=t,this.count=n,this.qualifier=s,this.isConst=r}}LM.isNodeFunctionInput=!0;class kse extends ml{static get type(){return"DirectionalLightNode"}constructor(e=null){super(e)}setup(e){super.setup(e);const t=e.context.lightingModel,n=this.colorNode,s=mL(this.light),r=e.context.reflectedLight;t.direct({lightDirection:s,lightColor:n,reflectedLight:r},e.stack,e)}}const tx=new _n,ym=new _n;let md=null;class zse extends ml{static get type(){return"RectAreaLightNode"}constructor(e=null){super(e),this.halfHeight=yt(new fe).setGroup(Ft),this.halfWidth=yt(new fe).setGroup(Ft),this.updateType=At.RENDER}update(e){super.update(e);const{light:t}=this,n=e.camera.matrixWorldInverse;ym.identity(),tx.copy(t.matrixWorld),tx.premultiply(n),ym.extractRotation(tx),this.halfWidth.value.set(t.width*.5,0,0),this.halfHeight.value.set(0,t.height*.5,0),this.halfWidth.value.applyMatrix4(ym),this.halfHeight.value.applyMatrix4(ym)}setup(e){super.setup(e);let t,n;e.isAvailable("float32Filterable")?(t=Tn(md.LTC_FLOAT_1),n=Tn(md.LTC_FLOAT_2)):(t=Tn(md.LTC_HALF_1),n=Tn(md.LTC_HALF_2));const{colorNode:s,light:r}=this,o=e.context.lightingModel,a=NM(r),c=e.context.reflectedLight;o.directRectArea({lightColor:s,lightPosition:a,halfWidth:this.halfWidth,halfHeight:this.halfHeight,reflectedLight:c,ltc_1:t,ltc_2:n},e.stack,e)}static setLTC(e){md=e}}class yL extends ml{static get type(){return"SpotLightNode"}constructor(e=null){super(e),this.coneCosNode=yt(0).setGroup(Ft),this.penumbraCosNode=yt(0).setGroup(Ft),this.cutoffDistanceNode=yt(0).setGroup(Ft),this.decayExponentNode=yt(0).setGroup(Ft)}update(e){super.update(e);const{light:t}=this;this.coneCosNode.value=Math.cos(t.angle),this.penumbraCosNode.value=Math.cos(t.angle*(1-t.penumbra)),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}getSpotAttenuation(e){const{coneCosNode:t,penumbraCosNode:n}=this;return ol(t,n,e)}setup(e){super.setup(e);const t=e.context.lightingModel,{colorNode:n,cutoffDistanceNode:s,decayExponentNode:r,light:o}=this,a=NM(o).sub(ai),c=a.normalize(),l=c.dot(mL(o)),u=this.getSpotAttenuation(l),h=a.length(),d=_L({lightDistance:h,cutoffDistance:s,decayExponent:r}),f=n.mul(u).mul(d),m=e.context.reflectedLight;t.direct({lightDirection:c,lightColor:f,reflectedLight:m},e.stack,e)}}class Gse extends yL{static get type(){return"IESSpotLightNode"}getSpotAttenuation(e){const t=this.light.iesMap;let n=null;if(t&&t.isTexture===!0){const s=e.acos().mul(1/Math.PI);n=Tn(t,Je(s,0),0).r}else n=super.getSpotAttenuation(e);return n}}class Vse extends ml{static get type(){return"AmbientLightNode"}constructor(e=null){super(e)}setup({context:e}){e.irradiance.addAssign(this.colorNode)}}class Hse extends ml{static get type(){return"HemisphereLightNode"}constructor(e=null){super(e),this.lightPositionNode=pL(e),this.lightDirectionNode=this.lightPositionNode.normalize(),this.groundColorNode=yt(new Zt).setGroup(Ft)}update(e){const{light:t}=this;super.update(e),this.lightPositionNode.object3d=t,this.groundColorNode.value.copy(t.groundColor).multiplyScalar(t.intensity)}setup(e){const{colorNode:t,groundColorNode:n,lightDirectionNode:s}=this,o=gr.dot(s).mul(.5).add(.5),a=ln(n,t,o);e.context.irradiance.addAssign(a)}}class Wse extends ml{static get type(){return"LightProbeNode"}constructor(e=null){super(e);const t=[];for(let n=0;n<9;n++)t.push(new fe);this.lightProbe=_f(t)}update(e){const{light:t}=this;super.update(e);for(let n=0;n<9;n++)this.lightProbe.array[n].copy(t.sh.coefficients[n]).multiplyScalar(t.intensity)}setup(e){const t=use(FD,this.lightProbe);e.context.irradiance.addAssign(t)}}class SL{parseFunction(){console.warn("Abstract function.")}}class IM{constructor(e,t,n="",s=""){this.type=e,this.inputs=t,this.name=n,this.precision=s}getCode(){console.warn("Abstract function.")}}IM.isNodeFunction=!0;const $se=/^\s*(highp|mediump|lowp)?\s*([a-z_0-9]+)\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)/i,qse=/[a-z_0-9]+/ig,Q1="#pragma main",Xse=i=>{i=i.trim();const e=i.indexOf(Q1),t=e!==-1?i.slice(e+Q1.length):i,n=t.match($se);if(n!==null&&n.length===5){const s=n[4],r=[];let o=null;for(;(o=qse.exec(s))!==null;)r.push(o);const a=[];let c=0;for(;c<r.length;){const m=r[c][0]==="const";m===!0&&c++;let _=r[c][0];_==="in"||_==="out"||_==="inout"?c++:_="";const g=r[c++][0];let p=Number.parseInt(r[c][0]);Number.isNaN(p)===!1?c++:p=null;const y=r[c++][0];a.push(new LM(g,y,p,_,m))}const l=t.substring(n[0].length),u=n[3]!==void 0?n[3]:"",h=n[2],d=n[1]!==void 0?n[1]:"",f=e!==-1?i.slice(0,e):"";return{type:h,inputs:a,name:u,precision:d,inputsCode:s,blockCode:l,headerCode:f}}else throw new Error("FunctionNode: Function is not a GLSL code.")};class jse extends IM{constructor(e){const{type:t,inputs:n,name:s,precision:r,inputsCode:o,blockCode:a,headerCode:c}=Xse(e);super(t,n,s,r),this.inputsCode=o,this.blockCode=a,this.headerCode=c}getCode(e=this.name){let t;const n=this.blockCode;if(n!==""){const{type:s,inputsCode:r,headerCode:o,precision:a}=this;let c=`${s} ${e} ( ${r.trim()} )`;a!==""&&(c=`${a} ${c}`),t=o+c+n}else t="";return t}}class Yse extends SL{parseFunction(e){return new jse(e)}}const J1=new WeakMap;class Zse extends Ja{constructor(e,t){super(),this.renderer=e,this.backend=t,this.nodeFrame=new K1,this.nodeBuilderCache=new Map,this.callHashCache=new kr,this.groupsData=new kr}updateGroup(e){const t=e.groupNode,n=t.name;if(n===cD.name)return!0;if(n===Ft.name){const o=this.get(e),a=this.nodeFrame.renderId;return o.renderId!==a?(o.renderId=a,!0):!1}if(n===bQ.name){const o=this.get(e),a=this.nodeFrame.frameId;return o.frameId!==a?(o.frameId=a,!0):!1}const s=[t,e];let r=this.groupsData.get(s);return r===void 0&&this.groupsData.set(s,r={}),r.version!==t.version?(r.version=t.version,!0):!1}getForRenderCacheKey(e){return e.initialCacheKey}getForRender(e){const t=this.get(e);let n=t.nodeBuilderState;if(n===void 0){const{nodeBuilderCache:s}=this,r=this.getForRenderCacheKey(e);if(n=s.get(r),n===void 0){const o=this.backend.createNodeBuilder(e.object,this.renderer);o.scene=e.scene,o.material=e.material,o.camera=e.camera,o.context.material=e.material,o.lightsNode=e.lightsNode,o.environmentNode=this.getEnvironmentNode(e.scene),o.fogNode=this.getFogNode(e.scene),o.clippingContext=e.clippingContext,o.build(),n=this._createNodeBuilderState(o),s.set(r,n)}n.usedTimes++,t.nodeBuilderState=n}return n}delete(e){if(e.isRenderObject){const t=this.get(e).nodeBuilderState;t.usedTimes--,t.usedTimes===0&&this.nodeBuilderCache.delete(this.getForRenderCacheKey(e))}return super.delete(e)}getForCompute(e){const t=this.get(e);let n=t.nodeBuilderState;if(n===void 0){const s=this.backend.createNodeBuilder(e,this.renderer);s.build(),n=this._createNodeBuilderState(s),t.nodeBuilderState=n}return n}_createNodeBuilderState(e){return new fse(e.vertexShader,e.fragmentShader,e.computeShader,e.getAttributesArray(),e.getBindings(),e.updateNodes,e.updateBeforeNodes,e.updateAfterNodes,e.monitor,e.transforms)}getEnvironmentNode(e){return e.environmentNode||this.get(e).environmentNode||null}getBackgroundNode(e){return e.backgroundNode||this.get(e).backgroundNode||null}getFogNode(e){return e.fogNode||this.get(e).fogNode||null}getCacheKey(e,t){const n=[e,t],s=this.renderer.info.calls;let r=this.callHashCache.get(n);if(r===void 0||r.callId!==s){const o=this.getEnvironmentNode(e),a=this.getFogNode(e),c=[];t&&c.push(t.getCacheKey(!0)),o&&c.push(o.getCacheKey()),a&&c.push(a.getCacheKey()),c.push(this.renderer.shadowMap.enabled?1:0),r={callId:s,cacheKey:Q2(c)},this.callHashCache.set(n,r)}return r.cacheKey}updateScene(e){this.updateEnvironment(e),this.updateFog(e),this.updateBackground(e)}get isToneMappingState(){return!this.renderer.getRenderTarget()}updateBackground(e){const t=this.get(e),n=e.background;if(n){const s=e.backgroundBlurriness===0&&t.backgroundBlurriness>0||e.backgroundBlurriness>0&&t.backgroundBlurriness===0;if(t.background!==n||s){let r=null;if(n.isCubeTexture===!0||n.mapping===Uf||n.mapping===Of||n.mapping===Vy)if(e.backgroundBlurriness>0||n.mapping===Vy)r=aL(n);else{let o;n.isCubeTexture===!0?o=gf(n):o=Tn(n),r=QD(o)}else n.isTexture===!0?r=Tn(n,vf.flipY()).setUpdateMatrix(!0):n.isColor!==!0&&console.error("WebGPUNodes: Unsupported background configuration.",n);t.backgroundNode=r,t.background=n,t.backgroundBlurriness=e.backgroundBlurriness}}else t.backgroundNode&&(delete t.backgroundNode,delete t.background)}updateFog(e){const t=this.get(e),n=e.fog;if(n){if(t.fog!==n){let s=null;if(n.isFogExp2){const r=Sn("color","color",n).setGroup(Ft),o=Sn("density","float",n).setGroup(Ft);s=jie(r,o)}else if(n.isFog){const r=Sn("color","color",n).setGroup(Ft),o=Sn("near","float",n).setGroup(Ft),a=Sn("far","float",n).setGroup(Ft);s=qie(r,o,a)}else console.error("WebGPUNodes: Unsupported fog configuration.",n);t.fogNode=s,t.fog=n}}else delete t.fogNode,delete t.fog}updateEnvironment(e){const t=this.get(e),n=e.environment;if(n){if(t.environment!==n){let s=null;n.isCubeTexture===!0?s=gf(n):n.isTexture===!0?s=Tn(n):console.error("Nodes: Unsupported environment configuration.",n),t.environmentNode=s,t.environment=n}}else t.environmentNode&&(delete t.environmentNode,delete t.environment)}getNodeFrame(e=this.renderer,t=null,n=null,s=null,r=null){const o=this.nodeFrame;return o.renderer=e,o.scene=t,o.object=n,o.camera=s,o.material=r,o}getNodeFrameForRender(e){return this.getNodeFrame(e.renderer,e.scene,e.object,e.camera,e.material)}getOutputCacheKey(){const e=this.renderer;return e.toneMapping+","+e.currentColorSpace}hasOutputChange(e){return J1.get(e)!==this.getOutputCacheKey()}getOutputNode(e){const t=this.renderer,n=this.getOutputCacheKey(),s=Tn(e,vf).renderOutput(t.toneMapping,t.currentColorSpace);return J1.set(e,n),s}updateBefore(e){const t=e.getNodeBuilderState();for(const n of t.updateBeforeNodes)this.getNodeFrameForRender(e).updateBeforeNode(n)}updateAfter(e){const t=e.getNodeBuilderState();for(const n of t.updateAfterNodes)this.getNodeFrameForRender(e).updateAfterNode(n)}updateForCompute(e){const t=this.getNodeFrame(),n=this.getForCompute(e);for(const s of n.updateNodes)t.updateNode(s)}updateForRender(e){const t=this.getNodeFrameForRender(e),n=e.getNodeBuilderState();for(const s of n.updateNodes)t.updateNode(s)}needsRefresh(e){const t=this.getNodeFrameForRender(e);return e.getMonitor().needsRefresh(e,t)}dispose(){super.dispose(),this.nodeFrame=new K1,this.nodeBuilderCache=new Map}}class Kse{constructor(e,t){this.scene=e,this.camera=t}clone(){return Object.assign(new this.constructor,this)}}class Qse{constructor(){this.lists=new kr}get(e,t){const n=this.lists,s=[e,t];let r=n.get(s);return r===void 0&&(r=new Kse(e,t),n.set(s,r)),r}dispose(){this.lists=new kr}}class bL{constructor(){this.lightNodes=new WeakMap,this.materialNodes=new Map,this.toneMappingNodes=new Map}fromMaterial(e){if(e.isNodeMaterial)return e;let t=null;const n=this.getMaterialNodeClass(e.type);if(n!==null){t=new n;for(const s in e)t[s]=e[s]}return t}addToneMapping(e,t){this.addType(e,t,this.toneMappingNodes)}getToneMappingFunction(e){return this.toneMappingNodes.get(e)||null}getMaterialNodeClass(e){return this.materialNodes.get(e)||null}addMaterial(e,t){this.addType(e,t.type,this.materialNodes)}getLightNodeClass(e){return this.lightNodes.get(e)||null}addLight(e,t){this.addClass(e,t,this.lightNodes)}addType(e,t,n){if(n.has(t)){console.warn(`Redefinition of node ${t}`);return}if(typeof e!="function")throw new Error(`Node class ${e.name} is not a class.`);if(typeof t=="function"||typeof t=="object")throw new Error(`Base class ${t} is not a class.`);n.set(t,e)}addClass(e,t,n){if(n.has(t)){console.warn(`Redefinition of node ${t.name}`);return}if(typeof e!="function")throw new Error(`Node class ${e.name} is not a class.`);if(typeof t!="function")throw new Error(`Base class ${t.name} is not a class.`);n.set(t,e)}}const Jse=new gL;class ere extends kr{constructor(){super()}createNode(e=[]){return new gL().setLights(e)}getNode(e,t){if(e.isQuadMesh)return Jse;const n=[e,t];let s=this.get(n);return s===void 0&&(s=this.createNode(),this.set(n,s)),s}}const eC=new B2,Sm=new Bt,nx=new Yt,ix=new G2,bm=new _n,ba=new Yt;class tre{constructor(e,t={}){this.isRenderer=!0;const{logarithmicDepthBuffer:n=!1,alpha:s=!0,depth:r=!0,stencil:o=!1,antialias:a=!1,samples:c=0,getFallback:l=null}=t;this.domElement=e.getDomElement(),this.backend=e,this.samples=c||a===!0?4:0,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.alpha=s,this.logarithmicDepthBuffer=n,this.outputColorSpace=ht,this.toneMapping=ku,this.toneMappingExposure=1,this.sortObjects=!0,this.depth=r,this.stencil=o,this.clippingPlanes=[],this.info=new lie,this.nodes={modelViewMatrix:null,modelNormalViewMatrix:null},this.library=new bL,this.lighting=new ere,this._getFallback=l,this._pixelRatio=1,this._width=this.domElement.width,this._height=this.domElement.height,this._viewport=new Yt(0,0,this._width,this._height),this._scissor=new Yt(0,0,this._width,this._height),this._scissorTest=!1,this._attributes=null,this._geometries=null,this._nodes=null,this._animation=null,this._bindings=null,this._objects=null,this._pipelines=null,this._bundles=null,this._renderLists=null,this._renderContexts=null,this._textures=null,this._background=null,this._quad=new dL(new zn),this._quad.material.type="Renderer_output",this._currentRenderContext=null,this._opaqueSort=null,this._transparentSort=null,this._frameBufferTarget=null;const u=this.alpha===!0?0:1;this._clearColor=new CM(0,0,0,u),this._clearDepth=1,this._clearStencil=0,this._renderTarget=null,this._activeCubeFace=0,this._activeMipmapLevel=0,this._mrt=null,this._renderObjectFunction=null,this._currentRenderObjectFunction=null,this._currentRenderBundle=null,this._handleObjectFunction=this._renderObjectDirect,this._isDeviceLost=!1,this.onDeviceLost=this._onDeviceLost,this._initialized=!1,this._initPromise=null,this._compilationPromises=null,this.transparent=!0,this.opaque=!0,this.shadowMap={enabled:!1,type:eZ},this.xr={enabled:!1},this.debug={checkShaderErrors:!0,onShaderError:null,getShaderAsync:async(h,d,f)=>{await this.compileAsync(h,d);const m=this._renderLists.get(h,d),_=this._renderContexts.get(h,d,this._renderTarget),g=h.overrideMaterial||f.material,p=this._objects.get(f,g,h,d,m.lightsNode,_),{fragmentShader:y,vertexShader:x}=p.getNodeBuilderState();return{fragmentShader:y,vertexShader:x}}}}async init(){if(this._initialized)throw new Error("Renderer: Backend has already been initialized.");return this._initPromise!==null?this._initPromise:(this._initPromise=new Promise(async(e,t)=>{let n=this.backend;try{await n.init(this)}catch(s){if(this._getFallback!==null)try{this.backend=n=this._getFallback(s),await n.init(this)}catch(r){t(r);return}else{t(s);return}}this._nodes=new Zse(this,n),this._animation=new Jne(this._nodes,this.info),this._attributes=new oie(n),this._background=new hse(this,this._nodes),this._geometries=new cie(this._attributes,this.info),this._textures=new bie(this,n,this.info),this._pipelines=new fie(n,this._nodes),this._bindings=new pie(n,this._nodes,this._textures,this._attributes,this._pipelines,this.info),this._objects=new iie(this,this._nodes,this._geometries,this._pipelines,this._bindings,this.info),this._renderLists=new _ie(this.lighting),this._bundles=new Qse,this._renderContexts=new yie,this._initialized=!0,e()}),this._initPromise)}get coordinateSystem(){return this.backend.coordinateSystem}async compileAsync(e,t,n=null){if(this._isDeviceLost===!0)return;this._initialized===!1&&await this.init();const s=this._nodes.nodeFrame,r=s.renderId,o=this._currentRenderContext,a=this._currentRenderObjectFunction,c=this._compilationPromises,l=e.isScene===!0?e:eC;n===null&&(n=e);const u=this._renderTarget,h=this._renderContexts.get(n,t,u),d=this._activeMipmapLevel,f=[];this._currentRenderContext=h,this._currentRenderObjectFunction=this.renderObject,this._handleObjectFunction=this._createObjectPipeline,this._compilationPromises=f,s.renderId++,s.update(),h.depth=this.depth,h.stencil=this.stencil,h.clippingContext||(h.clippingContext=new SS),h.clippingContext.updateGlobal(this,t),l.onBeforeRender(this,e,t,u);const m=this._renderLists.get(e,t);if(m.begin(),this._projectObject(e,t,0,m),n!==e&&n.traverseVisible(function(y){y.isLight&&y.layers.test(t.layers)&&m.pushLight(y)}),m.finish(),u!==null){this._textures.updateRenderTarget(u,d);const y=this._textures.get(u);h.textures=y.textures,h.depthTexture=y.depthTexture}else h.textures=null,h.depthTexture=null;this._nodes.updateScene(l),this._background.update(l,m,h);const _=m.opaque,g=m.transparent,p=m.lightsNode;this.opaque===!0&&_.length>0&&this._renderObjects(_,t,l,p),this.transparent===!0&&g.length>0&&this._renderTransparents(g,t,l,p),s.renderId=r,this._currentRenderContext=o,this._currentRenderObjectFunction=a,this._compilationPromises=c,this._handleObjectFunction=this._renderObjectDirect,await Promise.all(f)}async renderAsync(e,t){this._initialized===!1&&await this.init();const n=this._renderScene(e,t);await this.backend.resolveTimestampAsync(n,"render")}async waitForGPU(){await this.backend.waitForGPU()}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}_onDeviceLost(e){let t=`THREE.WebGPURenderer: ${e.api} Device Lost:

Message: ${e.message}`;e.reason&&(t+=`
Reason: ${e.reason}`),console.error(t),this._isDeviceLost=!0}_renderBundle(e,t,n){const{bundleGroup:s,camera:r,renderList:o}=e,a=this._currentRenderContext,c=this._bundles.get(s,r),l=this.backend.get(c);l.renderContexts===void 0&&(l.renderContexts=new Set);const u=s.version!==l.version,h=l.renderContexts.has(a)===!1||u;if(l.renderContexts.add(a),h){this.backend.beginBundle(a),(l.renderObjects===void 0||u)&&(l.renderObjects=[]),this._currentRenderBundle=c;const d=o.opaque;this.opaque===!0&&d.length>0&&this._renderObjects(d,r,t,n),this._currentRenderBundle=null,this.backend.finishBundle(a,c),l.version=s.version}else{const{renderObjects:d}=l;for(let f=0,m=d.length;f<m;f++){const _=d[f];this._nodes.needsRefresh(_)&&(this._nodes.updateBefore(_),this._nodes.updateForRender(_),this._bindings.updateForRender(_),this._nodes.updateAfter(_))}}this.backend.addBundle(a,c)}render(e,t){if(this._initialized===!1)return console.warn("THREE.Renderer: .render() called before the backend is initialized. Try using .renderAsync() instead."),this.renderAsync(e,t);this._renderScene(e,t)}_getFrameBufferTarget(){const{currentToneMapping:e,currentColorSpace:t}=this;if(e!==ku===!1&&t!==Ba===!1)return null;const{width:r,height:o}=this.getDrawingBufferSize(Sm),{depth:a,stencil:c}=this;let l=this._frameBufferTarget;return l===null&&(l=new Fh(r,o,{depthBuffer:a,stencilBuffer:c,type:ko,format:Lh,colorSpace:Ba,generateMipmaps:!1,minFilter:xs,magFilter:xs,samples:this.samples}),l.isPostProcessingRenderTarget=!0,this._frameBufferTarget=l),l.depthBuffer=a,l.stencilBuffer=c,l.setSize(r,o),l.viewport.copy(this._viewport),l.scissor.copy(this._scissor),l.viewport.multiplyScalar(this._pixelRatio),l.scissor.multiplyScalar(this._pixelRatio),l.scissorTest=this._scissorTest,l}_renderScene(e,t,n=!0){if(this._isDeviceLost===!0)return;const s=n?this._getFrameBufferTarget():null,r=this._nodes.nodeFrame,o=r.renderId,a=this._currentRenderContext,c=this._currentRenderObjectFunction,l=e.isScene===!0?e:eC,u=this._renderTarget,h=this._activeCubeFace,d=this._activeMipmapLevel;let f;s!==null?(f=s,this.setRenderTarget(f)):f=u;const m=this._renderContexts.get(e,t,f);this._currentRenderContext=m,this._currentRenderObjectFunction=this._renderObjectFunction||this.renderObject,this.info.calls++,this.info.render.calls++,this.info.render.frameCalls++,r.renderId=this.info.calls;const _=this.coordinateSystem;t.coordinateSystem!==_&&(t.coordinateSystem=_,t.updateProjectionMatrix()),e.matrixWorldAutoUpdate===!0&&e.updateMatrixWorld(),t.parent===null&&t.matrixWorldAutoUpdate===!0&&t.updateMatrixWorld();let g=this._viewport,p=this._scissor,y=this._pixelRatio;f!==null&&(g=f.viewport,p=f.scissor,y=1),this.getDrawingBufferSize(Sm),nx.set(0,0,Sm.width,Sm.height);const x=g.minDepth===void 0?0:g.minDepth,v=g.maxDepth===void 0?1:g.maxDepth;m.viewportValue.copy(g).multiplyScalar(y).floor(),m.viewportValue.width>>=d,m.viewportValue.height>>=d,m.viewportValue.minDepth=x,m.viewportValue.maxDepth=v,m.viewport=m.viewportValue.equals(nx)===!1,m.scissorValue.copy(p).multiplyScalar(y).floor(),m.scissor=this._scissorTest&&m.scissorValue.equals(nx)===!1,m.scissorValue.width>>=d,m.scissorValue.height>>=d,m.clippingContext||(m.clippingContext=new SS),m.clippingContext.updateGlobal(this,t),l.onBeforeRender(this,e,t,f),bm.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),ix.setFromProjectionMatrix(bm,_);const S=this._renderLists.get(e,t);if(S.begin(),this._projectObject(e,t,0,S),S.finish(),this.sortObjects===!0&&S.sort(this._opaqueSort,this._transparentSort),f!==null){this._textures.updateRenderTarget(f,d);const C=this._textures.get(f);m.textures=C.textures,m.depthTexture=C.depthTexture,m.width=C.width,m.height=C.height,m.renderTarget=f,m.depth=f.depthBuffer,m.stencil=f.stencilBuffer}else m.textures=null,m.depthTexture=null,m.width=this.domElement.width,m.height=this.domElement.height,m.depth=this.depth,m.stencil=this.stencil;m.width>>=d,m.height>>=d,m.activeCubeFace=h,m.activeMipmapLevel=d,m.occlusionQueryCount=S.occlusionQueryCount,this._nodes.updateScene(l),this._background.update(l,S,m),this.backend.beginRender(m);const{bundles:M,lightsNode:E,transparentDoublePass:w,transparent:b,opaque:T}=S;if(M.length>0&&this._renderBundles(M,l,E),this.opaque===!0&&T.length>0&&this._renderObjects(T,t,l,E),this.transparent===!0&&b.length>0&&this._renderTransparents(b,w,t,l,E),this.backend.finishRender(m),r.renderId=o,this._currentRenderContext=a,this._currentRenderObjectFunction=c,s!==null){this.setRenderTarget(u,h,d);const C=this._quad;this._nodes.hasOutputChange(f.texture)&&(C.material.fragmentNode=this._nodes.getOutputNode(f.texture),C.material.needsUpdate=!0),this._renderScene(C,C.camera,!1)}return l.onAfterRender(this,e,t,f),m}getMaxAnisotropy(){return this.backend.getMaxAnisotropy()}getActiveCubeFace(){return this._activeCubeFace}getActiveMipmapLevel(){return this._activeMipmapLevel}async setAnimationLoop(e){this._initialized===!1&&await this.init(),this._animation.setAnimationLoop(e)}async getArrayBufferAsync(e){return await this.backend.getArrayBufferAsync(e)}getContext(){return this.backend.getContext()}getPixelRatio(){return this._pixelRatio}getDrawingBufferSize(e){return e.set(this._width*this._pixelRatio,this._height*this._pixelRatio).floor()}getSize(e){return e.set(this._width,this._height)}setPixelRatio(e=1){this._pixelRatio!==e&&(this._pixelRatio=e,this.setSize(this._width,this._height,!1))}setDrawingBufferSize(e,t,n){this._width=e,this._height=t,this._pixelRatio=n,this.domElement.width=Math.floor(e*n),this.domElement.height=Math.floor(t*n),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize()}setSize(e,t,n=!0){this._width=e,this._height=t,this.domElement.width=Math.floor(e*this._pixelRatio),this.domElement.height=Math.floor(t*this._pixelRatio),n===!0&&(this.domElement.style.width=e+"px",this.domElement.style.height=t+"px"),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize()}setOpaqueSort(e){this._opaqueSort=e}setTransparentSort(e){this._transparentSort=e}getScissor(e){const t=this._scissor;return e.x=t.x,e.y=t.y,e.width=t.width,e.height=t.height,e}setScissor(e,t,n,s){const r=this._scissor;e.isVector4?r.copy(e):r.set(e,t,n,s)}getScissorTest(){return this._scissorTest}setScissorTest(e){this._scissorTest=e,this.backend.setScissorTest(e)}getViewport(e){return e.copy(this._viewport)}setViewport(e,t,n,s,r=0,o=1){const a=this._viewport;e.isVector4?a.copy(e):a.set(e,t,n,s),a.minDepth=r,a.maxDepth=o}getClearColor(e){return e.copy(this._clearColor)}setClearColor(e,t=1){this._clearColor.set(e),this._clearColor.a=t}getClearAlpha(){return this._clearColor.a}setClearAlpha(e){this._clearColor.a=e}getClearDepth(){return this._clearDepth}setClearDepth(e){this._clearDepth=e}getClearStencil(){return this._clearStencil}setClearStencil(e){this._clearStencil=e}isOccluded(e){const t=this._currentRenderContext;return t&&this.backend.isOccluded(t,e)}clear(e=!0,t=!0,n=!0){if(this._initialized===!1)return console.warn("THREE.Renderer: .clear() called before the backend is initialized. Try using .clearAsync() instead."),this.clearAsync(e,t,n);const s=this._renderTarget||this._getFrameBufferTarget();let r=null;if(s!==null&&(this._textures.updateRenderTarget(s),r=this._textures.get(s)),this.backend.clear(e,t,n,r),s!==null&&this._renderTarget===null){const o=this._quad;this._nodes.hasOutputChange(s.texture)&&(o.material.fragmentNode=this._nodes.getOutputNode(s.texture),o.material.needsUpdate=!0),this._renderScene(o,o.camera,!1)}}clearColor(){return this.clear(!0,!1,!1)}clearDepth(){return this.clear(!1,!0,!1)}clearStencil(){return this.clear(!1,!1,!0)}async clearAsync(e=!0,t=!0,n=!0){this._initialized===!1&&await this.init(),this.clear(e,t,n)}clearColorAsync(){return this.clearAsync(!0,!1,!1)}clearDepthAsync(){return this.clearAsync(!1,!0,!1)}clearStencilAsync(){return this.clearAsync(!1,!1,!0)}get currentToneMapping(){return this._renderTarget!==null?ku:this.toneMapping}get currentColorSpace(){return this._renderTarget!==null?Ba:this.outputColorSpace}dispose(){this.info.dispose(),this.backend.dispose(),this._animation.dispose(),this._objects.dispose(),this._pipelines.dispose(),this._nodes.dispose(),this._bindings.dispose(),this._renderLists.dispose(),this._renderContexts.dispose(),this._textures.dispose(),this.setRenderTarget(null),this.setAnimationLoop(null)}setRenderTarget(e,t=0,n=0){this._renderTarget=e,this._activeCubeFace=t,this._activeMipmapLevel=n}getRenderTarget(){return this._renderTarget}setRenderObjectFunction(e){this._renderObjectFunction=e}getRenderObjectFunction(){return this._renderObjectFunction}compute(e){if(this.isDeviceLost===!0)return;if(this._initialized===!1)return console.warn("THREE.Renderer: .compute() called before the backend is initialized. Try using .computeAsync() instead."),this.computeAsync(e);const t=this._nodes.nodeFrame,n=t.renderId;this.info.calls++,this.info.compute.calls++,this.info.compute.frameCalls++,t.renderId=this.info.calls;const s=this.backend,r=this._pipelines,o=this._bindings,a=this._nodes,c=Array.isArray(e)?e:[e];if(c[0]===void 0||c[0].isComputeNode!==!0)throw new Error("THREE.Renderer: .compute() expects a ComputeNode.");s.beginCompute(e);for(const l of c){if(r.has(l)===!1){const d=()=>{l.removeEventListener("dispose",d),r.delete(l),o.delete(l),a.delete(l)};l.addEventListener("dispose",d);const f=l.onInitFunction;f!==null&&f.call(l,{renderer:this})}a.updateForCompute(l),o.updateForCompute(l);const u=o.getForCompute(l),h=r.getForCompute(l,u);s.compute(e,l,u,h)}s.finishCompute(e),t.renderId=n}async computeAsync(e){this._initialized===!1&&await this.init(),this.compute(e),await this.backend.resolveTimestampAsync(e,"compute")}async hasFeatureAsync(e){return this._initialized===!1&&await this.init(),this.backend.hasFeature(e)}hasFeature(e){return this._initialized===!1?(console.warn("THREE.Renderer: .hasFeature() called before the backend is initialized. Try using .hasFeatureAsync() instead."),!1):this.backend.hasFeature(e)}copyFramebufferToTexture(e,t=null){if(t!==null)if(t.isVector2)t=ba.set(t.x,t.y,e.image.width,e.image.height).floor();else if(t.isVector4)t=ba.copy(t).floor();else{console.error("THREE.Renderer.copyFramebufferToTexture: Invalid rectangle.");return}else t=ba.set(0,0,e.image.width,e.image.height);let n=this._currentRenderContext,s;n!==null?s=n.renderTarget:(s=this._renderTarget||this._getFrameBufferTarget(),s!==null&&(this._textures.updateRenderTarget(s),n=this._textures.get(s))),this._textures.updateTexture(e,{renderTarget:s}),this.backend.copyFramebufferToTexture(e,n,t)}copyTextureToTexture(e,t,n=null,s=null,r=0){this._textures.updateTexture(e),this._textures.updateTexture(t),this.backend.copyTextureToTexture(e,t,n,s,r)}readRenderTargetPixelsAsync(e,t,n,s,r,o=0,a=0){return this.backend.copyTextureToBuffer(e.textures[o],t,n,s,r,a)}_projectObject(e,t,n,s){if(e.visible===!1)return;if(e.layers.test(t.layers)){if(e.isGroup)n=e.renderOrder;else if(e.isLOD)e.autoUpdate===!0&&e.update(t);else if(e.isLight)s.pushLight(e);else if(e.isSprite){if(!e.frustumCulled||ix.intersectsSprite(e)){this.sortObjects===!0&&ba.setFromMatrixPosition(e.matrixWorld).applyMatrix4(bm);const{geometry:a,material:c}=e;c.visible&&s.push(e,a,c,n,ba.z,null)}}else if(e.isLineLoop)console.error("THREE.Renderer: Objects of type THREE.LineLoop are not supported. Please use THREE.Line or THREE.LineSegments.");else if((e.isMesh||e.isLine||e.isPoints)&&(!e.frustumCulled||ix.intersectsObject(e))){const{geometry:a,material:c}=e;if(this.sortObjects===!0&&(a.boundingSphere===null&&a.computeBoundingSphere(),ba.copy(a.boundingSphere.center).applyMatrix4(e.matrixWorld).applyMatrix4(bm)),Array.isArray(c)){const l=a.groups;for(let u=0,h=l.length;u<h;u++){const d=l[u],f=c[d.materialIndex];f&&f.visible&&s.push(e,a,f,n,ba.z,d)}}else c.visible&&s.push(e,a,c,n,ba.z,null)}}if(e.isBundleGroup===!0&&this.backend.beginBundle!==void 0){const a=s;s=this._renderLists.get(e,t),s.begin(),a.pushBundle({bundleGroup:e,camera:t,renderList:s}),s.finish()}const o=e.children;for(let a=0,c=o.length;a<c;a++)this._projectObject(o[a],t,n,s)}_renderBundles(e,t,n){for(const s of e)this._renderBundle(s,t,n)}_renderTransparents(e,t,n,s,r){if(t.length>0){for(const{material:o}of t)o.side=pr;this._renderObjects(t,n,s,r,"backSide");for(const{material:o}of t)o.side=ch;this._renderObjects(e,n,s,r);for(const{material:o}of t)o.side=Bu}else this._renderObjects(e,n,s,r)}_renderObjects(e,t,n,s,r=null){for(let o=0,a=e.length;o<a;o++){const c=e[o],{object:l,geometry:u,material:h,group:d}=c;if(t.isArrayCamera){const f=t.cameras;for(let m=0,_=f.length;m<_;m++){const g=f[m];if(l.layers.test(g.layers)){const p=g.viewport,y=p.minDepth===void 0?0:p.minDepth,x=p.maxDepth===void 0?1:p.maxDepth,v=this._currentRenderContext.viewportValue;v.copy(p).multiplyScalar(this._pixelRatio).floor(),v.minDepth=y,v.maxDepth=x,this.backend.updateViewport(this._currentRenderContext),this._currentRenderObjectFunction(l,n,g,u,h,d,s,r)}}}else this._currentRenderObjectFunction(l,n,t,u,h,d,s,r)}}renderObject(e,t,n,s,r,o,a,c=null){let l,u,h;if(e.onBeforeRender(this,t,n,s,r,o),t.overrideMaterial!==null){const d=t.overrideMaterial;r.positionNode&&r.positionNode.isNode&&(l=d.positionNode,d.positionNode=r.positionNode),d.isShadowNodeMaterial&&(d.side=r.shadowSide===null?r.side:r.shadowSide,r.depthNode&&r.depthNode.isNode&&(h=d.depthNode,d.depthNode=r.depthNode),r.shadowNode&&r.shadowNode.isNode&&(u=d.fragmentNode,d.fragmentNode=r.shadowNode),this.localClippingEnabled&&(r.clipShadows?(d.clippingPlanes!==r.clippingPlanes&&(d.clippingPlanes=r.clippingPlanes,d.needsUpdate=!0),d.clipIntersection!==r.clipIntersection&&(d.clipIntersection=r.clipIntersection)):Array.isArray(d.clippingPlanes)&&(d.clippingPlanes=null,d.needsUpdate=!0))),r=d}r.transparent===!0&&r.side===Bu&&r.forceSinglePass===!1?(r.side=pr,this._handleObjectFunction(e,r,t,n,a,o,"backSide"),r.side=ch,this._handleObjectFunction(e,r,t,n,a,o,c),r.side=Bu):this._handleObjectFunction(e,r,t,n,a,o,c),l!==void 0&&(t.overrideMaterial.positionNode=l),h!==void 0&&(t.overrideMaterial.depthNode=h),u!==void 0&&(t.overrideMaterial.fragmentNode=u),e.onAfterRender(this,t,n,s,r,o)}_renderObjectDirect(e,t,n,s,r,o,a){const c=this._objects.get(e,t,n,s,r,this._currentRenderContext,a);c.drawRange=e.geometry.drawRange,c.group=o;const l=this._nodes.needsRefresh(c);l&&(this._nodes.updateBefore(c),this._geometries.updateForRender(c),this._nodes.updateForRender(c),this._bindings.updateForRender(c)),this._pipelines.updateForRender(c),this._currentRenderBundle!==null&&(this.backend.get(this._currentRenderBundle).renderObjects.push(c),c.bundle=this._currentRenderBundle.scene),this.backend.draw(c,this.info),l&&this._nodes.updateAfter(c)}_createObjectPipeline(e,t,n,s,r,o){const a=this._objects.get(e,t,n,s,r,this._currentRenderContext,o);this._nodes.updateBefore(a),this._geometries.updateForRender(a),this._nodes.updateForRender(a),this._bindings.updateForRender(a),this._pipelines.getForRender(a,this._compilationPromises),this._nodes.updateAfter(a)}get compile(){return this.compileAsync}}class FM{constructor(e=""){this.name=e,this.visibility=0}setVisibility(e){this.visibility|=e}clone(){return Object.assign(new this.constructor,this)}}function nre(i){return i+(Na-i%Na)%Na}class ML extends FM{constructor(e,t=null){super(e),this.isBuffer=!0,this.bytesPerElement=Float32Array.BYTES_PER_ELEMENT,this._buffer=t}get byteLength(){return nre(this._buffer.byteLength)}get buffer(){return this._buffer}update(){return!0}}class TL extends ML{constructor(e,t=null){super(e,t),this.isUniformBuffer=!0}}let ire=0;class EL extends TL{constructor(e,t){super("UniformBuffer_"+ire++,e?e.value:null),this.nodeUniform=e,this.groupNode=t}get buffer(){return this.nodeUniform.value}}class sre extends TL{constructor(e){super(e),this.isUniformsGroup=!0,this._values=null,this.uniforms=[]}addUniform(e){return this.uniforms.push(e),this}removeUniform(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}get values(){return this._values===null&&(this._values=Array.from(this.buffer)),this._values}get buffer(){let e=this._buffer;if(e===null){const t=this.byteLength;e=new Float32Array(new ArrayBuffer(t)),this._buffer=e}return e}get byteLength(){let e=0;for(let t=0,n=this.uniforms.length;t<n;t++){const s=this.uniforms[t],{boundary:r,itemSize:o}=s,a=e%Na,c=Na-a;a!==0&&c-r<0?e+=Na-a:a%r!==0&&(e+=a%r),s.offset=e/this.bytesPerElement,e+=o*this.bytesPerElement}return Math.ceil(e/Na)*Na}update(){let e=!1;for(const t of this.uniforms)this.updateByType(t)===!0&&(e=!0);return e}updateByType(e){if(e.isNumberUniform)return this.updateNumber(e);if(e.isVector2Uniform)return this.updateVector2(e);if(e.isVector3Uniform)return this.updateVector3(e);if(e.isVector4Uniform)return this.updateVector4(e);if(e.isColorUniform)return this.updateColor(e);if(e.isMatrix3Uniform)return this.updateMatrix3(e);if(e.isMatrix4Uniform)return this.updateMatrix4(e);console.error("THREE.WebGPUUniformsGroup: Unsupported uniform type.",e)}updateNumber(e){let t=!1;const n=this.values,s=e.getValue(),r=e.offset;if(n[r]!==s){const o=this.buffer;o[r]=n[r]=s,t=!0}return t}updateVector2(e){let t=!1;const n=this.values,s=e.getValue(),r=e.offset;if(n[r+0]!==s.x||n[r+1]!==s.y){const o=this.buffer;o[r+0]=n[r+0]=s.x,o[r+1]=n[r+1]=s.y,t=!0}return t}updateVector3(e){let t=!1;const n=this.values,s=e.getValue(),r=e.offset;if(n[r+0]!==s.x||n[r+1]!==s.y||n[r+2]!==s.z){const o=this.buffer;o[r+0]=n[r+0]=s.x,o[r+1]=n[r+1]=s.y,o[r+2]=n[r+2]=s.z,t=!0}return t}updateVector4(e){let t=!1;const n=this.values,s=e.getValue(),r=e.offset;if(n[r+0]!==s.x||n[r+1]!==s.y||n[r+2]!==s.z||n[r+4]!==s.w){const o=this.buffer;o[r+0]=n[r+0]=s.x,o[r+1]=n[r+1]=s.y,o[r+2]=n[r+2]=s.z,o[r+3]=n[r+3]=s.w,t=!0}return t}updateColor(e){let t=!1;const n=this.values,s=e.getValue(),r=e.offset;if(n[r+0]!==s.r||n[r+1]!==s.g||n[r+2]!==s.b){const o=this.buffer;o[r+0]=n[r+0]=s.r,o[r+1]=n[r+1]=s.g,o[r+2]=n[r+2]=s.b,t=!0}return t}updateMatrix3(e){let t=!1;const n=this.values,s=e.getValue().elements,r=e.offset;if(n[r+0]!==s[0]||n[r+1]!==s[1]||n[r+2]!==s[2]||n[r+4]!==s[3]||n[r+5]!==s[4]||n[r+6]!==s[5]||n[r+8]!==s[6]||n[r+9]!==s[7]||n[r+10]!==s[8]){const o=this.buffer;o[r+0]=n[r+0]=s[0],o[r+1]=n[r+1]=s[1],o[r+2]=n[r+2]=s[2],o[r+4]=n[r+4]=s[3],o[r+5]=n[r+5]=s[4],o[r+6]=n[r+6]=s[5],o[r+8]=n[r+8]=s[6],o[r+9]=n[r+9]=s[7],o[r+10]=n[r+10]=s[8],t=!0}return t}updateMatrix4(e){let t=!1;const n=this.values,s=e.getValue().elements,r=e.offset;return ore(n,s,r)===!1&&(this.buffer.set(s,r),rre(n,s,r),t=!0),t}}function rre(i,e,t){for(let n=0,s=e.length;n<s;n++)i[t+n]=e[n]}function ore(i,e,t){for(let n=0,s=e.length;n<s;n++)if(i[t+n]!==e[n])return!1;return!0}let are=0;class wL extends sre{constructor(e,t){super(e),this.id=are++,this.groupNode=t,this.isNodeUniformsGroup=!0}getNodes(){const e=[];for(const t of this.uniforms){const n=t.nodeUniform.node;if(!n)throw new Error("NodeUniformsGroup: Uniform has no node.");e.push(n)}return e}}let cre=0;class lre extends FM{constructor(e,t){super(e),this.id=cre++,this.texture=t,this.version=t?t.version:0,this.store=!1,this.generation=null,this.isSampledTexture=!0}needsBindingsUpdate(e){const{texture:t}=this;return e!==this.generation?(this.generation=e,!0):t.isVideoTexture}update(){const{texture:e,version:t}=this;return t!==e.version?(this.version=e.version,!0):!1}}class O_ extends lre{constructor(e,t,n,s=null){super(e,t?t.value:null),this.textureNode=t,this.groupNode=n,this.access=s}needsBindingsUpdate(e){return this.textureNode.value!==this.texture||super.needsBindingsUpdate(e)}update(){const{textureNode:e}=this;return this.texture!==e.value?(this.texture=e.value,!0):super.update()}}class AL extends O_{constructor(e,t,n,s){super(e,t,n,s),this.isSampledCubeTexture=!0}}class CL extends O_{constructor(e,t,n,s){super(e,t,n,s),this.isSampledTexture3D=!0}}const ure={atan2:"atan",textureDimensions:"textureSize",equals:"equal"},hre={low:"lowp",medium:"mediump",high:"highp"},tC={swizzleAssign:!0,storageBuffer:!1},nC=`
precision highp float;
precision highp int;
precision highp sampler2D;
precision highp sampler3D;
precision highp samplerCube;
precision highp sampler2DArray;

precision highp usampler2D;
precision highp usampler3D;
precision highp usamplerCube;
precision highp usampler2DArray;

precision highp isampler2D;
precision highp isampler3D;
precision highp isamplerCube;
precision highp isampler2DArray;

precision lowp sampler2DShadow;
`;class dre extends xL{constructor(e,t){super(e,t,new Yse),this.uniformGroups={},this.transforms=[],this.extensions={},this.useComparisonMethod=!0}needsColorSpaceToLinearSRGB(e){return e.isVideoTexture===!0&&e.colorSpace!==il}getMethod(e){return ure[e]||e}getOutputStructName(){return""}buildFunctionCode(e){const t=e.layout,n=this.flowShaderNode(e),s=[];for(const o of t.inputs)s.push(this.getType(o.type)+" "+o.name);return`${this.getType(t.type)} ${t.name}( ${s.join(", ")} ) {

	${n.vars}

${n.code}
	return ${n.result};

}`}setupPBO(e){const t=e.value;if(t.pbo===void 0){const n=t.array,s=t.count*t.itemSize,{itemSize:r}=t,o=t.array.constructor.name.toLowerCase().includes("int");let a=o?Zb:Yb;r===2?a=o?Kb:cf:r===3?a=o?gZ:jb:r===4&&(a=o?Qb:Lh);const c={Float32Array:gs,Uint8Array:Oa,Uint16Array:Su,Uint32Array:ri,Int8Array:Id,Int16Array:Fd,Int32Array:Ni,Uint8ClampedArray:Oa},l=Math.pow(2,Math.ceil(Math.log2(Math.sqrt(s/r))));let u=Math.ceil(s/r/l);l*u*r<s&&u++;const h=l*u*r,d=new n.constructor(h);d.set(n,0),t.array=d;const f=new bK(t.array,l,u,a,c[t.array.constructor.name]||gs);f.needsUpdate=!0,f.isPBOTexture=!0;const m=new $f(f,null,null);m.setPrecision("high"),t.pboNode=m,t.pbo=m.value,this.getUniformFromNode(t.pboNode,"texture",this.shaderStage,this.context.label)}}getPropertyName(e,t=this.shaderStage){return e.isNodeUniform&&e.node.isTextureNode!==!0&&e.node.isBufferNode!==!0?t.charAt(0)+"_"+e.name:super.getPropertyName(e,t)}generatePBO(e){const{node:t,indexNode:n}=e,s=t.value;if(this.renderer.backend.has(s)){const u=this.renderer.backend.get(s);u.pbo=s.pbo}const r=this.getUniformFromNode(s.pboNode,"texture",this.shaderStage,this.context.label),o=this.getPropertyName(r);this.increaseUsage(n);const a=n.build(this,"uint"),c=this.getDataFromNode(e);let l=c.propertyName;if(l===void 0){const u=this.getVarFromNode(e);l=this.getPropertyName(u);const h=this.getDataFromNode(t);let d=h.propertySizeName;d===void 0&&(d=l+"Size",this.getVarFromNode(t,d,"uint"),this.addLineFlowCode(`${d} = uint( textureSize( ${o}, 0 ).x )`,e),h.propertySizeName=d);const{itemSize:f}=s,m="."+Oh.join("").slice(0,f),_=`ivec2(${a} % ${d}, ${a} / ${d})`,g=this.generateTextureLoad(null,o,_,null,"0");let p="vec4";s.pbo.type===ri?p="uvec4":s.pbo.type===Ni&&(p="ivec4"),this.addLineFlowCode(`${l} = ${p}(${g})${m}`,e),c.propertyName=l}return l}generateTextureLoad(e,t,n,s,r="0"){return s?`texelFetch( ${t}, ivec3( ${n}, ${s} ), ${r} )`:`texelFetch( ${t}, ${n}, ${r} )`}generateTexture(e,t,n,s){return e.isDepthTexture?`texture( ${t}, ${n} ).x`:(s&&(n=`vec3( ${n}, ${s} )`),`texture( ${t}, ${n} )`)}generateTextureLevel(e,t,n,s){return`textureLod( ${t}, ${n}, ${s} )`}generateTextureBias(e,t,n,s){return`texture( ${t}, ${n}, ${s} )`}generateTextureGrad(e,t,n,s){return`textureGrad( ${t}, ${n}, ${s[0]}, ${s[1]} )`}generateTextureCompare(e,t,n,s,r,o=this.shaderStage){if(o==="fragment")return`texture( ${t}, vec3( ${n}, ${s} ) )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${o} shader.`)}getVars(e){const t=[],n=this.vars[e];if(n!==void 0)for(const s of n)t.push(`${this.getVar(s.type,s.name)};`);return t.join(`
	`)}getUniforms(e){const t=this.uniforms[e],n=[],s={};for(const o of t){let a=null,c=!1;if(o.type==="texture"){const u=o.node.value;let h="";u.isDataTexture===!0&&(u.type===ri?h="u":u.type===Ni&&(h="i")),u.compareFunction?a=`sampler2DShadow ${o.name};`:u.isDataArrayTexture===!0||u.isCompressedArrayTexture===!0?a=`${h}sampler2DArray ${o.name};`:a=`${h}sampler2D ${o.name};`}else if(o.type==="cubeTexture")a=`samplerCube ${o.name};`;else if(o.type==="texture3D")a=`sampler3D ${o.name};`;else if(o.type==="buffer"){const u=o.node,h=this.getType(u.bufferType),d=u.bufferCount,f=d>0?d:"";a=`${u.name} {
	${h} ${o.name}[${f}];
};
`}else a=`${this.getVectorType(o.type)} ${this.getPropertyName(o,e)};`,c=!0;const l=o.node.precision;if(l!==null&&(a=hre[l]+" "+a),c){a="	"+a;const u=o.groupNode.name;(s[u]||(s[u]=[])).push(a)}else a="uniform "+a,n.push(a)}let r="";for(const o in s){const a=s[o];r+=this._getGLSLUniformStruct(e+"_"+o,a.join(`
`))+`
`}return r+=n.join(`
`),r}getTypeFromAttribute(e){let t=super.getTypeFromAttribute(e);if(/^[iu]/.test(t)&&e.gpuType!==Ni){let n=e;e.isInterleavedBufferAttribute&&(n=e.data);const s=n.array;s instanceof Uint32Array||s instanceof Int32Array||(t=t.slice(1))}return t}getAttributes(e){let t="";if(e==="vertex"||e==="compute"){const n=this.getAttributesArray();let s=0;for(const r of n)t+=`layout( location = ${s++} ) in ${r.type} ${r.name};
`}return t}getStructMembers(e){const t=[],n=e.getMemberTypes();for(let s=0;s<n.length;s++){const r=n[s];t.push(`layout( location = ${s} ) out ${r} m${s};`)}return t.join(`
`)}getStructs(e){const t=[],n=this.structs[e];if(n.length===0)return`layout( location = 0 ) out vec4 fragColor;
`;for(let s=0,r=n.length;s<r;s++){const o=n[s];let a=`
`;a+=this.getStructMembers(o),a+=`
`,t.push(a)}return t.join(`

`)}getVaryings(e){let t="";const n=this.varyings;if(e==="vertex"||e==="compute")for(const s of n){e==="compute"&&(s.needsInterpolation=!0);const r=s.type,o=r.includes("int")||r.includes("uv")||r.includes("iv")?"flat ":"";t+=`${o}${s.needsInterpolation?"out":"/*out*/"} ${r} ${s.name};
`}else if(e==="fragment"){for(const s of n)if(s.needsInterpolation){const r=s.type,o=r.includes("int")||r.includes("uv")||r.includes("iv")?"flat ":"";t+=`${o}in ${r} ${s.name};
`}}return t}getVertexIndex(){return"uint( gl_VertexID )"}getInstanceIndex(){return"uint( gl_InstanceID )"}getInvocationLocalIndex(){return`uint( gl_InstanceID ) % ${this.object.workgroupSize.reduce((n,s)=>n*s,1)}u`}getDrawIndex(){return this.renderer.backend.extensions.has("WEBGL_multi_draw")?"uint( gl_DrawID )":null}getFrontFacing(){return"gl_FrontFacing"}getFragCoord(){return"gl_FragCoord.xy"}getFragDepth(){return"gl_FragDepth"}enableExtension(e,t,n=this.shaderStage){const s=this.extensions[n]||(this.extensions[n]=new Map);s.has(e)===!1&&s.set(e,{name:e,behavior:t})}getExtensions(e){const t=[];if(e==="vertex"){const s=this.renderer.backend.extensions;this.object.isBatchedMesh&&s.has("WEBGL_multi_draw")&&this.enableExtension("GL_ANGLE_multi_draw","require",e)}const n=this.extensions[e];if(n!==void 0)for(const{name:s,behavior:r}of n.values())t.push(`#extension ${s} : ${r}`);return t.join(`
`)}isAvailable(e){let t=tC[e];if(t===void 0){if(e==="float32Filterable"){const n=this.renderer.backend.extensions;n.has("OES_texture_float_linear")?(n.get("OES_texture_float_linear"),t=!0):t=!1}tC[e]=t}return t}isFlipY(){return!0}registerTransform(e,t){this.transforms.push({varyingName:e,attributeNode:t})}getTransforms(){const e=this.transforms;let t="";for(let n=0;n<e.length;n++){const s=e[n],r=this.getPropertyName(s.attributeNode);t+=`${s.varyingName} = ${r};
	`}return t}_getGLSLUniformStruct(e,t){return`
layout( std140 ) uniform ${e} {
${t}
};`}_getGLSLVertexCode(e){return`#version 300 es

${this.getSignature()}

// extensions 
${e.extensions}

// precision
${nC}

// uniforms
${e.uniforms}

// varyings
${e.varyings}

// attributes
${e.attributes}

// codes
${e.codes}

void main() {

	// vars
	${e.vars}

	// transforms
	${e.transforms}

	// flow
	${e.flow}

	gl_PointSize = 1.0;

}
`}_getGLSLFragmentCode(e){return`#version 300 es

${this.getSignature()}

// precision
${nC}

// uniforms
${e.uniforms}

// varyings
${e.varyings}

// codes
${e.codes}

${e.structs}

void main() {

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}buildCode(){const e=this.material!==null?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const t in e){let n=`// code

`;n+=this.flowCode[t];const s=this.flowNodes[t],r=s[s.length-1];for(const a of s){const c=this.getFlowData(a),l=a.name;l&&(n.length>0&&(n+=`
`),n+=`	// flow -> ${l}
	`),n+=`${c.code}
	`,a===r&&t!=="compute"&&(n+=`// result
	`,t==="vertex"?(n+="gl_Position = ",n+=`${c.result};`):t==="fragment"&&(a.outputNode.isOutputStructNode||(n+="fragColor = ",n+=`${c.result};`)))}const o=e[t];o.extensions=this.getExtensions(t),o.uniforms=this.getUniforms(t),o.attributes=this.getAttributes(t),o.varyings=this.getVaryings(t),o.vars=this.getVars(t),o.structs=this.getStructs(t),o.codes=this.getCodes(t),o.transforms=this.getTransforms(t),o.flow=n}this.material!==null?(this.vertexShader=this._getGLSLVertexCode(e.vertex),this.fragmentShader=this._getGLSLFragmentCode(e.fragment)):this.computeShader=this._getGLSLVertexCode(e.compute)}getUniformFromNode(e,t,n,s=null){const r=super.getUniformFromNode(e,t,n,s),o=this.getDataFromNode(e,n,this.globalCache);let a=o.uniformGPU;if(a===void 0){const c=e.groupNode,l=c.name,u=this.getBindGroupArray(l,n);if(t==="texture")a=new O_(r.name,r.node,c),u.push(a);else if(t==="cubeTexture")a=new AL(r.name,r.node,c),u.push(a);else if(t==="texture3D")a=new CL(r.name,r.node,c),u.push(a);else if(t==="buffer"){e.name=`NodeBuffer_${e.id}`,r.name=`buffer${e.id}`;const h=new EL(e,c);h.name=e.name,u.push(h),a=h}else{const h=this.uniformGroups[n]||(this.uniformGroups[n]={});let d=h[l];d===void 0&&(d=new wL(n+"_"+l,c),h[l]=d,u.push(d)),a=this.getNodeUniform(r,t),d.addUniform(a)}o.uniformGPU=a}return r}}let sx=null,rx=null,cu=null;class RL{constructor(e={}){this.parameters=Object.assign({},e),this.data=new WeakMap,this.renderer=null,this.domElement=null}async init(e){this.renderer=e}begin(){}finish(){}draw(){}createProgram(){}destroyProgram(){}createBindings(){}updateBindings(){}createRenderPipeline(){}createComputePipeline(){}destroyPipeline(){}needsRenderUpdate(){}getRenderCacheKey(){}createNodeBuilder(){}createSampler(){}createDefaultTexture(){}createTexture(){}copyTextureToBuffer(){}createAttribute(){}createIndexAttribute(){}updateAttribute(){}destroyAttribute(){}getContext(){}updateSize(){}resolveTimestampAsync(){}hasFeatureAsync(){}hasFeature(){}getInstanceCount(e){const{object:t,geometry:n}=e;return n.isInstancedBufferGeometry?n.instanceCount:t.count>1?t.count:1}getDrawingBufferSize(){return sx=sx||new Bt,this.renderer.getDrawingBufferSize(sx)}getScissor(){return rx=rx||new Yt,this.renderer.getScissor(rx)}setScissorTest(){}getClearColor(){const e=this.renderer;return cu=cu||new CM,e.getClearColor(cu),cu.getRGB(cu,this.renderer.currentColorSpace),cu}getDomElement(){let e=this.domElement;return e===null&&(e=this.parameters.canvas!==void 0?this.parameters.canvas:KZ(),"setAttribute"in e&&e.setAttribute("data-engine",`three.js r${b_} webgpu`),this.domElement=e),e}set(e,t){this.data.set(e,t)}get(e){let t=this.data.get(e);return t===void 0&&(t={},this.data.set(e,t)),t}has(e){return this.data.has(e)}delete(e){this.data.delete(e)}dispose(){}}let fre=0;class pre{constructor(e,t){this.buffers=[e.bufferGPU,t],this.type=e.type,this.bufferType=e.bufferType,this.pbo=e.pbo,this.byteLength=e.byteLength,this.bytesPerElement=e.BYTES_PER_ELEMENT,this.version=e.version,this.isInteger=e.isInteger,this.activeBufferIndex=0,this.baseId=e.id}get id(){return`${this.baseId}|${this.activeBufferIndex}`}get bufferGPU(){return this.buffers[this.activeBufferIndex]}get transformBuffer(){return this.buffers[this.activeBufferIndex^1]}switchBuffers(){this.activeBufferIndex^=1}}class mre{constructor(e){this.backend=e}createAttribute(e,t){const n=this.backend,{gl:s}=n,r=e.array,o=e.usage||s.STATIC_DRAW,a=e.isInterleavedBufferAttribute?e.data:e,c=n.get(a);let l=c.bufferGPU;l===void 0&&(l=this._createBuffer(s,t,r,o),c.bufferGPU=l,c.bufferType=t,c.version=a.version);let u;if(r instanceof Float32Array)u=s.FLOAT;else if(r instanceof Uint16Array)e.isFloat16BufferAttribute?u=s.HALF_FLOAT:u=s.UNSIGNED_SHORT;else if(r instanceof Int16Array)u=s.SHORT;else if(r instanceof Uint32Array)u=s.UNSIGNED_INT;else if(r instanceof Int32Array)u=s.INT;else if(r instanceof Int8Array)u=s.BYTE;else if(r instanceof Uint8Array)u=s.UNSIGNED_BYTE;else if(r instanceof Uint8ClampedArray)u=s.UNSIGNED_BYTE;else throw new Error("THREE.WebGLBackend: Unsupported buffer data format: "+r);let h={bufferGPU:l,bufferType:t,type:u,byteLength:r.byteLength,bytesPerElement:r.BYTES_PER_ELEMENT,version:e.version,pbo:e.pbo,isInteger:u===s.INT||u===s.UNSIGNED_INT||e.gpuType===Ni,id:fre++};if(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute){const d=this._createBuffer(s,t,r,o);h=new pre(h,d)}n.set(e,h)}updateAttribute(e){const t=this.backend,{gl:n}=t,s=e.array,r=e.isInterleavedBufferAttribute?e.data:e,o=t.get(r),a=o.bufferType,c=e.isInterleavedBufferAttribute?e.data.updateRanges:e.updateRanges;if(n.bindBuffer(a,o.bufferGPU),c.length===0)n.bufferSubData(a,0,s);else{for(let l=0,u=c.length;l<u;l++){const h=c[l];n.bufferSubData(a,h.start*s.BYTES_PER_ELEMENT,s,h.start,h.count)}r.clearUpdateRanges()}n.bindBuffer(a,null),o.version=r.version}destroyAttribute(e){const t=this.backend,{gl:n}=t;e.isInterleavedBufferAttribute&&t.delete(e.data);const s=t.get(e);n.deleteBuffer(s.bufferGPU),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,{gl:n}=t,s=e.isInterleavedBufferAttribute?e.data:e,{bufferGPU:r}=t.get(s),o=e.array,a=o.byteLength;n.bindBuffer(n.COPY_READ_BUFFER,r);const c=n.createBuffer();n.bindBuffer(n.COPY_WRITE_BUFFER,c),n.bufferData(n.COPY_WRITE_BUFFER,a,n.STREAM_READ),n.copyBufferSubData(n.COPY_READ_BUFFER,n.COPY_WRITE_BUFFER,0,0,a),await t.utils._clientWaitAsync();const l=new e.array.constructor(o.length);return n.bindBuffer(n.COPY_WRITE_BUFFER,c),n.getBufferSubData(n.COPY_WRITE_BUFFER,0,l),n.deleteBuffer(c),n.bindBuffer(n.COPY_READ_BUFFER,null),n.bindBuffer(n.COPY_WRITE_BUFFER,null),l.buffer}_createBuffer(e,t,n,s){const r=e.createBuffer();return e.bindBuffer(t,r),e.bufferData(t,n,s),e.bindBuffer(t,null),r}}let iC=!1,ox,gd;class gre{constructor(e){this.backend=e,this.gl=this.backend.gl,this.enabled={},this.currentFlipSided=null,this.currentCullFace=null,this.currentProgram=null,this.currentBlendingEnabled=!1,this.currentBlending=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentPremultipledAlpha=null,this.currentPolygonOffsetFactor=null,this.currentPolygonOffsetUnits=null,this.currentColorMask=null,this.currentDepthFunc=null,this.currentDepthMask=null,this.currentStencilFunc=null,this.currentStencilRef=null,this.currentStencilFuncMask=null,this.currentStencilFail=null,this.currentStencilZFail=null,this.currentStencilZPass=null,this.currentStencilMask=null,this.currentLineWidth=null,this.currentBoundFramebuffers={},this.currentDrawbuffers=new WeakMap,this.maxTextures=this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS),this.currentTextureSlot=null,this.currentBoundTextures={},this.currentBoundBufferBases={},iC===!1&&(this._init(this.gl),iC=!0)}_init(e){ox={[Ca]:e.FUNC_ADD,[i2]:e.FUNC_SUBTRACT,[s2]:e.FUNC_REVERSE_SUBTRACT},gd={[r2]:e.ZERO,[o2]:e.ONE,[a2]:e.SRC_COLOR,[Ig]:e.SRC_ALPHA,[f2]:e.SRC_ALPHA_SATURATE,[h2]:e.DST_COLOR,[l2]:e.DST_ALPHA,[c2]:e.ONE_MINUS_SRC_COLOR,[Fg]:e.ONE_MINUS_SRC_ALPHA,[d2]:e.ONE_MINUS_DST_COLOR,[u2]:e.ONE_MINUS_DST_ALPHA}}enable(e){const{enabled:t}=this;t[e]!==!0&&(this.gl.enable(e),t[e]=!0)}disable(e){const{enabled:t}=this;t[e]!==!1&&(this.gl.disable(e),t[e]=!1)}setFlipSided(e){if(this.currentFlipSided!==e){const{gl:t}=this;e?t.frontFace(t.CW):t.frontFace(t.CCW),this.currentFlipSided=e}}setCullFace(e){const{gl:t}=this;e!==KY?(this.enable(t.CULL_FACE),e!==this.currentCullFace&&(e===QY?t.cullFace(t.BACK):e===JY?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):this.disable(t.CULL_FACE),this.currentCullFace=e}setLineWidth(e){const{currentLineWidth:t,gl:n}=this;e!==t&&(n.lineWidth(e),this.currentLineWidth=e)}setBlending(e,t,n,s,r,o,a,c){const{gl:l}=this;if(e===lh){this.currentBlendingEnabled===!0&&(this.disable(l.BLEND),this.currentBlendingEnabled=!1);return}if(this.currentBlendingEnabled===!1&&(this.enable(l.BLEND),this.currentBlendingEnabled=!0),e!==n2){if(e!==this.currentBlending||c!==this.currentPremultipledAlpha){if((this.currentBlendEquation!==Ca||this.currentBlendEquationAlpha!==Ca)&&(l.blendEquation(l.FUNC_ADD),this.currentBlendEquation=Ca,this.currentBlendEquationAlpha=Ca),c)switch(e){case Ua:l.blendFuncSeparate(l.ONE,l.ONE_MINUS_SRC_ALPHA,l.ONE,l.ONE_MINUS_SRC_ALPHA);break;case Pg:l.blendFunc(l.ONE,l.ONE);break;case Dg:l.blendFuncSeparate(l.ZERO,l.ONE_MINUS_SRC_COLOR,l.ZERO,l.ONE);break;case Lg:l.blendFuncSeparate(l.ZERO,l.SRC_COLOR,l.ZERO,l.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",e);break}else switch(e){case Ua:l.blendFuncSeparate(l.SRC_ALPHA,l.ONE_MINUS_SRC_ALPHA,l.ONE,l.ONE_MINUS_SRC_ALPHA);break;case Pg:l.blendFunc(l.SRC_ALPHA,l.ONE);break;case Dg:l.blendFuncSeparate(l.ZERO,l.ONE_MINUS_SRC_COLOR,l.ZERO,l.ONE);break;case Lg:l.blendFunc(l.ZERO,l.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",e);break}this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentBlending=e,this.currentPremultipledAlpha=c}return}r=r||t,o=o||n,a=a||s,(t!==this.currentBlendEquation||r!==this.currentBlendEquationAlpha)&&(l.blendEquationSeparate(ox[t],ox[r]),this.currentBlendEquation=t,this.currentBlendEquationAlpha=r),(n!==this.currentBlendSrc||s!==this.currentBlendDst||o!==this.currentBlendSrcAlpha||a!==this.currentBlendDstAlpha)&&(l.blendFuncSeparate(gd[n],gd[s],gd[o],gd[a]),this.currentBlendSrc=n,this.currentBlendDst=s,this.currentBlendSrcAlpha=o,this.currentBlendDstAlpha=a),this.currentBlending=e,this.currentPremultipledAlpha=!1}setColorMask(e){this.currentColorMask!==e&&(this.gl.colorMask(e,e,e,e),this.currentColorMask=e)}setDepthTest(e){const{gl:t}=this;e?this.enable(t.DEPTH_TEST):this.disable(t.DEPTH_TEST)}setDepthMask(e){this.currentDepthMask!==e&&(this.gl.depthMask(e),this.currentDepthMask=e)}setDepthFunc(e){if(this.currentDepthFunc!==e){const{gl:t}=this;switch(e){case p2:t.depthFunc(t.NEVER);break;case m2:t.depthFunc(t.ALWAYS);break;case g2:t.depthFunc(t.LESS);break;case Ug:t.depthFunc(t.LEQUAL);break;case _2:t.depthFunc(t.EQUAL);break;case v2:t.depthFunc(t.GEQUAL);break;case x2:t.depthFunc(t.GREATER);break;case y2:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}this.currentDepthFunc=e}}setStencilTest(e){const{gl:t}=this;e?this.enable(t.STENCIL_TEST):this.disable(t.STENCIL_TEST)}setStencilMask(e){this.currentStencilMask!==e&&(this.gl.stencilMask(e),this.currentStencilMask=e)}setStencilFunc(e,t,n){(this.currentStencilFunc!==e||this.currentStencilRef!==t||this.currentStencilFuncMask!==n)&&(this.gl.stencilFunc(e,t,n),this.currentStencilFunc=e,this.currentStencilRef=t,this.currentStencilFuncMask=n)}setStencilOp(e,t,n){(this.currentStencilFail!==e||this.currentStencilZFail!==t||this.currentStencilZPass!==n)&&(this.gl.stencilOp(e,t,n),this.currentStencilFail=e,this.currentStencilZFail=t,this.currentStencilZPass=n)}setMaterial(e,t){const{gl:n}=this;e.side===Bu?this.disable(n.CULL_FACE):this.enable(n.CULL_FACE);let s=e.side===pr;t&&(s=!s),this.setFlipSided(s),e.blending===Ua&&e.transparent===!1?this.setBlending(lh):this.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),this.setDepthFunc(e.depthFunc),this.setDepthTest(e.depthTest),this.setDepthMask(e.depthWrite),this.setColorMask(e.colorWrite);const r=e.stencilWrite;this.setStencilTest(r),r&&(this.setStencilMask(e.stencilWriteMask),this.setStencilFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),this.setStencilOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),this.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),e.alphaToCoverage===!0&&this.backend.renderer.samples>1?this.enable(n.SAMPLE_ALPHA_TO_COVERAGE):this.disable(n.SAMPLE_ALPHA_TO_COVERAGE)}setPolygonOffset(e,t,n){const{gl:s}=this;e?(this.enable(s.POLYGON_OFFSET_FILL),(this.currentPolygonOffsetFactor!==t||this.currentPolygonOffsetUnits!==n)&&(s.polygonOffset(t,n),this.currentPolygonOffsetFactor=t,this.currentPolygonOffsetUnits=n)):this.disable(s.POLYGON_OFFSET_FILL)}useProgram(e){return this.currentProgram!==e?(this.gl.useProgram(e),this.currentProgram=e,!0):!1}bindFramebuffer(e,t){const{gl:n,currentBoundFramebuffers:s}=this;return s[e]!==t?(n.bindFramebuffer(e,t),s[e]=t,e===n.DRAW_FRAMEBUFFER&&(s[n.FRAMEBUFFER]=t),e===n.FRAMEBUFFER&&(s[n.DRAW_FRAMEBUFFER]=t),!0):!1}drawBuffers(e,t){const{gl:n}=this;let s=[],r=!1;if(e.textures!==null){s=this.currentDrawbuffers.get(t),s===void 0&&(s=[],this.currentDrawbuffers.set(t,s));const o=e.textures;if(s.length!==o.length||s[0]!==n.COLOR_ATTACHMENT0){for(let a=0,c=o.length;a<c;a++)s[a]=n.COLOR_ATTACHMENT0+a;s.length=o.length,r=!0}}else s[0]!==n.BACK&&(s[0]=n.BACK,r=!0);r&&n.drawBuffers(s)}activeTexture(e){const{gl:t,currentTextureSlot:n,maxTextures:s}=this;e===void 0&&(e=t.TEXTURE0+s-1),n!==e&&(t.activeTexture(e),this.currentTextureSlot=e)}bindTexture(e,t,n){const{gl:s,currentTextureSlot:r,currentBoundTextures:o,maxTextures:a}=this;n===void 0&&(r===null?n=s.TEXTURE0+a-1:n=r);let c=o[n];c===void 0&&(c={type:void 0,texture:void 0},o[n]=c),(c.type!==e||c.texture!==t)&&(r!==n&&(s.activeTexture(n),this.currentTextureSlot=n),s.bindTexture(e,t),c.type=e,c.texture=t)}bindBufferBase(e,t,n){const{gl:s}=this,r=`${e}-${t}`;return this.currentBoundBufferBases[r]!==n?(s.bindBufferBase(e,t,n),this.currentBoundBufferBases[r]=n,!0):!1}unbindTexture(){const{gl:e,currentTextureSlot:t,currentBoundTextures:n}=this,s=n[t];s!==void 0&&s.type!==void 0&&(e.bindTexture(s.type,null),s.type=void 0,s.texture=void 0)}}class _re{constructor(e){this.backend=e,this.gl=this.backend.gl,this.extensions=e.extensions}convert(e,t=il){const{gl:n,extensions:s}=this;let r;if(e===Oa)return n.UNSIGNED_BYTE;if(e===hZ)return n.UNSIGNED_SHORT_4_4_4_4;if(e===dZ)return n.UNSIGNED_SHORT_5_5_5_1;if(e===S2)return n.UNSIGNED_INT_5_9_9_9_REV;if(e===Id)return n.BYTE;if(e===Fd)return n.SHORT;if(e===Su)return n.UNSIGNED_SHORT;if(e===Ni)return n.INT;if(e===ri)return n.UNSIGNED_INT;if(e===gs)return n.FLOAT;if(e===ko)return n.HALF_FLOAT;if(e===fZ)return n.ALPHA;if(e===jb)return n.RGB;if(e===Lh)return n.RGBA;if(e===pZ)return n.LUMINANCE;if(e===mZ)return n.LUMINANCE_ALPHA;if(e===Vc)return n.DEPTH_COMPONENT;if(e===hh)return n.DEPTH_STENCIL;if(e===Yb)return n.RED;if(e===Zb)return n.RED_INTEGER;if(e===cf)return n.RG;if(e===Kb)return n.RG_INTEGER;if(e===Qb)return n.RGBA_INTEGER;if(e===rv||e===Xm||e===jm||e===Ym)if(t===ht)if(r=s.get("WEBGL_compressed_texture_s3tc_srgb"),r!==null){if(e===rv)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(e===Xm)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(e===jm)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(e===Ym)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(r=s.get("WEBGL_compressed_texture_s3tc"),r!==null){if(e===rv)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===Xm)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===jm)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===Ym)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(e===vA||e===xA||e===yA||e===SA)if(r=s.get("WEBGL_compressed_texture_pvrtc"),r!==null){if(e===vA)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===xA)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===yA)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===SA)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(e===bA||e===$y||e===qy)if(r=s.get("WEBGL_compressed_texture_etc"),r!==null){if(e===bA||e===$y)return t===ht?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(e===qy)return t===ht?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(e===Xy||e===jy||e===Yy||e===Zy||e===Ky||e===Qy||e===Jy||e===eS||e===tS||e===nS||e===iS||e===sS||e===rS||e===oS)if(r=s.get("WEBGL_compressed_texture_astc"),r!==null){if(e===Xy)return t===ht?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(e===jy)return t===ht?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(e===Yy)return t===ht?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(e===Zy)return t===ht?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(e===Ky)return t===ht?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(e===Qy)return t===ht?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(e===Jy)return t===ht?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(e===eS)return t===ht?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(e===tS)return t===ht?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(e===nS)return t===ht?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(e===iS)return t===ht?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(e===sS)return t===ht?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(e===rS)return t===ht?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(e===oS)return t===ht?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(e===ov)if(r=s.get("EXT_texture_compression_bptc"),r!==null){if(e===ov)return t===ht?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(e===_Z||e===MA||e===TA||e===EA)if(r=s.get("EXT_texture_compression_rgtc"),r!==null){if(e===ov)return r.COMPRESSED_RED_RGTC1_EXT;if(e===MA)return r.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(e===TA)return r.COMPRESSED_RED_GREEN_RGTC2_EXT;if(e===EA)return r.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return e===Bf?n.UNSIGNED_INT_24_8:n[e]!==void 0?n[e]:null}_clientWaitAsync(){const{gl:e}=this,t=e.fenceSync(e.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),new Promise((n,s)=>{function r(){const o=e.clientWaitSync(t,e.SYNC_FLUSH_COMMANDS_BIT,0);if(o===e.WAIT_FAILED){e.deleteSync(t),s();return}if(o===e.TIMEOUT_EXPIRED){requestAnimationFrame(r);return}e.deleteSync(t),n()}r()})}}let sC=!1,Mm,ax,rC;class vre{constructor(e){this.backend=e,this.gl=e.gl,this.extensions=e.extensions,this.defaultTextures={},sC===!1&&(this._init(this.gl),sC=!0)}_init(e){Mm={[Og]:e.REPEAT,[yu]:e.CLAMP_TO_EDGE,[Bg]:e.MIRRORED_REPEAT},ax={[Si]:e.NEAREST,[Hy]:e.NEAREST_MIPMAP_NEAREST,[zu]:e.NEAREST_MIPMAP_LINEAR,[xs]:e.LINEAR,[Wy]:e.LINEAR_MIPMAP_NEAREST,[Bo]:e.LINEAR_MIPMAP_LINEAR},rC={[M2]:e.NEVER,[R2]:e.ALWAYS,[Jb]:e.LESS,[E2]:e.LEQUAL,[T2]:e.EQUAL,[C2]:e.GEQUAL,[w2]:e.GREATER,[A2]:e.NOTEQUAL}}filterFallback(e){const{gl:t}=this;return e===Si||e===Hy||e===zu?t.NEAREST:t.LINEAR}getGLTextureType(e){const{gl:t}=this;let n;return e.isCubeTexture===!0?n=t.TEXTURE_CUBE_MAP:e.isDataArrayTexture===!0||e.isCompressedArrayTexture===!0?n=t.TEXTURE_2D_ARRAY:e.isData3DTexture===!0?n=t.TEXTURE_3D:n=t.TEXTURE_2D,n}getInternalFormat(e,t,n,s,r=!1){const{gl:o,extensions:a}=this;if(e!==null){if(o[e]!==void 0)return o[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let c=t;return t===o.RED&&(n===o.FLOAT&&(c=o.R32F),n===o.HALF_FLOAT&&(c=o.R16F),n===o.UNSIGNED_BYTE&&(c=o.R8),n===o.UNSIGNED_SHORT&&(c=o.R16),n===o.UNSIGNED_INT&&(c=o.R32UI),n===o.BYTE&&(c=o.R8I),n===o.SHORT&&(c=o.R16I),n===o.INT&&(c=o.R32I)),t===o.RED_INTEGER&&(n===o.UNSIGNED_BYTE&&(c=o.R8UI),n===o.UNSIGNED_SHORT&&(c=o.R16UI),n===o.UNSIGNED_INT&&(c=o.R32UI),n===o.BYTE&&(c=o.R8I),n===o.SHORT&&(c=o.R16I),n===o.INT&&(c=o.R32I)),t===o.RG&&(n===o.FLOAT&&(c=o.RG32F),n===o.HALF_FLOAT&&(c=o.RG16F),n===o.UNSIGNED_BYTE&&(c=o.RG8),n===o.UNSIGNED_SHORT&&(c=o.RG16),n===o.UNSIGNED_INT&&(c=o.RG32UI),n===o.BYTE&&(c=o.RG8I),n===o.SHORT&&(c=o.RG16I),n===o.INT&&(c=o.RG32I)),t===o.RG_INTEGER&&(n===o.UNSIGNED_BYTE&&(c=o.RG8UI),n===o.UNSIGNED_SHORT&&(c=o.RG16UI),n===o.UNSIGNED_INT&&(c=o.RG32UI),n===o.BYTE&&(c=o.RG8I),n===o.SHORT&&(c=o.RG16I),n===o.INT&&(c=o.RG32I)),t===o.RGB&&(n===o.FLOAT&&(c=o.RGB32F),n===o.HALF_FLOAT&&(c=o.RGB16F),n===o.UNSIGNED_BYTE&&(c=o.RGB8),n===o.UNSIGNED_SHORT&&(c=o.RGB16),n===o.UNSIGNED_INT&&(c=o.RGB32UI),n===o.BYTE&&(c=o.RGB8I),n===o.SHORT&&(c=o.RGB16I),n===o.INT&&(c=o.RGB32I),n===o.UNSIGNED_BYTE&&(c=s===ht&&r===!1?o.SRGB8:o.RGB8),n===o.UNSIGNED_SHORT_5_6_5&&(c=o.RGB565),n===o.UNSIGNED_SHORT_5_5_5_1&&(c=o.RGB5_A1),n===o.UNSIGNED_SHORT_4_4_4_4&&(c=o.RGB4),n===o.UNSIGNED_INT_5_9_9_9_REV&&(c=o.RGB9_E5)),t===o.RGB_INTEGER&&(n===o.UNSIGNED_BYTE&&(c=o.RGB8UI),n===o.UNSIGNED_SHORT&&(c=o.RGB16UI),n===o.UNSIGNED_INT&&(c=o.RGB32UI),n===o.BYTE&&(c=o.RGB8I),n===o.SHORT&&(c=o.RGB16I),n===o.INT&&(c=o.RGB32I)),t===o.RGBA&&(n===o.FLOAT&&(c=o.RGBA32F),n===o.HALF_FLOAT&&(c=o.RGBA16F),n===o.UNSIGNED_BYTE&&(c=o.RGBA8),n===o.UNSIGNED_SHORT&&(c=o.RGBA16),n===o.UNSIGNED_INT&&(c=o.RGBA32UI),n===o.BYTE&&(c=o.RGBA8I),n===o.SHORT&&(c=o.RGBA16I),n===o.INT&&(c=o.RGBA32I),n===o.UNSIGNED_BYTE&&(c=s===ht&&r===!1?o.SRGB8_ALPHA8:o.RGBA8),n===o.UNSIGNED_SHORT_4_4_4_4&&(c=o.RGBA4),n===o.UNSIGNED_SHORT_5_5_5_1&&(c=o.RGB5_A1)),t===o.RGBA_INTEGER&&(n===o.UNSIGNED_BYTE&&(c=o.RGBA8UI),n===o.UNSIGNED_SHORT&&(c=o.RGBA16UI),n===o.UNSIGNED_INT&&(c=o.RGBA32UI),n===o.BYTE&&(c=o.RGBA8I),n===o.SHORT&&(c=o.RGBA16I),n===o.INT&&(c=o.RGBA32I)),t===o.DEPTH_COMPONENT&&(n===o.UNSIGNED_INT&&(c=o.DEPTH24_STENCIL8),n===o.FLOAT&&(c=o.DEPTH_COMPONENT32F)),t===o.DEPTH_STENCIL&&n===o.UNSIGNED_INT_24_8&&(c=o.DEPTH24_STENCIL8),(c===o.R16F||c===o.R32F||c===o.RG16F||c===o.RG32F||c===o.RGBA16F||c===o.RGBA32F)&&a.get("EXT_color_buffer_float"),c}setTextureParameters(e,t){const{gl:n,extensions:s,backend:r}=this;n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,t.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,t.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,n.NONE),n.texParameteri(e,n.TEXTURE_WRAP_S,Mm[t.wrapS]),n.texParameteri(e,n.TEXTURE_WRAP_T,Mm[t.wrapT]),(e===n.TEXTURE_3D||e===n.TEXTURE_2D_ARRAY)&&n.texParameteri(e,n.TEXTURE_WRAP_R,Mm[t.wrapR]),n.texParameteri(e,n.TEXTURE_MAG_FILTER,ax[t.magFilter]);const o=t.mipmaps!==void 0&&t.mipmaps.length>0,a=t.minFilter===xs&&o?Bo:t.minFilter;if(n.texParameteri(e,n.TEXTURE_MIN_FILTER,ax[a]),t.compareFunction&&(n.texParameteri(e,n.TEXTURE_COMPARE_MODE,n.COMPARE_REF_TO_TEXTURE),n.texParameteri(e,n.TEXTURE_COMPARE_FUNC,rC[t.compareFunction])),s.has("EXT_texture_filter_anisotropic")===!0){if(t.magFilter===Si||t.minFilter!==zu&&t.minFilter!==Bo||t.type===gs&&s.has("OES_texture_float_linear")===!1)return;if(t.anisotropy>1){const c=s.get("EXT_texture_filter_anisotropic");n.texParameterf(e,c.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,r.getMaxAnisotropy()))}}}createDefaultTexture(e){const{gl:t,backend:n,defaultTextures:s}=this,r=this.getGLTextureType(e);let o=s[r];o===void 0&&(o=t.createTexture(),n.state.bindTexture(r,o),t.texParameteri(r,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(r,t.TEXTURE_MAG_FILTER,t.NEAREST),s[r]=o),n.set(e,{textureGPU:o,glTextureType:r,isDefault:!0})}createTexture(e,t){const{gl:n,backend:s}=this,{levels:r,width:o,height:a,depth:c}=t,l=s.utils.convert(e.format,e.colorSpace),u=s.utils.convert(e.type),h=this.getInternalFormat(e.internalFormat,l,u,e.colorSpace,e.isVideoTexture),d=n.createTexture(),f=this.getGLTextureType(e);s.state.bindTexture(f,d),this.setTextureParameters(f,e),e.isDataArrayTexture||e.isCompressedArrayTexture?n.texStorage3D(n.TEXTURE_2D_ARRAY,r,h,o,a,c):e.isData3DTexture?n.texStorage3D(n.TEXTURE_3D,r,h,o,a,c):e.isVideoTexture||n.texStorage2D(f,r,h,o,a),s.set(e,{textureGPU:d,glTextureType:f,glFormat:l,glType:u,glInternalFormat:h})}copyBufferToTexture(e,t){const{gl:n,backend:s}=this,{textureGPU:r,glTextureType:o,glFormat:a,glType:c}=s.get(t),{width:l,height:u}=t.source.data;n.bindBuffer(n.PIXEL_UNPACK_BUFFER,e),s.state.bindTexture(o,r),n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,!1),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),n.texSubImage2D(o,0,0,0,l,u,a,c,0),n.bindBuffer(n.PIXEL_UNPACK_BUFFER,null),s.state.unbindTexture()}updateTexture(e,t){const{gl:n}=this,{width:s,height:r}=t,{textureGPU:o,glTextureType:a,glFormat:c,glType:l,glInternalFormat:u}=this.backend.get(e);if(e.isRenderTargetTexture||o===void 0)return;const h=d=>d.isDataTexture?d.image.data:d instanceof ImageBitmap||d instanceof OffscreenCanvas||d instanceof HTMLImageElement||d instanceof HTMLCanvasElement?d:d.data;if(this.backend.state.bindTexture(a,o),this.setTextureParameters(a,e),e.isCompressedTexture){const d=e.mipmaps,f=t.image;for(let m=0;m<d.length;m++){const _=d[m];e.isCompressedArrayTexture?e.format!==n.RGBA?c!==null?n.compressedTexSubImage3D(n.TEXTURE_2D_ARRAY,m,0,0,0,_.width,_.height,f.depth,c,_.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texSubImage3D(n.TEXTURE_2D_ARRAY,m,0,0,0,_.width,_.height,f.depth,c,l,_.data):c!==null?n.compressedTexSubImage2D(n.TEXTURE_2D,m,0,0,_.width,_.height,c,_.data):console.warn("Unsupported compressed texture format")}}else if(e.isCubeTexture){const d=t.images;for(let f=0;f<6;f++){const m=h(d[f]);n.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,0,0,s,r,c,l,m)}}else if(e.isDataArrayTexture){const d=t.image;n.texSubImage3D(n.TEXTURE_2D_ARRAY,0,0,0,0,d.width,d.height,d.depth,c,l,d.data)}else if(e.isData3DTexture){const d=t.image;n.texSubImage3D(n.TEXTURE_3D,0,0,0,0,d.width,d.height,d.depth,c,l,d.data)}else if(e.isVideoTexture)e.update(),n.texImage2D(a,0,u,c,l,t.image);else{const d=h(t.image);n.texSubImage2D(a,0,0,0,s,r,c,l,d)}}generateMipmaps(e){const{gl:t,backend:n}=this,{textureGPU:s,glTextureType:r}=n.get(e);n.state.bindTexture(r,s),t.generateMipmap(r)}deallocateRenderBuffers(e){const{gl:t,backend:n}=this;if(e){const s=n.get(e);if(s.renderBufferStorageSetup=void 0,s.framebuffers){for(const r in s.framebuffers)t.deleteFramebuffer(s.framebuffers[r]);delete s.framebuffers}if(s.depthRenderbuffer&&(t.deleteRenderbuffer(s.depthRenderbuffer),delete s.depthRenderbuffer),s.stencilRenderbuffer&&(t.deleteRenderbuffer(s.stencilRenderbuffer),delete s.stencilRenderbuffer),s.msaaFrameBuffer&&(t.deleteFramebuffer(s.msaaFrameBuffer),delete s.msaaFrameBuffer),s.msaaRenderbuffers){for(let r=0;r<s.msaaRenderbuffers.length;r++)t.deleteRenderbuffer(s.msaaRenderbuffers[r]);delete s.msaaRenderbuffers}}}destroyTexture(e){const{gl:t,backend:n}=this,{textureGPU:s,renderTarget:r}=n.get(e);this.deallocateRenderBuffers(r),t.deleteTexture(s),n.delete(e)}copyTextureToTexture(e,t,n=null,s=null,r=0){const{gl:o,backend:a}=this,{state:c}=this.backend,{textureGPU:l,glTextureType:u,glType:h,glFormat:d}=a.get(t);let f,m,_,g,p,y;n!==null?(f=n.max.x-n.min.x,m=n.max.y-n.min.y,_=n.min.x,g=n.min.y):(f=e.image.width,m=e.image.height,_=0,g=0),s!==null?(p=s.x,y=s.y):(p=0,y=0),c.bindTexture(u,l),o.pixelStorei(o.UNPACK_ALIGNMENT,t.unpackAlignment),o.pixelStorei(o.UNPACK_FLIP_Y_WEBGL,t.flipY),o.pixelStorei(o.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),o.pixelStorei(o.UNPACK_ALIGNMENT,t.unpackAlignment);const x=o.getParameter(o.UNPACK_ROW_LENGTH),v=o.getParameter(o.UNPACK_IMAGE_HEIGHT),S=o.getParameter(o.UNPACK_SKIP_PIXELS),M=o.getParameter(o.UNPACK_SKIP_ROWS),E=o.getParameter(o.UNPACK_SKIP_IMAGES),w=e.isCompressedTexture?e.mipmaps[r]:e.image;if(o.pixelStorei(o.UNPACK_ROW_LENGTH,w.width),o.pixelStorei(o.UNPACK_IMAGE_HEIGHT,w.height),o.pixelStorei(o.UNPACK_SKIP_PIXELS,_),o.pixelStorei(o.UNPACK_SKIP_ROWS,g),e.isRenderTargetTexture||e.isDepthTexture){const b=a.get(e),T=a.get(t),C=a.get(b.renderTarget),D=a.get(T.renderTarget),P=C.framebuffers[b.cacheKey],N=D.framebuffers[T.cacheKey];c.bindFramebuffer(o.READ_FRAMEBUFFER,P),c.bindFramebuffer(o.DRAW_FRAMEBUFFER,N);let L=o.COLOR_BUFFER_BIT;e.isDepthTexture&&(L=o.DEPTH_BUFFER_BIT),o.blitFramebuffer(_,g,f,m,p,y,f,m,L,o.NEAREST),c.bindFramebuffer(o.READ_FRAMEBUFFER,null),c.bindFramebuffer(o.DRAW_FRAMEBUFFER,null)}else e.isDataTexture?o.texSubImage2D(o.TEXTURE_2D,r,p,y,f,m,d,h,w.data):e.isCompressedTexture?o.compressedTexSubImage2D(o.TEXTURE_2D,r,p,y,w.width,w.height,d,w.data):o.texSubImage2D(o.TEXTURE_2D,r,p,y,f,m,d,h,w);o.pixelStorei(o.UNPACK_ROW_LENGTH,x),o.pixelStorei(o.UNPACK_IMAGE_HEIGHT,v),o.pixelStorei(o.UNPACK_SKIP_PIXELS,S),o.pixelStorei(o.UNPACK_SKIP_ROWS,M),o.pixelStorei(o.UNPACK_SKIP_IMAGES,E),r===0&&t.generateMipmaps&&o.generateMipmap(o.TEXTURE_2D),c.unbindTexture()}copyFramebufferToTexture(e,t,n){const{gl:s}=this,{state:r}=this.backend,{textureGPU:o}=this.backend.get(e),{x:a,y:c,z:l,w:u}=n,h=e.isDepthTexture===!0||t.renderTarget&&t.renderTarget.samples>0,d=t.renderTarget?t.renderTarget.height:this.backend.gerDrawingBufferSize().y;if(h){const f=a!==0||c!==0;let m,_;if(e.isDepthTexture===!0?(m=s.DEPTH_BUFFER_BIT,_=s.DEPTH_ATTACHMENT,t.stencil&&(m|=s.STENCIL_BUFFER_BIT)):(m=s.COLOR_BUFFER_BIT,_=s.COLOR_ATTACHMENT0),f){const g=this.backend.get(t.renderTarget),p=g.framebuffers[t.getCacheKey()],y=g.msaaFrameBuffer;r.bindFramebuffer(s.DRAW_FRAMEBUFFER,p),r.bindFramebuffer(s.READ_FRAMEBUFFER,y);const x=d-c-u;s.blitFramebuffer(a,x,a+l,x+u,a,x,a+l,x+u,m,s.NEAREST),r.bindFramebuffer(s.READ_FRAMEBUFFER,p),r.bindTexture(s.TEXTURE_2D,o),s.copyTexSubImage2D(s.TEXTURE_2D,0,0,0,a,x,l,u),r.unbindTexture()}else{const g=s.createFramebuffer();r.bindFramebuffer(s.DRAW_FRAMEBUFFER,g),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,_,s.TEXTURE_2D,o,0),s.blitFramebuffer(0,0,l,u,0,0,l,u,m,s.NEAREST),s.deleteFramebuffer(g)}}else r.bindTexture(s.TEXTURE_2D,o),s.copyTexSubImage2D(s.TEXTURE_2D,0,0,0,a,d-u-c,l,u),r.unbindTexture();e.generateMipmaps&&this.generateMipmaps(e),this.backend._setFramebuffer(t)}setupRenderBufferStorage(e,t){const{gl:n}=this,s=t.renderTarget,{samples:r,depthTexture:o,depthBuffer:a,stencilBuffer:c,width:l,height:u}=s;if(n.bindRenderbuffer(n.RENDERBUFFER,e),a&&!c){let h=n.DEPTH_COMPONENT24;r>0?(o&&o.isDepthTexture&&o.type===n.FLOAT&&(h=n.DEPTH_COMPONENT32F),n.renderbufferStorageMultisample(n.RENDERBUFFER,r,h,l,u)):n.renderbufferStorage(n.RENDERBUFFER,h,l,u),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.RENDERBUFFER,e)}else a&&c&&(r>0?n.renderbufferStorageMultisample(n.RENDERBUFFER,r,n.DEPTH24_STENCIL8,l,u):n.renderbufferStorage(n.RENDERBUFFER,n.DEPTH_STENCIL,l,u),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.RENDERBUFFER,e))}async copyTextureToBuffer(e,t,n,s,r,o){const{backend:a,gl:c}=this,{textureGPU:l,glFormat:u,glType:h}=this.backend.get(e),d=c.createFramebuffer();c.bindFramebuffer(c.READ_FRAMEBUFFER,d);const f=e.isCubeTexture?c.TEXTURE_CUBE_MAP_POSITIVE_X+o:c.TEXTURE_2D;c.framebufferTexture2D(c.READ_FRAMEBUFFER,c.COLOR_ATTACHMENT0,f,l,0);const m=this._getTypedArrayType(h),_=this._getBytesPerTexel(h,u),p=s*r*_,y=c.createBuffer();c.bindBuffer(c.PIXEL_PACK_BUFFER,y),c.bufferData(c.PIXEL_PACK_BUFFER,p,c.STREAM_READ),c.readPixels(t,n,s,r,u,h,0),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),await a.utils._clientWaitAsync();const x=new m(p/m.BYTES_PER_ELEMENT);return c.bindBuffer(c.PIXEL_PACK_BUFFER,y),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,x),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),c.deleteFramebuffer(d),x}_getTypedArrayType(e){const{gl:t}=this;if(e===t.UNSIGNED_BYTE)return Uint8Array;if(e===t.UNSIGNED_SHORT_4_4_4_4||e===t.UNSIGNED_SHORT_5_5_5_1||e===t.UNSIGNED_SHORT_5_6_5||e===t.UNSIGNED_SHORT)return Uint16Array;if(e===t.UNSIGNED_INT)return Uint32Array;if(e===t.HALF_FLOAT)return Uint16Array;if(e===t.FLOAT)return Float32Array;throw new Error(`Unsupported WebGL type: ${e}`)}_getBytesPerTexel(e,t){const{gl:n}=this;let s=0;if(e===n.UNSIGNED_BYTE&&(s=1),(e===n.UNSIGNED_SHORT_4_4_4_4||e===n.UNSIGNED_SHORT_5_5_5_1||e===n.UNSIGNED_SHORT_5_6_5||e===n.UNSIGNED_SHORT||e===n.HALF_FLOAT)&&(s=2),(e===n.UNSIGNED_INT||e===n.FLOAT)&&(s=4),t===n.RGBA)return s*4;if(t===n.RGB)return s*3;if(t===n.ALPHA)return s}}class xre{constructor(e){this.backend=e,this.gl=this.backend.gl,this.availableExtensions=this.gl.getSupportedExtensions(),this.extensions={}}get(e){let t=this.extensions[e];return t===void 0&&(t=this.gl.getExtension(e),this.extensions[e]=t),t}has(e){return this.availableExtensions.includes(e)}}class yre{constructor(e){this.backend=e,this.maxAnisotropy=null}getMaxAnisotropy(){if(this.maxAnisotropy!==null)return this.maxAnisotropy;const e=this.backend.gl,t=this.backend.extensions;if(t.has("EXT_texture_filter_anisotropic")===!0){const n=t.get("EXT_texture_filter_anisotropic");this.maxAnisotropy=e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else this.maxAnisotropy=0;return this.maxAnisotropy}}const oC={WEBGL_multi_draw:"WEBGL_multi_draw",WEBGL_compressed_texture_astc:"texture-compression-astc",WEBGL_compressed_texture_etc:"texture-compression-etc2",WEBGL_compressed_texture_etc1:"texture-compression-etc1",WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBKIT_WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBGL_compressed_texture_s3tc:"texture-compression-bc",EXT_texture_compression_bptc:"texture-compression-bptc",EXT_disjoint_timer_query_webgl2:"timestamp-query"};class Sre{constructor(e){this.gl=e.gl,this.extensions=e.extensions,this.info=e.renderer.info,this.mode=null,this.index=0,this.type=null,this.object=null}render(e,t){const{gl:n,mode:s,object:r,type:o,info:a,index:c}=this;c!==0?n.drawElements(s,t,o,e):n.drawArrays(s,e,t),a.update(r,t,s,1)}renderInstances(e,t,n){const{gl:s,mode:r,type:o,index:a,object:c,info:l}=this;n!==0&&(a!==0?s.drawElementsInstanced(r,t,o,e,n):s.drawArraysInstanced(r,e,t,n),l.update(c,t,r,n))}renderMultiDraw(e,t,n){const{extensions:s,mode:r,object:o,info:a}=this;if(n===0)return;const c=s.get("WEBGL_multi_draw");if(c===null)for(let l=0;l<n;l++)this.render(e[l],t[l]);else{this.index!==0?c.multiDrawElementsWEBGL(r,t,0,this.type,e,0,n):c.multiDrawArraysWEBGL(r,e,0,t,0,n);let l=0;for(let u=0;u<n;u++)l+=t[u];a.update(o,l,r,1)}}renderMultiDrawInstances(e,t,n,s){const{extensions:r,mode:o,object:a,info:c}=this;if(n===0)return;const l=r.get("WEBGL_multi_draw");if(l===null)for(let u=0;u<n;u++)this.renderInstances(e[u],t[u],s[u]);else{this.index!==0?l.multiDrawElementsInstancedWEBGL(o,t,0,this.type,e,0,s,0,n):l.multiDrawArraysInstancedWEBGL(o,e,0,t,0,s,0,n);let u=0;for(let h=0;h<n;h++)u+=t[h]*s[h];c.update(a,u,o,1)}}}class aC extends RL{constructor(e={}){super(e),this.isWebGLBackend=!0}init(e){super.init(e);const t=this.parameters,n=t.context!==void 0?t.context:e.domElement.getContext("webgl2");function s(r){r.preventDefault();const o={api:"WebGL",message:r.statusMessage||"Unknown reason",reason:null,originalEvent:r};e.onDeviceLost(o)}this._onContextLost=s,e.domElement.addEventListener("webglcontextlost",s,!1),this.gl=n,this.extensions=new xre(this),this.capabilities=new yre(this),this.attributeUtils=new mre(this),this.textureUtils=new vre(this),this.bufferRenderer=new Sre(this),this.state=new gre(this),this.utils=new _re(this),this.vaoCache={},this.transformFeedbackCache={},this.discard=!1,this.trackTimestamp=t.trackTimestamp===!0,this.extensions.get("EXT_color_buffer_float"),this.extensions.get("WEBGL_clip_cull_distance"),this.extensions.get("OES_texture_float_linear"),this.extensions.get("EXT_color_buffer_half_float"),this.extensions.get("WEBGL_multisampled_render_to_texture"),this.extensions.get("WEBGL_render_shared_exponent"),this.extensions.get("WEBGL_multi_draw"),this.disjoint=this.extensions.get("EXT_disjoint_timer_query_webgl2"),this.parallel=this.extensions.get("KHR_parallel_shader_compile"),this._knownBindings=new WeakSet,this._currentContext=null}get coordinateSystem(){return ar}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}async waitForGPU(){await this.utils._clientWaitAsync()}initTimestampQuery(e){if(!this.disjoint||!this.trackTimestamp)return;const t=this.get(e);if(this.queryRunning){t.queryQueue||(t.queryQueue=[]),t.queryQueue.push(e);return}t.activeQuery&&(this.gl.endQuery(this.disjoint.TIME_ELAPSED_EXT),t.activeQuery=null),t.activeQuery=this.gl.createQuery(),t.activeQuery!==null&&(this.gl.beginQuery(this.disjoint.TIME_ELAPSED_EXT,t.activeQuery),this.queryRunning=!0)}prepareTimestampBuffer(e){if(!this.disjoint||!this.trackTimestamp)return;const t=this.get(e);if(t.activeQuery&&(this.gl.endQuery(this.disjoint.TIME_ELAPSED_EXT),t.gpuQueries||(t.gpuQueries=[]),t.gpuQueries.push({query:t.activeQuery}),t.activeQuery=null,this.queryRunning=!1,t.queryQueue&&t.queryQueue.length>0)){const n=t.queryQueue.shift();this.initTimestampQuery(n)}}async resolveTimestampAsync(e,t="render"){if(!this.disjoint||!this.trackTimestamp)return;const n=this.get(e);n.gpuQueries||(n.gpuQueries=[]);for(let s=0;s<n.gpuQueries.length;s++){const r=n.gpuQueries[s],o=this.gl.getQueryParameter(r.query,this.gl.QUERY_RESULT_AVAILABLE),a=this.gl.getParameter(this.disjoint.GPU_DISJOINT_EXT);if(o&&!a){const c=this.gl.getQueryParameter(r.query,this.gl.QUERY_RESULT),l=Number(c)/1e6;this.gl.deleteQuery(r.query),n.gpuQueries.splice(s,1),s--,this.renderer.info.updateTimestamp(t,l)}}}getContext(){return this.gl}beginRender(e){const{gl:t}=this,n=this.get(e);if(this.initTimestampQuery(e),n.previousContext=this._currentContext,this._currentContext=e,this._setFramebuffer(e),this.clear(e.clearColor,e.clearDepth,e.clearStencil,e,!1),e.viewport?this.updateViewport(e):t.viewport(0,0,t.drawingBufferWidth,t.drawingBufferHeight),e.scissor){const{x:r,y:o,width:a,height:c}=e.scissorValue;t.scissor(r,e.height-c-o,a,c)}const s=e.occlusionQueryCount;s>0&&(n.currentOcclusionQueries=n.occlusionQueries,n.currentOcclusionQueryObjects=n.occlusionQueryObjects,n.lastOcclusionObject=null,n.occlusionQueries=new Array(s),n.occlusionQueryObjects=new Array(s),n.occlusionQueryIndex=0)}finishRender(e){const{gl:t,state:n}=this,s=this.get(e),r=s.previousContext,o=e.occlusionQueryCount;o>0&&(o>s.occlusionQueryIndex&&t.endQuery(t.ANY_SAMPLES_PASSED),this.resolveOccludedAsync(e));const a=e.textures;if(a!==null)for(let c=0;c<a.length;c++){const l=a[c];l.generateMipmaps&&this.generateMipmaps(l)}if(this._currentContext=r,e.textures!==null&&e.renderTarget){const c=this.get(e.renderTarget),{samples:l}=e.renderTarget;if(l>0){const u=c.framebuffers[e.getCacheKey()],h=t.COLOR_BUFFER_BIT,d=c.msaaFrameBuffer,f=e.textures;n.bindFramebuffer(t.READ_FRAMEBUFFER,d),n.bindFramebuffer(t.DRAW_FRAMEBUFFER,u);for(let m=0;m<f.length;m++)if(e.scissor){const{x:_,y:g,width:p,height:y}=e.scissorValue,x=e.height-y-g;t.blitFramebuffer(_,x,_+p,x+y,_,x,_+p,x+y,h,t.NEAREST),t.invalidateSubFramebuffer(t.READ_FRAMEBUFFER,c.invalidationArray,_,x,p,y)}else t.blitFramebuffer(0,0,e.width,e.height,0,0,e.width,e.height,h,t.NEAREST),t.invalidateFramebuffer(t.READ_FRAMEBUFFER,c.invalidationArray)}}r!==null&&(this._setFramebuffer(r),r.viewport?this.updateViewport(r):t.viewport(0,0,t.drawingBufferWidth,t.drawingBufferHeight)),this.prepareTimestampBuffer(e)}resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueries:n,currentOcclusionQueryObjects:s}=t;if(n&&s){const r=new WeakSet,{gl:o}=this;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueries=null;const a=()=>{let c=0;for(let l=0;l<n.length;l++){const u=n[l];u!==null&&o.getQueryParameter(u,o.QUERY_RESULT_AVAILABLE)&&(o.getQueryParameter(u,o.QUERY_RESULT)>0&&r.add(s[l]),n[l]=null,o.deleteQuery(u),c++)}c<n.length?requestAnimationFrame(a):t.occluded=r};a()}}isOccluded(e,t){const n=this.get(e);return n.occluded&&n.occluded.has(t)}updateViewport(e){const t=this.gl,{x:n,y:s,width:r,height:o}=e.viewportValue;t.viewport(n,e.height-o-s,r,o)}setScissorTest(e){const t=this.gl;e?t.enable(t.SCISSOR_TEST):t.disable(t.SCISSOR_TEST)}clear(e,t,n,s=null,r=!0){const{gl:o}=this;if(s===null){const c=this.getClearColor();c.r*=c.a,c.g*=c.a,c.b*=c.a,s={textures:null,clearColorValue:c}}let a=0;if(e&&(a|=o.COLOR_BUFFER_BIT),t&&(a|=o.DEPTH_BUFFER_BIT),n&&(a|=o.STENCIL_BUFFER_BIT),a!==0){let c;if(s.clearColorValue?c=s.clearColorValue:(c=this.getClearColor(),c.r*=c.a,c.g*=c.a,c.b*=c.a),t&&this.state.setDepthMask(!0),s.textures===null)o.clearColor(c.r,c.g,c.b,c.a),o.clear(a);else{if(r&&this._setFramebuffer(s),e)for(let l=0;l<s.textures.length;l++)o.clearBufferfv(o.COLOR,l,[c.r,c.g,c.b,c.a]);t&&n?o.clearBufferfi(o.DEPTH_STENCIL,0,1,0):t?o.clearBufferfv(o.DEPTH,0,[1]):n&&o.clearBufferiv(o.STENCIL,0,[0])}}}beginCompute(e){const{state:t,gl:n}=this;t.bindFramebuffer(n.FRAMEBUFFER,null),this.initTimestampQuery(e)}compute(e,t,n,s){const{state:r,gl:o}=this;this.discard||(o.enable(o.RASTERIZER_DISCARD),this.discard=!0);const{programGPU:a,transformBuffers:c,attributes:l}=this.get(s),u=this._getVaoKey(null,l),h=this.vaoCache[u];h===void 0?this._createVao(null,l):o.bindVertexArray(h),r.useProgram(a),this._bindUniforms(n);const d=this._getTransformFeedback(c);o.bindTransformFeedback(o.TRANSFORM_FEEDBACK,d),o.beginTransformFeedback(o.POINTS),l[0].isStorageInstancedBufferAttribute?o.drawArraysInstanced(o.POINTS,0,1,t.count):o.drawArrays(o.POINTS,0,t.count),o.endTransformFeedback(),o.bindTransformFeedback(o.TRANSFORM_FEEDBACK,null);for(let f=0;f<c.length;f++){const m=c[f];m.pbo&&this.textureUtils.copyBufferToTexture(m.transformBuffer,m.pbo),m.switchBuffers()}}finishCompute(e){const t=this.gl;this.discard=!1,t.disable(t.RASTERIZER_DISCARD),this.prepareTimestampBuffer(e),this._currentContext&&this._setFramebuffer(this._currentContext)}draw(e){const{object:t,pipeline:n,material:s,context:r}=e,{programGPU:o}=this.get(n),{gl:a,state:c}=this,l=this.get(r),u=e.getDrawParameters();if(u===null)return;this._bindUniforms(e.getBindings());const h=t.isMesh&&t.matrixWorld.determinant()<0;c.setMaterial(s,h),c.useProgram(o);let d=e.staticVao;if(d===void 0){const x=this._getVaoKey(e.getIndex(),e.getAttributes());if(d=this.vaoCache[x],d===void 0){let v;({vaoGPU:d,staticVao:v}=this._createVao(e.getIndex(),e.getAttributes())),v&&(e.staticVao=d)}}a.bindVertexArray(d);const f=e.getIndex(),m=l.lastOcclusionObject;if(m!==t&&m!==void 0){if(m!==null&&m.occlusionTest===!0&&(a.endQuery(a.ANY_SAMPLES_PASSED),l.occlusionQueryIndex++),t.occlusionTest===!0){const x=a.createQuery();a.beginQuery(a.ANY_SAMPLES_PASSED,x),l.occlusionQueries[l.occlusionQueryIndex]=x,l.occlusionQueryObjects[l.occlusionQueryIndex]=t}l.lastOcclusionObject=t}const _=this.bufferRenderer;t.isPoints?_.mode=a.POINTS:t.isLineSegments?_.mode=a.LINES:t.isLine?_.mode=a.LINE_STRIP:t.isLineLoop?_.mode=a.LINE_LOOP:s.wireframe===!0?(c.setLineWidth(s.wireframeLinewidth*this.renderer.getPixelRatio()),_.mode=a.LINES):_.mode=a.TRIANGLES;const{vertexCount:g,instanceCount:p}=u;let{firstVertex:y}=u;if(_.object=t,f!==null){y*=f.array.BYTES_PER_ELEMENT;const x=this.get(f);_.index=f.count,_.type=x.type}else _.index=0;t.isBatchedMesh?t._multiDrawInstances!==null?_.renderMultiDrawInstances(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount,t._multiDrawInstances):this.hasFeature("WEBGL_multi_draw")?_.renderMultiDraw(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount):QZ("THREE.WebGLRenderer: WEBGL_multi_draw not supported."):p>1?_.renderInstances(y,g,p):_.render(y,g),a.bindVertexArray(null)}needsRenderUpdate(){return!1}getRenderCacheKey(){return""}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}copyTextureToBuffer(e,t,n,s,r,o){return this.textureUtils.copyTextureToBuffer(e,t,n,s,r,o)}createSampler(){}destroySampler(){}createNodeBuilder(e,t){return new dre(e,t)}createProgram(e){const t=this.gl,{stage:n,code:s}=e,r=n==="fragment"?t.createShader(t.FRAGMENT_SHADER):t.createShader(t.VERTEX_SHADER);t.shaderSource(r,s),t.compileShader(r),this.set(e,{shaderGPU:r})}destroyProgram(){console.warn("Abstract class.")}createRenderPipeline(e,t){const n=this.gl,s=e.pipeline,{fragmentProgram:r,vertexProgram:o}=s,a=n.createProgram(),c=this.get(r).shaderGPU,l=this.get(o).shaderGPU;if(n.attachShader(a,c),n.attachShader(a,l),n.linkProgram(a),this.set(s,{programGPU:a,fragmentShader:c,vertexShader:l}),t!==null&&this.parallel){const u=new Promise(h=>{const d=this.parallel,f=()=>{n.getProgramParameter(a,d.COMPLETION_STATUS_KHR)?(this._completeCompile(e,s),h()):requestAnimationFrame(f)};f()});t.push(u);return}this._completeCompile(e,s)}_handleSource(e,t){const n=e.split(`
`),s=[],r=Math.max(t-6,0),o=Math.min(t+6,n.length);for(let a=r;a<o;a++){const c=a+1;s.push(`${c===t?">":" "} ${c}: ${n[a]}`)}return s.join(`
`)}_getShaderErrors(e,t,n){const s=e.getShaderParameter(t,e.COMPILE_STATUS),r=e.getShaderInfoLog(t).trim();if(s&&r==="")return"";const o=/ERROR: 0:(\d+)/.exec(r);if(o){const a=parseInt(o[1]);return n.toUpperCase()+`

`+r+`

`+this._handleSource(e.getShaderSource(t),a)}else return r}_logProgramError(e,t,n){if(this.renderer.debug.checkShaderErrors){const s=this.gl,r=s.getProgramInfoLog(e).trim();if(s.getProgramParameter(e,s.LINK_STATUS)===!1)if(typeof this.renderer.debug.onShaderError=="function")this.renderer.debug.onShaderError(s,e,n,t);else{const o=this._getShaderErrors(s,n,"vertex"),a=this._getShaderErrors(s,t,"fragment");console.error("THREE.WebGLProgram: Shader Error "+s.getError()+" - VALIDATE_STATUS "+s.getProgramParameter(e,s.VALIDATE_STATUS)+`

Program Info Log: `+r+`
`+o+`
`+a)}else r!==""&&console.warn("THREE.WebGLProgram: Program Info Log:",r)}}_completeCompile(e,t){const{state:n,gl:s}=this,r=this.get(t),{programGPU:o,fragmentShader:a,vertexShader:c}=r;s.getProgramParameter(o,s.LINK_STATUS)===!1&&this._logProgramError(o,a,c),n.useProgram(o);const l=e.getBindings();this._setupBindings(l,o),this.set(t,{programGPU:o})}createComputePipeline(e,t){const{state:n,gl:s}=this,r={stage:"fragment",code:`#version 300 es
precision highp float;
void main() {}`};this.createProgram(r);const{computeProgram:o}=e,a=s.createProgram(),c=this.get(r).shaderGPU,l=this.get(o).shaderGPU,u=o.transforms,h=[],d=[];for(let g=0;g<u.length;g++){const p=u[g];h.push(p.varyingName),d.push(p.attributeNode)}s.attachShader(a,c),s.attachShader(a,l),s.transformFeedbackVaryings(a,h,s.SEPARATE_ATTRIBS),s.linkProgram(a),s.getProgramParameter(a,s.LINK_STATUS)===!1&&this._logProgramError(a,c,l),n.useProgram(a),this._setupBindings(t,a);const f=o.attributes,m=[],_=[];for(let g=0;g<f.length;g++){const p=f[g].node.attribute;m.push(p),this.has(p)||this.attributeUtils.createAttribute(p,s.ARRAY_BUFFER)}for(let g=0;g<d.length;g++){const p=d[g].attribute;this.has(p)||this.attributeUtils.createAttribute(p,s.ARRAY_BUFFER);const y=this.get(p);_.push(y)}this.set(e,{programGPU:a,transformBuffers:_,attributes:m})}createBindings(e,t){if(this._knownBindings.has(t)===!1){this._knownBindings.add(t);let n=0,s=0;for(const r of t){this.set(r,{textures:s,uniformBuffers:n});for(const o of r.bindings)o.isUniformBuffer&&n++,o.isSampledTexture&&s++}}this.updateBindings(e,t)}updateBindings(e){const{gl:t}=this,n=this.get(e);let s=n.uniformBuffers,r=n.textures;for(const o of e.bindings)if(o.isUniformsGroup||o.isUniformBuffer){const a=o.buffer,c=t.createBuffer();t.bindBuffer(t.UNIFORM_BUFFER,c),t.bufferData(t.UNIFORM_BUFFER,a,t.DYNAMIC_DRAW),this.set(o,{index:s++,bufferGPU:c})}else if(o.isSampledTexture){const{textureGPU:a,glTextureType:c}=this.get(o.texture);this.set(o,{index:r++,textureGPU:a,glTextureType:c})}}updateBinding(e){const t=this.gl;if(e.isUniformsGroup||e.isUniformBuffer){const s=this.get(e).bufferGPU,r=e.buffer;t.bindBuffer(t.UNIFORM_BUFFER,s),t.bufferData(t.UNIFORM_BUFFER,r,t.DYNAMIC_DRAW)}}createIndexAttribute(e){const t=this.gl;this.attributeUtils.createAttribute(e,t.ELEMENT_ARRAY_BUFFER)}createAttribute(e){if(this.has(e))return;const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}createStorageAttribute(e){if(this.has(e))return;const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}updateSize(){}hasFeature(e){const t=Object.keys(oC).filter(s=>oC[s]===e),n=this.extensions;for(let s=0;s<t.length;s++)if(n.has(t[s]))return!0;return!1}getMaxAnisotropy(){return this.capabilities.getMaxAnisotropy()}copyTextureToTexture(e,t,n,s,r){this.textureUtils.copyTextureToTexture(e,t,n,s,r)}copyFramebufferToTexture(e,t,n){this.textureUtils.copyFramebufferToTexture(e,t,n)}_setFramebuffer(e){const{gl:t,state:n}=this;let s=null;if(e.textures!==null){const r=e.renderTarget,o=this.get(r),{samples:a,depthBuffer:c,stencilBuffer:l}=r,u=r.isWebGLCubeRenderTarget===!0;let h=o.msaaFrameBuffer,d=o.depthRenderbuffer;const f=hL(e);let m;if(u?(o.cubeFramebuffers||(o.cubeFramebuffers={}),m=o.cubeFramebuffers[f]):(o.framebuffers||(o.framebuffers={}),m=o.framebuffers[f]),m===void 0){m=t.createFramebuffer(),n.bindFramebuffer(t.FRAMEBUFFER,m);const _=e.textures;if(u){o.cubeFramebuffers[f]=m;const{textureGPU:g}=this.get(_[0]),p=this.renderer._activeCubeFace;t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+p,g,0)}else{o.framebuffers[f]=m;for(let g=0;g<_.length;g++){const p=_[g],y=this.get(p);y.renderTarget=e.renderTarget,y.cacheKey=f;const x=t.COLOR_ATTACHMENT0+g;t.framebufferTexture2D(t.FRAMEBUFFER,x,t.TEXTURE_2D,y.textureGPU,0)}n.drawBuffers(e,m)}if(e.depthTexture!==null){const g=this.get(e.depthTexture),p=l?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;g.renderTarget=e.renderTarget,g.cacheKey=f,t.framebufferTexture2D(t.FRAMEBUFFER,p,t.TEXTURE_2D,g.textureGPU,0)}}if(a>0){if(h===void 0){const _=[];h=t.createFramebuffer(),n.bindFramebuffer(t.FRAMEBUFFER,h);const g=[],p=e.textures;for(let y=0;y<p.length;y++){if(g[y]=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,g[y]),_.push(t.COLOR_ATTACHMENT0+y),c){const S=l?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;_.push(S)}const x=e.textures[y],v=this.get(x);t.renderbufferStorageMultisample(t.RENDERBUFFER,a,v.glInternalFormat,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+y,t.RENDERBUFFER,g[y])}if(o.msaaFrameBuffer=h,o.msaaRenderbuffers=g,d===void 0){d=t.createRenderbuffer(),this.textureUtils.setupRenderBufferStorage(d,e),o.depthRenderbuffer=d;const y=l?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;_.push(y)}o.invalidationArray=_}s=o.msaaFrameBuffer}else s=m}n.bindFramebuffer(t.FRAMEBUFFER,s)}_getVaoKey(e,t){let n=[];if(e!==null){const s=this.get(e);n+=":"+s.id}for(let s=0;s<t.length;s++){const r=this.get(t[s]);n+=":"+r.id}return n}_createVao(e,t){const{gl:n}=this,s=n.createVertexArray();let r="",o=!0;if(n.bindVertexArray(s),e!==null){const a=this.get(e);n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,a.bufferGPU),r+=":"+a.id}for(let a=0;a<t.length;a++){const c=t[a],l=this.get(c);r+=":"+l.id,n.bindBuffer(n.ARRAY_BUFFER,l.bufferGPU),n.enableVertexAttribArray(a),(c.isStorageBufferAttribute||c.isStorageInstancedBufferAttribute)&&(o=!1);let u,h;c.isInterleavedBufferAttribute===!0?(u=c.data.stride*l.bytesPerElement,h=c.offset*l.bytesPerElement):(u=0,h=0),l.isInteger?n.vertexAttribIPointer(a,c.itemSize,l.type,u,h):n.vertexAttribPointer(a,c.itemSize,l.type,c.normalized,u,h),c.isInstancedBufferAttribute&&!c.isInterleavedBufferAttribute?n.vertexAttribDivisor(a,c.meshPerAttribute):c.isInterleavedBufferAttribute&&c.data.isInstancedInterleavedBuffer&&n.vertexAttribDivisor(a,c.data.meshPerAttribute)}return n.bindBuffer(n.ARRAY_BUFFER,null),this.vaoCache[r]=s,{vaoGPU:s,staticVao:o}}_getTransformFeedback(e){let t="";for(let r=0;r<e.length;r++)t+=":"+e[r].id;let n=this.transformFeedbackCache[t];if(n!==void 0)return n;const{gl:s}=this;n=s.createTransformFeedback(),s.bindTransformFeedback(s.TRANSFORM_FEEDBACK,n);for(let r=0;r<e.length;r++){const o=e[r];s.bindBufferBase(s.TRANSFORM_FEEDBACK_BUFFER,r,o.transformBuffer)}return s.bindTransformFeedback(s.TRANSFORM_FEEDBACK,null),this.transformFeedbackCache[t]=n,n}_setupBindings(e,t){const n=this.gl;for(const s of e)for(const r of s.bindings){const a=this.get(r).index;if(r.isUniformsGroup||r.isUniformBuffer){const c=n.getUniformBlockIndex(t,r.name);n.uniformBlockBinding(t,c,a)}else if(r.isSampledTexture){const c=n.getUniformLocation(t,r.name);n.uniform1i(c,a)}}}_bindUniforms(e){const{gl:t,state:n}=this;for(const s of e)for(const r of s.bindings){const o=this.get(r),a=o.index;r.isUniformsGroup||r.isUniformBuffer?n.bindBufferBase(t.UNIFORM_BUFFER,a,o.bufferGPU):r.isSampledTexture&&n.bindTexture(o.glTextureType,o.textureGPU,t.TEXTURE0+a)}}dispose(){this.renderer.domElement.removeEventListener("webglcontextlost",this._onContextLost)}}class bre extends FM{constructor(e,t){super(e),this.texture=t,this.version=t?t.version:0,this.isSampler=!0}}class Mre extends bre{constructor(e,t,n){super(e,t?t.value:null),this.textureNode=t,this.groupNode=n}update(){this.texture=this.textureNode.value}}class Tre extends ML{constructor(e,t){super(e,t?t.array:null),this.attribute=t,this.isStorageBuffer=!0}}let Ere=0;class wre extends Tre{constructor(e,t){super("StorageBuffer_"+Ere++,e?e.value:null),this.nodeUniform=e,this.access=e?e.access:bS.Storage,this.groupNode=t}get buffer(){return this.nodeUniform.value}}class Are extends Ja{constructor(e){super(),this.device=e;const t=`
struct VarysStruct {
	@builtin( position ) Position: vec4<f32>,
	@location( 0 ) vTex : vec2<f32>
};

@vertex
fn main( @builtin( vertex_index ) vertexIndex : u32 ) -> VarysStruct {

	var Varys : VarysStruct;

	var pos = array< vec2<f32>, 4 >(
		vec2<f32>( -1.0,  1.0 ),
		vec2<f32>(  1.0,  1.0 ),
		vec2<f32>( -1.0, -1.0 ),
		vec2<f32>(  1.0, -1.0 )
	);

	var tex = array< vec2<f32>, 4 >(
		vec2<f32>( 0.0, 0.0 ),
		vec2<f32>( 1.0, 0.0 ),
		vec2<f32>( 0.0, 1.0 ),
		vec2<f32>( 1.0, 1.0 )
	);

	Varys.vTex = tex[ vertexIndex ];
	Varys.Position = vec4<f32>( pos[ vertexIndex ], 0.0, 1.0 );

	return Varys;

}
`,n=`
@group( 0 ) @binding( 0 )
var imgSampler : sampler;

@group( 0 ) @binding( 1 )
var img : texture_2d<f32>;

@fragment
fn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {

	return textureSample( img, imgSampler, vTex );

}
`,s=`
@group( 0 ) @binding( 0 )
var imgSampler : sampler;

@group( 0 ) @binding( 1 )
var img : texture_2d<f32>;

@fragment
fn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {

	return textureSample( img, imgSampler, vec2( vTex.x, 1.0 - vTex.y ) );

}
`;this.mipmapSampler=e.createSampler({minFilter:Pc.Linear}),this.flipYSampler=e.createSampler({minFilter:Pc.Nearest}),this.transferPipelines={},this.flipYPipelines={},this.mipmapVertexShaderModule=e.createShaderModule({label:"mipmapVertex",code:t}),this.mipmapFragmentShaderModule=e.createShaderModule({label:"mipmapFragment",code:n}),this.flipYFragmentShaderModule=e.createShaderModule({label:"flipYFragment",code:s})}getTransferPipeline(e){let t=this.transferPipelines[e];return t===void 0&&(t=this.device.createRenderPipeline({label:`mipmap-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.mipmapFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:Eu.TriangleStrip,stripIndexFormat:ph.Uint32},layout:"auto"}),this.transferPipelines[e]=t),t}getFlipYPipeline(e){let t=this.flipYPipelines[e];return t===void 0&&(t=this.device.createRenderPipeline({label:`flipY-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.flipYFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:Eu.TriangleStrip,stripIndexFormat:ph.Uint32},layout:"auto"}),this.flipYPipelines[e]=t),t}flipY(e,t,n=0){const s=t.format,{width:r,height:o}=t.size,a=this.getTransferPipeline(s),c=this.getFlipYPipeline(s),l=this.device.createTexture({size:{width:r,height:o,depthOrArrayLayers:1},format:s,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),u=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:Es.TwoD,baseArrayLayer:n}),h=l.createView({baseMipLevel:0,mipLevelCount:1,dimension:Es.TwoD,baseArrayLayer:0}),d=this.device.createCommandEncoder({}),f=(m,_,g)=>{const p=m.getBindGroupLayout(0),y=this.device.createBindGroup({layout:p,entries:[{binding:0,resource:this.flipYSampler},{binding:1,resource:_}]}),x=d.beginRenderPass({colorAttachments:[{view:g,loadOp:In.Clear,storeOp:si.Store,clearValue:[0,0,0,0]}]});x.setPipeline(m),x.setBindGroup(0,y),x.draw(4,1,0,0),x.end()};f(a,u,h),f(c,h,u),this.device.queue.submit([d.finish()]),l.destroy()}generateMipmaps(e,t,n=0){const s=this.get(e);s.useCount===void 0&&(s.useCount=0,s.layers=[]);const r=s.layers[n]||this._mipmapCreateBundles(e,t,n),o=this.device.createCommandEncoder({});this._mipmapRunBundles(o,r),this.device.queue.submit([o.finish()]),s.useCount!==0&&(s.layers[n]=r),s.useCount++}_mipmapCreateBundles(e,t,n){const s=this.getTransferPipeline(t.format),r=s.getBindGroupLayout(0);let o=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:Es.TwoD,baseArrayLayer:n});const a=[];for(let c=1;c<t.mipLevelCount;c++){const l=this.device.createBindGroup({layout:r,entries:[{binding:0,resource:this.mipmapSampler},{binding:1,resource:o}]}),u=e.createView({baseMipLevel:c,mipLevelCount:1,dimension:Es.TwoD,baseArrayLayer:n}),h={colorAttachments:[{view:u,loadOp:In.Clear,storeOp:si.Store,clearValue:[0,0,0,0]}]},d=this.device.createRenderBundleEncoder({colorFormats:[t.format]});d.setPipeline(s),d.setBindGroup(0,l),d.draw(4,1,0,0),a.push({renderBundles:[d.finish()],passDescriptor:h}),o=u}return a}_mipmapRunBundles(e,t){const n=t.length;for(let s=0;s<n;s++){const r=t[s],o=e.beginRenderPass(r.passDescriptor);o.executeBundles(r.renderBundles),o.end()}}}const Cre={[M2]:"never",[Jb]:"less",[T2]:"equal",[E2]:"less-equal",[w2]:"greater",[C2]:"greater-equal",[R2]:"always",[A2]:"not-equal"},Rre=[0,1,3,2,4,5];class Nre{constructor(e){this.backend=e,this._passUtils=null,this.defaultTexture={},this.defaultCubeTexture={},this.defaultVideoFrame=null,this.colorBuffer=null,this.depthTexture=new Uh,this.depthTexture.name="depthBuffer"}createSampler(e){const t=this.backend,n=t.device,s=t.get(e),r={addressModeU:this._convertAddressMode(e.wrapS),addressModeV:this._convertAddressMode(e.wrapT),addressModeW:this._convertAddressMode(e.wrapR),magFilter:this._convertFilterMode(e.magFilter),minFilter:this._convertFilterMode(e.minFilter),mipmapFilter:this._convertFilterMode(e.minFilter),maxAnisotropy:1};r.magFilter===Pc.Linear&&r.minFilter===Pc.Linear&&r.mipmapFilter===Pc.Linear&&(r.maxAnisotropy=e.anisotropy),e.isDepthTexture&&e.compareFunction!==null&&(r.compare=Cre[e.compareFunction]),s.sampler=n.createSampler(r)}createDefaultTexture(e){let t;const n=ES(e);e.isCubeTexture?t=this._getDefaultCubeTextureGPU(n):e.isVideoTexture?this.backend.get(e).externalTexture=this._getDefaultVideoFrame():t=this._getDefaultTextureGPU(n),this.backend.get(e).texture=t}createTexture(e,t={}){const n=this.backend,s=n.get(e);if(s.initialized)throw new Error("WebGPUTextureUtils: Texture already initialized.");t.needsMipmaps===void 0&&(t.needsMipmaps=!1),t.levels===void 0&&(t.levels=1),t.depth===void 0&&(t.depth=1);const{width:r,height:o,depth:a,levels:c}=t;e.isFramebufferTexture&&(t.renderTarget?t.format=this.backend.utils.getCurrentColorFormat(t.renderTarget):t.format=this.backend.utils.getPreferredCanvasFormat());const l=this._getDimension(e),u=e.internalFormat||t.format||ES(e,n.device);s.format=u;let h=t.sampleCount!==void 0?t.sampleCount:1;h=n.utils.getSampleCount(h);const d=e.isRenderTargetTexture&&!e.isMultisampleRenderTargetTexture?1:h;let f=GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.COPY_SRC;e.isStorageTexture===!0&&(f|=GPUTextureUsage.STORAGE_BINDING),e.isCompressedTexture!==!0&&e.isCompressedArrayTexture!==!0&&(f|=GPUTextureUsage.RENDER_ATTACHMENT);const m={label:e.name,size:{width:r,height:o,depthOrArrayLayers:a},mipLevelCount:c,sampleCount:d,dimension:l,format:u,usage:f};if(e.isVideoTexture){const _=e.source.data,g=new VideoFrame(_);m.size.width=g.displayWidth,m.size.height=g.displayHeight,g.close(),s.externalTexture=_}else{if(u===void 0)return console.warn("WebGPURenderer: Texture format not supported."),this.createDefaultTexture(e);s.texture=n.device.createTexture(m)}if(e.isRenderTargetTexture&&h>1&&!e.isMultisampleRenderTargetTexture){const _=Object.assign({},m);_.label=_.label+"-msaa",_.sampleCount=h,s.msaaTexture=n.device.createTexture(_)}s.initialized=!0,s.textureDescriptorGPU=m}destroyTexture(e){const t=this.backend,n=t.get(e);n.texture.destroy(),n.msaaTexture!==void 0&&n.msaaTexture.destroy(),t.delete(e)}destroySampler(e){const n=this.backend.get(e);delete n.sampler}generateMipmaps(e){const t=this.backend.get(e);if(e.isCubeTexture)for(let n=0;n<6;n++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,n);else{const n=e.image.depth||1;for(let s=0;s<n;s++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,s)}}getColorBuffer(){this.colorBuffer&&this.colorBuffer.destroy();const e=this.backend,{width:t,height:n}=e.getDrawingBufferSize();return this.colorBuffer=e.device.createTexture({label:"colorBuffer",size:{width:t,height:n,depthOrArrayLayers:1},sampleCount:e.utils.getSampleCount(e.renderer.samples),format:e.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC}),this.colorBuffer}getDepthBuffer(e=!0,t=!1){const n=this.backend,{width:s,height:r}=n.getDrawingBufferSize(),o=this.depthTexture,a=n.get(o).texture;let c,l;if(t?(c=hh,l=Bf):e&&(c=Vc,l=ri),a!==void 0){if(o.image.width===s&&o.image.height===r&&o.format===c&&o.type===l)return a;this.destroyTexture(o)}return o.name="depthBuffer",o.format=c,o.type=l,o.image.width=s,o.image.height=r,this.createTexture(o,{sampleCount:n.utils.getSampleCount(n.renderer.samples),width:s,height:r}),n.get(o).texture}updateTexture(e,t){const n=this.backend.get(e),{textureDescriptorGPU:s}=n;if(!(e.isRenderTargetTexture||s===void 0)){if(e.isDataTexture)this._copyBufferToTexture(t.image,n.texture,s,0,e.flipY);else if(e.isDataArrayTexture||e.isData3DTexture)for(let r=0;r<t.image.depth;r++)this._copyBufferToTexture(t.image,n.texture,s,r,e.flipY,r);else if(e.isCompressedTexture||e.isCompressedArrayTexture)this._copyCompressedBufferToTexture(e.mipmaps,n.texture,s);else if(e.isCubeTexture)this._copyCubeMapToTexture(t.images,n.texture,s,e.flipY);else if(e.isVideoTexture){const r=e.source.data;n.externalTexture=r}else this._copyImageToTexture(t.image,n.texture,s,0,e.flipY);n.version=e.version,e.onUpdate&&e.onUpdate(e)}}async copyTextureToBuffer(e,t,n,s,r,o){const a=this.backend.device,c=this.backend.get(e),l=c.texture,u=c.textureDescriptorGPU.format,h=this._getBytesPerTexel(u);let d=s*h;d=Math.ceil(d/256)*256;const f=a.createBuffer({size:s*r*h,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),m=a.createCommandEncoder();m.copyTextureToBuffer({texture:l,origin:{x:t,y:n,z:o}},{buffer:f,bytesPerRow:d},{width:s,height:r});const _=this._getTypedArrayType(u);a.queue.submit([m.finish()]),await f.mapAsync(GPUMapMode.READ);const g=f.getMappedRange();return new _(g)}_isEnvironmentTexture(e){const t=e.mapping;return t===Uf||t===Of||t===nl||t===uh}_getDefaultTextureGPU(e){let t=this.defaultTexture[e];if(t===void 0){const n=new Ui;n.minFilter=Si,n.magFilter=Si,this.createTexture(n,{width:1,height:1,format:e}),this.defaultTexture[e]=t=n}return this.backend.get(t).texture}_getDefaultCubeTextureGPU(e){let t=this.defaultTexture[e];if(t===void 0){const n=new nM;n.minFilter=Si,n.magFilter=Si,this.createTexture(n,{width:1,height:1,depth:6}),this.defaultCubeTexture[e]=t=n}return this.backend.get(t).texture}_getDefaultVideoFrame(){let e=this.defaultVideoFrame;if(e===null){const t={timestamp:0,codedWidth:1,codedHeight:1,format:"RGBA"};this.defaultVideoFrame=e=new VideoFrame(new Uint8Array([0,0,0,255]),t)}return e}_copyCubeMapToTexture(e,t,n,s){for(let r=0;r<6;r++){const o=e[r],a=s===!0?Rre[r]:r;o.isDataTexture?this._copyBufferToTexture(o.image,t,n,a,s):this._copyImageToTexture(o,t,n,a,s)}}_copyImageToTexture(e,t,n,s,r){this.backend.device.queue.copyExternalImageToTexture({source:e},{texture:t,mipLevel:0,origin:{x:0,y:0,z:s}},{width:e.width,height:e.height,depthOrArrayLayers:1}),r===!0&&this._flipY(t,n,s)}_getPassUtils(){let e=this._passUtils;return e===null&&(this._passUtils=e=new Are(this.backend.device)),e}_generateMipmaps(e,t,n=0){this._getPassUtils().generateMipmaps(e,t,n)}_flipY(e,t,n=0){this._getPassUtils().flipY(e,t,n)}_copyBufferToTexture(e,t,n,s,r,o=0){const a=this.backend.device,c=e.data,l=this._getBytesPerTexel(n.format),u=e.width*l;a.queue.writeTexture({texture:t,mipLevel:0,origin:{x:0,y:0,z:s}},c,{offset:e.width*e.height*l*o,bytesPerRow:u},{width:e.width,height:e.height,depthOrArrayLayers:1}),r===!0&&this._flipY(t,n,s)}_copyCompressedBufferToTexture(e,t,n){const s=this.backend.device,r=this._getBlockData(n.format),o=n.size.depthOrArrayLayers>1;for(let a=0;a<e.length;a++){const c=e[a],l=c.width,u=c.height,h=o?n.size.depthOrArrayLayers:1,d=Math.ceil(l/r.width)*r.byteLength,f=d*Math.ceil(u/r.height);for(let m=0;m<h;m++)s.queue.writeTexture({texture:t,mipLevel:a,origin:{x:0,y:0,z:m}},c.data,{offset:m*f,bytesPerRow:d,rowsPerImage:Math.ceil(u/r.height)},{width:Math.ceil(l/r.width)*r.width,height:Math.ceil(u/r.height)*r.height,depthOrArrayLayers:1})}}_getBlockData(e){if(e===K.BC1RGBAUnorm||e===K.BC1RGBAUnormSRGB)return{byteLength:8,width:4,height:4};if(e===K.BC2RGBAUnorm||e===K.BC2RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===K.BC3RGBAUnorm||e===K.BC3RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===K.BC4RUnorm||e===K.BC4RSNorm)return{byteLength:8,width:4,height:4};if(e===K.BC5RGUnorm||e===K.BC5RGSnorm)return{byteLength:16,width:4,height:4};if(e===K.BC6HRGBUFloat||e===K.BC6HRGBFloat)return{byteLength:16,width:4,height:4};if(e===K.BC7RGBAUnorm||e===K.BC7RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===K.ETC2RGB8Unorm||e===K.ETC2RGB8UnormSRGB)return{byteLength:8,width:4,height:4};if(e===K.ETC2RGB8A1Unorm||e===K.ETC2RGB8A1UnormSRGB)return{byteLength:8,width:4,height:4};if(e===K.ETC2RGBA8Unorm||e===K.ETC2RGBA8UnormSRGB)return{byteLength:16,width:4,height:4};if(e===K.EACR11Unorm)return{byteLength:8,width:4,height:4};if(e===K.EACR11Snorm)return{byteLength:8,width:4,height:4};if(e===K.EACRG11Unorm)return{byteLength:16,width:4,height:4};if(e===K.EACRG11Snorm)return{byteLength:16,width:4,height:4};if(e===K.ASTC4x4Unorm||e===K.ASTC4x4UnormSRGB)return{byteLength:16,width:4,height:4};if(e===K.ASTC5x4Unorm||e===K.ASTC5x4UnormSRGB)return{byteLength:16,width:5,height:4};if(e===K.ASTC5x5Unorm||e===K.ASTC5x5UnormSRGB)return{byteLength:16,width:5,height:5};if(e===K.ASTC6x5Unorm||e===K.ASTC6x5UnormSRGB)return{byteLength:16,width:6,height:5};if(e===K.ASTC6x6Unorm||e===K.ASTC6x6UnormSRGB)return{byteLength:16,width:6,height:6};if(e===K.ASTC8x5Unorm||e===K.ASTC8x5UnormSRGB)return{byteLength:16,width:8,height:5};if(e===K.ASTC8x6Unorm||e===K.ASTC8x6UnormSRGB)return{byteLength:16,width:8,height:6};if(e===K.ASTC8x8Unorm||e===K.ASTC8x8UnormSRGB)return{byteLength:16,width:8,height:8};if(e===K.ASTC10x5Unorm||e===K.ASTC10x5UnormSRGB)return{byteLength:16,width:10,height:5};if(e===K.ASTC10x6Unorm||e===K.ASTC10x6UnormSRGB)return{byteLength:16,width:10,height:6};if(e===K.ASTC10x8Unorm||e===K.ASTC10x8UnormSRGB)return{byteLength:16,width:10,height:8};if(e===K.ASTC10x10Unorm||e===K.ASTC10x10UnormSRGB)return{byteLength:16,width:10,height:10};if(e===K.ASTC12x10Unorm||e===K.ASTC12x10UnormSRGB)return{byteLength:16,width:12,height:10};if(e===K.ASTC12x12Unorm||e===K.ASTC12x12UnormSRGB)return{byteLength:16,width:12,height:12}}_convertAddressMode(e){let t=Xv.ClampToEdge;return e===Og?t=Xv.Repeat:e===Bg&&(t=Xv.MirrorRepeat),t}_convertFilterMode(e){let t=Pc.Linear;return(e===Si||e===Hy||e===zu)&&(t=Pc.Nearest),t}_getBytesPerTexel(e){if(e===K.R8Unorm||e===K.R8Snorm||e===K.R8Uint||e===K.R8Sint)return 1;if(e===K.R16Uint||e===K.R16Sint||e===K.R16Float||e===K.RG8Unorm||e===K.RG8Snorm||e===K.RG8Uint||e===K.RG8Sint)return 2;if(e===K.R32Uint||e===K.R32Sint||e===K.R32Float||e===K.RG16Uint||e===K.RG16Sint||e===K.RG16Float||e===K.RGBA8Unorm||e===K.RGBA8UnormSRGB||e===K.RGBA8Snorm||e===K.RGBA8Uint||e===K.RGBA8Sint||e===K.BGRA8Unorm||e===K.BGRA8UnormSRGB||e===K.RGB9E5UFloat||e===K.RGB10A2Unorm||e===K.RG11B10UFloat||e===K.Depth32Float||e===K.Depth24Plus||e===K.Depth24PlusStencil8||e===K.Depth32FloatStencil8)return 4;if(e===K.RG32Uint||e===K.RG32Sint||e===K.RG32Float||e===K.RGBA16Uint||e===K.RGBA16Sint||e===K.RGBA16Float)return 8;if(e===K.RGBA32Uint||e===K.RGBA32Sint||e===K.RGBA32Float)return 16}_getTypedArrayType(e){if(e===K.R8Uint)return Uint8Array;if(e===K.R8Sint)return Int8Array;if(e===K.R8Unorm)return Uint8Array;if(e===K.R8Snorm)return Int8Array;if(e===K.RG8Uint)return Uint8Array;if(e===K.RG8Sint)return Int8Array;if(e===K.RG8Unorm)return Uint8Array;if(e===K.RG8Snorm)return Int8Array;if(e===K.RGBA8Uint)return Uint8Array;if(e===K.RGBA8Sint)return Int8Array;if(e===K.RGBA8Unorm)return Uint8Array;if(e===K.RGBA8Snorm)return Int8Array;if(e===K.R16Uint)return Uint16Array;if(e===K.R16Sint)return Int16Array;if(e===K.RG16Uint)return Uint16Array;if(e===K.RG16Sint)return Int16Array;if(e===K.RGBA16Uint)return Uint16Array;if(e===K.RGBA16Sint)return Int16Array;if(e===K.R16Float||e===K.RG16Float||e===K.RGBA16Float)return Uint16Array;if(e===K.R32Uint)return Uint32Array;if(e===K.R32Sint)return Int32Array;if(e===K.R32Float)return Float32Array;if(e===K.RG32Uint)return Uint32Array;if(e===K.RG32Sint)return Int32Array;if(e===K.RG32Float)return Float32Array;if(e===K.RGBA32Uint)return Uint32Array;if(e===K.RGBA32Sint)return Int32Array;if(e===K.RGBA32Float)return Float32Array;if(e===K.BGRA8Unorm||e===K.BGRA8UnormSRGB)return Uint8Array;if(e===K.RGB10A2Unorm||e===K.RGB9E5UFloat||e===K.RG11B10UFloat)return Uint32Array;if(e===K.Depth32Float)return Float32Array;if(e===K.Depth24Plus||e===K.Depth24PlusStencil8)return Uint32Array;if(e===K.Depth32FloatStencil8)return Float32Array}_getDimension(e){let t;return e.isData3DTexture?t=G1.ThreeD:t=G1.TwoD,t}}function ES(i,e=null){const t=i.format,n=i.type,s=i.colorSpace;let r;if(i.isCompressedTexture===!0||i.isCompressedArrayTexture===!0)switch(t){case Xm:r=s===ht?K.BC1RGBAUnormSRGB:K.BC1RGBAUnorm;break;case jm:r=s===ht?K.BC2RGBAUnormSRGB:K.BC2RGBAUnorm;break;case Ym:r=s===ht?K.BC3RGBAUnormSRGB:K.BC3RGBAUnorm;break;case $y:r=s===ht?K.ETC2RGB8UnormSRGB:K.ETC2RGB8Unorm;break;case qy:r=s===ht?K.ETC2RGBA8UnormSRGB:K.ETC2RGBA8Unorm;break;case Xy:r=s===ht?K.ASTC4x4UnormSRGB:K.ASTC4x4Unorm;break;case jy:r=s===ht?K.ASTC5x4UnormSRGB:K.ASTC5x4Unorm;break;case Yy:r=s===ht?K.ASTC5x5UnormSRGB:K.ASTC5x5Unorm;break;case Zy:r=s===ht?K.ASTC6x5UnormSRGB:K.ASTC6x5Unorm;break;case Ky:r=s===ht?K.ASTC6x6UnormSRGB:K.ASTC6x6Unorm;break;case Qy:r=s===ht?K.ASTC8x5UnormSRGB:K.ASTC8x5Unorm;break;case Jy:r=s===ht?K.ASTC8x6UnormSRGB:K.ASTC8x6Unorm;break;case eS:r=s===ht?K.ASTC8x8UnormSRGB:K.ASTC8x8Unorm;break;case tS:r=s===ht?K.ASTC10x5UnormSRGB:K.ASTC10x5Unorm;break;case nS:r=s===ht?K.ASTC10x6UnormSRGB:K.ASTC10x6Unorm;break;case iS:r=s===ht?K.ASTC10x8UnormSRGB:K.ASTC10x8Unorm;break;case sS:r=s===ht?K.ASTC10x10UnormSRGB:K.ASTC10x10Unorm;break;case rS:r=s===ht?K.ASTC12x10UnormSRGB:K.ASTC12x10Unorm;break;case oS:r=s===ht?K.ASTC12x12UnormSRGB:K.ASTC12x12Unorm;break;default:console.error("WebGPURenderer: Unsupported texture format.",t)}else switch(t){case Lh:switch(n){case Id:r=K.RGBA8Snorm;break;case Fd:r=K.RGBA16Sint;break;case Su:r=K.RGBA16Uint;break;case ri:r=K.RGBA32Uint;break;case Ni:r=K.RGBA32Sint;break;case Oa:r=s===ht?K.RGBA8UnormSRGB:K.RGBA8Unorm;break;case ko:r=K.RGBA16Float;break;case gs:r=K.RGBA32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAFormat.",n)}break;case jb:switch(n){case S2:r=K.RGB9E5UFloat;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBFormat.",n)}break;case Yb:switch(n){case Id:r=K.R8Snorm;break;case Fd:r=K.R16Sint;break;case Su:r=K.R16Uint;break;case ri:r=K.R32Uint;break;case Ni:r=K.R32Sint;break;case Oa:r=K.R8Unorm;break;case ko:r=K.R16Float;break;case gs:r=K.R32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RedFormat.",n)}break;case cf:switch(n){case Id:r=K.RG8Snorm;break;case Fd:r=K.RG16Sint;break;case Su:r=K.RG16Uint;break;case ri:r=K.RG32Uint;break;case Ni:r=K.RG32Sint;break;case Oa:r=K.RG8Unorm;break;case ko:r=K.RG16Float;break;case gs:r=K.RG32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGFormat.",n)}break;case Vc:switch(n){case Su:r=K.Depth16Unorm;break;case ri:r=K.Depth24Plus;break;case gs:r=K.Depth32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthFormat.",n)}break;case hh:switch(n){case Bf:r=K.Depth24PlusStencil8;break;case gs:e&&e.features.has(MS.Depth32FloatStencil8)===!1&&console.error('WebGPURenderer: Depth textures with DepthStencilFormat + FloatType can only be used with the "depth32float-stencil8" GPU feature.'),r=K.Depth32FloatStencil8;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthStencilFormat.",n)}break;case Zb:switch(n){case Ni:r=K.R32Sint;break;case ri:r=K.R32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RedIntegerFormat.",n)}break;case Kb:switch(n){case Ni:r=K.RG32Sint;break;case ri:r=K.RG32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGIntegerFormat.",n)}break;case Qb:switch(n){case Ni:r=K.RGBA32Sint;break;case ri:r=K.RGBA32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAIntegerFormat.",n)}break;default:console.error("WebGPURenderer: Unsupported texture format.",t)}return r}const Pre=/^[fn]*\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)\s*[\-\>]*\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/i,Dre=/([a-z_0-9]+)\s*:\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/ig,cC={f32:"float",i32:"int",u32:"uint",bool:"bool","vec2<f32>":"vec2","vec2<i32>":"ivec2","vec2<u32>":"uvec2","vec2<bool>":"bvec2",vec2f:"vec2",vec2i:"ivec2",vec2u:"uvec2",vec2b:"bvec2","vec3<f32>":"vec3","vec3<i32>":"ivec3","vec3<u32>":"uvec3","vec3<bool>":"bvec3",vec3f:"vec3",vec3i:"ivec3",vec3u:"uvec3",vec3b:"bvec3","vec4<f32>":"vec4","vec4<i32>":"ivec4","vec4<u32>":"uvec4","vec4<bool>":"bvec4",vec4f:"vec4",vec4i:"ivec4",vec4u:"uvec4",vec4b:"bvec4","mat2x2<f32>":"mat2",mat2x2f:"mat2","mat3x3<f32>":"mat3",mat3x3f:"mat3","mat4x4<f32>":"mat4",mat4x4f:"mat4",sampler:"sampler",texture_1d:"texture",texture_2d:"texture",texture_2d_array:"texture",texture_multisampled_2d:"cubeTexture",texture_depth_2d:"depthTexture",texture_3d:"texture3D",texture_cube:"cubeTexture",texture_cube_array:"cubeTexture",texture_storage_1d:"storageTexture",texture_storage_2d:"storageTexture",texture_storage_2d_array:"storageTexture",texture_storage_3d:"storageTexture"},Lre=i=>{i=i.trim();const e=i.match(Pre);if(e!==null&&e.length===4){const t=e[2],n=[];let s=null;for(;(s=Dre.exec(t))!==null;)n.push({name:s[1],type:s[2]});const r=[];for(let u=0;u<n.length;u++){const{name:h,type:d}=n[u];let f=d;f.startsWith("ptr")?f="pointer":(f.startsWith("texture")&&(f=d.split("<")[0]),f=cC[f]),r.push(new LM(f,h))}const o=i.substring(e[0].length),a=e[3]||"void",c=e[1]!==void 0?e[1]:"";return{type:cC[a]||a,inputs:r,name:c,inputsCode:t,blockCode:o,outputType:a}}else throw new Error("FunctionNode: Function is not a WGSL code.")};class Ire extends IM{constructor(e){const{type:t,inputs:n,name:s,inputsCode:r,blockCode:o,outputType:a}=Lre(e);super(t,n,s),this.inputsCode=r,this.blockCode=o,this.outputType=a}getCode(e=this.name){const t=this.outputType!=="void"?"-> "+this.outputType:"";return`fn ${e} ( ${this.inputsCode.trim()} ) ${t}`+this.blockCode}}class Fre extends SL{parseFunction(e){return new Ire(e)}}const lu=self.GPUShaderStage,Tm={vertex:lu?lu.VERTEX:1,fragment:lu?lu.FRAGMENT:2,compute:lu?lu.COMPUTE:4},lC={instance:!0,swizzleAssign:!1,storageBuffer:!0},Ure={"^^":"tsl_xor"},Ore={float:"f32",int:"i32",uint:"u32",bool:"bool",color:"vec3<f32>",vec2:"vec2<f32>",ivec2:"vec2<i32>",uvec2:"vec2<u32>",bvec2:"vec2<bool>",vec3:"vec3<f32>",ivec3:"vec3<i32>",uvec3:"vec3<u32>",bvec3:"vec3<bool>",vec4:"vec4<f32>",ivec4:"vec4<i32>",uvec4:"vec4<u32>",bvec4:"vec4<bool>",mat2:"mat2x2<f32>",mat3:"mat3x3<f32>",mat4:"mat4x4<f32>"},vo={tsl_xor:new vi("fn tsl_xor( a : bool, b : bool ) -> bool { return ( a || b ) && !( a && b ); }"),mod_float:new vi("fn tsl_mod_float( x : f32, y : f32 ) -> f32 { return x - y * floor( x / y ); }"),mod_vec2:new vi("fn tsl_mod_vec2( x : vec2f, y : vec2f ) -> vec2f { return x - y * floor( x / y ); }"),mod_vec3:new vi("fn tsl_mod_vec3( x : vec3f, y : vec3f ) -> vec3f { return x - y * floor( x / y ); }"),mod_vec4:new vi("fn tsl_mod_vec4( x : vec4f, y : vec4f ) -> vec4f { return x - y * floor( x / y ); }"),equals_bool:new vi("fn tsl_equals_bool( a : bool, b : bool ) -> bool { return a == b; }"),equals_bvec2:new vi("fn tsl_equals_bvec2( a : vec2f, b : vec2f ) -> vec2<bool> { return vec2<bool>( a.x == b.x, a.y == b.y ); }"),equals_bvec3:new vi("fn tsl_equals_bvec3( a : vec3f, b : vec3f ) -> vec3<bool> { return vec3<bool>( a.x == b.x, a.y == b.y, a.z == b.z ); }"),equals_bvec4:new vi("fn tsl_equals_bvec4( a : vec4f, b : vec4f ) -> vec4<bool> { return vec4<bool>( a.x == b.x, a.y == b.y, a.z == b.z, a.w == b.w ); }"),repeatWrapping:new vi(`
fn tsl_repeatWrapping( uv : vec2<f32>, dimension : vec2<u32> ) -> vec2<u32> {

	let uvScaled = vec2<u32>( uv * vec2<f32>( dimension ) );

	return ( ( uvScaled % dimension ) + dimension ) % dimension;

}
`),biquadraticTexture:new vi(`
fn tsl_biquadraticTexture( map : texture_2d<f32>, coord : vec2f, level : i32 ) -> vec4f {

	let iRes = vec2i( textureDimensions( map, level ) );
	let res = vec2f( iRes );

	let uvScaled = coord * res;
	let uvWrapping = ( ( uvScaled % res ) + res ) % res;

	// https://www.shadertoy.com/view/WtyXRy

	let uv = uvWrapping - 0.5;
	let iuv = floor( uv );
	let f = fract( uv );

	let rg1 = textureLoad( map, vec2i( iuv + vec2( 0.5, 0.5 ) ) % iRes, level );
	let rg2 = textureLoad( map, vec2i( iuv + vec2( 1.5, 0.5 ) ) % iRes, level );
	let rg3 = textureLoad( map, vec2i( iuv + vec2( 0.5, 1.5 ) ) % iRes, level );
	let rg4 = textureLoad( map, vec2i( iuv + vec2( 1.5, 1.5 ) ) % iRes, level );

	return mix( mix( rg1, rg2, f.x ), mix( rg3, rg4, f.x ), f.y );

}
`)},wd={dFdx:"dpdx",dFdy:"- dpdy",mod_float:"tsl_mod_float",mod_vec2:"tsl_mod_vec2",mod_vec3:"tsl_mod_vec3",mod_vec4:"tsl_mod_vec4",equals_bool:"tsl_equals_bool",equals_bvec2:"tsl_equals_bvec2",equals_bvec3:"tsl_equals_bvec3",equals_bvec4:"tsl_equals_bvec4",inversesqrt:"inverseSqrt",bitcast:"bitcast<f32>"};/Windows/g.test(navigator.userAgent)&&(vo.pow_float=new vi("fn tsl_pow_float( a : f32, b : f32 ) -> f32 { return select( -pow( -a, b ), pow( a, b ), a > 0.0 ); }"),vo.pow_vec2=new vi("fn tsl_pow_vec2( a : vec2f, b : vec2f ) -> vec2f { return vec2f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ) ); }",[vo.pow_float]),vo.pow_vec3=new vi("fn tsl_pow_vec3( a : vec3f, b : vec3f ) -> vec3f { return vec3f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ) ); }",[vo.pow_float]),vo.pow_vec4=new vi("fn tsl_pow_vec4( a : vec4f, b : vec4f ) -> vec4f { return vec4f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ), tsl_pow_float( a.w, b.w ) ); }",[vo.pow_float]),wd.pow_float="tsl_pow_float",wd.pow_vec2="tsl_pow_vec2",wd.pow_vec3="tsl_pow_vec3",wd.pow_vec4="tsl_pow_vec4");let NL="";/Firefox|Deno/g.test(navigator.userAgent)!==!0&&(NL+=`diagnostic( off, derivative_uniformity );
`);class Bre extends xL{constructor(e,t){super(e,t,new Fre),this.uniformGroups={},this.builtins={},this.directives={},this.scopedArrays=new Map}needsToWorkingColorSpace(e){return e.isVideoTexture===!0&&e.colorSpace!==il}_generateTextureSample(e,t,n,s,r=this.shaderStage){return r==="fragment"?s?`textureSample( ${t}, ${t}_sampler, ${n}, ${s} )`:`textureSample( ${t}, ${t}_sampler, ${n} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,n):this.generateTextureLod(e,t,n,"0")}_generateVideoSample(e,t,n=this.shaderStage){if(n==="fragment")return`textureSampleBaseClampToEdge( ${e}, ${e}_sampler, vec2<f32>( ${t}.x, 1.0 - ${t}.y ) )`;console.error(`WebGPURenderer: THREE.VideoTexture does not support ${n} shader.`)}_generateTextureSampleLevel(e,t,n,s,r,o=this.shaderStage){return o==="fragment"&&this.isUnfilterable(e)===!1?`textureSampleLevel( ${t}, ${t}_sampler, ${n}, ${s} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,n,s):this.generateTextureLod(e,t,n,s)}generateFilteredTexture(e,t,n,s="0"){return this._include("biquadraticTexture"),`tsl_biquadraticTexture( ${t}, ${n}, i32( ${s} ) )`}generateTextureLod(e,t,n,s="0"){this._include("repeatWrapping");const r=e.isMultisampleRenderTargetTexture===!0?`textureDimensions( ${t} )`:`textureDimensions( ${t}, 0 )`;return`textureLoad( ${t}, tsl_repeatWrapping( ${n}, ${r} ), i32( ${s} ) )`}generateTextureLoad(e,t,n,s,r="0u"){return s?`textureLoad( ${t}, ${n}, ${s}, ${r} )`:`textureLoad( ${t}, ${n}, ${r} )`}generateTextureStore(e,t,n,s){return`textureStore( ${t}, ${n}, ${s} )`}isUnfilterable(e){return this.getComponentTypeFromTexture(e)!=="float"||!this.isAvailable("float32Filterable")&&e.isDataTexture===!0&&e.type===gs||e.isMultisampleRenderTargetTexture===!0}generateTexture(e,t,n,s,r=this.shaderStage){let o=null;return e.isVideoTexture===!0?o=this._generateVideoSample(t,n,r):this.isUnfilterable(e)?o=this.generateTextureLod(e,t,n,"0",s,r):o=this._generateTextureSample(e,t,n,s,r),o}generateTextureGrad(e,t,n,s,r,o=this.shaderStage){if(o==="fragment")return`textureSampleGrad( ${t}, ${t}_sampler, ${n},  ${s[0]}, ${s[1]} )`;console.error(`WebGPURenderer: THREE.TextureNode.gradient() does not support ${o} shader.`)}generateTextureCompare(e,t,n,s,r,o=this.shaderStage){if(o==="fragment")return`textureSampleCompare( ${t}, ${t}_sampler, ${n}, ${s} )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${o} shader.`)}generateTextureLevel(e,t,n,s,r,o=this.shaderStage){let a=null;return e.isVideoTexture===!0?a=this._generateVideoSample(t,n,o):a=this._generateTextureSampleLevel(e,t,n,s,r,o),a}generateTextureBias(e,t,n,s,r,o=this.shaderStage){if(o==="fragment")return`textureSampleBias( ${t}, ${t}_sampler, ${n}, ${s} )`;console.error(`WebGPURenderer: THREE.TextureNode.biasNode does not support ${o} shader.`)}getPropertyName(e,t=this.shaderStage){if(e.isNodeVarying===!0&&e.needsInterpolation===!0){if(t==="vertex")return`varyings.${e.name}`}else if(e.isNodeUniform===!0){const n=e.name,s=e.type;return s==="texture"||s==="cubeTexture"||s==="storageTexture"||s==="texture3D"?n:s==="buffer"||s==="storageBuffer"||s==="indirectStorageBuffer"?`NodeBuffer_${e.id}.${n}`:e.groupNode.name+"."+n}return super.getPropertyName(e)}getOutputStructName(){return"output"}_getUniformGroupCount(e){return Object.keys(this.uniforms[e]).length}getFunctionOperator(e){const t=Ure[e];return t!==void 0?(this._include(t),t):null}getStorageAccess(e){if(e.isStorageTextureNode)switch(e.access){case z1.ReadOnly:return"read";case z1.WriteOnly:return"write";default:return"read_write"}else switch(e.access){case bS.Storage:return"read_write";case bS.ReadOnlyStorage:return"read";default:return"write"}}getUniformFromNode(e,t,n,s=null){const r=super.getUniformFromNode(e,t,n,s),o=this.getDataFromNode(e,n,this.globalCache);if(o.uniformGPU===void 0){let a;const c=e.groupNode,l=c.name,u=this.getBindGroupArray(l,n);if(t==="texture"||t==="cubeTexture"||t==="storageTexture"||t==="texture3D"){let h=null;if(t==="texture"||t==="storageTexture"?h=new O_(r.name,r.node,c,e.access?e.access:null):t==="cubeTexture"?h=new AL(r.name,r.node,c,e.access?e.access:null):t==="texture3D"&&(h=new CL(r.name,r.node,c,e.access?e.access:null)),h.store=e.isStorageTextureNode===!0,h.setVisibility(Tm[n]),n==="fragment"&&this.isUnfilterable(e.value)===!1&&h.store===!1){const d=new Mre(`${r.name}_sampler`,r.node,c);d.setVisibility(Tm[n]),u.push(d,h),a=[d,h]}else u.push(h),a=[h]}else if(t==="buffer"||t==="storageBuffer"||t==="indirectStorageBuffer"){const h=t==="buffer"?EL:wre,d=new h(e,c);d.setVisibility(Tm[n]),u.push(d),a=d}else{const h=this.uniformGroups[n]||(this.uniformGroups[n]={});let d=h[l];d===void 0&&(d=new wL(l,c),d.setVisibility(Tm[n]),h[l]=d,u.push(d)),a=this.getNodeUniform(r,t),d.addUniform(a)}o.uniformGPU=a}return r}getBuiltin(e,t,n,s=this.shaderStage){const r=this.builtins[s]||(this.builtins[s]=new Map);return r.has(e)===!1&&r.set(e,{name:e,property:t,type:n}),t}hasBuiltin(e,t=this.shaderStage){return this.builtins[t]!==void 0&&this.builtins[t].has(e)}getVertexIndex(){return this.shaderStage==="vertex"?this.getBuiltin("vertex_index","vertexIndex","u32","attribute"):"vertexIndex"}buildFunctionCode(e){const t=e.layout,n=this.flowShaderNode(e),s=[];for(const o of t.inputs)s.push(o.name+" : "+this.getType(o.type));let r=`fn ${t.name}( ${s.join(", ")} ) -> ${this.getType(t.type)} {
${n.vars}
${n.code}
`;return n.result&&(r+=`	return ${n.result};
`),r+=`
}
`,r}getInstanceIndex(){return this.shaderStage==="vertex"?this.getBuiltin("instance_index","instanceIndex","u32","attribute"):"instanceIndex"}getInvocationLocalIndex(){return this.getBuiltin("local_invocation_index","invocationLocalIndex","u32","attribute")}getSubgroupSize(){return this.enableSubGroups(),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute")}getInvocationSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_invocation_id","invocationSubgroupIndex","u32","attribute")}getSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_id","subgroupIndex","u32","attribute")}getDrawIndex(){return null}getFrontFacing(){return this.getBuiltin("front_facing","isFront","bool")}getFragCoord(){return this.getBuiltin("position","fragCoord","vec4<f32>")+".xy"}getFragDepth(){return"output."+this.getBuiltin("frag_depth","depth","f32","output")}isFlipY(){return!1}enableDirective(e,t=this.shaderStage){(this.directives[t]||(this.directives[t]=new Set)).add(e)}getDirectives(e){const t=[],n=this.directives[e];if(n!==void 0)for(const s of n)t.push(`enable ${s};`);return t.join(`
`)}enableSubGroups(){this.enableDirective("subgroups")}enableSubgroupsF16(){this.enableDirective("subgroups-f16")}enableClipDistances(){this.enableDirective("clip_distances")}enableShaderF16(){this.enableDirective("f16")}enableDualSourceBlending(){this.enableDirective("dual_source_blending")}getBuiltins(e){const t=[],n=this.builtins[e];if(n!==void 0)for(const{name:s,property:r,type:o}of n.values())t.push(`@builtin( ${s} ) ${r} : ${o}`);return t.join(`,
	`)}getScopedArray(e,t,n,s){return this.scopedArrays.has(e)===!1&&this.scopedArrays.set(e,{name:e,scope:t,bufferType:n,bufferCount:s}),e}getScopedArrays(e){if(e!=="compute")return;const t=[];for(const{name:n,scope:s,bufferType:r,bufferCount:o}of this.scopedArrays.values()){const a=this.getType(r);t.push(`var<${s}> ${n}: array< ${a}, ${o} >;`)}return t.join(`
`)}getAttributes(e){const t=[];if(e==="compute"&&(this.getBuiltin("global_invocation_id","id","vec3<u32>","attribute"),this.getBuiltin("workgroup_id","workgroupId","vec3<u32>","attribute"),this.getBuiltin("local_invocation_id","localId","vec3<u32>","attribute"),this.getBuiltin("num_workgroups","numWorkgroups","vec3<u32>","attribute"),this.renderer.hasFeature("subgroups")&&(this.enableDirective("subgroups",e),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute"))),e==="vertex"||e==="compute"){const n=this.getBuiltins("attribute");n&&t.push(n);const s=this.getAttributesArray();for(let r=0,o=s.length;r<o;r++){const a=s[r],c=a.name,l=this.getType(a.type);t.push(`@location( ${r} ) ${c} : ${l}`)}}return t.join(`,
	`)}getStructMembers(e){const t=[],n=e.getMemberTypes();for(let r=0;r<n.length;r++){const o=n[r];t.push(`	@location( ${r} ) m${r} : ${o}<f32>`)}const s=this.getBuiltins("output");return s&&t.push("	"+s),t.join(`,
`)}getStructs(e){const t=[],n=this.structs[e];for(let s=0,r=n.length;s<r;s++){const o=n[s],a=o.name;let c=`struct ${a} {
`;c+=this.getStructMembers(o),c+=`
}`,t.push(c),t.push(`
var<private> output : ${a};

`)}return t.join(`

`)}getVar(e,t){return`var ${t} : ${this.getType(e)}`}getVars(e){const t=[],n=this.vars[e];if(n!==void 0)for(const s of n)t.push(`	${this.getVar(s.type,s.name)};`);return`
${t.join(`
`)}
`}getVaryings(e){const t=[];if(e==="vertex"&&this.getBuiltin("position","Vertex","vec4<f32>","vertex"),e==="vertex"||e==="fragment"){const r=this.varyings,o=this.vars[e];for(let a=0;a<r.length;a++){const c=r[a];if(c.needsInterpolation){let l=`@location( ${a} )`;/^(int|uint|ivec|uvec)/.test(c.type)&&(l+=" @interpolate( flat )"),t.push(`${l} ${c.name} : ${this.getType(c.type)}`)}else e==="vertex"&&o.includes(c)===!1&&o.push(c)}}const n=this.getBuiltins(e);n&&t.push(n);const s=t.join(`,
	`);return e==="vertex"?this._getWGSLStruct("VaryingsStruct","	"+s):s}getUniforms(e){const t=this.uniforms[e],n=[],s=[],r=[],o={};for(const c of t){const l=c.groupNode.name,u=this.bindingsIndexes[l];if(c.type==="texture"||c.type==="cubeTexture"||c.type==="storageTexture"||c.type==="texture3D"){const h=c.node.value;e==="fragment"&&this.isUnfilterable(h)===!1&&c.node.isStorageTextureNode!==!0&&(h.isDepthTexture===!0&&h.compareFunction!==null?n.push(`@binding( ${u.binding++} ) @group( ${u.group} ) var ${c.name}_sampler : sampler_comparison;`):n.push(`@binding( ${u.binding++} ) @group( ${u.group} ) var ${c.name}_sampler : sampler;`));let d,f="";if(h.isMultisampleRenderTargetTexture===!0&&(f="_multisampled"),h.isCubeTexture===!0)d="texture_cube<f32>";else if(h.isDataArrayTexture===!0||h.isCompressedArrayTexture===!0)d="texture_2d_array<f32>";else if(h.isDepthTexture===!0)d=`texture_depth${f}_2d`;else if(h.isVideoTexture===!0)d="texture_external";else if(h.isData3DTexture===!0)d="texture_3d<f32>";else if(c.node.isStorageTextureNode===!0){const m=ES(h),_=this.getStorageAccess(c.node);d=`texture_storage_2d<${m}, ${_}>`}else{const m=this.getComponentTypeFromTexture(h).charAt(0);d=`texture${f}_2d<${m}32>`}n.push(`@binding( ${u.binding++} ) @group( ${u.group} ) var ${c.name} : ${d};`)}else if(c.type==="buffer"||c.type==="storageBuffer"||c.type==="indirectStorageBuffer"){const h=c.node,d=this.getType(h.bufferType),f=h.bufferCount,m=f>0&&c.type==="buffer"?", "+f:"",_=h.isAtomic?`atomic<${d}>`:`${d}`,g=`	${c.name} : array< ${_}${m} >
`,p=h.isStorageBufferNode?`storage, ${this.getStorageAccess(h)}`:"uniform";s.push(this._getWGSLStructBinding("NodeBuffer_"+h.id,g,p,u.binding++,u.group))}else{const h=this.getType(this.getVectorType(c.type)),d=c.groupNode.name;(o[d]||(o[d]={index:u.binding++,id:u.group,snippets:[]})).snippets.push(`	${c.name} : ${h}`)}}for(const c in o){const l=o[c];r.push(this._getWGSLStructBinding(c,l.snippets.join(`,
`),"uniform",l.index,l.id))}let a=n.join(`
`);return a+=s.join(`
`),a+=r.join(`
`),a}buildCode(){const e=this.material!==null?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const t in e){const n=e[t];n.uniforms=this.getUniforms(t),n.attributes=this.getAttributes(t),n.varyings=this.getVaryings(t),n.structs=this.getStructs(t),n.vars=this.getVars(t),n.codes=this.getCodes(t),n.directives=this.getDirectives(t),n.scopedArrays=this.getScopedArrays(t);let s=`// code

`;s+=this.flowCode[t];const r=this.flowNodes[t],o=r[r.length-1],a=o.outputNode,c=a!==void 0&&a.isOutputStructNode===!0;for(const l of r){const u=this.getFlowData(l),h=l.name;if(h&&(s.length>0&&(s+=`
`),s+=`	// flow -> ${h}
	`),s+=`${u.code}
	`,l===o&&t!=="compute"){if(s+=`// result

	`,t==="vertex")s+=`varyings.Vertex = ${u.result};`;else if(t==="fragment")if(c)n.returnType=a.nodeType,s+=`return ${u.result};`;else{let d="	@location(0) color: vec4<f32>";const f=this.getBuiltins("output");f&&(d+=`,
	`+f),n.returnType="OutputStruct",n.structs+=this._getWGSLStruct("OutputStruct",d),n.structs+=`
var<private> output : OutputStruct;

`,s+=`output.color = ${u.result};

	return output;`}}}n.flow=s}this.material!==null?(this.vertexShader=this._getWGSLVertexCode(e.vertex),this.fragmentShader=this._getWGSLFragmentCode(e.fragment)):this.computeShader=this._getWGSLComputeCode(e.compute,(this.object.workgroupSize||[64]).join(", "))}getMethod(e,t=null){let n;return t!==null&&(n=this._getWGSLMethod(e+"_"+t)),n===void 0&&(n=this._getWGSLMethod(e)),n||e}getType(e){return Ore[e]||e}isAvailable(e){let t=lC[e];return t===void 0&&(e==="float32Filterable"&&(t=this.renderer.hasFeature("float32-filterable")),lC[e]=t),t}_getWGSLMethod(e){return vo[e]!==void 0&&this._include(e),wd[e]}_include(e){const t=vo[e];return t.build(this),this.currentFunctionNode!==null&&this.currentFunctionNode.includes.push(t),t}_getWGSLVertexCode(e){return`${this.getSignature()}
// directives
${e.directives}

// uniforms
${e.uniforms}

// varyings
${e.varyings}
var<private> varyings : VaryingsStruct;

// codes
${e.codes}

@vertex
fn main( ${e.attributes} ) -> VaryingsStruct {

	// vars
	${e.vars}

	// flow
	${e.flow}

	return varyings;

}
`}_getWGSLFragmentCode(e){return`${this.getSignature()}
// global
${NL}

// uniforms
${e.uniforms}

// structs
${e.structs}

// codes
${e.codes}

@fragment
fn main( ${e.varyings} ) -> ${e.returnType} {

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}_getWGSLComputeCode(e,t){return`${this.getSignature()}
// directives
${e.directives}

// system
var<private> instanceIndex : u32;

// locals
${e.scopedArrays}

// uniforms
${e.uniforms}

// codes
${e.codes}

@compute @workgroup_size( ${t} )
fn main( ${e.attributes} ) {

	// system
	instanceIndex = id.x + id.y * numWorkgroups.x * u32(${t}) + id.z * numWorkgroups.x * numWorkgroups.y * u32(${t});

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}_getWGSLStruct(e,t){return`
struct ${e} {
${t}
};`}_getWGSLStructBinding(e,t,n,s=0,r=0){const o=e+"Struct";return`${this._getWGSLStruct(o,t)}
@binding( ${s} ) @group( ${r} )
var<${n}> ${e} : ${o};`}}class kre{constructor(e){this.backend=e}getCurrentDepthStencilFormat(e){let t;return e.depthTexture!==null?t=this.getTextureFormatGPU(e.depthTexture):e.depth&&e.stencil?t=K.Depth24PlusStencil8:e.depth&&(t=K.Depth24Plus),t}getTextureFormatGPU(e){return this.backend.get(e).format}getCurrentColorFormat(e){let t;return e.textures!==null?t=this.getTextureFormatGPU(e.textures[0]):t=this.getPreferredCanvasFormat(),t}getCurrentColorSpace(e){return e.textures!==null?e.textures[0].colorSpace:this.backend.renderer.outputColorSpace}getPrimitiveTopology(e,t){if(e.isPoints)return Eu.PointList;if(e.isLineSegments||e.isMesh&&t.wireframe===!0)return Eu.LineList;if(e.isLine)return Eu.LineStrip;if(e.isMesh)return Eu.TriangleList}getSampleCount(e){let t=1;return e>1&&(t=Math.pow(2,Math.floor(Math.log2(e))),t===2&&(t=4)),t}getSampleCountRenderContext(e){return e.textures!==null?this.getSampleCount(e.sampleCount):this.getSampleCount(this.backend.renderer.samples)}getPreferredCanvasFormat(){return navigator.userAgent.includes("Quest")?K.BGRA8Unorm:navigator.gpu.getPreferredCanvasFormat()}}const zre=new Map([[Int8Array,["sint8","snorm8"]],[Uint8Array,["uint8","unorm8"]],[Int16Array,["sint16","snorm16"]],[Uint16Array,["uint16","unorm16"]],[Int32Array,["sint32","snorm32"]],[Uint32Array,["uint32","unorm32"]],[Float32Array,["float32"]]]),Gre=new Map([[I2,["float16"]]]),Vre=new Map([[Int32Array,"sint32"],[Int16Array,"sint32"],[Uint32Array,"uint32"],[Uint16Array,"uint32"],[Float32Array,"float32"]]);class Hre{constructor(e){this.backend=e}createAttribute(e,t){const n=this._getBufferAttribute(e),s=this.backend,r=s.get(n);let o=r.buffer;if(o===void 0){const a=s.device;let c=n.array;if(e.normalized===!1&&(c.constructor===Int16Array||c.constructor===Uint16Array)){const u=new Uint32Array(c.length);for(let h=0;h<c.length;h++)u[h]=c[h];c=u}if(n.array=c,(n.isStorageBufferAttribute||n.isStorageInstancedBufferAttribute)&&n.itemSize===3){c=new c.constructor(n.count*4);for(let u=0;u<n.count;u++)c.set(n.array.subarray(u*3,u*3+3),u*4);n.itemSize=4,n.array=c}const l=c.byteLength+(4-c.byteLength%4)%4;o=a.createBuffer({label:n.name,size:l,usage:t,mappedAtCreation:!0}),new c.constructor(o.getMappedRange()).set(c),o.unmap(),r.buffer=o}}updateAttribute(e){const t=this._getBufferAttribute(e),n=this.backend,s=n.device,r=n.get(t).buffer,o=t.array,a=t.updateRanges;if(a.length===0)s.queue.writeBuffer(r,0,o,0);else{for(let c=0,l=a.length;c<l;c++){const u=a[c];s.queue.writeBuffer(r,0,o,u.start*o.BYTES_PER_ELEMENT,u.count*o.BYTES_PER_ELEMENT)}t.clearUpdateRanges()}}createShaderVertexBuffers(e){const t=e.getAttributes(),n=new Map;for(let s=0;s<t.length;s++){const r=t[s],o=r.array.BYTES_PER_ELEMENT,a=this._getBufferAttribute(r);let c=n.get(a);if(c===void 0){let h,d;r.isInterleavedBufferAttribute===!0?(h=r.data.stride*o,d=r.data.isInstancedInterleavedBuffer?mm.Instance:mm.Vertex):(h=r.itemSize*o,d=r.isInstancedBufferAttribute?mm.Instance:mm.Vertex),r.normalized===!1&&(r.array.constructor===Int16Array||r.array.constructor===Uint16Array)&&(h=4),c={arrayStride:h,attributes:[],stepMode:d},n.set(a,c)}const l=this._getVertexFormat(r),u=r.isInterleavedBufferAttribute===!0?r.offset*o:0;c.attributes.push({shaderLocation:s,offset:u,format:l})}return Array.from(n.values())}destroyAttribute(e){const t=this.backend;t.get(this._getBufferAttribute(e)).buffer.destroy(),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,n=t.device,r=t.get(this._getBufferAttribute(e)).buffer,o=r.size,a=n.createBuffer({label:e.name,size:o,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),c=n.createCommandEncoder({});c.copyBufferToBuffer(r,0,a,0,o),a.unmap();const l=c.finish();return n.queue.submit([l]),await a.mapAsync(GPUMapMode.READ),a.getMappedRange()}_getVertexFormat(e){const{itemSize:t,normalized:n}=e,s=e.array.constructor,r=e.constructor;let o;if(t==1)o=Vre.get(s);else{const c=(Gre.get(r)||zre.get(s))[n?1:0];if(c){const l=s.BYTES_PER_ELEMENT*t,h=Math.floor((l+3)/4)*4/s.BYTES_PER_ELEMENT;if(h%1)throw new Error("THREE.WebGPUAttributeUtils: Bad vertex format item size.");o=`${c}x${h}`}}return o||console.error("THREE.WebGPUAttributeUtils: Vertex format not supported yet."),o}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}class Wre{constructor(e){this.backend=e,this.bindGroupLayoutCache=new WeakMap}createBindingsLayout(e){const n=this.backend.device,s=[];let r=0;for(const o of e.bindings){const a={binding:r++,visibility:o.visibility};if(o.isUniformBuffer||o.isStorageBuffer){const c={};o.isStorageBuffer&&(c.type=o.access),a.buffer=c}else if(o.isSampler){const c={};o.texture.isDepthTexture&&o.texture.compareFunction!==null&&(c.type="comparison"),a.sampler=c}else if(o.isSampledTexture&&o.texture.isVideoTexture)a.externalTexture={};else if(o.isSampledTexture&&o.store){const c=this.backend.get(o.texture).texture.format,l=o.access;a.storageTexture={format:c,access:l}}else if(o.isSampledTexture){const c={};if(o.texture.isMultisampleRenderTargetTexture===!0&&(c.multisampled=!0),o.texture.isDepthTexture)c.sampleType=pd.Depth;else if(o.texture.isDataTexture||o.texture.isDataArrayTexture||o.texture.isData3DTexture){const l=o.texture.type;l===Ni?c.sampleType=pd.SInt:l===ri?c.sampleType=pd.UInt:l===gs&&(this.backend.hasFeature("float32-filterable")?c.sampleType=pd.Float:c.sampleType=pd.UnfilterableFloat)}o.isSampledCubeTexture?c.viewDimension=Es.Cube:o.texture.isDataArrayTexture||o.texture.isCompressedArrayTexture?c.viewDimension=Es.TwoDArray:o.isSampledTexture3D&&(c.viewDimension=Es.ThreeD),a.texture=c}else console.error(`WebGPUBindingUtils: Unsupported binding "${o}".`);s.push(a)}return n.createBindGroupLayout({entries:s})}createBindings(e){const{backend:t,bindGroupLayoutCache:n}=this,s=t.get(e);let r=n.get(e.bindingsReference);r===void 0&&(r=this.createBindingsLayout(e),n.set(e.bindingsReference,r));const o=this.createBindGroup(e,r);s.layout=r,s.group=o}updateBinding(e){const t=this.backend,n=t.device,s=e.buffer,r=t.get(e).buffer;n.queue.writeBuffer(r,0,s,0)}createBindGroup(e,t){const n=this.backend,s=n.device;let r=0;const o=[];for(const a of e.bindings){if(a.isUniformBuffer){const c=n.get(a);if(c.buffer===void 0){const l=a.byteLength,u=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,h=s.createBuffer({label:"bindingBuffer_"+a.name,size:l,usage:u});c.buffer=h}o.push({binding:r,resource:{buffer:c.buffer}})}else if(a.isStorageBuffer){const c=n.get(a);if(c.buffer===void 0){const l=a.attribute;c.buffer=n.get(l).buffer}o.push({binding:r,resource:{buffer:c.buffer}})}else if(a.isSampler){const c=n.get(a.texture);o.push({binding:r,resource:c.sampler})}else if(a.isSampledTexture){const c=n.get(a.texture);let l;if(c.externalTexture!==void 0)l=s.importExternalTexture({source:c.externalTexture});else{const u=a.store?1:c.texture.mipLevelCount,h=`view-${c.texture.width}-${c.texture.height}-${u}`;if(l=c[h],l===void 0){const d=Nie.All;let f;a.isSampledCubeTexture?f=Es.Cube:a.isSampledTexture3D?f=Es.ThreeD:a.texture.isDataArrayTexture||a.texture.isCompressedArrayTexture?f=Es.TwoDArray:f=Es.TwoD,l=c[h]=c.texture.createView({aspect:d,dimension:f,mipLevelCount:u})}}o.push({binding:r,resource:l})}r++}return s.createBindGroup({label:"bindGroup_"+e.name,layout:t,entries:o})}}class $re{constructor(e){this.backend=e}_getSampleCount(e){return this.backend.utils.getSampleCountRenderContext(e)}createRenderPipeline(e,t){const{object:n,material:s,geometry:r,pipeline:o}=e,{vertexProgram:a,fragmentProgram:c}=o,l=this.backend,u=l.device,h=l.utils,d=l.get(o),f=[];for(const P of e.getBindings()){const N=l.get(P);f.push(N.layout)}const m=l.attributeUtils.createShaderVertexBuffers(e);let _;s.transparent===!0&&s.blending!==lh&&(_=this._getBlending(s));let g={};s.stencilWrite===!0&&(g={compare:this._getStencilCompare(s),failOp:this._getStencilOperation(s.stencilFail),depthFailOp:this._getStencilOperation(s.stencilZFail),passOp:this._getStencilOperation(s.stencilZPass)});const p=this._getColorWriteMask(s),y=[];if(e.context.textures!==null){const P=e.context.textures;for(let N=0;N<P.length;N++){const L=h.getTextureFormatGPU(P[N]);y.push({format:L,blend:_,writeMask:p})}}else{const P=h.getCurrentColorFormat(e.context);y.push({format:P,blend:_,writeMask:p})}const x=l.get(a).module,v=l.get(c).module,S=this._getPrimitiveState(n,r,s),M=this._getDepthCompare(s),E=h.getCurrentDepthStencilFormat(e.context),w=this._getSampleCount(e.context),b={label:`renderPipeline_${s.name||s.type}_${s.id}`,vertex:Object.assign({},x,{buffers:m}),fragment:Object.assign({},v,{targets:y}),primitive:S,multisample:{count:w,alphaToCoverageEnabled:s.alphaToCoverage&&w>1},layout:u.createPipelineLayout({bindGroupLayouts:f})},T={},C=e.context.depth,D=e.context.stencil;if((C===!0||D===!0)&&(C===!0&&(T.format=E,T.depthWriteEnabled=s.depthWrite,T.depthCompare=M),D===!0&&(T.stencilFront=g,T.stencilBack={},T.stencilReadMask=s.stencilFuncMask,T.stencilWriteMask=s.stencilWriteMask),b.depthStencil=T),t===null)d.pipeline=u.createRenderPipeline(b);else{const P=new Promise(N=>{u.createRenderPipelineAsync(b).then(L=>{d.pipeline=L,N()})});t.push(P)}}createBundleEncoder(e){const t=this.backend,{utils:n,device:s}=t,r=n.getCurrentDepthStencilFormat(e),o=n.getCurrentColorFormat(e),a=this._getSampleCount(e),c={label:"renderBundleEncoder",colorFormats:[o],depthStencilFormat:r,sampleCount:a};return s.createRenderBundleEncoder(c)}createComputePipeline(e,t){const n=this.backend,s=n.device,r=n.get(e.computeProgram).module,o=n.get(e),a=[];for(const c of t){const l=n.get(c);a.push(l.layout)}o.pipeline=s.createComputePipeline({compute:r,layout:s.createPipelineLayout({bindGroupLayouts:a})})}_getBlending(e){let t,n;const s=e.blending,r=e.blendSrc,o=e.blendDst,a=e.blendEquation;if(s===n2){const c=e.blendSrcAlpha!==null?e.blendSrcAlpha:r,l=e.blendDstAlpha!==null?e.blendDstAlpha:o,u=e.blendEquationAlpha!==null?e.blendEquationAlpha:a;t={srcFactor:this._getBlendFactor(r),dstFactor:this._getBlendFactor(o),operation:this._getBlendOperation(a)},n={srcFactor:this._getBlendFactor(c),dstFactor:this._getBlendFactor(l),operation:this._getBlendOperation(u)}}else{const c=e.premultipliedAlpha,l=(u,h,d,f)=>{t={srcFactor:u,dstFactor:h,operation:gc.Add},n={srcFactor:d,dstFactor:f,operation:gc.Add}};if(c)switch(s){case Ua:l(vt.One,vt.OneMinusSrcAlpha,vt.One,vt.OneMinusSrcAlpha);break;case Pg:l(vt.One,vt.One,vt.One,vt.One);break;case Dg:l(vt.Zero,vt.OneMinusSrc,vt.Zero,vt.One);break;case Lg:l(vt.Zero,vt.Src,vt.Zero,vt.SrcAlpha);break}else switch(s){case Ua:l(vt.SrcAlpha,vt.OneMinusSrcAlpha,vt.One,vt.OneMinusSrcAlpha);break;case Pg:l(vt.SrcAlpha,vt.One,vt.SrcAlpha,vt.One);break;case Dg:l(vt.Zero,vt.OneMinusSrc,vt.Zero,vt.One);break;case Lg:l(vt.Zero,vt.Src,vt.Zero,vt.Src);break}}if(t!==void 0&&n!==void 0)return{color:t,alpha:n};console.error("THREE.WebGPURenderer: Invalid blending: ",s)}_getBlendFactor(e){let t;switch(e){case r2:t=vt.Zero;break;case o2:t=vt.One;break;case a2:t=vt.Src;break;case c2:t=vt.OneMinusSrc;break;case Ig:t=vt.SrcAlpha;break;case Fg:t=vt.OneMinusSrcAlpha;break;case h2:t=vt.Dst;break;case d2:t=vt.OneMinusDstColor;break;case l2:t=vt.DstAlpha;break;case u2:t=vt.OneMinusDstAlpha;break;case f2:t=vt.SrcAlphaSaturated;break;case sie:t=vt.Constant;break;case rie:t=vt.OneMinusConstant;break;default:console.error("THREE.WebGPURenderer: Blend factor not supported.",e)}return t}_getStencilCompare(e){let t;const n=e.stencilFunc;switch(n){case wZ:t=ii.Never;break;case aS:t=ii.Always;break;case AZ:t=ii.Less;break;case RZ:t=ii.LessEqual;break;case CZ:t=ii.Equal;break;case DZ:t=ii.GreaterEqual;break;case NZ:t=ii.Greater;break;case PZ:t=ii.NotEqual;break;default:console.error("THREE.WebGPURenderer: Invalid stencil function.",n)}return t}_getStencilOperation(e){let t;switch(e){case Sc:t=Sa.Keep;break;case xZ:t=Sa.Zero;break;case yZ:t=Sa.Replace;break;case EZ:t=Sa.Invert;break;case SZ:t=Sa.IncrementClamp;break;case bZ:t=Sa.DecrementClamp;break;case MZ:t=Sa.IncrementWrap;break;case TZ:t=Sa.DecrementWrap;break;default:console.error("THREE.WebGPURenderer: Invalid stencil operation.",t)}return t}_getBlendOperation(e){let t;switch(e){case Ca:t=gc.Add;break;case i2:t=gc.Subtract;break;case s2:t=gc.ReverseSubtract;break;case tZ:t=gc.Min;break;case nZ:t=gc.Max;break;default:console.error("THREE.WebGPUPipelineUtils: Blend equation not supported.",e)}return t}_getPrimitiveState(e,t,n){const s={},r=this.backend.utils;switch(s.topology=r.getPrimitiveTopology(e,n),t.index!==null&&e.isLine===!0&&e.isLineSegments!==!0&&(s.stripIndexFormat=t.index.array instanceof Uint16Array?ph.Uint16:ph.Uint32),n.side){case ch:s.frontFace=$v.CCW,s.cullMode=qv.Back;break;case pr:s.frontFace=$v.CCW,s.cullMode=qv.Front;break;case Bu:s.frontFace=$v.CCW,s.cullMode=qv.None;break;default:console.error("THREE.WebGPUPipelineUtils: Unknown material.side value.",n.side);break}return s}_getColorWriteMask(e){return e.colorWrite===!0?k1.All:k1.None}_getDepthCompare(e){let t;if(e.depthTest===!1)t=ii.Always;else{const n=e.depthFunc;switch(n){case p2:t=ii.Never;break;case m2:t=ii.Always;break;case g2:t=ii.Less;break;case Ug:t=ii.LessEqual;break;case _2:t=ii.Equal;break;case v2:t=ii.GreaterEqual;break;case x2:t=ii.Greater;break;case y2:t=ii.NotEqual;break;default:console.error("THREE.WebGPUPipelineUtils: Invalid depth function.",n)}}return t}}class qre extends RL{constructor(e={}){super(e),this.isWebGPUBackend=!0,this.parameters.alpha=e.alpha===void 0?!0:e.alpha,this.parameters.requiredLimits=e.requiredLimits===void 0?{}:e.requiredLimits,this.trackTimestamp=e.trackTimestamp===!0,this.device=null,this.context=null,this.colorBuffer=null,this.defaultRenderPassdescriptor=null,this.utils=new kre(this),this.attributeUtils=new Hre(this),this.bindingUtils=new Wre(this),this.pipelineUtils=new $re(this),this.textureUtils=new Nre(this),this.occludedResolveCache=new Map}async init(e){await super.init(e);const t=this.parameters;let n;if(t.device===void 0){const o={powerPreference:t.powerPreference},a=await navigator.gpu.requestAdapter(o);if(a===null)throw new Error("WebGPUBackend: Unable to create WebGPU adapter.");const c=Object.values(MS),l=[];for(const h of c)a.features.has(h)&&l.push(h);const u={requiredFeatures:l,requiredLimits:t.requiredLimits};n=await a.requestDevice(u)}else n=t.device;n.lost.then(o=>{const a={api:"WebGPU",message:o.message||"Unknown reason",reason:o.reason||null,originalEvent:o};e.onDeviceLost(a)});const s=t.context!==void 0?t.context:e.domElement.getContext("webgpu");this.device=n,this.context=s;const r=t.alpha?"premultiplied":"opaque";this.trackTimestamp=this.trackTimestamp&&this.hasFeature(MS.TimestampQuery),this.context.configure({device:this.device,format:this.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC,alphaMode:r}),this.updateSize()}get coordinateSystem(){return sl}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}getContext(){return this.context}_getDefaultRenderPassDescriptor(){let e=this.defaultRenderPassdescriptor;if(e===null){const n=this.renderer;e={colorAttachments:[{view:null}]},(this.renderer.depth===!0||this.renderer.stencil===!0)&&(e.depthStencilAttachment={view:this.textureUtils.getDepthBuffer(n.depth,n.stencil).createView()});const s=e.colorAttachments[0];this.renderer.samples>0?s.view=this.colorBuffer.createView():s.resolveTarget=void 0,this.defaultRenderPassdescriptor=e}const t=e.colorAttachments[0];return this.renderer.samples>0?t.resolveTarget=this.context.getCurrentTexture().createView():t.view=this.context.getCurrentTexture().createView(),e}_getRenderPassDescriptor(e){const t=e.renderTarget,n=this.get(t);let s=n.descriptors;if(s===void 0||n.width!==t.width||n.height!==t.height||n.activeMipmapLevel!==t.activeMipmapLevel||n.samples!==t.samples){s={},n.descriptors=s;const a=()=>{t.removeEventListener("dispose",a),this.delete(t)};t.addEventListener("dispose",a)}const r=e.getCacheKey();let o=s[r];if(o===void 0){const a=e.textures,c=[];for(let l=0;l<a.length;l++){const u=this.get(a[l]),h=u.texture.createView({baseMipLevel:e.activeMipmapLevel,mipLevelCount:1,baseArrayLayer:e.activeCubeFace,dimension:Es.TwoD});let d,f;u.msaaTexture!==void 0?(d=u.msaaTexture.createView(),f=h):(d=h,f=void 0),c.push({view:d,resolveTarget:f,loadOp:In.Load,storeOp:si.Store})}if(o={colorAttachments:c},e.depth){const u={view:this.get(e.depthTexture).texture.createView()};o.depthStencilAttachment=u}s[r]=o,n.width=t.width,n.height=t.height,n.samples=t.samples,n.activeMipmapLevel=t.activeMipmapLevel}return o}beginRender(e){const t=this.get(e),n=this.device,s=e.occlusionQueryCount;let r;s>0&&(t.currentOcclusionQuerySet&&t.currentOcclusionQuerySet.destroy(),t.currentOcclusionQueryBuffer&&t.currentOcclusionQueryBuffer.destroy(),t.currentOcclusionQuerySet=t.occlusionQuerySet,t.currentOcclusionQueryBuffer=t.occlusionQueryBuffer,t.currentOcclusionQueryObjects=t.occlusionQueryObjects,r=n.createQuerySet({type:"occlusion",count:s}),t.occlusionQuerySet=r,t.occlusionQueryIndex=0,t.occlusionQueryObjects=new Array(s),t.lastOcclusionObject=null);let o;e.textures===null?o=this._getDefaultRenderPassDescriptor():o=this._getRenderPassDescriptor(e),this.initTimestampQuery(e,o),o.occlusionQuerySet=r;const a=o.depthStencilAttachment;if(e.textures!==null){const u=o.colorAttachments;for(let h=0;h<u.length;h++){const d=u[h];e.clearColor?(d.clearValue=h===0?e.clearColorValue:{r:0,g:0,b:0,a:1},d.loadOp=In.Clear,d.storeOp=si.Store):(d.loadOp=In.Load,d.storeOp=si.Store)}}else{const u=o.colorAttachments[0];e.clearColor?(u.clearValue=e.clearColorValue,u.loadOp=In.Clear,u.storeOp=si.Store):(u.loadOp=In.Load,u.storeOp=si.Store)}e.depth&&(e.clearDepth?(a.depthClearValue=e.clearDepthValue,a.depthLoadOp=In.Clear,a.depthStoreOp=si.Store):(a.depthLoadOp=In.Load,a.depthStoreOp=si.Store)),e.stencil&&(e.clearStencil?(a.stencilClearValue=e.clearStencilValue,a.stencilLoadOp=In.Clear,a.stencilStoreOp=si.Store):(a.stencilLoadOp=In.Load,a.stencilStoreOp=si.Store));const c=n.createCommandEncoder({label:"renderContext_"+e.id}),l=c.beginRenderPass(o);if(t.descriptor=o,t.encoder=c,t.currentPass=l,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.renderBundles=[],e.viewport&&this.updateViewport(e),e.scissor){const{x:u,y:h,width:d,height:f}=e.scissorValue;l.setScissorRect(u,h,d,f)}}finishRender(e){const t=this.get(e),n=e.occlusionQueryCount;if(t.renderBundles.length>0&&t.currentPass.executeBundles(t.renderBundles),n>t.occlusionQueryIndex&&t.currentPass.endOcclusionQuery(),t.currentPass.end(),n>0){const s=n*8;let r=this.occludedResolveCache.get(s);r===void 0&&(r=this.device.createBuffer({size:s,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.occludedResolveCache.set(s,r));const o=this.device.createBuffer({size:s,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});t.encoder.resolveQuerySet(t.occlusionQuerySet,0,n,r,0),t.encoder.copyBufferToBuffer(r,0,o,0,s),t.occlusionQueryBuffer=o,this.resolveOccludedAsync(e)}if(this.prepareTimestampBuffer(e,t.encoder),this.device.queue.submit([t.encoder.finish()]),e.textures!==null){const s=e.textures;for(let r=0;r<s.length;r++){const o=s[r];o.generateMipmaps===!0&&this.textureUtils.generateMipmaps(o)}}}isOccluded(e,t){const n=this.get(e);return n.occluded&&n.occluded.has(t)}async resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueryBuffer:n,currentOcclusionQueryObjects:s}=t;if(n&&s){const r=new WeakSet;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueryBuffer=null,await n.mapAsync(GPUMapMode.READ);const o=n.getMappedRange(),a=new BigUint64Array(o);for(let c=0;c<s.length;c++)a[c]!==BigInt(0)&&r.add(s[c]);n.destroy(),t.occluded=r}}updateViewport(e){const{currentPass:t}=this.get(e),{x:n,y:s,width:r,height:o,minDepth:a,maxDepth:c}=e.viewportValue;t.setViewport(n,s,r,o,a,c)}clear(e,t,n,s=null){const r=this.device,o=this.renderer;let a=[],c,l,u,h;if(e){const m=this.getClearColor();if(this.renderer.alpha===!0){const _=m.a;l={r:m.r*_,g:m.g*_,b:m.b*_,a:_}}else l={r:m.r,g:m.g,b:m.b,a:m.a}}if(s===null){u=o.depth,h=o.stencil;const m=this._getDefaultRenderPassDescriptor();if(e){a=m.colorAttachments;const _=a[0];_.clearValue=l,_.loadOp=In.Clear,_.storeOp=si.Store}(u||h)&&(c=m.depthStencilAttachment)}else{if(u=s.depth,h=s.stencil,e)for(const m of s.textures){const _=this.get(m),g=_.texture.createView();let p,y;_.msaaTexture!==void 0?(p=_.msaaTexture.createView(),y=g):(p=g,y=void 0),a.push({view:p,resolveTarget:y,clearValue:l,loadOp:In.Clear,storeOp:si.Store})}(u||h)&&(c={view:this.get(s.depthTexture).texture.createView()})}u&&(t?(c.depthLoadOp=In.Clear,c.depthClearValue=o.getClearDepth(),c.depthStoreOp=si.Store):(c.depthLoadOp=In.Load,c.depthStoreOp=si.Store)),h&&(n?(c.stencilLoadOp=In.Clear,c.stencilClearValue=o.getClearStencil(),c.stencilStoreOp=si.Store):(c.stencilLoadOp=In.Load,c.stencilStoreOp=si.Store));const d=r.createCommandEncoder({});d.beginRenderPass({colorAttachments:a,depthStencilAttachment:c}).end(),r.queue.submit([d.finish()])}beginCompute(e){const t=this.get(e),n={};this.initTimestampQuery(e,n),t.cmdEncoderGPU=this.device.createCommandEncoder(),t.passEncoderGPU=t.cmdEncoderGPU.beginComputePass(n)}compute(e,t,n,s){const{passEncoderGPU:r}=this.get(e),o=this.get(s).pipeline;r.setPipeline(o);for(let u=0,h=n.length;u<h;u++){const d=n[u],f=this.get(d);r.setBindGroup(u,f.group)}const a=this.device.limits.maxComputeWorkgroupsPerDimension,c=this.get(t);c.dispatchSize===void 0&&(c.dispatchSize={x:0,y:1,z:1});const{dispatchSize:l}=c;t.dispatchCount>a?(l.x=Math.min(t.dispatchCount,a),l.y=Math.ceil(t.dispatchCount/a)):l.x=t.dispatchCount,r.dispatchWorkgroups(l.x,l.y,l.z)}finishCompute(e){const t=this.get(e);t.passEncoderGPU.end(),this.prepareTimestampBuffer(e,t.cmdEncoderGPU),this.device.queue.submit([t.cmdEncoderGPU.finish()])}async waitForGPU(){await this.device.queue.onSubmittedWorkDone()}draw(e,t){const{object:n,context:s,pipeline:r}=e,o=e.getBindings(),a=this.get(s),c=this.get(r).pipeline,l=a.currentSets,u=a.currentPass,h=e.getDrawParameters();if(h===null)return;l.pipeline!==c&&(u.setPipeline(c),l.pipeline=c);const d=l.bindingGroups;for(let g=0,p=o.length;g<p;g++){const y=o[g],x=this.get(y);d[y.index]!==y.id&&(u.setBindGroup(y.index,x.group),d[y.index]=y.id)}const f=e.getIndex(),m=f!==null;if(m===!0&&l.index!==f){const g=this.get(f).buffer,p=f.array instanceof Uint16Array?ph.Uint16:ph.Uint32;u.setIndexBuffer(g,p),l.index=f}const _=e.getVertexBuffers();for(let g=0,p=_.length;g<p;g++){const y=_[g];if(l.attributes[g]!==y){const x=this.get(y).buffer;u.setVertexBuffer(g,x),l.attributes[g]=y}}if(a.occlusionQuerySet!==void 0){const g=a.lastOcclusionObject;g!==n&&(g!==null&&g.occlusionTest===!0&&(u.endOcclusionQuery(),a.occlusionQueryIndex++),n.occlusionTest===!0&&(u.beginOcclusionQuery(a.occlusionQueryIndex),a.occlusionQueryObjects[a.occlusionQueryIndex]=n),a.lastOcclusionObject=n)}if(n.isBatchedMesh===!0){const g=n._multiDrawStarts,p=n._multiDrawCounts,y=n._multiDrawCount,x=n._multiDrawInstances,v=m?f.array.BYTES_PER_ELEMENT:1;for(let S=0;S<y;S++){const M=x?x[S]:1,E=M>1?0:S;u.drawIndexed(p[S],M,g[S]/v,0,E)}}else if(m===!0){const{vertexCount:g,instanceCount:p,firstVertex:y}=h,x=e.getIndirect();if(x!==null){const v=this.get(x).buffer;u.drawIndexedIndirect(v,0)}else u.drawIndexed(g,p,y,0,0);t.update(n,g,p)}else{const{vertexCount:g,instanceCount:p,firstVertex:y}=h,x=e.getIndirect();if(x!==null){const v=this.get(x).buffer;u.drawIndirect(v,0)}else u.draw(g,p,y,0);t.update(n,g,p)}}needsRenderUpdate(e){const t=this.get(e),{object:n,material:s}=e,r=this.utils,o=r.getSampleCountRenderContext(e.context),a=r.getCurrentColorSpace(e.context),c=r.getCurrentColorFormat(e.context),l=r.getCurrentDepthStencilFormat(e.context),u=r.getPrimitiveTopology(n,s);let h=!1;return(t.material!==s||t.materialVersion!==s.version||t.transparent!==s.transparent||t.blending!==s.blending||t.premultipliedAlpha!==s.premultipliedAlpha||t.blendSrc!==s.blendSrc||t.blendDst!==s.blendDst||t.blendEquation!==s.blendEquation||t.blendSrcAlpha!==s.blendSrcAlpha||t.blendDstAlpha!==s.blendDstAlpha||t.blendEquationAlpha!==s.blendEquationAlpha||t.colorWrite!==s.colorWrite||t.depthWrite!==s.depthWrite||t.depthTest!==s.depthTest||t.depthFunc!==s.depthFunc||t.stencilWrite!==s.stencilWrite||t.stencilFunc!==s.stencilFunc||t.stencilFail!==s.stencilFail||t.stencilZFail!==s.stencilZFail||t.stencilZPass!==s.stencilZPass||t.stencilFuncMask!==s.stencilFuncMask||t.stencilWriteMask!==s.stencilWriteMask||t.side!==s.side||t.alphaToCoverage!==s.alphaToCoverage||t.sampleCount!==o||t.colorSpace!==a||t.colorFormat!==c||t.depthStencilFormat!==l||t.primitiveTopology!==u||t.clippingContextCacheKey!==e.clippingContext.cacheKey)&&(t.material=s,t.materialVersion=s.version,t.transparent=s.transparent,t.blending=s.blending,t.premultipliedAlpha=s.premultipliedAlpha,t.blendSrc=s.blendSrc,t.blendDst=s.blendDst,t.blendEquation=s.blendEquation,t.blendSrcAlpha=s.blendSrcAlpha,t.blendDstAlpha=s.blendDstAlpha,t.blendEquationAlpha=s.blendEquationAlpha,t.colorWrite=s.colorWrite,t.depthWrite=s.depthWrite,t.depthTest=s.depthTest,t.depthFunc=s.depthFunc,t.stencilWrite=s.stencilWrite,t.stencilFunc=s.stencilFunc,t.stencilFail=s.stencilFail,t.stencilZFail=s.stencilZFail,t.stencilZPass=s.stencilZPass,t.stencilFuncMask=s.stencilFuncMask,t.stencilWriteMask=s.stencilWriteMask,t.side=s.side,t.alphaToCoverage=s.alphaToCoverage,t.sampleCount=o,t.colorSpace=a,t.colorFormat=c,t.depthStencilFormat=l,t.primitiveTopology=u,t.clippingContextCacheKey=e.clippingContext.cacheKey,h=!0),h}getRenderCacheKey(e){const{object:t,material:n}=e,s=this.utils,r=e.context;return[n.transparent,n.blending,n.premultipliedAlpha,n.blendSrc,n.blendDst,n.blendEquation,n.blendSrcAlpha,n.blendDstAlpha,n.blendEquationAlpha,n.colorWrite,n.depthWrite,n.depthTest,n.depthFunc,n.stencilWrite,n.stencilFunc,n.stencilFail,n.stencilZFail,n.stencilZPass,n.stencilFuncMask,n.stencilWriteMask,n.side,s.getSampleCountRenderContext(r),s.getCurrentColorSpace(r),s.getCurrentColorFormat(r),s.getCurrentDepthStencilFormat(r),s.getPrimitiveTopology(t,n),e.getGeometryCacheKey(),e.clippingContext.cacheKey].join()}createSampler(e){this.textureUtils.createSampler(e)}destroySampler(e){this.textureUtils.destroySampler(e)}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}copyTextureToBuffer(e,t,n,s,r,o){return this.textureUtils.copyTextureToBuffer(e,t,n,s,r,o)}initTimestampQuery(e,t){if(!this.trackTimestamp)return;const n=this.get(e);if(!n.timeStampQuerySet){const s=this.device.createQuerySet({type:"timestamp",count:2});Object.assign(t,{timestampWrites:{querySet:s,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1}}),n.timeStampQuerySet=s}}prepareTimestampBuffer(e,t){if(!this.trackTimestamp)return;const n=this.get(e),s=2*BigInt64Array.BYTES_PER_ELEMENT;n.currentTimestampQueryBuffers===void 0&&(n.currentTimestampQueryBuffers={resolveBuffer:this.device.createBuffer({label:"timestamp resolve buffer",size:s,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),resultBuffer:this.device.createBuffer({label:"timestamp result buffer",size:s,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),isMappingPending:!1});const{resolveBuffer:r,resultBuffer:o,isMappingPending:a}=n.currentTimestampQueryBuffers;a!==!0&&(t.resolveQuerySet(n.timeStampQuerySet,0,2,r,0),t.copyBufferToBuffer(r,0,o,0,s))}async resolveTimestampAsync(e,t="render"){if(!this.trackTimestamp)return;const n=this.get(e);if(n.currentTimestampQueryBuffers===void 0)return;const{resultBuffer:s,isMappingPending:r}=n.currentTimestampQueryBuffers;r!==!0&&(n.currentTimestampQueryBuffers.isMappingPending=!0,s.mapAsync(GPUMapMode.READ).then(()=>{const o=new BigUint64Array(s.getMappedRange()),a=Number(o[1]-o[0])/1e6;this.renderer.info.updateTimestamp(t,a),s.unmap(),n.currentTimestampQueryBuffers.isMappingPending=!1}))}createNodeBuilder(e,t){return new Bre(e,t)}createProgram(e){const t=this.get(e);t.module={module:this.device.createShaderModule({code:e.code,label:e.stage}),entryPoint:"main"}}destroyProgram(e){this.delete(e)}createRenderPipeline(e,t){this.pipelineUtils.createRenderPipeline(e,t)}createComputePipeline(e,t){this.pipelineUtils.createComputePipeline(e,t)}beginBundle(e){const t=this.get(e);t._currentPass=t.currentPass,t._currentSets=t.currentSets,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.currentPass=this.pipelineUtils.createBundleEncoder(e)}finishBundle(e,t){const n=this.get(e),r=n.currentPass.finish();this.get(t).bundleGPU=r,n.currentSets=n._currentSets,n.currentPass=n._currentPass}addBundle(e,t){this.get(e).renderBundles.push(this.get(t).bundleGPU)}createBindings(e){this.bindingUtils.createBindings(e)}updateBindings(e){this.bindingUtils.createBindings(e)}updateBinding(e){this.bindingUtils.updateBinding(e)}createIndexAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.INDEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createIndirectStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.INDIRECT|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}updateSize(){this.colorBuffer=this.textureUtils.getColorBuffer(),this.defaultRenderPassdescriptor=null}getMaxAnisotropy(){return 16}hasFeature(e){return this.device.features.has(e)}copyTextureToTexture(e,t,n=null,s=null,r=0){let o=0,a=0,c=0,l=0,u=0,h=0,d=e.image.width,f=e.image.height;n!==null&&(l=n.x,u=n.y,h=n.z||0,d=n.width,f=n.height),s!==null&&(o=s.x,a=s.y,c=s.z||0);const m=this.device.createCommandEncoder({label:"copyTextureToTexture_"+e.id+"_"+t.id}),_=this.get(e).texture,g=this.get(t).texture;m.copyTextureToTexture({texture:_,mipLevel:r,origin:{x:l,y:u,z:h}},{texture:g,mipLevel:r,origin:{x:o,y:a,z:c}},[d,f,1]),this.device.queue.submit([m.finish()])}copyFramebufferToTexture(e,t,n){const s=this.get(t);let r=null;t.renderTarget?e.isDepthTexture?r=this.get(t.depthTexture).texture:r=this.get(t.textures[0]).texture:e.isDepthTexture?r=this.textureUtils.getDepthBuffer(t.depth,t.stencil):r=this.context.getCurrentTexture();const o=this.get(e).texture;if(r.format!==o.format){console.error("WebGPUBackend: copyFramebufferToTexture: Source and destination formats do not match.",r.format,o.format);return}let a;if(s.currentPass?(s.currentPass.end(),a=s.encoder):a=this.device.createCommandEncoder({label:"copyFramebufferToTexture_"+e.id}),a.copyTextureToTexture({texture:r,origin:{x:n.x,y:n.y,z:0}},{texture:o},[n.z,n.w]),e.generateMipmaps&&this.textureUtils.generateMipmaps(e),s.currentPass){const{descriptor:c}=s;for(let l=0;l<c.colorAttachments.length;l++)c.colorAttachments[l].loadOp=In.Load;t.depth&&(c.depthStencilAttachment.depthLoadOp=In.Load),t.stencil&&(c.depthStencilAttachment.stencilLoadOp=In.Load),s.currentPass=a.beginRenderPass(c),s.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null}}else this.device.queue.submit([a.finish()])}}class Xre extends K2{constructor(e,t,n,s,r,o){super(e,t,n,s,r,o),this.iesMap=null}copy(e,t){return super.copy(e,t),this.iesMap=e.iesMap,this}}class jre extends bL{constructor(){super(),this.addMaterial(Yte,$2),this.addMaterial(cL,oM),this.addMaterial(Fne,W2),this.addMaterial(kne,q2),this.addMaterial(Vte,T_),this.addMaterial(Xte,j2),this.addMaterial(Ute,X2),this.addMaterial(Hne,Y2),this.addMaterial(Pte,sM),this.addMaterial(Lte,Z2),this.addMaterial($ne,V2),this.addMaterial(Yne,z2),this.addMaterial(Qne,H2),this.addLight(lse,NK),this.addLight(kse,DK),this.addLight(zse,IK),this.addLight(yL,K2),this.addLight(Vse,LK),this.addLight(Hse,AK),this.addLight(Wse,UK),this.addLight(Gse,Xre),this.addToneMapping(Lie,rZ),this.addToneMapping(Iie,oZ),this.addToneMapping(Fie,aZ),this.addToneMapping(Oie,cZ),this.addToneMapping(Gie,lZ),this.addToneMapping(Vie,uZ)}}class Yre extends tre{constructor(e={}){let t;e.forceWebGL?t=aC:(t=qre,e.getFallback=()=>(console.warn("THREE.WebGPURenderer: WebGPU is not available, running under WebGL2 backend."),new aC(e)));const n=new t(e);super(n,e),this.library=new jre,this.isWebGPURenderer=!0}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:b_}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=b_);const cx={type:"change"},UM={type:"start"},OM={type:"end"},uC=1e-6,qt={NONE:-1,ROTATE:0,ZOOM:1,PAN:2,TOUCH_ROTATE:3,TOUCH_ZOOM_PAN:4},Em=new lt,Ma=new lt,Zre=new he,wm=new he,lx=new he,uu=new fr,hC=new he,Am=new he,ux=new he,Cm=new he;class Kre extends x_{constructor(e,t=null){super(e,t),this.enabled=!0,this.screen={left:0,top:0,width:0,height:0},this.rotateSpeed=1,this.zoomSpeed=1.2,this.panSpeed=.3,this.noRotate=!1,this.noZoom=!1,this.noPan=!1,this.staticMoving=!1,this.dynamicDampingFactor=.2,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.keys=["KeyA","KeyS","KeyD"],this.mouseButtons={LEFT:ei.ROTATE,MIDDLE:ei.DOLLY,RIGHT:ei.PAN},this.state=qt.NONE,this.keyState=qt.NONE,this.target=new he,this._lastPosition=new he,this._lastZoom=1,this._touchZoomDistanceStart=0,this._touchZoomDistanceEnd=0,this._lastAngle=0,this._eye=new he,this._movePrev=new lt,this._moveCurr=new lt,this._lastAxis=new he,this._zoomStart=new lt,this._zoomEnd=new lt,this._panStart=new lt,this._panEnd=new lt,this._pointers=[],this._pointerPositions={},this._onPointerMove=Jre.bind(this),this._onPointerDown=Qre.bind(this),this._onPointerUp=eoe.bind(this),this._onPointerCancel=toe.bind(this),this._onContextMenu=coe.bind(this),this._onMouseWheel=aoe.bind(this),this._onKeyDown=ioe.bind(this),this._onKeyUp=noe.bind(this),this._onTouchStart=loe.bind(this),this._onTouchMove=uoe.bind(this),this._onTouchEnd=hoe.bind(this),this._onMouseDown=soe.bind(this),this._onMouseMove=roe.bind(this),this._onMouseUp=ooe.bind(this),this._target0=this.target.clone(),this._position0=this.object.position.clone(),this._up0=this.object.up.clone(),this._zoom0=this.object.zoom,t!==null&&(this.connect(),this.handleResize()),this.update()}connect(){window.addEventListener("keydown",this._onKeyDown),window.addEventListener("keyup",this._onKeyUp),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerCancel),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="none"}disconnect(){window.removeEventListener("keydown",this._onKeyDown),window.removeEventListener("keyup",this._onKeyUp),this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerCancel),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}handleResize(){const e=this.domElement.getBoundingClientRect(),t=this.domElement.ownerDocument.documentElement;this.screen.left=e.left+window.pageXOffset-t.clientLeft,this.screen.top=e.top+window.pageYOffset-t.clientTop,this.screen.width=e.width,this.screen.height=e.height}update(){this._eye.subVectors(this.object.position,this.target),this.noRotate||this._rotateCamera(),this.noZoom||this._zoomCamera(),this.noPan||this._panCamera(),this.object.position.addVectors(this.target,this._eye),this.object.isPerspectiveCamera?(this._checkDistances(),this.object.lookAt(this.target),this._lastPosition.distanceToSquared(this.object.position)>uC&&(this.dispatchEvent(cx),this._lastPosition.copy(this.object.position))):this.object.isOrthographicCamera?(this.object.lookAt(this.target),(this._lastPosition.distanceToSquared(this.object.position)>uC||this._lastZoom!==this.object.zoom)&&(this.dispatchEvent(cx),this._lastPosition.copy(this.object.position),this._lastZoom=this.object.zoom)):console.warn("THREE.TrackballControls: Unsupported camera type.")}reset(){this.state=qt.NONE,this.keyState=qt.NONE,this.target.copy(this._target0),this.object.position.copy(this._position0),this.object.up.copy(this._up0),this.object.zoom=this._zoom0,this.object.updateProjectionMatrix(),this._eye.subVectors(this.object.position,this.target),this.object.lookAt(this.target),this.dispatchEvent(cx),this._lastPosition.copy(this.object.position),this._lastZoom=this.object.zoom}_panCamera(){if(Ma.copy(this._panEnd).sub(this._panStart),Ma.lengthSq()){if(this.object.isOrthographicCamera){const e=(this.object.right-this.object.left)/this.object.zoom/this.domElement.clientWidth,t=(this.object.top-this.object.bottom)/this.object.zoom/this.domElement.clientWidth;Ma.x*=e,Ma.y*=t}Ma.multiplyScalar(this._eye.length()*this.panSpeed),wm.copy(this._eye).cross(this.object.up).setLength(Ma.x),wm.add(Zre.copy(this.object.up).setLength(Ma.y)),this.object.position.add(wm),this.target.add(wm),this.staticMoving?this._panStart.copy(this._panEnd):this._panStart.add(Ma.subVectors(this._panEnd,this._panStart).multiplyScalar(this.dynamicDampingFactor))}}_rotateCamera(){Cm.set(this._moveCurr.x-this._movePrev.x,this._moveCurr.y-this._movePrev.y,0);let e=Cm.length();e?(this._eye.copy(this.object.position).sub(this.target),hC.copy(this._eye).normalize(),Am.copy(this.object.up).normalize(),ux.crossVectors(Am,hC).normalize(),Am.setLength(this._moveCurr.y-this._movePrev.y),ux.setLength(this._moveCurr.x-this._movePrev.x),Cm.copy(Am.add(ux)),lx.crossVectors(Cm,this._eye).normalize(),e*=this.rotateSpeed,uu.setFromAxisAngle(lx,e),this._eye.applyQuaternion(uu),this.object.up.applyQuaternion(uu),this._lastAxis.copy(lx),this._lastAngle=e):!this.staticMoving&&this._lastAngle&&(this._lastAngle*=Math.sqrt(1-this.dynamicDampingFactor),this._eye.copy(this.object.position).sub(this.target),uu.setFromAxisAngle(this._lastAxis,this._lastAngle),this._eye.applyQuaternion(uu),this.object.up.applyQuaternion(uu)),this._movePrev.copy(this._moveCurr)}_zoomCamera(){let e;this.state===qt.TOUCH_ZOOM_PAN?(e=this._touchZoomDistanceStart/this._touchZoomDistanceEnd,this._touchZoomDistanceStart=this._touchZoomDistanceEnd,this.object.isPerspectiveCamera?this._eye.multiplyScalar(e):this.object.isOrthographicCamera?(this.object.zoom=wy.clamp(this.object.zoom/e,this.minZoom,this.maxZoom),this._lastZoom!==this.object.zoom&&this.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")):(e=1+(this._zoomEnd.y-this._zoomStart.y)*this.zoomSpeed,e!==1&&e>0&&(this.object.isPerspectiveCamera?this._eye.multiplyScalar(e):this.object.isOrthographicCamera?(this.object.zoom=wy.clamp(this.object.zoom/e,this.minZoom,this.maxZoom),this._lastZoom!==this.object.zoom&&this.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")),this.staticMoving?this._zoomStart.copy(this._zoomEnd):this._zoomStart.y+=(this._zoomEnd.y-this._zoomStart.y)*this.dynamicDampingFactor)}_getMouseOnScreen(e,t){return Em.set((e-this.screen.left)/this.screen.width,(t-this.screen.top)/this.screen.height),Em}_getMouseOnCircle(e,t){return Em.set((e-this.screen.width*.5-this.screen.left)/(this.screen.width*.5),(this.screen.height+2*(this.screen.top-t))/this.screen.width),Em}_addPointer(e){this._pointers.push(e)}_removePointer(e){delete this._pointerPositions[e.pointerId];for(let t=0;t<this._pointers.length;t++)if(this._pointers[t].pointerId==e.pointerId){this._pointers.splice(t,1);return}}_trackPointer(e){let t=this._pointerPositions[e.pointerId];t===void 0&&(t=new lt,this._pointerPositions[e.pointerId]=t),t.set(e.pageX,e.pageY)}_getSecondPointerPosition(e){const t=e.pointerId===this._pointers[0].pointerId?this._pointers[1]:this._pointers[0];return this._pointerPositions[t.pointerId]}_checkDistances(){(!this.noZoom||!this.noPan)&&(this._eye.lengthSq()>this.maxDistance*this.maxDistance&&(this.object.position.addVectors(this.target,this._eye.setLength(this.maxDistance)),this._zoomStart.copy(this._zoomEnd)),this._eye.lengthSq()<this.minDistance*this.minDistance&&(this.object.position.addVectors(this.target,this._eye.setLength(this.minDistance)),this._zoomStart.copy(this._zoomEnd)))}}function Qre(i){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(i.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),this._addPointer(i),i.pointerType==="touch"?this._onTouchStart(i):this._onMouseDown(i))}function Jre(i){this.enabled!==!1&&(i.pointerType==="touch"?this._onTouchMove(i):this._onMouseMove(i))}function eoe(i){this.enabled!==!1&&(i.pointerType==="touch"?this._onTouchEnd(i):this._onMouseUp(),this._removePointer(i),this._pointers.length===0&&(this.domElement.releasePointerCapture(i.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp)))}function toe(i){this._removePointer(i)}function noe(){this.enabled!==!1&&(this.keyState=qt.NONE,window.addEventListener("keydown",this._onKeyDown))}function ioe(i){this.enabled!==!1&&(window.removeEventListener("keydown",this._onKeyDown),this.keyState===qt.NONE&&(i.code===this.keys[qt.ROTATE]&&!this.noRotate?this.keyState=qt.ROTATE:i.code===this.keys[qt.ZOOM]&&!this.noZoom?this.keyState=qt.ZOOM:i.code===this.keys[qt.PAN]&&!this.noPan&&(this.keyState=qt.PAN)))}function soe(i){let e;switch(i.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case ei.DOLLY:this.state=qt.ZOOM;break;case ei.ROTATE:this.state=qt.ROTATE;break;case ei.PAN:this.state=qt.PAN;break;default:this.state=qt.NONE}const t=this.keyState!==qt.NONE?this.keyState:this.state;t===qt.ROTATE&&!this.noRotate?(this._moveCurr.copy(this._getMouseOnCircle(i.pageX,i.pageY)),this._movePrev.copy(this._moveCurr)):t===qt.ZOOM&&!this.noZoom?(this._zoomStart.copy(this._getMouseOnScreen(i.pageX,i.pageY)),this._zoomEnd.copy(this._zoomStart)):t===qt.PAN&&!this.noPan&&(this._panStart.copy(this._getMouseOnScreen(i.pageX,i.pageY)),this._panEnd.copy(this._panStart)),this.dispatchEvent(UM)}function roe(i){const e=this.keyState!==qt.NONE?this.keyState:this.state;e===qt.ROTATE&&!this.noRotate?(this._movePrev.copy(this._moveCurr),this._moveCurr.copy(this._getMouseOnCircle(i.pageX,i.pageY))):e===qt.ZOOM&&!this.noZoom?this._zoomEnd.copy(this._getMouseOnScreen(i.pageX,i.pageY)):e===qt.PAN&&!this.noPan&&this._panEnd.copy(this._getMouseOnScreen(i.pageX,i.pageY))}function ooe(){this.state=qt.NONE,this.dispatchEvent(OM)}function aoe(i){if(this.enabled!==!1&&this.noZoom!==!0){switch(i.preventDefault(),i.deltaMode){case 2:this._zoomStart.y-=i.deltaY*.025;break;case 1:this._zoomStart.y-=i.deltaY*.01;break;default:this._zoomStart.y-=i.deltaY*25e-5;break}this.dispatchEvent(UM),this.dispatchEvent(OM)}}function coe(i){this.enabled!==!1&&i.preventDefault()}function loe(i){switch(this._trackPointer(i),this._pointers.length){case 1:this.state=qt.TOUCH_ROTATE,this._moveCurr.copy(this._getMouseOnCircle(this._pointers[0].pageX,this._pointers[0].pageY)),this._movePrev.copy(this._moveCurr);break;default:this.state=qt.TOUCH_ZOOM_PAN;const e=this._pointers[0].pageX-this._pointers[1].pageX,t=this._pointers[0].pageY-this._pointers[1].pageY;this._touchZoomDistanceEnd=this._touchZoomDistanceStart=Math.sqrt(e*e+t*t);const n=(this._pointers[0].pageX+this._pointers[1].pageX)/2,s=(this._pointers[0].pageY+this._pointers[1].pageY)/2;this._panStart.copy(this._getMouseOnScreen(n,s)),this._panEnd.copy(this._panStart);break}this.dispatchEvent(UM)}function uoe(i){switch(this._trackPointer(i),this._pointers.length){case 1:this._movePrev.copy(this._moveCurr),this._moveCurr.copy(this._getMouseOnCircle(i.pageX,i.pageY));break;default:const e=this._getSecondPointerPosition(i),t=i.pageX-e.x,n=i.pageY-e.y;this._touchZoomDistanceEnd=Math.sqrt(t*t+n*n);const s=(i.pageX+e.x)/2,r=(i.pageY+e.y)/2;this._panEnd.copy(this._getMouseOnScreen(s,r));break}}function hoe(i){switch(this._pointers.length){case 0:this.state=qt.NONE;break;case 1:this.state=qt.TOUCH_ROTATE,this._moveCurr.copy(this._getMouseOnCircle(i.pageX,i.pageY)),this._movePrev.copy(this._moveCurr);break;case 2:this.state=qt.TOUCH_ZOOM_PAN;for(let e=0;e<this._pointers.length;e++)if(this._pointers[e].pointerId!==i.pointerId){const t=this._pointerPositions[this._pointers[e].pointerId];this._moveCurr.copy(this._getMouseOnCircle(t.x,t.y)),this._movePrev.copy(this._moveCurr);break}break}this.dispatchEvent(OM)}const dC={type:"change"},BM={type:"start"},PL={type:"end"},Rm=new wb,fC=new xo,doe=Math.cos(70*wy.DEG2RAD),Hn=new he,Vi=2*Math.PI,en={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},hx=1e-6;class foe extends x_{constructor(e,t=null){super(e,t),this.state=en.NONE,this.enabled=!0,this.target=new he,this.cursor=new he,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:ei.ROTATE,MIDDLE:ei.DOLLY,RIGHT:ei.PAN},this.touches={ONE:Ro.ROTATE,TWO:Ro.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this._lastPosition=new he,this._lastQuaternion=new fr,this._lastTargetPosition=new he,this._quat=new fr().setFromUnitVectors(e.up,new he(0,1,0)),this._quatInverse=this._quat.clone().invert(),this._spherical=new Ny,this._sphericalDelta=new Ny,this._scale=1,this._panOffset=new he,this._rotateStart=new lt,this._rotateEnd=new lt,this._rotateDelta=new lt,this._panStart=new lt,this._panEnd=new lt,this._panDelta=new lt,this._dollyStart=new lt,this._dollyEnd=new lt,this._dollyDelta=new lt,this._dollyDirection=new he,this._mouse=new lt,this._performCursorZoom=!1,this._pointers=[],this._pointerPositions={},this._controlActive=!1,this._onPointerMove=moe.bind(this),this._onPointerDown=poe.bind(this),this._onPointerUp=goe.bind(this),this._onContextMenu=Moe.bind(this),this._onMouseWheel=xoe.bind(this),this._onKeyDown=yoe.bind(this),this._onTouchStart=Soe.bind(this),this._onTouchMove=boe.bind(this),this._onMouseDown=_oe.bind(this),this._onMouseMove=voe.bind(this),this._interceptControlDown=Toe.bind(this),this._interceptControlUp=Eoe.bind(this),this.domElement!==null&&this.connect(),this.update()}connect(){this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerUp),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.getRootNode().addEventListener("keydown",this._interceptControlDown,{passive:!0,capture:!0}),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerUp),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.stopListenToKeyEvents(),this.domElement.getRootNode().removeEventListener("keydown",this._interceptControlDown,{capture:!0}),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}getPolarAngle(){return this._spherical.phi}getAzimuthalAngle(){return this._spherical.theta}getDistance(){return this.object.position.distanceTo(this.target)}listenToKeyEvents(e){e.addEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=e}stopListenToKeyEvents(){this._domElementKeyEvents!==null&&(this._domElementKeyEvents.removeEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=null)}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(dC),this.update(),this.state=en.NONE}update(e=null){const t=this.object.position;Hn.copy(t).sub(this.target),Hn.applyQuaternion(this._quat),this._spherical.setFromVector3(Hn),this.autoRotate&&this.state===en.NONE&&this._rotateLeft(this._getAutoRotationAngle(e)),this.enableDamping?(this._spherical.theta+=this._sphericalDelta.theta*this.dampingFactor,this._spherical.phi+=this._sphericalDelta.phi*this.dampingFactor):(this._spherical.theta+=this._sphericalDelta.theta,this._spherical.phi+=this._sphericalDelta.phi);let n=this.minAzimuthAngle,s=this.maxAzimuthAngle;isFinite(n)&&isFinite(s)&&(n<-Math.PI?n+=Vi:n>Math.PI&&(n-=Vi),s<-Math.PI?s+=Vi:s>Math.PI&&(s-=Vi),n<=s?this._spherical.theta=Math.max(n,Math.min(s,this._spherical.theta)):this._spherical.theta=this._spherical.theta>(n+s)/2?Math.max(n,this._spherical.theta):Math.min(s,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi)),this._spherical.makeSafe(),this.enableDamping===!0?this.target.addScaledVector(this._panOffset,this.dampingFactor):this.target.add(this._panOffset),this.target.sub(this.cursor),this.target.clampLength(this.minTargetRadius,this.maxTargetRadius),this.target.add(this.cursor);let r=!1;if(this.zoomToCursor&&this._performCursorZoom||this.object.isOrthographicCamera)this._spherical.radius=this._clampDistance(this._spherical.radius);else{const o=this._spherical.radius;this._spherical.radius=this._clampDistance(this._spherical.radius*this._scale),r=o!=this._spherical.radius}if(Hn.setFromSpherical(this._spherical),Hn.applyQuaternion(this._quatInverse),t.copy(this.target).add(Hn),this.object.lookAt(this.target),this.enableDamping===!0?(this._sphericalDelta.theta*=1-this.dampingFactor,this._sphericalDelta.phi*=1-this.dampingFactor,this._panOffset.multiplyScalar(1-this.dampingFactor)):(this._sphericalDelta.set(0,0,0),this._panOffset.set(0,0,0)),this.zoomToCursor&&this._performCursorZoom){let o=null;if(this.object.isPerspectiveCamera){const a=Hn.length();o=this._clampDistance(a*this._scale);const c=a-o;this.object.position.addScaledVector(this._dollyDirection,c),this.object.updateMatrixWorld(),r=!!c}else if(this.object.isOrthographicCamera){const a=new he(this._mouse.x,this._mouse.y,0);a.unproject(this.object);const c=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),this.object.updateProjectionMatrix(),r=c!==this.object.zoom;const l=new he(this._mouse.x,this._mouse.y,0);l.unproject(this.object),this.object.position.sub(l).add(a),this.object.updateMatrixWorld(),o=Hn.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),this.zoomToCursor=!1;o!==null&&(this.screenSpacePanning?this.target.set(0,0,-1).transformDirection(this.object.matrix).multiplyScalar(o).add(this.object.position):(Rm.origin.copy(this.object.position),Rm.direction.set(0,0,-1).transformDirection(this.object.matrix),Math.abs(this.object.up.dot(Rm.direction))<doe?this.object.lookAt(this.target):(fC.setFromNormalAndCoplanarPoint(this.object.up,this.target),Rm.intersectPlane(fC,this.target))))}else if(this.object.isOrthographicCamera){const o=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),o!==this.object.zoom&&(this.object.updateProjectionMatrix(),r=!0)}return this._scale=1,this._performCursorZoom=!1,r||this._lastPosition.distanceToSquared(this.object.position)>hx||8*(1-this._lastQuaternion.dot(this.object.quaternion))>hx||this._lastTargetPosition.distanceToSquared(this.target)>hx?(this.dispatchEvent(dC),this._lastPosition.copy(this.object.position),this._lastQuaternion.copy(this.object.quaternion),this._lastTargetPosition.copy(this.target),!0):!1}_getAutoRotationAngle(e){return e!==null?Vi/60*this.autoRotateSpeed*e:Vi/60/60*this.autoRotateSpeed}_getZoomScale(e){const t=Math.abs(e*.01);return Math.pow(.95,this.zoomSpeed*t)}_rotateLeft(e){this._sphericalDelta.theta-=e}_rotateUp(e){this._sphericalDelta.phi-=e}_panLeft(e,t){Hn.setFromMatrixColumn(t,0),Hn.multiplyScalar(-e),this._panOffset.add(Hn)}_panUp(e,t){this.screenSpacePanning===!0?Hn.setFromMatrixColumn(t,1):(Hn.setFromMatrixColumn(t,0),Hn.crossVectors(this.object.up,Hn)),Hn.multiplyScalar(e),this._panOffset.add(Hn)}_pan(e,t){const n=this.domElement;if(this.object.isPerspectiveCamera){const s=this.object.position;Hn.copy(s).sub(this.target);let r=Hn.length();r*=Math.tan(this.object.fov/2*Math.PI/180),this._panLeft(2*e*r/n.clientHeight,this.object.matrix),this._panUp(2*t*r/n.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this._panLeft(e*(this.object.right-this.object.left)/this.object.zoom/n.clientWidth,this.object.matrix),this._panUp(t*(this.object.top-this.object.bottom)/this.object.zoom/n.clientHeight,this.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),this.enablePan=!1)}_dollyOut(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale/=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_dollyIn(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale*=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_updateZoomParameters(e,t){if(!this.zoomToCursor)return;this._performCursorZoom=!0;const n=this.domElement.getBoundingClientRect(),s=e-n.left,r=t-n.top,o=n.width,a=n.height;this._mouse.x=s/o*2-1,this._mouse.y=-(r/a)*2+1,this._dollyDirection.set(this._mouse.x,this._mouse.y,1).unproject(this.object).sub(this.object.position).normalize()}_clampDistance(e){return Math.max(this.minDistance,Math.min(this.maxDistance,e))}_handleMouseDownRotate(e){this._rotateStart.set(e.clientX,e.clientY)}_handleMouseDownDolly(e){this._updateZoomParameters(e.clientX,e.clientX),this._dollyStart.set(e.clientX,e.clientY)}_handleMouseDownPan(e){this._panStart.set(e.clientX,e.clientY)}_handleMouseMoveRotate(e){this._rotateEnd.set(e.clientX,e.clientY),this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(Vi*this._rotateDelta.x/t.clientHeight),this._rotateUp(Vi*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd),this.update()}_handleMouseMoveDolly(e){this._dollyEnd.set(e.clientX,e.clientY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale(this._dollyDelta.y)):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale(this._dollyDelta.y)),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(e){this._panEnd.set(e.clientX,e.clientY),this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseWheel(e){this._updateZoomParameters(e.clientX,e.clientY),e.deltaY<0?this._dollyIn(this._getZoomScale(e.deltaY)):e.deltaY>0&&this._dollyOut(this._getZoomScale(e.deltaY)),this.update()}_handleKeyDown(e){let t=!1;switch(e.code){case this.keys.UP:e.ctrlKey||e.metaKey||e.shiftKey?this._rotateUp(Vi*this.rotateSpeed/this.domElement.clientHeight):this._pan(0,this.keyPanSpeed),t=!0;break;case this.keys.BOTTOM:e.ctrlKey||e.metaKey||e.shiftKey?this._rotateUp(-Vi*this.rotateSpeed/this.domElement.clientHeight):this._pan(0,-this.keyPanSpeed),t=!0;break;case this.keys.LEFT:e.ctrlKey||e.metaKey||e.shiftKey?this._rotateLeft(Vi*this.rotateSpeed/this.domElement.clientHeight):this._pan(this.keyPanSpeed,0),t=!0;break;case this.keys.RIGHT:e.ctrlKey||e.metaKey||e.shiftKey?this._rotateLeft(-Vi*this.rotateSpeed/this.domElement.clientHeight):this._pan(-this.keyPanSpeed,0),t=!0;break}t&&(e.preventDefault(),this.update())}_handleTouchStartRotate(e){if(this._pointers.length===1)this._rotateStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),s=.5*(e.pageY+t.y);this._rotateStart.set(n,s)}}_handleTouchStartPan(e){if(this._pointers.length===1)this._panStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),s=.5*(e.pageY+t.y);this._panStart.set(n,s)}}_handleTouchStartDolly(e){const t=this._getSecondPointerPosition(e),n=e.pageX-t.x,s=e.pageY-t.y,r=Math.sqrt(n*n+s*s);this._dollyStart.set(0,r)}_handleTouchStartDollyPan(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enablePan&&this._handleTouchStartPan(e)}_handleTouchStartDollyRotate(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enableRotate&&this._handleTouchStartRotate(e)}_handleTouchMoveRotate(e){if(this._pointers.length==1)this._rotateEnd.set(e.pageX,e.pageY);else{const n=this._getSecondPointerPosition(e),s=.5*(e.pageX+n.x),r=.5*(e.pageY+n.y);this._rotateEnd.set(s,r)}this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(Vi*this._rotateDelta.x/t.clientHeight),this._rotateUp(Vi*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd)}_handleTouchMovePan(e){if(this._pointers.length===1)this._panEnd.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),s=.5*(e.pageY+t.y);this._panEnd.set(n,s)}this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd)}_handleTouchMoveDolly(e){const t=this._getSecondPointerPosition(e),n=e.pageX-t.x,s=e.pageY-t.y,r=Math.sqrt(n*n+s*s);this._dollyEnd.set(0,r),this._dollyDelta.set(0,Math.pow(this._dollyEnd.y/this._dollyStart.y,this.zoomSpeed)),this._dollyOut(this._dollyDelta.y),this._dollyStart.copy(this._dollyEnd);const o=(e.pageX+t.x)*.5,a=(e.pageY+t.y)*.5;this._updateZoomParameters(o,a)}_handleTouchMoveDollyPan(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enablePan&&this._handleTouchMovePan(e)}_handleTouchMoveDollyRotate(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enableRotate&&this._handleTouchMoveRotate(e)}_addPointer(e){this._pointers.push(e.pointerId)}_removePointer(e){delete this._pointerPositions[e.pointerId];for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId){this._pointers.splice(t,1);return}}_isTrackingPointer(e){for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId)return!0;return!1}_trackPointer(e){let t=this._pointerPositions[e.pointerId];t===void 0&&(t=new lt,this._pointerPositions[e.pointerId]=t),t.set(e.pageX,e.pageY)}_getSecondPointerPosition(e){const t=e.pointerId===this._pointers[0]?this._pointers[1]:this._pointers[0];return this._pointerPositions[t]}_customWheelEvent(e){const t=e.deltaMode,n={clientX:e.clientX,clientY:e.clientY,deltaY:e.deltaY};switch(t){case 1:n.deltaY*=16;break;case 2:n.deltaY*=100;break}return e.ctrlKey&&!this._controlActive&&(n.deltaY*=10),n}}function poe(i){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(i.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),!this._isTrackingPointer(i)&&(this._addPointer(i),i.pointerType==="touch"?this._onTouchStart(i):this._onMouseDown(i)))}function moe(i){this.enabled!==!1&&(i.pointerType==="touch"?this._onTouchMove(i):this._onMouseMove(i))}function goe(i){switch(this._removePointer(i),this._pointers.length){case 0:this.domElement.releasePointerCapture(i.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.dispatchEvent(PL),this.state=en.NONE;break;case 1:const e=this._pointers[0],t=this._pointerPositions[e];this._onTouchStart({pointerId:e,pageX:t.x,pageY:t.y});break}}function _oe(i){let e;switch(i.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case ei.DOLLY:if(this.enableZoom===!1)return;this._handleMouseDownDolly(i),this.state=en.DOLLY;break;case ei.ROTATE:if(i.ctrlKey||i.metaKey||i.shiftKey){if(this.enablePan===!1)return;this._handleMouseDownPan(i),this.state=en.PAN}else{if(this.enableRotate===!1)return;this._handleMouseDownRotate(i),this.state=en.ROTATE}break;case ei.PAN:if(i.ctrlKey||i.metaKey||i.shiftKey){if(this.enableRotate===!1)return;this._handleMouseDownRotate(i),this.state=en.ROTATE}else{if(this.enablePan===!1)return;this._handleMouseDownPan(i),this.state=en.PAN}break;default:this.state=en.NONE}this.state!==en.NONE&&this.dispatchEvent(BM)}function voe(i){switch(this.state){case en.ROTATE:if(this.enableRotate===!1)return;this._handleMouseMoveRotate(i);break;case en.DOLLY:if(this.enableZoom===!1)return;this._handleMouseMoveDolly(i);break;case en.PAN:if(this.enablePan===!1)return;this._handleMouseMovePan(i);break}}function xoe(i){this.enabled===!1||this.enableZoom===!1||this.state!==en.NONE||(i.preventDefault(),this.dispatchEvent(BM),this._handleMouseWheel(this._customWheelEvent(i)),this.dispatchEvent(PL))}function yoe(i){this.enabled===!1||this.enablePan===!1||this._handleKeyDown(i)}function Soe(i){switch(this._trackPointer(i),this._pointers.length){case 1:switch(this.touches.ONE){case Ro.ROTATE:if(this.enableRotate===!1)return;this._handleTouchStartRotate(i),this.state=en.TOUCH_ROTATE;break;case Ro.PAN:if(this.enablePan===!1)return;this._handleTouchStartPan(i),this.state=en.TOUCH_PAN;break;default:this.state=en.NONE}break;case 2:switch(this.touches.TWO){case Ro.DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchStartDollyPan(i),this.state=en.TOUCH_DOLLY_PAN;break;case Ro.DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchStartDollyRotate(i),this.state=en.TOUCH_DOLLY_ROTATE;break;default:this.state=en.NONE}break;default:this.state=en.NONE}this.state!==en.NONE&&this.dispatchEvent(BM)}function boe(i){switch(this._trackPointer(i),this.state){case en.TOUCH_ROTATE:if(this.enableRotate===!1)return;this._handleTouchMoveRotate(i),this.update();break;case en.TOUCH_PAN:if(this.enablePan===!1)return;this._handleTouchMovePan(i),this.update();break;case en.TOUCH_DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchMoveDollyPan(i),this.update();break;case en.TOUCH_DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchMoveDollyRotate(i),this.update();break;default:this.state=en.NONE}}function Moe(i){this.enabled!==!1&&i.preventDefault()}function Toe(i){i.key==="Control"&&(this._controlActive=!0,this.domElement.getRootNode().addEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}function Eoe(i){i.key==="Control"&&(this._controlActive=!1,this.domElement.getRootNode().removeEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}const woe={type:"change"},pC=1e-6,mC=new fr;class Aoe extends x_{constructor(e,t=null){super(e,t),this.movementSpeed=1,this.rollSpeed=.005,this.dragToLook=!1,this.autoForward=!1,this._moveState={up:0,down:0,left:0,right:0,forward:0,back:0,pitchUp:0,pitchDown:0,yawLeft:0,yawRight:0,rollLeft:0,rollRight:0},this._moveVector=new he(0,0,0),this._rotationVector=new he(0,0,0),this._lastQuaternion=new fr,this._lastPosition=new he,this._status=0,this._onKeyDown=Coe.bind(this),this._onKeyUp=Roe.bind(this),this._onPointerMove=Poe.bind(this),this._onPointerDown=Noe.bind(this),this._onPointerUp=Doe.bind(this),this._onPointerCancel=Loe.bind(this),this._onContextMenu=Ioe.bind(this),t!==null&&this.connect()}connect(){window.addEventListener("keydown",this._onKeyDown),window.addEventListener("keyup",this._onKeyUp),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointerup",this._onPointerUp),this.domElement.addEventListener("pointercancel",this._onPointerCancel),this.domElement.addEventListener("contextmenu",this._onContextMenu)}disconnect(){window.removeEventListener("keydown",this._onKeyDown),window.removeEventListener("keyup",this._onKeyUp),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerCancel),this.domElement.removeEventListener("contextmenu",this._onContextMenu)}dispose(){this.disconnect()}update(e){if(this.enabled===!1)return;const t=this.object,n=e*this.movementSpeed,s=e*this.rollSpeed;t.translateX(this._moveVector.x*n),t.translateY(this._moveVector.y*n),t.translateZ(this._moveVector.z*n),mC.set(this._rotationVector.x*s,this._rotationVector.y*s,this._rotationVector.z*s,1).normalize(),t.quaternion.multiply(mC),(this._lastPosition.distanceToSquared(t.position)>pC||8*(1-this._lastQuaternion.dot(t.quaternion))>pC)&&(this.dispatchEvent(woe),this._lastQuaternion.copy(t.quaternion),this._lastPosition.copy(t.position))}_updateMovementVector(){const e=this._moveState.forward||this.autoForward&&!this._moveState.back?1:0;this._moveVector.x=-this._moveState.left+this._moveState.right,this._moveVector.y=-this._moveState.down+this._moveState.up,this._moveVector.z=-e+this._moveState.back}_updateRotationVector(){this._rotationVector.x=-this._moveState.pitchDown+this._moveState.pitchUp,this._rotationVector.y=-this._moveState.yawRight+this._moveState.yawLeft,this._rotationVector.z=-this._moveState.rollRight+this._moveState.rollLeft}_getContainerDimensions(){return this.domElement!=document?{size:[this.domElement.offsetWidth,this.domElement.offsetHeight],offset:[this.domElement.offsetLeft,this.domElement.offsetTop]}:{size:[window.innerWidth,window.innerHeight],offset:[0,0]}}}function Coe(i){if(!(i.altKey||this.enabled===!1)){switch(i.code){case"ShiftLeft":case"ShiftRight":this.movementSpeedMultiplier=.1;break;case"KeyW":this._moveState.forward=1;break;case"KeyS":this._moveState.back=1;break;case"KeyA":this._moveState.left=1;break;case"KeyD":this._moveState.right=1;break;case"KeyR":this._moveState.up=1;break;case"KeyF":this._moveState.down=1;break;case"ArrowUp":this._moveState.pitchUp=1;break;case"ArrowDown":this._moveState.pitchDown=1;break;case"ArrowLeft":this._moveState.yawLeft=1;break;case"ArrowRight":this._moveState.yawRight=1;break;case"KeyQ":this._moveState.rollLeft=1;break;case"KeyE":this._moveState.rollRight=1;break}this._updateMovementVector(),this._updateRotationVector()}}function Roe(i){if(this.enabled!==!1){switch(i.code){case"ShiftLeft":case"ShiftRight":this.movementSpeedMultiplier=1;break;case"KeyW":this._moveState.forward=0;break;case"KeyS":this._moveState.back=0;break;case"KeyA":this._moveState.left=0;break;case"KeyD":this._moveState.right=0;break;case"KeyR":this._moveState.up=0;break;case"KeyF":this._moveState.down=0;break;case"ArrowUp":this._moveState.pitchUp=0;break;case"ArrowDown":this._moveState.pitchDown=0;break;case"ArrowLeft":this._moveState.yawLeft=0;break;case"ArrowRight":this._moveState.yawRight=0;break;case"KeyQ":this._moveState.rollLeft=0;break;case"KeyE":this._moveState.rollRight=0;break}this._updateMovementVector(),this._updateRotationVector()}}function Noe(i){if(this.enabled!==!1)if(this.dragToLook)this._status++;else{switch(i.button){case 0:this._moveState.forward=1;break;case 2:this._moveState.back=1;break}this._updateMovementVector()}}function Poe(i){if(this.enabled!==!1&&(!this.dragToLook||this._status>0)){const e=this._getContainerDimensions(),t=e.size[0]/2,n=e.size[1]/2;this._moveState.yawLeft=-(i.pageX-e.offset[0]-t)/t,this._moveState.pitchDown=(i.pageY-e.offset[1]-n)/n,this._updateRotationVector()}}function Doe(i){if(this.enabled!==!1){if(this.dragToLook)this._status--,this._moveState.yawLeft=this._moveState.pitchDown=0;else{switch(i.button){case 0:this._moveState.forward=0;break;case 2:this._moveState.back=0;break}this._updateMovementVector()}this._updateRotationVector()}}function Loe(){this.enabled!==!1&&(this.dragToLook?(this._status=0,this._moveState.yawLeft=this._moveState.pitchDown=0):(this._moveState.forward=0,this._moveState.back=0,this._updateMovementVector()),this._updateRotationVector())}function Ioe(i){this.enabled!==!1&&i.preventDefault()}const Foe={name:"CopyShader",uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform float opacity;

		uniform sampler2D tDiffuse;

		varying vec2 vUv;

		void main() {

			vec4 texel = texture2D( tDiffuse, vUv );
			gl_FragColor = opacity * texel;


		}`};class B_{constructor(){this.isPass=!0,this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}dispose(){}}const Uoe=new Pb(-1,1,1,-1,0,1);class Ooe extends dl{constructor(){super(),this.setAttribute("position",new Ds([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new Ds([0,2,0,0,2,0],2))}}const Boe=new Ooe;class koe{constructor(e){this._mesh=new rr(Boe,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,Uoe)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}}class zoe extends B_{constructor(e,t){super(),this.textureID=t!==void 0?t:"tDiffuse",e instanceof Ur?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=ZN.clone(e.uniforms),this.material=new Ur({name:e.name!==void 0?e.name:"unspecified",defines:Object.assign({},e.defines),uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this.fsQuad=new koe(this.material)}render(e,t,n){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=n.texture),this.fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this.fsQuad.render(e))}dispose(){this.material.dispose(),this.fsQuad.dispose()}}class gC extends B_{constructor(e,t){super(),this.scene=e,this.camera=t,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(e,t,n){const s=e.getContext(),r=e.state;r.buffers.color.setMask(!1),r.buffers.depth.setMask(!1),r.buffers.color.setLocked(!0),r.buffers.depth.setLocked(!0);let o,a;this.inverse?(o=0,a=1):(o=1,a=0),r.buffers.stencil.setTest(!0),r.buffers.stencil.setOp(s.REPLACE,s.REPLACE,s.REPLACE),r.buffers.stencil.setFunc(s.ALWAYS,o,4294967295),r.buffers.stencil.setClear(a),r.buffers.stencil.setLocked(!0),e.setRenderTarget(n),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),r.buffers.color.setLocked(!1),r.buffers.depth.setLocked(!1),r.buffers.color.setMask(!0),r.buffers.depth.setMask(!0),r.buffers.stencil.setLocked(!1),r.buffers.stencil.setFunc(s.EQUAL,1,4294967295),r.buffers.stencil.setOp(s.KEEP,s.KEEP,s.KEEP),r.buffers.stencil.setLocked(!0)}}class Goe extends B_{constructor(){super(),this.needsSwap=!1}render(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}}class Voe{constructor(e,t){if(this.renderer=e,this._pixelRatio=e.getPixelRatio(),t===void 0){const n=e.getSize(new lt);this._width=n.width,this._height=n.height,t=new Wa(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:Ah}),t.texture.name="EffectComposer.rt1"}else this._width=t.width,this._height=t.height;this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],this.copyPass=new zoe(Foe),this.copyPass.material.blending=Fo,this.clock=new aP}swapBuffers(){const e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}addPass(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(e){const t=this.passes.indexOf(e);t!==-1&&this.passes.splice(t,1)}isLastEnabledPass(e){for(let t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0}render(e){e===void 0&&(e=this.clock.getDelta());const t=this.renderer.getRenderTarget();let n=!1;for(let s=0,r=this.passes.length;s<r;s++){const o=this.passes[s];if(o.enabled!==!1){if(o.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(s),o.render(this.renderer,this.writeBuffer,this.readBuffer,e,n),o.needsSwap){if(n){const a=this.renderer.getContext(),c=this.renderer.state.buffers.stencil;c.setFunc(a.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),c.setFunc(a.EQUAL,1,4294967295)}this.swapBuffers()}gC!==void 0&&(o instanceof gC?n=!0:o instanceof Goe&&(n=!1))}}this.renderer.setRenderTarget(t)}reset(e){if(e===void 0){const t=this.renderer.getSize(new lt);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,e=this.renderTarget1.clone(),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(e,t){this._width=e,this._height=t;const n=this._width*this._pixelRatio,s=this._height*this._pixelRatio;this.renderTarget1.setSize(n,s),this.renderTarget2.setSize(n,s);for(let r=0;r<this.passes.length;r++)this.passes[r].setSize(n,s)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.copyPass.dispose()}}class Hoe extends B_{constructor(e,t,n=null,s=null,r=null){super(),this.scene=e,this.camera=t,this.overrideMaterial=n,this.clearColor=s,this.clearAlpha=r,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new Xt}render(e,t,n){const s=e.autoClear;e.autoClear=!1;let r,o;this.overrideMaterial!==null&&(o=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor!==null&&(e.getClearColor(this._oldClearColor),e.setClearColor(this.clearColor,e.getClearAlpha())),this.clearAlpha!==null&&(r=e.getClearAlpha(),e.setClearAlpha(this.clearAlpha)),this.clearDepth==!0&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:n),this.clear===!0&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor!==null&&e.setClearColor(this._oldClearColor),this.clearAlpha!==null&&e.setClearAlpha(r),this.overrideMaterial!==null&&(this.scene.overrideMaterial=o),e.autoClear=s}}function Qi(){return Qi=Object.assign?Object.assign.bind():function(i){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(i[n]=t[n])}return i},Qi.apply(this,arguments)}function Woe(i){if(i===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return i}function yf(i,e){return yf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,s){return n.__proto__=s,n},yf(i,e)}function $oe(i,e){i.prototype=Object.create(e.prototype),i.prototype.constructor=i,yf(i,e)}function wS(i){return wS=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},wS(i)}function qoe(i){return Function.toString.call(i).indexOf("[native code]")!==-1}function Xoe(){if(typeof Reflect>"u"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch{return!1}}function tg(i,e,t){return Xoe()?tg=Reflect.construct.bind():tg=function(s,r,o){var a=[null];a.push.apply(a,r);var c=Function.bind.apply(s,a),l=new c;return o&&yf(l,o.prototype),l},tg.apply(null,arguments)}function AS(i){var e=typeof Map=="function"?new Map:void 0;return AS=function(n){if(n===null||!qoe(n))return n;if(typeof n!="function")throw new TypeError("Super expression must either be null or a function");if(typeof e<"u"){if(e.has(n))return e.get(n);e.set(n,s)}function s(){return tg(n,arguments,wS(this).constructor)}return s.prototype=Object.create(n.prototype,{constructor:{value:s,enumerable:!1,writable:!0,configurable:!0}}),yf(s,n)},AS(i)}var Pr=function(i){$oe(e,i);function e(t){var n;return n=i.call(this,"An error occurred. See https://github.com/styled-components/polished/blob/main/src/internalHelpers/errors.md#"+t+" for more information.")||this,Woe(n)}return e}(AS(Error));function dx(i){return Math.round(i*255)}function joe(i,e,t){return dx(i)+","+dx(e)+","+dx(t)}function Sf(i,e,t,n){if(n===void 0&&(n=joe),e===0)return n(t,t,t);var s=(i%360+360)%360/60,r=(1-Math.abs(2*t-1))*e,o=r*(1-Math.abs(s%2-1)),a=0,c=0,l=0;s>=0&&s<1?(a=r,c=o):s>=1&&s<2?(a=o,c=r):s>=2&&s<3?(c=r,l=o):s>=3&&s<4?(c=o,l=r):s>=4&&s<5?(a=o,l=r):s>=5&&s<6&&(a=r,l=o);var u=t-r/2,h=a+u,d=c+u,f=l+u;return n(h,d,f)}var _C={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"00ffff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"0000ff",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"00ffff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"ff00ff",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",rebeccapurple:"639",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"};function Yoe(i){if(typeof i!="string")return i;var e=i.toLowerCase();return _C[e]?"#"+_C[e]:i}var Zoe=/^#[a-fA-F0-9]{6}$/,Koe=/^#[a-fA-F0-9]{8}$/,Qoe=/^#[a-fA-F0-9]{3}$/,Joe=/^#[a-fA-F0-9]{4}$/,fx=/^rgb\(\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*\)$/i,eae=/^rgb(?:a)?\(\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*(?:,|\/)\s*([-+]?\d*[.]?\d+[%]?)\s*\)$/i,tae=/^hsl\(\s*(\d{0,3}[.]?[0-9]+(?:deg)?)\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*\)$/i,nae=/^hsl(?:a)?\(\s*(\d{0,3}[.]?[0-9]+(?:deg)?)\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*(?:,|\/)\s*([-+]?\d*[.]?\d+[%]?)\s*\)$/i;function cl(i){if(typeof i!="string")throw new Pr(3);var e=Yoe(i);if(e.match(Zoe))return{red:parseInt(""+e[1]+e[2],16),green:parseInt(""+e[3]+e[4],16),blue:parseInt(""+e[5]+e[6],16)};if(e.match(Koe)){var t=parseFloat((parseInt(""+e[7]+e[8],16)/255).toFixed(2));return{red:parseInt(""+e[1]+e[2],16),green:parseInt(""+e[3]+e[4],16),blue:parseInt(""+e[5]+e[6],16),alpha:t}}if(e.match(Qoe))return{red:parseInt(""+e[1]+e[1],16),green:parseInt(""+e[2]+e[2],16),blue:parseInt(""+e[3]+e[3],16)};if(e.match(Joe)){var n=parseFloat((parseInt(""+e[4]+e[4],16)/255).toFixed(2));return{red:parseInt(""+e[1]+e[1],16),green:parseInt(""+e[2]+e[2],16),blue:parseInt(""+e[3]+e[3],16),alpha:n}}var s=fx.exec(e);if(s)return{red:parseInt(""+s[1],10),green:parseInt(""+s[2],10),blue:parseInt(""+s[3],10)};var r=eae.exec(e.substring(0,50));if(r)return{red:parseInt(""+r[1],10),green:parseInt(""+r[2],10),blue:parseInt(""+r[3],10),alpha:parseFloat(""+r[4])>1?parseFloat(""+r[4])/100:parseFloat(""+r[4])};var o=tae.exec(e);if(o){var a=parseInt(""+o[1],10),c=parseInt(""+o[2],10)/100,l=parseInt(""+o[3],10)/100,u="rgb("+Sf(a,c,l)+")",h=fx.exec(u);if(!h)throw new Pr(4,e,u);return{red:parseInt(""+h[1],10),green:parseInt(""+h[2],10),blue:parseInt(""+h[3],10)}}var d=nae.exec(e.substring(0,50));if(d){var f=parseInt(""+d[1],10),m=parseInt(""+d[2],10)/100,_=parseInt(""+d[3],10)/100,g="rgb("+Sf(f,m,_)+")",p=fx.exec(g);if(!p)throw new Pr(4,e,g);return{red:parseInt(""+p[1],10),green:parseInt(""+p[2],10),blue:parseInt(""+p[3],10),alpha:parseFloat(""+d[4])>1?parseFloat(""+d[4])/100:parseFloat(""+d[4])}}throw new Pr(5)}function iae(i){var e=i.red/255,t=i.green/255,n=i.blue/255,s=Math.max(e,t,n),r=Math.min(e,t,n),o=(s+r)/2;if(s===r)return i.alpha!==void 0?{hue:0,saturation:0,lightness:o,alpha:i.alpha}:{hue:0,saturation:0,lightness:o};var a,c=s-r,l=o>.5?c/(2-s-r):c/(s+r);switch(s){case e:a=(t-n)/c+(t<n?6:0);break;case t:a=(n-e)/c+2;break;default:a=(e-t)/c+4;break}return a*=60,i.alpha!==void 0?{hue:a,saturation:l,lightness:o,alpha:i.alpha}:{hue:a,saturation:l,lightness:o}}function ec(i){return iae(cl(i))}var sae=function(e){return e.length===7&&e[1]===e[2]&&e[3]===e[4]&&e[5]===e[6]?"#"+e[1]+e[3]+e[5]:e},CS=sae;function Tc(i){var e=i.toString(16);return e.length===1?"0"+e:e}function px(i){return Tc(Math.round(i*255))}function rae(i,e,t){return CS("#"+px(i)+px(e)+px(t))}function Zg(i,e,t){return Sf(i,e,t,rae)}function oae(i,e,t){if(typeof i=="number"&&typeof e=="number"&&typeof t=="number")return Zg(i,e,t);if(typeof i=="object"&&e===void 0&&t===void 0)return Zg(i.hue,i.saturation,i.lightness);throw new Pr(1)}function aae(i,e,t,n){if(typeof i=="number"&&typeof e=="number"&&typeof t=="number"&&typeof n=="number")return n>=1?Zg(i,e,t):"rgba("+Sf(i,e,t)+","+n+")";if(typeof i=="object"&&e===void 0&&t===void 0&&n===void 0)return i.alpha>=1?Zg(i.hue,i.saturation,i.lightness):"rgba("+Sf(i.hue,i.saturation,i.lightness)+","+i.alpha+")";throw new Pr(2)}function RS(i,e,t){if(typeof i=="number"&&typeof e=="number"&&typeof t=="number")return CS("#"+Tc(i)+Tc(e)+Tc(t));if(typeof i=="object"&&e===void 0&&t===void 0)return CS("#"+Tc(i.red)+Tc(i.green)+Tc(i.blue));throw new Pr(6)}function k_(i,e,t,n){if(typeof i=="string"&&typeof e=="number"){var s=cl(i);return"rgba("+s.red+","+s.green+","+s.blue+","+e+")"}else{if(typeof i=="number"&&typeof e=="number"&&typeof t=="number"&&typeof n=="number")return n>=1?RS(i,e,t):"rgba("+i+","+e+","+t+","+n+")";if(typeof i=="object"&&e===void 0&&t===void 0&&n===void 0)return i.alpha>=1?RS(i.red,i.green,i.blue):"rgba("+i.red+","+i.green+","+i.blue+","+i.alpha+")"}throw new Pr(7)}var cae=function(e){return typeof e.red=="number"&&typeof e.green=="number"&&typeof e.blue=="number"&&(typeof e.alpha!="number"||typeof e.alpha>"u")},lae=function(e){return typeof e.red=="number"&&typeof e.green=="number"&&typeof e.blue=="number"&&typeof e.alpha=="number"},uae=function(e){return typeof e.hue=="number"&&typeof e.saturation=="number"&&typeof e.lightness=="number"&&(typeof e.alpha!="number"||typeof e.alpha>"u")},hae=function(e){return typeof e.hue=="number"&&typeof e.saturation=="number"&&typeof e.lightness=="number"&&typeof e.alpha=="number"};function tc(i){if(typeof i!="object")throw new Pr(8);if(lae(i))return k_(i);if(cae(i))return RS(i);if(hae(i))return aae(i);if(uae(i))return oae(i);throw new Pr(8)}function DL(i,e,t){return function(){var s=t.concat(Array.prototype.slice.call(arguments));return s.length>=e?i.apply(this,s):DL(i,e,s)}}function ys(i){return DL(i,i.length,[])}function dae(i,e){if(e==="transparent")return e;var t=ec(e);return tc(Qi({},t,{hue:t.hue+parseFloat(i)}))}ys(dae);function kh(i,e,t){return Math.max(i,Math.min(e,t))}function fae(i,e){if(e==="transparent")return e;var t=ec(e);return tc(Qi({},t,{lightness:kh(0,1,t.lightness-parseFloat(i))}))}ys(fae);function pae(i,e){if(e==="transparent")return e;var t=ec(e);return tc(Qi({},t,{saturation:kh(0,1,t.saturation-parseFloat(i))}))}ys(pae);function mae(i,e){if(e==="transparent")return e;var t=ec(e);return tc(Qi({},t,{lightness:kh(0,1,t.lightness+parseFloat(i))}))}ys(mae);function gae(i,e,t){if(e==="transparent")return t;if(t==="transparent")return e;if(i===0)return t;var n=cl(e),s=Qi({},n,{alpha:typeof n.alpha=="number"?n.alpha:1}),r=cl(t),o=Qi({},r,{alpha:typeof r.alpha=="number"?r.alpha:1}),a=s.alpha-o.alpha,c=parseFloat(i)*2-1,l=c*a===-1?c:c+a,u=1+c*a,h=(l/u+1)/2,d=1-h,f={red:Math.floor(s.red*h+o.red*d),green:Math.floor(s.green*h+o.green*d),blue:Math.floor(s.blue*h+o.blue*d),alpha:s.alpha*parseFloat(i)+o.alpha*(1-parseFloat(i))};return k_(f)}var _ae=ys(gae),LL=_ae;function vae(i,e){if(e==="transparent")return e;var t=cl(e),n=typeof t.alpha=="number"?t.alpha:1,s=Qi({},t,{alpha:kh(0,1,(n*100+parseFloat(i)*100)/100)});return k_(s)}var xae=ys(vae),yae=xae;function Sae(i,e){if(e==="transparent")return e;var t=ec(e);return tc(Qi({},t,{saturation:kh(0,1,t.saturation+parseFloat(i))}))}ys(Sae);function bae(i,e){return e==="transparent"?e:tc(Qi({},ec(e),{hue:parseFloat(i)}))}ys(bae);function Mae(i,e){return e==="transparent"?e:tc(Qi({},ec(e),{lightness:parseFloat(i)}))}ys(Mae);function Tae(i,e){return e==="transparent"?e:tc(Qi({},ec(e),{saturation:parseFloat(i)}))}ys(Tae);function Eae(i,e){return e==="transparent"?e:LL(parseFloat(i),"rgb(0, 0, 0)",e)}ys(Eae);function wae(i,e){return e==="transparent"?e:LL(parseFloat(i),"rgb(255, 255, 255)",e)}ys(wae);function Aae(i,e){if(e==="transparent")return e;var t=cl(e),n=typeof t.alpha=="number"?t.alpha:1,s=Qi({},t,{alpha:kh(0,1,+(n*100-parseFloat(i)*100).toFixed(2)/100)});return k_(s)}ys(Aae);var Wc=Object.freeze({Linear:Object.freeze({None:function(i){return i},In:function(i){return i},Out:function(i){return i},InOut:function(i){return i}}),Quadratic:Object.freeze({In:function(i){return i*i},Out:function(i){return i*(2-i)},InOut:function(i){return(i*=2)<1?.5*i*i:-.5*(--i*(i-2)-1)}}),Cubic:Object.freeze({In:function(i){return i*i*i},Out:function(i){return--i*i*i+1},InOut:function(i){return(i*=2)<1?.5*i*i*i:.5*((i-=2)*i*i+2)}}),Quartic:Object.freeze({In:function(i){return i*i*i*i},Out:function(i){return 1- --i*i*i*i},InOut:function(i){return(i*=2)<1?.5*i*i*i*i:-.5*((i-=2)*i*i*i-2)}}),Quintic:Object.freeze({In:function(i){return i*i*i*i*i},Out:function(i){return--i*i*i*i*i+1},InOut:function(i){return(i*=2)<1?.5*i*i*i*i*i:.5*((i-=2)*i*i*i*i+2)}}),Sinusoidal:Object.freeze({In:function(i){return 1-Math.sin((1-i)*Math.PI/2)},Out:function(i){return Math.sin(i*Math.PI/2)},InOut:function(i){return .5*(1-Math.sin(Math.PI*(.5-i)))}}),Exponential:Object.freeze({In:function(i){return i===0?0:Math.pow(1024,i-1)},Out:function(i){return i===1?1:1-Math.pow(2,-10*i)},InOut:function(i){return i===0?0:i===1?1:(i*=2)<1?.5*Math.pow(1024,i-1):.5*(-Math.pow(2,-10*(i-1))+2)}}),Circular:Object.freeze({In:function(i){return 1-Math.sqrt(1-i*i)},Out:function(i){return Math.sqrt(1- --i*i)},InOut:function(i){return(i*=2)<1?-.5*(Math.sqrt(1-i*i)-1):.5*(Math.sqrt(1-(i-=2)*i)+1)}}),Elastic:Object.freeze({In:function(i){return i===0?0:i===1?1:-Math.pow(2,10*(i-1))*Math.sin((i-1.1)*5*Math.PI)},Out:function(i){return i===0?0:i===1?1:Math.pow(2,-10*i)*Math.sin((i-.1)*5*Math.PI)+1},InOut:function(i){return i===0?0:i===1?1:(i*=2,i<1?-.5*Math.pow(2,10*(i-1))*Math.sin((i-1.1)*5*Math.PI):.5*Math.pow(2,-10*(i-1))*Math.sin((i-1.1)*5*Math.PI)+1)}}),Back:Object.freeze({In:function(i){var e=1.70158;return i===1?1:i*i*((e+1)*i-e)},Out:function(i){var e=1.70158;return i===0?0:--i*i*((e+1)*i+e)+1},InOut:function(i){var e=2.5949095;return(i*=2)<1?.5*(i*i*((e+1)*i-e)):.5*((i-=2)*i*((e+1)*i+e)+2)}}),Bounce:Object.freeze({In:function(i){return 1-Wc.Bounce.Out(1-i)},Out:function(i){return i<1/2.75?7.5625*i*i:i<2/2.75?7.5625*(i-=1.5/2.75)*i+.75:i<2.5/2.75?7.5625*(i-=2.25/2.75)*i+.9375:7.5625*(i-=2.625/2.75)*i+.984375},InOut:function(i){return i<.5?Wc.Bounce.In(i*2)*.5:Wc.Bounce.Out(i*2-1)*.5+.5}}),generatePow:function(i){return i===void 0&&(i=4),i=i<Number.EPSILON?Number.EPSILON:i,i=i>1e4?1e4:i,{In:function(e){return Math.pow(e,i)},Out:function(e){return 1-Math.pow(1-e,i)},InOut:function(e){return e<.5?Math.pow(e*2,i)/2:(1-Math.pow(2-e*2,i))/2+.5}}}}),Ad=function(){return performance.now()},IL=function(){function i(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];this._tweens={},this._tweensAddedDuringUpdate={},this.add.apply(this,e)}return i.prototype.getAll=function(){var e=this;return Object.keys(this._tweens).map(function(t){return e._tweens[t]})},i.prototype.removeAll=function(){this._tweens={}},i.prototype.add=function(){for(var e,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];for(var s=0,r=t;s<r.length;s++){var o=r[s];(e=o._group)===null||e===void 0||e.remove(o),o._group=this,this._tweens[o.getId()]=o,this._tweensAddedDuringUpdate[o.getId()]=o}},i.prototype.remove=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];for(var n=0,s=e;n<s.length;n++){var r=s[n];r._group=void 0,delete this._tweens[r.getId()],delete this._tweensAddedDuringUpdate[r.getId()]}},i.prototype.allStopped=function(){return this.getAll().every(function(e){return!e.isPlaying()})},i.prototype.update=function(e,t){e===void 0&&(e=Ad()),t===void 0&&(t=!0);var n=Object.keys(this._tweens);if(n.length!==0)for(;n.length>0;){this._tweensAddedDuringUpdate={};for(var s=0;s<n.length;s++){var r=this._tweens[n[s]],o=!t;r&&r.update(e,o)===!1&&!t&&this.remove(r)}n=Object.keys(this._tweensAddedDuringUpdate)}},i}(),Au={Linear:function(i,e){var t=i.length-1,n=t*e,s=Math.floor(n),r=Au.Utils.Linear;return e<0?r(i[0],i[1],n):e>1?r(i[t],i[t-1],t-n):r(i[s],i[s+1>t?t:s+1],n-s)},Bezier:function(i,e){for(var t=0,n=i.length-1,s=Math.pow,r=Au.Utils.Bernstein,o=0;o<=n;o++)t+=s(1-e,n-o)*s(e,o)*i[o]*r(n,o);return t},CatmullRom:function(i,e){var t=i.length-1,n=t*e,s=Math.floor(n),r=Au.Utils.CatmullRom;return i[0]===i[t]?(e<0&&(s=Math.floor(n=t*(1+e))),r(i[(s-1+t)%t],i[s],i[(s+1)%t],i[(s+2)%t],n-s)):e<0?i[0]-(r(i[0],i[0],i[1],i[1],-n)-i[0]):e>1?i[t]-(r(i[t],i[t],i[t-1],i[t-1],n-t)-i[t]):r(i[s?s-1:0],i[s],i[t<s+1?t:s+1],i[t<s+2?t:s+2],n-s)},Utils:{Linear:function(i,e,t){return(e-i)*t+i},Bernstein:function(i,e){var t=Au.Utils.Factorial;return t(i)/t(e)/t(i-e)},Factorial:function(){var i=[1];return function(e){var t=1;if(i[e])return i[e];for(var n=e;n>1;n--)t*=n;return i[e]=t,t}}(),CatmullRom:function(i,e,t,n,s){var r=(t-i)*.5,o=(n-e)*.5,a=s*s,c=s*a;return(2*e-2*t+r+o)*c+(-3*e+3*t-2*r-o)*a+r*s+e}}},Cae=function(){function i(){}return i.nextId=function(){return i._nextId++},i._nextId=0,i}(),NS=new IL,vC=function(){function i(e,t){this._isPaused=!1,this._pauseStart=0,this._valuesStart={},this._valuesEnd={},this._valuesStartRepeat={},this._duration=1e3,this._isDynamic=!1,this._initialRepeat=0,this._repeat=0,this._yoyo=!1,this._isPlaying=!1,this._reversed=!1,this._delayTime=0,this._startTime=0,this._easingFunction=Wc.Linear.None,this._interpolationFunction=Au.Linear,this._chainedTweens=[],this._onStartCallbackFired=!1,this._onEveryStartCallbackFired=!1,this._id=Cae.nextId(),this._isChainStopped=!1,this._propertiesAreSetUp=!1,this._goToEnd=!1,this._object=e,typeof t=="object"?(this._group=t,t.add(this)):t===!0&&(this._group=NS,NS.add(this))}return i.prototype.getId=function(){return this._id},i.prototype.isPlaying=function(){return this._isPlaying},i.prototype.isPaused=function(){return this._isPaused},i.prototype.getDuration=function(){return this._duration},i.prototype.to=function(e,t){if(t===void 0&&(t=1e3),this._isPlaying)throw new Error("Can not call Tween.to() while Tween is already started or paused. Stop the Tween first.");return this._valuesEnd=e,this._propertiesAreSetUp=!1,this._duration=t<0?0:t,this},i.prototype.duration=function(e){return e===void 0&&(e=1e3),this._duration=e<0?0:e,this},i.prototype.dynamic=function(e){return e===void 0&&(e=!1),this._isDynamic=e,this},i.prototype.start=function(e,t){if(e===void 0&&(e=Ad()),t===void 0&&(t=!1),this._isPlaying)return this;if(this._repeat=this._initialRepeat,this._reversed){this._reversed=!1;for(var n in this._valuesStartRepeat)this._swapEndStartRepeatValues(n),this._valuesStart[n]=this._valuesStartRepeat[n]}if(this._isPlaying=!0,this._isPaused=!1,this._onStartCallbackFired=!1,this._onEveryStartCallbackFired=!1,this._isChainStopped=!1,this._startTime=e,this._startTime+=this._delayTime,!this._propertiesAreSetUp||t){if(this._propertiesAreSetUp=!0,!this._isDynamic){var s={};for(var r in this._valuesEnd)s[r]=this._valuesEnd[r];this._valuesEnd=s}this._setupProperties(this._object,this._valuesStart,this._valuesEnd,this._valuesStartRepeat,t)}return this},i.prototype.startFromCurrentValues=function(e){return this.start(e,!0)},i.prototype._setupProperties=function(e,t,n,s,r){for(var o in n){var a=e[o],c=Array.isArray(a),l=c?"array":typeof a,u=!c&&Array.isArray(n[o]);if(!(l==="undefined"||l==="function")){if(u){var h=n[o];if(h.length===0)continue;for(var d=[a],f=0,m=h.length;f<m;f+=1){var _=this._handleRelativeValue(a,h[f]);if(isNaN(_)){u=!1,console.warn("Found invalid interpolation list. Skipping.");break}d.push(_)}u&&(n[o]=d)}if((l==="object"||c)&&a&&!u){t[o]=c?[]:{};var g=a;for(var p in g)t[o][p]=g[p];s[o]=c?[]:{};var h=n[o];if(!this._isDynamic){var y={};for(var p in h)y[p]=h[p];n[o]=h=y}this._setupProperties(g,t[o],h,s[o],r)}else(typeof t[o]>"u"||r)&&(t[o]=a),c||(t[o]*=1),u?s[o]=n[o].slice().reverse():s[o]=t[o]||0}}},i.prototype.stop=function(){return this._isChainStopped||(this._isChainStopped=!0,this.stopChainedTweens()),this._isPlaying?(this._isPlaying=!1,this._isPaused=!1,this._onStopCallback&&this._onStopCallback(this._object),this):this},i.prototype.end=function(){return this._goToEnd=!0,this.update(this._startTime+this._duration),this},i.prototype.pause=function(e){return e===void 0&&(e=Ad()),this._isPaused||!this._isPlaying?this:(this._isPaused=!0,this._pauseStart=e,this)},i.prototype.resume=function(e){return e===void 0&&(e=Ad()),!this._isPaused||!this._isPlaying?this:(this._isPaused=!1,this._startTime+=e-this._pauseStart,this._pauseStart=0,this)},i.prototype.stopChainedTweens=function(){for(var e=0,t=this._chainedTweens.length;e<t;e++)this._chainedTweens[e].stop();return this},i.prototype.group=function(e){return e?(e.add(this),this):(console.warn("tween.group() without args has been removed, use group.add(tween) instead."),this)},i.prototype.remove=function(){var e;return(e=this._group)===null||e===void 0||e.remove(this),this},i.prototype.delay=function(e){return e===void 0&&(e=0),this._delayTime=e,this},i.prototype.repeat=function(e){return e===void 0&&(e=0),this._initialRepeat=e,this._repeat=e,this},i.prototype.repeatDelay=function(e){return this._repeatDelayTime=e,this},i.prototype.yoyo=function(e){return e===void 0&&(e=!1),this._yoyo=e,this},i.prototype.easing=function(e){return e===void 0&&(e=Wc.Linear.None),this._easingFunction=e,this},i.prototype.interpolation=function(e){return e===void 0&&(e=Au.Linear),this._interpolationFunction=e,this},i.prototype.chain=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return this._chainedTweens=e,this},i.prototype.onStart=function(e){return this._onStartCallback=e,this},i.prototype.onEveryStart=function(e){return this._onEveryStartCallback=e,this},i.prototype.onUpdate=function(e){return this._onUpdateCallback=e,this},i.prototype.onRepeat=function(e){return this._onRepeatCallback=e,this},i.prototype.onComplete=function(e){return this._onCompleteCallback=e,this},i.prototype.onStop=function(e){return this._onStopCallback=e,this},i.prototype.update=function(e,t){var n=this,s;if(e===void 0&&(e=Ad()),t===void 0&&(t=i.autoStartOnUpdate),this._isPaused)return!0;var r;if(!this._goToEnd&&!this._isPlaying)if(t)this.start(e,!0);else return!1;if(this._goToEnd=!1,e<this._startTime)return!0;this._onStartCallbackFired===!1&&(this._onStartCallback&&this._onStartCallback(this._object),this._onStartCallbackFired=!0),this._onEveryStartCallbackFired===!1&&(this._onEveryStartCallback&&this._onEveryStartCallback(this._object),this._onEveryStartCallbackFired=!0);var o=e-this._startTime,a=this._duration+((s=this._repeatDelayTime)!==null&&s!==void 0?s:this._delayTime),c=this._duration+this._repeat*a,l=function(){if(n._duration===0||o>c)return 1;var _=Math.trunc(o/a),g=o-_*a,p=Math.min(g/n._duration,1);return p===0&&o===n._duration?1:p},u=l(),h=this._easingFunction(u);if(this._updateProperties(this._object,this._valuesStart,this._valuesEnd,h),this._onUpdateCallback&&this._onUpdateCallback(this._object,u),this._duration===0||o>=this._duration)if(this._repeat>0){var d=Math.min(Math.trunc((o-this._duration)/a)+1,this._repeat);isFinite(this._repeat)&&(this._repeat-=d);for(r in this._valuesStartRepeat)!this._yoyo&&typeof this._valuesEnd[r]=="string"&&(this._valuesStartRepeat[r]=this._valuesStartRepeat[r]+parseFloat(this._valuesEnd[r])),this._yoyo&&this._swapEndStartRepeatValues(r),this._valuesStart[r]=this._valuesStartRepeat[r];return this._yoyo&&(this._reversed=!this._reversed),this._startTime+=a*d,this._onRepeatCallback&&this._onRepeatCallback(this._object),this._onEveryStartCallbackFired=!1,!0}else{this._onCompleteCallback&&this._onCompleteCallback(this._object);for(var f=0,m=this._chainedTweens.length;f<m;f++)this._chainedTweens[f].start(this._startTime+this._duration,!1);return this._isPlaying=!1,!1}return!0},i.prototype._updateProperties=function(e,t,n,s){for(var r in n)if(t[r]!==void 0){var o=t[r]||0,a=n[r],c=Array.isArray(e[r]),l=Array.isArray(a),u=!c&&l;u?e[r]=this._interpolationFunction(a,s):typeof a=="object"&&a?this._updateProperties(e[r],o,a,s):(a=this._handleRelativeValue(o,a),typeof a=="number"&&(e[r]=o+(a-o)*s))}},i.prototype._handleRelativeValue=function(e,t){return typeof t!="string"?t:t.charAt(0)==="+"||t.charAt(0)==="-"?e+parseFloat(t):parseFloat(t)},i.prototype._swapEndStartRepeatValues=function(e){var t=this._valuesStartRepeat[e],n=this._valuesEnd[e];typeof n=="string"?this._valuesStartRepeat[e]=this._valuesStartRepeat[e]+parseFloat(n):this._valuesStartRepeat[e]=this._valuesEnd[e],this._valuesEnd[e]=t},i.autoStartOnUpdate=!1,i}(),zr=NS;zr.getAll.bind(zr);zr.removeAll.bind(zr);zr.add.bind(zr);zr.remove.bind(zr);zr.update.bind(zr);function Rae(i,e){e===void 0&&(e={});var t=e.insertAt;if(!(typeof document>"u")){var n=document.head||document.getElementsByTagName("head")[0],s=document.createElement("style");s.type="text/css",t==="top"&&n.firstChild?n.insertBefore(s,n.firstChild):n.appendChild(s),s.styleSheet?s.styleSheet.cssText=i:s.appendChild(document.createTextNode(i))}}var Nae=`.scene-nav-info {
  bottom: 5px;
  width: 100%;
  text-align: center;
  color: slategrey;
  opacity: 0.7;
  font-size: 10px;
}

.scene-tooltip {
  top: 0;
  color: lavender;
  font-size: 15px;
}

.scene-nav-info, .scene-tooltip {
  position: absolute;
  font-family: sans-serif;
  pointer-events: none;
  user-select: none;
}

.scene-container canvas:focus {
  outline: none;
}`;Rae(Nae);function PS(i,e){(e==null||e>i.length)&&(e=i.length);for(var t=0,n=Array(e);t<e;t++)n[t]=i[t];return n}function Pae(i){if(Array.isArray(i))return i}function Dae(i){if(Array.isArray(i))return PS(i)}function Lae(i,e,t){return(e=zae(e))in i?Object.defineProperty(i,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):i[e]=t,i}function Iae(i){if(typeof Symbol<"u"&&i[Symbol.iterator]!=null||i["@@iterator"]!=null)return Array.from(i)}function Fae(i,e){var t=i==null?null:typeof Symbol<"u"&&i[Symbol.iterator]||i["@@iterator"];if(t!=null){var n,s,r,o,a=[],c=!0,l=!1;try{if(r=(t=t.call(i)).next,e!==0)for(;!(c=(n=r.call(t)).done)&&(a.push(n.value),a.length!==e);c=!0);}catch(u){l=!0,s=u}finally{try{if(!c&&t.return!=null&&(o=t.return(),Object(o)!==o))return}finally{if(l)throw s}}return a}}function Uae(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function Oae(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function Bae(i,e){return Pae(i)||Fae(i,e)||FL(i,e)||Uae()}function _d(i){return Dae(i)||Iae(i)||FL(i)||Oae()}function kae(i,e){if(typeof i!="object"||!i)return i;var t=i[Symbol.toPrimitive];if(t!==void 0){var n=t.call(i,e||"default");if(typeof n!="object")return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return(e==="string"?String:Number)(i)}function zae(i){var e=kae(i,"string");return typeof e=="symbol"?e:e+""}function FL(i,e){if(i){if(typeof i=="string")return PS(i,e);var t={}.toString.call(i).slice(8,-1);return t==="Object"&&i.constructor&&(t=i.constructor.name),t==="Map"||t==="Set"?Array.from(i):t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?PS(i,e):void 0}}var fn=window.THREE?window.THREE:{WebGLRenderer:S9,Scene:b9,PerspectiveCamera:Cs,Raycaster:cP,SRGBColorSpace:ps,TextureLoader:A9,Vector2:lt,Vector3:he,Box3:Nh,Color:Xt,Mesh:rr,SphereGeometry:M9,MeshBasicMaterial:Cb,BackSide:Fi,EventDispatcher:Za,MOUSE:ei,Quaternion:fr,Spherical:Ny,Clock:aP},UL=Wb({props:{width:{default:window.innerWidth,onChange:function(e,t,n){isNaN(e)&&(t.width=n)}},height:{default:window.innerHeight,onChange:function(e,t,n){isNaN(e)&&(t.height=n)}},backgroundColor:{default:"#000011"},backgroundImageUrl:{},onBackgroundImageLoaded:{},showNavInfo:{default:!0},skyRadius:{default:5e4},objects:{default:[]},lights:{default:[]},enablePointerInteraction:{default:!0,onChange:function(e,t){t.hoverObj=null,t.toolTipElem&&(t.toolTipElem.innerHTML="")},triggerUpdate:!1},lineHoverPrecision:{default:1,triggerUpdate:!1},hoverOrderComparator:{default:function(){return-1},triggerUpdate:!1},hoverFilter:{default:function(){return!0},triggerUpdate:!1},tooltipContent:{triggerUpdate:!1},hoverDuringDrag:{default:!1,triggerUpdate:!1},clickAfterDrag:{default:!1,triggerUpdate:!1},onHover:{default:function(){},triggerUpdate:!1},onClick:{default:function(){},triggerUpdate:!1},onRightClick:{triggerUpdate:!1}},methods:{tick:function(e){if(e.initialised){if(e.controls.update&&e.controls.update(Math.min(1,e.clock.getDelta())),e.postProcessingComposer?e.postProcessingComposer.render():e.renderer.render(e.scene,e.camera),e.extraRenderers.forEach(function(r){return r.render(e.scene,e.camera)}),e.enablePointerInteraction){var t=null;if(e.hoverDuringDrag||!e.isPointerDragging){var n=this.intersectingObjects(e.pointerPos.x,e.pointerPos.y).filter(function(r){return e.hoverFilter(r.object)}).sort(function(r,o){return e.hoverOrderComparator(r.object,o.object)}),s=n.length?n[0]:null;t=s?s.object:null,e.intersectionPoint=s?s.point:null}t!==e.hoverObj&&(e.onHover(t,e.hoverObj),e.toolTipElem.innerHTML=t&&Vt(e.tooltipContent)(t)||"",e.hoverObj=t)}e.tweenGroup.update()}return this},getPointerPos:function(e){var t=e.pointerPos,n=t.x,s=t.y;return{x:n,y:s}},cameraPosition:function(e,t,n,s){var r=e.camera;if(t&&e.initialised){var o=t,a=n||{x:0,y:0,z:0};if(!s)u(o),h(a);else{var c=Object.assign({},r.position),l=d();e.tweenGroup.add(new vC(c).to(o,s).easing(Wc.Quadratic.Out).onUpdate(u).start()),e.tweenGroup.add(new vC(l).to(a,s/3).easing(Wc.Quadratic.Out).onUpdate(h).start())}return this}return Object.assign({},r.position,{lookAt:d()});function u(f){var m=f.x,_=f.y,g=f.z;m!==void 0&&(r.position.x=m),_!==void 0&&(r.position.y=_),g!==void 0&&(r.position.z=g)}function h(f){var m=new fn.Vector3(f.x,f.y,f.z);e.controls.target?e.controls.target=m:r.lookAt(m)}function d(){return Object.assign(new fn.Vector3(0,0,-1e3).applyQuaternion(r.quaternion).add(r.position))}},zoomToFit:function(e){for(var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0,n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:10,s=arguments.length,r=new Array(s>3?s-3:0),o=3;o<s;o++)r[o-3]=arguments[o];return this.fitToBbox(this.getBbox.apply(this,r),t,n)},fitToBbox:function(e,t){var n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:0,s=arguments.length>3&&arguments[3]!==void 0?arguments[3]:10,r=e.camera;if(t){var o=new fn.Vector3(0,0,0),a=Math.max.apply(Math,_d(Object.entries(t).map(function(f){var m=Bae(f,2),_=m[0],g=m[1];return Math.max.apply(Math,_d(g.map(function(p){return Math.abs(o[_]-p)})))})))*2,c=(1-s*2/e.height)*r.fov,l=a/Math.atan(c*Math.PI/180),u=l/r.aspect,h=Math.max(l,u);if(h>0){var d=o.clone().sub(r.position).normalize().multiplyScalar(-h);this.cameraPosition(d,o,n)}}return this},getBbox:function(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:function(){return!0},n=new fn.Box3(new fn.Vector3(0,0,0),new fn.Vector3(0,0,0)),s=e.objects.filter(t);return s.length?(s.forEach(function(r){return n.expandByObject(r)}),Object.assign.apply(Object,_d(["x","y","z"].map(function(r){return Lae({},r,[n.min[r],n.max[r]])})))):null},getScreenCoords:function(e,t,n,s){var r=new fn.Vector3(t,n,s);return r.project(this.camera()),{x:(r.x+1)*e.width/2,y:-(r.y-1)*e.height/2}},getSceneCoords:function(e,t,n){var s=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,r=new fn.Vector2(t/e.width*2-1,-(n/e.height)*2+1),o=new fn.Raycaster;return o.setFromCamera(r,e.camera),Object.assign({},o.ray.at(s,new fn.Vector3))},intersectingObjects:function(e,t,n){var s=new fn.Vector2(t/e.width*2-1,-(n/e.height)*2+1),r=new fn.Raycaster;return r.params.Line.threshold=e.lineHoverPrecision,r.setFromCamera(s,e.camera),r.intersectObjects(e.objects,!0)},renderer:function(e){return e.renderer},scene:function(e){return e.scene},camera:function(e){return e.camera},postProcessingComposer:function(e){return e.postProcessingComposer},controls:function(e){return e.controls},tbControls:function(e){return e.controls}},stateInit:function(){return{scene:new fn.Scene,camera:new fn.PerspectiveCamera,clock:new fn.Clock,tweenGroup:new IL}},init:function(e,t){var n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},s=n.controlType,r=s===void 0?"trackball":s,o=n.useWebGPU,a=o===void 0?!1:o,c=n.rendererConfig,l=c===void 0?{}:c,u=n.extraRenderers,h=u===void 0?[]:u,d=n.waitForLoadComplete,f=d===void 0?!0:d;e.innerHTML="",e.appendChild(t.container=document.createElement("div")),t.container.className="scene-container",t.container.style.position="relative",t.container.appendChild(t.navInfo=document.createElement("div")),t.navInfo.className="scene-nav-info",t.navInfo.textContent={orbit:"Left-click: rotate, Mouse-wheel/middle-click: zoom, Right-click: pan",trackball:"Left-click: rotate, Mouse-wheel/middle-click: zoom, Right-click: pan",fly:"WASD: move, R|F: up | down, Q|E: roll, up|down: pitch, left|right: yaw"}[r]||"",t.navInfo.style.display=t.showNavInfo?null:"none",t.toolTipElem=document.createElement("div"),t.toolTipElem.classList.add("scene-tooltip"),t.container.appendChild(t.toolTipElem),t.pointerPos=new fn.Vector2,t.pointerPos.x=-2,t.pointerPos.y=-2,["pointermove","pointerdown"].forEach(function(m){return t.container.addEventListener(m,function(_){if(m==="pointerdown"&&(t.isPointerPressed=!0),!t.isPointerDragging&&_.type==="pointermove"&&(_.pressure>0||t.isPointerPressed)&&(_.pointerType!=="touch"||_.movementX===void 0||[_.movementX,_.movementY].some(function(y){return Math.abs(y)>1}))&&(t.isPointerDragging=!0),t.enablePointerInteraction){var g=p(t.container);t.pointerPos.x=_.pageX-g.left,t.pointerPos.y=_.pageY-g.top,t.toolTipElem.style.top="".concat(t.pointerPos.y,"px"),t.toolTipElem.style.left="".concat(t.pointerPos.x,"px"),t.toolTipElem.style.transform="translate(-".concat(t.pointerPos.x/t.width*100,"%, ").concat(t.height-t.pointerPos.y<100?"calc(-100% - 8px)":"21px",")")}function p(y){var x=y.getBoundingClientRect(),v=window.pageXOffset||document.documentElement.scrollLeft,S=window.pageYOffset||document.documentElement.scrollTop;return{top:x.top+S,left:x.left+v}}},{passive:!0})}),t.container.addEventListener("pointerup",function(m){t.isPointerPressed=!1,!(t.isPointerDragging&&(t.isPointerDragging=!1,!t.clickAfterDrag))&&requestAnimationFrame(function(){m.button===0&&t.onClick(t.hoverObj||null,m,t.intersectionPoint),m.button===2&&t.onRightClick&&t.onRightClick(t.hoverObj||null,m,t.intersectionPoint)})},{passive:!0,capture:!0}),t.container.addEventListener("contextmenu",function(m){t.onRightClick&&m.preventDefault()}),t.renderer=new(a?Yre:fn.WebGLRenderer)(Object.assign({antialias:!0,alpha:!0},l)),t.renderer.setPixelRatio(Math.min(2,window.devicePixelRatio)),t.container.appendChild(t.renderer.domElement),t.extraRenderers=h,t.extraRenderers.forEach(function(m){m.domElement.style.position="absolute",m.domElement.style.top="0px",m.domElement.style.pointerEvents="none",t.container.appendChild(m.domElement)}),t.postProcessingComposer=new Voe(t.renderer),t.postProcessingComposer.addPass(new Hoe(t.scene,t.camera)),t.controls=new{trackball:Kre,orbit:foe,fly:Aoe}[r](t.camera,t.renderer.domElement),r==="fly"&&(t.controls.movementSpeed=300,t.controls.rollSpeed=Math.PI/6,t.controls.dragToLook=!0),(r==="trackball"||r==="orbit")&&(t.controls.minDistance=.1,t.controls.maxDistance=t.skyRadius,t.controls.addEventListener("start",function(){t.controlsEngaged=!0}),t.controls.addEventListener("change",function(){t.controlsEngaged&&(t.controlsDragging=!0)}),t.controls.addEventListener("end",function(){t.controlsEngaged=!1,t.controlsDragging=!1})),[t.renderer,t.postProcessingComposer].concat(_d(t.extraRenderers)).forEach(function(m){return m.setSize(t.width,t.height)}),t.camera.aspect=t.width/t.height,t.camera.updateProjectionMatrix(),t.camera.position.z=1e3,t.scene.add(t.skysphere=new fn.Mesh),t.skysphere.visible=!1,t.loadComplete=t.scene.visible=!f,window.scene=t.scene},update:function(e,t){if(e.width&&e.height&&(t.hasOwnProperty("width")||t.hasOwnProperty("height"))&&(e.container.style.width="".concat(e.width,"px"),e.container.style.height="".concat(e.height,"px"),[e.renderer,e.postProcessingComposer].concat(_d(e.extraRenderers)).forEach(function(r){return r.setSize(e.width,e.height)}),e.camera.aspect=e.width/e.height,e.camera.updateProjectionMatrix()),t.hasOwnProperty("skyRadius")&&e.skyRadius&&(e.controls.hasOwnProperty("maxDistance")&&t.skyRadius&&(e.controls.maxDistance=Math.min(e.controls.maxDistance,e.skyRadius)),e.camera.far=e.skyRadius*2.5,e.camera.updateProjectionMatrix(),e.skysphere.geometry=new fn.SphereGeometry(e.skyRadius)),t.hasOwnProperty("backgroundColor")){var n=cl(e.backgroundColor).alpha;n===void 0&&(n=1),e.renderer.setClearColor(new fn.Color(yae(1,e.backgroundColor)),n)}t.hasOwnProperty("backgroundImageUrl")&&(e.backgroundImageUrl?new fn.TextureLoader().load(e.backgroundImageUrl,function(r){r.colorSpace=fn.SRGBColorSpace,e.skysphere.material=new fn.MeshBasicMaterial({map:r,side:fn.BackSide}),e.skysphere.visible=!0,e.onBackgroundImageLoaded&&setTimeout(e.onBackgroundImageLoaded),!e.loadComplete&&s()}):(e.skysphere.visible=!1,e.skysphere.material.map=null,!e.loadComplete&&s())),t.hasOwnProperty("showNavInfo")&&(e.navInfo.style.display=e.showNavInfo?null:"none"),t.hasOwnProperty("lights")&&((t.lights||[]).forEach(function(r){return e.scene.remove(r)}),e.lights.forEach(function(r){return e.scene.add(r)})),t.hasOwnProperty("objects")&&((t.objects||[]).forEach(function(r){return e.scene.remove(r)}),e.objects.forEach(function(r){return e.scene.add(r)}));function s(){e.loadComplete=e.scene.visible=!0}}});function Gae(i,e){e===void 0&&(e={});var t=e.insertAt;if(!(typeof document>"u")){var n=document.head||document.getElementsByTagName("head")[0],s=document.createElement("style");s.type="text/css",t==="top"&&n.firstChild?n.insertBefore(s,n.firstChild):n.appendChild(s),s.styleSheet?s.styleSheet.cssText=i:s.appendChild(document.createTextNode(i))}}var Vae=`.graph-info-msg {
  top: 50%;
  width: 100%;
  text-align: center;
  color: lavender;
  opacity: 0.7;
  font-size: 22px;
  position: absolute;
  font-family: Sans-serif;
}

.scene-container .clickable {
  cursor: pointer;
}

.scene-container .grabbable {
  cursor: move;
  cursor: grab;
  cursor: -moz-grab;
  cursor: -webkit-grab;
}

.scene-container .grabbable:active {
  cursor: grabbing;
  cursor: -moz-grabbing;
  cursor: -webkit-grabbing;
}`;Gae(Vae);function DS(i,e){(e==null||e>i.length)&&(e=i.length);for(var t=0,n=Array(e);t<e;t++)n[t]=i[t];return n}function Hae(i){if(Array.isArray(i))return DS(i)}function qf(i,e,t){return(e=Xae(e))in i?Object.defineProperty(i,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):i[e]=t,i}function Wae(i){if(typeof Symbol<"u"&&i[Symbol.iterator]!=null||i["@@iterator"]!=null)return Array.from(i)}function $ae(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function xC(i,e){var t=Object.keys(i);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(i);e&&(n=n.filter(function(s){return Object.getOwnPropertyDescriptor(i,s).enumerable})),t.push.apply(t,n)}return t}function Nm(i){for(var e=1;e<arguments.length;e++){var t=arguments[e]!=null?arguments[e]:{};e%2?xC(Object(t),!0).forEach(function(n){qf(i,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(i,Object.getOwnPropertyDescriptors(t)):xC(Object(t)).forEach(function(n){Object.defineProperty(i,n,Object.getOwnPropertyDescriptor(t,n))})}return i}function z_(i){return Hae(i)||Wae(i)||jae(i)||$ae()}function qae(i,e){if(typeof i!="object"||!i)return i;var t=i[Symbol.toPrimitive];if(t!==void 0){var n=t.call(i,e||"default");if(typeof n!="object")return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return(e==="string"?String:Number)(i)}function Xae(i){var e=qae(i,"string");return typeof e=="symbol"?e:e+""}function jae(i,e){if(i){if(typeof i=="string")return DS(i,e);var t={}.toString.call(i).slice(8,-1);return t==="Object"&&i.constructor&&(t=i.constructor.name),t==="Map"||t==="Set"?Array.from(i):t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?DS(i,e):void 0}}function OL(i,e){var t=new e;return t._destructor&&t._destructor(),{linkProp:function(s){return{default:t[s](),onChange:function(o,a){a[i][s](o)},triggerUpdate:!1}},linkMethod:function(s){return function(r){for(var o=r[i],a=arguments.length,c=new Array(a>1?a-1:0),l=1;l<a;l++)c[l-1]=arguments[l];var u=o[s].apply(o,c);return u===o?this:u}}}}var mx=window.THREE?window.THREE:{AmbientLight:P9,DirectionalLight:N9,Vector3:he,REVISION:f_},Yae=170,BL=OL("forceGraph",t2),Zae=Object.assign.apply(Object,z_(["jsonUrl","graphData","numDimensions","dagMode","dagLevelDistance","dagNodeFilter","onDagError","nodeRelSize","nodeId","nodeVal","nodeResolution","nodeColor","nodeAutoColorBy","nodeOpacity","nodeVisibility","nodeThreeObject","nodeThreeObjectExtend","linkSource","linkTarget","linkVisibility","linkColor","linkAutoColorBy","linkOpacity","linkWidth","linkResolution","linkCurvature","linkCurveRotation","linkMaterial","linkThreeObject","linkThreeObjectExtend","linkPositionUpdate","linkDirectionalArrowLength","linkDirectionalArrowColor","linkDirectionalArrowRelPos","linkDirectionalArrowResolution","linkDirectionalParticles","linkDirectionalParticleSpeed","linkDirectionalParticleWidth","linkDirectionalParticleColor","linkDirectionalParticleResolution","forceEngine","d3AlphaDecay","d3VelocityDecay","d3AlphaMin","ngraphPhysics","warmupTicks","cooldownTicks","cooldownTime","onEngineTick","onEngineStop"].map(function(i){return qf({},i,BL.linkProp(i))}))),Kae=Object.assign.apply(Object,z_(["refresh","getGraphBbox","d3Force","d3ReheatSimulation","emitParticle"].map(function(i){return qf({},i,BL.linkMethod(i))}))),ng=OL("renderObjs",UL),Qae=Object.assign.apply(Object,z_(["width","height","backgroundColor","showNavInfo","enablePointerInteraction"].map(function(i){return qf({},i,ng.linkProp(i))}))),Jae=Object.assign.apply(Object,z_(["lights","cameraPosition","postProcessingComposer"].map(function(i){return qf({},i,ng.linkMethod(i))})).concat([{graph2ScreenCoords:ng.linkMethod("getScreenCoords"),screen2GraphCoords:ng.linkMethod("getSceneCoords")}])),ece=Wb({props:Nm(Nm({nodeLabel:{default:"name",triggerUpdate:!1},linkLabel:{default:"name",triggerUpdate:!1},linkHoverPrecision:{default:1,onChange:function(e,t){return t.renderObjs.lineHoverPrecision(e)},triggerUpdate:!1},enableNavigationControls:{default:!0,onChange:function(e,t){var n=t.renderObjs.controls();n&&(n.enabled=e,e&&n.domElement&&n.domElement.dispatchEvent(new PointerEvent("pointerup")))},triggerUpdate:!1},enableNodeDrag:{default:!0,triggerUpdate:!1},onNodeDrag:{default:function(){},triggerUpdate:!1},onNodeDragEnd:{default:function(){},triggerUpdate:!1},onNodeClick:{triggerUpdate:!1},onNodeRightClick:{triggerUpdate:!1},onNodeHover:{triggerUpdate:!1},onLinkClick:{triggerUpdate:!1},onLinkRightClick:{triggerUpdate:!1},onLinkHover:{triggerUpdate:!1},onBackgroundClick:{triggerUpdate:!1},onBackgroundRightClick:{triggerUpdate:!1}},Zae),Qae),methods:Nm(Nm({zoomToFit:function(e,t,n){for(var s,r=arguments.length,o=new Array(r>3?r-3:0),a=3;a<r;a++)o[a-3]=arguments[a];return e.renderObjs.fitToBbox((s=e.forceGraph).getGraphBbox.apply(s,o),t,n),this},pauseAnimation:function(e){return e.animationFrameRequestId!==null&&(cancelAnimationFrame(e.animationFrameRequestId),e.animationFrameRequestId=null),this},resumeAnimation:function(e){return e.animationFrameRequestId===null&&this._animationCycle(),this},_animationCycle:function(e){e.enablePointerInteraction&&(this.renderer().domElement.style.cursor=null),e.forceGraph.tickFrame(),e.renderObjs.tick(),e.animationFrameRequestId=requestAnimationFrame(this._animationCycle)},scene:function(e){return e.renderObjs.scene()},camera:function(e){return e.renderObjs.camera()},renderer:function(e){return e.renderObjs.renderer()},controls:function(e){return e.renderObjs.controls()},tbControls:function(e){return e.renderObjs.tbControls()},_destructor:function(){this.pauseAnimation(),this.graphData({nodes:[],links:[]})}},Kae),Jae),stateInit:function(e){var t=e.controlType,n=e.rendererConfig,s=e.extraRenderers,r=new t2;return{forceGraph:r,renderObjs:UL({controlType:t,rendererConfig:n,extraRenderers:s}).objects([r]).lights([new mx.AmbientLight(13421772,Math.PI),new mx.DirectionalLight(16777215,.6*Math.PI)])}},init:function(e,t){e.innerHTML="",e.appendChild(t.container=document.createElement("div")),t.container.style.position="relative";var n=document.createElement("div");t.container.appendChild(n),t.renderObjs(n);var s=t.renderObjs.camera(),r=t.renderObjs.renderer(),o=t.renderObjs.controls();o.enabled=!!t.enableNavigationControls,t.lastSetCameraZ=s.position.z;var a;t.container.appendChild(a=document.createElement("div")),a.className="graph-info-msg",a.textContent="",t.forceGraph.onLoading(function(){a.textContent="Loading..."}).onFinishLoading(function(){a.textContent=""}).onUpdate(function(){t.graphData=t.forceGraph.graphData(),s.position.x===0&&s.position.y===0&&s.position.z===t.lastSetCameraZ&&t.graphData.nodes.length&&(s.lookAt(t.forceGraph.position),t.lastSetCameraZ=s.position.z=Math.cbrt(t.graphData.nodes.length)*Yae)}).onFinishUpdate(function(){if(t._dragControls){var c=t.graphData.nodes.find(function(u){return u.__initialFixedPos&&!u.__disposeControlsAfterDrag});c?c.__disposeControlsAfterDrag=!0:t._dragControls.dispose(),t._dragControls=void 0}if(t.enableNodeDrag&&t.enablePointerInteraction&&t.forceEngine==="d3"){var l=t._dragControls=new D9(t.graphData.nodes.map(function(u){return u.__threeObj}).filter(function(u){return u}),s,r.domElement);l.addEventListener("dragstart",function(u){o.enabled=!1,u.object.__initialPos=u.object.position.clone(),u.object.__prevPos=u.object.position.clone();var h=po(u.object).__data;!h.__initialFixedPos&&(h.__initialFixedPos={fx:h.fx,fy:h.fy,fz:h.fz}),!h.__initialPos&&(h.__initialPos={x:h.x,y:h.y,z:h.z}),["x","y","z"].forEach(function(d){return h["f".concat(d)]=h[d]}),r.domElement.classList.add("grabbable")}),l.addEventListener("drag",function(u){var h=po(u.object);if(!u.object.hasOwnProperty("__graphObjType")){var d=u.object.__initialPos,f=u.object.__prevPos,m=u.object.position;h.position.add(m.clone().sub(f)),f.copy(m),m.copy(d)}var _=h.__data,g=h.position,p={x:g.x-_.x,y:g.y-_.y,z:g.z-_.z};["x","y","z"].forEach(function(y){return _["f".concat(y)]=_[y]=g[y]}),t.forceGraph.d3AlphaTarget(.3).resetCountdown(),_.__dragged=!0,t.onNodeDrag(_,p)}),l.addEventListener("dragend",function(u){delete u.object.__initialPos,delete u.object.__prevPos;var h=po(u.object).__data;h.__disposeControlsAfterDrag&&(l.dispose(),delete h.__disposeControlsAfterDrag);var d=h.__initialFixedPos,f=h.__initialPos,m={x:f.x-h.x,y:f.y-h.y,z:f.z-h.z};d&&(["x","y","z"].forEach(function(_){var g="f".concat(_);d[g]===void 0&&delete h[g]}),delete h.__initialFixedPos,delete h.__initialPos,h.__dragged&&(delete h.__dragged,t.onNodeDragEnd(h,m))),t.forceGraph.d3AlphaTarget(0).resetCountdown(),t.enableNavigationControls&&(o.enabled=!0,o.domElement&&o.domElement.ownerDocument&&o.domElement.ownerDocument.dispatchEvent(new PointerEvent("pointerup",{pointerType:"touch"}))),r.domElement.classList.remove("grabbable")})}}),mx.REVISION<155&&(t.renderObjs.renderer().useLegacyLights=!1),t.renderObjs.hoverOrderComparator(function(c,l){var u=po(c);if(!u)return 1;var h=po(l);if(!h)return-1;var d=function(m){return m.__graphObjType==="node"};return d(h)-d(u)}).tooltipContent(function(c){var l=po(c);return l&&Vt(t["".concat(l.__graphObjType,"Label")])(l.__data)||""}).hoverDuringDrag(!1).onHover(function(c){var l=po(c);if(l!==t.hoverObj){var u=t.hoverObj?t.hoverObj.__graphObjType:null,h=t.hoverObj?t.hoverObj.__data:null,d=l?l.__graphObjType:null,f=l?l.__data:null;if(u&&u!==d){var m=t["on".concat(u==="node"?"Node":"Link","Hover")];m&&m(null,h)}if(d){var _=t["on".concat(d==="node"?"Node":"Link","Hover")];_&&_(f,u===d?h:null)}r.domElement.classList[l&&t["on".concat(d==="node"?"Node":"Link","Click")]||!l&&t.onBackgroundClick?"add":"remove"]("clickable"),t.hoverObj=l}}).clickAfterDrag(!1).onClick(function(c,l){var u=po(c);if(u){var h=t["on".concat(u.__graphObjType==="node"?"Node":"Link","Click")];h&&h(u.__data,l)}else t.onBackgroundClick&&t.onBackgroundClick(l)}).onRightClick(function(c,l){var u=po(c);if(u){var h=t["on".concat(u.__graphObjType==="node"?"Node":"Link","RightClick")];h&&h(u.__data,l)}else t.onBackgroundRightClick&&t.onBackgroundRightClick(l)}),this._animationCycle()}});function po(i){for(var e=i;e&&!e.hasOwnProperty("__graphObjType");)e=e.parent;return e}const tce=new _b({urls:{A2:"A2.ogg",B2:"B2.ogg","C#3":"Cs3.ogg",E3:"E3.ogg","F#3":"Fs3.ogg",A3:"A3.ogg",B3:"B3.ogg","C#4":"Cs4.ogg",E4:"E4.ogg","F#4":"Fs4.ogg"},attack:.5,release:1,baseUrl:"./cello/"}).toDestination(),yC=["F#1","A2","B2","C#3","E3","F#3","A3","C#4","E4"];let SC=["sounds of a heartbeat","too many letters","too many characters","too many memories","tug at this red string","see where it leads","a web is a trap","the web is a trap","so then why is this so lovely?","dusty lights","old journals","old flames","magpie bridge","heavenly river","two hearts united","jade rabbit","elixir for you","flashlight under the covers","do I remember","do you remember","backyard nights","rabbit ears","rabbit years","who didn't cry","who sheds tears","a story about a girl","born of plum flowers","resentment also blooms","flowers bloom","a muse is temporary","this isn't temporary","goodbye"],LS=150,Pa={nodes:[...Array(LS).keys()].map(i=>({id:i,x:$u(-450,450),y:$u(-450,450),z:$u(-450,450)})),links:[]};for(let i=LS;i<LS+50;i++)Pa.nodes.push({id:i,x:$u(-1e3,1e3),y:$u(-1e3,1e3),z:$u(-1e3,1e3)});let kM=!1,Kg=450,mh=ece()(document.getElementById("3d-graph")).enableNodeDrag(!1).enableNavigationControls(!0).showNavInfo(!1).cameraPosition({z:Kg}).graphData(Pa).nodeThreeObject(i=>{let e=new uR(3),t=new Mf({color:"#fffee6"}),n=new Rs(e,t);return n.visible=!1,n.position.set(i.x,i.y,i.z),n}).d3Force("charge",null).d3Force("center",null).d3Force("link",null).linkThreeObject(i=>{let e=new _r,t=Pa.nodes[i.source],n=Pa.nodes[i.target],s=new re(t.x,t.y,t.z),r=new re(n.x,n.y,n.z),o=new Us().setFromPoints([s,r]),a=new BS({color:"#9cc0ff",transparent:!0,opacity:.8}),c=new aR(o,a);e.add(c);let l=kL(i.text,"white"),u=new re().addVectors(s,r).multiplyScalar(.5);l.position.copy(u);let h=new re().subVectors(r,s).normalize(),d=new re(0,1,0),f=new _h().setFromUnitVectors(d,h);return l.setRotationFromQuaternion(f),e.add(l),e}).linkPositionUpdate((i,{start:e,end:t})=>{let n=new re().addVectors(new re(e.x,e.y,e.z),new re(t.x,t.y,t.z)).multiplyScalar(.5);i.position.copy(n)});mh.controls().maxDistance=700;function $u(i,e){return Math.random()*(e-i+1)+i}function kL(i,e){let t=document.createElement("canvas"),n=t.getContext("2d"),s=420,r=900;t.width=s,t.height=r;let o=35,a="Cormorant Infant",c=s-20,l=o*1.2;n.font=`${o}px ${a}`,n.fillStyle=e||"white",n.textAlign="center";let h=dk.wrap(i,{width:c/(o/2),break:!0}).split(`
`);for(let _=0;_<h.length;_++)n.fillText(h[_],s/2,r/2-(h.length/2-_)*l);let d=new VB(t),f=new Mf({map:d,transparent:!0,side:Ar,depthTest:!1}),m=new JC(150,350);return new Rs(m,f)}let gx=0,bC=.05,Qg=null;function nce(){if(!kM){let i=mh.cameraPosition(),e={x:Kg*Math.sin(gx),z:Kg*Math.cos(gx)},t={x:i.x+(e.x-i.x)*bC,z:i.z+(e.z-i.z)*bC};mh.cameraPosition(t),gx+=Math.PI/2e3}}function zL(){Qg||(Qg=setInterval(nce,50))}function ice(){clearInterval(Qg),Qg=null}function zM(){kM=!0,ice(),r5.state!=="running"&&OH()}function GM(){setTimeout(()=>{kM=!1,GL(),zL()},50)}function GL(){let i=mh.cameraPosition();Kg=Math.sqrt(i.x*i.x+i.z*i.z)}document.getElementById("3d-graph").addEventListener("wheel",GL);document.getElementById("3d-graph").addEventListener("mousedown",zM);document.getElementById("3d-graph").addEventListener("touchmove",zM);document.getElementById("3d-graph").addEventListener("touchstart",zM);document.getElementById("3d-graph").addEventListener("mouseup",GM);document.getElementById("3d-graph").addEventListener("touchend",GM);document.getElementById("3d-graph").addEventListener("mouseout",GM);setInterval(sce,1500);function sce(){let i=Pa.nodes.map(n=>n.id),e=i[Math.floor(Math.random()*i.length)],t=i[Math.floor(Math.random()*i.length)];if(e!==t&&!Pa.links.some(n=>n.source===e&&n.target===t||n.source===t&&n.target===e)){let n={source:e,target:t,text:SC[Math.floor(Math.random()*SC.length)]};Pa.links.push(n),mh.graphData(Pa),tce.triggerAttack(yC[Math.floor(Math.random()*yC.length)])}}zL();let VM=kL("a whispered story...","white");VM.position.set(0,0,0);mh.scene().add(VM);let rce=new GB,oce=new As(75,window.innerWidth/window.innerHeight,.1,1e3),HM=new oR;document.body.appendChild(HM.domElement);HM.setSize(window.innerWidth,window.innerHeight);let WM=new uk(HM);WM.addPass(new hk(rce,oce));let G_=new Zu;G_.strength=1.5;G_.radius=1;G_.threshold=.8;WM.addPass(G_);function VL(){requestAnimationFrame(VL),WM.render()}VL();console.log("Text Sprite created:",VM);
